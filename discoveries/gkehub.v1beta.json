{
  "schemas": {
    "PolicyControllerPolicyContentSpec": {
      "properties": {
        "templateLibrary": {
          "$ref": "PolicyControllerTemplateLibraryConfig",
          "description": "Configures the installation of the Template Library."
        },
        "bundles": {
          "type": "object",
          "description": "map of bundle name to BundleInstallSpec. The bundle name maps to the `bundleName` key in the `policycontroller.gke.io/constraintData` annotation on a constraint.",
          "additionalProperties": {
            "$ref": "PolicyControllerBundleInstallSpec"
          }
        }
      },
      "description": "PolicyContentSpec defines the user's desired content configuration on the cluster.",
      "type": "object",
      "id": "PolicyControllerPolicyContentSpec"
    },
    "RBACRoleBinding": {
      "id": "RBACRoleBinding",
      "description": "RBACRoleBinding represents a rbacrolebinding across the Fleet",
      "type": "object",
      "properties": {
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. When the rbacrolebinding was last updated."
        },
        "role": {
          "description": "Required. Role to bind to the principal",
          "$ref": "Role"
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. Google-generated UUID for this resource. This is unique across all rbacrolebinding resources. If a rbacrolebinding resource is deleted and another resource with the same name is created, it gets a different uid.",
          "type": "string"
        },
        "state": {
          "description": "Output only. State of the rbacrolebinding resource.",
          "readOnly": true,
          "$ref": "RBACRoleBindingLifecycleState"
        },
        "deleteTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. When the rbacrolebinding was deleted.",
          "format": "google-datetime"
        },
        "user": {
          "type": "string",
          "description": "user is the name of the user as seen by the kubernetes cluster, example \"alice\" or \"alice@domain.tld\""
        },
        "group": {
          "description": "group is the group, as seen by the kubernetes cluster.",
          "type": "string"
        },
        "name": {
          "description": "The resource name for the rbacrolebinding `projects/{project}/locations/{location}/namespaces/{namespace}/rbacrolebindings/{rbacrolebinding}` or `projects/{project}/locations/{location}/memberships/{membership}/rbacrolebindings/{rbacrolebinding}`",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. When the rbacrolebinding was created.",
          "type": "string"
        }
      }
    },
    "TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsRequest"
    },
    "ListOperationsResponse": {
      "type": "object",
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse"
    },
    "PolicyControllerToleration": {
      "description": "Toleration of a node taint.",
      "properties": {
        "operator": {
          "description": "Matches a taint operator.",
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "Matches a taint value."
        },
        "effect": {
          "description": "Matches a taint effect.",
          "type": "string"
        },
        "key": {
          "type": "string",
          "description": "Matches a taint key (not necessarily unique)."
        }
      },
      "id": "PolicyControllerToleration",
      "type": "object"
    },
    "Feature": {
      "properties": {
        "spec": {
          "description": "Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be unused.",
          "$ref": "CommonFeatureSpec"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels for this Feature."
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. When the Feature resource was last updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "scopeSpecs": {
          "description": "Optional. Scope-specific configuration for this Feature. If this Feature does not support any per-Scope configuration, this field may be unused. The keys indicate which Scope the configuration is for, in the form: `projects/{p}/locations/global/scopes/{s}` Where {p} is the project, {s} is a valid Scope in this project. {p} WILL match the Feature's project. {p} will always be returned as the project number, but the project ID is also accepted during input. If the same Scope is specified in the map twice (using the project ID form, and the project number form), exactly ONE of the entries will be saved, with no guarantees as to which. For this reason, it is recommended the same format be used for all entries when mutating a Feature.",
          "additionalProperties": {
            "$ref": "ScopeFeatureSpec"
          },
          "type": "object"
        },
        "membershipSpecs": {
          "additionalProperties": {
            "$ref": "MembershipFeatureSpec"
          },
          "type": "object",
          "description": "Optional. Membership-specific configuration for this Feature. If this Feature does not support any per-Membership configuration, this field may be unused. The keys indicate which Membership the configuration is for, in the form: `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the project, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} WILL match the Feature's project. {p} will always be returned as the project number, but the project ID is also accepted during input. If the same Membership is specified in the map twice (using the project ID form, and the project number form), exactly ONE of the entries will be saved, with no guarantees as to which. For this reason, it is recommended the same format be used for all entries when mutating a Feature."
        },
        "scopeStates": {
          "type": "object",
          "readOnly": true,
          "description": "Output only. Scope-specific Feature status. If this Feature does report any per-Scope status, this field may be unused. The keys indicate which Scope the state is for, in the form: `projects/{p}/locations/global/scopes/{s}` Where {p} is the project, {s} is a valid Scope in this project. {p} WILL match the Feature's project.",
          "additionalProperties": {
            "$ref": "ScopeFeatureState"
          }
        },
        "state": {
          "description": "Output only. The Hub-wide Feature state.",
          "$ref": "CommonFeatureState",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. When the Feature resource was created."
        },
        "fleetDefaultMemberConfig": {
          "$ref": "CommonFleetDefaultMemberConfigSpec",
          "description": "Optional. Feature configuration applicable to all memberships of the fleet."
        },
        "deleteTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. When the Feature resource was deleted."
        },
        "resourceState": {
          "$ref": "FeatureResourceState",
          "description": "Output only. State of the Feature resource itself.",
          "readOnly": true
        },
        "membershipStates": {
          "additionalProperties": {
            "$ref": "MembershipFeatureState"
          },
          "readOnly": true,
          "type": "object",
          "description": "Output only. Membership-specific Feature status. If this Feature does report any per-Membership status, this field may be unused. The keys indicate which Membership the state is for, in the form: `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the project number, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} MUST match the Feature's project number."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The full, unique name of this Feature resource in the format `projects/*/locations/*/features/*`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Feature represents the settings and status of any Hub Feature.",
      "id": "Feature"
    },
    "ConfigManagementConfigSyncDeploymentState": {
      "id": "ConfigManagementConfigSyncDeploymentState",
      "properties": {
        "importer": {
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "Deployment state of the importer pod",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        },
        "rootReconciler": {
          "description": "Deployment state of root-reconciler",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "type": "string"
        },
        "admissionWebhook": {
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "Deployment state of admission-webhook",
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "syncer": {
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "Deployment state of the syncer pod",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        },
        "gitSync": {
          "description": "Deployment state of the git-sync pod",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string"
        },
        "monitor": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "Deployment state of the monitor pod"
        },
        "reconcilerManager": {
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "Deployment state of reconciler-manager pod",
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        }
      },
      "description": "The state of ConfigSync's deployment on a cluster",
      "type": "object"
    },
    "FleetObservabilityMembershipSpec": {
      "id": "FleetObservabilityMembershipSpec",
      "description": "**FleetObservability**: The membership-specific input for FleetObservability feature.",
      "type": "object",
      "properties": {}
    },
    "ConfigManagementBinauthzConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether binauthz is enabled in this cluster."
        }
      },
      "description": "Configuration for Binauthz",
      "id": "ConfigManagementBinauthzConfig"
    },
    "MembershipBindingLifecycleState": {
      "description": "MembershipBindingLifecycleState describes the state of a Binding resource.",
      "type": "object",
      "id": "MembershipBindingLifecycleState",
      "properties": {
        "code": {
          "enumDescriptions": [
            "The code is not set.",
            "The membershipbinding is being created.",
            "The membershipbinding active.",
            "The membershipbinding is being deleted.",
            "The membershipbinding is being updated."
          ],
          "type": "string",
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ],
          "description": "Output only. The current state of the MembershipBinding resource.",
          "readOnly": true
        }
      }
    },
    "ConfigManagementGitConfig": {
      "properties": {
        "httpsProxy": {
          "description": "URL for the HTTPS proxy to be used when communicating with the Git repo.",
          "type": "string"
        },
        "secretType": {
          "description": "Type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, gcpserviceaccount or none. The validation of this is case-sensitive. Required.",
          "type": "string"
        },
        "syncRev": {
          "type": "string",
          "description": "Git revision (tag or hash) to check out. Default HEAD."
        },
        "policyDir": {
          "type": "string",
          "description": "The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository."
        },
        "syncRepo": {
          "type": "string",
          "description": "The URL of the Git repository to use as the source of truth."
        },
        "syncWaitSecs": {
          "type": "string",
          "description": "Period in seconds between consecutive syncs. Default: 15.",
          "format": "int64"
        },
        "gcpServiceAccountEmail": {
          "description": "The GCP Service Account Email used for auth when secret_type is gcpServiceAccount.",
          "type": "string"
        },
        "syncBranch": {
          "description": "The branch of the repository to sync from. Default: master.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ConfigManagementGitConfig",
      "description": "Git repo configuration for a single cluster."
    },
    "ConfigManagementPolicyController": {
      "properties": {
        "exemptableNamespaces": {
          "description": "The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auditIntervalSeconds": {
          "description": "Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.",
          "format": "int64",
          "type": "string"
        },
        "mutationEnabled": {
          "type": "boolean",
          "description": "Enable or disable mutation in policy controller. If true, mutation CRDs, webhook and controller deployment will be deployed to the cluster."
        },
        "templateLibraryInstalled": {
          "description": "Installs the default template library along with Policy Controller.",
          "type": "boolean"
        },
        "enabled": {
          "description": "Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect.",
          "type": "boolean"
        },
        "logDeniesEnabled": {
          "type": "boolean",
          "description": "Logs all denies and dry run failures."
        },
        "referentialRulesEnabled": {
          "description": "Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.",
          "type": "boolean"
        },
        "monitoring": {
          "description": "Monitoring specifies the configuration of monitoring.",
          "$ref": "ConfigManagementPolicyControllerMonitoring"
        }
      },
      "id": "ConfigManagementPolicyController",
      "description": "Configuration for Policy Controller",
      "type": "object"
    },
    "ListMembershipBindingsResponse": {
      "description": "List of MembershipBindings.",
      "id": "ListMembershipBindingsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to request the next page of resources from the `ListMembershipBindings` method. The value of an empty string means that there are no more resources to return."
        },
        "membershipBindings": {
          "type": "array",
          "description": "The list of membership_bindings",
          "items": {
            "$ref": "MembershipBinding"
          }
        }
      },
      "type": "object"
    },
    "MultiClusterIngressFeatureSpec": {
      "description": "**Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.",
      "type": "object",
      "id": "MultiClusterIngressFeatureSpec",
      "properties": {
        "billing": {
          "type": "string",
          "description": "Deprecated: This field will be ignored and should not be set. Customer's billing structure.",
          "enumDescriptions": [
            "Unknown",
            "User pays a fee per-endpoint.",
            "User is paying for Anthos as a whole."
          ],
          "enum": [
            "BILLING_UNSPECIFIED",
            "PAY_AS_YOU_GO",
            "ANTHOS_LICENSE"
          ]
        },
        "configMembership": {
          "type": "string",
          "description": "Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`"
        }
      }
    },
    "PolicyControllerPolicyControllerDeploymentConfig": {
      "id": "PolicyControllerPolicyControllerDeploymentConfig",
      "properties": {
        "replicaCount": {
          "format": "int64",
          "type": "string",
          "description": "Pod replica count."
        },
        "containerResources": {
          "$ref": "PolicyControllerResourceRequirements",
          "description": "Container resource requirements."
        },
        "podAntiAffinity": {
          "description": "Pod anti-affinity enablement.",
          "type": "boolean"
        },
        "podTolerations": {
          "description": "Pod tolerations of node taints.",
          "type": "array",
          "items": {
            "$ref": "PolicyControllerToleration"
          }
        }
      },
      "description": "Deployment-specific configuration.",
      "type": "object"
    },
    "NamespaceLifecycleState": {
      "type": "object",
      "id": "NamespaceLifecycleState",
      "properties": {
        "code": {
          "description": "Output only. The current state of the Namespace resource.",
          "enumDescriptions": [
            "The code is not set.",
            "The namespace is being created.",
            "The namespace active.",
            "The namespace is being deleted.",
            "The namespace is being updated."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ]
        }
      },
      "description": "NamespaceLifecycleState describes the state of a Namespace resource."
    },
    "ListNamespacesResponse": {
      "description": "List of fleet namespaces.",
      "type": "object",
      "id": "ListNamespacesResponse",
      "properties": {
        "namespaces": {
          "description": "The list of fleet namespaces",
          "items": {
            "$ref": "Namespace"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to request the next page of resources from the `ListNamespaces` method. The value of an empty string means that there are no more resources to return."
        }
      }
    },
    "ListFleetsResponse": {
      "type": "object",
      "description": "Response message for the `GkeHub.ListFleetsResponse` method.",
      "id": "ListFleetsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. The token is only valid for 1h."
        },
        "fleets": {
          "items": {
            "$ref": "Fleet"
          },
          "description": "The list of matching fleets.",
          "type": "array"
        }
      }
    },
    "ConfigManagementMembershipState": {
      "description": "**Anthos Config Management**: State for a single cluster.",
      "id": "ConfigManagementMembershipState",
      "properties": {
        "clusterName": {
          "type": "string",
          "description": "The user-defined name for the cluster used by ClusterSelectors to group clusters together. This should match Membership's membership_name, unless the user installed ACM on the cluster manually prior to enabling the ACM hub feature. Unique within a Anthos Config Management installation."
        },
        "membershipSpec": {
          "description": "Membership configuration in the cluster. This represents the actual state in the cluster, while the MembershipSpec in the FeatureSpec represents the intended state",
          "$ref": "ConfigManagementMembershipSpec"
        },
        "binauthzState": {
          "description": "Binauthz status",
          "$ref": "ConfigManagementBinauthzState"
        },
        "policyControllerState": {
          "$ref": "ConfigManagementPolicyControllerState",
          "description": "PolicyController status"
        },
        "configSyncState": {
          "$ref": "ConfigManagementConfigSyncState",
          "description": "Current sync status"
        },
        "hierarchyControllerState": {
          "$ref": "ConfigManagementHierarchyControllerState",
          "description": "Hierarchy Controller status"
        },
        "operatorState": {
          "description": "Current install status of ACM's Operator",
          "$ref": "ConfigManagementOperatorState"
        }
      },
      "type": "object"
    },
    "IdentityServiceGoogleConfig": {
      "properties": {
        "disable": {
          "description": "Disable automatic configuration of Google Plugin on supported platforms.",
          "type": "boolean"
        }
      },
      "id": "IdentityServiceGoogleConfig",
      "type": "object",
      "description": "Configuration for the Google Plugin Auth flow."
    },
    "ScopeFeatureState": {
      "type": "object",
      "description": "ScopeFeatureState contains Scope-wide Feature status information.",
      "properties": {
        "state": {
          "description": "Output only. The \"running state\" of the Feature in this Scope.",
          "$ref": "FeatureState",
          "readOnly": true
        }
      },
      "id": "ScopeFeatureState"
    },
    "Expr": {
      "type": "object",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      },
      "id": "Expr"
    },
    "Status": {
      "id": "Status",
      "description": "Status specifies state for the subcomponent.",
      "properties": {
        "code": {
          "description": "Code specifies AppDevExperienceFeature's subcomponent ready state.",
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "AppDevExperienceFeature's specified subcomponent is ready.",
            "AppDevExperienceFeature's specified subcomponent ready state is false. This means AppDevExperienceFeature has encountered an issue that blocks all, or a portion, of its normal operation. See the `description` for more details.",
            "AppDevExperienceFeature's specified subcomponent has a pending or unknown state."
          ],
          "enum": [
            "CODE_UNSPECIFIED",
            "OK",
            "FAILED",
            "UNKNOWN"
          ]
        },
        "description": {
          "type": "string",
          "description": "Description is populated if Code is Failed, explaining why it has failed."
        }
      },
      "type": "object"
    },
    "ListScopesResponse": {
      "properties": {
        "scopes": {
          "description": "The list of Scopes",
          "items": {
            "$ref": "Scope"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token to request the next page of resources from the `ListScopes` method. The value of an empty string means that there are no more resources to return.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "List of Scopes.",
      "id": "ListScopesResponse"
    },
    "ServiceMeshControlPlaneManagement": {
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "$ref": "ServiceMeshStatusDetails"
          },
          "description": "Explanation of state."
        },
        "state": {
          "description": "LifecycleState of control plane management.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified",
            "DISABLED means that the component is not enabled.",
            "FAILED_PRECONDITION means that provisioning cannot proceed because of some characteristic of the member cluster.",
            "PROVISIONING means that provisioning is in progress.",
            "ACTIVE means that the component is ready for use.",
            "STALLED means that provisioning could not be done.",
            "NEEDS_ATTENTION means that the component is ready, but some user intervention is required. (For example that the user should migrate workloads to a new control plane revision.)",
            "DEGRADED means that the component is ready, but operating in a degraded state."
          ],
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "DISABLED",
            "FAILED_PRECONDITION",
            "PROVISIONING",
            "ACTIVE",
            "STALLED",
            "NEEDS_ATTENTION",
            "DEGRADED"
          ]
        }
      },
      "id": "ServiceMeshControlPlaneManagement",
      "description": "Status of control plane management.",
      "type": "object"
    },
    "Scope": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string",
          "description": "Output only. Google-generated UUID for this resource. This is unique across all scope resources. If a scope resource is deleted and another resource with the same name is created, it gets a different uid.",
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. When the scope was last updated.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "deleteTime": {
          "description": "Output only. When the scope was deleted.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "description": "The resource name for the scope `projects/{project}/locations/{location}/scopes/{scope}`",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. When the scope was created.",
          "readOnly": true
        },
        "state": {
          "readOnly": true,
          "$ref": "ScopeLifecycleState",
          "description": "Output only. State of the scope resource."
        },
        "allMemberships": {
          "description": "If true, all Memberships in the Fleet bind to this Scope.",
          "type": "boolean"
        }
      },
      "id": "Scope",
      "description": "Scope represents a Scope in a Fleet."
    },
    "FleetLifecycleState": {
      "properties": {
        "code": {
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ],
          "type": "string",
          "description": "Output only. The current state of the Fleet resource.",
          "enumDescriptions": [
            "The code is not set.",
            "The fleet is being created.",
            "The fleet active.",
            "The fleet is being deleted.",
            "The fleet is being updated."
          ],
          "readOnly": true
        }
      },
      "description": "FleetLifecycleState describes the state of a Fleet resource.",
      "id": "FleetLifecycleState",
      "type": "object"
    },
    "MeteringMembershipState": {
      "description": "**Metering**: Per-Membership Feature State.",
      "properties": {
        "lastMeasurementTime": {
          "description": "The time stamp of the most recent measurement of the number of vCPUs in the cluster.",
          "format": "google-datetime",
          "type": "string"
        },
        "preciseLastMeasuredClusterVcpuCapacity": {
          "description": "The vCPUs capacity in the cluster according to the most recent measurement (1/1000 precision).",
          "format": "float",
          "type": "number"
        }
      },
      "id": "MeteringMembershipState",
      "type": "object"
    },
    "ConfigManagementHierarchyControllerDeploymentState": {
      "properties": {
        "extension": {
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "The deployment state for Hierarchy Controller extension (e.g. v0.7.0-hc.1)"
        },
        "hnc": {
          "description": "The deployment state for open source HNC (e.g. v0.7.0-hc.0)",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        }
      },
      "description": "Deployment state for Hierarchy Controller",
      "id": "ConfigManagementHierarchyControllerDeploymentState",
      "type": "object"
    },
    "OperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "cancelRequested": {
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true
        },
        "statusDetail": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "apiVersion": {
          "readOnly": true,
          "description": "Output only. API version used to start the operation.",
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "verb": {
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OperationMetadata"
    },
    "ConfigManagementConfigSyncState": {
      "id": "ConfigManagementConfigSyncState",
      "properties": {
        "deploymentState": {
          "$ref": "ConfigManagementConfigSyncDeploymentState",
          "description": "Information about the deployment of ConfigSync, including the version of the various Pods deployed"
        },
        "version": {
          "$ref": "ConfigManagementConfigSyncVersion",
          "description": "The version of ConfigSync deployed"
        },
        "syncState": {
          "$ref": "ConfigManagementSyncState",
          "description": "The state of ConfigSync's process to sync configs to a cluster"
        }
      },
      "description": "State information for ConfigSync",
      "type": "object"
    },
    "ConfigManagementHierarchyControllerState": {
      "type": "object",
      "description": "State for Hierarchy Controller",
      "id": "ConfigManagementHierarchyControllerState",
      "properties": {
        "state": {
          "$ref": "ConfigManagementHierarchyControllerDeploymentState",
          "description": "The deployment state for Hierarchy Controller"
        },
        "version": {
          "description": "The version for Hierarchy Controller",
          "$ref": "ConfigManagementHierarchyControllerVersion"
        }
      }
    },
    "PolicyControllerResourceList": {
      "properties": {
        "cpu": {
          "type": "string",
          "description": "CPU requirement expressed in Kubernetes resource units."
        },
        "memory": {
          "description": "Memory requirement expressed in Kubernetes resource units.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "ResourceList contains container resource requirements.",
      "id": "PolicyControllerResourceList"
    },
    "FleetObservabilityRoutingConfig": {
      "type": "object",
      "id": "FleetObservabilityRoutingConfig",
      "properties": {
        "mode": {
          "enumDescriptions": [
            "If UNSPECIFIED, fleet logging feature is disabled.",
            "logs will be copied to the destination project.",
            "logs will be moved to the destination project."
          ],
          "type": "string",
          "enum": [
            "MODE_UNSPECIFIED",
            "COPY",
            "MOVE"
          ],
          "description": "mode configures the logs routing mode."
        }
      },
      "description": "RoutingConfig configures the behaviour of fleet logging feature."
    },
    "Empty": {
      "id": "Empty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object"
    },
    "Role": {
      "properties": {
        "predefinedRole": {
          "type": "string",
          "enumDescriptions": [
            "UNKNOWN",
            "ADMIN has EDIT and RBAC permissions",
            "EDIT can edit all resources except RBAC",
            "VIEW can only read resources"
          ],
          "description": "predefined_role is the Kubernetes default role to use",
          "enum": [
            "UNKNOWN",
            "ADMIN",
            "EDIT",
            "VIEW"
          ]
        }
      },
      "description": "Role is the type for Kubernetes roles",
      "id": "Role",
      "type": "object"
    },
    "MembershipFeatureSpec": {
      "properties": {
        "cloudbuild": {
          "description": "Cloud Build-specific spec",
          "$ref": "MembershipSpec"
        },
        "mesh": {
          "description": "Anthos Service Mesh-specific spec",
          "$ref": "ServiceMeshMembershipSpec"
        },
        "identityservice": {
          "description": "Identity Service-specific spec.",
          "$ref": "IdentityServiceMembershipSpec"
        },
        "configmanagement": {
          "description": "Config Management-specific spec.",
          "$ref": "ConfigManagementMembershipSpec"
        },
        "fleetobservability": {
          "$ref": "FleetObservabilityMembershipSpec",
          "description": "Fleet observability membership spec"
        },
        "anthosobservability": {
          "description": "Anthos Observability-specific spec",
          "$ref": "AnthosObservabilityMembershipSpec"
        },
        "policycontroller": {
          "description": "Policy Controller spec.",
          "$ref": "PolicyControllerMembershipSpec"
        },
        "fleetInherited": {
          "type": "boolean",
          "description": "True if value of `feature_spec` was inherited from a fleet-level default."
        }
      },
      "id": "MembershipFeatureSpec",
      "type": "object",
      "description": "MembershipFeatureSpec contains configuration information for a single Membership."
    },
    "PolicyControllerHubConfig": {
      "description": "Configuration for Policy Controller",
      "properties": {
        "auditIntervalSeconds": {
          "format": "int64",
          "description": "Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.",
          "type": "string"
        },
        "exemptableNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster."
        },
        "deploymentConfigs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "PolicyControllerPolicyControllerDeploymentConfig"
          },
          "description": "Map of deployment configs to deployments (\"admission\", \"audit\", \"mutation')."
        },
        "monitoring": {
          "$ref": "PolicyControllerMonitoringConfig",
          "description": "Monitoring specifies the configuration of monitoring."
        },
        "installSpec": {
          "type": "string",
          "description": "The install_spec represents the intended state specified by the latest request that mutated install_spec in the feature spec, not the lifecycle state of the feature observed by the Hub feature controller that is reported in the feature state.",
          "enumDescriptions": [
            "Spec is unknown.",
            "Request to uninstall Policy Controller.",
            "Request to install and enable Policy Controller.",
            "Request to suspend Policy Controller i.e. its webhooks. If Policy Controller is not installed, it will be installed but suspended."
          ],
          "enum": [
            "INSTALL_SPEC_UNSPECIFIED",
            "INSTALL_SPEC_NOT_INSTALLED",
            "INSTALL_SPEC_ENABLED",
            "INSTALL_SPEC_SUSPENDED"
          ]
        },
        "referentialRulesEnabled": {
          "description": "Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.",
          "type": "boolean"
        },
        "policyContent": {
          "description": "Specifies the desired policy content on the cluster",
          "$ref": "PolicyControllerPolicyContentSpec"
        },
        "logDeniesEnabled": {
          "description": "Logs all denies and dry run failures.",
          "type": "boolean"
        },
        "constraintViolationLimit": {
          "type": "string",
          "description": "The maximum number of audit violations to be stored in a constraint. If not set, the internal default (currently 20) will be used.",
          "format": "int64"
        },
        "templateLibraryConfig": {
          "description": "Configures the library templates to install along with Policy Controller.",
          "$ref": "PolicyControllerTemplateLibraryConfig"
        },
        "mutationEnabled": {
          "description": "Enables the ability to mutate resources using Policy Controller.",
          "type": "boolean"
        }
      },
      "id": "PolicyControllerHubConfig",
      "type": "object"
    },
    "ConfigManagementSyncState": {
      "type": "object",
      "properties": {
        "lastSync": {
          "description": "Deprecated: use last_sync_time instead. Timestamp of when ACM last successfully synced the repo The time format is specified in https://golang.org/pkg/time/#Time.String",
          "type": "string"
        },
        "syncToken": {
          "type": "string",
          "description": "Token indicating the state of the syncer."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "ConfigManagementSyncError"
          },
          "description": "A list of errors resulting from problematic configs. This list will be truncated after 100 errors, although it is unlikely for that many errors to simultaneously exist."
        },
        "importToken": {
          "description": "Token indicating the state of the importer.",
          "type": "string"
        },
        "lastSyncTime": {
          "description": "Timestamp type of when ACM last successfully synced the repo",
          "format": "google-datetime",
          "type": "string"
        },
        "sourceToken": {
          "type": "string",
          "description": "Token indicating the state of the repo."
        },
        "code": {
          "type": "string",
          "description": "Sync status code",
          "enumDescriptions": [
            "ACM cannot determine a sync code",
            "ACM successfully synced the git Repo with the cluster",
            "ACM is in the progress of syncing a new change",
            "Indicates an error configuring ACM, and user action is required",
            "ACM has been installed (operator manifest deployed), but not configured.",
            "ACM has not been installed (no operator pod found)",
            "Error authorizing with the cluster",
            "Cluster could not be reached"
          ],
          "enum": [
            "SYNC_CODE_UNSPECIFIED",
            "SYNCED",
            "PENDING",
            "ERROR",
            "NOT_CONFIGURED",
            "NOT_INSTALLED",
            "UNAUTHORIZED",
            "UNREACHABLE"
          ]
        }
      },
      "description": "State indicating an ACM's progress syncing configurations to a cluster",
      "id": "ConfigManagementSyncState"
    },
    "FeatureResourceState": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "description": "The current state of the Feature resource in the Hub API.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLING",
            "ACTIVE",
            "DISABLING",
            "UPDATING",
            "SERVICE_UPDATING"
          ],
          "enumDescriptions": [
            "State is unknown or not set.",
            "The Feature is being enabled, and the Feature resource is being created. Once complete, the corresponding Feature will be enabled in this Hub.",
            "The Feature is enabled in this Hub, and the Feature resource is fully available.",
            "The Feature is being disabled in this Hub, and the Feature resource is being deleted.",
            "The Feature resource is being updated.",
            "The Feature resource is being updated by the Hub Service."
          ]
        }
      },
      "description": "FeatureResourceState describes the state of a Feature *resource* in the GkeHub API. See `FeatureState` for the \"running state\" of the Feature in the Hub and across Memberships.",
      "id": "FeatureResourceState"
    },
    "AnthosObservabilityFeatureSpec": {
      "id": "AnthosObservabilityFeatureSpec",
      "type": "object",
      "description": "**Anthos Observability**: Spec",
      "properties": {
        "defaultMembershipSpec": {
          "description": "Default membership spec for unconfigured memberships",
          "$ref": "AnthosObservabilityMembershipSpec"
        }
      }
    },
    "AppDevExperienceFeatureState": {
      "description": "State for App Dev Exp Feature.",
      "id": "AppDevExperienceFeatureState",
      "properties": {
        "networkingInstallSucceeded": {
          "$ref": "Status",
          "description": "Status of subcomponent that detects configured Service Mesh resources."
        }
      },
      "type": "object"
    },
    "IdentityServiceMembershipState": {
      "description": "**Anthos Identity Service**: State for a single Membership.",
      "id": "IdentityServiceMembershipState",
      "type": "object",
      "properties": {
        "installedVersion": {
          "description": "Installed AIS version. This is the AIS version installed on this member. The values makes sense iff state is OK.",
          "type": "string"
        },
        "memberConfig": {
          "description": "Last reconciled membership configuration",
          "$ref": "IdentityServiceMembershipSpec"
        },
        "state": {
          "enumDescriptions": [
            "Unspecified state",
            "deployment succeeds",
            "Failure with error."
          ],
          "description": "Deployment state on this member",
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "OK",
            "ERROR"
          ]
        },
        "failureReason": {
          "description": "The reason of the failure.",
          "type": "string"
        }
      }
    },
    "Binding": {
      "type": "object",
      "id": "Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "properties": {
        "members": {
          "items": {
            "type": "string"
          },
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "type": "array"
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        }
      }
    },
    "PolicyControllerMembershipSpec": {
      "properties": {
        "policyControllerHubConfig": {
          "description": "Policy Controller configuration for the cluster.",
          "$ref": "PolicyControllerHubConfig"
        },
        "version": {
          "type": "string",
          "description": "Version of Policy Controller installed."
        }
      },
      "description": "**Policy Controller**: Configuration for a single cluster. Intended to parallel the PolicyController CR.",
      "type": "object",
      "id": "PolicyControllerMembershipSpec"
    },
    "Namespace": {
      "id": "Namespace",
      "description": "Namespace represents a namespace across the Fleet",
      "type": "object",
      "properties": {
        "updateTime": {
          "description": "Output only. When the namespace was last updated.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "uid": {
          "description": "Output only. Google-generated UUID for this resource. This is unique across all namespace resources. If a namespace resource is deleted and another resource with the same name is created, it gets a different uid.",
          "type": "string",
          "readOnly": true
        },
        "deleteTime": {
          "type": "string",
          "description": "Output only. When the namespace was deleted.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "The resource name for the namespace `projects/{project}/locations/{location}/namespaces/{namespace}`"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. When the namespace was created.",
          "readOnly": true
        },
        "scope": {
          "type": "string",
          "description": "Required. Scope associated with the namespace"
        },
        "state": {
          "$ref": "NamespaceLifecycleState",
          "description": "Output only. State of the namespace resource.",
          "readOnly": true
        }
      }
    },
    "CommonFeatureState": {
      "properties": {
        "state": {
          "readOnly": true,
          "$ref": "FeatureState",
          "description": "Output only. The \"running state\" of the Feature in this Hub."
        },
        "fleetobservability": {
          "$ref": "FleetObservabilityFeatureState",
          "description": "FleetObservability feature state."
        },
        "appdevexperience": {
          "description": "Appdevexperience specific state.",
          "$ref": "AppDevExperienceFeatureState"
        }
      },
      "description": "CommonFeatureState contains Hub-wide Feature status information.",
      "type": "object",
      "id": "CommonFeatureState"
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "GoogleRpcStatus"
    },
    "PolicyControllerMonitoringConfig": {
      "id": "PolicyControllerMonitoringConfig",
      "properties": {
        "backends": {
          "type": "array",
          "description": "Specifies the list of backends Policy Controller will export to. An empty list would effectively disable metrics export.",
          "items": {
            "enumDescriptions": [
              "Backend cannot be determined",
              "Prometheus backend for monitoring",
              "Stackdriver/Cloud Monitoring backend for monitoring"
            ],
            "enum": [
              "MONITORING_BACKEND_UNSPECIFIED",
              "PROMETHEUS",
              "CLOUD_MONITORING"
            ],
            "type": "string"
          }
        }
      },
      "description": "MonitoringConfig specifies the backends Policy Controller should export metrics to. For example, to specify metrics should be exported to Cloud Monitoring and Prometheus, specify backends: [\"cloudmonitoring\", \"prometheus\"]",
      "type": "object"
    },
    "ConfigManagementPolicyControllerState": {
      "id": "ConfigManagementPolicyControllerState",
      "type": "object",
      "description": "State for PolicyControllerState.",
      "properties": {
        "version": {
          "$ref": "ConfigManagementPolicyControllerVersion",
          "description": "The version of Gatekeeper Policy Controller deployed."
        },
        "deploymentState": {
          "description": "The state about the policy controller installation.",
          "$ref": "ConfigManagementGatekeeperDeploymentState"
        },
        "migration": {
          "$ref": "ConfigManagementPolicyControllerMigration",
          "description": "Record state of ACM -\u003e PoCo Hub migration for this feature."
        }
      }
    },
    "ConfigManagementConfigSyncVersion": {
      "description": "Specific versioning information pertaining to ConfigSync's Pods",
      "properties": {
        "rootReconciler": {
          "description": "Version of the deployed reconciler container in root-reconciler pod",
          "type": "string"
        },
        "admissionWebhook": {
          "description": "Version of the deployed admission_webhook pod",
          "type": "string"
        },
        "reconcilerManager": {
          "description": "Version of the deployed reconciler-manager pod",
          "type": "string"
        },
        "importer": {
          "type": "string",
          "description": "Version of the deployed importer pod"
        },
        "gitSync": {
          "type": "string",
          "description": "Version of the deployed git-sync pod"
        },
        "monitor": {
          "type": "string",
          "description": "Version of the deployed monitor pod"
        },
        "syncer": {
          "type": "string",
          "description": "Version of the deployed syncer pod"
        }
      },
      "id": "ConfigManagementConfigSyncVersion",
      "type": "object"
    },
    "MembershipSpec": {
      "description": "**Cloud Build**: Configurations for each Cloud Build enabled cluster.",
      "type": "object",
      "properties": {
        "version": {
          "description": "Version of the cloud build software on the cluster.",
          "type": "string"
        },
        "securityPolicy": {
          "enumDescriptions": [
            "Unspecified policy",
            "Privileged build pods are disallowed",
            "Privileged build pods are allowed"
          ],
          "description": "Whether it is allowed to run the privileged builds on the cluster or not.",
          "enum": [
            "SECURITY_POLICY_UNSPECIFIED",
            "NON_PRIVILEGED",
            "PRIVILEGED"
          ],
          "type": "string"
        }
      },
      "id": "MembershipSpec"
    },
    "ConfigManagementHierarchyControllerVersion": {
      "description": "Version for Hierarchy Controller",
      "id": "ConfigManagementHierarchyControllerVersion",
      "type": "object",
      "properties": {
        "extension": {
          "description": "Version for Hierarchy Controller extension",
          "type": "string"
        },
        "hnc": {
          "description": "Version for open source HNC",
          "type": "string"
        }
      }
    },
    "ServiceMeshStatusDetails": {
      "description": "Structured and human-readable details for a status.",
      "properties": {
        "code": {
          "type": "string",
          "description": "A machine-readable code that further describes a broad status."
        },
        "details": {
          "description": "Human-readable explanation of code.",
          "type": "string"
        }
      },
      "id": "ServiceMeshStatusDetails",
      "type": "object"
    },
    "ConfigManagementPolicyControllerVersion": {
      "id": "ConfigManagementPolicyControllerVersion",
      "properties": {
        "version": {
          "description": "The gatekeeper image tag that is composed of ACM version, git tag, build number.",
          "type": "string"
        }
      },
      "description": "The build version of Gatekeeper Policy Controller is using.",
      "type": "object"
    },
    "ConfigManagementConfigSync": {
      "properties": {
        "allowVerticalScale": {
          "description": "Set to true to allow the vertical scaling. Defaults to false which disallows vertical scaling. This field is deprecated.",
          "type": "boolean"
        },
        "preventDrift": {
          "type": "boolean",
          "description": "Set to true to enable the Config Sync admission webhook to prevent drifts. If set to `false`, disables the Config Sync admission webhook and does not prevent drifts."
        },
        "managed": {
          "$ref": "ConfigManagementManaged",
          "description": "Configuration for Managed Config Sync."
        },
        "sourceFormat": {
          "type": "string",
          "description": "Specifies whether the Config Sync Repo is in \"hierarchical\" or \"unstructured\" mode."
        },
        "git": {
          "$ref": "ConfigManagementGitConfig",
          "description": "Git repo configuration for the cluster."
        },
        "oci": {
          "$ref": "ConfigManagementOciConfig",
          "description": "OCI repo configuration for the cluster"
        },
        "enabled": {
          "type": "boolean",
          "description": "Enables the installation of ConfigSync. If set to true, ConfigSync resources will be created and the other ConfigSync fields will be applied if exist. If set to false, all other ConfigSync fields will be ignored, ConfigSync resources will be deleted. If omitted, ConfigSync resources will be managed depends on the presence of git field."
        }
      },
      "type": "object",
      "description": "Configuration for Config Sync",
      "id": "ConfigManagementConfigSync"
    },
    "IdentityServiceMembershipSpec": {
      "properties": {
        "authMethods": {
          "items": {
            "$ref": "IdentityServiceAuthMethod"
          },
          "description": "A member may support multiple auth methods.",
          "type": "array"
        }
      },
      "description": "**Anthos Identity Service**: Configuration for a single Membership.",
      "type": "object",
      "id": "IdentityServiceMembershipSpec"
    },
    "FleetObservabilityMembershipState": {
      "id": "FleetObservabilityMembershipState",
      "description": "**FleetObservability**: An empty state left as an example membership-specific Feature state.",
      "properties": {},
      "type": "object"
    },
    "ServiceMeshMembershipSpec": {
      "type": "object",
      "description": "**Service Mesh**: Spec for a single Membership for the servicemesh feature",
      "id": "ServiceMeshMembershipSpec",
      "properties": {
        "management": {
          "enum": [
            "MANAGEMENT_UNSPECIFIED",
            "MANAGEMENT_AUTOMATIC",
            "MANAGEMENT_MANUAL"
          ],
          "description": "Enables automatic Service Mesh management.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified",
            "Google should manage my Service Mesh for the cluster.",
            "User will manually configure their service mesh components."
          ]
        },
        "controlPlane": {
          "enumDescriptions": [
            "Unspecified",
            "Google should provision a control plane revision and make it available in the cluster. Google will enroll this revision in a release channel and keep it up to date. The control plane revision may be a managed service, or a managed install.",
            "User will manually configure the control plane (e.g. via CLI, or via the ControlPlaneRevision KRM API)"
          ],
          "type": "string",
          "enum": [
            "CONTROL_PLANE_MANAGEMENT_UNSPECIFIED",
            "AUTOMATIC",
            "MANUAL"
          ],
          "description": "Deprecated: use `management` instead Enables automatic control plane management."
        }
      }
    },
    "ConfigManagementBinauthzVersion": {
      "type": "object",
      "properties": {
        "webhookVersion": {
          "description": "The version of the binauthz webhook.",
          "type": "string"
        }
      },
      "description": "The version of binauthz.",
      "id": "ConfigManagementBinauthzVersion"
    },
    "RBACRoleBindingLifecycleState": {
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ],
          "description": "Output only. The current state of the rbacrolebinding resource.",
          "enumDescriptions": [
            "The code is not set.",
            "The rbacrolebinding is being created.",
            "The rbacrolebinding active.",
            "The rbacrolebinding is being deleted.",
            "The rbacrolebinding is being updated."
          ]
        }
      },
      "type": "object",
      "description": "RBACRoleBindingLifecycleState describes the state of a RbacRoleBinding resource.",
      "id": "RBACRoleBindingLifecycleState"
    },
    "IdentityServiceAuthMethod": {
      "type": "object",
      "id": "IdentityServiceAuthMethod",
      "description": "Configuration of an auth method for a member/cluster. Only one authentication method (e.g., OIDC and LDAP) can be set per AuthMethod.",
      "properties": {
        "googleConfig": {
          "description": "GoogleConfig specific configuration",
          "$ref": "IdentityServiceGoogleConfig"
        },
        "azureadConfig": {
          "description": "AzureAD specific Configuration.",
          "$ref": "IdentityServiceAzureADConfig"
        },
        "name": {
          "description": "Identifier for auth config.",
          "type": "string"
        },
        "proxy": {
          "type": "string",
          "description": "Proxy server address to use for auth method."
        },
        "oidcConfig": {
          "$ref": "IdentityServiceOidcConfig",
          "description": "OIDC specific configuration."
        }
      }
    },
    "ConfigManagementOperatorState": {
      "id": "ConfigManagementOperatorState",
      "description": "State information for an ACM's Operator",
      "properties": {
        "errors": {
          "description": "Install errors.",
          "type": "array",
          "items": {
            "$ref": "ConfigManagementInstallError"
          }
        },
        "deploymentState": {
          "description": "The state of the Operator's deployment",
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        },
        "version": {
          "description": "The semenatic version number of the operator",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PolicyControllerResourceRequirements": {
      "id": "PolicyControllerResourceRequirements",
      "type": "object",
      "description": "ResourceRequirements describes the compute resource requirements.",
      "properties": {
        "limits": {
          "$ref": "PolicyControllerResourceList",
          "description": "Limits describes the maximum amount of compute resources allowed for use by the running container."
        },
        "requests": {
          "$ref": "PolicyControllerResourceList",
          "description": "Requests describes the amount of compute resources reserved for the container by the kube-scheduler."
        }
      }
    },
    "Fleet": {
      "type": "object",
      "description": "Fleet contains the Fleet-wide metadata and configuration.",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. When the Fleet was last updated.",
          "format": "google-datetime",
          "readOnly": true
        },
        "deleteTime": {
          "readOnly": true,
          "description": "Output only. When the Fleet was deleted.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The full, unique resource name of this fleet in the format of `projects/{project}/locations/{location}/fleets/{fleet}`. Each Google Cloud project can have at most one fleet resource, named \"default\"."
        },
        "uid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Google-generated UUID for this resource. This is unique across all Fleet resources. If a Fleet resource is deleted and another resource with the same name is created, it gets a different uid."
        },
        "displayName": {
          "type": "string",
          "description": "Optional. A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: `Production Fleet`"
        },
        "createTime": {
          "description": "Output only. When the Fleet was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "description": "Output only. State of the namespace resource.",
          "readOnly": true,
          "$ref": "FleetLifecycleState"
        }
      },
      "id": "Fleet"
    },
    "PolicyControllerOnClusterState": {
      "properties": {
        "state": {
          "type": "string",
          "description": "The lifecycle state of this component.",
          "enumDescriptions": [
            "The lifecycle state is unspecified.",
            "The PC does not exist on the given cluster, and no k8s resources of any type that are associated with the PC should exist there. The cluster does not possess a membership with the PCH.",
            "The PCH possesses a Membership, however the PC is not fully installed on the cluster. In this state the hub can be expected to be taking actions to install the PC on the cluster.",
            "The PC is fully installed on the cluster and in an operational mode. In this state PCH will be reconciling state with the PC, and the PC will be performing it's operational tasks per that software. Entering a READY state requires that the hub has confirmed the PC is installed and its pods are operational with the version of the PC the PCH expects.",
            "The PC is fully installed, but in the process of changing the configuration (including changing the version of PC either up and down, or modifying the manifests of PC) of the resources running on the cluster. The PCH has a Membership, is aware of the version the cluster should be running in, but has not confirmed for itself that the PC is running with that version.",
            "The PC may have resources on the cluster, but the PCH wishes to remove the Membership. The Membership still exists.",
            "The PC is not operational, and the PCH is unable to act to make it operational. Entering a CLUSTER_ERROR state happens automatically when the PCH determines that a PC installed on the cluster is non-operative or that the cluster does not meet requirements set for the PCH to administer the cluster but has nevertheless been given an instruction to do so (such as 'install').",
            "In this state, the PC may still be operational, and only the PCH is unable to act. The hub should not issue instructions to change the PC state, or otherwise interfere with the on-cluster resources. Entering a HUB_ERROR state happens automatically when the PCH determines the hub is in an unhealthy state and it wishes to 'take hands off' to avoid corrupting the PC or other data.",
            "Policy Controller (PC) is installed but suspended. This means that the policies are not enforced, but violations are still recorded (through audit)."
          ],
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLING",
            "ACTIVE",
            "UPDATING",
            "DECOMMISSIONING",
            "CLUSTER_ERROR",
            "HUB_ERROR",
            "SUSPENDED"
          ]
        },
        "details": {
          "type": "string",
          "description": "Surface potential errors or information logs."
        }
      },
      "description": "OnClusterState represents the state of a sub-component of Policy Controller.",
      "type": "object",
      "id": "PolicyControllerOnClusterState"
    },
    "MembershipBinding": {
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. When the membership binding was last updated.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "uid": {
          "description": "Output only. Google-generated UUID for this resource. This is unique across all membershipbinding resources. If a membershipbinding resource is deleted and another resource with the same name is created, it gets a different uid.",
          "readOnly": true,
          "type": "string"
        },
        "deleteTime": {
          "description": "Output only. When the membership binding was deleted.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "scope": {
          "type": "string",
          "description": "A Workspace resource name in the format `projects/*/locations/*/scopes/*`."
        },
        "state": {
          "readOnly": true,
          "description": "Output only. State of the membership binding resource.",
          "$ref": "MembershipBindingLifecycleState"
        },
        "fleet": {
          "description": "Whether the membershipbinding is Fleet-wide; true means that this Membership should be bound to all Namespaces in this entire Fleet.",
          "type": "boolean"
        },
        "name": {
          "description": "The resource name for the membershipbinding itself `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. When the membership binding was created.",
          "format": "google-datetime"
        }
      },
      "description": "MembershipBinding is a subresource of a Membership, representing what Fleet Scopes (or other, future Fleet resources) a Membership is bound to.",
      "type": "object",
      "id": "MembershipBinding"
    },
    "AppDevExperienceFeatureSpec": {
      "properties": {},
      "id": "AppDevExperienceFeatureSpec",
      "type": "object",
      "description": "Spec for App Dev Experience Feature."
    },
    "ScopeLifecycleState": {
      "description": "ScopeLifecycleState describes the state of a Scope resource.",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enumDescriptions": [
            "The code is not set.",
            "The scope is being created.",
            "The scope active.",
            "The scope is being deleted.",
            "The scope is being updated."
          ],
          "description": "Output only. The current state of the scope resource.",
          "readOnly": true,
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ]
        }
      },
      "id": "ScopeLifecycleState"
    },
    "ServiceMeshMembershipState": {
      "description": "**Service Mesh**: State for a single Membership, as analyzed by the Service Mesh Hub Controller.",
      "properties": {
        "dataPlaneManagement": {
          "readOnly": true,
          "$ref": "ServiceMeshDataPlaneManagement",
          "description": "Output only. Status of data plane management."
        },
        "controlPlaneManagement": {
          "readOnly": true,
          "description": "Output only. Status of control plane management",
          "$ref": "ServiceMeshControlPlaneManagement"
        }
      },
      "id": "ServiceMeshMembershipState",
      "type": "object"
    },
    "FleetObservabilityFeatureState": {
      "properties": {},
      "type": "object",
      "id": "FleetObservabilityFeatureState",
      "description": "**FleetObservability**: An empty state left as an example Hub-wide Feature state."
    },
    "ScopeFeatureSpec": {
      "id": "ScopeFeatureSpec",
      "type": "object",
      "properties": {},
      "description": "ScopeFeatureSpec contains feature specs for a fleet scope."
    },
    "ConfigManagementPolicyControllerMigration": {
      "description": "State for the migration of PolicyController from ACM -\u003e PoCo Hub.",
      "id": "ConfigManagementPolicyControllerMigration",
      "properties": {
        "stage": {
          "enum": [
            "STAGE_UNSPECIFIED",
            "ACM_MANAGED",
            "POCO_MANAGED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unknown state of migration.",
            "ACM Hub/Operator manages policycontroller. No migration yet completed.",
            "All migrations steps complete; Poco Hub now manages policycontroller."
          ],
          "description": "Stage of the migration."
        }
      },
      "type": "object"
    },
    "PolicyControllerTemplateLibraryConfig": {
      "description": "The config specifying which default library templates to install.",
      "id": "PolicyControllerTemplateLibraryConfig",
      "type": "object",
      "properties": {
        "included": {
          "description": "Whether the standard template library should be installed or not.",
          "type": "boolean"
        },
        "installation": {
          "enumDescriptions": [
            "No installation strategy has been specified.",
            "Do not install the template library.",
            "Install the entire template library."
          ],
          "enum": [
            "INSTALLATION_UNSPECIFIED",
            "NOT_INSTALLED",
            "ALL"
          ],
          "description": "Configures the manner in which the template library is installed on the cluster.",
          "type": "string"
        }
      }
    },
    "CommonFeatureSpec": {
      "description": "CommonFeatureSpec contains Hub-wide configuration information",
      "properties": {
        "anthosobservability": {
          "description": "Anthos Observability spec",
          "$ref": "AnthosObservabilityFeatureSpec"
        },
        "fleetobservability": {
          "description": "FleetObservability feature spec.",
          "$ref": "FleetObservabilityFeatureSpec"
        },
        "appdevexperience": {
          "$ref": "AppDevExperienceFeatureSpec",
          "description": "Appdevexperience specific spec."
        },
        "multiclusteringress": {
          "description": "Multicluster Ingress-specific spec.",
          "$ref": "MultiClusterIngressFeatureSpec"
        }
      },
      "type": "object",
      "id": "CommonFeatureSpec"
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "type": "object",
      "properties": {},
      "description": "The request message for Operations.CancelOperation."
    },
    "MembershipFeatureState": {
      "type": "object",
      "description": "MembershipFeatureState contains Feature status information for a single Membership.",
      "properties": {
        "state": {
          "$ref": "FeatureState",
          "description": "The high-level state of this Feature for a single membership."
        },
        "fleetobservability": {
          "description": "Fleet observability membership state.",
          "$ref": "FleetObservabilityMembershipState"
        },
        "policycontroller": {
          "description": "Policycontroller-specific state.",
          "$ref": "PolicyControllerMembershipState"
        },
        "servicemesh": {
          "description": "Service Mesh-specific state.",
          "$ref": "ServiceMeshMembershipState"
        },
        "configmanagement": {
          "$ref": "ConfigManagementMembershipState",
          "description": "Config Management-specific state."
        },
        "metering": {
          "$ref": "MeteringMembershipState",
          "description": "Metering-specific state."
        },
        "appdevexperience": {
          "$ref": "AppDevExperienceFeatureState",
          "description": "Appdevexperience specific state."
        },
        "identityservice": {
          "description": "Identity Service-specific state.",
          "$ref": "IdentityServiceMembershipState"
        }
      },
      "id": "MembershipFeatureState"
    },
    "Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "properties": {
        "version": {
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer"
        },
        "auditConfigs": {
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          },
          "description": "Specifies cloud audit logging configuration for this policy."
        },
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        },
        "etag": {
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string"
        }
      },
      "id": "Policy",
      "type": "object"
    },
    "AnthosObservabilityMembershipSpec": {
      "description": "**Anthosobservability**: Per-Membership Feature spec.",
      "type": "object",
      "id": "AnthosObservabilityMembershipSpec",
      "properties": {
        "version": {
          "description": "the version of stackdriver operator used by this feature",
          "type": "string"
        },
        "doNotOptimizeMetrics": {
          "type": "boolean",
          "description": "Use full of metrics rather than optimized metrics. See https://cloud.google.com/anthos/clusters/docs/on-prem/1.8/concepts/logging-and-monitoring#optimized_metrics_default_metrics"
        },
        "enableStackdriverOnApplications": {
          "type": "boolean",
          "description": "Enable collecting and reporting metrics and logs from user apps."
        }
      }
    },
    "Operation": {
      "properties": {
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        }
      },
      "id": "Operation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "ConfigManagementBinauthzState": {
      "properties": {
        "webhook": {
          "description": "The state of the binauthz webhook.",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "version": {
          "description": "The version of binauthz that is installed.",
          "$ref": "ConfigManagementBinauthzVersion"
        }
      },
      "id": "ConfigManagementBinauthzState",
      "description": "State for Binauthz",
      "type": "object"
    },
    "PolicyControllerPolicyContentState": {
      "description": "The state of the policy controller policy content",
      "type": "object",
      "id": "PolicyControllerPolicyContentState",
      "properties": {
        "templateLibraryState": {
          "description": "The state of the template library",
          "$ref": "PolicyControllerOnClusterState"
        },
        "bundleStates": {
          "description": "The state of the any bundles included in the chosen version of the manifest",
          "additionalProperties": {
            "$ref": "PolicyControllerOnClusterState"
          },
          "type": "object"
        }
      }
    },
    "ConfigManagementErrorResource": {
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "Metadata name of the resource that is causing an error"
        },
        "sourcePath": {
          "type": "string",
          "description": "Path in the git repo of the erroneous config"
        },
        "resourceGvk": {
          "$ref": "ConfigManagementGroupVersionKind",
          "description": "Group/version/kind of the resource that is causing an error"
        },
        "resourceNamespace": {
          "type": "string",
          "description": "Namespace of the resource that is causing an error"
        }
      },
      "id": "ConfigManagementErrorResource",
      "description": "Model for a config file in the git repo with an associated Sync error",
      "type": "object"
    },
    "ConfigManagementOciConfig": {
      "id": "ConfigManagementOciConfig",
      "type": "object",
      "properties": {
        "syncRepo": {
          "type": "string",
          "description": "The OCI image repository URL for the package to sync from. e.g. `LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME`."
        },
        "gcpServiceAccountEmail": {
          "description": "The GCP Service Account Email used for auth when secret_type is gcpServiceAccount.",
          "type": "string"
        },
        "policyDir": {
          "description": "The absolute path of the directory that contains the local resources. Default: the root directory of the image.",
          "type": "string"
        },
        "syncWaitSecs": {
          "type": "string",
          "format": "int64",
          "description": "Period in seconds between consecutive syncs. Default: 15."
        },
        "secretType": {
          "description": "Type of secret configured for access to the Git repo.",
          "type": "string"
        }
      },
      "description": "OCI repo configuration for a single cluster"
    },
    "TestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
        }
      }
    },
    "IdentityServiceOidcConfig": {
      "type": "object",
      "properties": {
        "deployCloudConsoleProxy": {
          "description": "Flag to denote if reverse proxy is used to connect to auth provider. This flag should be set to true when provider is not reachable by Google Cloud Console.",
          "type": "boolean"
        },
        "clientId": {
          "description": "ID for OIDC client application.",
          "type": "string"
        },
        "scopes": {
          "description": "Comma-separated list of identifiers.",
          "type": "string"
        },
        "extraParams": {
          "description": "Comma-separated list of key-value pairs.",
          "type": "string"
        },
        "groupsClaim": {
          "description": "Claim in OIDC ID token that holds group information.",
          "type": "string"
        },
        "enableAccessToken": {
          "type": "boolean",
          "description": "Enable access token."
        },
        "certificateAuthorityData": {
          "type": "string",
          "description": "PEM-encoded CA for OIDC provider."
        },
        "issuerUri": {
          "type": "string",
          "description": "URI for the OIDC provider. This should point to the level below .well-known/openid-configuration."
        },
        "encryptedClientSecret": {
          "format": "byte",
          "description": "Output only. Encrypted OIDC Client secret",
          "type": "string",
          "readOnly": true
        },
        "kubectlRedirectUri": {
          "type": "string",
          "description": "Registered redirect uri to redirect users going through OAuth flow using kubectl plugin."
        },
        "clientSecret": {
          "type": "string",
          "description": "Input only. Unencrypted OIDC client secret will be passed to the GKE Hub CLH."
        },
        "groupPrefix": {
          "type": "string",
          "description": "Prefix to prepend to group name."
        },
        "userPrefix": {
          "type": "string",
          "description": "Prefix to prepend to user name."
        },
        "userClaim": {
          "type": "string",
          "description": "Claim in OIDC ID token that holds username."
        }
      },
      "description": "Configuration for OIDC Auth flow.",
      "id": "IdentityServiceOidcConfig"
    },
    "ConfigManagementInstallError": {
      "properties": {
        "errorMessage": {
          "type": "string",
          "description": "A string representing the user facing error message"
        }
      },
      "id": "ConfigManagementInstallError",
      "description": "Errors pertaining to the installation of ACM",
      "type": "object"
    },
    "AuditConfig": {
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      },
      "id": "AuditConfig"
    },
    "ServiceMeshDataPlaneManagement": {
      "properties": {
        "state": {
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "DISABLED",
            "FAILED_PRECONDITION",
            "PROVISIONING",
            "ACTIVE",
            "STALLED",
            "NEEDS_ATTENTION",
            "DEGRADED"
          ],
          "type": "string",
          "description": "Lifecycle status of data plane management.",
          "enumDescriptions": [
            "Unspecified",
            "DISABLED means that the component is not enabled.",
            "FAILED_PRECONDITION means that provisioning cannot proceed because of some characteristic of the member cluster.",
            "PROVISIONING means that provisioning is in progress.",
            "ACTIVE means that the component is ready for use.",
            "STALLED means that provisioning could not be done.",
            "NEEDS_ATTENTION means that the component is ready, but some user intervention is required. (For example that the user should migrate workloads to a new control plane revision.)",
            "DEGRADED means that the component is ready, but operating in a degraded state."
          ]
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "ServiceMeshStatusDetails"
          },
          "description": "Explanation of the status."
        }
      },
      "id": "ServiceMeshDataPlaneManagement",
      "description": "Status of data plane management. Only reported per-member.",
      "type": "object"
    },
    "FleetObservabilityLoggingConfig": {
      "id": "FleetObservabilityLoggingConfig",
      "type": "object",
      "properties": {
        "defaultConfig": {
          "$ref": "FleetObservabilityRoutingConfig",
          "description": "Specified if applying the default routing config to logs not specified in other configs."
        },
        "fleetScopeLogsConfig": {
          "description": "Specified if applying the routing config to all logs for all fleet scopes.",
          "$ref": "FleetObservabilityRoutingConfig"
        }
      },
      "description": "LoggingConfig defines the configuration for different types of logs."
    },
    "PolicyControllerMembershipState": {
      "description": "**Policy Controller**: State for a single cluster.",
      "properties": {
        "componentStates": {
          "additionalProperties": {
            "$ref": "PolicyControllerOnClusterState"
          },
          "description": "Currently these include (also serving as map keys): 1. \"admission\" 2. \"audit\" 3. \"mutation\"",
          "type": "object"
        },
        "state": {
          "type": "string",
          "description": "The overall Policy Controller lifecycle state observed by the Hub Feature controller.",
          "enumDescriptions": [
            "The lifecycle state is unspecified.",
            "The PC does not exist on the given cluster, and no k8s resources of any type that are associated with the PC should exist there. The cluster does not possess a membership with the PCH.",
            "The PCH possesses a Membership, however the PC is not fully installed on the cluster. In this state the hub can be expected to be taking actions to install the PC on the cluster.",
            "The PC is fully installed on the cluster and in an operational mode. In this state PCH will be reconciling state with the PC, and the PC will be performing it's operational tasks per that software. Entering a READY state requires that the hub has confirmed the PC is installed and its pods are operational with the version of the PC the PCH expects.",
            "The PC is fully installed, but in the process of changing the configuration (including changing the version of PC either up and down, or modifying the manifests of PC) of the resources running on the cluster. The PCH has a Membership, is aware of the version the cluster should be running in, but has not confirmed for itself that the PC is running with that version.",
            "The PC may have resources on the cluster, but the PCH wishes to remove the Membership. The Membership still exists.",
            "The PC is not operational, and the PCH is unable to act to make it operational. Entering a CLUSTER_ERROR state happens automatically when the PCH determines that a PC installed on the cluster is non-operative or that the cluster does not meet requirements set for the PCH to administer the cluster but has nevertheless been given an instruction to do so (such as 'install').",
            "In this state, the PC may still be operational, and only the PCH is unable to act. The hub should not issue instructions to change the PC state, or otherwise interfere with the on-cluster resources. Entering a HUB_ERROR state happens automatically when the PCH determines the hub is in an unhealthy state and it wishes to 'take hands off' to avoid corrupting the PC or other data.",
            "Policy Controller (PC) is installed but suspended. This means that the policies are not enforced, but violations are still recorded (through audit)."
          ],
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLING",
            "ACTIVE",
            "UPDATING",
            "DECOMMISSIONING",
            "CLUSTER_ERROR",
            "HUB_ERROR",
            "SUSPENDED"
          ]
        },
        "contentStates": {
          "type": "object",
          "additionalProperties": {
            "$ref": "PolicyControllerOnClusterState"
          },
          "description": "The state of the template library and any bundles included in the chosen version of the manifest"
        },
        "policyContentState": {
          "description": "The overall content state observed by the Hub Feature controller.",
          "$ref": "PolicyControllerPolicyContentState"
        }
      },
      "id": "PolicyControllerMembershipState",
      "type": "object"
    },
    "ConfigManagementGatekeeperDeploymentState": {
      "description": "State of Policy Controller installation.",
      "type": "object",
      "id": "ConfigManagementGatekeeperDeploymentState",
      "properties": {
        "gatekeeperMutation": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "Status of the pod serving the mutation webhook.",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        },
        "gatekeeperControllerManagerState": {
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string",
          "description": "Status of gatekeeper-controller-manager pod."
        },
        "gatekeeperAudit": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "Status of gatekeeper-audit deployment.",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        }
      }
    },
    "PolicyControllerBundleInstallSpec": {
      "type": "object",
      "description": "BundleInstallSpec is the specification configuration for a single managed bundle.",
      "id": "PolicyControllerBundleInstallSpec",
      "properties": {
        "management": {
          "enumDescriptions": [
            "No Management strategy has been specified.",
            "The entity should be insistently reconciled by the Hub controller"
          ],
          "description": "Management specifies how the bundle will be managed by the controller.",
          "enum": [
            "MANAGEMENT_UNSPECIFIED",
            "INSTALLED"
          ],
          "type": "string"
        },
        "exemptedNamespaces": {
          "items": {
            "type": "string"
          },
          "description": "the set of namespaces to be exempted from the bundle",
          "type": "array"
        }
      }
    },
    "AuditLogConfig": {
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "properties": {
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
        },
        "logType": {
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ]
        }
      },
      "type": "object",
      "id": "AuditLogConfig"
    },
    "ConfigManagementHierarchyControllerConfig": {
      "properties": {
        "enabled": {
          "description": "Whether Hierarchy Controller is enabled in this cluster.",
          "type": "boolean"
        },
        "enableHierarchicalResourceQuota": {
          "type": "boolean",
          "description": "Whether hierarchical resource quota is enabled in this cluster."
        },
        "enablePodTreeLabels": {
          "type": "boolean",
          "description": "Whether pod tree labels are enabled in this cluster."
        }
      },
      "description": "Configuration for Hierarchy Controller",
      "type": "object",
      "id": "ConfigManagementHierarchyControllerConfig"
    },
    "Location": {
      "description": "A resource that represents a Google Cloud location.",
      "type": "object",
      "id": "Location",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        }
      }
    },
    "CommonFleetDefaultMemberConfigSpec": {
      "id": "CommonFleetDefaultMemberConfigSpec",
      "description": "CommonFleetDefaultMemberConfigSpec contains default configuration information for memberships of a fleet",
      "properties": {
        "identityservice": {
          "description": "Identity Service-specific spec.",
          "$ref": "IdentityServiceMembershipSpec"
        }
      },
      "type": "object"
    },
    "IdentityServiceAzureADConfig": {
      "id": "IdentityServiceAzureADConfig",
      "properties": {
        "encryptedClientSecret": {
          "type": "string",
          "description": "Output only. Encrypted AzureAD client secret.",
          "format": "byte",
          "readOnly": true
        },
        "clientId": {
          "description": "ID for the registered client application that makes authentication requests to the Azure AD identity provider.",
          "type": "string"
        },
        "clientSecret": {
          "description": "Input only. Unencrypted AzureAD client secret will be passed to the GKE Hub CLH.",
          "type": "string"
        },
        "tenant": {
          "type": "string",
          "description": "Kind of Azure AD account to be authenticated. Supported values are or for accounts belonging to a specific tenant."
        },
        "kubectlRedirectUri": {
          "type": "string",
          "description": "The redirect URL that kubectl uses for authorization."
        }
      },
      "type": "object",
      "description": "Configuration for the AzureAD Auth flow."
    },
    "ConfigManagementMembershipSpec": {
      "type": "object",
      "properties": {
        "configSync": {
          "description": "Config Sync configuration for the cluster.",
          "$ref": "ConfigManagementConfigSync"
        },
        "hierarchyController": {
          "description": "Hierarchy Controller configuration for the cluster.",
          "$ref": "ConfigManagementHierarchyControllerConfig"
        },
        "policyController": {
          "description": "Policy Controller configuration for the cluster.",
          "$ref": "ConfigManagementPolicyController"
        },
        "binauthz": {
          "$ref": "ConfigManagementBinauthzConfig",
          "description": "Binauthz conifguration for the cluster."
        },
        "version": {
          "description": "Version of ACM installed.",
          "type": "string"
        }
      },
      "id": "ConfigManagementMembershipSpec",
      "description": "**Anthos Config Management**: Configuration for a single cluster. Intended to parallel the ConfigManagement CR."
    },
    "FleetObservabilityFeatureSpec": {
      "type": "object",
      "description": "**Fleet Observability**: The Hub-wide input for the FleetObservability feature.",
      "properties": {
        "loggingConfig": {
          "description": "Specified if fleet logging feature is enabled for the entire fleet. If UNSPECIFIED, fleet logging feature is disabled for the entire fleet.",
          "$ref": "FleetObservabilityLoggingConfig"
        }
      },
      "id": "FleetObservabilityFeatureSpec"
    },
    "ListRBACRoleBindingsResponse": {
      "description": "List of RBACRoleBindings.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to request the next page of resources from the `ListRBACRoleBindings` method. The value of an empty string means that there are no more resources to return."
        },
        "rbacrolebindings": {
          "type": "array",
          "description": "The list of RBACRoleBindings",
          "items": {
            "$ref": "RBACRoleBinding"
          }
        }
      },
      "type": "object",
      "id": "ListRBACRoleBindingsResponse"
    },
    "ConfigManagementGroupVersionKind": {
      "id": "ConfigManagementGroupVersionKind",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kubernetes Kind"
        },
        "group": {
          "type": "string",
          "description": "Kubernetes Group"
        },
        "version": {
          "type": "string",
          "description": "Kubernetes Version"
        }
      },
      "description": "A Kubernetes object's GVK"
    },
    "FeatureState": {
      "description": "FeatureState describes the high-level state of a Feature. It may be used to describe a Feature's state at the environ-level, or per-membershop, depending on the context.",
      "type": "object",
      "id": "FeatureState",
      "properties": {
        "code": {
          "enum": [
            "CODE_UNSPECIFIED",
            "OK",
            "WARNING",
            "ERROR"
          ],
          "enumDescriptions": [
            "Unknown or not set.",
            "The Feature is operating normally.",
            "The Feature has encountered an issue, and is operating in a degraded state. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information.",
            "The Feature is not operating or is in a severely degraded state. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information."
          ],
          "description": "The high-level, machine-readable status of this Feature.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time this status and any related Feature-specific details were updated."
        },
        "description": {
          "description": "A human-readable description of the current status.",
          "type": "string"
        }
      }
    },
    "ConfigManagementPolicyControllerMonitoring": {
      "description": "PolicyControllerMonitoring specifies the backends Policy Controller should export metrics to. For example, to specify metrics should be exported to Cloud Monitoring and Prometheus, specify backends: [\"cloudmonitoring\", \"prometheus\"]",
      "id": "ConfigManagementPolicyControllerMonitoring",
      "properties": {
        "backends": {
          "items": {
            "enumDescriptions": [
              "Backend cannot be determined",
              "Prometheus backend for monitoring",
              "Stackdriver/Cloud Monitoring backend for monitoring"
            ],
            "enum": [
              "MONITORING_BACKEND_UNSPECIFIED",
              "PROMETHEUS",
              "CLOUD_MONITORING"
            ],
            "type": "string"
          },
          "type": "array",
          "description": "Specifies the list of backends Policy Controller will export to. An empty list would effectively disable metrics export."
        }
      },
      "type": "object"
    },
    "ConfigManagementSyncError": {
      "properties": {
        "code": {
          "description": "An ACM defined error code",
          "type": "string"
        },
        "errorResources": {
          "description": "A list of config(s) associated with the error, if any",
          "type": "array",
          "items": {
            "$ref": "ConfigManagementErrorResource"
          }
        },
        "errorMessage": {
          "type": "string",
          "description": "A description of the error"
        }
      },
      "type": "object",
      "id": "ConfigManagementSyncError",
      "description": "An ACM created error representing a problem syncing configurations"
    },
    "SetIamPolicyRequest": {
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "format": "google-fieldmask",
          "type": "string"
        },
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      },
      "id": "SetIamPolicyRequest"
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        }
      }
    },
    "ListFeaturesResponse": {
      "type": "object",
      "id": "ListFeaturesResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token to request the next page of resources from the `ListFeatures` method. The value of an empty string means that there are no more resources to return.",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "Feature"
          },
          "description": "The list of matching Features"
        }
      },
      "description": "Response message for the `GkeHub.ListFeatures` method."
    },
    "ConfigManagementManaged": {
      "id": "ConfigManagementManaged",
      "type": "object",
      "description": "Configuration for Managed Config Sync.",
      "properties": {
        "enabled": {
          "description": "Set to true to enable Managed Config Sync. Defaults to false which disables Managed Config Sync.",
          "type": "boolean"
        }
      }
    }
  },
  "ownerName": "Google",
  "title": "GKE Hub API",
  "parameters": {
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response.",
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    }
  },
  "ownerDomain": "google.com",
  "servicePath": "",
  "discoveryVersion": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version_module": true,
  "description": "",
  "canonicalName": "GKE Hub",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "baseUrl": "https://gkehub.googleapis.com/",
  "basePath": "",
  "id": "gkehub:v1beta",
  "fullyEncodeReservedExpansion": true,
  "kind": "discovery#restDescription",
  "protocol": "rest",
  "version": "v1beta",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "features": {
              "methods": {
                "list": {
                  "description": "Lists Features in a given project and location.",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/features",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1beta/{+parent}/features",
                  "parameters": {
                    "filter": {
                      "description": "Lists Features that match the filter expression, following the syntax outlined in https://google.aip.dev/160. Examples: - Feature with the name \"servicemesh\" in project \"foo-proj\": name = \"projects/foo-proj/locations/global/features/servicemesh\" - Features that have a label called `foo`: labels.foo:* - Features that have a label called `foo` whose value is `bar`: labels.foo = bar",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering.",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "Token returned by previous call to `ListFeatures` which specifies the position in the list from where to continue listing the resources.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent (project and location) where the Features will be listed. Specified in the format `projects/*/locations/*`.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "id": "gkehub.projects.locations.features.list",
                  "response": {
                    "$ref": "ListFeaturesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "parameters": {
                    "featureId": {
                      "description": "The ID of the feature to create.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent (project and location) where the Feature will be created. Specified in the format `projects/*/locations/*`.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1beta/{+parent}/features",
                  "description": "Adds a new Feature.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkehub.projects.locations.features.create",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/features",
                  "request": {
                    "$ref": "Feature"
                  }
                },
                "getIamPolicy": {
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "location": "query"
                    },
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:getIamPolicy",
                  "id": "gkehub.projects.locations.features.getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1beta/{+resource}:getIamPolicy",
                  "httpMethod": "GET"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkehub.projects.locations.features.get",
                  "description": "Gets details of a single Feature.",
                  "parameters": {
                    "name": {
                      "description": "Required. The Feature resource name in the format `projects/*/locations/*/features/*`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/features/{featuresId}",
                  "response": {
                    "$ref": "Feature"
                  },
                  "path": "v1beta/{+name}"
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/features/{featuresId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "gkehub.projects.locations.features.patch",
                  "path": "v1beta/{+name}",
                  "description": "Updates an existing Feature.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Mask of fields to update.",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. The Feature resource name in the format `projects/*/locations/*/features/*`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "Feature"
                  }
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "description": "Required. The Feature resource name in the format `projects/*/locations/*/features/*`.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "force": {
                      "description": "If set to true, the delete will ignore any outstanding resources for this Feature (that is, `FeatureState.has_resources` is set to true). These resources will NOT be cleaned up or modified in any way.",
                      "type": "boolean",
                      "location": "query"
                    }
                  },
                  "httpMethod": "DELETE",
                  "description": "Removes a Feature.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "gkehub.projects.locations.features.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/features/{featuresId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta/{+name}"
                },
                "setIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "httpMethod": "POST",
                  "id": "gkehub.projects.locations.features.setIamPolicy",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:setIamPolicy",
                  "path": "v1beta/{+resource}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "testIamPermissions": {
                  "id": "gkehub.projects.locations.features.testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "httpMethod": "POST",
                  "path": "v1beta/{+resource}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:testIamPermissions"
                }
              }
            },
            "operations": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "The standard list page size.",
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    }
                  },
                  "id": "gkehub.projects.locations.operations.list",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "httpMethod": "GET",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "path": "v1beta/{+name}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "path": "v1beta/{+name}",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "id": "gkehub.projects.locations.operations.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path"
                    }
                  },
                  "httpMethod": "DELETE",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "cancel": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "path": "v1beta/{+name}:cancel",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "id": "gkehub.projects.locations.operations.cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "path": "v1beta/{+name}",
                  "id": "gkehub.projects.locations.operations.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "GET",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "location": "path"
                    }
                  }
                }
              }
            },
            "scopes": {
              "methods": {
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a Scope.",
                  "httpMethod": "POST",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/scopes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1beta/{+parent}/scopes",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent (project and location) where the Scope will be created. Specified in the format `projects/*/locations/*`.",
                      "type": "string"
                    },
                    "scopeId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Client chosen ID for the Scope. `scope_id` must be a ????"
                    }
                  },
                  "id": "gkehub.projects.locations.scopes.create",
                  "request": {
                    "$ref": "Scope"
                  }
                },
                "get": {
                  "response": {
                    "$ref": "Scope"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "gkehub.projects.locations.scopes.get",
                  "path": "v1beta/{+name}",
                  "httpMethod": "GET",
                  "description": "Returns the details of a Scope.",
                  "parameters": {
                    "name": {
                      "description": "Required. The Scope resource name in the format `projects/*/locations/*/scopes/*`.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/scopes/[^/]+$",
                      "required": true
                    }
                  }
                },
                "patch": {
                  "path": "v1beta/{+name}",
                  "request": {
                    "$ref": "Scope"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/scopes/[^/]+$",
                      "location": "path",
                      "description": "The resource name for the scope `projects/{project}/locations/{location}/scopes/{scope}`"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Required. The fields to be updated.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates a scopes.",
                  "id": "gkehub.projects.locations.scopes.patch"
                },
                "list": {
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/scopes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "gkehub.projects.locations.scopes.list",
                  "response": {
                    "$ref": "ListScopesResponse"
                  },
                  "description": "Lists Scopes.",
                  "path": "v1beta/{+parent}/scopes",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent (project and location) where the Scope will be listed. Specified in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Optional. Token returned by previous call to `ListScopes` which specifies the position in the list from where to continue listing the resources.",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The Scope resource name in the format `projects/*/locations/*/scopes/*`.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/scopes/[^/]+$"
                    }
                  },
                  "path": "v1beta/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a Scope.",
                  "id": "gkehub.projects.locations.scopes.delete",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            },
            "memberships": {
              "methods": {
                "getIamPolicy": {
                  "response": {
                    "$ref": "Policy"
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:getIamPolicy",
                  "path": "v1beta/{+resource}:getIamPolicy",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    },
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "gkehub.projects.locations.memberships.getIamPolicy",
                  "httpMethod": "GET"
                },
                "testIamPermissions": {
                  "path": "v1beta/{+resource}:testIamPermissions",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                      "type": "string"
                    }
                  },
                  "id": "gkehub.projects.locations.memberships.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "httpMethod": "POST"
                },
                "setIamPolicy": {
                  "path": "v1beta/{+resource}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "gkehub.projects.locations.memberships.setIamPolicy",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                }
              },
              "resources": {
                "bindings": {
                  "methods": {
                    "create": {
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings",
                      "httpMethod": "POST",
                      "parameters": {
                        "membershipBindingId": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. The ID to use for the MembershipBinding."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. The parent (project and location) where the MembershipBinding will be created. Specified in the format `projects/*/locations/*/memberships/*`.",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "MembershipBinding"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "gkehub.projects.locations.memberships.bindings.create",
                      "description": "Creates a MembershipBinding.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta/{+parent}/bindings"
                    },
                    "list": {
                      "httpMethod": "GET",
                      "description": "Lists MembershipBindings.",
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. Token returned by previous call to `ListMembershipBindings` which specifies the position in the list from where to continue listing the resources."
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. The parent Membership for which the MembershipBindings will be listed. Specified in the format `projects/*/locations/*/memberships/*`.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                          "type": "string"
                        }
                      },
                      "id": "gkehub.projects.locations.memberships.bindings.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1beta/{+parent}/bindings",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings",
                      "response": {
                        "$ref": "ListMembershipBindingsResponse"
                      }
                    },
                    "get": {
                      "httpMethod": "GET",
                      "path": "v1beta/{+name}",
                      "parameters": {
                        "name": {
                          "description": "Required. The MembershipBinding resource name in the format `projects/*/locations/*/memberships/*/bindings/*`.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+/bindings/[^/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "MembershipBinding"
                      },
                      "id": "gkehub.projects.locations.memberships.bindings.get",
                      "description": "Returns the details of a MembershipBinding.",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings/{bindingsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "description": "Required. The MembershipBinding resource name in the format `projects/*/locations/*/memberships/*/bindings/*`.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+/bindings/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "gkehub.projects.locations.memberships.bindings.delete",
                      "description": "Deletes a MembershipBinding.",
                      "path": "v1beta/{+name}",
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings/{bindingsId}"
                    },
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta/{+name}",
                      "request": {
                        "$ref": "MembershipBinding"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings/{bindingsId}",
                      "parameters": {
                        "updateMask": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. The fields to be updated.",
                          "format": "google-fieldmask"
                        },
                        "name": {
                          "description": "The resource name for the membershipbinding itself `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+/bindings/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "gkehub.projects.locations.memberships.bindings.patch",
                      "description": "Updates a MembershipBinding.",
                      "httpMethod": "PATCH"
                    }
                  }
                }
              }
            },
            "fleets": {
              "methods": {
                "get": {
                  "path": "v1beta/{+name}",
                  "id": "gkehub.projects.locations.fleets.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/fleets/[^/]+$",
                      "required": true,
                      "description": "Required. The Fleet resource name in the format `projects/*/locations/*/fleets/*`.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Returns the details of a fleet.",
                  "response": {
                    "$ref": "Fleet"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/fleets/{fleetsId}"
                },
                "patch": {
                  "id": "gkehub.projects.locations.fleets.patch",
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Output only. The full, unique resource name of this fleet in the format of `projects/{project}/locations/{location}/fleets/{fleet}`. Each Google Cloud project can have at most one fleet resource, named \"default\".",
                      "pattern": "^projects/[^/]+/locations/[^/]+/fleets/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "updateMask": {
                      "description": "Required. The fields to be updated;",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/fleets/{fleetsId}",
                  "description": "Updates a fleet.",
                  "request": {
                    "$ref": "Fleet"
                  }
                },
                "delete": {
                  "path": "v1beta/{+name}",
                  "id": "gkehub.projects.locations.fleets.delete",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/fleets/{fleetsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/fleets/[^/]+$",
                      "type": "string",
                      "description": "Required. The Fleet resource name in the format `projects/*/locations/*/fleets/*`.",
                      "required": true
                    }
                  },
                  "description": "Removes a Fleet. There must be no memberships remaining in the Fleet.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "description": "Creates a fleet.",
                  "request": {
                    "$ref": "Fleet"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/fleets",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "gkehub.projects.locations.fleets.create",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent (project and location) where the Fleet will be created. Specified in the format `projects/*/locations/*`."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta/{+parent}/fleets"
                },
                "list": {
                  "id": "gkehub.projects.locations.fleets.list",
                  "path": "v1beta/{+parent}/fleets",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListFleetsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/fleets",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. The maximum number of fleets to return. The service may return fewer than this value. If unspecified, at most 200 fleets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A page token, received from a previous `ListFleets` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListFleets` must match the call that provided the page token."
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The organization or project to list for Fleets under, in the format `organizations/*/locations/*` or `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "description": "Returns all fleets within an organization or a project that the caller has access to."
                }
              }
            },
            "namespaces": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListNamespacesResponse"
                  },
                  "path": "v1beta/{+parent}/namespaces",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Token returned by previous call to `ListFeatures` which specifies the position in the list from where to continue listing the resources."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent (project and location) where the Features will be listed. Specified in the format `projects/*/locations/*`.",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    }
                  },
                  "id": "gkehub.projects.locations.namespaces.list",
                  "httpMethod": "GET",
                  "description": "Lists fleet namespaces.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "patch": {
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkehub.projects.locations.namespaces.patch",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+$",
                      "description": "The resource name for the namespace `projects/{project}/locations/{location}/namespaces/{namespace}`"
                    },
                    "updateMask": {
                      "description": "Required. The fields to be updated.",
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "Namespace"
                  },
                  "path": "v1beta/{+name}",
                  "description": "Updates a fleet namespace.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "id": "gkehub.projects.locations.namespaces.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}",
                  "httpMethod": "DELETE",
                  "path": "v1beta/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. The Namespace resource name in the format `projects/*/locations/*/namespaces/*`.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a fleet namespace."
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a fleet namespace.",
                  "path": "v1beta/{+parent}/namespaces",
                  "id": "gkehub.projects.locations.namespaces.create",
                  "request": {
                    "$ref": "Namespace"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent (project and location) where the Namespace will be created. Specified in the format `projects/*/locations/*`.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "namespaceId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Client chosen ID for the Namespace. `namespace_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Namespace"
                  },
                  "id": "gkehub.projects.locations.namespaces.get",
                  "path": "v1beta/{+name}",
                  "description": "Returns the details of a fleet namespace.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+$",
                      "description": "Required. The Namespace resource name in the format `projects/*/locations/*/namespaces/*`.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}"
                }
              },
              "resources": {
                "rbacrolebindings": {
                  "methods": {
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "gkehub.projects.locations.namespaces.rbacrolebindings.patch",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "updateMask": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. The fields to be updated.",
                          "format": "google-fieldmask"
                        },
                        "name": {
                          "description": "The resource name for the rbacrolebinding `projects/{project}/locations/{location}/namespaces/{namespace}/rbacrolebindings/{rbacrolebinding}` or `projects/{project}/locations/{location}/memberships/{membership}/rbacrolebindings/{rbacrolebinding}`",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+/rbacrolebindings/[^/]+$"
                        }
                      },
                      "request": {
                        "$ref": "RBACRoleBinding"
                      },
                      "description": "Updates a RBACRoleBinding.",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/rbacrolebindings/{rbacrolebindingsId}",
                      "path": "v1beta/{+name}"
                    },
                    "delete": {
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/rbacrolebindings/{rbacrolebindingsId}",
                      "id": "gkehub.projects.locations.namespaces.rbacrolebindings.delete",
                      "httpMethod": "DELETE",
                      "path": "v1beta/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+/rbacrolebindings/[^/]+$",
                          "type": "string",
                          "description": "Required. The RBACRoleBinding resource name in the format `projects/*/locations/*/namespaces/*/rbacrolebindings/*`.",
                          "location": "path",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Deletes a RBACRoleBinding.",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "response": {
                        "$ref": "ListRBACRoleBindingsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageToken": {
                          "description": "Optional. Token returned by previous call to `ListRBACRoleBindings` which specifies the position in the list from where to continue listing the resources.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+$",
                          "location": "path",
                          "description": "Required. The parent (project and location) where the Features will be listed. Specified in the format `projects/*/locations/*/namespaces/*`.",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "description": "Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                          "format": "int32"
                        }
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/rbacrolebindings",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "path": "v1beta/{+parent}/rbacrolebindings",
                      "id": "gkehub.projects.locations.namespaces.rbacrolebindings.list",
                      "description": "Lists RBACRoleBinding."
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Returns the details of a RBACRoleBinding.",
                      "id": "gkehub.projects.locations.namespaces.rbacrolebindings.get",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/rbacrolebindings/{rbacrolebindingsId}",
                      "parameters": {
                        "name": {
                          "description": "Required. The RBACRoleBinding resource name in the format `projects/*/locations/*/namespaces/*/rbacrolebindings/*`.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+/rbacrolebindings/[^/]+$",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "path": "v1beta/{+name}",
                      "response": {
                        "$ref": "RBACRoleBinding"
                      }
                    },
                    "create": {
                      "httpMethod": "POST",
                      "description": "Creates a RBACRoleBinding.",
                      "id": "gkehub.projects.locations.namespaces.rbacrolebindings.create",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent (project and location) where the RBACRoleBinding will be created. Specified in the format `projects/*/locations/*/namespaces/*`.",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+$"
                        },
                        "rbacrolebindingId": {
                          "location": "query",
                          "description": "Required. Client chosen ID for the RBACRoleBinding. `rbacrolebinding_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters.",
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "RBACRoleBinding"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/rbacrolebindings",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1beta/{+parent}/rbacrolebindings"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "list": {
              "flatPath": "v1beta/projects/{projectsId}/locations",
              "path": "v1beta/{+name}/locations",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "location": "path"
                },
                "filter": {
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query"
                }
              },
              "id": "gkehub.projects.locations.list",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "description": "Gets information about a location.",
              "httpMethod": "GET",
              "id": "gkehub.projects.locations.get",
              "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "description": "Resource name for the location.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "path": "v1beta/{+name}"
            }
          }
        }
      }
    },
    "organizations": {
      "resources": {
        "locations": {
          "resources": {
            "fleets": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListFleetsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Returns all fleets within an organization or a project that the caller has access to.",
                  "path": "v1beta/{+parent}/fleets",
                  "id": "gkehub.organizations.locations.fleets.list",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "Optional. A page token, received from a previous `ListFleets` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListFleets` must match the call that provided the page token.",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The organization or project to list for Fleets under, in the format `organizations/*/locations/*` or `projects/*/locations/*`.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Optional. The maximum number of fleets to return. The service may return fewer than this value. If unspecified, at most 200 fleets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1beta/organizations/{organizationsId}/locations/{locationsId}/fleets"
                }
              }
            }
          }
        }
      }
    }
  },
  "documentationLink": "https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster",
  "name": "gkehub",
  "batchPath": "batch",
  "mtlsRootUrl": "https://gkehub.mtls.googleapis.com/",
  "rootUrl": "https://gkehub.googleapis.com/",
  "revision": "20230424"
}

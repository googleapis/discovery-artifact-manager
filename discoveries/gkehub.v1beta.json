{
  "mtlsRootUrl": "https://gkehub.mtls.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "namespaces": {
              "resources": {
                "rbacrolebindings": {
                  "methods": {
                    "create": {
                      "description": "Creates a RBACRoleBinding.",
                      "parameters": {
                        "rbacrolebindingId": {
                          "type": "string",
                          "description": "Required. Client chosen ID for the RBACRoleBinding. `rbacrolebinding_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters.",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "type": "string",
                          "description": "Required. The parent (project and location) where the RBACRoleBinding will be created. Specified in the format `projects/*/locations/*/namespaces/*`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+$",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "gkehub.projects.locations.namespaces.rbacrolebindings.create",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/rbacrolebindings",
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1beta/{+parent}/rbacrolebindings",
                      "request": {
                        "$ref": "RBACRoleBinding"
                      }
                    },
                    "list": {
                      "id": "gkehub.projects.locations.namespaces.rbacrolebindings.list",
                      "path": "v1beta/{+parent}/rbacrolebindings",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/rbacrolebindings",
                      "description": "Lists RBACRoleBinding.",
                      "response": {
                        "$ref": "ListRBACRoleBindingsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The parent (project and location) where the Features will be listed. Specified in the format `projects/*/locations/*/namespaces/*`."
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                          "format": "int32"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Optional. Token returned by previous call to `ListRBACRoleBindings` which specifies the position in the list from where to continue listing the resources.",
                          "location": "query"
                        }
                      }
                    },
                    "get": {
                      "response": {
                        "$ref": "RBACRoleBinding"
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+/rbacrolebindings/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. The RBACRoleBinding resource name in the format `projects/*/locations/*/namespaces/*/rbacrolebindings/*`."
                        }
                      },
                      "id": "gkehub.projects.locations.namespaces.rbacrolebindings.get",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/rbacrolebindings/{rbacrolebindingsId}",
                      "description": "Returns the details of a RBACRoleBinding.",
                      "path": "v1beta/{+name}"
                    },
                    "patch": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "PATCH",
                      "parameters": {
                        "updateMask": {
                          "location": "query",
                          "format": "google-fieldmask",
                          "description": "Required. The fields to be updated.",
                          "type": "string"
                        },
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+/rbacrolebindings/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "The resource name for the rbacrolebinding `projects/{project}/locations/{location}/namespaces/{namespace}/rbacrolebindings/{rbacrolebinding}` or `projects/{project}/locations/{location}/memberships/{membership}/rbacrolebindings/{rbacrolebinding}`"
                        }
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/rbacrolebindings/{rbacrolebindingsId}",
                      "id": "gkehub.projects.locations.namespaces.rbacrolebindings.patch",
                      "path": "v1beta/{+name}",
                      "request": {
                        "$ref": "RBACRoleBinding"
                      },
                      "description": "Updates a RBACRoleBinding."
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The RBACRoleBinding resource name in the format `projects/*/locations/*/namespaces/*/rbacrolebindings/*`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+/rbacrolebindings/[^/]+$"
                        }
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/rbacrolebindings/{rbacrolebindingsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "path": "v1beta/{+name}",
                      "id": "gkehub.projects.locations.namespaces.rbacrolebindings.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Deletes a RBACRoleBinding."
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "Optional. Token returned by previous call to `ListFeatures` which specifies the position in the list from where to continue listing the resources.",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent (project and location) where the Features will be listed. Specified in the format `projects/*/locations/*`."
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                      "location": "query",
                      "format": "int32"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists fleet namespaces.",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces",
                  "path": "v1beta/{+parent}/namespaces",
                  "id": "gkehub.projects.locations.namespaces.list",
                  "response": {
                    "$ref": "ListNamespacesResponse"
                  }
                },
                "delete": {
                  "id": "gkehub.projects.locations.namespaces.delete",
                  "httpMethod": "DELETE",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The Namespace resource name in the format `projects/*/locations/*/namespaces/*`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+$",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a fleet namespace.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta/{+name}"
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1beta/{+parent}/namespaces",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a fleet namespace.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "gkehub.projects.locations.namespaces.create",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent (project and location) where the Namespace will be created. Specified in the format `projects/*/locations/*`."
                    },
                    "namespaceId": {
                      "description": "Required. Client chosen ID for the Namespace. `namespace_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "Namespace"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces"
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Required. The fields to be updated.",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The resource name for the namespace `projects/{project}/locations/{location}/namespaces/{namespace}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "Namespace"
                  },
                  "httpMethod": "PATCH",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "gkehub.projects.locations.namespaces.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates a fleet namespace.",
                  "path": "v1beta/{+name}"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Namespace"
                  },
                  "id": "gkehub.projects.locations.namespaces.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The Namespace resource name in the format `projects/*/locations/*/namespaces/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/namespaces/[^/]+$",
                      "location": "path"
                    }
                  },
                  "path": "v1beta/{+name}",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}",
                  "httpMethod": "GET",
                  "description": "Returns the details of a fleet namespace."
                }
              }
            },
            "scopes": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists Scopes.",
                  "id": "gkehub.projects.locations.scopes.list",
                  "path": "v1beta/{+parent}/scopes",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "Optional. Token returned by previous call to `ListScopes` which specifies the position in the list from where to continue listing the resources.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent (project and location) where the Scope will be listed. Specified in the format `projects/*/locations/*`.",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/scopes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListScopesResponse"
                  }
                },
                "get": {
                  "path": "v1beta/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/scopes/[^/]+$",
                      "type": "string",
                      "description": "Required. The Scope resource name in the format `projects/*/locations/*/scopes/*`."
                    }
                  },
                  "id": "gkehub.projects.locations.scopes.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}",
                  "response": {
                    "$ref": "Scope"
                  },
                  "httpMethod": "GET",
                  "description": "Returns the details of a Scope."
                },
                "setIamPolicy": {
                  "path": "v1beta/{+resource}:setIamPolicy",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/scopes/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "id": "gkehub.projects.locations.scopes.setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:testIamPermissions",
                  "path": "v1beta/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/scopes/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "id": "gkehub.projects.locations.scopes.testIamPermissions",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  }
                },
                "create": {
                  "httpMethod": "POST",
                  "id": "gkehub.projects.locations.scopes.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1beta/{+parent}/scopes",
                  "description": "Creates a Scope.",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent (project and location) where the Scope will be created. Specified in the format `projects/*/locations/*`."
                    },
                    "scopeId": {
                      "description": "Required. Client chosen ID for the Scope. `scope_id` must be a ????",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/scopes",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Scope"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Required. The fields to be updated.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The resource name for the scope `projects/{project}/locations/{location}/scopes/{scope}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/scopes/[^/]+$"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkehub.projects.locations.scopes.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Scope"
                  },
                  "description": "Updates a scopes.",
                  "path": "v1beta/{+name}"
                },
                "getIamPolicy": {
                  "id": "gkehub.projects.locations.scopes.getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32"
                    },
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/scopes/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta/{+resource}:getIamPolicy"
                },
                "delete": {
                  "id": "gkehub.projects.locations.scopes.delete",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/scopes/[^/]+$",
                      "description": "Required. The Scope resource name in the format `projects/*/locations/*/scopes/*`.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a Scope.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta/{+name}",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}"
                }
              }
            },
            "memberships": {
              "resources": {
                "bindings": {
                  "methods": {
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "gkehub.projects.locations.memberships.bindings.delete",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes a MembershipBinding.",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings/{bindingsId}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+/bindings/[^/]+$",
                          "description": "Required. The MembershipBinding resource name in the format `projects/*/locations/*/memberships/*/bindings/*`.",
                          "location": "path"
                        }
                      },
                      "httpMethod": "DELETE",
                      "path": "v1beta/{+name}"
                    },
                    "create": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "MembershipBinding"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "membershipBindingId": {
                          "description": "Required. The ID to use for the MembershipBinding.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "description": "Required. The parent (project and location) where the MembershipBinding will be created. Specified in the format `projects/*/locations/*/memberships/*`.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$"
                        }
                      },
                      "path": "v1beta/{+parent}/bindings",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings",
                      "id": "gkehub.projects.locations.memberships.bindings.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a MembershipBinding."
                    },
                    "patch": {
                      "id": "gkehub.projects.locations.memberships.bindings.patch",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "PATCH",
                      "path": "v1beta/{+name}",
                      "request": {
                        "$ref": "MembershipBinding"
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings/{bindingsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Updates a MembershipBinding.",
                      "parameters": {
                        "updateMask": {
                          "description": "Required. The fields to be updated.",
                          "location": "query",
                          "format": "google-fieldmask",
                          "type": "string"
                        },
                        "name": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+/bindings/[^/]+$",
                          "description": "The resource name for the membershipbinding itself `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`"
                        }
                      }
                    },
                    "list": {
                      "path": "v1beta/{+parent}/bindings",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "gkehub.projects.locations.memberships.bindings.list",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "filter": {
                          "description": "Optional. Lists MembershipBindings that match the filter expression, following the syntax outlined in https://google.aip.dev/160.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "description": "Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                          "type": "integer"
                        },
                        "parent": {
                          "description": "Required. The parent Membership for which the MembershipBindings will be listed. Specified in the format `projects/*/locations/*/memberships/*`.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                          "location": "path"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Optional. Token returned by previous call to `ListMembershipBindings` which specifies the position in the list from where to continue listing the resources.",
                          "location": "query"
                        }
                      },
                      "description": "Lists MembershipBindings.",
                      "response": {
                        "$ref": "ListMembershipBindingsResponse"
                      }
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+/bindings/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The MembershipBinding resource name in the format `projects/*/locations/*/memberships/*/bindings/*`.",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings/{bindingsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "MembershipBinding"
                      },
                      "description": "Returns the details of a MembershipBinding.",
                      "id": "gkehub.projects.locations.memberships.bindings.get",
                      "httpMethod": "GET",
                      "path": "v1beta/{+name}"
                    }
                  }
                }
              },
              "methods": {
                "getIamPolicy": {
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta/{+resource}:getIamPolicy",
                  "id": "gkehub.projects.locations.memberships.getIamPolicy",
                  "httpMethod": "GET"
                },
                "setIamPolicy": {
                  "path": "v1beta/{+resource}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "id": "gkehub.projects.locations.memberships.setIamPolicy",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "httpMethod": "POST"
                },
                "testIamPermissions": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "id": "gkehub.projects.locations.memberships.testIamPermissions",
                  "path": "v1beta/{+resource}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$"
                    }
                  }
                }
              }
            },
            "fleets": {
              "methods": {
                "list": {
                  "description": "Returns all fleets within an organization or a project that the caller has access to.",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "description": "Optional. A page token, received from a previous `ListFleets` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListFleets` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum number of fleets to return. The service may return fewer than this value. If unspecified, at most 200 fleets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The organization or project to list for Fleets under, in the format `organizations/*/locations/*` or `projects/*/locations/*`.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/fleets",
                  "response": {
                    "$ref": "ListFleetsResponse"
                  },
                  "id": "gkehub.projects.locations.fleets.list",
                  "path": "v1beta/{+parent}/fleets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "patch": {
                  "id": "gkehub.projects.locations.fleets.patch",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/fleets/[^/]+$",
                      "location": "path",
                      "description": "Output only. The full, unique resource name of this fleet in the format of `projects/{project}/locations/{location}/fleets/{fleet}`. Each Google Cloud project can have at most one fleet resource, named \"default\".",
                      "required": true
                    },
                    "updateMask": {
                      "description": "Required. The fields to be updated;",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/fleets/{fleetsId}",
                  "request": {
                    "$ref": "Fleet"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates a fleet.",
                  "path": "v1beta/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "id": "gkehub.projects.locations.fleets.delete",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Removes a Fleet. There must be no memberships remaining in the Fleet.",
                  "path": "v1beta/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The Fleet resource name in the format `projects/*/locations/*/fleets/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/fleets/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/fleets/{fleetsId}"
                },
                "get": {
                  "description": "Returns the details of a fleet.",
                  "response": {
                    "$ref": "Fleet"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "gkehub.projects.locations.fleets.get",
                  "path": "v1beta/{+name}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The Fleet resource name in the format `projects/*/locations/*/fleets/*`.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/fleets/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/fleets/{fleetsId}"
                },
                "create": {
                  "id": "gkehub.projects.locations.fleets.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/fleets",
                  "path": "v1beta/{+parent}/fleets",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Fleet"
                  },
                  "description": "Creates a fleet.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent (project and location) where the Fleet will be created. Specified in the format `projects/*/locations/*`."
                    }
                  }
                }
              }
            },
            "features": {
              "methods": {
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Adds a new Feature.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Feature"
                  },
                  "id": "gkehub.projects.locations.features.create",
                  "path": "v1beta/{+parent}/features",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/features",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "featureId": {
                      "type": "string",
                      "location": "query",
                      "description": "The ID of the feature to create."
                    },
                    "requestId": {
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent (project and location) where the Feature will be created. Specified in the format `projects/*/locations/*`.",
                      "location": "path"
                    }
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/features/{featuresId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkehub.projects.locations.features.delete",
                  "path": "v1beta/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Removes a Feature.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "description": "Required. The Feature resource name in the format `projects/*/locations/*/features/*`.",
                      "location": "path"
                    },
                    "force": {
                      "description": "If set to true, the delete will ignore any outstanding resources for this Feature (that is, `FeatureState.has_resources` is set to true). These resources will NOT be cleaned up or modified in any way.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    }
                  }
                },
                "getIamPolicy": {
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32"
                    },
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:getIamPolicy",
                  "path": "v1beta/{+resource}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkehub.projects.locations.features.getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "setIamPolicy": {
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "gkehub.projects.locations.features.setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "path": "v1beta/{+resource}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:setIamPolicy"
                },
                "patch": {
                  "request": {
                    "$ref": "Feature"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. The Feature resource name in the format `projects/*/locations/*/features/*`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "Mask of fields to update.",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "id": "gkehub.projects.locations.features.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates an existing Feature.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/features/{featuresId}",
                  "httpMethod": "PATCH",
                  "path": "v1beta/{+name}"
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "id": "gkehub.projects.locations.features.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1beta/{+resource}:testIamPermissions",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:testIamPermissions"
                },
                "get": {
                  "id": "gkehub.projects.locations.features.get",
                  "response": {
                    "$ref": "Feature"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The Feature resource name in the format `projects/*/locations/*/features/*`",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets details of a single Feature.",
                  "path": "v1beta/{+name}",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/features/{featuresId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "parameters": {
                    "filter": {
                      "description": "Lists Features that match the filter expression, following the syntax outlined in https://google.aip.dev/160. Examples: - Feature with the name \"servicemesh\" in project \"foo-proj\": name = \"projects/foo-proj/locations/global/features/servicemesh\" - Features that have a label called `foo`: labels.foo:* - Features that have a label called `foo` whose value is `bar`: labels.foo = bar",
                      "type": "string",
                      "location": "query"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering.",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Token returned by previous call to `ListFeatures` which specifies the position in the list from where to continue listing the resources.",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent (project and location) where the Features will be listed. Specified in the format `projects/*/locations/*`.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    }
                  },
                  "response": {
                    "$ref": "ListFeaturesResponse"
                  },
                  "path": "v1beta/{+parent}/features",
                  "description": "Lists Features in a given project and location.",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/features",
                  "id": "gkehub.projects.locations.features.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET"
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "id": "gkehub.projects.locations.operations.delete",
                  "path": "v1beta/{+name}",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "path": "v1beta/{+name}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The standard list page size.",
                      "type": "integer",
                      "location": "query"
                    },
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "id": "gkehub.projects.locations.operations.list",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET"
                },
                "cancel": {
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "id": "gkehub.projects.locations.operations.cancel",
                  "path": "v1beta/{+name}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "get": {
                  "id": "gkehub.projects.locations.operations.get",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta/{+name}"
                }
              }
            }
          },
          "methods": {
            "get": {
              "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}",
              "description": "Gets information about a location.",
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "gkehub.projects.locations.get",
              "httpMethod": "GET",
              "path": "v1beta/{+name}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location."
                }
              }
            },
            "list": {
              "flatPath": "v1beta/projects/{projectsId}/locations",
              "id": "gkehub.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "filter": {
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                }
              },
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service.",
              "path": "v1beta/{+name}/locations"
            }
          }
        }
      }
    },
    "organizations": {
      "resources": {
        "locations": {
          "resources": {
            "fleets": {
              "methods": {
                "list": {
                  "id": "gkehub.organizations.locations.fleets.list",
                  "response": {
                    "$ref": "ListFleetsResponse"
                  },
                  "description": "Returns all fleets within an organization or a project that the caller has access to.",
                  "flatPath": "v1beta/organizations/{organizationsId}/locations/{locationsId}/fleets",
                  "path": "v1beta/{+parent}/fleets",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "Optional. The maximum number of fleets to return. The service may return fewer than this value. If unspecified, at most 200 fleets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parent": {
                      "description": "Required. The organization or project to list for Fleets under, in the format `organizations/*/locations/*` or `projects/*/locations/*`.",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Optional. A page token, received from a previous `ListFleets` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListFleets` must match the call that provided the page token.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerName": "Google",
  "name": "gkehub",
  "kind": "discovery#restDescription",
  "description": "",
  "schemas": {
    "ConfigManagementOperatorState": {
      "type": "object",
      "description": "State information for an ACM's Operator",
      "id": "ConfigManagementOperatorState",
      "properties": {
        "version": {
          "description": "The semenatic version number of the operator",
          "type": "string"
        },
        "deploymentState": {
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "The state of the Operator's deployment",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string"
        },
        "errors": {
          "description": "Install errors.",
          "type": "array",
          "items": {
            "$ref": "ConfigManagementInstallError"
          }
        }
      }
    },
    "ConfigManagementPolicyControllerMonitoring": {
      "properties": {
        "backends": {
          "description": "Specifies the list of backends Policy Controller will export to. An empty list would effectively disable metrics export.",
          "items": {
            "enumDescriptions": [
              "Backend cannot be determined",
              "Prometheus backend for monitoring",
              "Stackdriver/Cloud Monitoring backend for monitoring"
            ],
            "enum": [
              "MONITORING_BACKEND_UNSPECIFIED",
              "PROMETHEUS",
              "CLOUD_MONITORING"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "PolicyControllerMonitoring specifies the backends Policy Controller should export metrics to. For example, to specify metrics should be exported to Cloud Monitoring and Prometheus, specify backends: [\"cloudmonitoring\", \"prometheus\"]",
      "type": "object",
      "id": "ConfigManagementPolicyControllerMonitoring"
    },
    "PolicyControllerPolicyControllerDeploymentConfig": {
      "id": "PolicyControllerPolicyControllerDeploymentConfig",
      "description": "Deployment-specific configuration.",
      "properties": {
        "podAntiAffinity": {
          "description": "Pod anti-affinity enablement.",
          "type": "boolean"
        },
        "podTolerations": {
          "items": {
            "$ref": "PolicyControllerToleration"
          },
          "type": "array",
          "description": "Pod tolerations of node taints."
        },
        "containerResources": {
          "$ref": "PolicyControllerResourceRequirements",
          "description": "Container resource requirements."
        },
        "replicaCount": {
          "description": "Pod replica count.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Status": {
      "type": "object",
      "description": "Status specifies state for the subcomponent.",
      "id": "Status",
      "properties": {
        "code": {
          "description": "Code specifies AppDevExperienceFeature's subcomponent ready state.",
          "enum": [
            "CODE_UNSPECIFIED",
            "OK",
            "FAILED",
            "UNKNOWN"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "AppDevExperienceFeature's specified subcomponent is ready.",
            "AppDevExperienceFeature's specified subcomponent ready state is false. This means AppDevExperienceFeature has encountered an issue that blocks all, or a portion, of its normal operation. See the `description` for more details.",
            "AppDevExperienceFeature's specified subcomponent has a pending or unknown state."
          ]
        },
        "description": {
          "type": "string",
          "description": "Description is populated if Code is Failed, explaining why it has failed."
        }
      }
    },
    "MembershipFeatureState": {
      "id": "MembershipFeatureState",
      "type": "object",
      "description": "MembershipFeatureState contains Feature status information for a single Membership.",
      "properties": {
        "state": {
          "description": "The high-level state of this Feature for a single membership.",
          "$ref": "FeatureState"
        },
        "policycontroller": {
          "description": "Policycontroller-specific state.",
          "$ref": "PolicyControllerMembershipState"
        },
        "fleetobservability": {
          "description": "Fleet observability membership state.",
          "$ref": "FleetObservabilityMembershipState"
        },
        "configmanagement": {
          "$ref": "ConfigManagementMembershipState",
          "description": "Config Management-specific state."
        },
        "identityservice": {
          "$ref": "IdentityServiceMembershipState",
          "description": "Identity Service-specific state."
        },
        "appdevexperience": {
          "$ref": "AppDevExperienceFeatureState",
          "description": "Appdevexperience specific state."
        },
        "metering": {
          "$ref": "MeteringMembershipState",
          "description": "Metering-specific state."
        },
        "servicemesh": {
          "description": "Service Mesh-specific state.",
          "$ref": "ServiceMeshMembershipState"
        }
      }
    },
    "FleetObservabilityMembershipState": {
      "description": "**FleetObservability**: Membership-specific Feature state for fleetobservability.",
      "type": "object",
      "properties": {},
      "id": "FleetObservabilityMembershipState"
    },
    "TestIamPermissionsResponse": {
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
        }
      },
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object"
    },
    "ConfigManagementHierarchyControllerVersion": {
      "description": "Version for Hierarchy Controller",
      "type": "object",
      "properties": {
        "hnc": {
          "description": "Version for open source HNC",
          "type": "string"
        },
        "extension": {
          "type": "string",
          "description": "Version for Hierarchy Controller extension"
        }
      },
      "id": "ConfigManagementHierarchyControllerVersion"
    },
    "ConfigManagementPolicyControllerVersion": {
      "id": "ConfigManagementPolicyControllerVersion",
      "properties": {
        "version": {
          "type": "string",
          "description": "The gatekeeper image tag that is composed of ACM version, git tag, build number."
        }
      },
      "type": "object",
      "description": "The build version of Gatekeeper Policy Controller is using."
    },
    "Scope": {
      "properties": {
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. When the scope was last updated."
        },
        "allMemberships": {
          "description": "If true, all Memberships in the Fleet bind to this Scope.",
          "type": "boolean"
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. Google-generated UUID for this resource. This is unique across all scope resources. If a scope resource is deleted and another resource with the same name is created, it gets a different uid.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. When the scope was created.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "name": {
          "description": "The resource name for the scope `projects/{project}/locations/{location}/scopes/{scope}`",
          "type": "string"
        },
        "deleteTime": {
          "type": "string",
          "description": "Output only. When the scope was deleted.",
          "format": "google-datetime",
          "readOnly": true
        },
        "state": {
          "description": "Output only. State of the scope resource.",
          "readOnly": true,
          "$ref": "ScopeLifecycleState"
        }
      },
      "id": "Scope",
      "type": "object",
      "description": "Scope represents a Scope in a Fleet."
    },
    "ConfigManagementHierarchyControllerState": {
      "description": "State for Hierarchy Controller",
      "type": "object",
      "properties": {
        "state": {
          "$ref": "ConfigManagementHierarchyControllerDeploymentState",
          "description": "The deployment state for Hierarchy Controller"
        },
        "version": {
          "description": "The version for Hierarchy Controller",
          "$ref": "ConfigManagementHierarchyControllerVersion"
        }
      },
      "id": "ConfigManagementHierarchyControllerState"
    },
    "ConfigManagementConfigSyncVersion": {
      "id": "ConfigManagementConfigSyncVersion",
      "properties": {
        "reconcilerManager": {
          "type": "string",
          "description": "Version of the deployed reconciler-manager pod"
        },
        "gitSync": {
          "type": "string",
          "description": "Version of the deployed git-sync pod"
        },
        "importer": {
          "description": "Version of the deployed importer pod",
          "type": "string"
        },
        "syncer": {
          "type": "string",
          "description": "Version of the deployed syncer pod"
        },
        "admissionWebhook": {
          "description": "Version of the deployed admission_webhook pod",
          "type": "string"
        },
        "monitor": {
          "type": "string",
          "description": "Version of the deployed monitor pod"
        },
        "rootReconciler": {
          "description": "Version of the deployed reconciler container in root-reconciler pod",
          "type": "string"
        }
      },
      "description": "Specific versioning information pertaining to ConfigSync's Pods",
      "type": "object"
    },
    "PolicyControllerResourceList": {
      "type": "object",
      "id": "PolicyControllerResourceList",
      "properties": {
        "memory": {
          "type": "string",
          "description": "Memory requirement expressed in Kubernetes resource units."
        },
        "cpu": {
          "description": "CPU requirement expressed in Kubernetes resource units.",
          "type": "string"
        }
      },
      "description": "ResourceList contains container resource requirements."
    },
    "ConfigManagementGatekeeperDeploymentState": {
      "type": "object",
      "properties": {
        "gatekeeperControllerManagerState": {
          "description": "Status of gatekeeper-controller-manager pod.",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "gatekeeperMutation": {
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "Status of the pod serving the mutation webhook."
        },
        "gatekeeperAudit": {
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "Status of gatekeeper-audit deployment.",
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        }
      },
      "id": "ConfigManagementGatekeeperDeploymentState",
      "description": "State of Policy Controller installation."
    },
    "ConfigManagementHierarchyControllerConfig": {
      "type": "object",
      "id": "ConfigManagementHierarchyControllerConfig",
      "description": "Configuration for Hierarchy Controller",
      "properties": {
        "enablePodTreeLabels": {
          "type": "boolean",
          "description": "Whether pod tree labels are enabled in this cluster."
        },
        "enableHierarchicalResourceQuota": {
          "description": "Whether hierarchical resource quota is enabled in this cluster.",
          "type": "boolean"
        },
        "enabled": {
          "description": "Whether Hierarchy Controller is enabled in this cluster.",
          "type": "boolean"
        }
      }
    },
    "PolicyControllerMembershipSpec": {
      "properties": {
        "policyControllerHubConfig": {
          "$ref": "PolicyControllerHubConfig",
          "description": "Policy Controller configuration for the cluster."
        },
        "version": {
          "description": "Version of Policy Controller installed.",
          "type": "string"
        }
      },
      "description": "**Policy Controller**: Configuration for a single cluster. Intended to parallel the PolicyController CR.",
      "id": "PolicyControllerMembershipSpec",
      "type": "object"
    },
    "IdentityServiceGoogleConfig": {
      "type": "object",
      "description": "Configuration for the Google Plugin Auth flow.",
      "id": "IdentityServiceGoogleConfig",
      "properties": {
        "disable": {
          "type": "boolean",
          "description": "Disable automatic configuration of Google Plugin on supported platforms."
        }
      }
    },
    "CommonFeatureState": {
      "id": "CommonFeatureState",
      "properties": {
        "state": {
          "description": "Output only. The \"running state\" of the Feature in this Hub.",
          "$ref": "FeatureState",
          "readOnly": true
        },
        "appdevexperience": {
          "$ref": "AppDevExperienceFeatureState",
          "description": "Appdevexperience specific state."
        },
        "fleetobservability": {
          "$ref": "FleetObservabilityFeatureState",
          "description": "FleetObservability feature state."
        }
      },
      "description": "CommonFeatureState contains Hub-wide Feature status information.",
      "type": "object"
    },
    "ConfigManagementSyncError": {
      "description": "An ACM created error representing a problem syncing configurations",
      "properties": {
        "errorResources": {
          "type": "array",
          "items": {
            "$ref": "ConfigManagementErrorResource"
          },
          "description": "A list of config(s) associated with the error, if any"
        },
        "errorMessage": {
          "type": "string",
          "description": "A description of the error"
        },
        "code": {
          "type": "string",
          "description": "An ACM defined error code"
        }
      },
      "type": "object",
      "id": "ConfigManagementSyncError"
    },
    "ConfigManagementPolicyControllerState": {
      "properties": {
        "version": {
          "description": "The version of Gatekeeper Policy Controller deployed.",
          "$ref": "ConfigManagementPolicyControllerVersion"
        },
        "migration": {
          "description": "Record state of ACM -\u003e PoCo Hub migration for this feature.",
          "$ref": "ConfigManagementPolicyControllerMigration"
        },
        "deploymentState": {
          "$ref": "ConfigManagementGatekeeperDeploymentState",
          "description": "The state about the policy controller installation."
        }
      },
      "type": "object",
      "id": "ConfigManagementPolicyControllerState",
      "description": "State for PolicyControllerState."
    },
    "ConfigManagementManaged": {
      "properties": {
        "enabled": {
          "description": "Set to true to enable Managed Config Sync. Defaults to false which disables Managed Config Sync. Setting this field to true when configSync.enabled is false is invalid.",
          "type": "boolean"
        },
        "stopSyncing": {
          "description": "Set to true to stop syncing configs for a single cluster. Default to false. If set to true, Managed Config Sync will not upgrade Config Sync.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Configuration for Managed Config Sync.",
      "id": "ConfigManagementManaged"
    },
    "PolicyControllerTemplateLibraryConfig": {
      "type": "object",
      "description": "The config specifying which default library templates to install.",
      "id": "PolicyControllerTemplateLibraryConfig",
      "properties": {
        "included": {
          "description": "Whether the standard template library should be installed or not.",
          "type": "boolean"
        },
        "installation": {
          "enumDescriptions": [
            "No installation strategy has been specified.",
            "Do not install the template library.",
            "Install the entire template library."
          ],
          "enum": [
            "INSTALLATION_UNSPECIFIED",
            "NOT_INSTALLED",
            "ALL"
          ],
          "description": "Configures the manner in which the template library is installed on the cluster.",
          "type": "string"
        }
      }
    },
    "ConfigManagementConfigSyncDeploymentState": {
      "type": "object",
      "properties": {
        "monitor": {
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "Deployment state of the monitor pod",
          "type": "string"
        },
        "syncer": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string",
          "description": "Deployment state of the syncer pod",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        },
        "importer": {
          "description": "Deployment state of the importer pod",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        },
        "rootReconciler": {
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "Deployment state of root-reconciler",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "admissionWebhook": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "Deployment state of admission-webhook",
          "type": "string"
        },
        "gitSync": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "Deployment state of the git-sync pod",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        },
        "reconcilerManager": {
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "Deployment state of reconciler-manager pod",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string"
        }
      },
      "description": "The state of ConfigSync's deployment on a cluster",
      "id": "ConfigManagementConfigSyncDeploymentState"
    },
    "FleetLifecycleState": {
      "id": "FleetLifecycleState",
      "type": "object",
      "description": "FleetLifecycleState describes the state of a Fleet resource.",
      "properties": {
        "code": {
          "description": "Output only. The current state of the Fleet resource.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The code is not set.",
            "The fleet is being created.",
            "The fleet active.",
            "The fleet is being deleted.",
            "The fleet is being updated."
          ],
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ]
        }
      }
    },
    "SetIamPolicyRequest": {
      "properties": {
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        },
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        }
      },
      "type": "object",
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method."
    },
    "IdentityServiceMembershipState": {
      "description": "**Anthos Identity Service**: State for a single Membership.",
      "properties": {
        "state": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "OK",
            "ERROR"
          ],
          "description": "Deployment state on this member",
          "enumDescriptions": [
            "Unspecified state",
            "deployment succeeds",
            "Failure with error."
          ],
          "type": "string"
        },
        "installedVersion": {
          "description": "Installed AIS version. This is the AIS version installed on this member. The values makes sense iff state is OK.",
          "type": "string"
        },
        "failureReason": {
          "type": "string",
          "description": "The reason of the failure."
        },
        "memberConfig": {
          "description": "Last reconciled membership configuration",
          "$ref": "IdentityServiceMembershipSpec"
        }
      },
      "type": "object",
      "id": "IdentityServiceMembershipState"
    },
    "PolicyControllerToleration": {
      "type": "object",
      "description": "Toleration of a node taint.",
      "id": "PolicyControllerToleration",
      "properties": {
        "key": {
          "description": "Matches a taint key (not necessarily unique).",
          "type": "string"
        },
        "value": {
          "description": "Matches a taint value.",
          "type": "string"
        },
        "operator": {
          "type": "string",
          "description": "Matches a taint operator."
        },
        "effect": {
          "type": "string",
          "description": "Matches a taint effect."
        }
      }
    },
    "ListRBACRoleBindingsResponse": {
      "type": "object",
      "id": "ListRBACRoleBindingsResponse",
      "properties": {
        "rbacrolebindings": {
          "type": "array",
          "description": "The list of RBACRoleBindings",
          "items": {
            "$ref": "RBACRoleBinding"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to request the next page of resources from the `ListRBACRoleBindings` method. The value of an empty string means that there are no more resources to return."
        }
      },
      "description": "List of RBACRoleBindings."
    },
    "ConfigManagementErrorResource": {
      "id": "ConfigManagementErrorResource",
      "description": "Model for a config file in the git repo with an associated Sync error",
      "type": "object",
      "properties": {
        "resourceGvk": {
          "$ref": "ConfigManagementGroupVersionKind",
          "description": "Group/version/kind of the resource that is causing an error"
        },
        "resourceName": {
          "description": "Metadata name of the resource that is causing an error",
          "type": "string"
        },
        "sourcePath": {
          "type": "string",
          "description": "Path in the git repo of the erroneous config"
        },
        "resourceNamespace": {
          "description": "Namespace of the resource that is causing an error",
          "type": "string"
        }
      }
    },
    "ServiceMeshMembershipState": {
      "description": "**Service Mesh**: State for a single Membership, as analyzed by the Service Mesh Hub Controller.",
      "properties": {
        "controlPlaneManagement": {
          "description": "Output only. Status of control plane management",
          "readOnly": true,
          "$ref": "ServiceMeshControlPlaneManagement"
        },
        "dataPlaneManagement": {
          "readOnly": true,
          "$ref": "ServiceMeshDataPlaneManagement",
          "description": "Output only. Status of data plane management."
        }
      },
      "type": "object",
      "id": "ServiceMeshMembershipState"
    },
    "ConfigManagementHierarchyControllerDeploymentState": {
      "properties": {
        "hnc": {
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "The deployment state for open source HNC (e.g. v0.7.0-hc.0)",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        },
        "extension": {
          "type": "string",
          "description": "The deployment state for Hierarchy Controller extension (e.g. v0.7.0-hc.1)",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        }
      },
      "type": "object",
      "description": "Deployment state for Hierarchy Controller",
      "id": "ConfigManagementHierarchyControllerDeploymentState"
    },
    "OperationMetadata": {
      "type": "object",
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        },
        "statusDetail": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "cancelRequested": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "verb": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation."
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "OperationMetadata"
    },
    "FleetObservabilityRoutingConfig": {
      "id": "FleetObservabilityRoutingConfig",
      "properties": {
        "mode": {
          "type": "string",
          "enumDescriptions": [
            "If UNSPECIFIED, fleet logging feature is disabled.",
            "logs will be copied to the destination project.",
            "logs will be moved to the destination project."
          ],
          "description": "mode configures the logs routing mode.",
          "enum": [
            "MODE_UNSPECIFIED",
            "COPY",
            "MOVE"
          ]
        }
      },
      "type": "object",
      "description": "RoutingConfig configures the behaviour of fleet logging feature."
    },
    "Location": {
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A resource that represents a Google Cloud location.",
      "id": "Location"
    },
    "PolicyControllerMonitoringConfig": {
      "type": "object",
      "description": "MonitoringConfig specifies the backends Policy Controller should export metrics to. For example, to specify metrics should be exported to Cloud Monitoring and Prometheus, specify backends: [\"cloudmonitoring\", \"prometheus\"]",
      "id": "PolicyControllerMonitoringConfig",
      "properties": {
        "backends": {
          "type": "array",
          "items": {
            "enum": [
              "MONITORING_BACKEND_UNSPECIFIED",
              "PROMETHEUS",
              "CLOUD_MONITORING"
            ],
            "type": "string",
            "enumDescriptions": [
              "Backend cannot be determined",
              "Prometheus backend for monitoring",
              "Stackdriver/Cloud Monitoring backend for monitoring"
            ]
          },
          "description": "Specifies the list of backends Policy Controller will export to. An empty list would effectively disable metrics export."
        }
      }
    },
    "ServiceMeshMembershipSpec": {
      "description": "**Service Mesh**: Spec for a single Membership for the servicemesh feature",
      "type": "object",
      "id": "ServiceMeshMembershipSpec",
      "properties": {
        "controlPlane": {
          "type": "string",
          "description": "Deprecated: use `management` instead Enables automatic control plane management.",
          "enumDescriptions": [
            "Unspecified",
            "Google should provision a control plane revision and make it available in the cluster. Google will enroll this revision in a release channel and keep it up to date. The control plane revision may be a managed service, or a managed install.",
            "User will manually configure the control plane (e.g. via CLI, or via the ControlPlaneRevision KRM API)"
          ],
          "enum": [
            "CONTROL_PLANE_MANAGEMENT_UNSPECIFIED",
            "AUTOMATIC",
            "MANUAL"
          ]
        },
        "management": {
          "enumDescriptions": [
            "Unspecified",
            "Google should manage my Service Mesh for the cluster.",
            "User will manually configure their service mesh components."
          ],
          "type": "string",
          "description": "Enables automatic Service Mesh management.",
          "enum": [
            "MANAGEMENT_UNSPECIFIED",
            "MANAGEMENT_AUTOMATIC",
            "MANAGEMENT_MANUAL"
          ]
        }
      }
    },
    "ConfigManagementGitConfig": {
      "description": "Git repo configuration for a single cluster.",
      "type": "object",
      "id": "ConfigManagementGitConfig",
      "properties": {
        "policyDir": {
          "description": "The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.",
          "type": "string"
        },
        "syncRepo": {
          "type": "string",
          "description": "The URL of the Git repository to use as the source of truth."
        },
        "syncWaitSecs": {
          "format": "int64",
          "description": "Period in seconds between consecutive syncs. Default: 15.",
          "type": "string"
        },
        "syncRev": {
          "description": "Git revision (tag or hash) to check out. Default HEAD.",
          "type": "string"
        },
        "syncBranch": {
          "description": "The branch of the repository to sync from. Default: master.",
          "type": "string"
        },
        "httpsProxy": {
          "description": "URL for the HTTPS proxy to be used when communicating with the Git repo.",
          "type": "string"
        },
        "gcpServiceAccountEmail": {
          "description": "The GCP Service Account Email used for auth when secret_type is gcpServiceAccount.",
          "type": "string"
        },
        "secretType": {
          "description": "Type of secret configured for access to the Git repo. Must be one of ssh, cookiefile, gcenode, token, gcpserviceaccount or none. The validation of this is case-sensitive. Required.",
          "type": "string"
        }
      }
    },
    "FleetObservabilityLoggingConfig": {
      "properties": {
        "fleetScopeLogsConfig": {
          "description": "Specified if applying the routing config to all logs for all fleet scopes.",
          "$ref": "FleetObservabilityRoutingConfig"
        },
        "defaultConfig": {
          "$ref": "FleetObservabilityRoutingConfig",
          "description": "Specified if applying the default routing config to logs not specified in other configs."
        }
      },
      "description": "LoggingConfig defines the configuration for different types of logs.",
      "id": "FleetObservabilityLoggingConfig",
      "type": "object"
    },
    "ServiceMeshDataPlaneManagement": {
      "properties": {
        "state": {
          "type": "string",
          "description": "Lifecycle status of data plane management.",
          "enumDescriptions": [
            "Unspecified",
            "DISABLED means that the component is not enabled.",
            "FAILED_PRECONDITION means that provisioning cannot proceed because of some characteristic of the member cluster.",
            "PROVISIONING means that provisioning is in progress.",
            "ACTIVE means that the component is ready for use.",
            "STALLED means that provisioning could not be done.",
            "NEEDS_ATTENTION means that the component is ready, but some user intervention is required. (For example that the user should migrate workloads to a new control plane revision.)",
            "DEGRADED means that the component is ready, but operating in a degraded state."
          ],
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "DISABLED",
            "FAILED_PRECONDITION",
            "PROVISIONING",
            "ACTIVE",
            "STALLED",
            "NEEDS_ATTENTION",
            "DEGRADED"
          ]
        },
        "details": {
          "items": {
            "$ref": "ServiceMeshStatusDetails"
          },
          "type": "array",
          "description": "Explanation of the status."
        }
      },
      "type": "object",
      "id": "ServiceMeshDataPlaneManagement",
      "description": "Status of data plane management. Only reported per-member."
    },
    "PolicyControllerBundleInstallSpec": {
      "id": "PolicyControllerBundleInstallSpec",
      "description": "BundleInstallSpec is the specification configuration for a single managed bundle.",
      "type": "object",
      "properties": {
        "management": {
          "enumDescriptions": [
            "No Management strategy has been specified.",
            "The entity should be insistently reconciled by the Hub controller"
          ],
          "description": "Management specifies how the bundle will be managed by the controller.",
          "enum": [
            "MANAGEMENT_UNSPECIFIED",
            "INSTALLED"
          ],
          "type": "string"
        },
        "exemptedNamespaces": {
          "description": "the set of namespaces to be exempted from the bundle",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MembershipBinding": {
      "description": "MembershipBinding is a subresource of a Membership, representing what Fleet Scopes (or other, future Fleet resources) a Membership is bound to.",
      "properties": {
        "updateTime": {
          "description": "Output only. When the membership binding was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "uid": {
          "description": "Output only. Google-generated UUID for this resource. This is unique across all membershipbinding resources. If a membershipbinding resource is deleted and another resource with the same name is created, it gets a different uid.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. When the membership binding was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "fleet": {
          "type": "boolean",
          "description": "Whether the membershipbinding is Fleet-wide; true means that this Membership should be bound to all Namespaces in this entire Fleet."
        },
        "scope": {
          "description": "A Scope resource name in the format `projects/*/locations/*/scopes/*`.",
          "type": "string"
        },
        "state": {
          "$ref": "MembershipBindingLifecycleState",
          "readOnly": true,
          "description": "Output only. State of the membership binding resource."
        },
        "name": {
          "type": "string",
          "description": "The resource name for the membershipbinding itself `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`"
        },
        "deleteTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. When the membership binding was deleted.",
          "type": "string"
        }
      },
      "id": "MembershipBinding",
      "type": "object"
    },
    "ConfigManagementGroupVersionKind": {
      "type": "object",
      "description": "A Kubernetes object's GVK",
      "id": "ConfigManagementGroupVersionKind",
      "properties": {
        "group": {
          "type": "string",
          "description": "Kubernetes Group"
        },
        "version": {
          "type": "string",
          "description": "Kubernetes Version"
        },
        "kind": {
          "type": "string",
          "description": "Kubernetes Kind"
        }
      }
    },
    "Role": {
      "description": "Role is the type for Kubernetes roles",
      "type": "object",
      "properties": {
        "predefinedRole": {
          "enumDescriptions": [
            "UNKNOWN",
            "ADMIN has EDIT and RBAC permissions",
            "EDIT can edit all resources except RBAC",
            "VIEW can only read resources"
          ],
          "type": "string",
          "enum": [
            "UNKNOWN",
            "ADMIN",
            "EDIT",
            "VIEW"
          ],
          "description": "predefined_role is the Kubernetes default role to use"
        }
      },
      "id": "Role"
    },
    "RBACRoleBinding": {
      "properties": {
        "role": {
          "$ref": "Role",
          "description": "Required. Role to bind to the principal"
        },
        "deleteTime": {
          "readOnly": true,
          "description": "Output only. When the rbacrolebinding was deleted.",
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. When the rbacrolebinding was created."
        },
        "user": {
          "type": "string",
          "description": "user is the name of the user as seen by the kubernetes cluster, example \"alice\" or \"alice@domain.tld\""
        },
        "state": {
          "description": "Output only. State of the rbacrolebinding resource.",
          "readOnly": true,
          "$ref": "RBACRoleBindingLifecycleState"
        },
        "uid": {
          "type": "string",
          "description": "Output only. Google-generated UUID for this resource. This is unique across all rbacrolebinding resources. If a rbacrolebinding resource is deleted and another resource with the same name is created, it gets a different uid.",
          "readOnly": true
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. When the rbacrolebinding was last updated.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The resource name for the rbacrolebinding `projects/{project}/locations/{location}/namespaces/{namespace}/rbacrolebindings/{rbacrolebinding}` or `projects/{project}/locations/{location}/memberships/{membership}/rbacrolebindings/{rbacrolebinding}`",
          "type": "string"
        },
        "group": {
          "description": "group is the group, as seen by the kubernetes cluster.",
          "type": "string"
        }
      },
      "id": "RBACRoleBinding",
      "type": "object",
      "description": "RBACRoleBinding represents a rbacrolebinding across the Fleet"
    },
    "PolicyControllerPolicyContentState": {
      "id": "PolicyControllerPolicyContentState",
      "type": "object",
      "properties": {
        "referentialSyncConfigState": {
          "$ref": "PolicyControllerOnClusterState",
          "description": "The state of the referential data sync configuration. This could represent the state of either the syncSet object(s) or the config object, depending on the version of PoCo configured by the user."
        },
        "bundleStates": {
          "type": "object",
          "additionalProperties": {
            "$ref": "PolicyControllerOnClusterState"
          },
          "description": "The state of the any bundles included in the chosen version of the manifest"
        },
        "templateLibraryState": {
          "description": "The state of the template library",
          "$ref": "PolicyControllerOnClusterState"
        }
      },
      "description": "The state of the policy controller policy content"
    },
    "FeatureState": {
      "description": "FeatureState describes the high-level state of a Feature. It may be used to describe a Feature's state at the environ-level, or per-membershop, depending on the context.",
      "id": "FeatureState",
      "type": "object",
      "properties": {
        "code": {
          "description": "The high-level, machine-readable status of this Feature.",
          "enumDescriptions": [
            "Unknown or not set.",
            "The Feature is operating normally.",
            "The Feature has encountered an issue, and is operating in a degraded state. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information.",
            "The Feature is not operating or is in a severely degraded state. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information."
          ],
          "type": "string",
          "enum": [
            "CODE_UNSPECIFIED",
            "OK",
            "WARNING",
            "ERROR"
          ]
        },
        "description": {
          "description": "A human-readable description of the current status.",
          "type": "string"
        },
        "updateTime": {
          "description": "The time this status and any related Feature-specific details were updated.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "AppDevExperienceFeatureSpec": {
      "id": "AppDevExperienceFeatureSpec",
      "type": "object",
      "description": "Spec for App Dev Experience Feature.",
      "properties": {}
    },
    "ConfigManagementBinauthzVersion": {
      "type": "object",
      "properties": {
        "webhookVersion": {
          "type": "string",
          "description": "The version of the binauthz webhook."
        }
      },
      "description": "The version of binauthz.",
      "id": "ConfigManagementBinauthzVersion"
    },
    "MembershipFeatureSpec": {
      "type": "object",
      "id": "MembershipFeatureSpec",
      "properties": {
        "cloudbuild": {
          "description": "Cloud Build-specific spec",
          "$ref": "MembershipSpec"
        },
        "mesh": {
          "$ref": "ServiceMeshMembershipSpec",
          "description": "Anthos Service Mesh-specific spec"
        },
        "fleetInherited": {
          "type": "boolean",
          "description": "True if value of `feature_spec` was inherited from a fleet-level default."
        },
        "configmanagement": {
          "$ref": "ConfigManagementMembershipSpec",
          "description": "Config Management-specific spec."
        },
        "identityservice": {
          "description": "Identity Service-specific spec.",
          "$ref": "IdentityServiceMembershipSpec"
        },
        "fleetobservability": {
          "description": "Fleet observability membership spec",
          "$ref": "FleetObservabilityMembershipSpec"
        },
        "policycontroller": {
          "$ref": "PolicyControllerMembershipSpec",
          "description": "Policy Controller spec."
        },
        "anthosobservability": {
          "$ref": "AnthosObservabilityMembershipSpec",
          "description": "Anthos Observability-specific spec"
        }
      },
      "description": "MembershipFeatureSpec contains configuration information for a single Membership. NOTE: Please use snake case in your feature name."
    },
    "TestIamPermissionsRequest": {
      "type": "object",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      },
      "description": "Request message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsRequest"
    },
    "ConfigManagementConfigSync": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enables the installation of ConfigSync. If set to true, ConfigSync resources will be created and the other ConfigSync fields will be applied if exist. If set to false and Managed Config Sync is disabled, all other ConfigSync fields will be ignored, ConfigSync resources will be deleted. Setting this field to false while enabling Managed Config Sync is invalid. If omitted, ConfigSync resources will be managed if: * the git or oci field is present; or * Managed Config Sync is enabled (i.e., managed.enabled is true).",
          "type": "boolean"
        },
        "oci": {
          "$ref": "ConfigManagementOciConfig",
          "description": "OCI repo configuration for the cluster"
        },
        "preventDrift": {
          "type": "boolean",
          "description": "Set to true to enable the Config Sync admission webhook to prevent drifts. If set to `false`, disables the Config Sync admission webhook and does not prevent drifts."
        },
        "sourceFormat": {
          "type": "string",
          "description": "Specifies whether the Config Sync Repo is in \"hierarchical\" or \"unstructured\" mode."
        },
        "git": {
          "$ref": "ConfigManagementGitConfig",
          "description": "Git repo configuration for the cluster."
        },
        "managed": {
          "description": "Configuration for Managed Config Sync.",
          "$ref": "ConfigManagementManaged"
        },
        "metricsGcpServiceAccountEmail": {
          "description": "The Email of the GCP Service Account (GSA) used for exporting Config Sync metrics to Cloud Monitoring and Cloud Monarch when Workload Identity is enabled. The GSA should have the Monitoring Metric Writer (roles/monitoring.metricWriter) IAM role. The Kubernetes ServiceAccount `default` in the namespace `config-management-monitoring` should be binded to the GSA. This field is required when Managed Config Sync is enabled.",
          "type": "string"
        },
        "allowVerticalScale": {
          "description": "Set to true to allow the vertical scaling. Defaults to false which disallows vertical scaling. This field is deprecated.",
          "type": "boolean"
        }
      },
      "description": "Configuration for Config Sync",
      "id": "ConfigManagementConfigSync"
    },
    "Binding": {
      "properties": {
        "members": {
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        }
      },
      "id": "Binding",
      "type": "object",
      "description": "Associates `members`, or principals, with a `role`."
    },
    "NamespaceLifecycleState": {
      "type": "object",
      "id": "NamespaceLifecycleState",
      "description": "NamespaceLifecycleState describes the state of a Namespace resource.",
      "properties": {
        "code": {
          "enumDescriptions": [
            "The code is not set.",
            "The namespace is being created.",
            "The namespace active.",
            "The namespace is being deleted.",
            "The namespace is being updated."
          ],
          "type": "string",
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ],
          "description": "Output only. The current state of the Namespace resource.",
          "readOnly": true
        }
      }
    },
    "RBACRoleBindingLifecycleState": {
      "properties": {
        "code": {
          "readOnly": true,
          "enumDescriptions": [
            "The code is not set.",
            "The rbacrolebinding is being created.",
            "The rbacrolebinding active.",
            "The rbacrolebinding is being deleted.",
            "The rbacrolebinding is being updated."
          ],
          "type": "string",
          "description": "Output only. The current state of the rbacrolebinding resource.",
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ]
        }
      },
      "id": "RBACRoleBindingLifecycleState",
      "type": "object",
      "description": "RBACRoleBindingLifecycleState describes the state of a RbacRoleBinding resource."
    },
    "CommonFeatureSpec": {
      "description": "CommonFeatureSpec contains Hub-wide configuration information",
      "properties": {
        "multiclusteringress": {
          "description": "Multicluster Ingress-specific spec.",
          "$ref": "MultiClusterIngressFeatureSpec"
        },
        "anthosobservability": {
          "$ref": "AnthosObservabilityFeatureSpec",
          "description": "Anthos Observability spec"
        },
        "fleetobservability": {
          "$ref": "FleetObservabilityFeatureSpec",
          "description": "FleetObservability feature spec."
        },
        "appdevexperience": {
          "$ref": "AppDevExperienceFeatureSpec",
          "description": "Appdevexperience specific spec."
        }
      },
      "type": "object",
      "id": "CommonFeatureSpec"
    },
    "IdentityServiceMembershipSpec": {
      "type": "object",
      "id": "IdentityServiceMembershipSpec",
      "description": "**Anthos Identity Service**: Configuration for a single Membership.",
      "properties": {
        "authMethods": {
          "description": "A member may support multiple auth methods.",
          "type": "array",
          "items": {
            "$ref": "IdentityServiceAuthMethod"
          }
        }
      }
    },
    "ListFeaturesResponse": {
      "type": "object",
      "id": "ListFeaturesResponse",
      "properties": {
        "resources": {
          "description": "The list of matching Features",
          "type": "array",
          "items": {
            "$ref": "Feature"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to request the next page of resources from the `ListFeatures` method. The value of an empty string means that there are no more resources to return."
        }
      },
      "description": "Response message for the `GkeHub.ListFeatures` method."
    },
    "PolicyControllerMembershipState": {
      "description": "**Policy Controller**: State for a single cluster.",
      "id": "PolicyControllerMembershipState",
      "type": "object",
      "properties": {
        "componentStates": {
          "additionalProperties": {
            "$ref": "PolicyControllerOnClusterState"
          },
          "description": "Currently these include (also serving as map keys): 1. \"admission\" 2. \"audit\" 3. \"mutation\"",
          "type": "object"
        },
        "state": {
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLING",
            "ACTIVE",
            "UPDATING",
            "DECOMMISSIONING",
            "CLUSTER_ERROR",
            "HUB_ERROR",
            "SUSPENDED"
          ],
          "description": "The overall Policy Controller lifecycle state observed by the Hub Feature controller.",
          "type": "string",
          "enumDescriptions": [
            "The lifecycle state is unspecified.",
            "The PC does not exist on the given cluster, and no k8s resources of any type that are associated with the PC should exist there. The cluster does not possess a membership with the PCH.",
            "The PCH possesses a Membership, however the PC is not fully installed on the cluster. In this state the hub can be expected to be taking actions to install the PC on the cluster.",
            "The PC is fully installed on the cluster and in an operational mode. In this state PCH will be reconciling state with the PC, and the PC will be performing it's operational tasks per that software. Entering a READY state requires that the hub has confirmed the PC is installed and its pods are operational with the version of the PC the PCH expects.",
            "The PC is fully installed, but in the process of changing the configuration (including changing the version of PC either up and down, or modifying the manifests of PC) of the resources running on the cluster. The PCH has a Membership, is aware of the version the cluster should be running in, but has not confirmed for itself that the PC is running with that version.",
            "The PC may have resources on the cluster, but the PCH wishes to remove the Membership. The Membership still exists.",
            "The PC is not operational, and the PCH is unable to act to make it operational. Entering a CLUSTER_ERROR state happens automatically when the PCH determines that a PC installed on the cluster is non-operative or that the cluster does not meet requirements set for the PCH to administer the cluster but has nevertheless been given an instruction to do so (such as 'install').",
            "In this state, the PC may still be operational, and only the PCH is unable to act. The hub should not issue instructions to change the PC state, or otherwise interfere with the on-cluster resources. Entering a HUB_ERROR state happens automatically when the PCH determines the hub is in an unhealthy state and it wishes to 'take hands off' to avoid corrupting the PC or other data.",
            "Policy Controller (PC) is installed but suspended. This means that the policies are not enforced, but violations are still recorded (through audit)."
          ]
        },
        "policyContentState": {
          "$ref": "PolicyControllerPolicyContentState",
          "description": "The overall content state observed by the Hub Feature controller."
        },
        "contentStates": {
          "additionalProperties": {
            "$ref": "PolicyControllerOnClusterState"
          },
          "description": "The state of the template library and any bundles included in the chosen version of the manifest",
          "type": "object"
        }
      }
    },
    "ServiceMeshStatusDetails": {
      "description": "Structured and human-readable details for a status.",
      "id": "ServiceMeshStatusDetails",
      "properties": {
        "code": {
          "description": "A machine-readable code that further describes a broad status.",
          "type": "string"
        },
        "details": {
          "description": "Human-readable explanation of code.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IdentityServiceAuthMethod": {
      "type": "object",
      "properties": {
        "googleConfig": {
          "$ref": "IdentityServiceGoogleConfig",
          "description": "GoogleConfig specific configuration"
        },
        "azureadConfig": {
          "description": "AzureAD specific Configuration.",
          "$ref": "IdentityServiceAzureADConfig"
        },
        "oidcConfig": {
          "description": "OIDC specific configuration.",
          "$ref": "IdentityServiceOidcConfig"
        },
        "proxy": {
          "description": "Proxy server address to use for auth method.",
          "type": "string"
        },
        "name": {
          "description": "Identifier for auth config.",
          "type": "string"
        }
      },
      "id": "IdentityServiceAuthMethod",
      "description": "Configuration of an auth method for a member/cluster. Only one authentication method (e.g., OIDC and LDAP) can be set per AuthMethod."
    },
    "FleetObservabilityMembershipSpec": {
      "description": "**FleetObservability**: The membership-specific input for FleetObservability feature.",
      "properties": {},
      "type": "object",
      "id": "FleetObservabilityMembershipSpec"
    },
    "ListLocationsResponse": {
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object"
    },
    "ListNamespacesResponse": {
      "properties": {
        "namespaces": {
          "description": "The list of fleet namespaces",
          "type": "array",
          "items": {
            "$ref": "Namespace"
          }
        },
        "nextPageToken": {
          "description": "A token to request the next page of resources from the `ListNamespaces` method. The value of an empty string means that there are no more resources to return.",
          "type": "string"
        }
      },
      "id": "ListNamespacesResponse",
      "description": "List of fleet namespaces.",
      "type": "object"
    },
    "IdentityServiceOidcConfig": {
      "description": "Configuration for OIDC Auth flow.",
      "properties": {
        "kubectlRedirectUri": {
          "description": "Registered redirect uri to redirect users going through OAuth flow using kubectl plugin.",
          "type": "string"
        },
        "userClaim": {
          "description": "Claim in OIDC ID token that holds username.",
          "type": "string"
        },
        "groupsClaim": {
          "type": "string",
          "description": "Claim in OIDC ID token that holds group information."
        },
        "extraParams": {
          "description": "Comma-separated list of key-value pairs.",
          "type": "string"
        },
        "deployCloudConsoleProxy": {
          "type": "boolean",
          "description": "Flag to denote if reverse proxy is used to connect to auth provider. This flag should be set to true when provider is not reachable by Google Cloud Console."
        },
        "encryptedClientSecret": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Encrypted OIDC Client secret",
          "format": "byte"
        },
        "clientId": {
          "type": "string",
          "description": "ID for OIDC client application."
        },
        "issuerUri": {
          "type": "string",
          "description": "URI for the OIDC provider. This should point to the level below .well-known/openid-configuration."
        },
        "groupPrefix": {
          "type": "string",
          "description": "Prefix to prepend to group name."
        },
        "clientSecret": {
          "type": "string",
          "description": "Input only. Unencrypted OIDC client secret will be passed to the GKE Hub CLH."
        },
        "enableAccessToken": {
          "type": "boolean",
          "description": "Enable access token."
        },
        "userPrefix": {
          "type": "string",
          "description": "Prefix to prepend to user name."
        },
        "scopes": {
          "description": "Comma-separated list of identifiers.",
          "type": "string"
        },
        "certificateAuthorityData": {
          "description": "PEM-encoded CA for OIDC provider.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "IdentityServiceOidcConfig"
    },
    "ConfigManagementPolicyControllerMigration": {
      "id": "ConfigManagementPolicyControllerMigration",
      "type": "object",
      "description": "State for the migration of PolicyController from ACM -\u003e PoCo Hub.",
      "properties": {
        "stage": {
          "enumDescriptions": [
            "Unknown state of migration.",
            "ACM Hub/Operator manages policycontroller. No migration yet completed.",
            "All migrations steps complete; Poco Hub now manages policycontroller."
          ],
          "description": "Stage of the migration.",
          "type": "string",
          "enum": [
            "STAGE_UNSPECIFIED",
            "ACM_MANAGED",
            "POCO_MANAGED"
          ]
        },
        "copyTime": {
          "type": "string",
          "description": "Last time this membership spec was copied to PoCo feature.",
          "format": "google-datetime"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "type": "array",
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      },
      "type": "object",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging."
    },
    "FeatureResourceState": {
      "properties": {
        "state": {
          "enumDescriptions": [
            "State is unknown or not set.",
            "The Feature is being enabled, and the Feature resource is being created. Once complete, the corresponding Feature will be enabled in this Hub.",
            "The Feature is enabled in this Hub, and the Feature resource is fully available.",
            "The Feature is being disabled in this Hub, and the Feature resource is being deleted.",
            "The Feature resource is being updated.",
            "The Feature resource is being updated by the Hub Service."
          ],
          "description": "The current state of the Feature resource in the Hub API.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLING",
            "ACTIVE",
            "DISABLING",
            "UPDATING",
            "SERVICE_UPDATING"
          ],
          "type": "string"
        }
      },
      "id": "FeatureResourceState",
      "type": "object",
      "description": "FeatureResourceState describes the state of a Feature *resource* in the GkeHub API. See `FeatureState` for the \"running state\" of the Feature in the Hub and across Memberships."
    },
    "MeteringMembershipState": {
      "properties": {
        "lastMeasurementTime": {
          "description": "The time stamp of the most recent measurement of the number of vCPUs in the cluster.",
          "format": "google-datetime",
          "type": "string"
        },
        "preciseLastMeasuredClusterVcpuCapacity": {
          "description": "The vCPUs capacity in the cluster according to the most recent measurement (1/1000 precision).",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object",
      "description": "**Metering**: Per-Membership Feature State.",
      "id": "MeteringMembershipState"
    },
    "ConfigManagementConfigSyncState": {
      "type": "object",
      "properties": {
        "syncState": {
          "description": "The state of ConfigSync's process to sync configs to a cluster",
          "$ref": "ConfigManagementSyncState"
        },
        "version": {
          "$ref": "ConfigManagementConfigSyncVersion",
          "description": "The version of ConfigSync deployed"
        },
        "deploymentState": {
          "$ref": "ConfigManagementConfigSyncDeploymentState",
          "description": "Information about the deployment of ConfigSync, including the version of the various Pods deployed"
        },
        "errors": {
          "description": "Errors pertaining to the installation of Config Sync.",
          "type": "array",
          "items": {
            "$ref": "ConfigManagementConfigSyncError"
          }
        }
      },
      "id": "ConfigManagementConfigSyncState",
      "description": "State information for ConfigSync"
    },
    "IdentityServiceAzureADConfig": {
      "id": "IdentityServiceAzureADConfig",
      "properties": {
        "tenant": {
          "type": "string",
          "description": "Kind of Azure AD account to be authenticated. Supported values are or for accounts belonging to a specific tenant."
        },
        "kubectlRedirectUri": {
          "description": "The redirect URL that kubectl uses for authorization.",
          "type": "string"
        },
        "encryptedClientSecret": {
          "format": "byte",
          "readOnly": true,
          "description": "Output only. Encrypted AzureAD client secret.",
          "type": "string"
        },
        "clientSecret": {
          "type": "string",
          "description": "Input only. Unencrypted AzureAD client secret will be passed to the GKE Hub CLH."
        },
        "clientId": {
          "type": "string",
          "description": "ID for the registered client application that makes authentication requests to the Azure AD identity provider."
        }
      },
      "type": "object",
      "description": "Configuration for the AzureAD Auth flow."
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {},
      "id": "CancelOperationRequest"
    },
    "ConfigManagementOciConfig": {
      "description": "OCI repo configuration for a single cluster",
      "properties": {
        "secretType": {
          "description": "Type of secret configured for access to the Git repo.",
          "type": "string"
        },
        "syncWaitSecs": {
          "type": "string",
          "description": "Period in seconds between consecutive syncs. Default: 15.",
          "format": "int64"
        },
        "policyDir": {
          "type": "string",
          "description": "The absolute path of the directory that contains the local resources. Default: the root directory of the image."
        },
        "syncRepo": {
          "type": "string",
          "description": "The OCI image repository URL for the package to sync from. e.g. `LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME`."
        },
        "gcpServiceAccountEmail": {
          "type": "string",
          "description": "The GCP Service Account Email used for auth when secret_type is gcpServiceAccount."
        }
      },
      "id": "ConfigManagementOciConfig",
      "type": "object"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "ListOperationsResponse",
      "type": "object"
    },
    "ScopeFeatureState": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "FeatureState",
          "description": "Output only. The \"running state\" of the Feature in this Scope.",
          "readOnly": true
        }
      },
      "description": "ScopeFeatureState contains Scope-wide Feature status information.",
      "id": "ScopeFeatureState"
    },
    "ConfigManagementBinauthzConfig": {
      "properties": {
        "enabled": {
          "description": "Whether binauthz is enabled in this cluster.",
          "type": "boolean"
        }
      },
      "id": "ConfigManagementBinauthzConfig",
      "type": "object",
      "description": "Configuration for Binauthz"
    },
    "ConfigManagementInstallError": {
      "id": "ConfigManagementInstallError",
      "properties": {
        "errorMessage": {
          "type": "string",
          "description": "A string representing the user facing error message"
        }
      },
      "type": "object",
      "description": "Errors pertaining to the installation of ACM"
    },
    "MembershipSpec": {
      "properties": {
        "version": {
          "description": "Version of the cloud build software on the cluster.",
          "type": "string"
        },
        "securityPolicy": {
          "description": "Whether it is allowed to run the privileged builds on the cluster or not.",
          "enumDescriptions": [
            "Unspecified policy",
            "Privileged build pods are disallowed",
            "Privileged build pods are allowed"
          ],
          "type": "string",
          "enum": [
            "SECURITY_POLICY_UNSPECIFIED",
            "NON_PRIVILEGED",
            "PRIVILEGED"
          ]
        }
      },
      "type": "object",
      "id": "MembershipSpec",
      "description": "**Cloud Build**: Configurations for each Cloud Build enabled cluster."
    },
    "FleetObservabilityFeatureState": {
      "type": "object",
      "description": "**FleetObservability**: Hub-wide Feature for FleetObservability feature. state.",
      "id": "FleetObservabilityFeatureState",
      "properties": {}
    },
    "Feature": {
      "type": "object",
      "id": "Feature",
      "properties": {
        "state": {
          "readOnly": true,
          "description": "Output only. The Hub-wide Feature state.",
          "$ref": "CommonFeatureState"
        },
        "deleteTime": {
          "description": "Output only. When the Feature resource was deleted.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "spec": {
          "description": "Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be unused.",
          "$ref": "CommonFeatureSpec"
        },
        "fleetDefaultMemberConfig": {
          "$ref": "CommonFleetDefaultMemberConfigSpec",
          "description": "Optional. Feature configuration applicable to all memberships of the fleet."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. When the Feature resource was created.",
          "readOnly": true
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels for this Feature."
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. When the Feature resource was last updated.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "resourceState": {
          "$ref": "FeatureResourceState",
          "readOnly": true,
          "description": "Output only. State of the Feature resource itself."
        },
        "scopeSpecs": {
          "additionalProperties": {
            "$ref": "ScopeFeatureSpec"
          },
          "description": "Optional. Scope-specific configuration for this Feature. If this Feature does not support any per-Scope configuration, this field may be unused. The keys indicate which Scope the configuration is for, in the form: `projects/{p}/locations/global/scopes/{s}` Where {p} is the project, {s} is a valid Scope in this project. {p} WILL match the Feature's project. {p} will always be returned as the project number, but the project ID is also accepted during input. If the same Scope is specified in the map twice (using the project ID form, and the project number form), exactly ONE of the entries will be saved, with no guarantees as to which. For this reason, it is recommended the same format be used for all entries when mutating a Feature.",
          "type": "object"
        },
        "membershipStates": {
          "type": "object",
          "description": "Output only. Membership-specific Feature status. If this Feature does report any per-Membership status, this field may be unused. The keys indicate which Membership the state is for, in the form: `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the project number, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} MUST match the Feature's project number.",
          "readOnly": true,
          "additionalProperties": {
            "$ref": "MembershipFeatureState"
          }
        },
        "membershipSpecs": {
          "description": "Optional. Membership-specific configuration for this Feature. If this Feature does not support any per-Membership configuration, this field may be unused. The keys indicate which Membership the configuration is for, in the form: `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the project, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} WILL match the Feature's project. {p} will always be returned as the project number, but the project ID is also accepted during input. If the same Membership is specified in the map twice (using the project ID form, and the project number form), exactly ONE of the entries will be saved, with no guarantees as to which. For this reason, it is recommended the same format be used for all entries when mutating a Feature.",
          "type": "object",
          "additionalProperties": {
            "$ref": "MembershipFeatureSpec"
          }
        },
        "scopeStates": {
          "description": "Output only. Scope-specific Feature status. If this Feature does report any per-Scope status, this field may be unused. The keys indicate which Scope the state is for, in the form: `projects/{p}/locations/global/scopes/{s}` Where {p} is the project, {s} is a valid Scope in this project. {p} WILL match the Feature's project.",
          "additionalProperties": {
            "$ref": "ScopeFeatureState"
          },
          "readOnly": true,
          "type": "object"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The full, unique name of this Feature resource in the format `projects/*/locations/*/features/*`."
        }
      },
      "description": "Feature represents the settings and status of any Hub Feature."
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "type": "object",
      "properties": {
        "logType": {
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ]
        },
        "exemptedMembers": {
          "type": "array",
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        }
      },
      "id": "Expr",
      "type": "object"
    },
    "ListScopesResponse": {
      "properties": {
        "scopes": {
          "items": {
            "$ref": "Scope"
          },
          "type": "array",
          "description": "The list of Scopes"
        },
        "nextPageToken": {
          "description": "A token to request the next page of resources from the `ListScopes` method. The value of an empty string means that there are no more resources to return.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListScopesResponse",
      "description": "List of Scopes."
    },
    "PolicyControllerResourceRequirements": {
      "id": "PolicyControllerResourceRequirements",
      "type": "object",
      "properties": {
        "requests": {
          "$ref": "PolicyControllerResourceList",
          "description": "Requests describes the amount of compute resources reserved for the container by the kube-scheduler."
        },
        "limits": {
          "$ref": "PolicyControllerResourceList",
          "description": "Limits describes the maximum amount of compute resources allowed for use by the running container."
        }
      },
      "description": "ResourceRequirements describes the compute resource requirements."
    },
    "ConfigManagementBinauthzState": {
      "type": "object",
      "description": "State for Binauthz",
      "id": "ConfigManagementBinauthzState",
      "properties": {
        "version": {
          "description": "The version of binauthz that is installed.",
          "$ref": "ConfigManagementBinauthzVersion"
        },
        "webhook": {
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "The state of the binauthz webhook."
        }
      }
    },
    "Namespace": {
      "properties": {
        "deleteTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. When the namespace was deleted.",
          "format": "google-datetime"
        },
        "uid": {
          "description": "Output only. Google-generated UUID for this resource. This is unique across all namespace resources. If a namespace resource is deleted and another resource with the same name is created, it gets a different uid.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "readOnly": true,
          "description": "Output only. State of the namespace resource.",
          "$ref": "NamespaceLifecycleState"
        },
        "createTime": {
          "description": "Output only. When the namespace was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "description": "The resource name for the namespace `projects/{project}/locations/{location}/namespaces/{namespace}`",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. When the namespace was last updated.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "scope": {
          "description": "Required. Scope associated with the namespace",
          "type": "string"
        }
      },
      "description": "Namespace represents a namespace across the Fleet",
      "type": "object",
      "id": "Namespace"
    },
    "Operation": {
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation",
      "properties": {
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        }
      }
    },
    "ServiceMeshControlPlaneManagement": {
      "id": "ServiceMeshControlPlaneManagement",
      "type": "object",
      "properties": {
        "state": {
          "description": "LifecycleState of control plane management.",
          "type": "string",
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "DISABLED",
            "FAILED_PRECONDITION",
            "PROVISIONING",
            "ACTIVE",
            "STALLED",
            "NEEDS_ATTENTION",
            "DEGRADED"
          ],
          "enumDescriptions": [
            "Unspecified",
            "DISABLED means that the component is not enabled.",
            "FAILED_PRECONDITION means that provisioning cannot proceed because of some characteristic of the member cluster.",
            "PROVISIONING means that provisioning is in progress.",
            "ACTIVE means that the component is ready for use.",
            "STALLED means that provisioning could not be done.",
            "NEEDS_ATTENTION means that the component is ready, but some user intervention is required. (For example that the user should migrate workloads to a new control plane revision.)",
            "DEGRADED means that the component is ready, but operating in a degraded state."
          ]
        },
        "details": {
          "description": "Explanation of state.",
          "items": {
            "$ref": "ServiceMeshStatusDetails"
          },
          "type": "array"
        }
      },
      "description": "Status of control plane management."
    },
    "ConfigManagementMembershipSpec": {
      "id": "ConfigManagementMembershipSpec",
      "type": "object",
      "properties": {
        "binauthz": {
          "$ref": "ConfigManagementBinauthzConfig",
          "description": "Binauthz conifguration for the cluster."
        },
        "version": {
          "description": "Version of ACM installed.",
          "type": "string"
        },
        "configSync": {
          "$ref": "ConfigManagementConfigSync",
          "description": "Config Sync configuration for the cluster."
        },
        "policyController": {
          "$ref": "ConfigManagementPolicyController",
          "description": "Policy Controller configuration for the cluster."
        },
        "cluster": {
          "type": "string",
          "description": "The user-specified cluster name used by Config Sync cluster-name-selector annotation or ClusterSelector, for applying configs to only a subset of clusters. Omit this field if the cluster's fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector. Set this field if a name different from the cluster's fleet membership name is used by Config Sync cluster-name-selector annotation or ClusterSelector."
        },
        "hierarchyController": {
          "description": "Hierarchy Controller configuration for the cluster.",
          "$ref": "ConfigManagementHierarchyControllerConfig"
        }
      },
      "description": "**Anthos Config Management**: Configuration for a single cluster. Intended to parallel the ConfigManagement CR."
    },
    "FleetObservabilityFeatureSpec": {
      "id": "FleetObservabilityFeatureSpec",
      "description": "**Fleet Observability**: The Hub-wide input for the FleetObservability feature.",
      "type": "object",
      "properties": {
        "loggingConfig": {
          "$ref": "FleetObservabilityLoggingConfig",
          "description": "Specified if fleet logging feature is enabled for the entire fleet. If UNSPECIFIED, fleet logging feature is disabled for the entire fleet."
        }
      }
    },
    "ListFleetsResponse": {
      "description": "Response message for the `GkeHub.ListFleetsResponse` method.",
      "id": "ListFleetsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. The token is only valid for 1h.",
          "type": "string"
        },
        "fleets": {
          "type": "array",
          "items": {
            "$ref": "Fleet"
          },
          "description": "The list of matching fleets."
        }
      },
      "type": "object"
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      }
    },
    "MultiClusterIngressFeatureSpec": {
      "id": "MultiClusterIngressFeatureSpec",
      "description": "**Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.",
      "type": "object",
      "properties": {
        "billing": {
          "type": "string",
          "description": "Deprecated: This field will be ignored and should not be set. Customer's billing structure.",
          "enum": [
            "BILLING_UNSPECIFIED",
            "PAY_AS_YOU_GO",
            "ANTHOS_LICENSE"
          ],
          "enumDescriptions": [
            "Unknown",
            "User pays a fee per-endpoint.",
            "User is paying for Anthos as a whole."
          ]
        },
        "configMembership": {
          "type": "string",
          "description": "Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`"
        }
      }
    },
    "ConfigManagementConfigSyncError": {
      "description": "Errors pertaining to the installation of Config Sync",
      "type": "object",
      "id": "ConfigManagementConfigSyncError",
      "properties": {
        "errorMessage": {
          "type": "string",
          "description": "A string representing the user facing error message"
        }
      }
    },
    "MembershipBindingLifecycleState": {
      "description": "MembershipBindingLifecycleState describes the state of a Binding resource.",
      "type": "object",
      "id": "MembershipBindingLifecycleState",
      "properties": {
        "code": {
          "readOnly": true,
          "description": "Output only. The current state of the MembershipBinding resource.",
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ],
          "type": "string",
          "enumDescriptions": [
            "The code is not set.",
            "The membershipbinding is being created.",
            "The membershipbinding active.",
            "The membershipbinding is being deleted.",
            "The membershipbinding is being updated."
          ]
        }
      }
    },
    "ConfigManagementPolicyController": {
      "description": "Configuration for Policy Controller",
      "type": "object",
      "id": "ConfigManagementPolicyController",
      "properties": {
        "exemptableNamespaces": {
          "type": "array",
          "description": "The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.",
          "items": {
            "type": "string"
          }
        },
        "mutationEnabled": {
          "description": "Enable or disable mutation in policy controller. If true, mutation CRDs, webhook and controller deployment will be deployed to the cluster.",
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean",
          "description": "Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect."
        },
        "referentialRulesEnabled": {
          "type": "boolean",
          "description": "Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated."
        },
        "auditIntervalSeconds": {
          "format": "int64",
          "description": "Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Last time this membership spec was updated."
        },
        "monitoring": {
          "description": "Monitoring specifies the configuration of monitoring.",
          "$ref": "ConfigManagementPolicyControllerMonitoring"
        },
        "templateLibraryInstalled": {
          "type": "boolean",
          "description": "Installs the default template library along with Policy Controller."
        },
        "logDeniesEnabled": {
          "description": "Logs all denies and dry run failures.",
          "type": "boolean"
        }
      }
    },
    "AnthosObservabilityMembershipSpec": {
      "type": "object",
      "description": "**Anthosobservability**: Per-Membership Feature spec.",
      "properties": {
        "doNotOptimizeMetrics": {
          "description": "Use full of metrics rather than optimized metrics. See https://cloud.google.com/anthos/clusters/docs/on-prem/1.8/concepts/logging-and-monitoring#optimized_metrics_default_metrics",
          "type": "boolean"
        },
        "version": {
          "description": "the version of stackdriver operator used by this feature",
          "type": "string"
        },
        "enableStackdriverOnApplications": {
          "type": "boolean",
          "description": "Enable collecting and reporting metrics and logs from user apps."
        }
      },
      "id": "AnthosObservabilityMembershipSpec"
    },
    "CommonFleetDefaultMemberConfigSpec": {
      "properties": {
        "identityservice": {
          "$ref": "IdentityServiceMembershipSpec",
          "description": "Identity Service-specific spec."
        }
      },
      "id": "CommonFleetDefaultMemberConfigSpec",
      "type": "object",
      "description": "CommonFleetDefaultMemberConfigSpec contains default configuration information for memberships of a fleet"
    },
    "PolicyControllerOnClusterState": {
      "id": "PolicyControllerOnClusterState",
      "properties": {
        "details": {
          "description": "Surface potential errors or information logs.",
          "type": "string"
        },
        "state": {
          "description": "The lifecycle state of this component.",
          "type": "string",
          "enumDescriptions": [
            "The lifecycle state is unspecified.",
            "The PC does not exist on the given cluster, and no k8s resources of any type that are associated with the PC should exist there. The cluster does not possess a membership with the PCH.",
            "The PCH possesses a Membership, however the PC is not fully installed on the cluster. In this state the hub can be expected to be taking actions to install the PC on the cluster.",
            "The PC is fully installed on the cluster and in an operational mode. In this state PCH will be reconciling state with the PC, and the PC will be performing it's operational tasks per that software. Entering a READY state requires that the hub has confirmed the PC is installed and its pods are operational with the version of the PC the PCH expects.",
            "The PC is fully installed, but in the process of changing the configuration (including changing the version of PC either up and down, or modifying the manifests of PC) of the resources running on the cluster. The PCH has a Membership, is aware of the version the cluster should be running in, but has not confirmed for itself that the PC is running with that version.",
            "The PC may have resources on the cluster, but the PCH wishes to remove the Membership. The Membership still exists.",
            "The PC is not operational, and the PCH is unable to act to make it operational. Entering a CLUSTER_ERROR state happens automatically when the PCH determines that a PC installed on the cluster is non-operative or that the cluster does not meet requirements set for the PCH to administer the cluster but has nevertheless been given an instruction to do so (such as 'install').",
            "In this state, the PC may still be operational, and only the PCH is unable to act. The hub should not issue instructions to change the PC state, or otherwise interfere with the on-cluster resources. Entering a HUB_ERROR state happens automatically when the PCH determines the hub is in an unhealthy state and it wishes to 'take hands off' to avoid corrupting the PC or other data.",
            "Policy Controller (PC) is installed but suspended. This means that the policies are not enforced, but violations are still recorded (through audit)."
          ],
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLING",
            "ACTIVE",
            "UPDATING",
            "DECOMMISSIONING",
            "CLUSTER_ERROR",
            "HUB_ERROR",
            "SUSPENDED"
          ]
        }
      },
      "type": "object",
      "description": "OnClusterState represents the state of a sub-component of Policy Controller."
    },
    "ScopeFeatureSpec": {
      "type": "object",
      "properties": {},
      "description": "ScopeFeatureSpec contains feature specs for a fleet scope.",
      "id": "ScopeFeatureSpec"
    },
    "ConfigManagementSyncState": {
      "id": "ConfigManagementSyncState",
      "properties": {
        "sourceToken": {
          "type": "string",
          "description": "Token indicating the state of the repo."
        },
        "syncToken": {
          "description": "Token indicating the state of the syncer.",
          "type": "string"
        },
        "importToken": {
          "description": "Token indicating the state of the importer.",
          "type": "string"
        },
        "code": {
          "enum": [
            "SYNC_CODE_UNSPECIFIED",
            "SYNCED",
            "PENDING",
            "ERROR",
            "NOT_CONFIGURED",
            "NOT_INSTALLED",
            "UNAUTHORIZED",
            "UNREACHABLE"
          ],
          "type": "string",
          "description": "Sync status code",
          "enumDescriptions": [
            "ACM cannot determine a sync code",
            "ACM successfully synced the git Repo with the cluster",
            "ACM is in the progress of syncing a new change",
            "Indicates an error configuring ACM, and user action is required",
            "ACM has been installed (operator manifest deployed), but not configured.",
            "ACM has not been installed (no operator pod found)",
            "Error authorizing with the cluster",
            "Cluster could not be reached"
          ]
        },
        "lastSyncTime": {
          "description": "Timestamp type of when ACM last successfully synced the repo",
          "format": "google-datetime",
          "type": "string"
        },
        "lastSync": {
          "type": "string",
          "description": "Deprecated: use last_sync_time instead. Timestamp of when ACM last successfully synced the repo The time format is specified in https://golang.org/pkg/time/#Time.String"
        },
        "errors": {
          "items": {
            "$ref": "ConfigManagementSyncError"
          },
          "description": "A list of errors resulting from problematic configs. This list will be truncated after 100 errors, although it is unlikely for that many errors to simultaneously exist.",
          "type": "array"
        }
      },
      "description": "State indicating an ACM's progress syncing configurations to a cluster",
      "type": "object"
    },
    "PolicyControllerPolicyContentSpec": {
      "id": "PolicyControllerPolicyContentSpec",
      "description": "PolicyContentSpec defines the user's desired content configuration on the cluster.",
      "type": "object",
      "properties": {
        "bundles": {
          "type": "object",
          "additionalProperties": {
            "$ref": "PolicyControllerBundleInstallSpec"
          },
          "description": "map of bundle name to BundleInstallSpec. The bundle name maps to the `bundleName` key in the `policycontroller.gke.io/constraintData` annotation on a constraint."
        },
        "templateLibrary": {
          "$ref": "PolicyControllerTemplateLibraryConfig",
          "description": "Configures the installation of the Template Library."
        }
      }
    },
    "ConfigManagementMembershipState": {
      "type": "object",
      "properties": {
        "hierarchyControllerState": {
          "description": "Hierarchy Controller status",
          "$ref": "ConfigManagementHierarchyControllerState"
        },
        "clusterName": {
          "type": "string",
          "description": "This field is set to the `cluster_name` field of the Membership Spec if it is not empty. Otherwise, it is set to the cluster's fleet membership name."
        },
        "membershipSpec": {
          "$ref": "ConfigManagementMembershipSpec",
          "description": "Membership configuration in the cluster. This represents the actual state in the cluster, while the MembershipSpec in the FeatureSpec represents the intended state"
        },
        "operatorState": {
          "$ref": "ConfigManagementOperatorState",
          "description": "Current install status of ACM's Operator"
        },
        "configSyncState": {
          "description": "Current sync status",
          "$ref": "ConfigManagementConfigSyncState"
        },
        "binauthzState": {
          "description": "Binauthz status",
          "$ref": "ConfigManagementBinauthzState"
        },
        "policyControllerState": {
          "$ref": "ConfigManagementPolicyControllerState",
          "description": "PolicyController status"
        }
      },
      "id": "ConfigManagementMembershipState",
      "description": "**Anthos Config Management**: State for a single cluster."
    },
    "AnthosObservabilityFeatureSpec": {
      "description": "**Anthos Observability**: Spec",
      "type": "object",
      "properties": {
        "defaultMembershipSpec": {
          "$ref": "AnthosObservabilityMembershipSpec",
          "description": "Default membership spec for unconfigured memberships"
        }
      },
      "id": "AnthosObservabilityFeatureSpec"
    },
    "PolicyControllerHubConfig": {
      "properties": {
        "logDeniesEnabled": {
          "type": "boolean",
          "description": "Logs all denies and dry run failures."
        },
        "policyContent": {
          "$ref": "PolicyControllerPolicyContentSpec",
          "description": "Specifies the desired policy content on the cluster"
        },
        "templateLibraryConfig": {
          "$ref": "PolicyControllerTemplateLibraryConfig",
          "description": "Configures the library templates to install along with Policy Controller."
        },
        "deploymentConfigs": {
          "additionalProperties": {
            "$ref": "PolicyControllerPolicyControllerDeploymentConfig"
          },
          "description": "Map of deployment configs to deployments (\"admission\", \"audit\", \"mutation').",
          "type": "object"
        },
        "installSpec": {
          "enum": [
            "INSTALL_SPEC_UNSPECIFIED",
            "INSTALL_SPEC_NOT_INSTALLED",
            "INSTALL_SPEC_ENABLED",
            "INSTALL_SPEC_SUSPENDED"
          ],
          "enumDescriptions": [
            "Spec is unknown.",
            "Request to uninstall Policy Controller.",
            "Request to install and enable Policy Controller.",
            "Request to suspend Policy Controller i.e. its webhooks. If Policy Controller is not installed, it will be installed but suspended."
          ],
          "description": "The install_spec represents the intended state specified by the latest request that mutated install_spec in the feature spec, not the lifecycle state of the feature observed by the Hub feature controller that is reported in the feature state.",
          "type": "string"
        },
        "constraintViolationLimit": {
          "format": "int64",
          "description": "The maximum number of audit violations to be stored in a constraint. If not set, the internal default (currently 20) will be used.",
          "type": "string"
        },
        "monitoring": {
          "description": "Monitoring specifies the configuration of monitoring.",
          "$ref": "PolicyControllerMonitoringConfig"
        },
        "exemptableNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster."
        },
        "referentialRulesEnabled": {
          "description": "Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.",
          "type": "boolean"
        },
        "mutationEnabled": {
          "type": "boolean",
          "description": "Enables the ability to mutate resources using Policy Controller."
        },
        "auditIntervalSeconds": {
          "type": "string",
          "format": "int64",
          "description": "Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether."
        }
      },
      "description": "Configuration for Policy Controller",
      "id": "PolicyControllerHubConfig",
      "type": "object"
    },
    "ListMembershipBindingsResponse": {
      "description": "List of MembershipBindings.",
      "properties": {
        "membershipBindings": {
          "items": {
            "$ref": "MembershipBinding"
          },
          "type": "array",
          "description": "The list of membership_bindings"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to request the next page of resources from the `ListMembershipBindings` method. The value of an empty string means that there are no more resources to return."
        }
      },
      "id": "ListMembershipBindingsResponse",
      "type": "object"
    },
    "Policy": {
      "properties": {
        "bindings": {
          "type": "array",
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          },
          "description": "Specifies cloud audit logging configuration for this policy."
        },
        "etag": {
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "format": "byte"
        },
        "version": {
          "format": "int32",
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        }
      },
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "id": "Policy"
    },
    "ScopeLifecycleState": {
      "properties": {
        "code": {
          "readOnly": true,
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ],
          "enumDescriptions": [
            "The code is not set.",
            "The scope is being created.",
            "The scope active.",
            "The scope is being deleted.",
            "The scope is being updated."
          ],
          "type": "string",
          "description": "Output only. The current state of the scope resource."
        }
      },
      "id": "ScopeLifecycleState",
      "type": "object",
      "description": "ScopeLifecycleState describes the state of a Scope resource."
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "AppDevExperienceFeatureState": {
      "type": "object",
      "id": "AppDevExperienceFeatureState",
      "properties": {
        "networkingInstallSucceeded": {
          "description": "Status of subcomponent that detects configured Service Mesh resources.",
          "$ref": "Status"
        }
      },
      "description": "State for App Dev Exp Feature."
    },
    "Fleet": {
      "id": "Fleet",
      "description": "Fleet contains the Fleet-wide metadata and configuration.",
      "properties": {
        "deleteTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. When the Fleet was deleted.",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The full, unique resource name of this fleet in the format of `projects/{project}/locations/{location}/fleets/{fleet}`. Each Google Cloud project can have at most one fleet resource, named \"default\"."
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. When the Fleet was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. When the Fleet was last updated.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "uid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Google-generated UUID for this resource. This is unique across all Fleet resources. If a Fleet resource is deleted and another resource with the same name is created, it gets a different uid."
        },
        "state": {
          "description": "Output only. State of the namespace resource.",
          "readOnly": true,
          "$ref": "FleetLifecycleState"
        },
        "displayName": {
          "description": "Optional. A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: `Production Fleet`",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "protocol": "rest",
  "basePath": "",
  "fullyEncodeReservedExpansion": true,
  "title": "GKE Hub API",
  "baseUrl": "https://gkehub.googleapis.com/",
  "ownerDomain": "google.com",
  "batchPath": "batch",
  "version_module": true,
  "rootUrl": "https://gkehub.googleapis.com/",
  "revision": "20230609",
  "documentationLink": "https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster",
  "discoveryVersion": "v1",
  "id": "gkehub:v1beta",
  "canonicalName": "GKE Hub",
  "version": "v1beta",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "parameters": {
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "servicePath": ""
}

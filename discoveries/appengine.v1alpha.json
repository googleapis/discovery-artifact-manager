{
  "schemas": {
    "GoogleAppengineV1betaLocationMetadata": {
      "description": "Metadata for the given google.cloud.location.Location.",
      "properties": {
        "standardEnvironmentAvailable": {
          "description": "App Engine standard environment is available in the given location.@OutputOnly",
          "type": "boolean"
        },
        "searchApiAvailable": {
          "readOnly": true,
          "description": "Output only. Search API (https://cloud.google.com/appengine/docs/standard/python/search) is available in the given location.",
          "type": "boolean"
        },
        "flexibleEnvironmentAvailable": {
          "description": "App Engine flexible environment is available in the given location.@OutputOnly",
          "type": "boolean"
        }
      },
      "id": "GoogleAppengineV1betaLocationMetadata",
      "type": "object"
    },
    "CreateVersionMetadataV1": {
      "description": "Metadata for the given google.longrunning.Operation during a google.appengine.v1.CreateVersionRequest.",
      "id": "CreateVersionMetadataV1",
      "properties": {
        "cloudBuildId": {
          "type": "string",
          "description": "The Cloud Build ID if one was created as part of the version create. @OutputOnly"
        }
      },
      "type": "object"
    },
    "Empty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for Empty is empty JSON object {}.",
      "id": "Empty",
      "properties": {}
    },
    "CreateVersionMetadataV1Beta": {
      "type": "object",
      "description": "Metadata for the given google.longrunning.Operation during a google.appengine.v1beta.CreateVersionRequest.",
      "id": "CreateVersionMetadataV1Beta",
      "properties": {
        "cloudBuildId": {
          "description": "The Cloud Build ID if one was created as part of the version create. @OutputOnly",
          "type": "string"
        }
      }
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "description": "If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}."
        }
      },
      "id": "Operation",
      "type": "object"
    },
    "OperationMetadataV1Beta": {
      "id": "OperationMetadataV1Beta",
      "description": "Metadata for the given google.longrunning.Operation.",
      "properties": {
        "ephemeralMessage": {
          "type": "string",
          "description": "Ephemeral message that may change every time the operation is polled. @OutputOnly"
        },
        "method": {
          "type": "string",
          "description": "API method that initiated this operation. Example: google.appengine.v1beta.Versions.CreateVersion.@OutputOnly"
        },
        "warning": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Durable messages that persist on every operation poll. @OutputOnly"
        },
        "user": {
          "description": "User who requested this operation.@OutputOnly",
          "type": "string"
        },
        "insertTime": {
          "format": "google-datetime",
          "description": "Time that this operation was created.@OutputOnly",
          "type": "string"
        },
        "target": {
          "description": "Name of the resource that this operation is acting on. Example: apps/myapp/services/default.@OutputOnly",
          "type": "string"
        },
        "createVersionMetadata": {
          "$ref": "CreateVersionMetadataV1Beta"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Time that this operation completed.@OutputOnly",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ManagedCertificate": {
      "description": "A certificate managed by App Engine.",
      "type": "object",
      "id": "ManagedCertificate",
      "properties": {
        "lastRenewalTime": {
          "format": "google-datetime",
          "description": "Time at which the certificate was last renewed. The renewal process is fully managed. Certificate renewal will automatically occur before the certificate expires. Renewal errors can be tracked via ManagementStatus.@OutputOnly",
          "type": "string"
        },
        "status": {
          "enumDescriptions": [
            "",
            "Certificate was successfully obtained and inserted into the serving system.",
            "Certificate is under active attempts to acquire or renew.",
            "Most recent renewal failed due to a system failure and will be retried. System failure is likely transient, and subsequent renewal attempts may succeed. The last successfully provisioned certificate may still be serving.",
            "Most recent renewal failed due to an invalid DNS setup and will be retried. Renewal attempts will continue to fail until the certificate domain's DNS configuration is fixed. The last successfully provisioned certificate may still be serving.",
            "All renewal attempts have been exhausted. Most recent renewal failed due to an invalid DNS setup and will not be retried. The last successfully provisioned certificate may still be serving.",
            "Most recent renewal failed due to an explicit CAA record that does not include one of the in-use CAs (Google CA and Let's Encrypt). Renewals will continue to fail until the CAA is reconfigured. The last successfully provisioned certificate may still be serving.",
            "Most recent renewal failed due to a CAA retrieval failure. This means that the domain's DNS provider does not properly handle CAA records, failing requests for CAA records when no CAA records are defined. Renewals will continue to fail until the DNS provider is changed or a CAA record is added for the given domain. The last successfully provisioned certificate may still be serving."
          ],
          "enum": [
            "UNSPECIFIED_STATUS",
            "OK",
            "PENDING",
            "FAILED_RETRYING_INTERNAL",
            "FAILED_RETRYING_NOT_VISIBLE",
            "FAILED_PERMANENTLY_NOT_VISIBLE",
            "FAILED_RETRYING_CAA_FORBIDDEN",
            "FAILED_RETRYING_CAA_CHECKING"
          ],
          "type": "string",
          "description": "Status of certificate management. Refers to the most recent certificate acquisition or renewal attempt.@OutputOnly"
        }
      }
    },
    "CreateVersionMetadataV1Alpha": {
      "properties": {
        "cloudBuildId": {
          "description": "The Cloud Build ID if one was created as part of the version create. @OutputOnly",
          "type": "string"
        }
      },
      "description": "Metadata for the given google.longrunning.Operation during a google.appengine.v1alpha.CreateVersionRequest.",
      "id": "CreateVersionMetadataV1Alpha",
      "type": "object"
    },
    "ListAuthorizedCertificatesResponse": {
      "type": "object",
      "id": "ListAuthorizedCertificatesResponse",
      "properties": {
        "certificates": {
          "type": "array",
          "items": {
            "$ref": "AuthorizedCertificate"
          },
          "description": "The SSL certificates the user is authorized to administer."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "description": "Response message for AuthorizedCertificates.ListAuthorizedCertificates."
    },
    "ListAuthorizedDomainsResponse": {
      "id": "ListAuthorizedDomainsResponse",
      "description": "Response message for AuthorizedDomains.ListAuthorizedDomains.",
      "properties": {
        "domains": {
          "items": {
            "$ref": "AuthorizedDomain"
          },
          "type": "array",
          "description": "The authorized domains belonging to the user."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "type": "object"
    },
    "AuthorizedDomain": {
      "id": "AuthorizedDomain",
      "type": "object",
      "properties": {
        "name": {
          "description": "Full path to the AuthorizedDomain resource in the API. Example: apps/myapp/authorizedDomains/example.com.@OutputOnly",
          "type": "string"
        },
        "id": {
          "description": "Fully qualified domain name of the domain authorized for use. Example: example.com.",
          "type": "string"
        }
      },
      "description": "A domain that a user has been authorized to administer. To authorize use of a domain, verify ownership via Webmaster Central (https://www.google.com/webmasters/verification/home)."
    },
    "Location": {
      "id": "Location",
      "properties": {
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: \"us-east1\"."
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"} ",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: \"projects/example-project/locations/us-east1\""
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        }
      },
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object"
    },
    "Status": {
      "id": "Status",
      "type": "object",
      "description": "The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array"
        }
      }
    },
    "AuthorizedCertificate": {
      "type": "object",
      "description": "An SSL certificate that a user has been authorized to administer. A user is authorized to administer any certificate that applies to one of their authorized domains.",
      "properties": {
        "certificateRawData": {
          "description": "The SSL certificate serving the AuthorizedCertificate resource. This must be obtained independently from a certificate authority.",
          "$ref": "CertificateRawData"
        },
        "visibleDomainMappings": {
          "type": "array",
          "description": "The full paths to user visible Domain Mapping resources that have this certificate mapped. Example: apps/myapp/domainMappings/example.com.This may not represent the full list of mapped domain mappings if the user does not have VIEWER permissions on all of the applications that have this certificate mapped. See domain_mappings_count for a complete count.Only returned by GET or LIST requests when specifically requested by the view=FULL_CERTIFICATE option.@OutputOnly",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "Relative name of the certificate. This is a unique value autogenerated on AuthorizedCertificate resource creation. Example: 12345.@OutputOnly",
          "type": "string"
        },
        "domainMappingsCount": {
          "type": "integer",
          "description": "Aggregate count of the domain mappings with this certificate mapped. This count includes domain mappings on applications for which the user does not have VIEWER permissions.Only returned by GET or LIST requests when specifically requested by the view=FULL_CERTIFICATE option.@OutputOnly",
          "format": "int32"
        },
        "expireTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time when this certificate expires. To update the renewal time on this certificate, upload an SSL certificate with a different expiration time using AuthorizedCertificates.UpdateAuthorizedCertificate.@OutputOnly"
        },
        "displayName": {
          "description": "The user-specified display name of the certificate. This is not guaranteed to be unique. Example: My Certificate.",
          "type": "string"
        },
        "domainNames": {
          "items": {
            "type": "string"
          },
          "description": "Topmost applicable domains of this certificate. This certificate applies to these domains and their subdomains. Example: example.com.@OutputOnly",
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "Full path to the AuthorizedCertificate resource in the API. Example: apps/myapp/authorizedCertificates/12345.@OutputOnly"
        },
        "managedCertificate": {
          "description": "Only applicable if this certificate is managed by App Engine. Managed certificates are tied to the lifecycle of a DomainMapping and cannot be updated or deleted via the AuthorizedCertificates API. If this certificate is manually administered by the user, this field will be empty.@OutputOnly",
          "$ref": "ManagedCertificate"
        }
      },
      "id": "AuthorizedCertificate"
    },
    "CertificateRawData": {
      "type": "object",
      "id": "CertificateRawData",
      "description": "An SSL certificate obtained from a certificate authority.",
      "properties": {
        "privateKey": {
          "type": "string",
          "description": "Unencrypted PEM encoded RSA private key. This field is set once on certificate creation and then encrypted. The key size must be 2048 bits or fewer. Must include the header and footer. Example: -----BEGIN RSA PRIVATE KEY----- -----END RSA PRIVATE KEY----- @InputOnly"
        },
        "publicCertificate": {
          "description": "PEM encoded x.509 public key certificate. This field is set once on certificate creation. Must include the header and footer. Example: -----BEGIN CERTIFICATE----- -----END CERTIFICATE----- ",
          "type": "string"
        }
      }
    },
    "SslSettings": {
      "properties": {
        "isManagedCertificate": {
          "description": "Whether the mapped certificate is an App Engine managed certificate. Managed certificates are created by default with a domain mapping. To opt out, specify no_managed_certificate on a CREATE or UPDATE request.@OutputOnly",
          "type": "boolean"
        },
        "certificateId": {
          "description": "ID of the AuthorizedCertificate resource configuring SSL for the application. Clearing this field will remove SSL support.By default, a managed certificate is automatically created for every domain mapping. To omit SSL support or to configure SSL manually, specify no_managed_certificate on a CREATE or UPDATE request. You must be authorized to administer the AuthorizedCertificate resource to manually map it to a DomainMapping resource. Example: 12345.",
          "type": "string"
        }
      },
      "id": "SslSettings",
      "type": "object",
      "description": "SSL configuration for a DomainMapping resource."
    },
    "LocationMetadata": {
      "description": "Metadata for the given google.cloud.location.Location.",
      "properties": {
        "standardEnvironmentAvailable": {
          "type": "boolean",
          "description": "App Engine standard environment is available in the given location.@OutputOnly"
        },
        "searchApiAvailable": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Search API (https://cloud.google.com/appengine/docs/standard/python/search) is available in the given location."
        },
        "flexibleEnvironmentAvailable": {
          "description": "App Engine flexible environment is available in the given location.@OutputOnly",
          "type": "boolean"
        }
      },
      "id": "LocationMetadata",
      "type": "object"
    },
    "ListDomainMappingsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "domainMappings": {
          "items": {
            "$ref": "DomainMapping"
          },
          "description": "The domain mappings for the application.",
          "type": "array"
        }
      },
      "description": "Response message for DomainMappings.ListDomainMappings.",
      "id": "ListDomainMappingsResponse"
    },
    "OperationMetadataV1Alpha": {
      "description": "Metadata for the given google.longrunning.Operation.",
      "type": "object",
      "id": "OperationMetadataV1Alpha",
      "properties": {
        "createVersionMetadata": {
          "$ref": "CreateVersionMetadataV1Alpha"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Time that this operation completed.@OutputOnly",
          "type": "string"
        },
        "user": {
          "type": "string",
          "description": "User who requested this operation.@OutputOnly"
        },
        "target": {
          "type": "string",
          "description": "Name of the resource that this operation is acting on. Example: apps/myapp/services/default.@OutputOnly"
        },
        "ephemeralMessage": {
          "description": "Ephemeral message that may change every time the operation is polled. @OutputOnly",
          "type": "string"
        },
        "insertTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Time that this operation was created.@OutputOnly"
        },
        "warning": {
          "items": {
            "type": "string"
          },
          "description": "Durable messages that persist on every operation poll. @OutputOnly",
          "type": "array"
        },
        "method": {
          "type": "string",
          "description": "API method that initiated this operation. Example: google.appengine.v1alpha.Versions.CreateVersion.@OutputOnly"
        }
      }
    },
    "ResourceRecord": {
      "description": "A DNS resource record.",
      "id": "ResourceRecord",
      "properties": {
        "name": {
          "type": "string",
          "description": "Relative name of the object affected by this record. Only applicable for CNAME records. Example: 'www'."
        },
        "rrdata": {
          "type": "string",
          "description": "Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1)."
        },
        "type": {
          "type": "string",
          "description": "Resource record type. Example: AAAA.",
          "enumDescriptions": [
            "An A resource record. Data is an IPv4 address.",
            "An AAAA resource record. Data is an IPv6 address.",
            "A CNAME resource record. Data is a domain name to be aliased."
          ],
          "enum": [
            "A",
            "AAAA",
            "CNAME"
          ]
        }
      },
      "type": "object"
    },
    "OperationMetadataV1": {
      "description": "Metadata for the given google.longrunning.Operation.",
      "properties": {
        "insertTime": {
          "type": "string",
          "description": "Time that this operation was created.@OutputOnly",
          "format": "google-datetime"
        },
        "createVersionMetadata": {
          "$ref": "CreateVersionMetadataV1"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Time that this operation completed.@OutputOnly"
        },
        "target": {
          "description": "Name of the resource that this operation is acting on. Example: apps/myapp/services/default.@OutputOnly",
          "type": "string"
        },
        "warning": {
          "type": "array",
          "description": "Durable messages that persist on every operation poll. @OutputOnly",
          "items": {
            "type": "string"
          }
        },
        "user": {
          "description": "User who requested this operation.@OutputOnly",
          "type": "string"
        },
        "method": {
          "type": "string",
          "description": "API method that initiated this operation. Example: google.appengine.v1.Versions.CreateVersion.@OutputOnly"
        },
        "ephemeralMessage": {
          "description": "Ephemeral message that may change every time the operation is polled. @OutputOnly",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OperationMetadataV1"
    },
    "DomainMapping": {
      "description": "A domain serving an App Engine application.",
      "properties": {
        "resourceRecords": {
          "description": "The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping.@OutputOnly",
          "type": "array",
          "items": {
            "$ref": "ResourceRecord"
          }
        },
        "name": {
          "description": "Full path to the DomainMapping resource in the API. Example: apps/myapp/domainMapping/example.com.@OutputOnly",
          "type": "string"
        },
        "sslSettings": {
          "$ref": "SslSettings",
          "description": "SSL configuration for this domain. If unconfigured, this domain will not serve with SSL."
        },
        "id": {
          "type": "string",
          "description": "Relative name of the domain serving the application. Example: example.com."
        }
      },
      "id": "DomainMapping",
      "type": "object"
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "type": "object",
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "description": "The response message for Operations.ListOperations."
    },
    "ListLocationsResponse": {
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "ListLocationsResponse"
    }
  },
  "revision": "20210613",
  "batchPath": "batch",
  "basePath": "",
  "parameters": {
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    },
    "alt": {
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    }
  },
  "ownerDomain": "google.com",
  "id": "appengine:v1alpha",
  "baseUrl": "https://appengine.googleapis.com/",
  "title": "App Engine Admin API",
  "documentationLink": "https://cloud.google.com/appengine/docs/admin-api/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/appengine.admin": {
          "description": "View and manage your applications deployed on Google App Engine"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        }
      }
    }
  },
  "mtlsRootUrl": "https://appengine.mtls.googleapis.com/",
  "name": "appengine",
  "discoveryVersion": "v1",
  "resources": {
    "apps": {
      "resources": {
        "operations": {
          "methods": {
            "get": {
              "flatPath": "v1alpha/apps/{appsId}/operations/{operationsId}",
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "id": "appengine.apps.operations.get",
              "parameters": {
                "appsId": {
                  "description": "Part of `name`. The name of the operation resource.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "operationsId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Part of `name`. See documentation of `appsId`."
                }
              },
              "path": "v1alpha/apps/{appsId}/operations/{operationsId}",
              "parameterOrder": [
                "appsId",
                "operationsId"
              ],
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "httpMethod": "GET"
            },
            "list": {
              "id": "appengine.apps.operations.list",
              "path": "v1alpha/apps/{appsId}/operations",
              "httpMethod": "GET",
              "flatPath": "v1alpha/apps/{appsId}/operations",
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "The standard list page size.",
                  "format": "int32"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The standard list page token."
                },
                "appsId": {
                  "type": "string",
                  "required": true,
                  "description": "Part of `name`. The name of the operation's parent resource.",
                  "location": "path"
                },
                "filter": {
                  "location": "query",
                  "description": "The standard list filter.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "ListOperationsResponse"
              },
              "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users/*/operations. To override the binding, API services can add a binding such as \"/v1/{name=users/*}/operations\" to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameterOrder": [
                "appsId"
              ]
            }
          }
        },
        "authorizedDomains": {
          "methods": {
            "list": {
              "path": "v1alpha/apps/{appsId}/authorizedDomains",
              "parameterOrder": [
                "appsId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1alpha/apps/{appsId}/authorizedDomains",
              "description": "Lists all domains the user is authorized to administer.",
              "id": "appengine.apps.authorizedDomains.list",
              "parameters": {
                "pageSize": {
                  "description": "Maximum results to return per page.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "appsId": {
                  "location": "path",
                  "description": "Part of `parent`. Name of the parent Application resource. Example: apps/myapp.",
                  "type": "string",
                  "required": true
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Continuation token for fetching the next page of results."
                }
              },
              "httpMethod": "GET",
              "response": {
                "$ref": "ListAuthorizedDomainsResponse"
              }
            }
          }
        },
        "domainMappings": {
          "methods": {
            "create": {
              "path": "v1alpha/apps/{appsId}/domainMappings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Maps a domain to an application. A user must be authorized to administer a domain in order to map it to an application. For a list of available authorized domains, see AuthorizedDomains.ListAuthorizedDomains.",
              "response": {
                "$ref": "Operation"
              },
              "parameters": {
                "overrideStrategy": {
                  "location": "query",
                  "enumDescriptions": [
                    "Strategy unspecified. Defaults to STRICT.",
                    "Overrides not allowed. If a mapping already exists for the specified domain, the request will return an ALREADY_EXISTS (409).",
                    "Overrides allowed. If a mapping already exists for the specified domain, the request will overwrite it. Note that this might stop another Google product from serving. For example, if the domain is mapped to another App Engine application, that app will no longer serve from that domain."
                  ],
                  "type": "string",
                  "enum": [
                    "UNSPECIFIED_DOMAIN_OVERRIDE_STRATEGY",
                    "STRICT",
                    "OVERRIDE"
                  ],
                  "description": "Whether the domain creation should override any existing mappings for this domain. By default, overrides are rejected."
                },
                "appsId": {
                  "required": true,
                  "description": "Part of `parent`. Name of the parent Application resource. Example: apps/myapp.",
                  "type": "string",
                  "location": "path"
                },
                "noManagedCertificate": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Whether a managed certificate should be provided by App Engine. If true, a certificate ID must be manaually set in the DomainMapping resource to configure SSL for this domain. If false, a managed certificate will be provisioned and a certificate ID will be automatically populated."
                }
              },
              "request": {
                "$ref": "DomainMapping"
              },
              "httpMethod": "POST",
              "id": "appengine.apps.domainMappings.create",
              "flatPath": "v1alpha/apps/{appsId}/domainMappings",
              "parameterOrder": [
                "appsId"
              ]
            },
            "list": {
              "flatPath": "v1alpha/apps/{appsId}/domainMappings",
              "parameters": {
                "pageToken": {
                  "description": "Continuation token for fetching the next page of results.",
                  "location": "query",
                  "type": "string"
                },
                "appsId": {
                  "description": "Part of `parent`. Name of the parent Application resource. Example: apps/myapp.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "Maximum results to return per page."
                }
              },
              "response": {
                "$ref": "ListDomainMappingsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "description": "Lists the domain mappings on an application.",
              "id": "appengine.apps.domainMappings.list",
              "parameterOrder": [
                "appsId"
              ],
              "path": "v1alpha/apps/{appsId}/domainMappings",
              "httpMethod": "GET"
            },
            "patch": {
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "appsId",
                "domainMappingsId"
              ],
              "response": {
                "$ref": "Operation"
              },
              "request": {
                "$ref": "DomainMapping"
              },
              "flatPath": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}",
              "description": "Updates the specified domain mapping. To map an SSL certificate to a domain mapping, update certificate_id to point to an AuthorizedCertificate resource. A user must be authorized to administer the associated domain in order to update a DomainMapping resource.",
              "path": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}",
              "parameters": {
                "noManagedCertificate": {
                  "type": "boolean",
                  "description": "Whether a managed certificate should be provided by App Engine. If true, a certificate ID must be manually set in the DomainMapping resource to configure SSL for this domain. If false, a managed certificate will be provisioned and a certificate ID will be automatically populated. Only applicable if ssl_settings.certificate_id is specified in the update mask.",
                  "location": "query"
                },
                "updateMask": {
                  "description": "Required. Standard field mask for the set of fields to be updated.",
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string"
                },
                "appsId": {
                  "location": "path",
                  "required": true,
                  "description": "Part of `name`. Name of the resource to update. Example: apps/myapp/domainMappings/example.com.",
                  "type": "string"
                },
                "domainMappingsId": {
                  "description": "Part of `name`. See documentation of `appsId`.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "id": "appengine.apps.domainMappings.patch"
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "appsId",
                "domainMappingsId"
              ],
              "flatPath": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}",
              "parameters": {
                "domainMappingsId": {
                  "description": "Part of `name`. See documentation of `appsId`.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "appsId": {
                  "type": "string",
                  "description": "Part of `name`. Name of the resource to delete. Example: apps/myapp/domainMappings/example.com.",
                  "location": "path",
                  "required": true
                }
              },
              "description": "Deletes the specified domain mapping. A user must be authorized to administer the associated domain in order to delete a DomainMapping resource.",
              "path": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}",
              "id": "appengine.apps.domainMappings.delete"
            },
            "get": {
              "id": "appengine.apps.domainMappings.get",
              "response": {
                "$ref": "DomainMapping"
              },
              "parameterOrder": [
                "appsId",
                "domainMappingsId"
              ],
              "parameters": {
                "domainMappingsId": {
                  "type": "string",
                  "description": "Part of `name`. See documentation of `appsId`.",
                  "required": true,
                  "location": "path"
                },
                "appsId": {
                  "required": true,
                  "location": "path",
                  "description": "Part of `name`. Name of the resource requested. Example: apps/myapp/domainMappings/example.com.",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "path": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}",
              "description": "Gets the specified domain mapping.",
              "flatPath": "v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}"
            }
          }
        },
        "authorizedCertificates": {
          "methods": {
            "delete": {
              "path": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}",
              "flatPath": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}",
              "description": "Deletes the specified SSL certificate.",
              "parameters": {
                "authorizedCertificatesId": {
                  "location": "path",
                  "description": "Part of `name`. See documentation of `appsId`.",
                  "required": true,
                  "type": "string"
                },
                "appsId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Part of `name`. Name of the resource to delete. Example: apps/myapp/authorizedCertificates/12345."
                }
              },
              "parameterOrder": [
                "appsId",
                "authorizedCertificatesId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Empty"
              },
              "id": "appengine.apps.authorizedCertificates.delete",
              "httpMethod": "DELETE"
            },
            "get": {
              "description": "Gets the specified SSL certificate.",
              "flatPath": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}",
              "parameterOrder": [
                "appsId",
                "authorizedCertificatesId"
              ],
              "response": {
                "$ref": "AuthorizedCertificate"
              },
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "httpMethod": "GET",
              "path": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}",
              "parameters": {
                "authorizedCertificatesId": {
                  "type": "string",
                  "description": "Part of `name`. See documentation of `appsId`.",
                  "required": true,
                  "location": "path"
                },
                "appsId": {
                  "required": true,
                  "description": "Part of `name`. Name of the resource requested. Example: apps/myapp/authorizedCertificates/12345.",
                  "location": "path",
                  "type": "string"
                },
                "view": {
                  "location": "query",
                  "enumDescriptions": [
                    "Basic certificate information, including applicable domains and expiration date.",
                    "The information from BASIC_CERTIFICATE, plus detailed information on the domain mappings that have this certificate mapped."
                  ],
                  "enum": [
                    "BASIC_CERTIFICATE",
                    "FULL_CERTIFICATE"
                  ],
                  "type": "string",
                  "description": "Controls the set of fields returned in the GET response."
                }
              },
              "id": "appengine.apps.authorizedCertificates.get"
            },
            "patch": {
              "description": "Updates the specified SSL certificate. To renew a certificate and maintain its existing domain mappings, update certificate_data with a new certificate. The new certificate must be applicable to the same domains as the original certificate. The certificate display_name may also be updated.",
              "flatPath": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}",
              "parameterOrder": [
                "appsId",
                "authorizedCertificatesId"
              ],
              "path": "v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}",
              "id": "appengine.apps.authorizedCertificates.patch",
              "parameters": {
                "appsId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Part of `name`. Name of the resource to update. Example: apps/myapp/authorizedCertificates/12345."
                },
                "authorizedCertificatesId": {
                  "description": "Part of `name`. See documentation of `appsId`.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "updateMask": {
                  "location": "query",
                  "description": "Standard field mask for the set of fields to be updated. Updates are only supported on the certificate_raw_data and display_name fields.",
                  "format": "google-fieldmask",
                  "type": "string"
                }
              },
              "request": {
                "$ref": "AuthorizedCertificate"
              },
              "httpMethod": "PATCH",
              "response": {
                "$ref": "AuthorizedCertificate"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "create": {
              "parameters": {
                "appsId": {
                  "required": true,
                  "description": "Part of `parent`. Name of the parent Application resource. Example: apps/myapp.",
                  "type": "string",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "AuthorizedCertificate"
              },
              "parameterOrder": [
                "appsId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha/apps/{appsId}/authorizedCertificates",
              "description": "Uploads the specified SSL certificate.",
              "path": "v1alpha/apps/{appsId}/authorizedCertificates",
              "request": {
                "$ref": "AuthorizedCertificate"
              },
              "httpMethod": "POST",
              "id": "appengine.apps.authorizedCertificates.create"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "description": "Lists all SSL certificates the user is authorized to administer.",
              "id": "appengine.apps.authorizedCertificates.list",
              "parameterOrder": [
                "appsId"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "Continuation token for fetching the next page of results.",
                  "type": "string"
                },
                "view": {
                  "description": "Controls the set of fields returned in the LIST response.",
                  "type": "string",
                  "enumDescriptions": [
                    "Basic certificate information, including applicable domains and expiration date.",
                    "The information from BASIC_CERTIFICATE, plus detailed information on the domain mappings that have this certificate mapped."
                  ],
                  "location": "query",
                  "enum": [
                    "BASIC_CERTIFICATE",
                    "FULL_CERTIFICATE"
                  ]
                },
                "appsId": {
                  "description": "Part of `parent`. Name of the parent Application resource. Example: apps/myapp.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "Maximum results to return per page.",
                  "format": "int32",
                  "location": "query"
                }
              },
              "flatPath": "v1alpha/apps/{appsId}/authorizedCertificates",
              "path": "v1alpha/apps/{appsId}/authorizedCertificates",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListAuthorizedCertificatesResponse"
              }
            }
          }
        },
        "locations": {
          "methods": {
            "list": {
              "parameterOrder": [
                "appsId"
              ],
              "httpMethod": "GET",
              "id": "appengine.apps.locations.list",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameters": {
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in AIP-160 (https://google.aip.dev/160).",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A page token received from the next_page_token field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                },
                "appsId": {
                  "type": "string",
                  "description": "Part of `name`. The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "location": "path"
                }
              },
              "path": "v1alpha/apps/{appsId}/locations",
              "description": "Lists information about the supported locations for this service.",
              "flatPath": "v1alpha/apps/{appsId}/locations"
            },
            "get": {
              "flatPath": "v1alpha/apps/{appsId}/locations/{locationsId}",
              "path": "v1alpha/apps/{appsId}/locations/{locationsId}",
              "parameterOrder": [
                "appsId",
                "locationsId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/appengine.admin",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameters": {
                "appsId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Part of `name`. Resource name for the location."
                },
                "locationsId": {
                  "required": true,
                  "description": "Part of `name`. See documentation of `appsId`.",
                  "location": "path",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Location"
              },
              "httpMethod": "GET",
              "description": "Gets information about a location.",
              "id": "appengine.apps.locations.get"
            }
          }
        }
      }
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "ownerName": "Google",
  "servicePath": "",
  "kind": "discovery#restDescription",
  "version": "v1alpha",
  "description": "Provisions and manages developers' App Engine applications.",
  "protocol": "rest",
  "rootUrl": "https://appengine.googleapis.com/"
}

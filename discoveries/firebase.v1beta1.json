{
  "mtlsRootUrl": "https://firebase.mtls.googleapis.com/",
  "ownerName": "Google",
  "parameters": {
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query",
      "default": "true"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    }
  },
  "id": "firebase:v1beta1",
  "documentationLink": "https://firebase.google.com",
  "version_module": true,
  "version": "v1beta1",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "baseUrl": "https://firebase.googleapis.com/",
  "kind": "discovery#restDescription",
  "batchPath": "batch",
  "description": "The Firebase Management API enables programmatic setup and management of Firebase projects, including a project's Firebase resources and Firebase apps.",
  "servicePath": "",
  "ownerDomain": "google.com",
  "revision": "20230405",
  "protocol": "rest",
  "title": "Firebase Management API",
  "fullyEncodeReservedExpansion": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/firebase": {
          "description": "View and administer all your Firebase data and settings"
        },
        "https://www.googleapis.com/auth/firebase.readonly": {
          "description": "View all your Firebase data and settings"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud services and see the email address of your Google Account"
        }
      }
    }
  },
  "rootUrl": "https://firebase.googleapis.com/",
  "name": "firebase",
  "discoveryVersion": "v1",
  "schemas": {
    "SearchFirebaseAppsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "If the result list is too large to fit in a single response, then a token is returned. This token can be used in a subsequent calls to `SearchFirebaseApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted."
        },
        "apps": {
          "type": "array",
          "description": "One page of results from a call to `SearchFirebaseApps`.",
          "items": {
            "$ref": "FirebaseAppInfo"
          }
        }
      },
      "id": "SearchFirebaseAppsResponse",
      "type": "object"
    },
    "ListAvailableProjectsResponse": {
      "id": "ListAvailableProjectsResponse",
      "properties": {
        "projectInfo": {
          "items": {
            "$ref": "ProjectInfo"
          },
          "description": "The list of GCP `Projects` which can have Firebase resources added to them.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent calls to `ListAvailableProjects` to find the next group of Projects. Page tokens are short-lived and should not be persisted."
        }
      },
      "type": "object"
    },
    "RemoveAnalyticsRequest": {
      "id": "RemoveAnalyticsRequest",
      "properties": {
        "analyticsPropertyId": {
          "type": "string",
          "description": "Optional. The ID of the Google Analytics property associated with the specified `FirebaseProject`. - If not set, then the Google Analytics property that is currently associated with the specified `FirebaseProject` is removed. - If set, and the specified `FirebaseProject` is currently associated with a *different* Google Analytics property, then the response is a `412 Precondition Failed` error. "
        }
      },
      "type": "object"
    },
    "RemoveAndroidAppRequest": {
      "type": "object",
      "properties": {
        "etag": {
          "description": "Checksum provided in the AndroidApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "immediate": {
          "description": "Determines whether to _immediately_ delete the AndroidApp. If set to true, the App is immediately deleted from the Project and cannot be restored to the Project. If not set, defaults to false, which means the App will be set to expire in 30 days. Within the 30 days, the App may be restored to the Project using UndeleteAndroidApp.",
          "type": "boolean"
        },
        "validateOnly": {
          "description": "If set to true, the request is only validated. The App will _not_ be removed.",
          "type": "boolean"
        },
        "allowMissing": {
          "type": "boolean",
          "description": "If set to true, and the App is not found, the request will succeed but no action will be taken on the server."
        }
      },
      "id": "RemoveAndroidAppRequest"
    },
    "MessageSet": {
      "properties": {},
      "type": "object",
      "id": "MessageSet",
      "description": "This is proto2's version of MessageSet."
    },
    "DefaultResources": {
      "type": "object",
      "description": "The default resources associated with the Project.",
      "properties": {
        "realtimeDatabaseInstance": {
          "readOnly": true,
          "description": "Output only. The default Firebase Realtime Database instance name, in the format: PROJECT_ID Though rare, your `projectId` might already be used as the name for an existing Realtime Database instance in another project (learn more about [database sharding](https://firebase.google.com/docs/database/usage/sharding)). In these cases, your `projectId` is appended with a hyphen then five alphanumeric characters to create your default Realtime Database instance name. For example, if your `projectId` is `myproject123`, your default database instance name might be: `myproject123-a5c16`",
          "type": "string"
        },
        "locationId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). This field is omitted if the default GCP resource location has not been finalized yet. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project."
        },
        "hostingSite": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The default Firebase Hosting site name, in the format: PROJECT_ID Though rare, your `projectId` might already be used as the name for an existing Hosting site in another project (learn more about creating non-default, [additional sites](https://firebase.google.com/docs/hosting/multisites)). In these cases, your `projectId` is appended with a hyphen then five alphanumeric characters to create your default Hosting site name. For example, if your `projectId` is `myproject123`, your default Hosting site name might be: `myproject123-a5c16`"
        },
        "storageBucket": {
          "description": "Output only. The default Cloud Storage for Firebase storage bucket, in the format: PROJECT_ID.appspot.com",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "DefaultResources"
    },
    "ShaCertificate": {
      "id": "ShaCertificate",
      "description": "A SHA-1 or SHA-256 certificate associated with the AndroidApp.",
      "type": "object",
      "properties": {
        "shaHash": {
          "description": "The certificate hash for the `AndroidApp`.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the ShaCertificate for the AndroidApp, in the format: projects/PROJECT_IDENTIFIER/androidApps/APP_ID/sha/SHA_HASH * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.androidApps#AndroidApp.FIELDS.app_id)). * SHA_HASH: the certificate hash for the App (see [`shaHash`](../projects.androidApps.sha#ShaCertificate.FIELDS.sha_hash))."
        },
        "certType": {
          "description": "The type of SHA certificate encoded in the hash.",
          "enumDescriptions": [
            "Unknown state. This is only used for distinguishing unset values.",
            "Certificate is a SHA-1 type certificate.",
            "Certificate is a SHA-256 type certificate."
          ],
          "type": "string",
          "enum": [
            "SHA_CERTIFICATE_TYPE_UNSPECIFIED",
            "SHA_1",
            "SHA_256"
          ]
        }
      }
    },
    "WebAppConfig": {
      "properties": {
        "databaseURL": {
          "description": "The default Firebase Realtime Database URL.",
          "type": "string"
        },
        "authDomain": {
          "type": "string",
          "description": "The domain Firebase Auth configures for OAuth redirects, in the format: PROJECT_ID.firebaseapp.com"
        },
        "storageBucket": {
          "type": "string",
          "description": "The default Cloud Storage for Firebase storage bucket name."
        },
        "appId": {
          "description": "Immutable. The globally unique, Firebase-assigned identifier for the `WebApp`.",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "Immutable. A user-assigned unique identifier for the `FirebaseProject`."
        },
        "apiKey": {
          "type": "string",
          "description": "The [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key associated with the `WebApp`. Note that this value is _not_ the [`apiKeyId`](../projects.webApps#WebApp.FIELDS.api_key_id) (the UID) of the API key associated with the `WebApp`."
        },
        "locationId": {
          "type": "string",
          "description": "The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). This field is omitted if the default GCP resource location has not been finalized yet. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project."
        },
        "messagingSenderId": {
          "description": "The sender ID for use with Firebase Cloud Messaging.",
          "type": "string"
        },
        "measurementId": {
          "type": "string",
          "description": "The unique Google-assigned identifier of the Google Analytics web stream associated with the `WebApp`. Firebase SDKs use this ID to interact with Google Analytics APIs. This field is only present if the `WebApp` is linked to a web stream in a Google Analytics App + Web property. Learn more about this ID and Google Analytics web streams in the [Analytics documentation](https://support.google.com/analytics/answer/9304153). To generate a `measurementId` and link the `WebApp` with a Google Analytics web stream, call [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics). For apps using the Firebase JavaScript SDK v7.20.0 and later, Firebase dynamically fetches the `measurementId` when your app initializes Analytics. Having this ID in your config object is optional, but it does serve as a fallback in the rare case that the dynamic fetch fails."
        }
      },
      "id": "WebAppConfig",
      "type": "object",
      "description": "Configuration metadata of a single Firebase App for the web."
    },
    "FirebaseProject": {
      "id": "FirebaseProject",
      "properties": {
        "projectId": {
          "description": "Output only. Immutable. A user-assigned unique identifier for the Project. This identifier may appear in URLs or names for some Firebase resources associated with the Project, but it should generally be treated as a convenience alias to reference the Project.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "The user-assigned display name of the Project.",
          "type": "string"
        },
        "projectNumber": {
          "description": "Output only. Immutable. The globally unique, Google-assigned canonical identifier for the Project. Use this identifier when configuring integrations and/or making API calls to Firebase or third-party services.",
          "type": "string",
          "format": "int64",
          "readOnly": true
        },
        "annotations": {
          "type": "object",
          "description": "A set of user-defined annotations for the FirebaseProject. Learn more about annotations in Google's [AIP-128 standard](https://google.aip.dev/128#annotations). These annotations are intended solely for developers and client-side tools. Firebase services will not mutate this annotations set.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "type": "string",
          "description": "This checksum is computed by the server based on the value of other fields, and it may be sent with update requests to ensure the client has an up-to-date value before proceeding. Learn more about `etag` in Google's [AIP-154 standard](https://google.aip.dev/154#declarative-friendly-resources). This etag is strongly validated."
        },
        "resources": {
          "description": "Output only. The default Firebase resources associated with the Project.",
          "readOnly": true,
          "$ref": "DefaultResources"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETED"
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. The lifecycle state of the Project.",
          "enumDescriptions": [
            "Unspecified state.",
            "The Project is active.",
            "The Project has been soft-deleted."
          ]
        },
        "name": {
          "description": "The resource name of the Project, in the format: projects/PROJECT_IDENTIFIER PROJECT_IDENTIFIER: the Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A `FirebaseProject` is the top-level Firebase entity. It is the container for Firebase Apps, Firebase Hosting sites, storage systems (Firebase Realtime Database, Cloud Firestore, Cloud Storage buckets), and other Firebase and Google Cloud Platform (GCP) resources. You create a `FirebaseProject` by calling AddFirebase and specifying an *existing* [GCP `Project`](https://cloud.google.com/resource-manager/reference/rest/v1/projects). This adds Firebase resources to the existing GCP `Project`. Since a FirebaseProject is actually also a GCP `Project`, a `FirebaseProject` has the same underlying GCP identifiers (`projectNumber` and `projectId`). This allows for easy interop with Google APIs."
    },
    "ListFirebaseProjectsResponse": {
      "properties": {
        "results": {
          "items": {
            "$ref": "FirebaseProject"
          },
          "description": "One page of the list of Projects that are accessible to the caller.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent calls to `ListFirebaseProjects` to find the next group of Projects. Page tokens are short-lived and should not be persisted.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListFirebaseProjectsResponse"
    },
    "IosApp": {
      "description": "Details of a Firebase App for iOS.",
      "properties": {
        "expireTime": {
          "type": "string",
          "description": "Output only. Timestamp of when the App will be considered expired and cannot be undeleted. This value is only provided if the App is in the `DELETED` state.",
          "format": "google-datetime",
          "readOnly": true
        },
        "displayName": {
          "description": "The user-assigned display name for the `IosApp`.",
          "type": "string"
        },
        "teamId": {
          "description": "The Apple Developer Team ID associated with the App in the App Store.",
          "type": "string"
        },
        "apiKeyId": {
          "description": "The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the `IosApp`. Be aware that this value is the UID of the API key, _not_ the [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key. The `keyString` is the value that can be found in the App's [configuration artifact](../../rest/v1beta1/projects.iosApps/getConfig). If `api_key_id` is not set in requests to [`iosApps.Create`](../../rest/v1beta1/projects.iosApps/create), then Firebase automatically associates an `api_key_id` with the `IosApp`. This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned. In patch requests, `api_key_id` cannot be set to an empty value, and the new UID must have no restrictions or only have restrictions that are valid for the associated `IosApp`. We recommend using the [Google Cloud Console](https://console.cloud.google.com/apis/credentials) to manage API keys.",
          "type": "string"
        },
        "appId": {
          "type": "string",
          "description": "Output only. Immutable. The globally unique, Firebase-assigned identifier for the `IosApp`. This identifier should be treated as an opaque token, as the data format is not specified.",
          "readOnly": true
        },
        "bundleId": {
          "description": "Immutable. The canonical bundle ID of the iOS app as it would appear in the iOS AppStore.",
          "type": "string"
        },
        "projectId": {
          "readOnly": true,
          "description": "Output only. Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `IosApp`.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the IosApp, in the format: projects/PROJECT_IDENTIFIER /iosApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.iosApps#IosApp.FIELDS.app_id))."
        },
        "etag": {
          "description": "This checksum is computed by the server based on the value of other fields, and it may be sent with update requests to ensure the client has an up-to-date value before proceeding. Learn more about `etag` in Google's [AIP-154 standard](https://google.aip.dev/154#declarative-friendly-resources). This etag is strongly validated.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "The App is active.",
            "The App has been soft-deleted. After an App has been in the `DELETED` state for more than 30 days, it is considered expired and will be permanently deleted. Up until this time, you can restore the App by calling `Undelete` ([Android](projects.androidApps/undelete) | [iOS](projects.iosApps/undelete) | [web](projects.webApps/undelete))."
          ],
          "description": "Output only. The lifecycle state of the App.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETED"
          ]
        },
        "appStoreId": {
          "description": "The automatically generated Apple ID assigned to the iOS app by Apple in the iOS App Store.",
          "type": "string"
        }
      },
      "id": "IosApp",
      "type": "object"
    },
    "ListAvailableLocationsResponse": {
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "One page of results from a call to `ListAvailableLocations`."
        },
        "nextPageToken": {
          "type": "string",
          "description": "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results and all available locations have been listed. This token can be used in a subsequent call to `ListAvailableLocations` to find more locations. Page tokens are short-lived and should not be persisted."
        }
      },
      "type": "object",
      "id": "ListAvailableLocationsResponse"
    },
    "ProjectInfo": {
      "id": "ProjectInfo",
      "description": "A reference to a Google Cloud Platform (GCP) `Project`.",
      "properties": {
        "displayName": {
          "description": "The user-assigned display name of the GCP `Project`, for example: `My App`",
          "type": "string"
        },
        "project": {
          "description": "The resource name of the GCP `Project` to which Firebase resources can be added, in the format: projects/PROJECT_IDENTIFIER Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.",
          "type": "string"
        },
        "locationId": {
          "description": "The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). Not all Projects will have this field populated. If it is not populated, it means that the Project does not yet have a default GCP resource location. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UndeleteAndroidAppRequest": {
      "type": "object",
      "id": "UndeleteAndroidAppRequest",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Checksum provided in the AndroidApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding."
        },
        "validateOnly": {
          "type": "boolean",
          "description": "If set to true, the request is only validated. The App will _not_ be undeleted."
        }
      }
    },
    "AnalyticsDetails": {
      "id": "AnalyticsDetails",
      "type": "object",
      "properties": {
        "streamMappings": {
          "description": " - For `AndroidApps` and `IosApps`: a map of `app` to `streamId` for each Firebase App in the specified `FirebaseProject`. Each `app` and `streamId` appears only once. - For `WebApps`: a map of `app` to `streamId` and `measurementId` for each `WebApp` in the specified `FirebaseProject`. Each `app`, `streamId`, and `measurementId` appears only once.",
          "type": "array",
          "items": {
            "$ref": "StreamMapping"
          }
        },
        "analyticsProperty": {
          "$ref": "AnalyticsProperty",
          "description": "The Analytics Property object associated with the specified `FirebaseProject`. This object contains the details of the Google Analytics property associated with the Project."
        }
      }
    },
    "Empty": {
      "properties": {},
      "type": "object",
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "WebApp": {
      "properties": {
        "webId": {
          "description": "Output only. Immutable. A unique, Firebase-assigned identifier for the `WebApp`. This identifier is only used to populate the `namespace` value for the `WebApp`. For most use cases, use `appId` to identify or reference the App. The `webId` value is only unique within a `FirebaseProject` and its associated Apps.",
          "readOnly": true,
          "type": "string"
        },
        "apiKeyId": {
          "type": "string",
          "description": "The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the `WebApp`. Be aware that this value is the UID of the API key, _not_ the [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key. The `keyString` is the value that can be found in the App's [configuration artifact](../../rest/v1beta1/projects.webApps/getConfig). If `api_key_id` is not set in requests to [`webApps.Create`](../../rest/v1beta1/projects.webApps/create), then Firebase automatically associates an `api_key_id` with the `WebApp`. This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned. In patch requests, `api_key_id` cannot be set to an empty value, and the new UID must have no restrictions or only have restrictions that are valid for the associated `WebApp`. We recommend using the [Google Cloud Console](https://console.cloud.google.com/apis/credentials) to manage API keys."
        },
        "etag": {
          "description": "This checksum is computed by the server based on the value of other fields, and it may be sent with update requests to ensure the client has an up-to-date value before proceeding. Learn more about `etag` in Google's [AIP-154 standard](https://google.aip.dev/154#declarative-friendly-resources). This etag is strongly validated.",
          "type": "string"
        },
        "displayName": {
          "description": "The user-assigned display name for the `WebApp`.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETED"
          ],
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "The App is active.",
            "The App has been soft-deleted. After an App has been in the `DELETED` state for more than 30 days, it is considered expired and will be permanently deleted. Up until this time, you can restore the App by calling `Undelete` ([Android](projects.androidApps/undelete) | [iOS](projects.iosApps/undelete) | [web](projects.webApps/undelete))."
          ],
          "description": "Output only. The lifecycle state of the App."
        },
        "appUrls": {
          "description": "The URLs where the `WebApp` is hosted.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the WebApp, in the format: projects/PROJECT_IDENTIFIER /webApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.webApps#WebApp.FIELDS.app_id))."
        },
        "expireTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Timestamp of when the App will be considered expired and cannot be undeleted. This value is only provided if the App is in the `DELETED` state.",
          "format": "google-datetime"
        },
        "appId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Immutable. The globally unique, Firebase-assigned identifier for the `WebApp`. This identifier should be treated as an opaque token, as the data format is not specified."
        },
        "projectId": {
          "description": "Output only. Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `WebApp`.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "id": "WebApp",
      "description": "Details of a Firebase App for the web."
    },
    "AdminSdkConfig": {
      "properties": {
        "projectId": {
          "type": "string",
          "description": "Immutable. A user-assigned unique identifier for the `FirebaseProject`. This identifier may appear in URLs or names for some Firebase resources associated with the Project, but it should generally be treated as a convenience alias to reference the Project."
        },
        "locationId": {
          "type": "string",
          "description": "The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). This field is omitted if the default GCP resource location has not been finalized yet. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project."
        },
        "databaseURL": {
          "description": "The default Firebase Realtime Database URL.",
          "type": "string"
        },
        "storageBucket": {
          "type": "string",
          "description": "The default Cloud Storage for Firebase storage bucket name."
        }
      },
      "id": "AdminSdkConfig",
      "type": "object"
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        }
      },
      "type": "object"
    },
    "StreamMapping": {
      "type": "object",
      "properties": {
        "streamId": {
          "type": "string",
          "format": "int64",
          "description": "The unique Google-assigned identifier of the Google Analytics data stream associated with the Firebase App. Learn more about Google Analytics data streams in the [Analytics documentation](https://support.google.com/analytics/answer/9303323)."
        },
        "app": {
          "description": "The resource name of the Firebase App associated with the Google Analytics data stream, in the format: projects/PROJECT_IDENTIFIER/androidApps/APP_ID or projects/PROJECT_IDENTIFIER/iosApps/APP_ID or projects/PROJECT_IDENTIFIER /webApps/APP_ID Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.",
          "type": "string"
        },
        "measurementId": {
          "description": "Applicable for Firebase Web Apps only. The unique Google-assigned identifier of the Google Analytics web stream associated with the Firebase Web App. Firebase SDKs use this ID to interact with Google Analytics APIs. Learn more about this ID and Google Analytics web streams in the [Analytics documentation](https://support.google.com/analytics/answer/9304153).",
          "type": "string"
        }
      },
      "id": "StreamMapping",
      "description": "A mapping of a Firebase App to a Google Analytics data stream"
    },
    "Location": {
      "description": "A GCP resource location that can be selected for a FirebaseProject.",
      "id": "Location",
      "type": "object",
      "properties": {
        "locationId": {
          "description": "The ID of the GCP resource location. It will be one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations#types).",
          "type": "string"
        },
        "features": {
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Used internally for distinguishing unset values and is not intended for external use.",
              "This location supports Cloud Firestore database instances. App Engine is available in this location, so it can be a Project's [default GCP resource location](//firebase.google.com/docs/projects/locations#default-cloud-location).",
              "This location supports default Cloud Storage buckets. App Engine is available in this location, so it can be a Project's [default GCP resource location](//firebase.google.com/docs/projects/locations#default-cloud-location).",
              "Cloud Functions for Firebase is available in this location."
            ],
            "type": "string",
            "enum": [
              "LOCATION_FEATURE_UNSPECIFIED",
              "FIRESTORE",
              "DEFAULT_STORAGE",
              "FUNCTIONS"
            ]
          },
          "description": "Products and services that are available in the GCP resource location."
        },
        "type": {
          "description": "Indicates whether the GCP resource location is a [regional or multi-regional location](https://firebase.google.com/docs/projects/locations#types) for data replication.",
          "enum": [
            "LOCATION_TYPE_UNSPECIFIED",
            "REGIONAL",
            "MULTI_REGIONAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Used internally for distinguishing unset values and is not intended for external use.",
            "The location is a regional location. Data in a regional location is replicated in multiple zones within a region.",
            "The location is a multi-regional location. Data in a multi-region location is replicated in multiple regions. Within each region, data is replicated in multiple zones."
          ]
        }
      }
    },
    "FirebaseAppInfo": {
      "id": "FirebaseAppInfo",
      "type": "object",
      "properties": {
        "appId": {
          "description": "Output only. Immutable. The globally unique, Firebase-assigned identifier for the `WebApp`. This identifier should be treated as an opaque token, as the data format is not specified.",
          "readOnly": true,
          "type": "string"
        },
        "namespace": {
          "description": "Output only. Immutable. The platform-specific identifier of the App. *Note:* For most use cases, use `appId`, which is the canonical, globally unique identifier for referencing an App. This string is derived from a native identifier for each platform: `packageName` for an `AndroidApp`, `bundleId` for an `IosApp`, and `webId` for a `WebApp`. Its contents should be treated as opaque, as the native identifier format may change as platforms evolve. This string is only unique within a `FirebaseProject` and its associated Apps.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The resource name of the Firebase App, in the format: projects/PROJECT_ID /iosApps/APP_ID or projects/PROJECT_ID/androidApps/APP_ID or projects/ PROJECT_ID/webApps/APP_ID",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Unspecified state.",
            "The App is active.",
            "The App has been soft-deleted. After an App has been in the `DELETED` state for more than 30 days, it is considered expired and will be permanently deleted. Up until this time, you can restore the App by calling `Undelete` ([Android](projects.androidApps/undelete) | [iOS](projects.iosApps/undelete) | [web](projects.webApps/undelete))."
          ],
          "readOnly": true,
          "description": "Output only. The lifecycle state of the App.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETED"
          ]
        },
        "displayName": {
          "description": "The user-assigned display name of the Firebase App.",
          "type": "string"
        },
        "expireTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Timestamp of when the App will be considered expired and cannot be undeleted. This value is only provided if the App is in the `DELETED` state.",
          "readOnly": true
        },
        "platform": {
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "IOS",
            "ANDROID",
            "WEB"
          ],
          "description": "The platform of the Firebase App.",
          "enumDescriptions": [
            "Unknown state. This is only used for distinguishing unset values.",
            "The Firebase App is associated with iOS.",
            "The Firebase App is associated with Android.",
            "The Firebase App is associated with web."
          ],
          "type": "string"
        },
        "apiKeyId": {
          "description": "The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the App. Be aware that this value is the UID of the API key, _not_ the [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key. The `keyString` is the value that can be found in the App's configuration artifact ([`AndroidApp`](../../rest/v1beta1/projects.androidApps/getConfig) | [`IosApp`](../../rest/v1beta1/projects.iosApps/getConfig) | [`WebApp`](../../rest/v1beta1/projects.webApps/getConfig)). If `api_key_id` is not set in requests to create the App ([`AndroidApp`](../../rest/v1beta1/projects.androidApps/create) | [`IosApp`](../../rest/v1beta1/projects.iosApps/create) | [`WebApp`](../../rest/v1beta1/projects.webApps/create)), then Firebase automatically associates an `api_key_id` with the App. This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned.",
          "type": "string"
        }
      },
      "description": "A high-level summary of an App."
    },
    "RemoveIosAppRequest": {
      "id": "RemoveIosAppRequest",
      "type": "object",
      "properties": {
        "etag": {
          "description": "Checksum provided in the IosApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "validateOnly": {
          "description": "If set to true, the request is only validated. The App will _not_ be removed.",
          "type": "boolean"
        },
        "immediate": {
          "description": "Determines whether to _immediately_ delete the IosApp. If set to true, the App is immediately deleted from the Project and cannot be restored to the Project. If not set, defaults to false, which means the App will be set to expire in 30 days. Within the 30 days, the App may be restored to the Project using UndeleteIosApp",
          "type": "boolean"
        },
        "allowMissing": {
          "type": "boolean",
          "description": "If set to true, and the App is not found, the request will succeed but no action will be taken on the server."
        }
      }
    },
    "ListAndroidAppsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListAndroidApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted."
        },
        "apps": {
          "description": "List of each `AndroidApp` associated with the specified `FirebaseProject`.",
          "type": "array",
          "items": {
            "$ref": "AndroidApp"
          }
        }
      },
      "id": "ListAndroidAppsResponse",
      "type": "object"
    },
    "Status": {
      "type": "object",
      "properties": {
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        }
      },
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "AnalyticsProperty": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The globally unique, Google-assigned identifier of the Google Analytics property associated with the specified `FirebaseProject`. If you called [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) to link the `FirebaseProject` with a Google Analytics account, the value in this `id` field is the same as the ID of the property either specified or provisioned with that call to `AddGoogleAnalytics`."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the Google Analytics property associated with the specified `FirebaseProject`."
        },
        "analyticsAccountId": {
          "description": "Output only. The ID of the [Google Analytics account](https://www.google.com/analytics/) for the Google Analytics property associated with the specified FirebaseProject.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Details of a Google Analytics property",
      "id": "AnalyticsProperty"
    },
    "UndeleteWebAppRequest": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Checksum provided in the WebApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding."
        },
        "validateOnly": {
          "type": "boolean",
          "description": "If set to true, the request is only validated. The App will _not_ be undeleted."
        }
      },
      "id": "UndeleteWebAppRequest"
    },
    "AddGoogleAnalyticsRequest": {
      "id": "AddGoogleAnalyticsRequest",
      "type": "object",
      "properties": {
        "analyticsPropertyId": {
          "type": "string",
          "description": "The ID for the existing Google Analytics property that you want to associate with the `FirebaseProject`."
        },
        "analyticsAccountId": {
          "type": "string",
          "description": "The ID for the existing [Google Analytics account](http://www.google.com/analytics/) that you want to link with the `FirebaseProject`. Specifying this field will provision a new Google Analytics property in your Google Analytics account and associate the new property with the `FirebaseProject`."
        }
      }
    },
    "ListWebAppsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListWebApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted."
        },
        "apps": {
          "description": "List of each `WebApp` associated with the specified `FirebaseProject`.",
          "type": "array",
          "items": {
            "$ref": "WebApp"
          }
        }
      },
      "id": "ListWebAppsResponse"
    },
    "StatusProto": {
      "properties": {
        "space": {
          "description": "The following are usually only present when code != 0 Space to which this status belongs",
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Numeric code drawn from the space specified below. Often, this is the canonical error space, and code is drawn from google3/util/task/codes.proto"
        },
        "messageSet": {
          "$ref": "MessageSet",
          "description": "message_set associates an arbitrary proto message with the status."
        },
        "canonicalCode": {
          "description": "The canonical error code (see codes.proto) that most closely corresponds to this status. This may be missing, and in the common case of the generic space, it definitely will be.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "description": "Detail message"
        }
      },
      "id": "StatusProto",
      "type": "object",
      "description": "Wire-format for a Status object"
    },
    "ProductMetadata": {
      "type": "object",
      "id": "ProductMetadata",
      "description": "Metadata about a long-running Product operation.",
      "properties": {
        "warningMessages": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of warnings related to the associated operation."
        }
      }
    },
    "FinalizeDefaultLocationRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "The ID of the Project's default GCP resource location. The location must be one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations)."
        }
      },
      "id": "FinalizeDefaultLocationRequest",
      "type": "object"
    },
    "RemoveWebAppRequest": {
      "type": "object",
      "properties": {
        "immediate": {
          "type": "boolean",
          "description": "Determines whether to _immediately_ delete the WebApp. If set to true, the App is immediately deleted from the Project and cannot be restored to the Project. If not set, defaults to false, which means the App will be set to expire in 30 days. Within the 30 days, the App may be restored to the Project using UndeleteWebApp"
        },
        "etag": {
          "type": "string",
          "description": "Checksum provided in the WebApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding."
        },
        "validateOnly": {
          "description": "If set to true, the request is only validated. The App will _not_ be removed.",
          "type": "boolean"
        },
        "allowMissing": {
          "description": "If set to true, and the App is not found, the request will succeed but no action will be taken on the server.",
          "type": "boolean"
        }
      },
      "id": "RemoveWebAppRequest"
    },
    "AddFirebaseRequest": {
      "type": "object",
      "id": "AddFirebaseRequest",
      "description": "All fields are required.",
      "properties": {
        "locationId": {
          "description": "Deprecated. Instead, to set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the GCP `Project`. The ID of the Project's default GCP resource location. The location must be one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations).",
          "type": "string"
        }
      }
    },
    "IosAppConfig": {
      "type": "object",
      "description": "Configuration metadata of a single Firebase App for iOS.",
      "properties": {
        "configFilename": {
          "type": "string",
          "description": "The filename that the configuration artifact for the `IosApp` is typically saved as. For example: `GoogleService-Info.plist`"
        },
        "configFileContents": {
          "format": "byte",
          "type": "string",
          "description": "The content of the XML configuration file."
        }
      },
      "id": "IosAppConfig"
    },
    "ListIosAppsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListIosApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted."
        },
        "apps": {
          "items": {
            "$ref": "IosApp"
          },
          "type": "array",
          "description": "List of each `IosApp` associated with the specified `FirebaseProject`."
        }
      },
      "type": "object",
      "id": "ListIosAppsResponse"
    },
    "ListShaCertificatesResponse": {
      "properties": {
        "certificates": {
          "items": {
            "$ref": "ShaCertificate"
          },
          "description": "The list of each `ShaCertificate` associated with the `AndroidApp`.",
          "type": "array"
        }
      },
      "id": "ListShaCertificatesResponse",
      "type": "object"
    },
    "UndeleteIosAppRequest": {
      "type": "object",
      "properties": {
        "validateOnly": {
          "type": "boolean",
          "description": "If set to true, the request is only validated. The App will _not_ be undeleted."
        },
        "etag": {
          "type": "string",
          "description": "Checksum provided in the IosApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding."
        }
      },
      "id": "UndeleteIosAppRequest"
    },
    "AndroidApp": {
      "properties": {
        "appId": {
          "description": "Output only. Immutable. The globally unique, Firebase-assigned identifier for the `AndroidApp`. This identifier should be treated as an opaque token, as the data format is not specified.",
          "type": "string",
          "readOnly": true
        },
        "packageName": {
          "description": "Immutable. The canonical package name of the Android app as would appear in the Google Play Developer Console.",
          "type": "string"
        },
        "sha256Hashes": {
          "items": {
            "type": "string"
          },
          "description": "The SHA256 certificate hashes for the AndroidApp.",
          "type": "array"
        },
        "apiKeyId": {
          "description": "The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the `AndroidApp`. Be aware that this value is the UID of the API key, _not_ the [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key. The `keyString` is the value that can be found in the App's [configuration artifact](../../rest/v1beta1/projects.androidApps/getConfig). If `api_key_id` is not set in requests to [`androidApps.Create`](../../rest/v1beta1/projects.androidApps/create), then Firebase automatically associates an `api_key_id` with the `AndroidApp`. This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned. In patch requests, `api_key_id` cannot be set to an empty value, and the new UID must have no restrictions or only have restrictions that are valid for the associated `AndroidApp`. We recommend using the [Google Cloud Console](https://console.cloud.google.com/apis/credentials) to manage API keys.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "This checksum is computed by the server based on the value of other fields, and it may be sent with update requests to ensure the client has an up-to-date value before proceeding. Learn more about `etag` in Google's [AIP-154 standard](https://google.aip.dev/154#declarative-friendly-resources). This etag is strongly validated."
        },
        "expireTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Timestamp of when the App will be considered expired and cannot be undeleted. This value is only provided if the App is in the `DELETED` state.",
          "type": "string"
        },
        "sha1Hashes": {
          "type": "array",
          "description": "The SHA1 certificate hashes for the AndroidApp.",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETED"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "The App is active.",
            "The App has been soft-deleted. After an App has been in the `DELETED` state for more than 30 days, it is considered expired and will be permanently deleted. Up until this time, you can restore the App by calling `Undelete` ([Android](projects.androidApps/undelete) | [iOS](projects.iosApps/undelete) | [web](projects.webApps/undelete))."
          ],
          "type": "string",
          "description": "Output only. The lifecycle state of the App.",
          "readOnly": true
        },
        "projectId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `AndroidApp`."
        },
        "displayName": {
          "description": "The user-assigned display name for the `AndroidApp`.",
          "type": "string"
        },
        "name": {
          "description": "The resource name of the AndroidApp, in the format: projects/ PROJECT_IDENTIFIER/androidApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.androidApps#AndroidApp.FIELDS.app_id)).",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Details of a Firebase App for Android.",
      "id": "AndroidApp"
    },
    "AndroidAppConfig": {
      "type": "object",
      "description": "Configuration metadata of a single Firebase App for Android.",
      "properties": {
        "configFileContents": {
          "type": "string",
          "format": "byte",
          "description": "The contents of the JSON configuration file."
        },
        "configFilename": {
          "description": "The filename that the configuration artifact for the `AndroidApp` is typically saved as. For example: `google-services.json`",
          "type": "string"
        }
      },
      "id": "AndroidAppConfig"
    }
  },
  "canonicalName": "Firebase Management",
  "basePath": "",
  "resources": {
    "availableProjects": {
      "methods": {
        "list": {
          "parameterOrder": [],
          "path": "v1beta1/availableProjects",
          "flatPath": "v1beta1/availableProjects",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/firebase",
            "https://www.googleapis.com/auth/firebase.readonly"
          ],
          "id": "firebase.availableProjects.list",
          "parameters": {
            "pageSize": {
              "type": "integer",
              "format": "int32",
              "location": "query",
              "description": "The maximum number of Projects to return in the response. The server may return fewer than this value at its discretion. If no value is specified (or too large a value is specified), the server will impose its own limit. This value cannot be negative."
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Token returned from a previous call to `ListAvailableProjects` indicating where in the set of Projects to resume listing."
            }
          },
          "description": "Lists each [Google Cloud Platform (GCP) `Project`] (https://cloud.google.com/resource-manager/reference/rest/v1/projects) that can have Firebase resources added to it. A Project will only be listed if: - The caller has sufficient [Google IAM](https://cloud.google.com/iam) permissions to call AddFirebase. - The Project is not already a FirebaseProject. - The Project is not in an Organization which has policies that prevent Firebase resources from being added. ",
          "response": {
            "$ref": "ListAvailableProjectsResponse"
          },
          "httpMethod": "GET"
        }
      }
    },
    "projects": {
      "methods": {
        "getAdminSdkConfig": {
          "parameters": {
            "name": {
              "pattern": "^projects/[^/]+/adminSdkConfig$",
              "type": "string",
              "location": "path",
              "description": "The resource name of the FirebaseProject, in the format: projects/ PROJECT_IDENTIFIER/adminSdkConfig Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.",
              "required": true
            }
          },
          "httpMethod": "GET",
          "flatPath": "v1beta1/projects/{projectsId}/adminSdkConfig",
          "response": {
            "$ref": "AdminSdkConfig"
          },
          "path": "v1beta1/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/firebase",
            "https://www.googleapis.com/auth/firebase.readonly"
          ],
          "id": "firebase.projects.getAdminSdkConfig",
          "description": "Gets the configuration artifact associated with the specified FirebaseProject, which can be used by servers to simplify initialization. Typically, this configuration is used with the Firebase Admin SDK [initializeApp](https://firebase.google.com/docs/admin/setup#initialize_the_sdk) command.",
          "parameterOrder": [
            "name"
          ]
        },
        "removeAnalytics": {
          "description": "Unlinks the specified FirebaseProject from its Google Analytics account. This call removes the association of the specified `FirebaseProject` with its current Google Analytics property. However, this call does not delete the Google Analytics resources, such as the Google Analytics property or any data streams. These resources may be re-associated later to the `FirebaseProject` by calling [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) and specifying the same `analyticsPropertyId`. For Android Apps and iOS Apps, this call re-links data streams with their corresponding apps. However, for Web Apps, this call provisions a *new* data stream for each Web App. To call `RemoveAnalytics`, a project member must be an Owner for the `FirebaseProject`.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/firebase"
          ],
          "response": {
            "$ref": "Empty"
          },
          "id": "firebase.projects.removeAnalytics",
          "request": {
            "$ref": "RemoveAnalyticsRequest"
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "parent"
          ],
          "parameters": {
            "parent": {
              "required": true,
              "pattern": "^projects/[^/]+$",
              "description": "The resource name of the FirebaseProject to unlink from its Google Analytics account, in the format: projects/PROJECT_IDENTIFIER Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.",
              "location": "path",
              "type": "string"
            }
          },
          "path": "v1beta1/{+parent}:removeAnalytics",
          "flatPath": "v1beta1/projects/{projectsId}:removeAnalytics"
        },
        "addFirebase": {
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/firebase"
          ],
          "id": "firebase.projects.addFirebase",
          "parameters": {
            "project": {
              "required": true,
              "description": "The resource name of the GCP `Project` to which Firebase resources will be added, in the format: projects/PROJECT_IDENTIFIER Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values. After calling `AddFirebase`, the unique Project identifiers ( [`projectNumber`](https://cloud.google.com/resource-manager/reference/rest/v1/projects#Project.FIELDS.project_number) and [`projectId`](https://cloud.google.com/resource-manager/reference/rest/v1/projects#Project.FIELDS.project_id)) of the underlying GCP `Project` are also the identifiers of the FirebaseProject.",
              "pattern": "^projects/[^/]+$",
              "type": "string",
              "location": "path"
            }
          },
          "parameterOrder": [
            "project"
          ],
          "description": "Adds Firebase resources to the specified existing [Google Cloud Platform (GCP) `Project`] (https://cloud.google.com/resource-manager/reference/rest/v1/projects). Since a FirebaseProject is actually also a GCP `Project`, a `FirebaseProject` has the same underlying GCP identifiers (`projectNumber` and `projectId`). This allows for easy interop with Google APIs. The result of this call is an [`Operation`](../../v1beta1/operations). Poll the `Operation` to track the provisioning process by calling GetOperation until [`done`](../../v1beta1/operations#Operation.FIELDS.done) is `true`. When `done` is `true`, the `Operation` has either succeeded or failed. If the `Operation` succeeded, its [`response`](../../v1beta1/operations#Operation.FIELDS.response) is set to a FirebaseProject; if the `Operation` failed, its [`error`](../../v1beta1/operations#Operation.FIELDS.error) is set to a google.rpc.Status. The `Operation` is automatically deleted after completion, so there is no need to call DeleteOperation. This method does not modify any billing account information on the underlying GCP `Project`. To call `AddFirebase`, a project member or service account must have the following permissions (the IAM roles of Editor and Owner contain these permissions): `firebase.projects.update`, `resourcemanager.projects.get`, `serviceusage.services.enable`, and `serviceusage.services.get`.",
          "flatPath": "v1beta1/projects/{projectsId}:addFirebase",
          "path": "v1beta1/{+project}:addFirebase",
          "httpMethod": "POST",
          "request": {
            "$ref": "AddFirebaseRequest"
          }
        },
        "addGoogleAnalytics": {
          "parameterOrder": [
            "parent"
          ],
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "parent": {
              "pattern": "^projects/[^/]+$",
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The resource name of the FirebaseProject to link to an existing Google Analytics account, in the format: projects/PROJECT_IDENTIFIER Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/firebase"
          ],
          "description": "Links the specified FirebaseProject with an existing [Google Analytics account](http://www.google.com/analytics/). Using this call, you can either: - Specify an `analyticsAccountId` to provision a new Google Analytics property within the specified account and associate the new property with the `FirebaseProject`. - Specify an existing `analyticsPropertyId` to associate the property with the `FirebaseProject`. Note that when you call `AddGoogleAnalytics`: 1. The first check determines if any existing data streams in the Google Analytics property correspond to any existing Firebase Apps in the `FirebaseProject` (based on the `packageName` or `bundleId` associated with the data stream). Then, as applicable, the data streams and apps are linked. Note that this auto-linking only applies to `AndroidApps` and `IosApps`. 2. If no corresponding data streams are found for the Firebase Apps, new data streams are provisioned in the Google Analytics property for each of the Firebase Apps. Note that a new data stream is always provisioned for a Web App even if it was previously associated with a data stream in the Analytics property. Learn more about the hierarchy and structure of Google Analytics accounts in the [Analytics documentation](https://support.google.com/analytics/answer/9303323). The result of this call is an [`Operation`](../../v1beta1/operations). Poll the `Operation` to track the provisioning process by calling GetOperation until [`done`](../../v1beta1/operations#Operation.FIELDS.done) is `true`. When `done` is `true`, the `Operation` has either succeeded or failed. If the `Operation` succeeded, its [`response`](../../v1beta1/operations#Operation.FIELDS.response) is set to an AnalyticsDetails; if the `Operation` failed, its [`error`](../../v1beta1/operations#Operation.FIELDS.error) is set to a google.rpc.Status. To call `AddGoogleAnalytics`, a project member must be an Owner for the existing `FirebaseProject` and have the [`Edit` permission](https://support.google.com/analytics/answer/2884495) for the Google Analytics account. If the `FirebaseProject` already has Google Analytics enabled, and you call `AddGoogleAnalytics` using an `analyticsPropertyId` that's different from the currently associated property, then the call will fail. Analytics may have already been enabled in the Firebase console or by specifying `timeZone` and `regionCode` in the call to [`AddFirebase`](../../v1beta1/projects/addFirebase).",
          "httpMethod": "POST",
          "path": "v1beta1/{+parent}:addGoogleAnalytics",
          "request": {
            "$ref": "AddGoogleAnalyticsRequest"
          },
          "id": "firebase.projects.addGoogleAnalytics",
          "flatPath": "v1beta1/projects/{projectsId}:addGoogleAnalytics"
        },
        "patch": {
          "description": "Updates the attributes of the specified FirebaseProject. All [query parameters](#query-parameters) are required.",
          "id": "firebase.projects.patch",
          "request": {
            "$ref": "FirebaseProject"
          },
          "path": "v1beta1/{+name}",
          "response": {
            "$ref": "FirebaseProject"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "PATCH",
          "parameters": {
            "updateMask": {
              "format": "google-fieldmask",
              "location": "query",
              "description": "Specifies which fields of the FirebaseProject to update. Note that the following fields are immutable: `name`, `project_id`, and `project_number`. To update `state`, use any of the following Google Cloud endpoints: [`projects.delete`](https://cloud.google.com/resource-manager/reference/rest/v1/projects/delete) or [`projects.undelete`](https://cloud.google.com/resource-manager/reference/rest/v1/projects/undelete)",
              "type": "string"
            },
            "name": {
              "description": "The resource name of the Project, in the format: projects/PROJECT_IDENTIFIER PROJECT_IDENTIFIER: the Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`.",
              "required": true,
              "pattern": "^projects/[^/]+$",
              "type": "string",
              "location": "path"
            }
          },
          "flatPath": "v1beta1/projects/{projectsId}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/firebase"
          ]
        },
        "getAnalyticsDetails": {
          "path": "v1beta1/{+name}",
          "description": "Gets the Google Analytics details currently associated with the specified FirebaseProject. If the `FirebaseProject` is not yet linked to Google Analytics, then the response to `GetAnalyticsDetails` is `NOT_FOUND`.",
          "httpMethod": "GET",
          "flatPath": "v1beta1/projects/{projectsId}/analyticsDetails",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "AnalyticsDetails"
          },
          "id": "firebase.projects.getAnalyticsDetails",
          "parameters": {
            "name": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The resource name of the FirebaseProject, in the format: projects/ PROJECT_IDENTIFIER/analyticsDetails Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.",
              "pattern": "^projects/[^/]+/analyticsDetails$"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/firebase",
            "https://www.googleapis.com/auth/firebase.readonly"
          ]
        },
        "get": {
          "parameters": {
            "name": {
              "type": "string",
              "description": "The resource name of the FirebaseProject, in the format: projects/ PROJECT_IDENTIFIER Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.",
              "pattern": "^projects/[^/]+$",
              "location": "path",
              "required": true
            }
          },
          "id": "firebase.projects.get",
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1beta1/projects/{projectsId}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/firebase",
            "https://www.googleapis.com/auth/firebase.readonly"
          ],
          "path": "v1beta1/{+name}",
          "response": {
            "$ref": "FirebaseProject"
          },
          "description": "Gets the specified FirebaseProject."
        },
        "list": {
          "description": "Lists each FirebaseProject accessible to the caller. The elements are returned in no particular order, but they will be a consistent view of the Projects when additional requests are made with a `pageToken`. This method is eventually consistent with Project mutations, which means newly provisioned Projects and recent modifications to existing Projects might not be reflected in the set of Projects. The list will include only ACTIVE Projects. Use GetFirebaseProject for consistent reads as well as for additional Project details.",
          "path": "v1beta1/projects",
          "httpMethod": "GET",
          "flatPath": "v1beta1/projects",
          "id": "firebase.projects.list",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/firebase",
            "https://www.googleapis.com/auth/firebase.readonly"
          ],
          "parameterOrder": [],
          "parameters": {
            "pageToken": {
              "description": "Token returned from a previous call to `ListFirebaseProjects` indicating where in the set of Projects to resume listing.",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "location": "query",
              "description": "The maximum number of Projects to return in the response. The server may return fewer than this at its discretion. If no value is specified (or too large a value is specified), the server will impose its own limit. This value cannot be negative.",
              "format": "int32",
              "type": "integer"
            },
            "showDeleted": {
              "type": "boolean",
              "location": "query",
              "description": "Optional. Controls whether Projects in the DELETED state should be returned in the response. If not specified, only `ACTIVE` Projects will be returned."
            }
          },
          "response": {
            "$ref": "ListFirebaseProjectsResponse"
          }
        },
        "searchApps": {
          "path": "v1beta1/{+parent}:searchApps",
          "response": {
            "$ref": "SearchFirebaseAppsResponse"
          },
          "parameterOrder": [
            "parent"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/firebase",
            "https://www.googleapis.com/auth/firebase.readonly"
          ],
          "flatPath": "v1beta1/projects/{projectsId}:searchApps",
          "parameters": {
            "filter": {
              "location": "query",
              "description": "A query string compatible with Google's [AIP-160 standard](https://google.aip.dev/160). Use any of the following fields in a query: * [`app_id`](../projects/searchApps#FirebaseAppInfo.FIELDS.app_id) * [`namespace`](../projects/searchApps#FirebaseAppInfo.FIELDS.namespace) * [`platform`](../projects/searchApps#FirebaseAppInfo.FIELDS.platform) This query also supports the following \"virtual\" fields. These are fields which are not actually part of the returned resource object, but they can be queried as if they are pre-populated with specific values. * `sha1_hash` or `sha1_hashes`: This field is considered to be a _repeated_ `string` field, populated with the list of all SHA-1 certificate fingerprints registered with the AndroidApp. This list is empty if the App is not an `AndroidApp`. * `sha256_hash` or `sha256_hashes`: This field is considered to be a _repeated_ `string` field, populated with the list of all SHA-256 certificate fingerprints registered with the AndroidApp. This list is empty if the App is not an `AndroidApp`. * `app_store_id`: This field is considered to be a _singular_ `string` field, populated with the Apple App Store ID registered with the IosApp. This field is empty if the App is not an `IosApp`. * `team_id`: This field is considered to be a _singular_ `string` field, populated with the Apple team ID registered with the IosApp. This field is empty if the App is not an `IosApp`.",
              "type": "string"
            },
            "showDeleted": {
              "location": "query",
              "description": "Controls whether Apps in the DELETED state should be returned. If not specified, only `ACTIVE` Apps will be returned.",
              "type": "boolean"
            },
            "pageSize": {
              "type": "integer",
              "description": "The maximum number of Apps to return in the response. The server may return fewer than this value at its discretion. If no value is specified (or too large a value is specified), then the server will impose its own limit. This value cannot be negative.",
              "format": "int32",
              "location": "query"
            },
            "parent": {
              "required": true,
              "location": "path",
              "type": "string",
              "pattern": "^projects/[^/]+$",
              "description": "The parent FirebaseProject for which to list Apps, in the format: projects/ PROJECT_IDENTIFIER Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values."
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Token returned from a previous call to `SearchFirebaseApps` indicating where in the set of Apps to resume listing."
            }
          },
          "id": "firebase.projects.searchApps",
          "description": "Lists all available Apps for the specified FirebaseProject. This is a convenience method. Typically, interaction with an App should be done using the platform-specific service, but some tool use-cases require a summary of all known Apps (such as for App selector interfaces)."
        }
      },
      "resources": {
        "defaultLocation": {
          "methods": {
            "finalize": {
              "response": {
                "$ref": "Operation"
              },
              "description": "Sets the default Google Cloud Platform (GCP) resource location for the specified FirebaseProject. This method creates an App Engine application with a [default Cloud Storage bucket](https://cloud.google.com/appengine/docs/standard/python/googlecloudstorageclient/setting-up-cloud-storage#activating_a_cloud_storage_bucket), located in the specified [`locationId`](#body.request_body.FIELDS.location_id). This location must be one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). After the default GCP resource location is finalized, or if it was already set, it cannot be changed. The default GCP resource location for the specified `FirebaseProject` might already be set because either the underlying GCP `Project` already has an App Engine application or `FinalizeDefaultLocation` was previously called with a specified `locationId`. Any new calls to `FinalizeDefaultLocation` with a *different* specified `locationId` will return a 409 error. The result of this call is an [`Operation`](../../v1beta1/operations), which can be used to track the provisioning process. The [`response`](../../v1beta1/operations#Operation.FIELDS.response) type of the `Operation` is google.protobuf.Empty. The `Operation` can be polled by its `name` using GetOperation until `done` is true. When `done` is true, the `Operation` has either succeeded or failed. If the `Operation` has succeeded, its [`response`](../../v1beta1/operations#Operation.FIELDS.response) will be set to a google.protobuf.Empty; if the `Operation` has failed, its `error` will be set to a google.rpc.Status. The `Operation` is automatically deleted after completion, so there is no need to call DeleteOperation. All fields listed in the [request body](#request-body) are required. To call `FinalizeDefaultLocation`, a member must be an Owner of the Project.",
              "id": "firebase.projects.defaultLocation.finalize",
              "httpMethod": "POST",
              "flatPath": "v1beta1/projects/{projectsId}/defaultLocation:finalize",
              "path": "v1beta1/{+parent}/defaultLocation:finalize",
              "request": {
                "$ref": "FinalizeDefaultLocationRequest"
              },
              "parameters": {
                "parent": {
                  "description": "The resource name of the FirebaseProject for which the default GCP resource location will be set, in the format: projects/PROJECT_IDENTIFIER Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ]
            }
          }
        },
        "availableLocations": {
          "methods": {
            "list": {
              "parameters": {
                "pageToken": {
                  "description": "Token returned from a previous call to `ListAvailableLocations` indicating where in the list of locations to resume listing.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "description": "The maximum number of locations to return in the response. The server may return fewer than this value at its discretion. If no value is specified (or too large a value is specified), then the server will impose its own limit. This value cannot be negative.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "parent": {
                  "type": "string",
                  "description": "The FirebaseProject for which to list GCP resource locations, in the format: projects/PROJECT_IDENTIFIER Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values. If no unique project identifier is specified (that is, `projects/-`), the returned list does not take into account org-specific or project-specific location restrictions.",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "response": {
                "$ref": "ListAvailableLocationsResponse"
              },
              "flatPath": "v1beta1/projects/{projectsId}/availableLocations",
              "id": "firebase.projects.availableLocations.list",
              "path": "v1beta1/{+parent}/availableLocations",
              "description": "Lists the valid Google Cloud Platform (GCP) resource locations for the specified Project (including a FirebaseProject). One of these locations can be selected as the Project's [_default_ GCP resource location](https://firebase.google.com/docs/projects/locations), which is the geographical location where the Project's resources, such as Cloud Firestore, will be provisioned by default. However, if the default GCP resource location has already been set for the Project, then this setting cannot be changed. This call checks for any possible [location restrictions](https://cloud.google.com/resource-manager/docs/organization-policy/defining-locations) for the specified Project and, thus, might return a subset of all possible GCP resource locations. To list all GCP resource locations (regardless of any restrictions), call the endpoint without specifying a unique project identifier (that is, `/v1beta1/{parent=projects/-}/listAvailableLocations`). To call `ListAvailableLocations` with a specified project, a member must be at minimum a Viewer of the Project. Calls without a specified project do not require any specific project permissions.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only",
                "https://www.googleapis.com/auth/firebase",
                "https://www.googleapis.com/auth/firebase.readonly"
              ],
              "parameterOrder": [
                "parent"
              ]
            }
          }
        },
        "iosApps": {
          "methods": {
            "get": {
              "id": "firebase.projects.iosApps.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only",
                "https://www.googleapis.com/auth/firebase",
                "https://www.googleapis.com/auth/firebase.readonly"
              ],
              "response": {
                "$ref": "IosApp"
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Gets the specified IosApp.",
              "path": "v1beta1/{+name}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/iosApps/[^/]+$",
                  "required": true,
                  "description": "The resource name of the IosApp, in the format: projects/PROJECT_IDENTIFIER /iosApps/APP_ID Since an APP_ID is a unique identifier, the Unique Resource from Sub-Collection access pattern may be used here, in the format: projects/-/iosApps/APP_ID Refer to the `IosApp` [`name`](../projects.iosApps#IosApp.FIELDS.name) field for details about PROJECT_IDENTIFIER and APP_ID values."
                }
              },
              "flatPath": "v1beta1/projects/{projectsId}/iosApps/{iosAppsId}"
            },
            "list": {
              "flatPath": "v1beta1/projects/{projectsId}/iosApps",
              "id": "firebase.projects.iosApps.list",
              "parameters": {
                "showDeleted": {
                  "location": "query",
                  "description": "Controls whether Apps in the DELETED state should be returned in the response. If not specified, only `ACTIVE` Apps will be returned.",
                  "type": "boolean"
                },
                "parent": {
                  "description": "The resource name of the parent FirebaseProject for which to list each associated IosApp, in the format: projects/PROJECT_IDENTIFIER/iosApps Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of Apps to return in the response. The server may return fewer than this at its discretion. If no value is specified (or too large a value is specified), the server will impose its own limit."
                },
                "pageToken": {
                  "type": "string",
                  "description": "Token returned from a previous call to `ListIosApps` indicating where in the set of Apps to resume listing.",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "ListIosAppsResponse"
              },
              "path": "v1beta1/{+parent}/iosApps",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only",
                "https://www.googleapis.com/auth/firebase",
                "https://www.googleapis.com/auth/firebase.readonly"
              ],
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "description": "Lists each IosApp associated with the specified FirebaseProject. The elements are returned in no particular order, but will be a consistent view of the Apps when additional requests are made with a `pageToken`."
            },
            "create": {
              "path": "v1beta1/{+parent}/iosApps",
              "parameters": {
                "parent": {
                  "description": "The resource name of the parent FirebaseProject in which to create an IosApp, in the format: projects/PROJECT_IDENTIFIER/iosApps Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "description": "Requests the creation of a new IosApp in the specified FirebaseProject. The result of this call is an `Operation` which can be used to track the provisioning process. The `Operation` is automatically deleted after completion, so there is no need to call `DeleteOperation`.",
              "request": {
                "$ref": "IosApp"
              },
              "response": {
                "$ref": "Operation"
              },
              "flatPath": "v1beta1/projects/{projectsId}/iosApps",
              "id": "firebase.projects.iosApps.create"
            },
            "patch": {
              "response": {
                "$ref": "IosApp"
              },
              "id": "firebase.projects.iosApps.patch",
              "path": "v1beta1/{+name}",
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Specifies which fields of the IosApp to update. Note that the following fields are immutable: `name`, `app_id`, `project_id`, and `bundle_id`. To update `state`, use any of the following endpoints: RemoveIosApp or UndeleteIosApp.",
                  "type": "string"
                },
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/iosApps/[^/]+$",
                  "required": true,
                  "description": "The resource name of the IosApp, in the format: projects/PROJECT_IDENTIFIER /iosApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.iosApps#IosApp.FIELDS.app_id)).",
                  "type": "string"
                }
              },
              "flatPath": "v1beta1/projects/{projectsId}/iosApps/{iosAppsId}",
              "request": {
                "$ref": "IosApp"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "description": "Updates the attributes of the specified IosApp.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH"
            },
            "getConfig": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "description": "Gets the configuration artifact associated with the specified IosApp.",
              "flatPath": "v1beta1/projects/{projectsId}/iosApps/{iosAppsId}/config",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only",
                "https://www.googleapis.com/auth/firebase",
                "https://www.googleapis.com/auth/firebase.readonly"
              ],
              "parameters": {
                "name": {
                  "description": "The resource name of the App configuration to download, in the format: projects/PROJECT_IDENTIFIER/iosApps/APP_ID/config Since an APP_ID is a unique identifier, the Unique Resource from Sub-Collection access pattern may be used here, in the format: projects/-/iosApps/APP_ID Refer to the `IosApp` [`name`](../projects.iosApps#IosApp.FIELDS.name) field for details about PROJECT_IDENTIFIER and APP_ID values.",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/iosApps/[^/]+/config$"
                }
              },
              "response": {
                "$ref": "IosAppConfig"
              },
              "id": "firebase.projects.iosApps.getConfig",
              "path": "v1beta1/{+name}"
            },
            "remove": {
              "parameterOrder": [
                "name"
              ],
              "id": "firebase.projects.iosApps.remove",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "description": "Required. The resource name of the IosApp, in the format: projects/ PROJECT_IDENTIFIER/iosApps/APP_ID Since an APP_ID is a unique identifier, the Unique Resource from Sub-Collection access pattern may be used here, in the format: projects/-/iosApps/APP_ID Refer to the IosApp [name](../projects.iosApps#IosApp.FIELDS.name) field for details about PROJECT_IDENTIFIER and APP_ID values.",
                  "pattern": "^projects/[^/]+/iosApps/[^/]+$",
                  "type": "string"
                }
              },
              "flatPath": "v1beta1/projects/{projectsId}/iosApps/{iosAppsId}:remove",
              "response": {
                "$ref": "Operation"
              },
              "request": {
                "$ref": "RemoveIosAppRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "description": "Removes the specified IosApp from the FirebaseProject.",
              "httpMethod": "POST",
              "path": "v1beta1/{+name}:remove"
            },
            "undelete": {
              "path": "v1beta1/{+name}:undelete",
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/iosApps/{iosAppsId}:undelete",
              "response": {
                "$ref": "Operation"
              },
              "description": "Restores the specified IosApp to the FirebaseProject.",
              "request": {
                "$ref": "UndeleteIosAppRequest"
              },
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/iosApps/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The resource name of the IosApp, in the format: projects/ PROJECT_IDENTIFIER/iosApps/APP_ID Since an APP_ID is a unique identifier, the Unique Resource from Sub-Collection access pattern may be used here, in the format: projects/-/iosApps/APP_ID Refer to the IosApp [name](../projects.iosApps#IosApp.FIELDS.name) field for details about PROJECT_IDENTIFIER and APP_ID values.",
                  "location": "path"
                }
              },
              "id": "firebase.projects.iosApps.undelete",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ]
            }
          }
        },
        "androidApps": {
          "methods": {
            "get": {
              "response": {
                "$ref": "AndroidApp"
              },
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/projects/{projectsId}/androidApps/{androidAppsId}",
              "httpMethod": "GET",
              "description": "Gets the specified AndroidApp.",
              "id": "firebase.projects.androidApps.get",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only",
                "https://www.googleapis.com/auth/firebase",
                "https://www.googleapis.com/auth/firebase.readonly"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/androidApps/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "The resource name of the AndroidApp, in the format: projects/ PROJECT_IDENTIFIER/androidApps/APP_ID Since an APP_ID is a unique identifier, the Unique Resource from Sub-Collection access pattern may be used here, in the format: projects/-/androidApps/APP_ID Refer to the `AndroidApp` [`name`](../projects.androidApps#AndroidApp.FIELDS.name) field for details about PROJECT_IDENTIFIER and APP_ID values."
                }
              }
            },
            "list": {
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of Apps to return in the response. The server may return fewer than this at its discretion. If no value is specified (or too large a value is specified), then the server will impose its own limit."
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Token returned from a previous call to `ListAndroidApps` indicating where in the set of Apps to resume listing."
                },
                "showDeleted": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Controls whether Apps in the DELETED state should be returned in the response. If not specified, only `ACTIVE` Apps will be returned."
                },
                "parent": {
                  "location": "path",
                  "description": "The resource name of the parent FirebaseProject for which to list each associated AndroidApp, in the format: projects/PROJECT_IDENTIFIER /androidApps Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                }
              },
              "httpMethod": "GET",
              "response": {
                "$ref": "ListAndroidAppsResponse"
              },
              "path": "v1beta1/{+parent}/androidApps",
              "flatPath": "v1beta1/projects/{projectsId}/androidApps",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only",
                "https://www.googleapis.com/auth/firebase",
                "https://www.googleapis.com/auth/firebase.readonly"
              ],
              "id": "firebase.projects.androidApps.list",
              "description": "Lists each AndroidApp associated with the specified FirebaseProject. The elements are returned in no particular order, but will be a consistent view of the Apps when additional requests are made with a `pageToken`."
            },
            "getConfig": {
              "id": "firebase.projects.androidApps.getConfig",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The resource name of the AndroidApp configuration to download, in the format: projects/PROJECT_IDENTIFIER/androidApps/APP_ID/config Since an APP_ID is a unique identifier, the Unique Resource from Sub-Collection access pattern may be used here, in the format: projects/-/androidApps/APP_ID Refer to the `AndroidApp` [`name`](../projects.androidApps#AndroidApp.FIELDS.name) field for details about PROJECT_IDENTIFIER and APP_ID values.",
                  "pattern": "^projects/[^/]+/androidApps/[^/]+/config$",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1beta1/projects/{projectsId}/androidApps/{androidAppsId}/config",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only",
                "https://www.googleapis.com/auth/firebase",
                "https://www.googleapis.com/auth/firebase.readonly"
              ],
              "response": {
                "$ref": "AndroidAppConfig"
              },
              "httpMethod": "GET",
              "path": "v1beta1/{+name}",
              "description": "Gets the configuration artifact associated with the specified AndroidApp.",
              "parameterOrder": [
                "name"
              ]
            },
            "patch": {
              "flatPath": "v1beta1/projects/{projectsId}/androidApps/{androidAppsId}",
              "response": {
                "$ref": "AndroidApp"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "path": "v1beta1/{+name}",
              "description": "Updates the attributes of the specified AndroidApp.",
              "request": {
                "$ref": "AndroidApp"
              },
              "parameterOrder": [
                "name"
              ],
              "id": "firebase.projects.androidApps.patch",
              "parameters": {
                "name": {
                  "description": "The resource name of the AndroidApp, in the format: projects/ PROJECT_IDENTIFIER/androidApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.androidApps#AndroidApp.FIELDS.app_id)).",
                  "pattern": "^projects/[^/]+/androidApps/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "updateMask": {
                  "type": "string",
                  "description": "Specifies which fields of the AndroidApp to update. Note that the following fields are immutable: `name`, `app_id`, `project_id`, and `package_name`. To update `state`, use any of the following endpoints: RemoveAndroidApp or UndeleteAndroidApp.",
                  "location": "query",
                  "format": "google-fieldmask"
                }
              },
              "httpMethod": "PATCH"
            },
            "create": {
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "path": "v1beta1/{+parent}/androidApps",
              "description": "Requests the creation of a new AndroidApp in the specified FirebaseProject. The result of this call is an `Operation` which can be used to track the provisioning process. The `Operation` is automatically deleted after completion, so there is no need to call `DeleteOperation`.",
              "request": {
                "$ref": "AndroidApp"
              },
              "id": "firebase.projects.androidApps.create",
              "flatPath": "v1beta1/projects/{projectsId}/androidApps",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource name of the parent FirebaseProject in which to create an AndroidApp, in the format: projects/PROJECT_IDENTIFIER/androidApps Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "httpMethod": "POST",
              "response": {
                "$ref": "Operation"
              }
            },
            "remove": {
              "path": "v1beta1/{+name}:remove",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "description": "Required. The resource name of the AndroidApp, in the format: projects/ PROJECT_IDENTIFIER/androidApps/APP_ID Since an APP_ID is a unique identifier, the Unique Resource from Sub-Collection access pattern may be used here, in the format: projects/-/androidApps/APP_ID Refer to the AndroidApp [name](../projects.androidApps#AndroidApp.FIELDS.name) field for details about PROJECT_IDENTIFIER and APP_ID values.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/androidApps/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1beta1/projects/{projectsId}/androidApps/{androidAppsId}:remove",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "RemoveAndroidAppRequest"
              },
              "description": "Removes the specified AndroidApp from the FirebaseProject.",
              "response": {
                "$ref": "Operation"
              },
              "id": "firebase.projects.androidApps.remove"
            },
            "undelete": {
              "description": "Restores the specified AndroidApp to the FirebaseProject.",
              "flatPath": "v1beta1/projects/{projectsId}/androidApps/{androidAppsId}:undelete",
              "id": "firebase.projects.androidApps.undelete",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "request": {
                "$ref": "UndeleteAndroidAppRequest"
              },
              "httpMethod": "POST",
              "path": "v1beta1/{+name}:undelete",
              "response": {
                "$ref": "Operation"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/androidApps/[^/]+$",
                  "description": "Required. The resource name of the AndroidApp, in the format: projects/ PROJECT_IDENTIFIER/androidApps/APP_ID Since an APP_ID is a unique identifier, the Unique Resource from Sub-Collection access pattern may be used here, in the format: projects/-/androidApps/APP_ID Refer to the AndroidApp [name](../projects.androidApps#AndroidApp.FIELDS.name) field for details about PROJECT_IDENTIFIER and APP_ID values."
                }
              },
              "parameterOrder": [
                "name"
              ]
            }
          },
          "resources": {
            "sha": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "id": "firebase.projects.androidApps.sha.delete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "description": "Removes a ShaCertificate from the specified AndroidApp.",
                  "flatPath": "v1beta1/projects/{projectsId}/androidApps/{androidAppsId}/sha/{shaId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "The resource name of the ShaCertificate to remove from the parent AndroidApp, in the format: projects/PROJECT_IDENTIFIER/androidApps/APP_ID /sha/SHA_HASH Refer to the `ShaCertificate` [`name`](../projects.androidApps.sha#ShaCertificate.FIELDS.name) field for details about PROJECT_IDENTIFIER, APP_ID, and SHA_HASH values. You can obtain the full resource name of the `ShaCertificate` from the response of [`ListShaCertificates`](../projects.androidApps.sha/list) or the original [`CreateShaCertificate`](../projects.androidApps.sha/create).",
                      "required": true,
                      "pattern": "^projects/[^/]+/androidApps/[^/]+/sha/[^/]+$"
                    }
                  }
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/androidApps/[^/]+$",
                      "description": "The resource name of the parent AndroidApp to which to add a ShaCertificate, in the format: projects/PROJECT_IDENTIFIER/androidApps/ APP_ID Since an APP_ID is a unique identifier, the Unique Resource from Sub-Collection access pattern may be used here, in the format: projects/-/androidApps/APP_ID Refer to the `AndroidApp` [`name`](../projects.androidApps#AndroidApp.FIELDS.name) field for details about PROJECT_IDENTIFIER and APP_ID values."
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1beta1/projects/{projectsId}/androidApps/{androidAppsId}/sha",
                  "id": "firebase.projects.androidApps.sha.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ShaCertificate"
                  },
                  "description": "Adds a ShaCertificate to the specified AndroidApp.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/firebase"
                  ],
                  "path": "v1beta1/{+parent}/sha",
                  "request": {
                    "$ref": "ShaCertificate"
                  }
                },
                "list": {
                  "flatPath": "v1beta1/projects/{projectsId}/androidApps/{androidAppsId}/sha",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListShaCertificatesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "firebase.projects.androidApps.sha.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only",
                    "https://www.googleapis.com/auth/firebase",
                    "https://www.googleapis.com/auth/firebase.readonly"
                  ],
                  "description": "Lists the SHA-1 and SHA-256 certificates for the specified AndroidApp.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/androidApps/[^/]+$",
                      "type": "string",
                      "description": "The resource name of the parent AndroidApp for which to list each associated ShaCertificate, in the format: projects/PROJECT_IDENTIFIER /androidApps/APP_ID Since an APP_ID is a unique identifier, the Unique Resource from Sub-Collection access pattern may be used here, in the format: projects/-/androidApps/APP_ID Refer to the `AndroidApp` [`name`](../projects.androidApps#AndroidApp.FIELDS.name) field for details about PROJECT_IDENTIFIER and APP_ID values.",
                      "required": true
                    }
                  },
                  "path": "v1beta1/{+parent}/sha"
                }
              }
            }
          }
        },
        "webApps": {
          "methods": {
            "patch": {
              "path": "v1beta1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "id": "firebase.projects.webApps.patch",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "response": {
                "$ref": "WebApp"
              },
              "httpMethod": "PATCH",
              "description": "Updates the attributes of the specified WebApp.",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The resource name of the WebApp, in the format: projects/PROJECT_IDENTIFIER /webApps/APP_ID * PROJECT_IDENTIFIER: the parent Project's [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.webApps#WebApp.FIELDS.app_id)).",
                  "required": true,
                  "pattern": "^projects/[^/]+/webApps/[^/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "Specifies which fields of the WebApp to update. Note that the following fields are immutable: `name`, `app_id`, and `project_id`. To update `state`, use any of the following endpoints: RemoveWebApp or UndeleteWebApp."
                }
              },
              "flatPath": "v1beta1/projects/{projectsId}/webApps/{webAppsId}",
              "request": {
                "$ref": "WebApp"
              }
            },
            "getConfig": {
              "path": "v1beta1/{+name}",
              "httpMethod": "GET",
              "response": {
                "$ref": "WebAppConfig"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "The resource name of the WebApp configuration to download, in the format: projects/PROJECT_IDENTIFIER/webApps/APP_ID/config Since an APP_ID is a unique identifier, the Unique Resource from Sub-Collection access pattern may be used here, in the format: projects/-/webApps/APP_ID Refer to the `WebApp` [`name`](../projects.webApps#WebApp.FIELDS.name) field for details about PROJECT_IDENTIFIER and APP_ID values.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/webApps/[^/]+/config$",
                  "location": "path"
                }
              },
              "id": "firebase.projects.webApps.getConfig",
              "description": "Gets the configuration artifact associated with the specified WebApp.",
              "flatPath": "v1beta1/projects/{projectsId}/webApps/{webAppsId}/config",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only",
                "https://www.googleapis.com/auth/firebase",
                "https://www.googleapis.com/auth/firebase.readonly"
              ]
            },
            "undelete": {
              "id": "firebase.projects.webApps.undelete",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/webApps/{webAppsId}:undelete",
              "parameters": {
                "name": {
                  "description": "Required. The resource name of the WebApp, in the format: projects/ PROJECT_IDENTIFIER/webApps/APP_ID Since an APP_ID is a unique identifier, the Unique Resource from Sub-Collection access pattern may be used here, in the format: projects/-/webApps/APP_ID Refer to the WebApp [name](../projects.webApps#WebApp.FIELDS.name) field for details about PROJECT_IDENTIFIER and APP_ID values.",
                  "required": true,
                  "pattern": "^projects/[^/]+/webApps/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "description": "Restores the specified WebApp to the FirebaseProject.",
              "httpMethod": "POST",
              "path": "v1beta1/{+name}:undelete",
              "request": {
                "$ref": "UndeleteWebAppRequest"
              },
              "response": {
                "$ref": "Operation"
              }
            },
            "create": {
              "flatPath": "v1beta1/projects/{projectsId}/webApps",
              "description": "Requests the creation of a new WebApp in the specified FirebaseProject. The result of this call is an `Operation` which can be used to track the provisioning process. The `Operation` is automatically deleted after completion, so there is no need to call `DeleteOperation`.",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "path": "v1beta1/{+parent}/webApps",
              "response": {
                "$ref": "Operation"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource name of the parent FirebaseProject in which to create a WebApp, in the format: projects/PROJECT_IDENTIFIER/webApps Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "WebApp"
              },
              "id": "firebase.projects.webApps.create"
            },
            "get": {
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "id": "firebase.projects.webApps.get",
              "description": "Gets the specified WebApp.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only",
                "https://www.googleapis.com/auth/firebase",
                "https://www.googleapis.com/auth/firebase.readonly"
              ],
              "path": "v1beta1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/webApps/[^/]+$",
                  "location": "path",
                  "description": "The resource name of the WebApp, in the format: projects/PROJECT_IDENTIFIER /webApps/APP_ID Since an APP_ID is a unique identifier, the Unique Resource from Sub-Collection access pattern may be used here, in the format: projects/-/webApps/APP_ID Refer to the `WebApp` [`name`](../projects.webApps#WebApp.FIELDS.name) field for details about PROJECT_IDENTIFIER and APP_ID values."
                }
              },
              "response": {
                "$ref": "WebApp"
              },
              "flatPath": "v1beta1/projects/{projectsId}/webApps/{webAppsId}"
            },
            "list": {
              "description": "Lists each WebApp associated with the specified FirebaseProject. The elements are returned in no particular order, but will be a consistent view of the Apps when additional requests are made with a `pageToken`.",
              "httpMethod": "GET",
              "flatPath": "v1beta1/projects/{projectsId}/webApps",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of Apps to return in the response. The server may return fewer than this value at its discretion. If no value is specified (or too large a value is specified), then the server will impose its own limit.",
                  "type": "integer",
                  "location": "query"
                },
                "showDeleted": {
                  "location": "query",
                  "description": "Controls whether Apps in the DELETED state should be returned in the response. If not specified, only `ACTIVE` Apps will be returned.",
                  "type": "boolean"
                },
                "parent": {
                  "location": "path",
                  "description": "The resource name of the parent FirebaseProject for which to list each associated WebApp, in the format: projects/PROJECT_IDENTIFIER/webApps Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "Token returned from a previous call to `ListWebApps` indicating where in the set of Apps to resume listing.",
                  "type": "string"
                }
              },
              "id": "firebase.projects.webApps.list",
              "path": "v1beta1/{+parent}/webApps",
              "response": {
                "$ref": "ListWebAppsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only",
                "https://www.googleapis.com/auth/firebase",
                "https://www.googleapis.com/auth/firebase.readonly"
              ]
            },
            "remove": {
              "id": "firebase.projects.webApps.remove",
              "request": {
                "$ref": "RemoveWebAppRequest"
              },
              "flatPath": "v1beta1/projects/{projectsId}/webApps/{webAppsId}:remove",
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. The resource name of the WebApp, in the format: projects/ PROJECT_IDENTIFIER/webApps/APP_ID Since an APP_ID is a unique identifier, the Unique Resource from Sub-Collection access pattern may be used here, in the format: projects/-/webApps/APP_ID Refer to the WebApp [name](../projects.webApps#WebApp.FIELDS.name) field for details about PROJECT_IDENTIFIER and APP_ID values.",
                  "pattern": "^projects/[^/]+/webApps/[^/]+$"
                }
              },
              "response": {
                "$ref": "Operation"
              },
              "description": "Removes the specified WebApp from the FirebaseProject.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/firebase"
              ],
              "parameterOrder": [
                "name"
              ],
              "path": "v1beta1/{+name}:remove"
            }
          }
        }
      }
    },
    "operations": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "id": "firebase.operations.get",
          "parameters": {
            "name": {
              "description": "The name of the operation resource.",
              "required": true,
              "type": "string",
              "location": "path",
              "pattern": "^operations/.*$"
            }
          },
          "response": {
            "$ref": "Operation"
          },
          "flatPath": "v1beta1/operations/{operationsId}",
          "path": "v1beta1/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/firebase",
            "https://www.googleapis.com/auth/firebase.readonly"
          ],
          "parameterOrder": [
            "name"
          ]
        }
      }
    }
  }
}

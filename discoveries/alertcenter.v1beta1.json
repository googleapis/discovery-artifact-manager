{
  "batchPath": "batch",
  "version": "v1beta1",
  "rootUrl": "https://alertcenter.googleapis.com/",
  "documentationLink": "https://developers.google.com/admin-sdk/alertcenter/",
  "title": "Google Workspace Alert Center API",
  "version_module": true,
  "ownerDomain": "google.com",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "kind": "discovery#restDescription",
  "baseUrl": "https://alertcenter.googleapis.com/",
  "id": "alertcenter:v1beta1",
  "mtlsRootUrl": "https://alertcenter.mtls.googleapis.com/",
  "protocol": "rest",
  "canonicalName": "AlertCenter",
  "discoveryVersion": "v1",
  "schemas": {
    "Notification": {
      "description": "Settings for callback notifications. For more details see [Google Workspace Alert Notification](https://developers.google.com/admin-sdk/alertcenter/guides/notifications).",
      "properties": {
        "cloudPubsubTopic": {
          "description": "A Google Cloud Pub/sub topic destination.",
          "$ref": "CloudPubsubTopic"
        }
      },
      "type": "object",
      "id": "Notification"
    },
    "DomainWideTakeoutInitiated": {
      "description": "A takeout operation for the entire domain was initiated by an admin. Derived from audit logs.",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email of the admin who initiated the takeout."
        },
        "takeoutRequestId": {
          "type": "string",
          "description": "The takeout request ID."
        }
      },
      "id": "DomainWideTakeoutInitiated",
      "type": "object"
    },
    "Status": {
      "type": "object",
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      }
    },
    "UserChanges": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Rule name",
          "type": "string"
        }
      },
      "description": "Alerts from UserChanges bucket Rules for predefined rules which contain the below rules. Suspended user made active New user Added User suspended (by admin) User granted admin privileges User admin privileges revoked User deleted Users password changed",
      "id": "UserChanges"
    },
    "PrimaryAdminChangedEvent": {
      "type": "object",
      "description": "Event occurred when primary admin changed in customer's account. The event are being received from insight forwarder",
      "id": "PrimaryAdminChangedEvent",
      "properties": {
        "updatedAdminEmail": {
          "description": "Email of person who is the primary admin after the action",
          "type": "string"
        },
        "domain": {
          "description": "domain in which actioned occurred",
          "type": "string"
        },
        "previousAdminEmail": {
          "description": "Email of person who was the primary admin before the action",
          "type": "string"
        }
      }
    },
    "MailPhishing": {
      "properties": {
        "isInternal": {
          "description": "If `true`, the email originated from within the organization.",
          "type": "boolean"
        },
        "domainId": {
          "$ref": "DomainId",
          "description": "The domain ID."
        },
        "messages": {
          "description": "The list of messages contained by this alert.",
          "type": "array",
          "items": {
            "$ref": "GmailMessageInfo"
          }
        },
        "systemActionType": {
          "enum": [
            "SYSTEM_ACTION_TYPE_UNSPECIFIED",
            "NO_OPERATION",
            "REMOVED_FROM_INBOX"
          ],
          "description": "System actions on the messages.",
          "type": "string",
          "enumDescriptions": [
            "System action is unspecified.",
            "No operation.",
            "Messages were removed from the inbox."
          ]
        },
        "maliciousEntity": {
          "description": "The entity whose actions triggered a Gmail phishing alert.",
          "$ref": "MaliciousEntity"
        }
      },
      "description": "Proto for all phishing alerts with common payload. Supported types are any of the following: * User reported phishing * User reported spam spike * Suspicious message reported * Phishing reclassification * Malware reclassification * Gmail potential employee spoofing",
      "type": "object",
      "id": "MailPhishing"
    },
    "GmailMessageInfo": {
      "properties": {
        "md5HashMessageBody": {
          "type": "string",
          "description": "The hash of the message body text."
        },
        "md5HashSubject": {
          "type": "string",
          "description": "The MD5 Hash of email's subject (only available for reported emails)."
        },
        "date": {
          "format": "google-datetime",
          "description": "The date of the event related to this email.",
          "type": "string"
        },
        "messageId": {
          "type": "string",
          "description": "The message ID."
        },
        "subjectText": {
          "type": "string",
          "description": "The email subject text (only available for reported emails)."
        },
        "recipient": {
          "description": "The recipient of this email.",
          "type": "string"
        },
        "messageBodySnippet": {
          "type": "string",
          "description": "The snippet of the message body text (only available for reported emails)."
        },
        "attachmentsSha256Hash": {
          "description": "The `SHA256` hash of email's attachment and all MIME parts.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Details of a message in phishing spike alert.",
      "id": "GmailMessageInfo",
      "type": "object"
    },
    "PredefinedDetectorInfo": {
      "properties": {
        "detectorName": {
          "description": "Name that uniquely identifies the detector.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "PredefinedDetectorInfo",
      "description": "Detector provided by Google."
    },
    "SuspiciousActivity": {
      "type": "object",
      "description": "A mobile suspicious activity alert. Derived from audit logs.",
      "properties": {
        "events": {
          "items": {
            "$ref": "SuspiciousActivitySecurityDetail"
          },
          "type": "array",
          "description": "Required. The list of security events."
        },
        "email": {
          "type": "string",
          "description": "The email of the user this alert was created for."
        }
      },
      "id": "SuspiciousActivity"
    },
    "ActivityRule": {
      "id": "ActivityRule",
      "properties": {
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp of the last update to the rule."
        },
        "windowSize": {
          "format": "google-duration",
          "type": "string",
          "description": "Rule window size. Possible values are 1 hour or 24 hours."
        },
        "displayName": {
          "type": "string",
          "description": "Alert display name."
        },
        "supersedingAlert": {
          "description": "Alert ID superseding this alert. It is used to indicate that superseding alert is essentially extension of this alert and we found the relationship after creating both alerts.",
          "type": "string"
        },
        "query": {
          "type": "string",
          "description": "Query that is used to get the data from the associated source."
        },
        "createTime": {
          "type": "string",
          "description": "Rule create timestamp.",
          "format": "google-datetime"
        },
        "threshold": {
          "description": "Alert threshold is for example “COUNT \u003e 5”.",
          "type": "string"
        },
        "name": {
          "description": "Rule name.",
          "type": "string"
        },
        "description": {
          "description": "Description of the rule.",
          "type": "string"
        },
        "actionNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of action names associated with the rule threshold."
        },
        "triggerSource": {
          "description": "The trigger sources for this rule. * GMAIL_EVENTS * DEVICE_EVENTS * USER_EVENTS",
          "type": "string"
        },
        "supersededAlerts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of alert IDs superseded by this alert. It is used to indicate that this alert is essentially extension of superseded alerts and we found the relationship after creating these alerts."
        }
      },
      "type": "object",
      "description": "Alerts from Google Workspace Security Center rules service configured by an admin."
    },
    "VoiceMisconfiguration": {
      "description": "An alert triggered when Google Voice configuration becomes invalid, generally due to an external entity being modified or deleted.",
      "type": "object",
      "id": "VoiceMisconfiguration",
      "properties": {
        "fixUri": {
          "type": "string",
          "description": "Link that the admin can follow to fix the issue."
        },
        "entityName": {
          "type": "string",
          "description": "Name of the entity whose configuration is now invalid."
        },
        "transferMisconfiguration": {
          "description": "Issue(s) with transferring or forwarding to an external entity.",
          "$ref": "TransferMisconfiguration"
        },
        "entityType": {
          "enumDescriptions": [
            "Entity type wasn't set.",
            "Invalid auto attendant.",
            "Invalid ring group."
          ],
          "type": "string",
          "enum": [
            "ENTITY_TYPE_UNSPECIFIED",
            "AUTO_ATTENDANT",
            "RING_GROUP"
          ],
          "description": "Type of the entity whose configuration is now invalid."
        },
        "voicemailMisconfiguration": {
          "description": "Issue(s) with sending to voicemail.",
          "$ref": "VoicemailMisconfiguration"
        },
        "membersMisconfiguration": {
          "$ref": "TransferMisconfiguration",
          "description": "Issue(s) with members of a ring group."
        }
      }
    },
    "ActionInfo": {
      "description": "Metadata related to the action.",
      "id": "ActionInfo",
      "type": "object",
      "properties": {}
    },
    "MergeInfo": {
      "properties": {
        "newIncidentTrackingId": {
          "description": "The new tracking ID from the parent incident.",
          "type": "string"
        },
        "newAlertId": {
          "type": "string",
          "description": "Optional. New alert ID. Reference the [google.apps.alertcenter.Alert] with this ID for the current state."
        }
      },
      "description": "New alert tracking numbers.",
      "id": "MergeInfo",
      "type": "object"
    },
    "CloudPubsubTopic": {
      "id": "CloudPubsubTopic",
      "description": "A reference to a Cloud Pubsub topic. To register for notifications, the owner of the topic must grant `alerts-api-push-notifications@system.gserviceaccount.com` the `projects.topics.publish` permission.",
      "properties": {
        "payloadFormat": {
          "type": "string",
          "description": "Optional. The format of the payload that would be sent. If not specified the format will be JSON.",
          "enumDescriptions": [
            "Payload format is not specified (will use JSON as default).",
            "Use JSON."
          ],
          "enum": [
            "PAYLOAD_FORMAT_UNSPECIFIED",
            "JSON"
          ]
        },
        "topicName": {
          "description": "The `name` field of a Cloud Pubsub [Topic] (https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleOperations": {
      "type": "object",
      "properties": {
        "attachmentData": {
          "$ref": "Attachment",
          "description": "Optional. Application-specific data for an incident, provided when the Google Workspace application which reported the incident cannot be completely restored to a valid state."
        },
        "header": {
          "description": "A header to display above the incident message. Typically used to attach a localized notice on the timeline for followup comms translations.",
          "type": "string"
        },
        "affectedUserEmails": {
          "type": "array",
          "description": "The list of emails which correspond to the users directly affected by the incident.",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "description": "A detailed, freeform incident description."
        },
        "domain": {
          "type": "string",
          "description": "Customer domain for email template personalization."
        },
        "title": {
          "description": "A one-line incident description.",
          "type": "string"
        }
      },
      "id": "GoogleOperations",
      "description": "An incident reported by Google Operations for a Google Workspace application."
    },
    "Empty": {
      "properties": {},
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "TransferMisconfiguration": {
      "id": "TransferMisconfiguration",
      "type": "object",
      "description": "Error related to transferring or forwarding a phone call.",
      "properties": {
        "errors": {
          "items": {
            "$ref": "TransferError"
          },
          "type": "array",
          "description": "Details for each invalid transfer or forward."
        }
      }
    },
    "Settings": {
      "type": "object",
      "description": "Customer-level settings.",
      "properties": {
        "notifications": {
          "type": "array",
          "description": "The list of notifications.",
          "items": {
            "$ref": "Notification"
          }
        }
      },
      "id": "Settings"
    },
    "UserDefinedDetectorInfo": {
      "description": "Detector defined by administrators.",
      "type": "object",
      "id": "UserDefinedDetectorInfo",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the detector."
        },
        "resourceName": {
          "description": "Resource name that uniquely identifies the detector.",
          "type": "string"
        }
      }
    },
    "DomainId": {
      "properties": {
        "customerPrimaryDomain": {
          "description": "The primary domain for the customer.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "DomainId",
      "description": "Domain ID of Gmail phishing alerts."
    },
    "User": {
      "type": "object",
      "id": "User",
      "description": "A user.",
      "properties": {
        "emailAddress": {
          "type": "string",
          "description": "Email address of the user."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the user."
        }
      }
    },
    "ListAlertsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token for the next page. If not empty, indicates that there may be more alerts that match the listing request; this value can be used in a subsequent ListAlertsRequest to get alerts continuing from last result of the current list call."
        },
        "alerts": {
          "items": {
            "$ref": "Alert"
          },
          "description": "The list of alerts.",
          "type": "array"
        }
      },
      "description": "Response message for an alert listing request.",
      "id": "ListAlertsResponse",
      "type": "object"
    },
    "SensitiveAdminAction": {
      "description": "Alert that is triggered when Sensitive Admin Action occur in customer account.",
      "properties": {
        "primaryAdminChangedEvent": {
          "description": "Event occurred when primary admin changed in customer's account",
          "$ref": "PrimaryAdminChangedEvent"
        },
        "actorEmail": {
          "description": "Email of person who performed the action",
          "type": "string"
        },
        "ssoProfileDeletedEvent": {
          "description": "Event occurred when SSO Profile deleted in customer's account",
          "$ref": "SSOProfileDeletedEvent"
        },
        "eventTime": {
          "description": "The time at which event occurred",
          "format": "google-datetime",
          "type": "string"
        },
        "superAdminPasswordResetEvent": {
          "description": "Event occurred when password was reset for super admin in customer's account",
          "$ref": "SuperAdminPasswordResetEvent"
        },
        "ssoProfileUpdatedEvent": {
          "$ref": "SSOProfileUpdatedEvent",
          "description": "Event occurred when SSO Profile updated in customer's account"
        },
        "ssoProfileCreatedEvent": {
          "description": "Event occurred when SSO Profile created in customer's account",
          "$ref": "SSOProfileCreatedEvent"
        }
      },
      "type": "object",
      "id": "SensitiveAdminAction"
    },
    "Csv": {
      "properties": {
        "dataRows": {
          "type": "array",
          "description": "The list of data rows in a CSV file, as string arrays rather than as a single comma-separated string.",
          "items": {
            "$ref": "CsvRow"
          }
        },
        "headers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of headers for data columns in a CSV file."
        }
      },
      "description": "A representation of a CSV file attachment, as a list of column headers and a list of data rows.",
      "id": "Csv",
      "type": "object"
    },
    "DeviceCompromised": {
      "id": "DeviceCompromised",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email of the user this alert was created for."
        },
        "events": {
          "description": "Required. The list of security events.",
          "items": {
            "$ref": "DeviceCompromisedSecurityDetail"
          },
          "type": "array"
        }
      },
      "description": "A mobile device compromised alert. Derived from audit logs.",
      "type": "object"
    },
    "CsvRow": {
      "type": "object",
      "properties": {
        "entries": {
          "description": "The data entries in a CSV file row, as a string array rather than a single comma-separated string.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "A representation of a single data row in a CSV file.",
      "id": "CsvRow"
    },
    "AlertFeedback": {
      "description": "A customer feedback about an alert.",
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Output only. The unique identifier of the Google account of the customer."
        },
        "type": {
          "enum": [
            "ALERT_FEEDBACK_TYPE_UNSPECIFIED",
            "NOT_USEFUL",
            "SOMEWHAT_USEFUL",
            "VERY_USEFUL"
          ],
          "description": "Required. The type of the feedback.",
          "type": "string",
          "enumDescriptions": [
            "The feedback type is not specified.",
            "The alert report is not useful.",
            "The alert report is somewhat useful.",
            "The alert report is very useful."
          ]
        },
        "alertId": {
          "type": "string",
          "description": "Output only. The alert identifier."
        },
        "createTime": {
          "description": "Output only. The time this feedback was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "feedbackId": {
          "type": "string",
          "description": "Output only. The unique identifier for the feedback."
        },
        "email": {
          "description": "Output only. The email of the user that provided the feedback.",
          "type": "string"
        }
      },
      "id": "AlertFeedback",
      "type": "object"
    },
    "AppMakerSqlSetupNotification": {
      "id": "AppMakerSqlSetupNotification",
      "type": "object",
      "description": "Alerts from App Maker to notify admins to set up default SQL instance.",
      "properties": {
        "requestInfo": {
          "description": "List of applications with requests for default SQL set up.",
          "type": "array",
          "items": {
            "$ref": "RequestInfo"
          }
        }
      }
    },
    "SuperAdminPasswordResetEvent": {
      "type": "object",
      "id": "SuperAdminPasswordResetEvent",
      "properties": {
        "userEmail": {
          "type": "string",
          "description": "email of person whose password was reset"
        }
      },
      "description": "Event occurred when password was reset for super admin in customer's account. The event are being received from insight forwarder"
    },
    "SSOProfileDeletedEvent": {
      "properties": {
        "inboundSsoProfileName": {
          "type": "string",
          "description": "sso profile name which got deleted"
        }
      },
      "type": "object",
      "id": "SSOProfileDeletedEvent",
      "description": "Event occurred when SSO Profile deleted in customer's account. The event are being received from insight forwarder"
    },
    "RequestInfo": {
      "properties": {
        "numberOfRequests": {
          "description": "Required. Number of requests sent for this application to set up default SQL instance.",
          "format": "int64",
          "type": "string"
        },
        "appDeveloperEmail": {
          "description": "List of app developers who triggered notifications for above application.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "appKey": {
          "type": "string",
          "description": "Required. The application that requires the SQL setup."
        }
      },
      "description": "Requests for one application that needs default SQL setup.",
      "id": "RequestInfo",
      "type": "object"
    },
    "SSOProfileUpdatedEvent": {
      "type": "object",
      "properties": {
        "inboundSsoProfileChanges": {
          "description": "changes made to sso profile",
          "type": "string"
        },
        "inboundSsoProfileName": {
          "description": "sso profile name which got updated",
          "type": "string"
        }
      },
      "id": "SSOProfileUpdatedEvent",
      "description": "Event occurred when SSO Profile updated in customer's account. The event are being received from insight forwarder"
    },
    "VoicemailRecipientError": {
      "properties": {
        "invalidReason": {
          "enumDescriptions": [
            "Reason wasn't specified.",
            "User can't receive emails due to insufficient quota.",
            "All recipients were deleted."
          ],
          "enum": [
            "EMAIL_INVALID_REASON_UNSPECIFIED",
            "OUT_OF_QUOTA",
            "RECIPIENT_DELETED"
          ],
          "type": "string",
          "description": "Reason for the error."
        },
        "email": {
          "type": "string",
          "description": "Email address of the invalid recipient. This may be unavailable if the recipient was deleted."
        }
      },
      "description": "Issue(s) with a voicemail recipient.",
      "type": "object",
      "id": "VoicemailRecipientError"
    },
    "AlertMetadata": {
      "type": "object",
      "description": "An alert metadata.",
      "properties": {
        "alertId": {
          "description": "Output only. The alert identifier.",
          "type": "string"
        },
        "customerId": {
          "description": "Output only. The unique identifier of the Google account of the customer.",
          "type": "string"
        },
        "assignee": {
          "type": "string",
          "description": "The email address of the user assigned to the alert."
        },
        "status": {
          "type": "string",
          "description": "The current status of the alert. The supported values are the following: * NOT_STARTED * IN_PROGRESS * CLOSED"
        },
        "severity": {
          "description": "The severity value of the alert. Alert Center will set this field at alert creation time, default's to an empty string when it could not be determined. The supported values for update actions on this field are the following: * HIGH * MEDIUM * LOW",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert metadata from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform metadata updates in order to avoid race conditions: An `etag` is returned in the response which contains alert metadata, and systems are expected to put that etag in the request to update alert metadata to ensure that their change will be applied to the same version of the alert metadata. If no `etag` is provided in the call to update alert metadata, then the existing alert metadata is overwritten blindly."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time this metadata was last updated."
        }
      },
      "id": "AlertMetadata"
    },
    "DeviceCompromisedSecurityDetail": {
      "properties": {
        "serialNumber": {
          "type": "string",
          "description": "The serial number of the device."
        },
        "resourceId": {
          "type": "string",
          "description": "The device resource ID."
        },
        "deviceType": {
          "description": "The type of the device.",
          "type": "string"
        },
        "iosVendorId": {
          "description": "Required for iOS, empty for others.",
          "type": "string"
        },
        "deviceId": {
          "type": "string",
          "description": "Required. The device ID."
        },
        "deviceModel": {
          "type": "string",
          "description": "The model of the device."
        },
        "deviceCompromisedState": {
          "description": "The device compromised state. Possible values are \"`Compromised`\" or \"`Not Compromised`\".",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Detailed information of a single MDM device compromised event.",
      "id": "DeviceCompromisedSecurityDetail"
    },
    "Entity": {
      "id": "Entity",
      "type": "object",
      "properties": {
        "link": {
          "type": "string",
          "description": "Link to a Security Investigation Tool search based on this entity, if available."
        },
        "name": {
          "description": "Human-readable name of this entity, such as an email address, file ID, or device name.",
          "type": "string"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "description": "Extra values beyond name. The order of values should align with headers in EntityList.",
          "type": "array"
        }
      },
      "description": "Individual entity affected by, or related to, an alert."
    },
    "LoginDetails": {
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "Optional. The human-readable IP address (for example, `11.22.33.44`) that is associated with the warning event."
        },
        "loginTime": {
          "format": "google-datetime",
          "description": "Optional. The successful login time that is associated with the warning event. This isn't present for blocked login attempts.",
          "type": "string"
        }
      },
      "id": "LoginDetails",
      "description": "The details of the login action.",
      "type": "object"
    },
    "ListAlertFeedbackResponse": {
      "description": "Response message for an alert feedback listing request.",
      "type": "object",
      "id": "ListAlertFeedbackResponse",
      "properties": {
        "feedback": {
          "description": "The list of alert feedback. Feedback entries for each alert are ordered by creation time descending.",
          "type": "array",
          "items": {
            "$ref": "AlertFeedback"
          }
        }
      }
    },
    "StateSponsoredAttack": {
      "description": "A state-sponsored attack alert. Derived from audit logs.",
      "type": "object",
      "id": "StateSponsoredAttack",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email of the user this incident was created for."
        }
      }
    },
    "EntityList": {
      "type": "object",
      "description": "EntityList stores entities in a format that can be translated to a table in the Alert Center UI.",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "Entity"
          },
          "description": "List of entities affected by the alert."
        },
        "headers": {
          "description": "Headers of the values in entities. If no value is defined in Entity, this field should be empty.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the key detail used to display this entity list.",
          "type": "string"
        }
      },
      "id": "EntityList"
    },
    "ApnsCertificateExpirationInfo": {
      "properties": {
        "expirationTime": {
          "description": "The expiration date of the APNS Certificate.",
          "type": "string",
          "format": "google-datetime"
        },
        "uid": {
          "description": "The UID for the certificate.",
          "type": "string"
        },
        "appleId": {
          "type": "string",
          "description": "The Apple ID used for the certificate may be blank if admins didn't enter it."
        }
      },
      "id": "ApnsCertificateExpirationInfo",
      "type": "object",
      "description": "The explanation message associated with ApnsCertificationExpiring and ApnsCertificationExpired alerts."
    },
    "ResourceInfo": {
      "id": "ResourceInfo",
      "properties": {
        "documentId": {
          "type": "string",
          "description": "Drive file ID."
        },
        "resourceTitle": {
          "description": "Title of the resource, for example email subject, or document title.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Proto that contains resource information."
    },
    "PhishingSpike": {
      "id": "PhishingSpike",
      "properties": {
        "messages": {
          "description": "The list of messages contained by this alert.",
          "items": {
            "$ref": "GmailMessageInfo"
          },
          "type": "array"
        },
        "domainId": {
          "description": "The domain ID.",
          "$ref": "DomainId"
        },
        "maliciousEntity": {
          "description": "The entity whose actions triggered a Gmail phishing alert.",
          "$ref": "MaliciousEntity"
        },
        "isInternal": {
          "type": "boolean",
          "description": "If `true`, the email originated from within the organization."
        }
      },
      "type": "object",
      "description": "Alert for a spike in user reported phishing. *Warning*: This type has been deprecated. Use [MailPhishing](/admin-sdk/alertcenter/reference/rest/v1beta1/MailPhishing) instead."
    },
    "BatchUndeleteAlertsResponse": {
      "type": "object",
      "id": "BatchUndeleteAlertsResponse",
      "properties": {
        "successAlertIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The successful list of alert IDs."
        },
        "failedAlertStatus": {
          "type": "object",
          "description": "The status details for each failed alert_id.",
          "additionalProperties": {
            "$ref": "Status"
          }
        }
      },
      "description": "Response to batch undelete operation on alerts."
    },
    "TransferError": {
      "description": "Details for an invalid transfer or forward.",
      "properties": {
        "entityType": {
          "description": "Type of entity being transferred to. For ring group members, this should always be USER.",
          "type": "string",
          "enumDescriptions": [
            "Entity type wasn't set.",
            "Transfer to auto attendant.",
            "Transfer to ring group.",
            "Transfer to user."
          ],
          "enum": [
            "TRANSFER_ENTITY_TYPE_UNSPECIFIED",
            "TRANSFER_AUTO_ATTENDANT",
            "TRANSFER_RING_GROUP",
            "TRANSFER_USER"
          ]
        },
        "id": {
          "description": "Ring group or auto attendant ID. Not set for users.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "User's full name, or the ring group / auto attendant name. This may be unavailable if the entity was deleted."
        },
        "email": {
          "description": "User's email address. This may be unavailable if the entity was deleted.",
          "type": "string"
        },
        "invalidReason": {
          "type": "string",
          "enum": [
            "TRANSFER_INVALID_REASON_UNSPECIFIED",
            "TRANSFER_TARGET_DELETED",
            "UNLICENSED",
            "SUSPENDED",
            "NO_PHONE_NUMBER"
          ],
          "enumDescriptions": [
            "Reason wasn't specified.",
            "The transfer target can't be found—most likely it was deleted.",
            "The user's Google Voice license was removed.",
            "The user's Google Workspace account was suspended.",
            "The transfer target no longer has a phone number. This reason should become deprecated once we support numberless transfer."
          ],
          "description": "Reason for the error."
        }
      },
      "type": "object",
      "id": "TransferError"
    },
    "MandatoryServiceAnnouncement": {
      "id": "MandatoryServiceAnnouncement",
      "type": "object",
      "properties": {
        "title": {
          "description": "One line summary of the announcement",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Detailed, freeform text describing the announcement"
        }
      },
      "description": "Alert Created by the MSA team for communications necessary for continued use of Google Workspace Products."
    },
    "MatchInfo": {
      "properties": {
        "predefinedDetector": {
          "$ref": "PredefinedDetectorInfo",
          "description": "For matched detector predefined by Google."
        },
        "userDefinedDetector": {
          "$ref": "UserDefinedDetectorInfo",
          "description": "For matched detector defined by administrators."
        }
      },
      "type": "object",
      "id": "MatchInfo",
      "description": "Proto that contains match information from the condition part of the rule."
    },
    "MaliciousEntity": {
      "description": "Entity whose actions triggered a Gmail phishing alert.",
      "type": "object",
      "properties": {
        "fromHeader": {
          "type": "string",
          "description": "The sender email address."
        },
        "displayName": {
          "type": "string",
          "description": "The header from display name."
        },
        "entity": {
          "description": "The actor who triggered a gmail phishing alert.",
          "$ref": "User"
        }
      },
      "id": "MaliciousEntity"
    },
    "SSOProfileCreatedEvent": {
      "properties": {
        "inboundSsoProfileName": {
          "type": "string",
          "description": "sso profile name which got created"
        }
      },
      "description": "Event occurred when SSO Profile created in customer's account. The event are being received from insight forwarder",
      "id": "SSOProfileCreatedEvent",
      "type": "object"
    },
    "AppsOutage": {
      "description": "An outage incident reported for a Google Workspace service.",
      "id": "AppsOutage",
      "properties": {
        "products": {
          "description": "List of products impacted by the outage.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mergeInfo": {
          "description": "Indicates new alert details under which the outage is communicated. Only populated when Status is MERGED.",
          "$ref": "MergeInfo"
        },
        "incidentTrackingId": {
          "description": "Incident tracking ID.",
          "type": "string"
        },
        "status": {
          "enumDescriptions": [
            "Status is unspecified.",
            "The incident has just been reported.",
            "The incident is ongoing.",
            "The incident has been resolved.",
            "Further assessment indicated no customer impact.",
            "The incident has been partially resolved.",
            "The incident was merged into a parent.",
            "The incident has lower impact than initially anticipated."
          ],
          "description": "Current outage status.",
          "type": "string",
          "enum": [
            "STATUS_UNSPECIFIED",
            "NEW",
            "ONGOING",
            "RESOLVED",
            "FALSE_POSITIVE",
            "PARTIALLY_RESOLVED",
            "MERGED",
            "DOWNGRADED"
          ]
        },
        "resolutionTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Timestamp when the outage is expected to be resolved, or has confirmed resolution. Provided only when known."
        },
        "nextUpdateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Timestamp by which the next update is expected to arrive."
        },
        "dashboardUri": {
          "type": "string",
          "description": "Link to the outage event in Google Workspace Status Dashboard"
        }
      },
      "type": "object"
    },
    "BatchUndeleteAlertsRequest": {
      "description": "A request to perform batch undelete on alerts.",
      "type": "object",
      "id": "BatchUndeleteAlertsRequest",
      "properties": {
        "customerId": {
          "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alerts are associated with.",
          "type": "string"
        },
        "alertId": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. list of alert IDs."
        }
      }
    },
    "BatchDeleteAlertsRequest": {
      "description": "A request to perform batch delete on alerts.",
      "type": "object",
      "properties": {
        "alertId": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. list of alert IDs."
        },
        "customerId": {
          "type": "string",
          "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alerts are associated with."
        }
      },
      "id": "BatchDeleteAlertsRequest"
    },
    "BadWhitelist": {
      "description": "Alert for setting the domain or IP that malicious email comes from as whitelisted domain or IP in Gmail advanced settings.",
      "type": "object",
      "id": "BadWhitelist",
      "properties": {
        "messages": {
          "items": {
            "$ref": "GmailMessageInfo"
          },
          "description": "The list of messages contained by this alert.",
          "type": "array"
        },
        "sourceIp": {
          "description": "The source IP address of the malicious email, for example, `127.0.0.1`.",
          "type": "string"
        },
        "domainId": {
          "description": "The domain ID.",
          "$ref": "DomainId"
        },
        "maliciousEntity": {
          "description": "The entity whose actions triggered a Gmail phishing alert.",
          "$ref": "MaliciousEntity"
        }
      }
    },
    "Attachment": {
      "id": "Attachment",
      "properties": {
        "csv": {
          "description": "A CSV file attachment.",
          "$ref": "Csv"
        }
      },
      "description": "Attachment with application-specific information about an alert.",
      "type": "object"
    },
    "BatchDeleteAlertsResponse": {
      "id": "BatchDeleteAlertsResponse",
      "properties": {
        "failedAlertStatus": {
          "description": "The status details for each failed alert_id.",
          "type": "object",
          "additionalProperties": {
            "$ref": "Status"
          }
        },
        "successAlertIds": {
          "items": {
            "type": "string"
          },
          "description": "The successful list of alert IDs.",
          "type": "array"
        }
      },
      "description": "Response to batch delete operation on alerts.",
      "type": "object"
    },
    "VoicemailMisconfiguration": {
      "id": "VoicemailMisconfiguration",
      "description": "Issue(s) with sending to voicemail.",
      "type": "object",
      "properties": {
        "errors": {
          "description": "Issue(s) with voicemail recipients.",
          "type": "array",
          "items": {
            "$ref": "VoicemailRecipientError"
          }
        }
      }
    },
    "AccountWarning": {
      "properties": {
        "loginDetails": {
          "description": "Optional. Details of the login action associated with the warning event. This is only available for: * Suspicious login * Suspicious login (less secure app) * Suspicious programmatic login * User suspended (suspicious activity)",
          "$ref": "LoginDetails"
        },
        "email": {
          "type": "string",
          "description": "Required. The email of the user that this event belongs to."
        }
      },
      "description": "Alerts for user account warning events.",
      "id": "AccountWarning",
      "type": "object"
    },
    "ReportingRule": {
      "id": "ReportingRule",
      "type": "object",
      "description": "Alerts from Reporting Rules configured by Admin.",
      "properties": {
        "name": {
          "description": "Rule name",
          "type": "string"
        },
        "query": {
          "format": "byte",
          "type": "string",
          "description": "Alert Rule query Sample Query query { condition { filter { expected_application_id: 777491262838 expected_event_name: \"indexable_content_change\" filter_op: IN } } conjunction_operator: OR }"
        },
        "alertDetails": {
          "format": "byte",
          "type": "string",
          "description": "Any other associated alert details, for example, AlertConfiguration."
        }
      }
    },
    "RuleInfo": {
      "description": "Proto that contains rule information.",
      "type": "object",
      "id": "RuleInfo",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "Resource name that uniquely identifies the rule."
        },
        "displayName": {
          "description": "User provided name of the rule.",
          "type": "string"
        }
      }
    },
    "RuleViolationInfo": {
      "description": "Common alert information about violated rules that are configured by Google Workspace administrators.",
      "type": "object",
      "properties": {
        "recipients": {
          "description": "Resource recipients. For Drive, they are grantees that the Drive file was shared with at the time of rule triggering. Valid values include user emails, group emails, domains, or 'anyone' if the file was publicly accessible. If the file was private the recipients list will be empty. For Gmail, they are emails of the users or groups that the Gmail message was sent to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "matchInfo": {
          "items": {
            "$ref": "MatchInfo"
          },
          "type": "array",
          "description": "List of matches that were found in the resource content."
        },
        "resourceInfo": {
          "description": "Details of the resource which violated the rule.",
          "$ref": "ResourceInfo"
        },
        "triggeredActionInfo": {
          "description": "Metadata related to the triggered actions.",
          "type": "array",
          "items": {
            "$ref": "ActionInfo"
          }
        },
        "ruleInfo": {
          "$ref": "RuleInfo",
          "description": "Details of the violated rule."
        },
        "triggeringUserEmail": {
          "type": "string",
          "description": "Email of the user who caused the violation. Value could be empty if not applicable, for example, a violation found by drive continuous scan."
        },
        "dataSource": {
          "enumDescriptions": [
            "Data source is unspecified.",
            "Drive data source."
          ],
          "type": "string",
          "enum": [
            "DATA_SOURCE_UNSPECIFIED",
            "DRIVE"
          ],
          "description": "Source of the data."
        },
        "triggeredActionTypes": {
          "items": {
            "type": "string",
            "enum": [
              "ACTION_TYPE_UNSPECIFIED",
              "DRIVE_BLOCK_EXTERNAL_SHARING",
              "DRIVE_WARN_ON_EXTERNAL_SHARING",
              "ALERT",
              "RULE_ACTIVATE",
              "RULE_DEACTIVATE"
            ],
            "enumDescriptions": [
              "Action type is unspecified.",
              "Block sharing a file externally.",
              "Show a warning message when sharing a file externally.",
              "Send alert.",
              "Activate Rule Action",
              "Deactivate Rule Action"
            ]
          },
          "type": "array",
          "description": "Actions applied as a consequence of the rule being triggered."
        },
        "suppressedActionTypes": {
          "description": "Actions suppressed due to other actions with higher priority.",
          "items": {
            "enum": [
              "ACTION_TYPE_UNSPECIFIED",
              "DRIVE_BLOCK_EXTERNAL_SHARING",
              "DRIVE_WARN_ON_EXTERNAL_SHARING",
              "ALERT",
              "RULE_ACTIVATE",
              "RULE_DEACTIVATE"
            ],
            "enumDescriptions": [
              "Action type is unspecified.",
              "Block sharing a file externally.",
              "Show a warning message when sharing a file externally.",
              "Send alert.",
              "Activate Rule Action",
              "Deactivate Rule Action"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "trigger": {
          "enumDescriptions": [
            "Trigger is unspecified.",
            "A Drive file is shared."
          ],
          "description": "Trigger of the rule.",
          "type": "string",
          "enum": [
            "TRIGGER_UNSPECIFIED",
            "DRIVE_SHARE"
          ]
        }
      },
      "id": "RuleViolationInfo"
    },
    "AccountSuspensionDetails": {
      "description": "Details about why an account is receiving an account suspension warning.",
      "id": "AccountSuspensionDetails",
      "properties": {
        "abuseReason": {
          "description": "The reason why this account is receiving an account suspension warning.",
          "type": "string",
          "enum": [
            "ACCOUNT_SUSPENSION_ABUSE_REASON_UNSPECIFIED",
            "TOS_VIOLATION",
            "SPAM",
            "PHISHING",
            "TRAFFIC_PUMPING",
            "FRAUD",
            "NUMBER_HARVESTING",
            "PAYMENTS_FRAUD",
            "UNWANTED_CONTENT"
          ],
          "enumDescriptions": [
            "Abuse reason is unspecified.",
            "This account is being suspended for a Terms of Service violation.",
            "This account is being suspended for spam.",
            "This account is being suspended for phishing.",
            "This account is being suspended for artificially boosting traffic to a website.",
            "This account is being suspended for fraud.",
            "This account is being suspended for number harvesting.",
            "This account is being suspended for payments fraud.",
            "This account is being suspended for unwanted content."
          ]
        },
        "productName": {
          "type": "string",
          "description": "The name of the product being abused. This is restricted to only the following values: \"Gmail\" \"Google Workspace\" \"Payments\" \"Voice\" \"YouTube\" \"Other\""
        }
      },
      "type": "object"
    },
    "Alert": {
      "description": "An alert affecting a customer.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time this alert was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "source": {
          "description": "Required. A unique identifier for the system that reported the alert. This is output only after alert is created. Supported sources are any of the following: * Google Operations * Mobile device management * Gmail phishing * Data Loss Prevention * Domain wide takeout * State sponsored attack * Google identity * Apps outage",
          "type": "string"
        },
        "type": {
          "description": "Required. The type of the alert. This is output only after alert is created. For a list of available alert types see [Google Workspace Alert types](https://developers.google.com/admin-sdk/alertcenter/reference/alert-types).",
          "type": "string"
        },
        "alertId": {
          "description": "Output only. The unique identifier for the alert.",
          "type": "string"
        },
        "endTime": {
          "description": "Optional. The time the event that caused this alert ceased being active. If provided, the end time must not be earlier than the start time. If not provided, it indicates an ongoing alert.",
          "format": "google-datetime",
          "type": "string"
        },
        "securityInvestigationToolLink": {
          "description": "Output only. An optional [Security Investigation Tool](https://support.google.com/a/answer/7575955) query for this alert.",
          "type": "string"
        },
        "data": {
          "description": "Optional. The data associated with this alert, for example google.apps.alertcenter.type.DeviceCompromised.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "etag": {
          "type": "string",
          "description": "Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform alert updates in order to avoid race conditions: An `etag` is returned in the response which contains alerts, and systems are expected to put that etag in the request to update alert to ensure that their change will be applied to the same version of the alert. If no `etag` is provided in the call to update alert, then the existing alert is overwritten blindly."
        },
        "customerId": {
          "description": "Output only. The unique identifier of the Google account of the customer.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The time this alert was last updated.",
          "format": "google-datetime"
        },
        "startTime": {
          "format": "google-datetime",
          "description": "Required. The time the event that caused this alert was started or detected.",
          "type": "string"
        },
        "deleted": {
          "description": "Output only. `True` if this alert is marked for deletion.",
          "type": "boolean"
        },
        "metadata": {
          "$ref": "AlertMetadata",
          "description": "Output only. The metadata associated with this alert."
        }
      },
      "id": "Alert"
    },
    "AppSettingsChanged": {
      "properties": {
        "alertDetails": {
          "description": "Any other associated alert details, for example, AlertConfiguration.",
          "type": "string",
          "format": "byte"
        },
        "name": {
          "description": "Rule name",
          "type": "string"
        }
      },
      "description": "Alerts from AppSettingsChanged bucket Rules configured by Admin which contain the below rules. Calendar settings changed Drive settings changed Email settings changed Mobile settings changed",
      "id": "AppSettingsChanged",
      "type": "object"
    },
    "SuspiciousActivitySecurityDetail": {
      "description": "Detailed information of a single MDM suspicious activity event.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The device resource ID."
        },
        "serialNumber": {
          "type": "string",
          "description": "The serial number of the device."
        },
        "oldValue": {
          "type": "string",
          "description": "The old value of the device property before the change."
        },
        "deviceModel": {
          "type": "string",
          "description": "The model of the device."
        },
        "deviceType": {
          "type": "string",
          "description": "The type of the device."
        },
        "deviceId": {
          "description": "Required. The device ID.",
          "type": "string"
        },
        "newValue": {
          "type": "string",
          "description": "The new value of the device property after the change."
        },
        "deviceProperty": {
          "description": "The device property which was changed.",
          "type": "string"
        },
        "iosVendorId": {
          "type": "string",
          "description": "Required for iOS, empty for others."
        }
      },
      "id": "SuspiciousActivitySecurityDetail",
      "type": "object"
    },
    "UndeleteAlertRequest": {
      "id": "UndeleteAlertRequest",
      "type": "object",
      "description": "A request to undelete a specific alert that was marked for deletion.",
      "properties": {
        "customerId": {
          "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert is associated with. Inferred from the caller identity if not provided.",
          "type": "string"
        }
      }
    },
    "AbuseDetected": {
      "type": "object",
      "id": "AbuseDetected",
      "properties": {
        "subAlertId": {
          "description": "Unique identifier of each alert that is onboarded.",
          "type": "string"
        },
        "additionalDetails": {
          "$ref": "EntityList",
          "description": "List of abusive users/entities to be displayed in a table in the alert."
        },
        "product": {
          "type": "string",
          "description": "Product that the abuse is originating from."
        },
        "alertDescriptor": {
          "description": "Displayed after Customer abuse detected - {alert_descriptor}. If missing, alert name will be displayed as Customer abuse detected.",
          "type": "string"
        },
        "nextSteps": {
          "description": "Customizable text to display in the next steps section of the alert. Will be parsed as HTML to allow new paragraphs and hyperlinks.",
          "type": "string"
        },
        "summary": {
          "description": "Customizable text to display in the summary section of the alert. Will be parsed as HTML to allow new paragraphs and hyperlinks.",
          "type": "string"
        }
      },
      "description": "A generic alert for abusive user activity occurring with a customer."
    },
    "AccountSuspensionWarning": {
      "properties": {
        "state": {
          "type": "string",
          "description": "Account suspension warning state.",
          "enum": [
            "ACCOUNT_SUSPENSION_WARNING_STATE_UNSPECIFIED",
            "WARNING",
            "SUSPENDED",
            "APPEAL_APPROVED",
            "APPEAL_SUBMITTED"
          ],
          "enumDescriptions": [
            "State is unspecified.",
            "Customer is receiving a warning about imminent suspension.",
            "Customer is being notified that their account has been suspended.",
            "Customer is being notified that their suspension appeal was approved.",
            "Customer has submitted their appeal, which is pending review."
          ]
        },
        "appealWindow": {
          "type": "string",
          "format": "google-duration",
          "description": "The amount of time remaining to appeal an imminent suspension. After this window has elapsed, the account will be suspended. Only populated if the account suspension is in WARNING state."
        },
        "suspensionDetails": {
          "description": "Details about why an account is being suspended.",
          "type": "array",
          "items": {
            "$ref": "AccountSuspensionDetails"
          }
        }
      },
      "description": "A warning that the customer's account is about to be suspended.",
      "type": "object",
      "id": "AccountSuspensionWarning"
    },
    "DlpRuleViolation": {
      "description": "Alerts that get triggered on violations of Data Loss Prevention (DLP) rules.",
      "id": "DlpRuleViolation",
      "properties": {
        "ruleViolationInfo": {
          "$ref": "RuleViolationInfo",
          "description": "Details about the violated DLP rule. Admins can use the predefined detectors provided by Google Cloud DLP https://cloud.google.com/dlp/ when setting up a DLP rule. Matched Cloud DLP detectors in this violation if any will be captured in the MatchInfo.predefined_detector."
        }
      },
      "type": "object"
    }
  },
  "description": "Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. ",
  "name": "alertcenter",
  "servicePath": "",
  "resources": {
    "alerts": {
      "methods": {
        "getMetadata": {
          "flatPath": "v1beta1/alerts/{alertId}/metadata",
          "parameterOrder": [
            "alertId"
          ],
          "httpMethod": "GET",
          "parameters": {
            "alertId": {
              "type": "string",
              "required": true,
              "description": "Required. The identifier of the alert this metadata belongs to.",
              "location": "path"
            },
            "customerId": {
              "type": "string",
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert metadata is associated with. Inferred from the caller identity if not provided.",
              "location": "query"
            }
          },
          "id": "alertcenter.alerts.getMetadata",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "response": {
            "$ref": "AlertMetadata"
          },
          "path": "v1beta1/alerts/{alertId}/metadata",
          "description": "Returns the metadata of an alert. Attempting to get metadata for a non-existent alert returns `NOT_FOUND` error."
        },
        "list": {
          "path": "v1beta1/alerts",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "parameterOrder": [],
          "response": {
            "$ref": "ListAlertsResponse"
          },
          "description": "Lists the alerts.",
          "id": "alertcenter.alerts.list",
          "parameters": {
            "orderBy": {
              "description": "Optional. The sort order of the list results. If not specified results may be returned in arbitrary order. You can sort the results in descending order based on the creation timestamp using `order_by=\"create_time desc\"`. Currently, supported sorting are `create_time asc`, `create_time desc`, `update_time desc`",
              "type": "string",
              "location": "query"
            },
            "pageToken": {
              "description": "Optional. A token identifying a page of results the server should return. If empty, a new iteration is started. To continue an iteration, pass in the value from the previous ListAlertsResponse's next_page_token field.",
              "location": "query",
              "type": "string"
            },
            "filter": {
              "description": "Optional. A query string for filtering alert results. For more details, see [Query filters](https://developers.google.com/admin-sdk/alertcenter/guides/query-filters) and [Supported query filter fields](https://developers.google.com/admin-sdk/alertcenter/reference/filter-fields#alerts.list).",
              "type": "string",
              "location": "query"
            },
            "pageSize": {
              "format": "int32",
              "location": "query",
              "type": "integer",
              "description": "Optional. The requested page size. Server may return fewer items than requested. If unspecified, server picks an appropriate default."
            },
            "customerId": {
              "location": "query",
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alerts are associated with. Inferred from the caller identity if not provided.",
              "type": "string"
            }
          },
          "flatPath": "v1beta1/alerts"
        },
        "batchDelete": {
          "description": "Performs batch delete operation on alerts.",
          "flatPath": "v1beta1/alerts:batchDelete",
          "httpMethod": "POST",
          "response": {
            "$ref": "BatchDeleteAlertsResponse"
          },
          "parameters": {},
          "id": "alertcenter.alerts.batchDelete",
          "request": {
            "$ref": "BatchDeleteAlertsRequest"
          },
          "parameterOrder": [],
          "path": "v1beta1/alerts:batchDelete",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ]
        },
        "undelete": {
          "id": "alertcenter.alerts.undelete",
          "request": {
            "$ref": "UndeleteAlertRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "response": {
            "$ref": "Alert"
          },
          "flatPath": "v1beta1/alerts/{alertId}:undelete",
          "httpMethod": "POST",
          "parameters": {
            "alertId": {
              "description": "Required. The identifier of the alert to undelete.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "description": "Restores, or \"undeletes\", an alert that was marked for deletion within the past 30 days. Attempting to undelete an alert which was marked for deletion over 30 days ago (which has been removed from the Alert Center database) or a nonexistent alert returns a `NOT_FOUND` error. Attempting to undelete an alert which has not been marked for deletion has no effect.",
          "parameterOrder": [
            "alertId"
          ],
          "path": "v1beta1/alerts/{alertId}:undelete"
        },
        "batchUndelete": {
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "path": "v1beta1/alerts:batchUndelete",
          "parameters": {},
          "parameterOrder": [],
          "response": {
            "$ref": "BatchUndeleteAlertsResponse"
          },
          "request": {
            "$ref": "BatchUndeleteAlertsRequest"
          },
          "description": "Performs batch undelete operation on alerts.",
          "flatPath": "v1beta1/alerts:batchUndelete",
          "id": "alertcenter.alerts.batchUndelete"
        },
        "get": {
          "httpMethod": "GET",
          "flatPath": "v1beta1/alerts/{alertId}",
          "id": "alertcenter.alerts.get",
          "parameters": {
            "alertId": {
              "description": "Required. The identifier of the alert to retrieve.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "customerId": {
              "type": "string",
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert is associated with. Inferred from the caller identity if not provided.",
              "location": "query"
            }
          },
          "description": "Gets the specified alert. Attempting to get a nonexistent alert returns `NOT_FOUND` error.",
          "parameterOrder": [
            "alertId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "response": {
            "$ref": "Alert"
          },
          "path": "v1beta1/alerts/{alertId}"
        },
        "delete": {
          "description": "Marks the specified alert for deletion. An alert that has been marked for deletion is removed from Alert Center after 30 days. Marking an alert for deletion has no effect on an alert which has already been marked for deletion. Attempting to mark a nonexistent alert for deletion results in a `NOT_FOUND` error.",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "id": "alertcenter.alerts.delete",
          "flatPath": "v1beta1/alerts/{alertId}",
          "response": {
            "$ref": "Empty"
          },
          "httpMethod": "DELETE",
          "path": "v1beta1/alerts/{alertId}",
          "parameterOrder": [
            "alertId"
          ],
          "parameters": {
            "customerId": {
              "type": "string",
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert is associated with. Inferred from the caller identity if not provided.",
              "location": "query"
            },
            "alertId": {
              "description": "Required. The identifier of the alert to delete.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          }
        }
      },
      "resources": {
        "feedback": {
          "methods": {
            "list": {
              "flatPath": "v1beta1/alerts/{alertId}/feedback",
              "parameters": {
                "alertId": {
                  "description": "Required. The alert identifier. The \"-\" wildcard could be used to represent all alerts.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "customerId": {
                  "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert feedback are associated with. Inferred from the caller identity if not provided.",
                  "type": "string",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. A query string for filtering alert feedback results. For more details, see [Query filters](https://developers.google.com/admin-sdk/alertcenter/guides/query-filters) and [Supported query filter fields](https://developers.google.com/admin-sdk/alertcenter/reference/filter-fields#alerts.feedback.list)."
                }
              },
              "response": {
                "$ref": "ListAlertFeedbackResponse"
              },
              "path": "v1beta1/alerts/{alertId}/feedback",
              "scopes": [
                "https://www.googleapis.com/auth/apps.alerts"
              ],
              "parameterOrder": [
                "alertId"
              ],
              "description": "Lists all the feedback for an alert. Attempting to list feedbacks for a non-existent alert returns `NOT_FOUND` error.",
              "httpMethod": "GET",
              "id": "alertcenter.alerts.feedback.list"
            },
            "create": {
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/apps.alerts"
              ],
              "path": "v1beta1/alerts/{alertId}/feedback",
              "request": {
                "$ref": "AlertFeedback"
              },
              "parameterOrder": [
                "alertId"
              ],
              "response": {
                "$ref": "AlertFeedback"
              },
              "id": "alertcenter.alerts.feedback.create",
              "flatPath": "v1beta1/alerts/{alertId}/feedback",
              "description": "Creates new feedback for an alert. Attempting to create a feedback for a non-existent alert returns `NOT_FOUND` error. Attempting to create a feedback for an alert that is marked for deletion returns `FAILED_PRECONDITION' error.",
              "parameters": {
                "customerId": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert is associated with. Inferred from the caller identity if not provided."
                },
                "alertId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The identifier of the alert this feedback belongs to."
                }
              }
            }
          }
        }
      }
    },
    "v1beta1": {
      "methods": {
        "updateSettings": {
          "flatPath": "v1beta1/settings",
          "description": "Updates the customer-level settings.",
          "request": {
            "$ref": "Settings"
          },
          "parameters": {
            "customerId": {
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert settings are associated with. Inferred from the caller identity if not provided.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "v1beta1/settings",
          "id": "alertcenter.updateSettings",
          "httpMethod": "PATCH",
          "parameterOrder": [],
          "response": {
            "$ref": "Settings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ]
        },
        "getSettings": {
          "flatPath": "v1beta1/settings",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "parameterOrder": [],
          "httpMethod": "GET",
          "description": "Returns customer-level settings.",
          "id": "alertcenter.getSettings",
          "path": "v1beta1/settings",
          "response": {
            "$ref": "Settings"
          },
          "parameters": {
            "customerId": {
              "type": "string",
              "location": "query",
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert settings are associated with. Inferred from the caller identity if not provided."
            }
          }
        }
      }
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/apps.alerts": {
          "description": "See and delete your domain's G Suite alerts, and send alert feedback"
        }
      }
    }
  },
  "parameters": {
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    }
  },
  "fullyEncodeReservedExpansion": true,
  "basePath": "",
  "ownerName": "Google",
  "revision": "20221212"
}

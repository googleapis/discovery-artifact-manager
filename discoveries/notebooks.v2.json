{
  "discoveryVersion": "v1",
  "fullyEncodeReservedExpansion": true,
  "ownerDomain": "google.com",
  "canonicalName": "AI Platform Notebooks",
  "version_module": true,
  "revision": "20230710",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "title": "Notebooks API",
  "parameters": {
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "location": "query",
      "description": "V1 error format."
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query"
    }
  },
  "mtlsRootUrl": "https://notebooks.mtls.googleapis.com/",
  "schemas": {
    "Empty": {
      "id": "Empty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object"
    },
    "Status": {
      "id": "Status",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object"
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "id": "Expr",
      "properties": {
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "description": "Request message for `SetIamPolicy` method.",
      "id": "SetIamPolicyRequest",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      },
      "type": "object"
    },
    "CancelOperationRequest": {
      "type": "object",
      "description": "The request message for Operations.CancelOperation.",
      "id": "CancelOperationRequest",
      "properties": {}
    },
    "StopInstanceRequest": {
      "id": "StopInstanceRequest",
      "properties": {},
      "description": "Request for stopping a notebook instance",
      "type": "object"
    },
    "StartInstanceRequest": {
      "properties": {},
      "description": "Request for starting a notebook instance",
      "type": "object",
      "id": "StartInstanceRequest"
    },
    "Binding": {
      "description": "Associates `members`, or principals, with a `role`.",
      "id": "Binding",
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding."
        }
      }
    },
    "CheckInstanceUpgradabilityResponse": {
      "description": "Response for checking if a notebook instance is upgradeable.",
      "id": "CheckInstanceUpgradabilityResponse",
      "properties": {
        "upgradeable": {
          "type": "boolean",
          "description": "If an instance is upgradeable."
        },
        "upgradeVersion": {
          "description": "The version this instance will be upgraded to if calling the upgrade endpoint. This field will only be populated if field upgradeable is true.",
          "type": "string"
        },
        "upgradeImage": {
          "type": "string",
          "description": "The new image self link this instance will be upgraded to if calling the upgrade endpoint. This field will only be populated if field upgradeable is true."
        },
        "upgradeInfo": {
          "description": "Additional information about upgrade.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResetInstanceRequest": {
      "description": "Request for resetting a notebook instance",
      "properties": {},
      "type": "object",
      "id": "ResetInstanceRequest"
    },
    "ReportInstanceInfoSystemRequest": {
      "type": "object",
      "description": "Request for notebook instances to report information to Notebooks API.",
      "id": "ReportInstanceInfoSystemRequest",
      "properties": {
        "vmId": {
          "type": "string",
          "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity"
        },
        "event": {
          "$ref": "Event",
          "description": "Required. The Event to be reported."
        }
      }
    },
    "TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "id": "TestIamPermissionsRequest",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array"
        }
      }
    },
    "Location": {
      "id": "Location",
      "properties": {
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      },
      "description": "A resource that represents a Google Cloud location.",
      "type": "object"
    },
    "RollbackInstanceRequest": {
      "properties": {
        "targetSnapshot": {
          "description": "Required. The snapshot for rollback. Example: \"projects/test-project/global/snapshots/krwlzipynril\".",
          "type": "string"
        },
        "revisionId": {
          "readOnly": true,
          "description": "Required. Output only. Revision Id",
          "type": "string"
        }
      },
      "id": "RollbackInstanceRequest",
      "type": "object",
      "description": "Request for rollbacking a notebook instance"
    },
    "UpgradeInstanceSystemRequest": {
      "properties": {
        "vmId": {
          "type": "string",
          "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity"
        }
      },
      "description": "Request for upgrading a notebook instance from within the VM",
      "type": "object",
      "id": "UpgradeInstanceSystemRequest"
    },
    "ListInstancesResponse": {
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached. For example, ['us-west1-a', 'us-central1-b']. A ListInstancesResponse will only contain either instances or unreachables,",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Page token that can be used to continue listing from the last result in the next list call."
        },
        "instances": {
          "description": "A list of returned instances.",
          "type": "array",
          "items": {
            "$ref": "Instance"
          }
        }
      },
      "description": "Response for listing notebook instances.",
      "id": "ListInstancesResponse",
      "type": "object"
    },
    "OperationMetadata": {
      "properties": {
        "requestedCancellation": {
          "description": "Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "statusMessage": {
          "description": "Human-readable status of the operation, if any.",
          "type": "string"
        },
        "target": {
          "description": "Server-defined resource path for the target of the operation.",
          "type": "string"
        },
        "endTime": {
          "description": "The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "endpoint": {
          "description": "API endpoint name of this operation.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation was created."
        },
        "apiVersion": {
          "type": "string",
          "description": "API version used to start the operation."
        },
        "verb": {
          "description": "Name of the verb executed by the operation.",
          "type": "string"
        }
      },
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object"
    },
    "ContainerImage": {
      "id": "ContainerImage",
      "type": "object",
      "properties": {
        "repository": {
          "type": "string",
          "description": "Required. The path to the container image repository. For example: `gcr.io/{project_id}/{image_name}`"
        },
        "tag": {
          "description": "Optional. The tag of the container image. If not specified, this defaults to the latest tag.",
          "type": "string"
        }
      },
      "description": "Definition of a container image for starting a notebook instance with the environment installed in a container."
    },
    "ShieldedInstanceConfig": {
      "id": "ShieldedInstanceConfig",
      "properties": {
        "enableIntegrityMonitoring": {
          "description": "Optional. Defines whether the VM instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the VM instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the VM instance is created. Enabled by default.",
          "type": "boolean"
        },
        "enableSecureBoot": {
          "description": "Optional. Defines whether the VM instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default.",
          "type": "boolean"
        },
        "enableVtpm": {
          "description": "Optional. Defines whether the VM instance has the vTPM enabled. Enabled by default.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "A set of Shielded Instance options. See [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm). Not all combinations are valid."
    },
    "DiagnoseInstanceRequest": {
      "id": "DiagnoseInstanceRequest",
      "type": "object",
      "properties": {
        "diagnosticConfig": {
          "$ref": "DiagnosticConfig",
          "description": "Required. Defines flags that are used to run the diagnostic tool"
        }
      },
      "description": "Request for creating a notebook instance diagnostic file."
    },
    "VmImage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Optional. Use VM image name to find the image."
        },
        "family": {
          "type": "string",
          "description": "Optional. Use this VM image family to find the image; the newest image in this family will be used."
        },
        "project": {
          "type": "string",
          "description": "Required. The name of the Google Cloud project that this VM image belongs to. Format: `{project_id}`"
        }
      },
      "description": "Definition of a custom Compute Engine virtual machine image for starting a notebook instance with the environment installed directly on the VM.",
      "id": "VmImage"
    },
    "BootDisk": {
      "id": "BootDisk",
      "properties": {
        "diskSizeGb": {
          "format": "int64",
          "description": "Optional. The size of the boot disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). If not specified, this defaults to the recommended value of 150GB.",
          "type": "string"
        },
        "kmsKey": {
          "type": "string",
          "description": "Optional. Input only. The KMS key used to encrypt the disks, only applicable if disk_encryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}` Learn more about using your own encryption keys."
        },
        "diskEncryption": {
          "enum": [
            "DISK_ENCRYPTION_UNSPECIFIED",
            "GMEK",
            "CMEK"
          ],
          "description": "Optional. Input only. Disk encryption method used on the boot and data disks, defaults to GMEK.",
          "type": "string",
          "enumDescriptions": [
            "Disk encryption is not specified.",
            "Use Google managed encryption keys to encrypt the boot disk.",
            "Use customer managed encryption keys to encrypt the boot disk."
          ]
        },
        "diskType": {
          "enum": [
            "DISK_TYPE_UNSPECIFIED",
            "PD_STANDARD",
            "PD_SSD",
            "PD_BALANCED",
            "PD_EXTREME"
          ],
          "enumDescriptions": [
            "Disk type not set.",
            "Standard persistent disk type.",
            "SSD persistent disk type.",
            "Balanced persistent disk type.",
            "Extreme persistent disk type."
          ],
          "description": "Optional. Indicates the type of the disk.",
          "type": "string"
        }
      },
      "description": "The definition of a boot disk.",
      "type": "object"
    },
    "UpgradeHistoryEntry": {
      "description": "The entry of VM image upgrade history.",
      "properties": {
        "state": {
          "enumDescriptions": [
            "State is not specified.",
            "The instance upgrade is started.",
            "The instance upgrade is succeeded.",
            "The instance upgrade is failed."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTED",
            "SUCCEEDED",
            "FAILED"
          ],
          "description": "Output only. The state of this instance upgrade history entry."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Immutable. The time that this instance upgrade history entry is created.",
          "type": "string"
        },
        "targetVersion": {
          "description": "Optional. Target VM Version, like m63.",
          "type": "string"
        },
        "framework": {
          "type": "string",
          "description": "Optional. The framework of this notebook instance."
        },
        "action": {
          "type": "string",
          "enumDescriptions": [
            "Operation is not specified.",
            "Upgrade.",
            "Rollback."
          ],
          "enum": [
            "ACTION_UNSPECIFIED",
            "UPGRADE",
            "ROLLBACK"
          ],
          "description": "Optional. Action. Rolloback or Upgrade."
        },
        "snapshot": {
          "type": "string",
          "description": "Optional. The snapshot of the boot disk of this notebook instance before upgrade."
        },
        "vmImage": {
          "type": "string",
          "description": "Optional. The VM image before this instance upgrade."
        },
        "version": {
          "type": "string",
          "description": "Optional. The version of the notebook instance before this upgrade."
        },
        "containerImage": {
          "description": "Optional. The container image before this instance upgrade.",
          "type": "string"
        }
      },
      "id": "UpgradeHistoryEntry",
      "type": "object"
    },
    "AcceleratorConfig": {
      "type": "object",
      "description": "An accelerator configuration for a VM instance Definition of a hardware accelerator. Note that there is no check on `type` and `core_count` combinations. TPUs are not supported. See [GPUs on Compute Engine](https://cloud.google.com/compute/docs/gpus/#gpus-list) to find a valid combination.",
      "id": "AcceleratorConfig",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Accelerator type is not specified.",
            "Accelerator type is Nvidia Tesla P100.",
            "Accelerator type is Nvidia Tesla V100.",
            "Accelerator type is Nvidia Tesla P4.",
            "Accelerator type is Nvidia Tesla T4.",
            "Accelerator type is Nvidia Tesla A100 - 40GB.",
            "Accelerator type is Nvidia Tesla A100 - 80GB.",
            "Accelerator type is Nvidia Tesla L4.",
            "Accelerator type is NVIDIA Tesla T4 Virtual Workstations.",
            "Accelerator type is NVIDIA Tesla P100 Virtual Workstations.",
            "Accelerator type is NVIDIA Tesla P4 Virtual Workstations."
          ],
          "enum": [
            "ACCELERATOR_TYPE_UNSPECIFIED",
            "NVIDIA_TESLA_P100",
            "NVIDIA_TESLA_V100",
            "NVIDIA_TESLA_P4",
            "NVIDIA_TESLA_T4",
            "NVIDIA_TESLA_A100",
            "NVIDIA_A100_80GB",
            "NVIDIA_L4",
            "NVIDIA_TESLA_T4_VWS",
            "NVIDIA_TESLA_P100_VWS",
            "NVIDIA_TESLA_P4_VWS"
          ],
          "description": "Optional. Type of this accelerator.",
          "type": "string"
        },
        "coreCount": {
          "format": "int64",
          "type": "string",
          "description": "Optional. Count of cores of this accelerator."
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "type": "object"
    },
    "GceSetup": {
      "type": "object",
      "id": "GceSetup",
      "description": "The definition of how to configure a VM instance outside of Resources and Identity.",
      "properties": {
        "disablePublicIp": {
          "type": "boolean",
          "description": "Optional. If true, no external IP will be assigned to this VM instance."
        },
        "tags": {
          "description": "Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "acceleratorConfigs": {
          "items": {
            "$ref": "AcceleratorConfig"
          },
          "description": "Optional. The hardware accelerators used on this instance. If you use accelerators, make sure that your configuration has [enough vCPUs and memory to support the `machine_type` you have selected](https://cloud.google.com/compute/docs/gpus/#gpus-list). Currently supports only one accelerator configuration.",
          "type": "array"
        },
        "machineType": {
          "description": "Optional. The machine type of the VM instance. https://cloud.google.com/compute/docs/machine-resource",
          "type": "string"
        },
        "dataDisks": {
          "type": "array",
          "description": "Optional. Data disks attached to the VM instance. Currently supports only one data disk.",
          "items": {
            "$ref": "DataDisk"
          }
        },
        "gpuDriverConfig": {
          "description": "Optional. Configuration for GPU drivers.",
          "$ref": "GPUDriverConfig"
        },
        "enableIpForwarding": {
          "description": "Optional. Flag to enable ip forwarding or not, default false/off. https://cloud.google.com/vpc/docs/using-routes#canipforward",
          "type": "boolean"
        },
        "containerImage": {
          "$ref": "ContainerImage",
          "description": "Optional. Use a container image to start the notebook instance."
        },
        "serviceAccounts": {
          "description": "Optional. The service account that serves as an identity for the VM instance. Currently supports only one service account.",
          "items": {
            "$ref": "ServiceAccount"
          },
          "type": "array"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Custom metadata to apply to this instance.",
          "type": "object"
        },
        "bootDisk": {
          "$ref": "BootDisk",
          "description": "Optional. The boot disk for the VM."
        },
        "shieldedInstanceConfig": {
          "description": "Optional. Shielded VM configuration. [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).",
          "$ref": "ShieldedInstanceConfig"
        },
        "vmImage": {
          "description": "Optional. Use a Compute Engine VM image to start the notebook instance.",
          "$ref": "VmImage"
        },
        "networkInterfaces": {
          "type": "array",
          "description": "Optional. The network interfaces for the VM. Supports only one interface.",
          "items": {
            "$ref": "NetworkInterface"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Response message for `TestIamPermissions` method."
    },
    "NetworkInterface": {
      "id": "NetworkInterface",
      "properties": {
        "nicType": {
          "description": "Optional. The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.",
          "enumDescriptions": [
            "No type specified.",
            "VIRTIO",
            "GVNIC"
          ],
          "enum": [
            "NIC_TYPE_UNSPECIFIED",
            "VIRTIO_NET",
            "GVNIC"
          ],
          "type": "string"
        },
        "subnet": {
          "type": "string",
          "description": "Optional. The name of the subnet that this VM instance is in. Format: `projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}`"
        },
        "network": {
          "description": "Optional. The name of the VPC that this VM instance is in. Format: `projects/{project_id}/global/networks/{network_id}`",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The definition of a network interface resource attached to a VM."
    },
    "UpgradeInstanceRequest": {
      "type": "object",
      "description": "Request for upgrading a notebook instance",
      "properties": {},
      "id": "UpgradeInstanceRequest"
    },
    "DiagnosticConfig": {
      "type": "object",
      "id": "DiagnosticConfig",
      "properties": {
        "enableCopyHomeFilesFlag": {
          "description": "Optional. Enables flag to copy all `/home/jupyter` folder contents",
          "type": "boolean"
        },
        "enableRepairFlag": {
          "type": "boolean",
          "description": "Optional. Enables flag to repair service for instance"
        },
        "relativePath": {
          "description": "Optional. Defines the relative storage path in the Cloud Storage bucket where the diagnostic logs will be written: Default path will be the root directory of the Cloud Storage bucket (`gs://$GCS_BUCKET/$DATE_$TIME.tar.gz`) Example of full path where Log file will be written: `gs://$GCS_BUCKET/$RELATIVE_PATH/`",
          "type": "string"
        },
        "enablePacketCaptureFlag": {
          "description": "Optional. Enables flag to capture packets from the instance for 30 seconds",
          "type": "boolean"
        },
        "gcsBucket": {
          "description": "Required. User Cloud Storage bucket location (REQUIRED). Must be formatted with path prefix (`gs://$GCS_BUCKET`). Permissions: User Managed Notebooks: - storage.buckets.writer: Must be given to the project's service account attached to VM. Google Managed Notebooks: - storage.buckets.writer: Must be given to the project's service account or user credentials attached to VM depending on authentication mode. Cloud Storage bucket Log file will be written to `gs://$GCS_BUCKET/$RELATIVE_PATH/$VM_DATE_$TIME.tar.gz`",
          "type": "string"
        }
      },
      "description": "Defines flags that are used to run the diagnostic tool"
    },
    "GPUDriverConfig": {
      "id": "GPUDriverConfig",
      "type": "object",
      "description": "A GPU driver configuration",
      "properties": {
        "customGpuDriverPath": {
          "type": "string",
          "description": "Optional. Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers."
        },
        "enableGpuDriver": {
          "type": "boolean",
          "description": "Optional. Whether the end user authorizes Google Cloud to install GPU driver on this VM instance. If this field is empty or set to false, the GPU driver won't be installed. Only applicable to instances with GPUs."
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "details": {
          "description": "Optional. Event details. This field is used to pass event information.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "description": "Optional. Event type.",
          "type": "string",
          "enumDescriptions": [
            "Event is not specified.",
            "The instance / runtime is idle",
            "The instance / runtime is available. This event indicates that instance / runtime underlying compute is operational.",
            "The instance / runtime health is available. This event indicates that instance / runtime health information.",
            "The instance / runtime is available. This event allows instance / runtime to send Host maintenance information to Control Plane. https://cloud.google.com/compute/docs/gpus/gpu-host-maintenance",
            "The instance / runtime is available. This event indicates that the instance had metadata that needs to be modified."
          ],
          "enum": [
            "EVENT_TYPE_UNSPECIFIED",
            "IDLE",
            "HEARTBEAT",
            "HEALTH",
            "MAINTENANCE",
            "METADATA_CHANGE"
          ]
        },
        "reportTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Optional. Event report time."
        }
      },
      "id": "Event",
      "description": "The definition of an Event for a managed / semi-managed notebook instance."
    },
    "Operation": {
      "id": "Operation",
      "properties": {
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "ServiceAccount": {
      "description": "A service account that acts as an identity.",
      "id": "ServiceAccount",
      "properties": {
        "scopes": {
          "readOnly": true,
          "description": "Output only. The list of scopes to be made available for this service account. Set by the CLH to https://www.googleapis.com/auth/cloud-platform",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "email": {
          "type": "string",
          "description": "Optional. Email address of the service account."
        }
      },
      "type": "object"
    },
    "Instance": {
      "description": "The definition of a notebook instance.",
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. The name of this notebook instance. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
          "type": "string"
        },
        "healthState": {
          "readOnly": true,
          "enum": [
            "HEALTH_STATE_UNSPECIFIED",
            "HEALTHY",
            "UNHEALTHY",
            "AGENT_NOT_INSTALLED",
            "AGENT_NOT_RUNNING"
          ],
          "type": "string",
          "description": "Output only. Instance health_state.",
          "enumDescriptions": [
            "The instance substate is unknown.",
            "The instance is known to be in an healthy state (for example, critical daemons are running) Applies to ACTIVE state.",
            "The instance is known to be in an unhealthy state (for example, critical daemons are not running) Applies to ACTIVE state.",
            "The instance has not installed health monitoring agent. Applies to ACTIVE state.",
            "The instance health monitoring agent is not running. Applies to ACTIVE state."
          ]
        },
        "gceSetup": {
          "$ref": "GceSetup",
          "description": "Optional. Compute Engine setup for the notebook. Uses notebook-defined fields."
        },
        "disableProxyAccess": {
          "description": "Optional. If true, the notebook instance will not register with the proxy.",
          "type": "boolean"
        },
        "labels": {
          "description": "Optional. Labels to apply to this instance. These can be later modified by the UpdateInstance method.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "healthInfo": {
          "description": "Output only. Additional information about instance health. Example: healthInfo\": { \"docker_proxy_agent_status\": \"1\", \"docker_status\": \"1\", \"jupyterlab_api_status\": \"-1\", \"jupyterlab_status\": \"-1\", \"updated\": \"2020-10-18 09:40:03.573409\" }",
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "upgradeHistory": {
          "type": "array",
          "description": "Output only. The upgrade history of this instance.",
          "items": {
            "$ref": "UpgradeHistoryEntry"
          },
          "readOnly": true
        },
        "proxyUri": {
          "description": "Output only. The proxy endpoint that is used to access the Jupyter notebook.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "State is not specified.",
            "The control logic is starting the instance.",
            "The control logic is installing required frameworks and registering the instance with notebook proxy",
            "The instance is running.",
            "The control logic is stopping the instance.",
            "The instance is stopped.",
            "The instance is deleted.",
            "The instance is upgrading.",
            "The instance is being created.",
            "The instance is suspending.",
            "The instance is suspended."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTING",
            "PROVISIONING",
            "ACTIVE",
            "STOPPING",
            "STOPPED",
            "DELETED",
            "UPGRADING",
            "INITIALIZING",
            "SUSPENDING",
            "SUSPENDED"
          ],
          "type": "string",
          "description": "Output only. The state of this instance.",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Instance creation time."
        },
        "updateTime": {
          "description": "Output only. Instance update time.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "creator": {
          "description": "Output only. Email address of entity that sent original CreateInstance request.",
          "type": "string",
          "readOnly": true
        },
        "instanceOwners": {
          "description": "Optional. Input only. The owner of this instance after creation. Format: `alias@example.com` Currently supports one owner only. If not specified, all of the service account users of your VM instance's service account can use the instance.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "readOnly": true,
          "description": "Output only. Unique ID of the resource.",
          "type": "string"
        }
      },
      "id": "Instance",
      "type": "object"
    },
    "Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "id": "Policy",
      "properties": {
        "version": {
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer"
        },
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "type": "array",
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        },
        "etag": {
          "type": "string",
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        }
      }
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "type": "object",
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "description": "The response message for Operations.ListOperations."
    },
    "DataDisk": {
      "type": "object",
      "id": "DataDisk",
      "properties": {
        "diskEncryption": {
          "type": "string",
          "description": "Optional. Input only. Disk encryption method used on the boot and data disks, defaults to GMEK.",
          "enumDescriptions": [
            "Disk encryption is not specified.",
            "Use Google managed encryption keys to encrypt the boot disk.",
            "Use customer managed encryption keys to encrypt the boot disk."
          ],
          "enum": [
            "DISK_ENCRYPTION_UNSPECIFIED",
            "GMEK",
            "CMEK"
          ]
        },
        "diskSizeGb": {
          "description": "Optional. The size of the disk in GB attached to this VM instance, up to a maximum of 64000 GB (64 TB). If not specified, this defaults to 100.",
          "type": "string",
          "format": "int64"
        },
        "diskType": {
          "enumDescriptions": [
            "Disk type not set.",
            "Standard persistent disk type.",
            "SSD persistent disk type.",
            "Balanced persistent disk type.",
            "Extreme persistent disk type."
          ],
          "description": "Optional. Input only. Indicates the type of the disk.",
          "type": "string",
          "enum": [
            "DISK_TYPE_UNSPECIFIED",
            "PD_STANDARD",
            "PD_SSD",
            "PD_BALANCED",
            "PD_EXTREME"
          ]
        },
        "kmsKey": {
          "type": "string",
          "description": "Optional. Input only. The KMS key used to encrypt the disks, only applicable if disk_encryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}` Learn more about using your own encryption keys."
        }
      },
      "description": "An instance-attached disk resource."
    }
  },
  "name": "notebooks",
  "servicePath": "",
  "rootUrl": "https://notebooks.googleapis.com/",
  "batchPath": "batch",
  "documentationLink": "https://cloud.google.com/notebooks/docs/",
  "description": "Notebooks API is used to manage notebook resources in Google Cloud.",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "notebooks.projects.locations.operations.list",
                  "path": "v2/{+name}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The name of the operation's parent resource.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list page token."
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "The standard list page size.",
                      "format": "int32"
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations"
                },
                "cancel": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path"
                    }
                  },
                  "path": "v2/{+name}:cancel",
                  "id": "notebooks.projects.locations.operations.cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "notebooks.projects.locations.operations.get",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET"
                },
                "delete": {
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "notebooks.projects.locations.operations.delete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "instances": {
              "methods": {
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. Idempotent request UUID.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "id": "notebooks.projects.locations.instances.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a single Instance."
                },
                "testIamPermissions": {
                  "id": "notebooks.projects.locations.instances.testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "path": "v2/{+resource}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST"
                },
                "reportInfoSystem": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Allows notebook instances to report their latest instance information to the Notebooks API server. The server will merge the reported information to the instance metadata store. Do not use this method directly.",
                  "id": "notebooks.projects.locations.instances.reportInfoSystem",
                  "path": "v2/{+name}:reportInfoSystem",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "ReportInstanceInfoSystemRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reportInfoSystem",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "upgradeSystem": {
                  "id": "notebooks.projects.locations.instances.upgradeSystem",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:upgradeSystem",
                  "request": {
                    "$ref": "UpgradeInstanceSystemRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:upgradeSystem",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "description": "Allows notebook instances to upgrade themselves. Do not use this method directly."
                },
                "upgrade": {
                  "path": "v2/{+name}:upgrade",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "notebooks.projects.locations.instances.upgrade",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:upgrade",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Upgrades a notebook instance to the latest version.",
                  "request": {
                    "$ref": "UpgradeInstanceRequest"
                  }
                },
                "rollback": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "id": "notebooks.projects.locations.instances.rollback",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Rollbacks a notebook instance to the previous version.",
                  "request": {
                    "$ref": "RollbackInstanceRequest"
                  },
                  "path": "v2/{+name}:rollback",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rollback"
                },
                "get": {
                  "response": {
                    "$ref": "Instance"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "notebooks.projects.locations.instances.get",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Gets details of a single Instance.",
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}"
                },
                "checkUpgradability": {
                  "response": {
                    "$ref": "CheckInstanceUpgradabilityResponse"
                  },
                  "id": "notebooks.projects.locations.instances.checkUpgradability",
                  "description": "Checks whether a notebook instance is upgradable.",
                  "path": "v2/{+notebookInstance}:checkUpgradability",
                  "parameterOrder": [
                    "notebookInstance"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:checkUpgradability",
                  "parameters": {
                    "notebookInstance": {
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "create": {
                  "id": "notebooks.projects.locations.instances.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "path": "v2/{+parent}/instances",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "instanceId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. User-defined unique ID of this instance."
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. Idempotent request UUID.",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "Instance"
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a new Instance in a given project and location."
                },
                "getIamPolicy": {
                  "path": "v2/{+resource}:getIamPolicy",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "id": "notebooks.projects.locations.instances.getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path"
                    },
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "diagnose": {
                  "httpMethod": "POST",
                  "path": "v2/{+name}:diagnose",
                  "request": {
                    "$ref": "DiagnoseInstanceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:diagnose",
                  "id": "notebooks.projects.locations.instances.diagnose",
                  "description": "Creates a Diagnostic File and runs Diagnostic Tool given an Instance.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A previous returned page token that can be used to continue listing from the last result."
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. Maximum return size of the list call.",
                      "format": "int32"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "required": true
                    }
                  },
                  "id": "notebooks.projects.locations.instances.list",
                  "description": "Lists instances in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/instances",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances"
                },
                "setIamPolicy": {
                  "path": "v2/{+resource}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:setIamPolicy",
                  "id": "notebooks.projects.locations.instances.setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  }
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "UpdateInstance updates an Instance.",
                  "id": "notebooks.projects.locations.instances.patch",
                  "parameters": {
                    "name": {
                      "description": "Output only. The name of this notebook instance. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "Required. Mask used to update an instance"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. Idempotent request UUID.",
                      "location": "query"
                    }
                  },
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "request": {
                    "$ref": "Instance"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "reset": {
                  "path": "v2/{+name}:reset",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "parameters": {
                    "name": {
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "description": "Resets a notebook instance.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "notebooks.projects.locations.instances.reset",
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST"
                },
                "stop": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "id": "notebooks.projects.locations.instances.stop",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:stop",
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "description": "Stops a notebook instance."
                },
                "start": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts a notebook instance.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}:start",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "id": "notebooks.projects.locations.instances.start",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start"
                }
              }
            }
          },
          "methods": {
            "list": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "description": "Lists information about the supported locations for this service.",
              "flatPath": "v2/projects/{projectsId}/locations",
              "id": "notebooks.projects.locations.list",
              "parameters": {
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "filter": {
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query"
                },
                "name": {
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              },
              "path": "v2/{+name}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              }
            },
            "get": {
              "description": "Gets information about a location.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true
                }
              },
              "id": "notebooks.projects.locations.get",
              "parameterOrder": [
                "name"
              ],
              "path": "v2/{+name}",
              "response": {
                "$ref": "Location"
              }
            }
          }
        }
      }
    }
  },
  "version": "v2",
  "kind": "discovery#restDescription",
  "protocol": "rest",
  "baseUrl": "https://notebooks.googleapis.com/",
  "id": "notebooks:v2",
  "ownerName": "Google",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "basePath": ""
}

{
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "kind": "discovery#restDescription",
  "basePath": "",
  "version_module": true,
  "schemas": {
    "GcsObject": {
      "id": "GcsObject",
      "properties": {
        "bucket": {
          "description": "Required. Bucket of the Google Cloud Storage object.",
          "type": "string"
        },
        "generationNumber": {
          "format": "int64",
          "description": "Required. Generation number of the Google Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.",
          "type": "string"
        },
        "object": {
          "type": "string",
          "description": "Required. Name of the Google Cloud Storage object."
        }
      },
      "description": "Google Cloud Storage object representation.",
      "type": "object"
    },
    "SoftwareRecipeStepExecFile": {
      "type": "object",
      "description": "Executes an artifact or local file.",
      "properties": {
        "localPath": {
          "description": "The absolute path of the file on the local filesystem.",
          "type": "string"
        },
        "allowedExitCodes": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "description": "Defaults to [0]. A list of possible return values that the program can return to indicate a success."
        },
        "args": {
          "items": {
            "type": "string"
          },
          "description": "Arguments to be passed to the provided executable.",
          "type": "array"
        },
        "artifactId": {
          "description": "The id of the relevant artifact in the recipe.",
          "type": "string"
        }
      },
      "id": "SoftwareRecipeStepExecFile"
    },
    "AssignmentOsType": {
      "type": "object",
      "id": "AssignmentOsType",
      "properties": {
        "osArchitecture": {
          "type": "string",
          "description": "Targets VM instances with OS Inventory enabled and having the following OS architecture."
        },
        "osShortName": {
          "description": "Targets VM instances with OS Inventory enabled and having the following OS short name, for example \"debian\" or \"windows\".",
          "type": "string"
        },
        "osVersion": {
          "description": "Targets VM instances with OS Inventory enabled and having the following following OS version.",
          "type": "string"
        }
      },
      "description": "Defines the criteria for selecting VM Instances by OS type."
    },
    "SoftwareRecipeStepInstallMsi": {
      "properties": {
        "flags": {
          "description": "The flags to use when installing the MSI defaults to [\"/i\"] (i.e. the install flag).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "artifactId": {
          "type": "string",
          "description": "Required. The id of the relevant artifact in the recipe."
        },
        "allowedExitCodes": {
          "description": "Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "id": "SoftwareRecipeStepInstallMsi",
      "description": "Installs an MSI file.",
      "type": "object"
    },
    "TimeOfDay": {
      "id": "TimeOfDay",
      "properties": {
        "seconds": {
          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
          "format": "int32",
          "type": "integer"
        },
        "hours": {
          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "type": "integer",
          "format": "int32"
        },
        "minutes": {
          "format": "int32",
          "type": "integer",
          "description": "Minutes of hour of day. Must be from 0 to 59."
        },
        "nanos": {
          "format": "int32",
          "type": "integer",
          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
        }
      },
      "type": "object",
      "description": "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`."
    },
    "ZypperRepository": {
      "properties": {
        "displayName": {
          "description": "The display name of the repository.",
          "type": "string"
        },
        "gpgKeys": {
          "type": "array",
          "description": "URIs of GPG keys.",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "description": "Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `display_name` if `display_name` is omitted. This id is also used as the unique identifier when checking for guest policy conflicts."
        },
        "baseUrl": {
          "description": "Required. The location of the repository directory.",
          "type": "string"
        }
      },
      "id": "ZypperRepository",
      "type": "object",
      "description": "Represents a single Zypper package repository. This repository is added to a repo file that is stored at `/etc/zypp/repos.d/google_osconfig.repo`."
    },
    "SoftwareRecipeArtifact": {
      "type": "object",
      "properties": {
        "remote": {
          "description": "A generic remote artifact.",
          "$ref": "SoftwareRecipeArtifactRemote"
        },
        "gcs": {
          "description": "A Google Cloud Storage artifact.",
          "$ref": "SoftwareRecipeArtifactGcs"
        },
        "id": {
          "description": "Required. Id of the artifact, which the installation and update steps of this recipe can reference. Artifacts in a recipe cannot have the same id.",
          "type": "string"
        },
        "allowInsecure": {
          "description": "Defaults to false. When false, recipes are subject to validations based on the artifact type: Remote: A checksum must be specified, and only protocols with transport-layer security are permitted. GCS: An object generation number must be specified.",
          "type": "boolean"
        }
      },
      "id": "SoftwareRecipeArtifact",
      "description": "Specifies a resource to be used in the recipe."
    },
    "EffectiveGuestPolicySourcedSoftwareRecipe": {
      "properties": {
        "softwareRecipe": {
          "description": "A software recipe to configure on the VM instance.",
          "$ref": "SoftwareRecipe"
        },
        "source": {
          "type": "string",
          "description": "Name of the guest policy providing this config."
        }
      },
      "description": "A guest policy recipe including its source.",
      "type": "object",
      "id": "EffectiveGuestPolicySourcedSoftwareRecipe"
    },
    "PatchInstanceFilter": {
      "description": "A filter to target VM instances for patching. The targeted VMs must meet all criteria specified. So if both labels and zones are specified, the patch job targets only VMs with those labels and in those zones.",
      "type": "object",
      "id": "PatchInstanceFilter",
      "properties": {
        "all": {
          "description": "Target all VM instances in the project. If true, no other criteria is permitted.",
          "type": "boolean"
        },
        "instanceNamePrefixes": {
          "type": "array",
          "description": "Targets VMs whose name starts with one of these prefixes. Similar to labels, this is another way to group VMs when targeting configs, for example prefix=\"prod-\".",
          "items": {
            "type": "string"
          }
        },
        "zones": {
          "description": "Targets VM instances in ANY of these zones. Leave empty to target VM instances in any zone.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "groupLabels": {
          "type": "array",
          "description": "Targets VM instances matching at least one of these label sets. This allows targeting of disparate groups, for example \"env=prod or env=staging\".",
          "items": {
            "$ref": "PatchInstanceFilterGroupLabel"
          }
        },
        "instances": {
          "description": "Targets any of the VM instances specified. Instances are specified by their URI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`, `projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`, or `https://www.googleapis.com/compute/v1/projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "ExecStepConfig": {
      "description": "Common configurations for an ExecStep.",
      "type": "object",
      "id": "ExecStepConfig",
      "properties": {
        "localPath": {
          "type": "string",
          "description": "An absolute path to the executable on the VM."
        },
        "gcsObject": {
          "$ref": "GcsObject",
          "description": "A Google Cloud Storage object containing the executable."
        },
        "interpreter": {
          "enum": [
            "INTERPRETER_UNSPECIFIED",
            "SHELL",
            "POWERSHELL"
          ],
          "description": "The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with [shebang lines] (https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).",
          "type": "string",
          "enumDescriptions": [
            "Invalid for a Windows ExecStepConfig. For a Linux ExecStepConfig, the interpreter will be parsed from the shebang line of the script if unspecified.",
            "Indicates that the script is run with `/bin/sh` on Linux and `cmd` on Windows.",
            "Indicates that the file is run with PowerShell flags `-NonInteractive`, `-NoProfile`, and `-ExecutionPolicy Bypass`."
          ]
        },
        "allowedSuccessCodes": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "description": "Defaults to [0]. A list of possible return values that the execution can return to indicate a success."
        }
      }
    },
    "WeekDayOfMonth": {
      "type": "object",
      "id": "WeekDayOfMonth",
      "description": "Represents one week day in a month. An example is \"the 4th Sunday\".",
      "properties": {
        "dayOfWeek": {
          "type": "string",
          "enumDescriptions": [
            "The day of the week is unspecified.",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ],
          "description": "Required. A day of the week."
        },
        "weekOrdinal": {
          "type": "integer",
          "description": "Required. Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1 indicates the last week of the month.",
          "format": "int32"
        }
      }
    },
    "SoftwareRecipeStepRunScript": {
      "id": "SoftwareRecipeStepRunScript",
      "type": "object",
      "properties": {
        "allowedExitCodes": {
          "description": "Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "interpreter": {
          "enum": [
            "INTERPRETER_UNSPECIFIED",
            "SHELL",
            "POWERSHELL"
          ],
          "enumDescriptions": [
            "Default value for ScriptType.",
            "Indicates that the script is run with `/bin/sh` on Linux and `cmd` on windows.",
            "Indicates that the script is run with powershell."
          ],
          "type": "string",
          "description": "The script interpreter to use to run the script. If no interpreter is specified the script is executed directly, which likely only succeed for scripts with [shebang lines](https://en.wikipedia.org/wiki/Shebang_\\(Unix\\))."
        },
        "script": {
          "type": "string",
          "description": "Required. The shell script to be executed."
        }
      },
      "description": "Runs a script through an interpreter."
    },
    "MonthlySchedule": {
      "properties": {
        "monthDay": {
          "format": "int32",
          "description": "Required. One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month. Months without the target day will be skipped. For example, a schedule to run \"every month on the 31st\" will not run in February, April, June, etc.",
          "type": "integer"
        },
        "weekDayOfMonth": {
          "$ref": "WeekDayOfMonth",
          "description": "Required. Week day in a month."
        }
      },
      "description": "Represents a monthly schedule. An example of a valid monthly schedule is \"on the third Tuesday of the month\" or \"on the 15th of the month\".",
      "type": "object",
      "id": "MonthlySchedule"
    },
    "GooRepository": {
      "properties": {
        "name": {
          "description": "Required. The name of the repository.",
          "type": "string"
        },
        "url": {
          "type": "string",
          "description": "Required. The url of the repository."
        }
      },
      "id": "GooRepository",
      "type": "object",
      "description": "Represents a Goo package repository. These is added to a repo file that is stored at C:/ProgramData/GooGet/repos/google_osconfig.repo."
    },
    "ZypperSettings": {
      "description": "Zypper patching is performed by running `zypper patch`. See also https://en.opensuse.org/SDB:Zypper_manual.",
      "type": "object",
      "properties": {
        "excludes": {
          "type": "array",
          "description": "List of patches to exclude from update.",
          "items": {
            "type": "string"
          }
        },
        "severities": {
          "description": "Install only patches with these severities. Common severities include critical, important, moderate, and low.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "exclusivePatches": {
          "description": "An exclusive list of patches to be updated. These are the only patches that will be installed using 'zypper patch patch:' command. This field must not be used with any other patch configuration fields.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "withUpdate": {
          "type": "boolean",
          "description": "Adds the `--with-update` flag, to `zypper patch`."
        },
        "categories": {
          "items": {
            "type": "string"
          },
          "description": "Install only patches with these categories. Common categories include security, recommended, and feature.",
          "type": "array"
        },
        "withOptional": {
          "type": "boolean",
          "description": "Adds the `--with-optional` flag to `zypper patch`."
        }
      },
      "id": "ZypperSettings"
    },
    "PatchInstanceFilterGroupLabel": {
      "id": "PatchInstanceFilterGroupLabel",
      "description": "Represents a group of VMs that can be identified as having all these labels, for example \"env=prod and app=web\".",
      "properties": {
        "labels": {
          "type": "object",
          "description": "Compute Engine instance labels that must be present for a VM instance to be targeted by this filter.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "SoftwareRecipeArtifactRemote": {
      "properties": {
        "uri": {
          "description": "URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.",
          "type": "string"
        },
        "checksum": {
          "description": "Must be provided if `allow_insecure` is `false`. SHA256 checksum in hex format, to compare to the checksum of the artifact. If the checksum is not empty and it doesn't match the artifact then the recipe installation fails before running any of the steps.",
          "type": "string"
        }
      },
      "description": "Specifies an artifact available via some URI.",
      "type": "object",
      "id": "SoftwareRecipeArtifactRemote"
    },
    "ListPatchJobInstanceDetailsResponse": {
      "type": "object",
      "id": "ListPatchJobInstanceDetailsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token that can be used to get the next page of results."
        },
        "patchJobInstanceDetails": {
          "type": "array",
          "items": {
            "$ref": "PatchJobInstanceDetails"
          },
          "description": "A list of instance status."
        }
      },
      "description": "A response message for listing the instances details for a patch job."
    },
    "OSPolicyAssignmentOperationMetadata": {
      "type": "object",
      "properties": {
        "rolloutState": {
          "enum": [
            "ROLLOUT_STATE_UNSPECIFIED",
            "IN_PROGRESS",
            "CANCELLING",
            "CANCELLED",
            "SUCCEEDED"
          ],
          "type": "string",
          "description": "State of the rollout",
          "enumDescriptions": [
            "Invalid value",
            "The rollout is in progress.",
            "The rollout is being cancelled.",
            "The rollout is cancelled.",
            "The rollout has completed successfully."
          ]
        },
        "osPolicyAssignment": {
          "description": "Reference to the `OSPolicyAssignment` API resource. Format: projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}",
          "type": "string"
        },
        "apiMethod": {
          "type": "string",
          "enumDescriptions": [
            "Invalid value",
            "Create OS policy assignment API method",
            "Update OS policy assignment API method",
            "Delete OS policy assignment API method"
          ],
          "enum": [
            "API_METHOD_UNSPECIFIED",
            "CREATE",
            "UPDATE",
            "DELETE"
          ],
          "description": "The OS policy assignment API method."
        },
        "rolloutStartTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Rollout start time"
        },
        "rolloutUpdateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Rollout update time"
        }
      },
      "id": "OSPolicyAssignmentOperationMetadata",
      "description": "OS policy assignment operation metadata provided by OS policy assignment API methods that return long running operations."
    },
    "ExecStep": {
      "type": "object",
      "id": "ExecStep",
      "description": "A step that runs an executable for a PatchJob.",
      "properties": {
        "linuxExecStepConfig": {
          "$ref": "ExecStepConfig",
          "description": "The ExecStepConfig for all Linux VMs targeted by the PatchJob."
        },
        "windowsExecStepConfig": {
          "description": "The ExecStepConfig for all Windows VMs targeted by the PatchJob.",
          "$ref": "ExecStepConfig"
        }
      }
    },
    "PackageRepository": {
      "id": "PackageRepository",
      "type": "object",
      "description": "A package repository.",
      "properties": {
        "goo": {
          "$ref": "GooRepository",
          "description": "A Goo Repository."
        },
        "zypper": {
          "description": "A Zypper Repository.",
          "$ref": "ZypperRepository"
        },
        "yum": {
          "$ref": "YumRepository",
          "description": "A Yum Repository."
        },
        "apt": {
          "description": "An Apt Repository.",
          "$ref": "AptRepository"
        }
      }
    },
    "SoftwareRecipeArtifactGcs": {
      "properties": {
        "bucket": {
          "type": "string",
          "description": "Bucket of the Google Cloud Storage object. Given an example URL: `https://storage.googleapis.com/my-bucket/foo/bar#1234567` this value would be `my-bucket`."
        },
        "object": {
          "type": "string",
          "description": "Name of the Google Cloud Storage object. As specified [here] (https://cloud.google.com/storage/docs/naming#objectnames) Given an example URL: `https://storage.googleapis.com/my-bucket/foo/bar#1234567` this value would be `foo/bar`."
        },
        "generation": {
          "format": "int64",
          "description": "Must be provided if allow_insecure is false. Generation number of the Google Cloud Storage object. `https://storage.googleapis.com/my-bucket/foo/bar#1234567` this value would be `1234567`.",
          "type": "string"
        }
      },
      "description": "Specifies an artifact available as a Google Cloud Storage object.",
      "type": "object",
      "id": "SoftwareRecipeArtifactGcs"
    },
    "WindowsUpdateSettings": {
      "type": "object",
      "id": "WindowsUpdateSettings",
      "description": "Windows patching is performed using the Windows Update Agent.",
      "properties": {
        "classifications": {
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Invalid. If classifications are included, they must be specified.",
              "\"A widely released fix for a specific problem that addresses a critical, non-security-related bug.\" [1]",
              "\"A widely released fix for a product-specific, security-related vulnerability. Security vulnerabilities are rated by their severity. The severity rating is indicated in the Microsoft security bulletin as critical, important, moderate, or low.\" [1]",
              "\"A widely released and frequent software update that contains additions to a product's definition database. Definition databases are often used to detect objects that have specific attributes, such as malicious code, phishing websites, or junk mail.\" [1]",
              "\"Software that controls the input and output of a device.\" [1]",
              "\"New product functionality that is first distributed outside the context of a product release and that is typically included in the next full product release.\" [1]",
              "\"A tested, cumulative set of all hotfixes, security updates, critical updates, and updates. Additionally, service packs may contain additional fixes for problems that are found internally since the release of the product. Service packs my also contain a limited number of customer-requested design changes or features.\" [1]",
              "\"A utility or feature that helps complete a task or set of tasks.\" [1]",
              "\"A tested, cumulative set of hotfixes, security updates, critical updates, and updates that are packaged together for easy deployment. A rollup generally targets a specific area, such as security, or a component of a product, such as Internet Information Services (IIS).\" [1]",
              "\"A widely released fix for a specific problem. An update addresses a noncritical, non-security-related bug.\" [1]"
            ],
            "type": "string",
            "enum": [
              "CLASSIFICATION_UNSPECIFIED",
              "CRITICAL",
              "SECURITY",
              "DEFINITION",
              "DRIVER",
              "FEATURE_PACK",
              "SERVICE_PACK",
              "TOOL",
              "UPDATE_ROLLUP",
              "UPDATE"
            ]
          },
          "description": "Only apply updates of these windows update classifications. If empty, all updates are applied."
        },
        "excludes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of KBs to exclude from update."
        },
        "exclusivePatches": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An exclusive list of kbs to be updated. These are the only patches that will be updated. This field must not be used with other patch configurations."
        }
      }
    },
    "PatchJobInstanceDetailsSummary": {
      "id": "PatchJobInstanceDetailsSummary",
      "description": "A summary of the current patch state across all instances that this patch job affects. Contains counts of instances in different states. These states map to `InstancePatchState`. List patch job instance details to see the specific states of each instance.",
      "properties": {
        "postPatchStepInstanceCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of instances that are running the post-patch step."
        },
        "succeededInstanceCount": {
          "format": "int64",
          "description": "Number of instances that have completed successfully.",
          "type": "string"
        },
        "applyingPatchesInstanceCount": {
          "description": "Number of instances that are applying patches.",
          "format": "int64",
          "type": "string"
        },
        "prePatchStepInstanceCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of instances that are running the pre-patch step."
        },
        "rebootingInstanceCount": {
          "description": "Number of instances rebooting.",
          "format": "int64",
          "type": "string"
        },
        "failedInstanceCount": {
          "description": "Number of instances that failed.",
          "type": "string",
          "format": "int64"
        },
        "inactiveInstanceCount": {
          "format": "int64",
          "description": "Number of instances that are inactive.",
          "type": "string"
        },
        "succeededRebootRequiredInstanceCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of instances that require reboot."
        },
        "startedInstanceCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of instances that have started."
        },
        "pendingInstanceCount": {
          "description": "Number of instances pending patch job.",
          "type": "string",
          "format": "int64"
        },
        "noAgentDetectedInstanceCount": {
          "type": "string",
          "description": "Number of instances that do not appear to be running the agent. Check to ensure that the agent is installed, running, and able to communicate with the service.",
          "format": "int64"
        },
        "ackedInstanceCount": {
          "description": "Number of instances that have acked and will start shortly.",
          "format": "int64",
          "type": "string"
        },
        "downloadingPatchesInstanceCount": {
          "description": "Number of instances that are downloading patches.",
          "format": "int64",
          "type": "string"
        },
        "notifiedInstanceCount": {
          "format": "int64",
          "type": "string",
          "description": "Number of instances notified about patch job."
        },
        "timedOutInstanceCount": {
          "description": "Number of instances that exceeded the time out while applying the patch.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PatchJob": {
      "properties": {
        "percentComplete": {
          "description": "Reflects the overall progress of the patch job in the range of 0.0 being no progress to 100.0 being complete.",
          "type": "number",
          "format": "double"
        },
        "name": {
          "type": "string",
          "description": "Unique identifier for this patch job in the form `projects/*/patchJobs/*`"
        },
        "createTime": {
          "type": "string",
          "description": "Time this patch job was created.",
          "format": "google-datetime"
        },
        "duration": {
          "description": "Duration of the patch job. After the duration ends, the patch job times out.",
          "type": "string",
          "format": "google-duration"
        },
        "displayName": {
          "description": "Display name for this patch job. This is not a unique identifier.",
          "type": "string"
        },
        "errorMessage": {
          "type": "string",
          "description": "If this patch job failed, this message provides information about the failure."
        },
        "instanceDetailsSummary": {
          "$ref": "PatchJobInstanceDetailsSummary",
          "description": "Summary of instance details."
        },
        "rollout": {
          "description": "Rollout strategy being applied.",
          "$ref": "PatchRollout"
        },
        "description": {
          "description": "Description of the patch job. Length of the description is limited to 1024 characters.",
          "type": "string"
        },
        "dryRun": {
          "description": "If this patch job is a dry run, the agent reports that it has finished without running any updates on the VM instance.",
          "type": "boolean"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTED",
            "INSTANCE_LOOKUP",
            "PATCHING",
            "SUCCEEDED",
            "COMPLETED_WITH_ERRORS",
            "CANCELED",
            "TIMED_OUT"
          ],
          "description": "The current state of the PatchJob.",
          "type": "string",
          "enumDescriptions": [
            "State must be specified.",
            "The patch job was successfully initiated.",
            "The patch job is looking up instances to run the patch on.",
            "Instances are being patched.",
            "Patch job completed successfully.",
            "Patch job completed but there were errors.",
            "The patch job was canceled.",
            "The patch job timed out."
          ]
        },
        "patchConfig": {
          "$ref": "PatchConfig",
          "description": "Patch configuration being applied."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Last time this patch job was updated."
        },
        "instanceFilter": {
          "description": "Instances to patch.",
          "$ref": "PatchInstanceFilter"
        },
        "patchDeployment": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the patch deployment that created this patch job."
        }
      },
      "description": "A high level representation of a patch job that is either in progress or has completed. Instance details are not included in the job. To paginate through instance details, use `ListPatchJobInstanceDetails`. For more information about patch jobs, see [Creating patch jobs](https://cloud.google.com/compute/docs/os-patch-management/create-patch-job).",
      "type": "object",
      "id": "PatchJob"
    },
    "YumSettings": {
      "properties": {
        "exclusivePackages": {
          "description": "An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field must not be specified with any other patch configuration fields.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludes": {
          "items": {
            "type": "string"
          },
          "description": "List of packages to exclude from update. These packages are excluded by using the yum `--exclude` flag.",
          "type": "array"
        },
        "minimal": {
          "description": "Will cause patch to run `yum update-minimal` instead.",
          "type": "boolean"
        },
        "security": {
          "type": "boolean",
          "description": "Adds the `--security` flag to `yum update`. Not supported on all platforms."
        }
      },
      "id": "YumSettings",
      "type": "object",
      "description": "Yum patching is performed by executing `yum update`. Additional options can be set to control how this is executed. Note that not all settings are supported on all platforms."
    },
    "SoftwareRecipeStep": {
      "properties": {
        "fileExec": {
          "$ref": "SoftwareRecipeStepExecFile",
          "description": "Executes an artifact or local file."
        },
        "dpkgInstallation": {
          "description": "Installs a deb file via dpkg.",
          "$ref": "SoftwareRecipeStepInstallDpkg"
        },
        "archiveExtraction": {
          "description": "Extracts an archive into the specified directory.",
          "$ref": "SoftwareRecipeStepExtractArchive"
        },
        "msiInstallation": {
          "description": "Installs an MSI file.",
          "$ref": "SoftwareRecipeStepInstallMsi"
        },
        "fileCopy": {
          "$ref": "SoftwareRecipeStepCopyFile",
          "description": "Copies a file onto the instance."
        },
        "rpmInstallation": {
          "$ref": "SoftwareRecipeStepInstallRpm",
          "description": "Installs an rpm file via the rpm utility."
        },
        "scriptRun": {
          "$ref": "SoftwareRecipeStepRunScript",
          "description": "Runs commands in a shell."
        }
      },
      "description": "An action that can be taken as part of installing or updating a recipe.",
      "type": "object",
      "id": "SoftwareRecipeStep"
    },
    "GuestPolicy": {
      "id": "GuestPolicy",
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Time this guest policy was created.",
          "format": "google-datetime"
        },
        "packages": {
          "type": "array",
          "description": "The software packages to be managed by this policy.",
          "items": {
            "$ref": "Package"
          }
        },
        "assignment": {
          "description": "Required. Specifies the VM instances that are assigned to this policy. This allows you to target sets or groups of VM instances by different parameters such as labels, names, OS, or zones. If left empty, all VM instances underneath this policy are targeted. At the same level in the resource hierarchy (that is within a project), the service prevents the creation of multiple policies that conflict with each other. For more information, see how the service [handles assignment conflicts](/compute/docs/os-config-management/create-guest-policy#handle-conflicts).",
          "$ref": "Assignment"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. Last time this guest policy was updated.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "description": {
          "description": "Description of the guest policy. Length of the description is limited to 1024 characters.",
          "type": "string"
        },
        "name": {
          "description": "Required. Unique name of the resource in this project using one of the following forms: `projects/{project_number}/guestPolicies/{guest_policy_id}`.",
          "type": "string"
        },
        "recipes": {
          "items": {
            "$ref": "SoftwareRecipe"
          },
          "type": "array",
          "description": "A list of Recipes to install on the VM instance."
        },
        "etag": {
          "description": "The etag for this guest policy. If this is provided on update, it must match the server's etag.",
          "type": "string"
        },
        "packageRepositories": {
          "type": "array",
          "description": "A list of package repositories to configure on the VM instance. This is done before any other configs are applied so they can use these repos. Package repositories are only configured if the corresponding package manager(s) are available.",
          "items": {
            "$ref": "PackageRepository"
          }
        }
      },
      "description": "An OS Config resource representing a guest configuration policy. These policies represent the desired state for VM instance guest environments including packages to install or remove, package repository configurations, and software to install."
    },
    "PatchConfig": {
      "description": "Patch configuration specifications. Contains details on how to apply the patch(es) to a VM instance.",
      "id": "PatchConfig",
      "type": "object",
      "properties": {
        "preStep": {
          "$ref": "ExecStep",
          "description": "The `ExecStep` to run before the patch update."
        },
        "windowsUpdate": {
          "$ref": "WindowsUpdateSettings",
          "description": "Windows update settings. Use this override the default windows patch rules."
        },
        "apt": {
          "$ref": "AptSettings",
          "description": "Apt update settings. Use this setting to override the default `apt` patch rules."
        },
        "rebootConfig": {
          "enumDescriptions": [
            "The default behavior is DEFAULT.",
            "The agent decides if a reboot is necessary by checking signals such as registry keys on Windows or `/var/run/reboot-required` on APT based systems. On RPM based systems, a set of core system package install times are compared with system boot time.",
            "Always reboot the machine after the update completes.",
            "Never reboot the machine after the update completes."
          ],
          "description": "Post-patch reboot settings.",
          "type": "string",
          "enum": [
            "REBOOT_CONFIG_UNSPECIFIED",
            "DEFAULT",
            "ALWAYS",
            "NEVER"
          ]
        },
        "yum": {
          "description": "Yum update settings. Use this setting to override the default `yum` patch rules.",
          "$ref": "YumSettings"
        },
        "goo": {
          "$ref": "GooSettings",
          "description": "Goo update settings. Use this setting to override the default `goo` patch rules."
        },
        "zypper": {
          "$ref": "ZypperSettings",
          "description": "Zypper update settings. Use this setting to override the default `zypper` patch rules."
        },
        "postStep": {
          "$ref": "ExecStep",
          "description": "The `ExecStep` to run after the patch update."
        }
      }
    },
    "PatchRollout": {
      "type": "object",
      "description": "Patch rollout configuration specifications. Contains details on the concurrency control when applying patch(es) to all targeted VMs.",
      "id": "PatchRollout",
      "properties": {
        "mode": {
          "enum": [
            "MODE_UNSPECIFIED",
            "ZONE_BY_ZONE",
            "CONCURRENT_ZONES"
          ],
          "description": "Mode of the patch rollout.",
          "type": "string",
          "enumDescriptions": [
            "Mode must be specified.",
            "Patches are applied one zone at a time. The patch job begins in the region with the lowest number of targeted VMs. Within the region, patching begins in the zone with the lowest number of targeted VMs. If multiple regions (or zones within a region) have the same number of targeted VMs, a tie-breaker is achieved by sorting the regions or zones in alphabetical order.",
            "Patches are applied to VMs in all zones at the same time."
          ]
        },
        "disruptionBudget": {
          "$ref": "FixedOrPercent",
          "description": "The maximum number (or percentage) of VMs per zone to disrupt at any given moment. The number of VMs calculated from multiplying the percentage by the total number of VMs in a zone is rounded up. During patching, a VM is considered disrupted from the time the agent is notified to begin until patching has completed. This disruption time includes the time to complete reboot and any post-patch steps. A VM contributes to the disruption budget if its patching operation fails either when applying the patches, running pre or post patch steps, or if it fails to respond with a success notification before timing out. VMs that are not running or do not have an active agent do not count toward this disruption budget. For zone-by-zone rollouts, if the disruption budget in a zone is exceeded, the patch job stops, because continuing to the next zone requires completion of the patch process in the previous zone. For example, if the disruption budget has a fixed value of `10`, and 8 VMs fail to patch in the current zone, the patch job continues to patch 2 VMs at a time until the zone is completed. When that zone is completed successfully, patching begins with 10 VMs at a time in the next zone. If 10 VMs in the next zone fail to patch, the patch job stops."
        }
      }
    },
    "EffectiveGuestPolicySourcedPackageRepository": {
      "id": "EffectiveGuestPolicySourcedPackageRepository",
      "properties": {
        "source": {
          "description": "Name of the guest policy providing this config.",
          "type": "string"
        },
        "packageRepository": {
          "$ref": "PackageRepository",
          "description": "A software package repository to configure on the VM instance."
        }
      },
      "description": "A guest policy package repository including its source.",
      "type": "object"
    },
    "Package": {
      "type": "object",
      "id": "Package",
      "description": "Package is a reference to the software package to be installed or removed. The agent on the VM instance uses the system package manager to apply the config. These are the commands that the agent uses to install or remove packages. Apt install: `apt-get update && apt-get -y install package1 package2 package3` remove: `apt-get -y remove package1 package2 package3` Yum install: `yum -y install package1 package2 package3` remove: `yum -y remove package1 package2 package3` Zypper install: `zypper install package1 package2 package3` remove: `zypper rm package1 package2` Googet install: `googet -noconfirm install package1 package2 package3` remove: `googet -noconfirm remove package1 package2 package3`",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the package. A package is uniquely identified for conflict validation by checking the package name and the manager(s) that the package targets."
        },
        "manager": {
          "enum": [
            "MANAGER_UNSPECIFIED",
            "ANY",
            "APT",
            "YUM",
            "ZYPPER",
            "GOO"
          ],
          "type": "string",
          "enumDescriptions": [
            "The default behavior is ANY.",
            "Apply this package config using the default system package manager.",
            "Apply this package config only if Apt is available on the system.",
            "Apply this package config only if Yum is available on the system.",
            "Apply this package config only if Zypper is available on the system.",
            "Apply this package config only if GooGet is available on the system."
          ],
          "description": "Type of package manager that can be used to install this package. If a system does not have the package manager, the package is not installed or removed no error message is returned. By default, or if you specify `ANY`, the agent attempts to install and remove this package using the default package manager. This is useful when creating a policy that applies to different types of systems. The default behavior is ANY."
        },
        "desiredState": {
          "type": "string",
          "enum": [
            "DESIRED_STATE_UNSPECIFIED",
            "INSTALLED",
            "UPDATED",
            "REMOVED"
          ],
          "description": "The desired_state the agent should maintain for this package. The default is to ensure the package is installed.",
          "enumDescriptions": [
            "The default is to ensure the package is installed.",
            "The agent ensures that the package is installed.",
            "The agent ensures that the package is installed and periodically checks for and install any updates.",
            "The agent ensures that the package is not installed and uninstall it if detected."
          ]
        }
      }
    },
    "AptSettings": {
      "properties": {
        "exclusivePackages": {
          "description": "An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field cannot be specified with any other patch configuration fields.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "description": "By changing the type to DIST, the patching is performed using `apt-get dist-upgrade` instead.",
          "type": "string",
          "enumDescriptions": [
            "By default, upgrade will be performed.",
            "Runs `apt-get dist-upgrade`.",
            "Runs `apt-get upgrade`."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "DIST",
            "UPGRADE"
          ]
        },
        "excludes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of packages to exclude from update. These packages will be excluded"
        }
      },
      "type": "object",
      "description": "Apt patching is completed by executing `apt-get update && apt-get upgrade`. Additional options can be set to control how this is executed.",
      "id": "AptSettings"
    },
    "YumRepository": {
      "type": "object",
      "id": "YumRepository",
      "description": "Represents a single Yum package repository. This repository is added to a repo file that is stored at `/etc/yum.repos.d/google_osconfig.repo`.",
      "properties": {
        "id": {
          "description": "Required. A one word, unique name for this repository. This is the `repo id` in the Yum config file and also the `display_name` if `display_name` is omitted. This id is also used as the unique identifier when checking for guest policy conflicts.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the repository.",
          "type": "string"
        },
        "baseUrl": {
          "type": "string",
          "description": "Required. The location of the repository directory."
        },
        "gpgKeys": {
          "description": "URIs of GPG keys.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "EffectiveGuestPolicySourcedPackage": {
      "id": "EffectiveGuestPolicySourcedPackage",
      "type": "object",
      "properties": {
        "source": {
          "description": "Name of the guest policy providing this config.",
          "type": "string"
        },
        "package": {
          "$ref": "Package",
          "description": "A software package to configure on the VM instance."
        }
      },
      "description": "A guest policy package including its source."
    },
    "SoftwareRecipe": {
      "id": "SoftwareRecipe",
      "properties": {
        "updateSteps": {
          "items": {
            "$ref": "SoftwareRecipeStep"
          },
          "type": "array",
          "description": "Actions to be taken for updating this recipe. On failure it stops executing steps and does not attempt another update for this recipe. Any steps taken (including partially completed steps) are not rolled back."
        },
        "name": {
          "type": "string",
          "description": "Required. Unique identifier for the recipe. Only one recipe with a given name is installed on an instance. Names are also used to identify resources which helps to determine whether guest policies have conflicts. This means that requests to create multiple recipes with the same name and version are rejected since they could potentially have conflicting assignments."
        },
        "installSteps": {
          "description": "Actions to be taken for installing this recipe. On failure it stops executing steps and does not attempt another installation. Any steps taken (including partially completed steps) are not rolled back.",
          "type": "array",
          "items": {
            "$ref": "SoftwareRecipeStep"
          }
        },
        "artifacts": {
          "items": {
            "$ref": "SoftwareRecipeArtifact"
          },
          "description": "Resources available to be used in the steps in the recipe.",
          "type": "array"
        },
        "version": {
          "description": "The version of this software recipe. Version can be up to 4 period separated numbers (e.g. 12.34.56.78).",
          "type": "string"
        },
        "desiredState": {
          "type": "string",
          "description": "Default is INSTALLED. The desired state the agent should maintain for this recipe. INSTALLED: The software recipe is installed on the instance but won't be updated to new versions. UPDATED: The software recipe is installed on the instance. The recipe is updated to a higher version, if a higher version of the recipe is assigned to this instance. REMOVE: Remove is unsupported for software recipes and attempts to create or update a recipe to the REMOVE state is rejected.",
          "enumDescriptions": [
            "The default is to ensure the package is installed.",
            "The agent ensures that the package is installed.",
            "The agent ensures that the package is installed and periodically checks for and install any updates.",
            "The agent ensures that the package is not installed and uninstall it if detected."
          ],
          "enum": [
            "DESIRED_STATE_UNSPECIFIED",
            "INSTALLED",
            "UPDATED",
            "REMOVED"
          ]
        }
      },
      "type": "object",
      "description": "A software recipe is a set of instructions for installing and configuring a piece of software. It consists of a set of artifacts that are downloaded, and a set of steps that install, configure, and/or update the software. Recipes support installing and updating software from artifacts in the following formats: Zip archive, Tar archive, Windows MSI, Debian package, and RPM package. Additionally, recipes support executing a script (either defined in a file or directly in this api) in bash, sh, cmd, and powershell. Updating a software recipe If a recipe is assigned to an instance and there is a recipe with the same name but a lower version already installed and the assigned state of the recipe is `UPDATED`, then the recipe is updated to the new version. Script Working Directories Each script or execution step is run in its own temporary directory which is deleted after completing the step."
    },
    "SoftwareRecipeStepInstallRpm": {
      "type": "object",
      "description": "Installs an rpm file via the rpm utility.",
      "properties": {
        "artifactId": {
          "description": "Required. The id of the relevant artifact in the recipe.",
          "type": "string"
        }
      },
      "id": "SoftwareRecipeStepInstallRpm"
    },
    "ListPatchDeploymentsResponse": {
      "description": "A response message for listing patch deployments.",
      "type": "object",
      "properties": {
        "patchDeployments": {
          "type": "array",
          "description": "The list of patch deployments.",
          "items": {
            "$ref": "PatchDeployment"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token that can be used to get the next page of patch deployments."
        }
      },
      "id": "ListPatchDeploymentsResponse"
    },
    "SoftwareRecipeStepExtractArchive": {
      "id": "SoftwareRecipeStepExtractArchive",
      "description": "Extracts an archive of the type specified in the specified directory.",
      "type": "object",
      "properties": {
        "artifactId": {
          "description": "Required. The id of the relevant artifact in the recipe.",
          "type": "string"
        },
        "destination": {
          "type": "string",
          "description": "Directory to extract archive to. Defaults to `/` on Linux or `C:\\` on Windows."
        },
        "type": {
          "enum": [
            "ARCHIVE_TYPE_UNSPECIFIED",
            "TAR",
            "TAR_GZIP",
            "TAR_BZIP",
            "TAR_LZMA",
            "TAR_XZ",
            "ZIP"
          ],
          "type": "string",
          "description": "Required. The type of the archive to extract.",
          "enumDescriptions": [
            "Indicates that the archive type isn't specified.",
            "Indicates that the archive is a tar archive with no encryption.",
            "Indicates that the archive is a tar archive with gzip encryption.",
            "Indicates that the archive is a tar archive with bzip encryption.",
            "Indicates that the archive is a tar archive with lzma encryption.",
            "Indicates that the archive is a tar archive with xz encryption.",
            "Indicates that the archive is a zip archive."
          ]
        }
      }
    },
    "LookupEffectiveGuestPolicyRequest": {
      "properties": {
        "osVersion": {
          "type": "string",
          "description": "Version of the OS running on the instance. The OS Config agent only provides this field for targeting if OS Inventory is enabled for that VM instance."
        },
        "osArchitecture": {
          "type": "string",
          "description": "Architecture of OS running on the instance. The OS Config agent only provides this field for targeting if OS Inventory is enabled for that instance."
        },
        "osShortName": {
          "description": "Short name of the OS running on the instance. The OS Config agent only provides this field for targeting if OS Inventory is enabled for that instance.",
          "type": "string"
        }
      },
      "description": "A request message for getting the effective guest policy assigned to the instance.",
      "id": "LookupEffectiveGuestPolicyRequest",
      "type": "object"
    },
    "SoftwareRecipeStepInstallDpkg": {
      "id": "SoftwareRecipeStepInstallDpkg",
      "description": "Installs a deb via dpkg.",
      "type": "object",
      "properties": {
        "artifactId": {
          "type": "string",
          "description": "Required. The id of the relevant artifact in the recipe."
        }
      }
    },
    "ExecutePatchJobRequest": {
      "description": "A request message to initiate patching across Compute Engine instances.",
      "properties": {
        "dryRun": {
          "type": "boolean",
          "description": "If this patch is a dry-run only, instances are contacted but will do nothing."
        },
        "patchConfig": {
          "$ref": "PatchConfig",
          "description": "Patch configuration being applied. If omitted, instances are patched using the default configurations."
        },
        "duration": {
          "description": "Duration of the patch job. After the duration ends, the patch job times out.",
          "format": "google-duration",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Description of the patch job. Length of the description is limited to 1024 characters."
        },
        "instanceFilter": {
          "description": "Required. Instances to patch, either explicitly or filtered by some criteria such as zone or labels.",
          "$ref": "PatchInstanceFilter"
        },
        "rollout": {
          "description": "Rollout strategy of the patch job.",
          "$ref": "PatchRollout"
        },
        "displayName": {
          "description": "Display name for this patch job. This does not have to be unique.",
          "type": "string"
        }
      },
      "id": "ExecutePatchJobRequest",
      "type": "object"
    },
    "GooSettings": {
      "properties": {},
      "type": "object",
      "id": "GooSettings",
      "description": "Googet patching is performed by running `googet update`."
    },
    "Assignment": {
      "type": "object",
      "description": "An assignment represents the group or groups of VM instances that the policy applies to. If an assignment is empty, it applies to all VM instances. Otherwise, the targeted VM instances must meet all the criteria specified. So if both labels and zones are specified, the policy applies to VM instances with those labels and in those zones.",
      "properties": {
        "groupLabels": {
          "items": {
            "$ref": "AssignmentGroupLabel"
          },
          "type": "array",
          "description": "Targets instances matching at least one of these label sets. This allows an assignment to target disparate groups, for example \"env=prod or env=staging\"."
        },
        "osTypes": {
          "type": "array",
          "description": "Targets VM instances matching at least one of the following OS types. VM instances must match all supplied criteria for a given OsType to be included.",
          "items": {
            "$ref": "AssignmentOsType"
          }
        },
        "zones": {
          "description": "Targets instances in any of these zones. Leave empty to target instances in any zone. Zonal targeting is uncommon and is supported to facilitate the management of changes by zone.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instances": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Targets any of the instances specified. Instances are specified by their URI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`. Instance targeting is uncommon and is supported to facilitate the management of changes by the instance or to target specific VM instances for development and testing. Only supported for project-level policies and must reference instances within this project."
        },
        "instanceNamePrefixes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Targets VM instances whose name starts with one of these prefixes. Like labels, this is another way to group VM instances when targeting configs, for example prefix=\"prod-\". Only supported for project-level policies."
        }
      },
      "id": "Assignment"
    },
    "RecurringSchedule": {
      "properties": {
        "timeOfDay": {
          "$ref": "TimeOfDay",
          "description": "Required. Time of the day to run a recurring deployment."
        },
        "nextExecuteTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the next patch job is scheduled to run."
        },
        "lastExecuteTime": {
          "readOnly": true,
          "description": "Output only. The time the last patch job ran successfully.",
          "format": "google-datetime",
          "type": "string"
        },
        "frequency": {
          "enumDescriptions": [
            "Invalid. A frequency must be specified.",
            "Indicates that the frequency should be expressed in terms of weeks.",
            "Indicates that the frequency should be expressed in terms of months."
          ],
          "type": "string",
          "enum": [
            "FREQUENCY_UNSPECIFIED",
            "WEEKLY",
            "MONTHLY"
          ],
          "description": "Required. The frequency unit of this recurring schedule."
        },
        "startTime": {
          "description": "Optional. The time that the recurring schedule becomes effective. Defaults to `create_time` of the patch deployment.",
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "description": "Optional. The end time at which a recurring patch deployment schedule is no longer active.",
          "format": "google-datetime"
        },
        "timeZone": {
          "description": "Required. Defines the time zone that `time_of_day` is relative to. The rules for daylight saving time are determined by the chosen time zone.",
          "$ref": "TimeZone"
        },
        "monthly": {
          "$ref": "MonthlySchedule",
          "description": "Required. Schedule with monthly executions."
        },
        "weekly": {
          "$ref": "WeeklySchedule",
          "description": "Required. Schedule with weekly executions."
        }
      },
      "type": "object",
      "id": "RecurringSchedule",
      "description": "Sets the time for recurring patch deployments."
    },
    "PatchJobInstanceDetails": {
      "description": "Patch details for a VM instance. For more information about reviewing VM instance details, see [Listing all VM instance details for a specific patch job](https://cloud.google.com/compute/docs/os-patch-management/manage-patch-jobs#list-instance-details).",
      "type": "object",
      "properties": {
        "attemptCount": {
          "format": "int64",
          "type": "string",
          "description": "The number of times the agent that the agent attempts to apply the patch."
        },
        "name": {
          "type": "string",
          "description": "The instance name in the form `projects/*/zones/*/instances/*`"
        },
        "failureReason": {
          "type": "string",
          "description": "If the patch fails, this field provides the reason."
        },
        "state": {
          "enumDescriptions": [
            "Unspecified.",
            "The instance is not yet notified.",
            "Instance is inactive and cannot be patched.",
            "The instance is notified that it should be patched.",
            "The instance has started the patching process.",
            "The instance is downloading patches.",
            "The instance is applying patches.",
            "The instance is rebooting.",
            "The instance has completed applying patches.",
            "The instance has completed applying patches but a reboot is required.",
            "The instance has failed to apply the patch.",
            "The instance acked the notification and will start shortly.",
            "The instance exceeded the time out while applying the patch.",
            "The instance is running the pre-patch step.",
            "The instance is running the post-patch step.",
            "The service could not detect the presence of the agent. Check to ensure that the agent is installed, running, and able to communicate with the service."
          ],
          "enum": [
            "PATCH_STATE_UNSPECIFIED",
            "PENDING",
            "INACTIVE",
            "NOTIFIED",
            "STARTED",
            "DOWNLOADING_PATCHES",
            "APPLYING_PATCHES",
            "REBOOTING",
            "SUCCEEDED",
            "SUCCEEDED_REBOOT_REQUIRED",
            "FAILED",
            "ACKED",
            "TIMED_OUT",
            "RUNNING_PRE_PATCH_STEP",
            "RUNNING_POST_PATCH_STEP",
            "NO_AGENT_DETECTED"
          ],
          "type": "string",
          "description": "Current state of instance patch."
        },
        "instanceSystemId": {
          "type": "string",
          "description": "The unique identifier for the instance. This identifier is defined by the server."
        }
      },
      "id": "PatchJobInstanceDetails"
    },
    "ListGuestPoliciesResponse": {
      "description": "A response message for listing guest policies.",
      "type": "object",
      "id": "ListGuestPoliciesResponse",
      "properties": {
        "nextPageToken": {
          "description": "A pagination token that can be used to get the next page of guest policies.",
          "type": "string"
        },
        "guestPolicies": {
          "type": "array",
          "items": {
            "$ref": "GuestPolicy"
          },
          "description": "The list of GuestPolicies."
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "type": "object",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "CancelPatchJobRequest": {
      "id": "CancelPatchJobRequest",
      "properties": {},
      "type": "object",
      "description": "Message for canceling a patch job."
    },
    "SoftwareRecipeStepCopyFile": {
      "type": "object",
      "id": "SoftwareRecipeStepCopyFile",
      "properties": {
        "destination": {
          "type": "string",
          "description": "Required. The absolute path on the instance to put the file."
        },
        "artifactId": {
          "type": "string",
          "description": "Required. The id of the relevant artifact in the recipe."
        },
        "permissions": {
          "description": "Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4",
          "type": "string"
        },
        "overwrite": {
          "type": "boolean",
          "description": "Whether to allow this step to overwrite existing files. If this is false and the file already exists the file is not overwritten and the step is considered a success. Defaults to false."
        }
      },
      "description": "Copies the artifact to the specified path on the instance."
    },
    "AssignmentGroupLabel": {
      "id": "AssignmentGroupLabel",
      "type": "object",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Google Compute Engine instance labels that must be present for an instance to be included in this assignment group.",
          "type": "object"
        }
      },
      "description": "Represents a group of VM intances that can be identified as having all these labels, for example \"env=prod and app=web\"."
    },
    "AptRepository": {
      "id": "AptRepository",
      "description": "Represents a single Apt package repository. This repository is added to a repo file that is stored at `/etc/apt/sources.list.d/google_osconfig.list`.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Required. URI for this repository.",
          "type": "string"
        },
        "gpgKey": {
          "description": "URI of the key file for this repository. The agent maintains a keyring at `/etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg` containing all the keys in any applied guest policy.",
          "type": "string"
        },
        "components": {
          "type": "array",
          "description": "Required. List of components for this repository. Must contain at least one item.",
          "items": {
            "type": "string"
          }
        },
        "archiveType": {
          "enumDescriptions": [
            "Unspecified.",
            "DEB indicates that the archive contains binary files.",
            "DEB_SRC indicates that the archive contains source files."
          ],
          "type": "string",
          "description": "Type of archive files in this repository. The default behavior is DEB.",
          "enum": [
            "ARCHIVE_TYPE_UNSPECIFIED",
            "DEB",
            "DEB_SRC"
          ]
        },
        "distribution": {
          "type": "string",
          "description": "Required. Distribution of this repository."
        }
      }
    },
    "OneTimeSchedule": {
      "properties": {
        "executeTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Required. The desired patch job execution time."
        }
      },
      "type": "object",
      "description": "Sets the time for a one time patch deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
      "id": "OneTimeSchedule"
    },
    "EffectiveGuestPolicy": {
      "id": "EffectiveGuestPolicy",
      "type": "object",
      "properties": {
        "packageRepositories": {
          "description": "List of package repository configurations assigned to the VM instance.",
          "items": {
            "$ref": "EffectiveGuestPolicySourcedPackageRepository"
          },
          "type": "array"
        },
        "softwareRecipes": {
          "items": {
            "$ref": "EffectiveGuestPolicySourcedSoftwareRecipe"
          },
          "description": "List of recipes assigned to the VM instance.",
          "type": "array"
        },
        "packages": {
          "items": {
            "$ref": "EffectiveGuestPolicySourcedPackage"
          },
          "type": "array",
          "description": "List of package configurations assigned to the VM instance."
        }
      },
      "description": "The effective guest policy that applies to a VM instance."
    },
    "PatchDeployment": {
      "description": "Patch deployments are configurations that individual patch jobs use to complete a patch. These configurations include instance filter, package repository settings, and a schedule. For more information about creating and managing patch deployments, see [Scheduling patch jobs](https://cloud.google.com/compute/docs/os-patch-management/schedule-patch-jobs).",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. Time the patch deployment was last updated. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Unique name for the patch deployment resource in a project. The patch deployment name is in the form: `projects/{project_id}/patchDeployments/{patch_deployment_id}`. This field is ignored when you create a new patch deployment."
        },
        "oneTimeSchedule": {
          "description": "Required. Schedule a one-time execution.",
          "$ref": "OneTimeSchedule"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the patch deployment. Length of the description is limited to 1024 characters."
        },
        "duration": {
          "format": "google-duration",
          "description": "Optional. Duration of the patch. After the duration ends, the patch times out.",
          "type": "string"
        },
        "rollout": {
          "$ref": "PatchRollout",
          "description": "Optional. Rollout strategy of the patch job."
        },
        "lastExecuteTime": {
          "format": "google-datetime",
          "description": "Output only. The last time a patch job was started by this deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "type": "string",
          "readOnly": true
        },
        "recurringSchedule": {
          "description": "Required. Schedule recurring executions.",
          "$ref": "RecurringSchedule"
        },
        "instanceFilter": {
          "$ref": "PatchInstanceFilter",
          "description": "Required. VM instances to patch."
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Time the patch deployment was created. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "format": "google-datetime"
        },
        "patchConfig": {
          "$ref": "PatchConfig",
          "description": "Optional. Patch configuration that is applied."
        }
      },
      "id": "PatchDeployment",
      "type": "object"
    },
    "TimeZone": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\"."
        },
        "version": {
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
          "type": "string"
        }
      },
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "id": "TimeZone"
    },
    "FixedOrPercent": {
      "type": "object",
      "description": "Message encapsulating a value that can be either absolute (\"fixed\") or relative (\"percent\") to a value.",
      "id": "FixedOrPercent",
      "properties": {
        "percent": {
          "description": "Specifies the relative value defined as a percentage, which will be multiplied by a reference value.",
          "format": "int32",
          "type": "integer"
        },
        "fixed": {
          "description": "Specifies a fixed value.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "WeeklySchedule": {
      "id": "WeeklySchedule",
      "description": "Represents a weekly schedule.",
      "type": "object",
      "properties": {
        "dayOfWeek": {
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ],
          "enumDescriptions": [
            "The day of the week is unspecified.",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "type": "string",
          "description": "Required. Day of the week."
        }
      }
    },
    "ListPatchJobsResponse": {
      "description": "A response message for listing patch jobs.",
      "properties": {
        "patchJobs": {
          "items": {
            "$ref": "PatchJob"
          },
          "description": "The list of patch jobs.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token that can be used to get the next page of results."
        }
      },
      "id": "ListPatchJobsResponse",
      "type": "object"
    }
  },
  "version": "v1beta",
  "rootUrl": "https://osconfig.googleapis.com/",
  "title": "OS Config API",
  "name": "osconfig",
  "protocol": "rest",
  "discoveryVersion": "v1",
  "servicePath": "",
  "batchPath": "batch",
  "id": "osconfig:v1beta",
  "canonicalName": "OS Config",
  "ownerName": "Google",
  "mtlsRootUrl": "https://osconfig.mtls.googleapis.com/",
  "ownerDomain": "google.com",
  "fullyEncodeReservedExpansion": true,
  "baseUrl": "https://osconfig.googleapis.com/",
  "revision": "20210421",
  "parameters": {
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response."
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    }
  },
  "documentationLink": "https://cloud.google.com/compute/docs/osconfig/rest",
  "description": "OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "patchDeployments": {
          "methods": {
            "list": {
              "path": "v1beta/{+parent}/patchDeployments",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1beta/projects/{projectsId}/patchDeployments",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListPatchDeploymentsResponse"
              },
              "description": "Get a page of OS Config patch deployments.",
              "id": "osconfig.projects.patchDeployments.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional. A pagination token returned from a previous call to ListPatchDeployments that indicates where this listing should continue from."
                },
                "pageSize": {
                  "type": "integer",
                  "description": "Optional. The maximum number of patch deployments to return. Default is 100.",
                  "format": "int32",
                  "location": "query"
                },
                "parent": {
                  "description": "Required. The resource name of the parent in the form `projects/*`.",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+$"
                }
              }
            },
            "delete": {
              "httpMethod": "DELETE",
              "description": "Delete an OS Config patch deployment.",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta/projects/{projectsId}/patchDeployments/{patchDeploymentsId}",
              "path": "v1beta/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/patchDeployments/[^/]+$",
                  "description": "Required. The resource name of the patch deployment in the form `projects/*/patchDeployments/*`.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "id": "osconfig.projects.patchDeployments.delete"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "osconfig.projects.patchDeployments.get",
              "path": "v1beta/{+name}",
              "flatPath": "v1beta/projects/{projectsId}/patchDeployments/{patchDeploymentsId}",
              "parameters": {
                "name": {
                  "description": "Required. The resource name of the patch deployment in the form `projects/*/patchDeployments/*`.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/patchDeployments/[^/]+$",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "PatchDeployment"
              },
              "description": "Get an OS Config patch deployment."
            },
            "create": {
              "response": {
                "$ref": "PatchDeployment"
              },
              "parameterOrder": [
                "parent"
              ],
              "path": "v1beta/{+parent}/patchDeployments",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "patchDeploymentId": {
                  "type": "string",
                  "location": "query",
                  "description": "Required. A name for the patch deployment in the project. When creating a name the following rules apply: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the project."
                },
                "parent": {
                  "location": "path",
                  "description": "Required. The project to apply this patch deployment to in the form `projects/*`.",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1beta/projects/{projectsId}/patchDeployments",
              "id": "osconfig.projects.patchDeployments.create",
              "description": "Create an OS Config patch deployment.",
              "request": {
                "$ref": "PatchDeployment"
              },
              "httpMethod": "POST"
            }
          }
        },
        "zones": {
          "resources": {
            "instances": {
              "methods": {
                "lookupEffectiveGuestPolicy": {
                  "description": "Lookup the effective guest policy that applies to a VM instance. This lookup merges all policies that are assigned to the instance ancestry.",
                  "parameters": {
                    "instance": {
                      "description": "Required. The VM instance whose policies are being looked up.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/zones/[^/]+/instances/[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "LookupEffectiveGuestPolicyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "instance"
                  ],
                  "path": "v1beta/{+instance}:lookupEffectiveGuestPolicy",
                  "flatPath": "v1beta/projects/{projectsId}/zones/{zonesId}/instances/{instancesId}:lookupEffectiveGuestPolicy",
                  "id": "osconfig.projects.zones.instances.lookupEffectiveGuestPolicy",
                  "response": {
                    "$ref": "EffectiveGuestPolicy"
                  },
                  "httpMethod": "POST"
                }
              }
            }
          }
        },
        "patchJobs": {
          "resources": {
            "instanceDetails": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListPatchJobInstanceDetailsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/patchJobs/{patchJobsId}/instanceDetails",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent for the instances are in the form of `projects/*/patchJobs/*`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/patchJobs/[^/]+$",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of instance details records to return. Default is 100."
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "A filter expression that filters results listed in the response. This field supports filtering results by instance zone, name, state, or `failure_reason`."
                    },
                    "pageToken": {
                      "description": "A pagination token returned from a previous call that indicates where this listing should continue from.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Get a list of instance details for a given patch job.",
                  "id": "osconfig.projects.patchJobs.instanceDetails.list",
                  "httpMethod": "GET",
                  "path": "v1beta/{+parent}/instanceDetails"
                }
              }
            }
          },
          "methods": {
            "get": {
              "flatPath": "v1beta/projects/{projectsId}/patchJobs/{patchJobsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "osconfig.projects.patchJobs.get",
              "httpMethod": "GET",
              "path": "v1beta/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. Name of the patch in the form `projects/*/patchJobs/*`",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/patchJobs/[^/]+$",
                  "location": "path"
                }
              },
              "description": "Get the patch job. This can be used to track the progress of an ongoing patch job or review the details of completed jobs.",
              "response": {
                "$ref": "PatchJob"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "cancel": {
              "id": "osconfig.projects.patchJobs.cancel",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/patchJobs/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. Name of the patch in the form `projects/*/patchJobs/*`"
                }
              },
              "path": "v1beta/{+name}:cancel",
              "request": {
                "$ref": "CancelPatchJobRequest"
              },
              "description": "Cancel a patch job. The patch job must be active. Canceled patch jobs cannot be restarted.",
              "flatPath": "v1beta/projects/{projectsId}/patchJobs/{patchJobsId}:cancel",
              "response": {
                "$ref": "PatchJob"
              }
            },
            "list": {
              "response": {
                "$ref": "ListPatchJobsResponse"
              },
              "flatPath": "v1beta/projects/{projectsId}/patchJobs",
              "id": "osconfig.projects.patchJobs.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "description": "Get a list of patch jobs.",
              "parameters": {
                "parent": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. In the form of `projects/*`"
                },
                "filter": {
                  "description": "If provided, this field specifies the criteria that must be met by patch jobs to be included in the response. Currently, filtering is only available on the patch_deployment field.",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A pagination token returned from a previous call that indicates where this listing should continue from.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of instance status to return.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "path": "v1beta/{+parent}/patchJobs",
              "parameterOrder": [
                "parent"
              ]
            },
            "execute": {
              "response": {
                "$ref": "PatchJob"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "osconfig.projects.patchJobs.execute",
              "path": "v1beta/{+parent}/patchJobs:execute",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "flatPath": "v1beta/projects/{projectsId}/patchJobs:execute",
              "description": "Patch VM instances by creating and running a patch job.",
              "parameters": {
                "parent": {
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The project in which to run this patch in the form `projects/*`",
                  "required": true,
                  "type": "string"
                }
              },
              "request": {
                "$ref": "ExecutePatchJobRequest"
              }
            }
          }
        },
        "guestPolicies": {
          "methods": {
            "create": {
              "id": "osconfig.projects.guestPolicies.create",
              "path": "v1beta/{+parent}/guestPolicies",
              "request": {
                "$ref": "GuestPolicy"
              },
              "response": {
                "$ref": "GuestPolicy"
              },
              "httpMethod": "POST",
              "flatPath": "v1beta/projects/{projectsId}/guestPolicies",
              "parameters": {
                "parent": {
                  "description": "Required. The resource name of the parent using one of the following forms: `projects/{project_number}`.",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$"
                },
                "guestPolicyId": {
                  "type": "string",
                  "location": "query",
                  "description": "Required. The logical name of the guest policy in the project with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the project."
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Create an OS Config guest policy."
            },
            "get": {
              "httpMethod": "GET",
              "path": "v1beta/{+name}",
              "flatPath": "v1beta/projects/{projectsId}/guestPolicies/{guestPoliciesId}",
              "description": "Get an OS Config guest policy.",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/guestPolicies/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. The resource name of the guest policy using one of the following forms: `projects/{project_number}/guestPolicies/{guest_policy_id}`."
                }
              },
              "id": "osconfig.projects.guestPolicies.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GuestPolicy"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "id": "osconfig.projects.guestPolicies.list",
              "path": "v1beta/{+parent}/guestPolicies",
              "parameterOrder": [
                "parent"
              ],
              "description": "Get a page of OS Config guest policies.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta/projects/{projectsId}/guestPolicies",
              "httpMethod": "GET",
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of guest policies to return."
                },
                "parent": {
                  "location": "path",
                  "description": "Required. The resource name of the parent using one of the following forms: `projects/{project_number}`.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A pagination token returned from a previous call to `ListGuestPolicies` that indicates where this listing should continue from.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "ListGuestPoliciesResponse"
              }
            },
            "delete": {
              "id": "osconfig.projects.guestPolicies.delete",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The resource name of the guest policy using one of the following forms: `projects/{project_number}/guestPolicies/{guest_policy_id}`.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/guestPolicies/[^/]+$"
                }
              },
              "description": "Delete an OS Config guest policy.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v1beta/projects/{projectsId}/guestPolicies/{guestPoliciesId}",
              "path": "v1beta/{+name}",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ]
            },
            "patch": {
              "flatPath": "v1beta/projects/{projectsId}/guestPolicies/{guestPoliciesId}",
              "description": "Update an OS Config guest policy.",
              "httpMethod": "PATCH",
              "response": {
                "$ref": "GuestPolicy"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. Unique name of the resource in this project using one of the following forms: `projects/{project_number}/guestPolicies/{guest_policy_id}`.",
                  "required": true,
                  "pattern": "^projects/[^/]+/guestPolicies/[^/]+$"
                },
                "updateMask": {
                  "description": "Field mask that controls which fields of the guest policy should be updated.",
                  "location": "query",
                  "format": "google-fieldmask",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "id": "osconfig.projects.guestPolicies.patch",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1beta/{+name}",
              "request": {
                "$ref": "GuestPolicy"
              }
            }
          }
        }
      }
    }
  }
}

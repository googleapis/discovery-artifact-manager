{
  "baseUrl": "https://networkconnectivity.googleapis.com/",
  "name": "networkconnectivity",
  "schemas": {
    "GoogleLongrunningListOperationsResponse": {
      "id": "GoogleLongrunningListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "GoogleLongrunningOperation": {
      "id": "GoogleLongrunningOperation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {}
    },
    "GoogleLongrunningCancelOperationRequest": {
      "id": "GoogleLongrunningCancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {}
    },
    "ListServiceConnectionMapsResponse": {
      "id": "ListServiceConnectionMapsResponse",
      "description": "Response for ListServiceConnectionMaps.",
      "type": "object",
      "properties": {
        "serviceConnectionMaps": {
          "description": "ServiceConnectionMaps to be returned.",
          "type": "array",
          "items": {
            "$ref": "ServiceConnectionMap"
          }
        },
        "nextPageToken": {
          "description": "The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ServiceConnectionMap": {
      "id": "ServiceConnectionMap",
      "description": "The ServiceConnectionMap resource. Next id: 15",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time when the ServiceConnectionMap was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time when the ServiceConnectionMap was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "User-defined labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "A description of this resource.",
          "type": "string"
        },
        "serviceClass": {
          "description": "The service class identifier this ServiceConnectionMap is for. The user of ServiceConnectionMap create API needs to have networkconnecitivty.serviceclasses.use iam permission for the service class.",
          "type": "string"
        },
        "serviceClassUri": {
          "description": "Output only. The service class uri this ServiceConnectionMap is for.",
          "readOnly": true,
          "type": "string"
        },
        "infrastructure": {
          "description": "Output only. The infrastructure used for connections between consumers/producers.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "An invalid infrastructure as the default case.",
            "Private Service Connect is used for connections."
          ],
          "enum": [
            "INFRASTRUCTURE_UNSPECIFIED",
            "PSC"
          ]
        },
        "producerPscConfigs": {
          "description": "The PSC configurations on producer side.",
          "type": "array",
          "items": {
            "$ref": "ProducerPscConfig"
          }
        },
        "consumerPscConfigs": {
          "description": "The PSC configurations on consumer side.",
          "type": "array",
          "items": {
            "$ref": "ConsumerPscConfig"
          }
        },
        "consumerPscConnections": {
          "description": "Output only. PSC connection details on consumer side.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "ConsumerPscConnection"
          }
        },
        "token": {
          "description": "The token provided by the consumer. This token authenticates that the consumer can create a connecton within the specified project and network.",
          "type": "string"
        },
        "etag": {
          "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        }
      }
    },
    "ProducerPscConfig": {
      "id": "ProducerPscConfig",
      "description": "The PSC configurations on producer side.",
      "type": "object",
      "properties": {
        "serviceAttachmentUri": {
          "description": "The resource path of a service attachment. Example: projects/{projectNumOrId}/regions/{region}/serviceAttachments/{resourceId}.",
          "type": "string"
        }
      }
    },
    "ConsumerPscConfig": {
      "id": "ConsumerPscConfig",
      "description": "Allow the producer to specify which consumers can connect to it.",
      "type": "object",
      "properties": {
        "project": {
          "description": "The consumer project where PSC connections are allowed to be created in.",
          "type": "string"
        },
        "network": {
          "description": "The resource path of the consumer network where PSC connections are allowed to be created in. Note, this network does not need be in the ConsumerPscConfig.project in the case of SharedVPC. Example: projects/{projectNumOrId}/global/networks/{networkId}.",
          "type": "string"
        },
        "disableGlobalAccess": {
          "description": "This is used in PSC consumer ForwardingRule to control whether the PSC endpoint can be accessed from another region.",
          "type": "boolean"
        },
        "state": {
          "description": "Output only. Overall state of PSC Connections management for this consumer psc config.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Default state, when Connection Map is created initially.",
            "Set when policy and map configuration is valid, and their matching can lead to allowing creation of PSC Connections subject to other constraints like connections limit.",
            "No Service Connection Policy found for this network and Service Class",
            "Service Connection Policy limit reached for this network and Service Class"
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "VALID",
            "CONNECTION_POLICY_MISSING",
            "POLICY_LIMIT_REACHED"
          ]
        },
        "producerInstanceId": {
          "description": "Immutable. An immutable identifier for the producer instance.",
          "type": "string"
        },
        "serviceAttachmentIpAddressMap": {
          "description": "Output only. A map to store mapping between customer vip and target service attachment. Only service attachment with producer specified ip addresses are stored here.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "consumerInstanceProject": {
          "description": "Required. The project ID or project number of the consumer project. This project is the one that the consumer uses to interact with the producer instance. From the perspective of a consumer who's created a producer instance, this is the project of the producer instance. Format: 'projects/' Eg. 'projects/consumer-project' or 'projects/1234'",
          "type": "string"
        }
      }
    },
    "ConsumerPscConnection": {
      "id": "ConsumerPscConnection",
      "description": "PSC connection details on consumer side.",
      "type": "object",
      "properties": {
        "serviceAttachmentUri": {
          "description": "The URI of a service attachment which is the target of the PSC connection.",
          "type": "string"
        },
        "state": {
          "description": "The state of the PSC connection.",
          "type": "string",
          "enumDescriptions": [
            "An invalid state as the default case.",
            "The connection is fully established and ready to use.",
            "The connection is not functional since some resources on the connection fail to be created.",
            "The connection is being created.",
            "The connection is being deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "FAILED",
            "CREATING",
            "DELETING"
          ]
        },
        "project": {
          "description": "The consumer project whose PSC forwarding rule is connected to the service attachments in this service connection map.",
          "type": "string"
        },
        "network": {
          "description": "The consumer network whose PSC forwarding rule is connected to the service attachments in this service connection map. Note that the network could be on a different project (shared VPC).",
          "type": "string"
        },
        "pscConnectionId": {
          "description": "The PSC connection id of the PSC forwarding rule connected to the service attachments in this service connection map.",
          "type": "string"
        },
        "ip": {
          "description": "The IP literal allocated on the consumer network for the PSC forwarding rule that is created to connect to the producer service attachment in this service connection map.",
          "type": "string"
        },
        "errorType": {
          "description": "The error type indicates whether the error is consumer facing, producer facing or system internal.",
          "type": "string",
          "enumDescriptions": [
            "An invalid error type as the default case.",
            "The error is due to Service Automation system internal.",
            "The error is due to the setup on consumer side.",
            "The error is due to the setup on producer side."
          ],
          "enum": [
            "CONNECTION_ERROR_TYPE_UNSPECIFIED",
            "ERROR_INTERNAL",
            "ERROR_CONSUMER_SIDE",
            "ERROR_PRODUCER_SIDE"
          ]
        },
        "error": {
          "description": "The most recent error during operating this connection.",
          "deprecated": true,
          "$ref": "GoogleRpcStatus"
        },
        "gceOperation": {
          "description": "The last Compute Engine operation to setup PSC connection.",
          "type": "string"
        },
        "forwardingRule": {
          "description": "The URI of the consumer forwarding rule created. Example: projects/{projectNumOrId}/regions/us-east1/networks/{resourceId}.",
          "type": "string"
        },
        "errorInfo": {
          "description": "Output only. The error info for the latest error during operating this connection.",
          "readOnly": true,
          "$ref": "GoogleRpcErrorInfo"
        },
        "selectedSubnetwork": {
          "description": "Output only. The URI of the selected subnetwork selected to allocate IP address for this connection.",
          "readOnly": true,
          "type": "string"
        },
        "producerInstanceId": {
          "description": "Immutable. An immutable identifier for the producer instance.",
          "type": "string"
        }
      }
    },
    "GoogleRpcErrorInfo": {
      "id": "GoogleRpcErrorInfo",
      "description": "Describes the cause of the error with structured details. Example of an error when contacting the \"pubsub.googleapis.com\" API when it is not enabled: { \"reason\": \"API_DISABLED\" \"domain\": \"googleapis.com\" \"metadata\": { \"resource\": \"projects/123\", \"service\": \"pubsub.googleapis.com\" } } This response indicates that the pubsub.googleapis.com API is not enabled. Example of an error that is returned when attempting to create a Spanner instance in a region that is out of stock: { \"reason\": \"STOCKOUT\" \"domain\": \"spanner.googleapis.com\", \"metadata\": { \"availableRegions\": \"us-central1,us-east2\" } }",
      "type": "object",
      "properties": {
        "reason": {
          "description": "The reason of the error. This is a constant value that identifies the proximate cause of the error. Error reasons are unique within a particular domain of errors. This should be at most 63 characters and match a regular expression of `A-Z+[A-Z0-9]`, which represents UPPER_SNAKE_CASE.",
          "type": "string"
        },
        "domain": {
          "description": "The logical grouping to which the \"reason\" belongs. The error domain is typically the registered service name of the tool or product that generates the error. Example: \"pubsub.googleapis.com\". If the error is generated by some common infrastructure, the error domain must be a globally unique value that identifies the infrastructure. For Google API infrastructure, the error domain is \"googleapis.com\".",
          "type": "string"
        },
        "metadata": {
          "description": "Additional structured details about this error. Keys must match /a-z+/ but should ideally be lowerCamelCase. Also they must be limited to 64 characters in length. When identifying the current value of an exceeded limit, the units should be contained in the key, not the value. For example, rather than {\"instanceLimit\": \"100/request\"}, should be returned as, {\"instanceLimitPerRequest\": \"100\"}, if the client exceeds the number of instances that can be created in a single (batch) request.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ListServiceConnectionPoliciesResponse": {
      "id": "ListServiceConnectionPoliciesResponse",
      "description": "Response for ListServiceConnectionPolicies.",
      "type": "object",
      "properties": {
        "serviceConnectionPolicies": {
          "description": "ServiceConnectionPolicies to be returned.",
          "type": "array",
          "items": {
            "$ref": "ServiceConnectionPolicy"
          }
        },
        "nextPageToken": {
          "description": "The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ServiceConnectionPolicy": {
      "id": "ServiceConnectionPolicy",
      "description": "The ServiceConnectionPolicy resource. Next id: 12",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time when the ServiceConnectionMap was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time when the ServiceConnectionMap was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "User-defined labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "A description of this resource.",
          "type": "string"
        },
        "network": {
          "description": "The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.",
          "type": "string"
        },
        "serviceClass": {
          "description": "The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass. It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.",
          "type": "string"
        },
        "infrastructure": {
          "description": "Output only. The type of underlying resources used to create the connection.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "An invalid infrastructure as the default case.",
            "Private Service Connect is used for connections."
          ],
          "enum": [
            "INFRASTRUCTURE_UNSPECIFIED",
            "PSC"
          ]
        },
        "pscConfig": {
          "description": "Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.",
          "$ref": "PscConfig"
        },
        "pscConnections": {
          "description": "Output only. [Output only] Information about each Private Service Connect connection.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "PscConnection"
          }
        },
        "etag": {
          "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        }
      }
    },
    "PscConfig": {
      "id": "PscConfig",
      "description": "Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.",
      "type": "object",
      "properties": {
        "subnetworks": {
          "description": "The resource paths of subnetworks to use for IP address management. Example: projects/{projectNumOrId}/regions/{region}/subnetworks/{resourceId}.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "limit": {
          "description": "Optional. Max number of PSC connections for this policy.",
          "type": "string",
          "format": "int64"
        },
        "producerInstanceLocation": {
          "description": "Required. ProducerInstanceLocation is used to specify which authorization mechanism to use to determine which projects the Producer instance can be within.",
          "type": "string",
          "enumDescriptions": [
            "Producer instance location is not specified. When this option is chosen, then the PSC connections created by this ServiceConnectionPolicy must be within the same project as the Producer instance. This is the default ProducerInstanceLocation value. To allow for PSC connections from this network to other networks, use the CUSTOM_RESOURCE_HIERARCHY_LEVELS option.",
            "Producer instance must be within one of the values provided in allowed_google_producers_resource_hierarchy_level."
          ],
          "enum": [
            "PRODUCER_INSTANCE_LOCATION_UNSPECIFIED",
            "CUSTOM_RESOURCE_HIERARCHY_LEVELS"
          ]
        },
        "allowedGoogleProducersResourceHierarchyLevel": {
          "description": "Optional. List of Projects, Folders, or Organizations from where the Producer instance can be within. For example, a network administrator can provide both 'organizations/foo' and 'projects/bar' as allowed_google_producers_resource_hierarchy_levels. This allowlists this network to connect with any Producer instance within the 'foo' organization or the 'bar' project. By default, allowed_google_producers_resource_hierarchy_level is empty. The format for each allowed_google_producers_resource_hierarchy_level is / where is one of 'projects', 'folders', or 'organizations' and is either the ID or the number of the resource type. Format for each allowed_google_producers_resource_hierarchy_level value: 'projects/' or 'folders/' or 'organizations/' Eg. [projects/my-project-id, projects/567, folders/891, organizations/123]",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PscConnection": {
      "id": "PscConnection",
      "description": "Information about a specific Private Service Connect connection.",
      "type": "object",
      "properties": {
        "state": {
          "description": "State of the PSC Connection",
          "type": "string",
          "enumDescriptions": [
            "An invalid state as the default case.",
            "The connection is fully established and ready to use.",
            "The connection is not functional since some resources on the connection fail to be created.",
            "The connection is being created.",
            "The connection is being deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "FAILED",
            "CREATING",
            "DELETING"
          ]
        },
        "consumerForwardingRule": {
          "description": "The resource reference of the PSC Forwarding Rule within the consumer VPC.",
          "type": "string"
        },
        "consumerAddress": {
          "description": "The resource reference of the consumer address.",
          "type": "string"
        },
        "errorType": {
          "description": "The error type indicates whether the error is consumer facing, producer facing or system internal.",
          "type": "string",
          "enumDescriptions": [
            "An invalid error type as the default case.",
            "The error is due to Service Automation system internal.",
            "The error is due to the setup on consumer side.",
            "The error is due to the setup on producer side."
          ],
          "enum": [
            "CONNECTION_ERROR_TYPE_UNSPECIFIED",
            "ERROR_INTERNAL",
            "ERROR_CONSUMER_SIDE",
            "ERROR_PRODUCER_SIDE"
          ]
        },
        "error": {
          "description": "The most recent error during operating this connection.",
          "deprecated": true,
          "$ref": "GoogleRpcStatus"
        },
        "gceOperation": {
          "description": "The last Compute Engine operation to setup PSC connection.",
          "type": "string"
        },
        "consumerTargetProject": {
          "description": "The project where the PSC connection is created.",
          "type": "string"
        },
        "pscConnectionId": {
          "description": "The PSC connection id of the PSC forwarding rule.",
          "type": "string"
        },
        "errorInfo": {
          "description": "Output only. The error info for the latest error during operating this connection.",
          "readOnly": true,
          "$ref": "GoogleRpcErrorInfo"
        },
        "selectedSubnetwork": {
          "description": "Output only. The URI of the subnetwork selected to allocate IP address for this connection.",
          "readOnly": true,
          "type": "string"
        },
        "producerInstanceId": {
          "description": "Immutable. An immutable identifier for the producer instance.",
          "type": "string"
        }
      }
    },
    "ListServiceClassesResponse": {
      "id": "ListServiceClassesResponse",
      "description": "Response for ListServiceClasses.",
      "type": "object",
      "properties": {
        "serviceClasses": {
          "description": "ServiceClasses to be returned.",
          "type": "array",
          "items": {
            "$ref": "ServiceClass"
          }
        },
        "nextPageToken": {
          "description": "The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ServiceClass": {
      "id": "ServiceClass",
      "description": "The ServiceClass resource. Next id: 9",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The name of a ServiceClass resource. Format: projects/{project}/locations/{location}/serviceClasses/{service_class} See: https://google.aip.dev/122#fields-representing-resource-names",
          "type": "string"
        },
        "serviceClass": {
          "description": "Output only. The generated service class name. Use this name to refer to the Service class in Service Connection Maps and Service Connection Policies.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time when the ServiceClass was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time when the ServiceClass was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "User-defined labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "A description of this resource.",
          "type": "string"
        },
        "etag": {
          "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        }
      }
    },
    "ServiceConnectionToken": {
      "id": "ServiceConnectionToken",
      "description": "The ServiceConnectionToken resource. Next id: 10",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The name of a ServiceConnectionToken. Format: projects/{project}/locations/{location}/ServiceConnectionTokens/{service_connection_token} See: https://google.aip.dev/122#fields-representing-resource-names",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time when the ServiceConnectionToken was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time when the ServiceConnectionToken was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "User-defined labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "A description of this resource.",
          "type": "string"
        },
        "network": {
          "description": "The resource path of the network associated with this token. Example: projects/{projectNumOrId}/global/networks/{resourceId}.",
          "type": "string"
        },
        "token": {
          "description": "Output only. The token generated by Automation.",
          "readOnly": true,
          "type": "string"
        },
        "expireTime": {
          "description": "Output only. The time to which this token is valid.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "etag": {
          "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        }
      }
    },
    "ListServiceConnectionTokensResponse": {
      "id": "ListServiceConnectionTokensResponse",
      "description": "Response for ListServiceConnectionTokens.",
      "type": "object",
      "properties": {
        "serviceConnectionTokens": {
          "description": "ServiceConnectionTokens to be returned.",
          "type": "array",
          "items": {
            "$ref": "ServiceConnectionToken"
          }
        },
        "nextPageToken": {
          "description": "The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListHubsResponse": {
      "id": "ListHubsResponse",
      "description": "Response for HubService.ListHubs method.",
      "type": "object",
      "properties": {
        "hubs": {
          "description": "The requested hubs.",
          "type": "array",
          "items": {
            "$ref": "Hub"
          }
        },
        "nextPageToken": {
          "description": "The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Hub": {
      "id": "Hub",
      "description": "A Network Connectivity Center hub is a global management resource to which you attach spokes. A single hub can contain spokes from multiple regions. However, if any of a hub's spokes use the site-to-site data transfer feature, the resources associated with those spokes must all be in the same VPC network. Spokes that do not use site-to-site data transfer can be associated with any VPC network in your project.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The name of the hub. Hub names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}`",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time the hub was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The time the hub was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "An optional description of the hub.",
          "type": "string"
        },
        "uniqueId": {
          "description": "Output only. The Google-generated UUID for the hub. This value is unique across all hub resources. If a hub is deleted and another with the same name is created, the new hub is assigned a different unique_id.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "Output only. The current lifecycle state of this hub.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No state information available",
            "The resource's create operation is in progress.",
            "The resource is active",
            "The resource's delete operation is in progress.",
            "The resource's accept operation is in progress.",
            "The resource's reject operation is in progress.",
            "The resource's update operation is in progress.",
            "The resource is inactive.",
            "The hub associated with this spoke resource has been deleted. This state applies to spoke resources only."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING",
            "ACCEPTING",
            "REJECTING",
            "UPDATING",
            "INACTIVE",
            "OBSOLETE"
          ]
        },
        "routingVpcs": {
          "description": "The VPC networks associated with this hub's spokes. This field is read-only. Network Connectivity Center automatically populates it based on the set of spokes attached to the hub.",
          "type": "array",
          "items": {
            "$ref": "RoutingVPC"
          }
        },
        "routeTables": {
          "description": "Output only. The route tables that belong to this hub. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}/routeTables/{route_table_id}` This field is read-only. Network Connectivity Center automatically populates it based on the route tables nested under the hub.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "spokeSummary": {
          "description": "Output only. A summary of the spokes associated with a hub. The summary includes a count of spokes according to type and according to state. If any spokes are inactive, the summary also lists the reasons they are inactive, including a count for each reason.",
          "readOnly": true,
          "$ref": "SpokeSummary"
        },
        "policyMode": {
          "description": "Optional. The policy mode of this hub. This field can be either PRESET or CUSTOM. If unspecified, the policy_mode defaults to PRESET.",
          "type": "string",
          "enumDescriptions": [
            "Policy mode is unspecified. It defaults to PRESET with preset_topology = MESH.",
            "Hub uses one of the preset topologies."
          ],
          "enum": [
            "POLICY_MODE_UNSPECIFIED",
            "PRESET"
          ]
        },
        "presetTopology": {
          "description": "Optional. The topology implemented in this hub. Currently, this field is only used when policy_mode = PRESET. The available preset topologies are MESH and STAR. If preset_topology is unspecified and policy_mode = PRESET, the preset_topology defaults to MESH. When policy_mode = CUSTOM, the preset_topology is set to PRESET_TOPOLOGY_UNSPECIFIED.",
          "type": "string",
          "enumDescriptions": [
            "Preset topology is unspecified. When policy_mode = PRESET, it defaults to MESH.",
            "Mesh topology is implemented. Group `default` is automatically created. All spokes in the hub are added to group `default`.",
            "Star topology is implemented. Two groups, `center` and `edge`, are automatically created along with hub creation. Spokes have to join one of the groups during creation."
          ],
          "enum": [
            "PRESET_TOPOLOGY_UNSPECIFIED",
            "MESH",
            "STAR"
          ]
        },
        "exportPsc": {
          "description": "Optional. Whether Private Service Connect transitivity is enabled for the hub. If true, Private Service Connect endpoints in VPC spokes attached to the hub are made accessible to other VPC spokes attached to the hub. The default value is false.",
          "type": "boolean"
        }
      }
    },
    "RoutingVPC": {
      "id": "RoutingVPC",
      "description": "RoutingVPC contains information about the VPC networks associated with the spokes of a Network Connectivity Center hub.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The URI of the VPC network.",
          "type": "string"
        },
        "requiredForNewSiteToSiteDataTransferSpokes": {
          "description": "Output only. If true, indicates that this VPC network is currently associated with spokes that use the data transfer feature (spokes where the site_to_site_data_transfer field is set to true). If you create new spokes that use data transfer, they must be associated with this VPC network. At most, one VPC network will have this field set to true.",
          "readOnly": true,
          "type": "boolean"
        }
      }
    },
    "SpokeSummary": {
      "id": "SpokeSummary",
      "description": "Summarizes information about the spokes associated with a hub. The summary includes a count of spokes according to type and according to state. If any spokes are inactive, the summary also lists the reasons they are inactive, including a count for each reason.",
      "type": "object",
      "properties": {
        "spokeTypeCounts": {
          "description": "Output only. Counts the number of spokes of each type that are associated with a specific hub.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "SpokeTypeCount"
          }
        },
        "spokeStateCounts": {
          "description": "Output only. Counts the number of spokes that are in each state and associated with a given hub.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "SpokeStateCount"
          }
        },
        "spokeStateReasonCounts": {
          "description": "Output only. Counts the number of spokes that are inactive for each possible reason and associated with a given hub.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "SpokeStateReasonCount"
          }
        }
      }
    },
    "SpokeTypeCount": {
      "id": "SpokeTypeCount",
      "description": "The number of spokes of a given type that are associated with a specific hub. The type indicates what kind of resource is associated with the spoke.",
      "type": "object",
      "properties": {
        "spokeType": {
          "description": "Output only. The type of the spokes.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified spoke type.",
            "Spokes associated with VPN tunnels.",
            "Spokes associated with VLAN attachments.",
            "Spokes associated with router appliance instances.",
            "Spokes associated with VPC networks."
          ],
          "enum": [
            "SPOKE_TYPE_UNSPECIFIED",
            "VPN_TUNNEL",
            "INTERCONNECT_ATTACHMENT",
            "ROUTER_APPLIANCE",
            "VPC_NETWORK"
          ]
        },
        "count": {
          "description": "Output only. The total number of spokes of this type that are associated with the hub.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        }
      }
    },
    "SpokeStateCount": {
      "id": "SpokeStateCount",
      "description": "The number of spokes that are in a particular state and associated with a given hub.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Output only. The state of the spokes.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No state information available",
            "The resource's create operation is in progress.",
            "The resource is active",
            "The resource's delete operation is in progress.",
            "The resource's accept operation is in progress.",
            "The resource's reject operation is in progress.",
            "The resource's update operation is in progress.",
            "The resource is inactive.",
            "The hub associated with this spoke resource has been deleted. This state applies to spoke resources only."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING",
            "ACCEPTING",
            "REJECTING",
            "UPDATING",
            "INACTIVE",
            "OBSOLETE"
          ]
        },
        "count": {
          "description": "Output only. The total number of spokes that are in this state and associated with a given hub.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        }
      }
    },
    "SpokeStateReasonCount": {
      "id": "SpokeStateReasonCount",
      "description": "The number of spokes in the hub that are inactive for this reason.",
      "type": "object",
      "properties": {
        "stateReasonCode": {
          "description": "Output only. The reason that a spoke is inactive.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No information available.",
            "The proposed spoke is pending review.",
            "The proposed spoke has been rejected by the hub administrator.",
            "The spoke has been deactivated internally.",
            "Network Connectivity Center encountered errors while accepting the spoke."
          ],
          "enum": [
            "CODE_UNSPECIFIED",
            "PENDING_REVIEW",
            "REJECTED",
            "PAUSED",
            "FAILED"
          ]
        },
        "count": {
          "description": "Output only. The total number of spokes that are inactive for a particular reason and associated with a given hub.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ListHubSpokesResponse": {
      "id": "ListHubSpokesResponse",
      "description": "The response for HubService.ListHubSpokes.",
      "type": "object",
      "properties": {
        "spokes": {
          "description": "The requested spokes. The spoke fields can be partially populated based on the `view` field in the request message.",
          "type": "array",
          "items": {
            "$ref": "Spoke"
          }
        },
        "nextPageToken": {
          "description": "The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Spoke": {
      "id": "Spoke",
      "description": "A Network Connectivity Center spoke represents one or more network connectivity resources. When you create a spoke, you associate it with a hub. You must also identify a value for exactly one of the following fields: * linked_vpn_tunnels * linked_interconnect_attachments * linked_router_appliance_instances * linked_vpc_network",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The name of the spoke. Spoke names must be unique. They use the following form: `projects/{project_number}/locations/{region}/spokes/{spoke_id}`",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time the spoke was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The time the spoke was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "An optional description of the spoke.",
          "type": "string"
        },
        "hub": {
          "description": "Immutable. The name of the hub that this spoke is attached to.",
          "type": "string"
        },
        "group": {
          "description": "Optional. The name of the group that this spoke is associated with.",
          "type": "string"
        },
        "linkedVpnTunnels": {
          "description": "VPN tunnels that are associated with the spoke.",
          "$ref": "LinkedVpnTunnels"
        },
        "linkedInterconnectAttachments": {
          "description": "VLAN attachments that are associated with the spoke.",
          "$ref": "LinkedInterconnectAttachments"
        },
        "linkedRouterApplianceInstances": {
          "description": "Router appliance instances that are associated with the spoke.",
          "$ref": "LinkedRouterApplianceInstances"
        },
        "linkedVpcNetwork": {
          "description": "Optional. VPC network that is associated with the spoke.",
          "$ref": "LinkedVpcNetwork"
        },
        "uniqueId": {
          "description": "Output only. The Google-generated UUID for the spoke. This value is unique across all spoke resources. If a spoke is deleted and another with the same name is created, the new spoke is assigned a different `unique_id`.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "Output only. The current lifecycle state of this spoke.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No state information available",
            "The resource's create operation is in progress.",
            "The resource is active",
            "The resource's delete operation is in progress.",
            "The resource's accept operation is in progress.",
            "The resource's reject operation is in progress.",
            "The resource's update operation is in progress.",
            "The resource is inactive.",
            "The hub associated with this spoke resource has been deleted. This state applies to spoke resources only."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING",
            "ACCEPTING",
            "REJECTING",
            "UPDATING",
            "INACTIVE",
            "OBSOLETE"
          ]
        },
        "reasons": {
          "description": "Output only. The reasons for current state of the spoke. Only present when the spoke is in the `INACTIVE` state.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "StateReason"
          }
        },
        "spokeType": {
          "description": "Output only. The type of resource associated with the spoke.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified spoke type.",
            "Spokes associated with VPN tunnels.",
            "Spokes associated with VLAN attachments.",
            "Spokes associated with router appliance instances.",
            "Spokes associated with VPC networks."
          ],
          "enum": [
            "SPOKE_TYPE_UNSPECIFIED",
            "VPN_TUNNEL",
            "INTERCONNECT_ATTACHMENT",
            "ROUTER_APPLIANCE",
            "VPC_NETWORK"
          ]
        }
      }
    },
    "LinkedVpnTunnels": {
      "id": "LinkedVpnTunnels",
      "description": "A collection of Cloud VPN tunnel resources. These resources should be redundant HA VPN tunnels that all advertise the same prefixes to Google Cloud. Alternatively, in a passive/active configuration, all tunnels should be capable of advertising the same prefixes.",
      "type": "object",
      "properties": {
        "uris": {
          "description": "The URIs of linked VPN tunnel resources.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "siteToSiteDataTransfer": {
          "description": "A value that controls whether site-to-site data transfer is enabled for these resources. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).",
          "type": "boolean"
        },
        "vpcNetwork": {
          "description": "Output only. The VPC network where these VPN tunnels are located.",
          "readOnly": true,
          "type": "string"
        },
        "includeImportRanges": {
          "description": "Optional. IP ranges allowed to be included during import from hub.(does not control transit connectivity) The only allowed value for now is \"ALL_IPV4_RANGES\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LinkedInterconnectAttachments": {
      "id": "LinkedInterconnectAttachments",
      "description": "A collection of VLAN attachment resources. These resources should be redundant attachments that all advertise the same prefixes to Google Cloud. Alternatively, in active/passive configurations, all attachments should be capable of advertising the same prefixes.",
      "type": "object",
      "properties": {
        "uris": {
          "description": "The URIs of linked interconnect attachment resources",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "siteToSiteDataTransfer": {
          "description": "A value that controls whether site-to-site data transfer is enabled for these resources. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).",
          "type": "boolean"
        },
        "vpcNetwork": {
          "description": "Output only. The VPC network where these VLAN attachments are located.",
          "readOnly": true,
          "type": "string"
        },
        "includeImportRanges": {
          "description": "Optional. IP ranges allowed to be included during import from hub.(does not control transit connectivity) The only allowed value for now is \"ALL_IPV4_RANGES\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LinkedRouterApplianceInstances": {
      "id": "LinkedRouterApplianceInstances",
      "description": "A collection of router appliance instances. If you configure multiple router appliance instances to receive data from the same set of sites outside of Google Cloud, we recommend that you associate those instances with the same spoke.",
      "type": "object",
      "properties": {
        "instances": {
          "description": "The list of router appliance instances.",
          "type": "array",
          "items": {
            "$ref": "RouterApplianceInstance"
          }
        },
        "siteToSiteDataTransfer": {
          "description": "A value that controls whether site-to-site data transfer is enabled for these resources. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).",
          "type": "boolean"
        },
        "vpcNetwork": {
          "description": "Output only. The VPC network where these router appliance instances are located.",
          "readOnly": true,
          "type": "string"
        },
        "includeImportRanges": {
          "description": "Optional. IP ranges allowed to be included during import from hub.(does not control transit connectivity) The only allowed value for now is \"ALL_IPV4_RANGES\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RouterApplianceInstance": {
      "id": "RouterApplianceInstance",
      "description": "A router appliance instance is a Compute Engine virtual machine (VM) instance that acts as a BGP speaker. A router appliance instance is specified by the URI of the VM and the internal IP address of one of the VM's network interfaces.",
      "type": "object",
      "properties": {
        "virtualMachine": {
          "description": "The URI of the VM.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The IP address on the VM to use for peering.",
          "type": "string"
        }
      }
    },
    "LinkedVpcNetwork": {
      "id": "LinkedVpcNetwork",
      "description": "An existing VPC network.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "Required. The URI of the VPC network resource.",
          "type": "string"
        },
        "excludeExportRanges": {
          "description": "Optional. IP ranges encompassing the subnets to be excluded from peering.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeExportRanges": {
          "description": "Optional. IP ranges allowed to be included from peering.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StateReason": {
      "id": "StateReason",
      "description": "The reason a spoke is inactive.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The code associated with this reason.",
          "type": "string",
          "enumDescriptions": [
            "No information available.",
            "The proposed spoke is pending review.",
            "The proposed spoke has been rejected by the hub administrator.",
            "The spoke has been deactivated internally.",
            "Network Connectivity Center encountered errors while accepting the spoke."
          ],
          "enum": [
            "CODE_UNSPECIFIED",
            "PENDING_REVIEW",
            "REJECTED",
            "PAUSED",
            "FAILED"
          ]
        },
        "message": {
          "description": "Human-readable details about this reason.",
          "type": "string"
        },
        "userDetails": {
          "description": "Additional information provided by the user in the RejectSpoke call.",
          "type": "string"
        }
      }
    },
    "ListSpokesResponse": {
      "id": "ListSpokesResponse",
      "description": "The response for HubService.ListSpokes.",
      "type": "object",
      "properties": {
        "spokes": {
          "description": "The requested spokes.",
          "type": "array",
          "items": {
            "$ref": "Spoke"
          }
        },
        "nextPageToken": {
          "description": "The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RejectHubSpokeRequest": {
      "id": "RejectHubSpokeRequest",
      "description": "The request for HubService.RejectHubSpoke.",
      "type": "object",
      "properties": {
        "spokeUri": {
          "description": "Required. The URI of the spoke to reject from the hub.",
          "type": "string"
        },
        "requestId": {
          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        },
        "details": {
          "description": "Optional. Additional information provided by the hub administrator.",
          "type": "string"
        }
      }
    },
    "AcceptHubSpokeRequest": {
      "id": "AcceptHubSpokeRequest",
      "description": "The request for HubService.AcceptHubSpoke.",
      "type": "object",
      "properties": {
        "spokeUri": {
          "description": "Required. The URI of the spoke to accept into the hub.",
          "type": "string"
        },
        "requestId": {
          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      }
    },
    "RouteTable": {
      "id": "RouteTable",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The name of the route table. Route table names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub}/routeTables/{route_table_id}`",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time the route table was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The time the route table was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "An optional description of the route table.",
          "type": "string"
        },
        "uid": {
          "description": "Output only. The Google-generated UUID for the route table. This value is unique across all route table resources. If a route table is deleted and another with the same name is created, the new route table is assigned a different `uid`.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "Output only. The current lifecycle state of this route table.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No state information available",
            "The resource's create operation is in progress.",
            "The resource is active",
            "The resource's delete operation is in progress.",
            "The resource's accept operation is in progress.",
            "The resource's reject operation is in progress.",
            "The resource's update operation is in progress.",
            "The resource is inactive.",
            "The hub associated with this spoke resource has been deleted. This state applies to spoke resources only."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING",
            "ACCEPTING",
            "REJECTING",
            "UPDATING",
            "INACTIVE",
            "OBSOLETE"
          ]
        }
      }
    },
    "Route": {
      "id": "Route",
      "description": "A route defines a path from VM instances within a spoke to a specific destination resource. Only VPC spokes have routes.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The name of the route. Route names must be unique. Route names use the following form: `projects/{project_number}/locations/global/hubs/{hub}/routeTables/{route_table_id}/routes/{route_id}`",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time the route was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The time the route was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "ipCidrRange": {
          "description": "The destination IP address range.",
          "type": "string"
        },
        "type": {
          "description": "Output only. The route's type. Its type is determined by the properties of its IP address range.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No route type information specified",
            "The route leads to a destination within the primary address range of the VPC network's subnet.",
            "The route leads to a destination within the secondary address range of the VPC network's subnet.",
            "The route leads to a destination in a dynamic route. Dynamic routes are derived from Border Gateway Protocol (BGP) advertisements received from an NCC hybrid spoke."
          ],
          "enum": [
            "ROUTE_TYPE_UNSPECIFIED",
            "VPC_PRIMARY_SUBNET",
            "VPC_SECONDARY_SUBNET",
            "DYNAMIC_ROUTE"
          ]
        },
        "nextHopVpcNetwork": {
          "description": "Immutable. The destination VPC network for packets on this route.",
          "$ref": "NextHopVpcNetwork"
        },
        "labels": {
          "description": "Optional labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "An optional description of the route.",
          "type": "string"
        },
        "uid": {
          "description": "Output only. The Google-generated UUID for the route. This value is unique across all Network Connectivity Center route resources. If a route is deleted and another with the same name is created, the new route is assigned a different `uid`.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "Output only. The current lifecycle state of the route.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No state information available",
            "The resource's create operation is in progress.",
            "The resource is active",
            "The resource's delete operation is in progress.",
            "The resource's accept operation is in progress.",
            "The resource's reject operation is in progress.",
            "The resource's update operation is in progress.",
            "The resource is inactive.",
            "The hub associated with this spoke resource has been deleted. This state applies to spoke resources only."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING",
            "ACCEPTING",
            "REJECTING",
            "UPDATING",
            "INACTIVE",
            "OBSOLETE"
          ]
        },
        "spoke": {
          "description": "Immutable. The spoke that this route leads to. Example: projects/12345/locations/global/spokes/SPOKE",
          "type": "string"
        },
        "location": {
          "description": "Output only. The origin location of the route. Uses the following form: \"projects/{project}/locations/{location}\" Example: projects/1234/locations/us-central1",
          "readOnly": true,
          "type": "string"
        },
        "priority": {
          "description": "Output only. The priority of this route. Priority is used to break ties in cases where a destination matches more than one route. In these cases the route with the lowest-numbered priority value wins.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "nextHopVpnTunnel": {
          "description": "Immutable. The next-hop VPN tunnel for packets on this route.",
          "$ref": "NextHopVPNTunnel"
        },
        "nextHopRouterApplianceInstance": {
          "description": "Immutable. The next-hop Router appliance instance for packets on this route.",
          "$ref": "NextHopRouterApplianceInstance"
        },
        "nextHopInterconnectAttachment": {
          "description": "Immutable. The next-hop VLAN attachment for packets on this route.",
          "$ref": "NextHopInterconnectAttachment"
        }
      }
    },
    "NextHopVpcNetwork": {
      "id": "NextHopVpcNetwork",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The URI of the VPC network resource",
          "type": "string"
        }
      }
    },
    "NextHopVPNTunnel": {
      "id": "NextHopVPNTunnel",
      "description": "A route next hop that leads to a VPN tunnel resource.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The URI of the VPN tunnel resource.",
          "type": "string"
        },
        "vpcNetwork": {
          "description": "The VPC network where this VPN tunnel is located.",
          "type": "string"
        },
        "siteToSiteDataTransfer": {
          "description": "Indicates whether site-to-site data transfer is allowed for this VPN tunnel resource. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).",
          "type": "boolean"
        }
      }
    },
    "NextHopRouterApplianceInstance": {
      "id": "NextHopRouterApplianceInstance",
      "description": "A route next hop that leads to a Router appliance instance.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The URI of the Router appliance instance.",
          "type": "string"
        },
        "vpcNetwork": {
          "description": "The VPC network where this VM is located.",
          "type": "string"
        },
        "siteToSiteDataTransfer": {
          "description": "Indicates whether site-to-site data transfer is allowed for this Router appliance instance resource. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).",
          "type": "boolean"
        }
      }
    },
    "NextHopInterconnectAttachment": {
      "id": "NextHopInterconnectAttachment",
      "description": "A route next hop that leads to an interconnect attachment resource.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The URI of the interconnect attachment resource.",
          "type": "string"
        },
        "vpcNetwork": {
          "description": "The VPC network where this interconnect attachment is located.",
          "type": "string"
        },
        "siteToSiteDataTransfer": {
          "description": "Indicates whether site-to-site data transfer is allowed for this interconnect attachment resource. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).",
          "type": "boolean"
        }
      }
    },
    "ListRoutesResponse": {
      "id": "ListRoutesResponse",
      "description": "Response for HubService.ListRoutes method.",
      "type": "object",
      "properties": {
        "routes": {
          "description": "The requested routes.",
          "type": "array",
          "items": {
            "$ref": "Route"
          }
        },
        "nextPageToken": {
          "description": "The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.",
          "type": "string"
        },
        "unreachable": {
          "description": "RouteTables that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListRouteTablesResponse": {
      "id": "ListRouteTablesResponse",
      "description": "Response for HubService.ListRouteTables method.",
      "type": "object",
      "properties": {
        "routeTables": {
          "description": "The requested route tables.",
          "type": "array",
          "items": {
            "$ref": "RouteTable"
          }
        },
        "nextPageToken": {
          "description": "The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.",
          "type": "string"
        },
        "unreachable": {
          "description": "Hubs that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Group": {
      "id": "Group",
      "description": "A group represents a subset of spokes attached to a hub.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The name of the group. Group names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub}/groups/{group_id}`",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time the group was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The time the group was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional. Labels in key-value pair format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Optional. The description of the group.",
          "type": "string"
        },
        "uid": {
          "description": "Output only. The Google-generated UUID for the group. This value is unique across all group resources. If a group is deleted and another with the same name is created, the new route table is assigned a different unique_id.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "Output only. The current lifecycle state of this group.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No state information available",
            "The resource's create operation is in progress.",
            "The resource is active",
            "The resource's delete operation is in progress.",
            "The resource's accept operation is in progress.",
            "The resource's reject operation is in progress.",
            "The resource's update operation is in progress.",
            "The resource is inactive.",
            "The hub associated with this spoke resource has been deleted. This state applies to spoke resources only."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING",
            "ACCEPTING",
            "REJECTING",
            "UPDATING",
            "INACTIVE",
            "OBSOLETE"
          ]
        },
        "autoAccept": {
          "description": "Optional. The auto-accept setting for this group.",
          "$ref": "AutoAccept"
        },
        "routeTable": {
          "description": "Output only. The name of the route table that corresponds to this group. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}/routeTables/{route_table_id}`",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "AutoAccept": {
      "id": "AutoAccept",
      "description": "The auto-accept setting for a group controls whether proposed spokes are automatically attached to the hub. If auto-accept is enabled, the spoke immediately is attached to the hub and becomes part of the group. In this case, the new spoke is in the ACTIVE state. If auto-accept is disabled, the spoke goes to the INACTIVE state, and it must be reviewed and accepted by a hub administrator.",
      "type": "object",
      "properties": {
        "autoAcceptProjects": {
          "description": "A list of project ids or project numbers for which you want to enable auto-accept. The auto-accept setting is applied to spokes being created or updated in these projects.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListGroupsResponse": {
      "id": "ListGroupsResponse",
      "description": "Response for HubService.ListGroups method.",
      "type": "object",
      "properties": {
        "groups": {
          "description": "The requested groups.",
          "type": "array",
          "items": {
            "$ref": "Group"
          }
        },
        "nextPageToken": {
          "description": "The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.",
          "type": "string"
        },
        "unreachable": {
          "description": "Hubs that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListInternalRangesResponse": {
      "id": "ListInternalRangesResponse",
      "description": "Response for InternalRange.ListInternalRanges",
      "type": "object",
      "properties": {
        "internalRanges": {
          "description": "Internal ranges to be returned.",
          "type": "array",
          "items": {
            "$ref": "InternalRange"
          }
        },
        "nextPageToken": {
          "description": "The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InternalRange": {
      "id": "InternalRange",
      "description": "The internal range resource for IPAM operations within a VPC network. Used to represent a private address range along with behavioral characterstics of that range (its usage and peering behavior). Networking resources can link to this range if they are created as belonging to it.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The name of an internal range. Format: projects/{project}/locations/{location}/internalRanges/{internal_range} See: https://google.aip.dev/122#fields-representing-resource-names",
          "type": "string"
        },
        "createTime": {
          "description": "Time when the internal range was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Time when the internal range was updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "User-defined labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "A description of this resource.",
          "type": "string"
        },
        "ipCidrRange": {
          "description": "The IP range that this internal range defines.",
          "type": "string"
        },
        "network": {
          "description": "The URL or resource ID of the network in which to reserve the internal range. The network cannot be deleted if there are any reserved internal ranges referring to it. Legacy networks are not supported. For example: https://www.googleapis.com/compute/v1/projects/{project}/locations/global/networks/{network} projects/{project}/locations/global/networks/{network} {network}",
          "type": "string"
        },
        "usage": {
          "description": "The type of usage set for this InternalRange.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified usage is allowed in calls which identify the resource by other fields and do not need Usage set to complete. These are, i.e.: GetInternalRange and DeleteInternalRange. Usage needs to be specified explicitly in CreateInternalRange or UpdateInternalRange calls.",
            "A VPC resource can use the reserved CIDR block by associating it with the internal range resource if usage is set to FOR_VPC.",
            "Ranges created with EXTERNAL_TO_VPC cannot be associated with VPC resources and are meant to block out address ranges for various use cases, like for example, usage on-prem, with dynamic route announcements via interconnect."
          ],
          "enum": [
            "USAGE_UNSPECIFIED",
            "FOR_VPC",
            "EXTERNAL_TO_VPC"
          ]
        },
        "peering": {
          "description": "The type of peering set for this internal range.",
          "type": "string",
          "enumDescriptions": [
            "If Peering is left unspecified in CreateInternalRange or UpdateInternalRange, it will be defaulted to FOR_SELF.",
            "This is the default behavior and represents the case that this internal range is intended to be used in the VPC in which it is created and is accessible from its peers. This implies that peers or peers-of-peers cannot use this range.",
            "This behavior can be set when the internal range is being reserved for usage by peers. This means that no resource within the VPC in which it is being created can use this to associate with a VPC resource, but one of the peers can. This represents donating a range for peers to use.",
            "This behavior can be set when the internal range is being reserved for usage by the VPC in which it is created, but not shared with peers. In a sense, it is local to the VPC. This can be used to create internal ranges for various purposes like HTTP_INTERNAL_LOAD_BALANCER or for Interconnect routes that are not shared with peers. This also implies that peers cannot use this range in a way that is visible to this VPC, but can re-use this range as long as it is NOT_SHARED from the peer VPC, too."
          ],
          "enum": [
            "PEERING_UNSPECIFIED",
            "FOR_SELF",
            "FOR_PEER",
            "NOT_SHARED"
          ]
        },
        "prefixLength": {
          "description": "An alternate to ip_cidr_range. Can be set when trying to create a reservation that automatically finds a free range of the given size. If both ip_cidr_range and prefix_length are set, there is an error if the range sizes do not match. Can also be used during updates to change the range size.",
          "type": "integer",
          "format": "int32"
        },
        "targetCidrRange": {
          "description": "Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set, defaults to the \"10.0.0.0/8\" address space. This can be used to search in other rfc-1918 address spaces like \"172.16.0.0/12\" and \"192.168.0.0/16\" or non-rfc-1918 address spaces used in the VPC.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "users": {
          "description": "Output only. The list of resources that refer to this internal range. Resources that use the internal range for their range allocation are referred to as users of the range. Other resources mark themselves as users while doing so by creating a reference to this internal range. Having a user, based on this reference, prevents deletion of the internal range referred to. Can be empty.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "overlaps": {
          "description": "Optional. Types of resources that are allowed to overlap with the current internal range.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "No overlap overrides.",
              "Allow creation of static routes more specific that the current internal range.",
              "Allow creation of internal ranges that overlap with existing subnets."
            ],
            "enum": [
              "OVERLAP_UNSPECIFIED",
              "OVERLAP_ROUTE_RANGE",
              "OVERLAP_EXISTING_SUBNET_RANGE"
            ]
          }
        }
      }
    },
    "ListPolicyBasedRoutesResponse": {
      "id": "ListPolicyBasedRoutesResponse",
      "description": "Response for PolicyBasedRouting.ListPolicyBasedRoutes method.",
      "type": "object",
      "properties": {
        "policyBasedRoutes": {
          "description": "Policy-based routes to be returned.",
          "type": "array",
          "items": {
            "$ref": "PolicyBasedRoute"
          }
        },
        "nextPageToken": {
          "description": "The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PolicyBasedRoute": {
      "id": "PolicyBasedRoute",
      "description": "Policy-based routes route L4 network traffic based on not just destination IP address, but also source IP address, protocol, and more. If a policy-based route conflicts with other types of routes, the policy-based route always takes precedence.",
      "type": "object",
      "properties": {
        "virtualMachine": {
          "description": "Optional. VM instances that this policy-based route applies to.",
          "$ref": "VirtualMachine"
        },
        "interconnectAttachment": {
          "description": "Optional. The interconnect attachments that this policy-based route applies to.",
          "$ref": "InterconnectAttachment"
        },
        "nextHopIlbIp": {
          "description": "Optional. The IP address of a global-access-enabled L4 ILB that is the next hop for matching packets. For this version, only nextHopIlbIp is supported.",
          "type": "string"
        },
        "nextHopOtherRoutes": {
          "description": "Optional. Other routes that will be referenced to determine the next hop of the packet.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Use the routes from the default routing tables (system-generated routes, custom routes, peering route) to determine the next hop. This effectively excludes matching packets being applied on other PBRs with a lower priority."
          ],
          "enum": [
            "OTHER_ROUTES_UNSPECIFIED",
            "DEFAULT_ROUTING"
          ]
        },
        "name": {
          "description": "Immutable. A unique name of the resource in the form of `projects/{project_number}/locations/global/PolicyBasedRoutes/{policy_based_route_id}`",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time when the policy-based route was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time when the policy-based route was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "User-defined labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Optional. An optional description of this resource. Provide this field when you create the resource.",
          "type": "string"
        },
        "network": {
          "description": "Required. Fully-qualified URL of the network that this route applies to, for example: projects/my-project/global/networks/my-network.",
          "type": "string"
        },
        "filter": {
          "description": "Required. The filter to match L4 traffic.",
          "$ref": "Filter"
        },
        "priority": {
          "description": "Optional. The priority of this policy-based route. Priority is used to break ties in cases where there are more than one matching policy-based routes found. In cases where multiple policy-based routes are matched, the one with the lowest-numbered priority value wins. The default value is 1000. The priority value must be from 1 to 65535, inclusive.",
          "type": "integer",
          "format": "int32"
        },
        "warnings": {
          "description": "Output only. If potential misconfigurations are detected for this route, this field will be populated with warning messages.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Warnings"
          }
        },
        "selfLink": {
          "description": "Output only. Server-defined fully-qualified URL for this resource.",
          "readOnly": true,
          "type": "string"
        },
        "kind": {
          "description": "Output only. Type of this resource. Always networkconnectivity#policyBasedRoute for policy-based Route resources.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "VirtualMachine": {
      "id": "VirtualMachine",
      "description": "VM instances that this policy-based route applies to.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Optional. A list of VM instance tags that this policy-based route applies to. VM instances that have ANY of tags specified here installs this PBR.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InterconnectAttachment": {
      "id": "InterconnectAttachment",
      "description": "InterconnectAttachment that this route applies to.",
      "type": "object",
      "properties": {
        "region": {
          "description": "Optional. Cloud region to install this policy-based route on interconnect attachment. Use `all` to install it on all interconnect attachments.",
          "type": "string"
        }
      }
    },
    "Filter": {
      "id": "Filter",
      "description": "Filter matches L4 traffic.",
      "type": "object",
      "properties": {
        "ipProtocol": {
          "description": "Optional. The IP protocol that this policy-based route applies to. Valid values are 'TCP', 'UDP', and 'ALL'. Default is 'ALL'.",
          "type": "string"
        },
        "srcRange": {
          "description": "Optional. The source IP range of outgoing packets that this policy-based route applies to. Default is \"0.0.0.0/0\" if protocol version is IPv4.",
          "type": "string"
        },
        "destRange": {
          "description": "Optional. The destination IP range of outgoing packets that this policy-based route applies to. Default is \"0.0.0.0/0\" if protocol version is IPv4.",
          "type": "string"
        },
        "protocolVersion": {
          "description": "Required. Internet protocol versions this policy-based route applies to. For this version, only IPV4 is supported. IPV6 is supported in preview.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "The PBR is for IPv4 internet protocol traffic."
          ],
          "enum": [
            "PROTOCOL_VERSION_UNSPECIFIED",
            "IPV4"
          ]
        }
      }
    },
    "Warnings": {
      "id": "Warnings",
      "description": "Informational warning message.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Output only. A warning code, if applicable.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "The policy-based route is not active and functioning. Common causes are that the dependent network was deleted or the resource project was turned off.",
            "The policy-based route is being modified (e.g. created/deleted) at this time."
          ],
          "enum": [
            "WARNING_UNSPECIFIED",
            "RESOURCE_NOT_ACTIVE",
            "RESOURCE_BEING_MODIFIED"
          ]
        },
        "data": {
          "description": "Output only. Metadata about this warning in key: value format. The key should provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "warningMessage": {
          "description": "Output only. A human-readable description of the warning code.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ListRegionalEndpointsResponse": {
      "id": "ListRegionalEndpointsResponse",
      "description": "Response for ListRegionalEndpoints.",
      "type": "object",
      "properties": {
        "regionalEndpoints": {
          "description": "Regional endpoints to be returned.",
          "type": "array",
          "items": {
            "$ref": "RegionalEndpoint"
          }
        },
        "nextPageToken": {
          "description": "The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RegionalEndpoint": {
      "id": "RegionalEndpoint",
      "description": "The RegionalEndpoint resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of a RegionalEndpoint. Format: `projects/{project}/locations/{location}/regionalEndpoints/{regional_endpoint}`.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time when the RegionalEndpoint was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time when the RegionalEndpoint was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "User-defined labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Optional. A description of this resource.",
          "type": "string"
        },
        "targetGoogleApi": {
          "description": "Required. The service endpoint this private regional endpoint connects to. Format: `{apiname}.{region}.p.rep.googleapis.com` Example: \"cloudkms.us-central1.p.rep.googleapis.com\".",
          "type": "string"
        },
        "network": {
          "description": "The name of the VPC network for this private regional endpoint. Format: `projects/{project}/global/networks/{network}`",
          "type": "string"
        },
        "subnetwork": {
          "description": "The name of the subnetwork from which the IP address will be allocated. Format: `projects/{project}/regions/{region}/subnetworks/{subnetwork}`",
          "type": "string"
        },
        "accessType": {
          "description": "Required. The access type of this regional endpoint. This field is reflected in the PSC Forwarding Rule configuration to enable global access.",
          "type": "string",
          "enumDescriptions": [
            "An invalid type as the default case.",
            "This regional endpoint is accessible from all regions.",
            "This regional endpoint is only accessible from the same region where it resides."
          ],
          "enum": [
            "ACCESS_TYPE_UNSPECIFIED",
            "GLOBAL",
            "REGIONAL"
          ]
        },
        "pscForwardingRule": {
          "description": "Output only. The resource reference of the PSC Forwarding Rule created on behalf of the customer. Format: `//compute.googleapis.com/projects/{project}/regions/{region}/forwardingRules/{forwarding_rule_name}`",
          "readOnly": true,
          "type": "string"
        },
        "ipAddress": {
          "description": "Output only. The literal IP address of the PSC Forwarding Rule created on behalf of the customer. This field is deprecated. Use address instead.",
          "readOnly": true,
          "deprecated": true,
          "type": "string"
        },
        "address": {
          "description": "Optional. The IP Address of the Regional Endpoint. When no address is provided, an IP from the subnetwork is allocated. Use one of the following formats: * IPv4 address as in `10.0.0.1` * Address resource URI as in `projects/{project}/regions/{region}/addresses/{address_name}`",
          "type": "string"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents a Google Cloud location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).",
          "type": "string"
        },
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "LocationMetadata": {
      "id": "LocationMetadata",
      "description": "Metadata about locations",
      "type": "object",
      "properties": {
        "locationFeatures": {
          "description": "List of supported features",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "No publicly supported feature in this location",
              "Site-to-cloud spokes are supported in this location",
              "Site-to-site spokes are supported in this location"
            ],
            "enum": [
              "LOCATION_FEATURE_UNSPECIFIED",
              "SITE_TO_CLOUD_SPOKES",
              "SITE_TO_SITE_SPOKES"
            ]
          }
        }
      }
    },
    "AcceptHubSpokeResponse": {
      "id": "AcceptHubSpokeResponse",
      "description": "The response for HubService.AcceptHubSpoke.",
      "type": "object",
      "properties": {
        "spoke": {
          "description": "The spoke that was operated on.",
          "$ref": "Spoke"
        }
      }
    },
    "RejectHubSpokeResponse": {
      "id": "RejectHubSpokeResponse",
      "description": "The response for HubService.RejectHubSpoke.",
      "type": "object",
      "properties": {
        "spoke": {
          "description": "The spoke that was operated on.",
          "$ref": "Spoke"
        }
      }
    }
  },
  "servicePath": "",
  "protocol": "rest",
  "ownerDomain": "google.com",
  "rootUrl": "https://networkconnectivity.googleapis.com/",
  "ownerName": "Google",
  "basePath": "",
  "documentationLink": "https://cloud.google.com/network-connectivity/docs/reference/networkconnectivity/rest",
  "mtlsRootUrl": "https://networkconnectivity.mtls.googleapis.com/",
  "version": "v1",
  "revision": "20240618",
  "title": "Network Connectivity API",
  "id": "networkconnectivity:v1",
  "batchPath": "batch",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "discoveryVersion": "v1",
  "description": "This API enables connectivity with and between Google Cloud resources.",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "canonicalName": "networkconnectivity",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "networkconnectivity.projects.locations.list",
              "path": "v1/{+name}/locations",
              "flatPath": "v1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "networkconnectivity.projects.locations.get",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "networkconnectivity.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`."
                },
                "get": {
                  "id": "networkconnectivity.projects.locations.operations.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "networkconnectivity.projects.locations.operations.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "networkconnectivity.projects.locations.operations.cancel",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleLongrunningCancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "serviceConnectionMaps": {
              "methods": {
                "list": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionMaps.list",
                  "path": "v1/{+parent}/serviceConnectionMaps",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource's name. ex. projects/123/locations/us-east1",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of results per page that should be returned.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "A filter expression that filters the results listed in the response.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Sort the results by a certain order.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListServiceConnectionMapsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists ServiceConnectionMaps in a given project and location."
                },
                "get": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionMaps.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the ServiceConnectionMap to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ServiceConnectionMap"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single ServiceConnectionMap."
                },
                "create": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionMaps.create",
                  "path": "v1/{+parent}/serviceConnectionMaps",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource's name of the ServiceConnectionMap. ex. projects/123/locations/us-east1",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "serviceConnectionMapId": {
                      "description": "Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionMaps/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ServiceConnectionMap"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new ServiceConnectionMap in a given project and location."
                },
                "patch": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionMaps.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the ServiceConnectionMap resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ServiceConnectionMap"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single ServiceConnectionMap."
                },
                "delete": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionMaps.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the ServiceConnectionMap to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "etag": {
                      "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single ServiceConnectionMap."
                },
                "setIamPolicy": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionMaps.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionMaps.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionMaps.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "serviceConnectionPolicies": {
              "methods": {
                "list": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionPolicies.list",
                  "path": "v1/{+parent}/serviceConnectionPolicies",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource's name. ex. projects/123/locations/us-east1",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of results per page that should be returned.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "A filter expression that filters the results listed in the response.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Sort the results by a certain order.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListServiceConnectionPoliciesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists ServiceConnectionPolicies in a given project and location."
                },
                "get": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionPolicies.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the ServiceConnectionPolicy to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ServiceConnectionPolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single ServiceConnectionPolicy."
                },
                "create": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionPolicies.create",
                  "path": "v1/{+parent}/serviceConnectionPolicies",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource's name of the ServiceConnectionPolicy. ex. projects/123/locations/us-east1",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "serviceConnectionPolicyId": {
                      "description": "Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionPolicies/foo') See https://google.aip.dev/122#resource-id-segments Unique per location.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ServiceConnectionPolicy"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new ServiceConnectionPolicy in a given project and location."
                },
                "patch": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionPolicies.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Immutable. The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the ServiceConnectionPolicy resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ServiceConnectionPolicy"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single ServiceConnectionPolicy."
                },
                "delete": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionPolicies.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the ServiceConnectionPolicy to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "etag": {
                      "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single ServiceConnectionPolicy."
                },
                "setIamPolicy": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionPolicies.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionPolicies.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionPolicies.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "serviceClasses": {
              "methods": {
                "list": {
                  "id": "networkconnectivity.projects.locations.serviceClasses.list",
                  "path": "v1/{+parent}/serviceClasses",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceClasses",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource's name. ex. projects/123/locations/us-east1",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of results per page that should be returned.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "A filter expression that filters the results listed in the response.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Sort the results by a certain order.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListServiceClassesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists ServiceClasses in a given project and location."
                },
                "get": {
                  "id": "networkconnectivity.projects.locations.serviceClasses.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the ServiceClass to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ServiceClass"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single ServiceClass."
                },
                "patch": {
                  "id": "networkconnectivity.projects.locations.serviceClasses.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Immutable. The name of a ServiceClass resource. Format: projects/{project}/locations/{location}/serviceClasses/{service_class} See: https://google.aip.dev/122#fields-representing-resource-names",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the ServiceClass resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ServiceClass"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single ServiceClass."
                },
                "delete": {
                  "id": "networkconnectivity.projects.locations.serviceClasses.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the ServiceClass to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "etag": {
                      "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single ServiceClass."
                },
                "setIamPolicy": {
                  "id": "networkconnectivity.projects.locations.serviceClasses.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkconnectivity.projects.locations.serviceClasses.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkconnectivity.projects.locations.serviceClasses.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "serviceConnectionTokens": {
              "methods": {
                "get": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionTokens.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionTokens/{serviceConnectionTokensId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the ServiceConnectionToken to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionTokens/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ServiceConnectionToken"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single ServiceConnectionToken."
                },
                "list": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionTokens.list",
                  "path": "v1/{+parent}/serviceConnectionTokens",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionTokens",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource's name. ex. projects/123/locations/us-east1",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of results per page that should be returned.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "A filter expression that filters the results listed in the response.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Sort the results by a certain order.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListServiceConnectionTokensResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists ServiceConnectionTokens in a given project and location."
                },
                "create": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionTokens.create",
                  "path": "v1/{+parent}/serviceConnectionTokens",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionTokens",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource's name of the ServiceConnectionToken. ex. projects/123/locations/us-east1",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "serviceConnectionTokenId": {
                      "description": "Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/ServiceConnectionTokens/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ServiceConnectionToken"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new ServiceConnectionToken in a given project and location."
                },
                "delete": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionTokens.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionTokens/{serviceConnectionTokensId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the ServiceConnectionToken to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionTokens/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "etag": {
                      "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single ServiceConnectionToken."
                }
              }
            },
            "global": {
              "resources": {
                "hubs": {
                  "methods": {
                    "list": {
                      "id": "networkconnectivity.projects.locations.global.hubs.list",
                      "path": "v1/{+parent}/hubs",
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent resource's name.",
                          "pattern": "^projects/[^/]+/locations/global$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of results per page to return.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "The page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "An expression that filters the list of results.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Sort the results by a certain order.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListHubsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists the Network Connectivity Center hubs associated with a given project."
                    },
                    "get": {
                      "id": "networkconnectivity.projects.locations.global.hubs.get",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the hub resource to get.",
                          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Hub"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details about a Network Connectivity Center hub."
                    },
                    "create": {
                      "id": "networkconnectivity.projects.locations.global.hubs.create",
                      "path": "v1/{+parent}/hubs",
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent resource.",
                          "pattern": "^projects/[^/]+/locations/global$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "hubId": {
                          "description": "Required. A unique identifier for the hub.",
                          "location": "query",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Hub"
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new Network Connectivity Center hub in the specified project."
                    },
                    "patch": {
                      "id": "networkconnectivity.projects.locations.global.hubs.patch",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "description": "Immutable. The name of the hub. Hub names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}`",
                          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "updateMask": {
                          "description": "Optional. In the case of an update to an existing hub, field mask is used to specify the fields to be overwritten. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it is in the mask. If the user does not provide a mask, then all fields are overwritten.",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        },
                        "requestId": {
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "Hub"
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates the description and/or labels of a Network Connectivity Center hub."
                    },
                    "delete": {
                      "id": "networkconnectivity.projects.locations.global.hubs.delete",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the hub to delete.",
                          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a Network Connectivity Center hub."
                    },
                    "listSpokes": {
                      "id": "networkconnectivity.projects.locations.global.hubs.listSpokes",
                      "path": "v1/{+name}:listSpokes",
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}:listSpokes",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the hub.",
                          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "spokeLocations": {
                          "description": "A list of locations. Specify one of the following: `[global]`, a single region (for example, `[us-central1]`), or a combination of values (for example, `[global, us-central1, us-west1]`). If the spoke_locations field is populated, the list of results includes only spokes in the specified location. If the spoke_locations field is not populated, the list of results includes spokes in all locations.",
                          "location": "query",
                          "repeated": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of results to return per page.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "The page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "An expression that filters the list of results.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Sort the results by name or create_time.",
                          "location": "query",
                          "type": "string"
                        },
                        "view": {
                          "description": "The view of the spoke to return. The view that you use determines which spoke fields are included in the response.",
                          "location": "query",
                          "type": "string",
                          "enumDescriptions": [
                            "The spoke view is unspecified. When the spoke view is unspecified, the API returns the same fields as the `BASIC` view.",
                            "Includes `name`, `create_time`, `hub`, `unique_id`, `state`, `reasons`, and `spoke_type`. This is the default value.",
                            "Includes all spoke fields except `labels`. You can use the `DETAILED` view only when you set the `spoke_locations` field to `[global]`."
                          ],
                          "enum": [
                            "SPOKE_VIEW_UNSPECIFIED",
                            "BASIC",
                            "DETAILED"
                          ]
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "ListHubSpokesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists the Network Connectivity Center spokes associated with a specified hub and location. The list includes both spokes that are attached to the hub and spokes that have been proposed but not yet accepted."
                    },
                    "rejectSpoke": {
                      "id": "networkconnectivity.projects.locations.global.hubs.rejectSpoke",
                      "path": "v1/{+name}:rejectSpoke",
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}:rejectSpoke",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the hub from which to reject the spoke.",
                          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "RejectHubSpokeRequest"
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Rejects a Network Connectivity Center spoke from being attached to a hub. If the spoke was previously in the `ACTIVE` state, it transitions to the `INACTIVE` state and is no longer able to connect to other spokes that are attached to the hub."
                    },
                    "acceptSpoke": {
                      "id": "networkconnectivity.projects.locations.global.hubs.acceptSpoke",
                      "path": "v1/{+name}:acceptSpoke",
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}:acceptSpoke",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the hub into which to accept the spoke.",
                          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "AcceptHubSpokeRequest"
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Accepts a proposal to attach a Network Connectivity Center spoke to a hub."
                    },
                    "setIamPolicy": {
                      "id": "networkconnectivity.projects.locations.global.hubs.setIamPolicy",
                      "path": "v1/{+resource}:setIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}:setIamPolicy",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                    },
                    "getIamPolicy": {
                      "id": "networkconnectivity.projects.locations.global.hubs.getIamPolicy",
                      "path": "v1/{+resource}:getIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}:getIamPolicy",
                      "httpMethod": "GET",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "options.requestedPolicyVersion": {
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                    },
                    "testIamPermissions": {
                      "id": "networkconnectivity.projects.locations.global.hubs.testIamPermissions",
                      "path": "v1/{+resource}:testIamPermissions",
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}:testIamPermissions",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                    }
                  },
                  "resources": {
                    "routeTables": {
                      "methods": {
                        "get": {
                          "id": "networkconnectivity.projects.locations.global.hubs.routeTables.get",
                          "path": "v1/{+name}",
                          "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}/routeTables/{routeTablesId}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the route table resource.",
                              "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "RouteTable"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets details about a Network Connectivity Center route table."
                        },
                        "list": {
                          "id": "networkconnectivity.projects.locations.global.hubs.routeTables.list",
                          "path": "v1/{+parent}/routeTables",
                          "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}/routeTables",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "Required. The parent resource's name.",
                              "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "The maximum number of results to return per page.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "The page token.",
                              "location": "query",
                              "type": "string"
                            },
                            "filter": {
                              "description": "An expression that filters the list of results.",
                              "location": "query",
                              "type": "string"
                            },
                            "orderBy": {
                              "description": "Sort the results by a certain order.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListRouteTablesResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Lists route tables in a given hub."
                        }
                      },
                      "resources": {
                        "routes": {
                          "methods": {
                            "get": {
                              "id": "networkconnectivity.projects.locations.global.hubs.routeTables.routes.get",
                              "path": "v1/{+name}",
                              "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}/routeTables/{routeTablesId}/routes/{routesId}",
                              "httpMethod": "GET",
                              "parameters": {
                                "name": {
                                  "description": "Required. The name of the route resource.",
                                  "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+/routes/[^/]+$",
                                  "location": "path",
                                  "required": true,
                                  "type": "string"
                                }
                              },
                              "parameterOrder": [
                                "name"
                              ],
                              "response": {
                                "$ref": "Route"
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "description": "Gets details about the specified route."
                            },
                            "list": {
                              "id": "networkconnectivity.projects.locations.global.hubs.routeTables.routes.list",
                              "path": "v1/{+parent}/routes",
                              "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}/routeTables/{routeTablesId}/routes",
                              "httpMethod": "GET",
                              "parameters": {
                                "parent": {
                                  "description": "Required. The parent resource's name.",
                                  "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+$",
                                  "location": "path",
                                  "required": true,
                                  "type": "string"
                                },
                                "pageSize": {
                                  "description": "The maximum number of results to return per page.",
                                  "location": "query",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "pageToken": {
                                  "description": "The page token.",
                                  "location": "query",
                                  "type": "string"
                                },
                                "filter": {
                                  "description": "An expression that filters the list of results.",
                                  "location": "query",
                                  "type": "string"
                                },
                                "orderBy": {
                                  "description": "Sort the results by a certain order.",
                                  "location": "query",
                                  "type": "string"
                                }
                              },
                              "parameterOrder": [
                                "parent"
                              ],
                              "response": {
                                "$ref": "ListRoutesResponse"
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "description": "Lists routes in a given route table."
                            }
                          }
                        }
                      }
                    },
                    "groups": {
                      "methods": {
                        "get": {
                          "id": "networkconnectivity.projects.locations.global.hubs.groups.get",
                          "path": "v1/{+name}",
                          "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the route table resource.",
                              "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Group"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets details about a Network Connectivity Center group."
                        },
                        "list": {
                          "id": "networkconnectivity.projects.locations.global.hubs.groups.list",
                          "path": "v1/{+parent}/groups",
                          "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "Required. The parent resource's name.",
                              "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "The maximum number of results to return per page.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "The page token.",
                              "location": "query",
                              "type": "string"
                            },
                            "filter": {
                              "description": "An expression that filters the list of results.",
                              "location": "query",
                              "type": "string"
                            },
                            "orderBy": {
                              "description": "Sort the results by a certain order.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListGroupsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Lists groups in a given hub."
                        },
                        "patch": {
                          "id": "networkconnectivity.projects.locations.global.hubs.groups.patch",
                          "path": "v1/{+name}",
                          "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}",
                          "httpMethod": "PATCH",
                          "parameters": {
                            "name": {
                              "description": "Immutable. The name of the group. Group names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub}/groups/{group_id}`",
                              "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "updateMask": {
                              "description": "Optional. In the case of an update to an existing group, field mask is used to specify the fields to be overwritten. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it is in the mask. If the user does not provide a mask, then all fields are overwritten.",
                              "location": "query",
                              "type": "string",
                              "format": "google-fieldmask"
                            },
                            "requestId": {
                              "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "Group"
                          },
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Updates the parameters of a Network Connectivity Center group."
                        },
                        "setIamPolicy": {
                          "id": "networkconnectivity.projects.locations.global.hubs.groups.setIamPolicy",
                          "path": "v1/{+resource}:setIamPolicy",
                          "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}:setIamPolicy",
                          "httpMethod": "POST",
                          "parameters": {
                            "resource": {
                              "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "request": {
                            "$ref": "SetIamPolicyRequest"
                          },
                          "response": {
                            "$ref": "Policy"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                        },
                        "getIamPolicy": {
                          "id": "networkconnectivity.projects.locations.global.hubs.groups.getIamPolicy",
                          "path": "v1/{+resource}:getIamPolicy",
                          "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}:getIamPolicy",
                          "httpMethod": "GET",
                          "parameters": {
                            "resource": {
                              "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "options.requestedPolicyVersion": {
                              "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            }
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "response": {
                            "$ref": "Policy"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                        },
                        "testIamPermissions": {
                          "id": "networkconnectivity.projects.locations.global.hubs.groups.testIamPermissions",
                          "path": "v1/{+resource}:testIamPermissions",
                          "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}:testIamPermissions",
                          "httpMethod": "POST",
                          "parameters": {
                            "resource": {
                              "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "request": {
                            "$ref": "TestIamPermissionsRequest"
                          },
                          "response": {
                            "$ref": "TestIamPermissionsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                        }
                      }
                    }
                  }
                },
                "policyBasedRoutes": {
                  "methods": {
                    "list": {
                      "id": "networkconnectivity.projects.locations.global.policyBasedRoutes.list",
                      "path": "v1/{+parent}/policyBasedRoutes",
                      "flatPath": "v1/projects/{projectsId}/locations/global/policyBasedRoutes",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent resource's name.",
                          "pattern": "^projects/[^/]+/locations/global$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of results per page that should be returned.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "The page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "A filter expression that filters the results listed in the response.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Sort the results by a certain order.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListPolicyBasedRoutesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists policy-based routes in a given project and location."
                    },
                    "get": {
                      "id": "networkconnectivity.projects.locations.global.policyBasedRoutes.get",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the PolicyBasedRoute resource to get.",
                          "pattern": "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "PolicyBasedRoute"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single policy-based route."
                    },
                    "create": {
                      "id": "networkconnectivity.projects.locations.global.policyBasedRoutes.create",
                      "path": "v1/{+parent}/policyBasedRoutes",
                      "flatPath": "v1/projects/{projectsId}/locations/global/policyBasedRoutes",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent resource's name of the PolicyBasedRoute.",
                          "pattern": "^projects/[^/]+/locations/global$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "policyBasedRouteId": {
                          "description": "Required. Unique id for the policy-based route to create.",
                          "location": "query",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "PolicyBasedRoute"
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new policy-based route in a given project and location."
                    },
                    "delete": {
                      "id": "networkconnectivity.projects.locations.global.policyBasedRoutes.delete",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the policy-based route resource to delete.",
                          "pattern": "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a single policy-based route."
                    },
                    "setIamPolicy": {
                      "id": "networkconnectivity.projects.locations.global.policyBasedRoutes.setIamPolicy",
                      "path": "v1/{+resource}:setIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}:setIamPolicy",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                    },
                    "getIamPolicy": {
                      "id": "networkconnectivity.projects.locations.global.policyBasedRoutes.getIamPolicy",
                      "path": "v1/{+resource}:getIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}:getIamPolicy",
                      "httpMethod": "GET",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "options.requestedPolicyVersion": {
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                    },
                    "testIamPermissions": {
                      "id": "networkconnectivity.projects.locations.global.policyBasedRoutes.testIamPermissions",
                      "path": "v1/{+resource}:testIamPermissions",
                      "flatPath": "v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}:testIamPermissions",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                    }
                  }
                }
              }
            },
            "spokes": {
              "methods": {
                "list": {
                  "id": "networkconnectivity.projects.locations.spokes.list",
                  "path": "v1/{+parent}/spokes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of results to return per page.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "An expression that filters the list of results.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Sort the results by a certain order.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListSpokesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists the Network Connectivity Center spokes in a specified project and location."
                },
                "get": {
                  "id": "networkconnectivity.projects.locations.spokes.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the spoke resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Spoke"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details about a Network Connectivity Center spoke."
                },
                "create": {
                  "id": "networkconnectivity.projects.locations.spokes.create",
                  "path": "v1/{+parent}/spokes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "spokeId": {
                      "description": "Required. Unique id for the spoke to create.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Spoke"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a Network Connectivity Center spoke."
                },
                "patch": {
                  "id": "networkconnectivity.projects.locations.spokes.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Immutable. The name of the spoke. Spoke names must be unique. They use the following form: `projects/{project_number}/locations/{region}/spokes/{spoke_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. In the case of an update to an existing spoke, field mask is used to specify the fields to be overwritten. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it is in the mask. If the user does not provide a mask, then all fields are overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Spoke"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a Network Connectivity Center spoke."
                },
                "delete": {
                  "id": "networkconnectivity.projects.locations.spokes.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the spoke to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a Network Connectivity Center spoke."
                },
                "setIamPolicy": {
                  "id": "networkconnectivity.projects.locations.spokes.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkconnectivity.projects.locations.spokes.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkconnectivity.projects.locations.spokes.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "internalRanges": {
              "methods": {
                "list": {
                  "id": "networkconnectivity.projects.locations.internalRanges.list",
                  "path": "v1/{+parent}/internalRanges",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/internalRanges",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource's name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of results per page that should be returned.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "A filter expression that filters the results listed in the response.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Sort the results by a certain order.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListInternalRangesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists internal ranges in a given project and location."
                },
                "get": {
                  "id": "networkconnectivity.projects.locations.internalRanges.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/internalRanges/{internalRangesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the InternalRange to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "InternalRange"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single internal range."
                },
                "create": {
                  "id": "networkconnectivity.projects.locations.internalRanges.create",
                  "path": "v1/{+parent}/internalRanges",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/internalRanges",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource's name of the internal range.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "internalRangeId": {
                      "description": "Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/internalRanges/foo') See https://google.aip.dev/122#resource-id-segments Unique per location.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "InternalRange"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new internal range in a given project and location."
                },
                "patch": {
                  "id": "networkconnectivity.projects.locations.internalRanges.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/internalRanges/{internalRangesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Immutable. The name of an internal range. Format: projects/{project}/locations/{location}/internalRanges/{internal_range} See: https://google.aip.dev/122#fields-representing-resource-names",
                      "pattern": "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the InternalRange resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "InternalRange"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single internal range."
                },
                "delete": {
                  "id": "networkconnectivity.projects.locations.internalRanges.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/internalRanges/{internalRangesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the internal range to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single internal range."
                }
              }
            },
            "regionalEndpoints": {
              "methods": {
                "list": {
                  "id": "networkconnectivity.projects.locations.regionalEndpoints.list",
                  "path": "v1/{+parent}/regionalEndpoints",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/regionalEndpoints",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource's name of the RegionalEndpoint.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "A filter expression that filters the results listed in the response.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Sort the results by a certain order.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListRegionalEndpointsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists RegionalEndpoints in a given project and location."
                },
                "get": {
                  "id": "networkconnectivity.projects.locations.regionalEndpoints.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/regionalEndpoints/{regionalEndpointsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the RegionalEndpoint resource to get. Format: `projects/{project}/locations/{location}/regionalEndpoints/{regional_endpoint}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/regionalEndpoints/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "RegionalEndpoint"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single RegionalEndpoint."
                },
                "create": {
                  "id": "networkconnectivity.projects.locations.regionalEndpoints.create",
                  "path": "v1/{+parent}/regionalEndpoints",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/regionalEndpoints",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource's name of the RegionalEndpoint.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "regionalEndpointId": {
                      "description": "Required. Unique id of the Regional Endpoint to be created.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if the original operation with the same request ID was received, and if so, ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "RegionalEndpoint"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new RegionalEndpoint in a given project and location."
                },
                "delete": {
                  "id": "networkconnectivity.projects.locations.regionalEndpoints.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/regionalEndpoints/{regionalEndpointsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the RegionalEndpoint to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/regionalEndpoints/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if the original operation with the same request ID was received, and if so, ignores the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single RegionalEndpoint."
                }
              }
            }
          }
        }
      }
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "kind": "discovery#restDescription"
}

{
  "version": "v1",
  "basePath": "",
  "rootUrl": "https://networkconnectivity.googleapis.com/",
  "description": "This API enables connectivity with and between Google Cloud resources.",
  "protocol": "rest",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "ownerDomain": "google.com",
  "servicePath": "",
  "kind": "discovery#restDescription",
  "batchPath": "batch",
  "title": "Network Connectivity API",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "canonicalName": "networkconnectivity",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "global": {
              "resources": {
                "hubs": {
                  "resources": {
                    "groups": {
                      "methods": {
                        "testIamPermissions": {
                          "parameters": {
                            "resource": {
                              "required": true,
                              "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$",
                              "type": "string"
                            }
                          },
                          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                          "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}:testIamPermissions",
                          "path": "v1/{+resource}:testIamPermissions",
                          "httpMethod": "POST",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "TestIamPermissionsResponse"
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "request": {
                            "$ref": "TestIamPermissionsRequest"
                          },
                          "id": "networkconnectivity.projects.locations.global.hubs.groups.testIamPermissions"
                        },
                        "getIamPolicy": {
                          "path": "v1/{+resource}:getIamPolicy",
                          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                          "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}:getIamPolicy",
                          "parameterOrder": [
                            "resource"
                          ],
                          "parameters": {
                            "resource": {
                              "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$",
                              "location": "path",
                              "type": "string",
                              "required": true
                            },
                            "options.requestedPolicyVersion": {
                              "location": "query",
                              "format": "int32",
                              "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                              "type": "integer"
                            }
                          },
                          "id": "networkconnectivity.projects.locations.global.hubs.groups.getIamPolicy",
                          "response": {
                            "$ref": "Policy"
                          },
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "setIamPolicy": {
                          "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                          "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}:setIamPolicy",
                          "request": {
                            "$ref": "SetIamPolicyRequest"
                          },
                          "httpMethod": "POST",
                          "id": "networkconnectivity.projects.locations.global.hubs.groups.setIamPolicy",
                          "path": "v1/{+resource}:setIamPolicy",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "resource": {
                              "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/groups/[^/]+$",
                              "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "type": "string",
                              "location": "path",
                              "required": true
                            }
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "response": {
                            "$ref": "Policy"
                          }
                        }
                      }
                    },
                    "routeTables": {
                      "resources": {
                        "routes": {
                          "methods": {
                            "list": {
                              "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}/routeTables/{routeTablesId}/routes",
                              "path": "v1/{+parent}/routes",
                              "httpMethod": "GET",
                              "parameterOrder": [
                                "parent"
                              ],
                              "parameters": {
                                "orderBy": {
                                  "description": "Sort the results by a certain order.",
                                  "type": "string",
                                  "location": "query"
                                },
                                "pageToken": {
                                  "type": "string",
                                  "location": "query",
                                  "description": "The page token."
                                },
                                "pageSize": {
                                  "description": "The maximum number of results to return per page.",
                                  "format": "int32",
                                  "type": "integer",
                                  "location": "query"
                                },
                                "filter": {
                                  "type": "string",
                                  "description": "An expression that filters the list of results.",
                                  "location": "query"
                                },
                                "parent": {
                                  "type": "string",
                                  "description": "Required. The parent resource's name.",
                                  "required": true,
                                  "location": "path",
                                  "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+$"
                                }
                              },
                              "response": {
                                "$ref": "ListRoutesResponse"
                              },
                              "id": "networkconnectivity.projects.locations.global.hubs.routeTables.routes.list",
                              "description": "Lists routes in a given project.",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ]
                            },
                            "get": {
                              "httpMethod": "GET",
                              "id": "networkconnectivity.projects.locations.global.hubs.routeTables.routes.get",
                              "path": "v1/{+name}",
                              "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}/routeTables/{routeTablesId}/routes/{routesId}",
                              "description": "Gets details about the specified route.",
                              "response": {
                                "$ref": "Route"
                              },
                              "parameterOrder": [
                                "name"
                              ],
                              "parameters": {
                                "name": {
                                  "required": true,
                                  "description": "Required. The name of the route resource.",
                                  "location": "path",
                                  "type": "string",
                                  "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+/routes/[^/]+$"
                                }
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ]
                            }
                          }
                        }
                      },
                      "methods": {
                        "list": {
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListRouteTablesResponse"
                          },
                          "description": "Lists route tables in a given project.",
                          "parameters": {
                            "orderBy": {
                              "location": "query",
                              "type": "string",
                              "description": "Sort the results by a certain order."
                            },
                            "pageSize": {
                              "format": "int32",
                              "location": "query",
                              "description": "The maximum number of results to return per page.",
                              "type": "integer"
                            },
                            "parent": {
                              "description": "Required. The parent resource's name.",
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$"
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "The page token."
                            },
                            "filter": {
                              "description": "An expression that filters the list of results.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "path": "v1/{+parent}/routeTables",
                          "id": "networkconnectivity.projects.locations.global.hubs.routeTables.list",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}/routeTables"
                        },
                        "get": {
                          "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}/routeTables/{routeTablesId}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the route table resource.",
                              "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+/routeTables/[^/]+$",
                              "type": "string",
                              "required": true,
                              "location": "path"
                            }
                          },
                          "path": "v1/{+name}",
                          "id": "networkconnectivity.projects.locations.global.hubs.routeTables.get",
                          "response": {
                            "$ref": "RouteTable"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets details about a Network Connectivity Center route table."
                        }
                      }
                    }
                  },
                  "methods": {
                    "get": {
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}",
                      "description": "Gets details about a Network Connectivity Center hub.",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
                          "type": "string",
                          "description": "Required. The name of the hub resource to get.",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Hub"
                      },
                      "path": "v1/{+name}",
                      "id": "networkconnectivity.projects.locations.global.hubs.get"
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "Hub"
                      },
                      "description": "Creates a new Network Connectivity Center hub in the specified project.",
                      "httpMethod": "POST",
                      "id": "networkconnectivity.projects.locations.global.hubs.create",
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs",
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        },
                        "hubId": {
                          "location": "query",
                          "description": "Required. A unique identifier for the hub.",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/global$",
                          "description": "Required. The parent resource."
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/hubs",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "getIamPolicy": {
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "location": "query",
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "type": "integer",
                          "format": "int32"
                        },
                        "resource": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$"
                        }
                      },
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}:getIamPolicy",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "resource"
                      ],
                      "id": "networkconnectivity.projects.locations.global.hubs.getIamPolicy",
                      "path": "v1/{+resource}:getIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "testIamPermissions": {
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}:testIamPermissions",
                      "id": "networkconnectivity.projects.locations.global.hubs.testIamPermissions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "path": "v1/{+resource}:testIamPermissions",
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      }
                    },
                    "listSpokes": {
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Lists the Network Connectivity Center spokes associated with a specified hub and location. The list includes both spokes that are attached to the hub and spokes that have been proposed but not yet accepted.",
                      "path": "v1/{+name}:listSpokes",
                      "parameters": {
                        "spokeLocations": {
                          "repeated": true,
                          "description": "A list of locations. Specify one of the following: `[global]`, a single region (for example, `[us-central1]`), or a combination of values (for example, `[global, us-central1, us-west1]`). If the spoke_locations field is populated, the list of results includes only spokes in the specified location. If the spoke_locations field is not populated, the list of results includes spokes in all locations.",
                          "type": "string",
                          "location": "query"
                        },
                        "orderBy": {
                          "type": "string",
                          "description": "Sort the results by name or create_time.",
                          "location": "query"
                        },
                        "view": {
                          "location": "query",
                          "type": "string",
                          "enum": [
                            "SPOKE_VIEW_UNSPECIFIED",
                            "BASIC",
                            "DETAILED"
                          ],
                          "enumDescriptions": [
                            "The spoke view is unspecified. When the spoke view is unspecified, the API returns the same fields as the `BASIC` view.",
                            "Includes `name`, `create_time`, `hub`, `unique_id`, `state`, `reasons`, and `spoke_type`. This is the default value.",
                            "Includes all spoke fields except `labels`. You can use the `DETAILED` view only when you set the `spoke_locations` field to `[global]`."
                          ],
                          "description": "The view of the spoke to return. The view that you use determines which spoke fields are included in the response."
                        },
                        "filter": {
                          "location": "query",
                          "description": "An expression that filters the list of results.",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "The maximum number of results to return per page.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "The page token.",
                          "location": "query"
                        },
                        "name": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. The name of the hub.",
                          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$"
                        }
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}:listSpokes",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListHubSpokesResponse"
                      },
                      "id": "networkconnectivity.projects.locations.global.hubs.listSpokes"
                    },
                    "list": {
                      "path": "v1/{+parent}/hubs",
                      "description": "Lists the Network Connectivity Center hubs associated with a given project.",
                      "id": "networkconnectivity.projects.locations.global.hubs.list",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListHubsResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs",
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "An expression that filters the list of results."
                        },
                        "orderBy": {
                          "type": "string",
                          "location": "query",
                          "description": "Sort the results by a certain order."
                        },
                        "parent": {
                          "description": "Required. The parent resource's name.",
                          "pattern": "^projects/[^/]+/locations/global$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of results per page to return.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "The page token."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "delete": {
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a Network Connectivity Center hub.",
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameters": {
                        "requestId": {
                          "type": "string",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        },
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the hub to delete."
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "networkconnectivity.projects.locations.global.hubs.delete",
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}"
                    },
                    "patch": {
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}",
                      "id": "networkconnectivity.projects.locations.global.hubs.patch",
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates the description and/or labels of a Network Connectivity Center hub.",
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        },
                        "updateMask": {
                          "location": "query",
                          "description": "Optional. In the case of an update to an existing hub, field mask is used to specify the fields to be overwritten. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it is in the mask. If the user does not provide a mask, then all fields are overwritten.",
                          "type": "string",
                          "format": "google-fieldmask"
                        },
                        "name": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
                          "description": "Immutable. The name of the hub. Hub names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}`",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "Hub"
                      },
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "setIamPolicy": {
                      "flatPath": "v1/projects/{projectsId}/locations/global/hubs/{hubsId}:setIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      },
                      "path": "v1/{+resource}:setIamPolicy",
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "networkconnectivity.projects.locations.global.hubs.setIamPolicy",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/global/hubs/[^/]+$",
                          "location": "path"
                        }
                      }
                    }
                  }
                },
                "policyBasedRoutes": {
                  "methods": {
                    "getIamPolicy": {
                      "response": {
                        "$ref": "Policy"
                      },
                      "id": "networkconnectivity.projects.locations.global.policyBasedRoutes.getIamPolicy",
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$",
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true
                        },
                        "options.requestedPolicyVersion": {
                          "location": "query",
                          "format": "int32",
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "type": "integer"
                        }
                      },
                      "path": "v1/{+resource}:getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}:getIamPolicy",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                    },
                    "setIamPolicy": {
                      "response": {
                        "$ref": "Policy"
                      },
                      "httpMethod": "POST",
                      "path": "v1/{+resource}:setIamPolicy",
                      "id": "networkconnectivity.projects.locations.global.policyBasedRoutes.setIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}:setIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                    },
                    "testIamPermissions": {
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/global/policyBasedRoutes/[^/]+$"
                        }
                      },
                      "httpMethod": "POST",
                      "path": "v1/{+resource}:testIamPermissions",
                      "flatPath": "v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}:testIamPermissions",
                      "id": "networkconnectivity.projects.locations.global.policyBasedRoutes.testIamPermissions"
                    }
                  }
                }
              }
            },
            "serviceClasses": {
              "methods": {
                "patch": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$",
                      "type": "string",
                      "description": "Immutable. The name of a ServiceClass resource. Format: projects/{project}/locations/{location}/serviceClasses/{service_class} See: https://google.aip.dev/122#fields-representing-resource-names",
                      "required": true
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the ServiceClass resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single ServiceClass.",
                  "id": "networkconnectivity.projects.locations.serviceClasses.patch",
                  "request": {
                    "$ref": "ServiceClass"
                  }
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single ServiceClass.",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "networkconnectivity.projects.locations.serviceClasses.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "etag": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the ServiceClass to delete."
                    }
                  }
                },
                "setIamPolicy": {
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}:setIamPolicy",
                  "id": "networkconnectivity.projects.locations.serviceClasses.setIamPolicy",
                  "httpMethod": "POST"
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceClasses",
                  "response": {
                    "$ref": "ListServiceClassesResponse"
                  },
                  "description": "Lists ServiceClasses in a given project and location.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "networkconnectivity.projects.locations.serviceClasses.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of results per page that should be returned.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Sort the results by a certain order.",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent resource's name.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "description": "The page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "A filter expression that filters the results listed in the response.",
                      "location": "query"
                    }
                  },
                  "path": "v1/{+parent}/serviceClasses"
                },
                "getIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+resource}:getIamPolicy",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$",
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}:getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "id": "networkconnectivity.projects.locations.serviceClasses.getIamPolicy"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ServiceClass"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets details of a single ServiceClass.",
                  "id": "networkconnectivity.projects.locations.serviceClasses.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$",
                      "description": "Required. Name of the ServiceClass to get.",
                      "type": "string"
                    }
                  }
                },
                "testIamPermissions": {
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "id": "networkconnectivity.projects.locations.serviceClasses.testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}:testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceClasses/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  }
                }
              }
            },
            "internalRanges": {
              "methods": {
                "delete": {
                  "id": "networkconnectivity.projects.locations.internalRanges.delete",
                  "path": "v1/{+name}",
                  "description": "Deletes a single internal range.",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the internal range to delete."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/internalRanges/{internalRangesId}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "get": {
                  "id": "networkconnectivity.projects.locations.internalRanges.get",
                  "response": {
                    "$ref": "InternalRange"
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$",
                      "description": "Required. Name of the InternalRange to get.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Gets details of a single internal range.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/internalRanges/{internalRangesId}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "response": {
                    "$ref": "ListInternalRangesResponse"
                  },
                  "description": "Lists internal ranges in a given project and location.",
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/internalRanges",
                  "id": "networkconnectivity.projects.locations.internalRanges.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The page token."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of results per page that should be returned.",
                      "type": "integer",
                      "location": "query"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Sort the results by a certain order."
                    },
                    "filter": {
                      "location": "query",
                      "description": "A filter expression that filters the results listed in the response.",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent resource's name.",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/internalRanges"
                },
                "patch": {
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "InternalRange"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/internalRanges/{internalRangesId}",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the InternalRange resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/internalRanges/[^/]+$",
                      "description": "Immutable. The name of an internal range. Format: projects/{project}/locations/{location}/internalRanges/{internal_range} See: https://google.aip.dev/122#fields-representing-resource-names",
                      "required": true
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "id": "networkconnectivity.projects.locations.internalRanges.patch",
                  "description": "Updates the parameters of a single internal range.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH"
                },
                "create": {
                  "request": {
                    "$ref": "InternalRange"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Creates a new internal range in a given project and location.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent resource's name of the internal range.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "internalRangeId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/internalRanges/foo') See https://google.aip.dev/122#resource-id-segments Unique per location."
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/internalRanges",
                  "path": "v1/{+parent}/internalRanges",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "networkconnectivity.projects.locations.internalRanges.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "serviceConnectionTokens": {
              "methods": {
                "create": {
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource's name of the ServiceConnectionToken.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "serviceConnectionTokenId": {
                      "type": "string",
                      "description": "Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/ServiceConnectionTokens/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.",
                      "location": "query"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "request": {
                    "$ref": "ServiceConnectionToken"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "networkconnectivity.projects.locations.serviceConnectionTokens.create",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionTokens",
                  "path": "v1/{+parent}/serviceConnectionTokens",
                  "description": "Creates a new ServiceConnectionToken in a given project and location."
                },
                "list": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionTokens.list",
                  "path": "v1/{+parent}/serviceConnectionTokens",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionTokens",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListServiceConnectionTokensResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of results per page that should be returned.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "filter": {
                      "location": "query",
                      "description": "A filter expression that filters the results listed in the response.",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Sort the results by a certain order.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent resource's name.",
                      "type": "string",
                      "required": true
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The page token.",
                      "type": "string"
                    }
                  },
                  "description": "Lists ServiceConnectionTokens in a given project and location."
                },
                "delete": {
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. The name of the ServiceConnectionToken to delete.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionTokens/[^/]+$",
                      "location": "path"
                    },
                    "etag": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionTokens/{serviceConnectionTokensId}",
                  "description": "Deletes a single ServiceConnectionToken.",
                  "id": "networkconnectivity.projects.locations.serviceConnectionTokens.delete"
                },
                "get": {
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionTokens/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the ServiceConnectionToken to get."
                    }
                  },
                  "response": {
                    "$ref": "ServiceConnectionToken"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "networkconnectivity.projects.locations.serviceConnectionTokens.get",
                  "description": "Gets details of a single ServiceConnectionToken.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionTokens/{serviceConnectionTokensId}"
                }
              }
            },
            "serviceConnectionPolicies": {
              "methods": {
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the parameters of a single ServiceConnectionPolicy.",
                  "path": "v1/{+name}",
                  "id": "networkconnectivity.projects.locations.serviceConnectionPolicies.patch",
                  "request": {
                    "$ref": "ServiceConnectionPolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Immutable. The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "updateMask": {
                      "location": "query",
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the ServiceConnectionPolicy resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "format": "google-fieldmask",
                      "type": "string"
                    }
                  }
                },
                "getIamPolicy": {
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32"
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "networkconnectivity.projects.locations.serviceConnectionPolicies.getIamPolicy",
                  "httpMethod": "GET",
                  "path": "v1/{+resource}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}:getIamPolicy"
                },
                "testIamPermissions": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "id": "networkconnectivity.projects.locations.serviceConnectionPolicies.testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "httpMethod": "POST"
                },
                "setIamPolicy": {
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "networkconnectivity.projects.locations.serviceConnectionPolicies.setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+resource}:setIamPolicy"
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies",
                  "parameters": {
                    "orderBy": {
                      "description": "Sort the results by a certain order.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "A filter expression that filters the results listed in the response.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The parent resource's name.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "pageToken": {
                      "description": "The page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of results per page that should be returned.",
                      "format": "int32"
                    }
                  },
                  "description": "Lists ServiceConnectionPolicies in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "networkconnectivity.projects.locations.serviceConnectionPolicies.list",
                  "response": {
                    "$ref": "ListServiceConnectionPoliciesResponse"
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/serviceConnectionPolicies"
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource's name of the ServiceConnectionPolicy.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "serviceConnectionPolicyId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionPolicies/foo') See https://google.aip.dev/122#resource-id-segments Unique per location."
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ServiceConnectionPolicy"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies",
                  "id": "networkconnectivity.projects.locations.serviceConnectionPolicies.create",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+parent}/serviceConnectionPolicies",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new ServiceConnectionPolicy in a given project and location."
                },
                "delete": {
                  "id": "networkconnectivity.projects.locations.serviceConnectionPolicies.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the ServiceConnectionPolicy to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$"
                    },
                    "etag": {
                      "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "description": "Deletes a single ServiceConnectionPolicy.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}",
                  "path": "v1/{+name}"
                },
                "get": {
                  "httpMethod": "GET",
                  "id": "networkconnectivity.projects.locations.serviceConnectionPolicies.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionPolicies/[^/]+$",
                      "description": "Required. Name of the ServiceConnectionPolicy to get."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ServiceConnectionPolicy"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets details of a single ServiceConnectionPolicy."
                }
              }
            },
            "serviceConnectionMaps": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "id": "networkconnectivity.projects.locations.serviceConnectionMaps.delete",
                  "parameters": {
                    "etag": {
                      "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$",
                      "description": "Required. The name of the ServiceConnectionMap to delete.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "description": "Deletes a single ServiceConnectionMap.",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListServiceConnectionMapsResponse"
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "description": "The maximum number of results per page that should be returned.",
                      "location": "query",
                      "format": "int32"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Sort the results by a certain order.",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent resource's name."
                    },
                    "pageToken": {
                      "description": "The page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "description": "A filter expression that filters the results listed in the response.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists ServiceConnectionMaps in a given project and location.",
                  "id": "networkconnectivity.projects.locations.serviceConnectionMaps.list",
                  "path": "v1/{+parent}/serviceConnectionMaps"
                },
                "create": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ServiceConnectionMap"
                  },
                  "parameters": {
                    "serviceConnectionMapId": {
                      "location": "query",
                      "description": "Optional. Resource ID (i.e. 'foo' in '[...]/projects/p/locations/l/serviceConnectionMaps/foo') See https://google.aip.dev/122#resource-id-segments Unique per location. If one is not provided, one will be generated.",
                      "type": "string"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The parent resource's name of the ServiceConnectionMap.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps",
                  "path": "v1/{+parent}/serviceConnectionMaps",
                  "id": "networkconnectivity.projects.locations.serviceConnectionMaps.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new ServiceConnectionMap in a given project and location."
                },
                "getIamPolicy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}:getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "networkconnectivity.projects.locations.serviceConnectionMaps.getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "get": {
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets details of a single ServiceConnectionMap.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the ServiceConnectionMap to get.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "id": "networkconnectivity.projects.locations.serviceConnectionMaps.get",
                  "response": {
                    "$ref": "ServiceConnectionMap"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "httpMethod": "POST",
                  "id": "networkconnectivity.projects.locations.serviceConnectionMaps.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}:testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions"
                },
                "setIamPolicy": {
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true
                    }
                  },
                  "id": "networkconnectivity.projects.locations.serviceConnectionMaps.setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "path": "v1/{+resource}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ServiceConnectionMap"
                  },
                  "httpMethod": "PATCH",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Updates the parameters of a single ServiceConnectionMap.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "networkconnectivity.projects.locations.serviceConnectionMaps.patch",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}",
                  "parameters": {
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the ServiceConnectionMap resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/serviceConnectionMaps/[^/]+$"
                    }
                  }
                }
              }
            },
            "spokes": {
              "methods": {
                "getIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "resource": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "id": "networkconnectivity.projects.locations.spokes.getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "path": "v1/{+resource}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:getIamPolicy",
                  "httpMethod": "GET"
                },
                "setIamPolicy": {
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "httpMethod": "POST",
                  "id": "networkconnectivity.projects.locations.spokes.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "reject": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:reject",
                  "id": "networkconnectivity.projects.locations.spokes.reject",
                  "description": "Rejects a Network Connectivity Center spoke from being attached to the hub. If the spoke was previously in the `ACTIVE` state, it transitions to the `INACTIVE` state and is no longer able to connect to other spokes that are attached to the hub.",
                  "request": {
                    "$ref": "RejectSpokeRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the spoke to reject.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}:reject"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Spoke"
                  },
                  "id": "networkconnectivity.projects.locations.spokes.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}",
                  "description": "Gets details about a Network Connectivity Center spoke.",
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the spoke resource.",
                      "required": true
                    }
                  }
                },
                "create": {
                  "id": "networkconnectivity.projects.locations.spokes.create",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Spoke"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/spokes",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes",
                  "description": "Creates a Network Connectivity Center spoke.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource."
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "spokeId": {
                      "description": "Required. Unique id for the spoke to create.",
                      "location": "query",
                      "type": "string"
                    }
                  }
                },
                "accept": {
                  "description": "Accepts a proposal to attach a Network Connectivity Center spoke to the hub.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the spoke to accept.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:accept",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "AcceptSpokeRequest"
                  },
                  "id": "networkconnectivity.projects.locations.spokes.accept",
                  "path": "v1/{+name}:accept"
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}",
                  "description": "Updates the parameters of a Network Connectivity Center spoke.",
                  "id": "networkconnectivity.projects.locations.spokes.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Spoke"
                  },
                  "path": "v1/{+name}",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Optional. In the case of an update to an existing spoke, field mask is used to specify the fields to be overwritten. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it is in the mask. If the user does not provide a mask, then all fields are overwritten.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
                      "location": "path",
                      "description": "Immutable. The name of the spoke. Spoke names must be unique. They use the following form: `projects/{project_number}/locations/{region}/spokes/{spoke_id}`",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "PATCH"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the spoke to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}",
                  "id": "networkconnectivity.projects.locations.spokes.delete",
                  "path": "v1/{+name}",
                  "description": "Deletes a Network Connectivity Center spoke."
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/spokes/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+resource}:testIamPermissions",
                  "id": "networkconnectivity.projects.locations.spokes.testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  }
                },
                "list": {
                  "path": "v1/{+parent}/spokes",
                  "response": {
                    "$ref": "ListSpokesResponse"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists the Network Connectivity Center spokes in a specified project and location.",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "An expression that filters the list of results.",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "The page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource."
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Sort the results by a certain order."
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of results to return per page."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/spokes",
                  "id": "networkconnectivity.projects.locations.spokes.list"
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "id": "networkconnectivity.projects.locations.operations.cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+name}:cancel",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the operation resource to be cancelled.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "GoogleLongrunningCancelOperationRequest"
                  }
                },
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "networkconnectivity.projects.locations.operations.get"
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation resource to be deleted."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "id": "networkconnectivity.projects.locations.operations.delete",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "path": "v1/{+name}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "id": "networkconnectivity.projects.locations.operations.list"
                }
              }
            }
          },
          "methods": {
            "get": {
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "description": "Gets information about a location.",
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Resource name for the location.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Location"
              },
              "id": "networkconnectivity.projects.locations.get"
            },
            "list": {
              "parameterOrder": [
                "name"
              ],
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "path": "v1/{+name}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string"
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "id": "networkconnectivity.projects.locations.list",
              "flatPath": "v1/projects/{projectsId}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        }
      }
    }
  },
  "parameters": {
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean",
      "default": "true"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "alt": {
      "type": "string",
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    }
  },
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "mtlsRootUrl": "https://networkconnectivity.mtls.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "documentationLink": "https://cloud.google.com/network-connectivity/docs/reference/networkconnectivity/rest",
  "id": "networkconnectivity:v1",
  "schemas": {
    "Route": {
      "id": "Route",
      "type": "object",
      "description": "A route defines a path from VM instances within a spoke to a specific destination resource. Only VPC spokes have routes.",
      "properties": {
        "uid": {
          "type": "string",
          "description": "Output only. The Google-generated UUID for the route. This value is unique across all Network Connectivity Center route resources. If a route is deleted and another with the same name is created, the new route is assigned a different `uid`.",
          "readOnly": true
        },
        "type": {
          "description": "Output only. The route's type. Its type is determined by the properties of its IP address range.",
          "enum": [
            "ROUTE_TYPE_UNSPECIFIED",
            "VPC_PRIMARY_SUBNET",
            "VPC_SECONDARY_SUBNET"
          ],
          "type": "string",
          "enumDescriptions": [
            "No route type information specified",
            "The route leads to a destination within the primary address range of the VPC network's subnet.",
            "The route leads to a destination within the secondary address range of the VPC network's subnet."
          ],
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Immutable. The name of the route. Route names must be unique. Route names use the following form: `projects/{project_number}/locations/global/hubs/{hub}/routeTables/{route_table_id}/routes/{route_id}`"
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No state information available",
            "The resource's create operation is in progress.",
            "The resource is active",
            "The resource's delete operation is in progress.",
            "The resource's accept operation is in progress.",
            "The resource's reject operation is in progress.",
            "The resource's update operation is in progress.",
            "The resource is inactive.",
            "The hub associated with this spoke resource has been deleted. This state applies to spoke resources only."
          ],
          "description": "Output only. The current lifecycle state of the route.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING",
            "ACCEPTING",
            "REJECTING",
            "UPDATING",
            "INACTIVE",
            "OBSOLETE"
          ]
        },
        "createTime": {
          "description": "Output only. The time the route was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "ipCidrRange": {
          "type": "string",
          "description": "The destination IP address range."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the route was last updated."
        },
        "spoke": {
          "description": "Immutable. The spoke that this route leads to. Example: projects/12345/locations/global/spokes/SPOKE",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Optional labels in key:value format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).",
          "additionalProperties": {
            "type": "string"
          }
        },
        "nextHopVpcNetwork": {
          "$ref": "NextHopVpcNetwork",
          "description": "Immutable. The destination VPC network for packets on this route."
        },
        "location": {
          "readOnly": true,
          "description": "Output only. The location of the route. Uses the following form: \"projects/{project}/locations/{location}\" Example: projects/1234/locations/us-central1",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "An optional description of the route."
        }
      }
    },
    "TestIamPermissionsRequest": {
      "type": "object",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      },
      "description": "Request message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsRequest"
    },
    "SpokeStateCount": {
      "id": "SpokeStateCount",
      "type": "object",
      "description": "The number of spokes that are in a particular state and associated with a given hub.",
      "properties": {
        "state": {
          "enumDescriptions": [
            "No state information available",
            "The resource's create operation is in progress.",
            "The resource is active",
            "The resource's delete operation is in progress.",
            "The resource's accept operation is in progress.",
            "The resource's reject operation is in progress.",
            "The resource's update operation is in progress.",
            "The resource is inactive.",
            "The hub associated with this spoke resource has been deleted. This state applies to spoke resources only."
          ],
          "type": "string",
          "description": "Output only. The state of the spokes.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING",
            "ACCEPTING",
            "REJECTING",
            "UPDATING",
            "INACTIVE",
            "OBSOLETE"
          ]
        },
        "count": {
          "format": "int64",
          "type": "string",
          "description": "Output only. The total number of spokes that are in this state and associated with a given hub.",
          "readOnly": true
        }
      }
    },
    "LinkedInterconnectAttachments": {
      "type": "object",
      "description": "A collection of VLAN attachment resources. These resources should be redundant attachments that all advertise the same prefixes to Google Cloud. Alternatively, in active/passive configurations, all attachments should be capable of advertising the same prefixes.",
      "id": "LinkedInterconnectAttachments",
      "properties": {
        "uris": {
          "description": "The URIs of linked interconnect attachment resources",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vpcNetwork": {
          "description": "Output only. The VPC network where these VLAN attachments are located.",
          "type": "string",
          "readOnly": true
        },
        "siteToSiteDataTransfer": {
          "type": "boolean",
          "description": "A value that controls whether site-to-site data transfer is enabled for these resources. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations)."
        }
      }
    },
    "GoogleLongrunningCancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "id": "GoogleLongrunningCancelOperationRequest",
      "properties": {},
      "type": "object"
    },
    "PscConfig": {
      "id": "PscConfig",
      "properties": {
        "limit": {
          "type": "string",
          "description": "Optional. Max number of PSC connections for this policy.",
          "format": "int64"
        },
        "subnetworks": {
          "items": {
            "type": "string"
          },
          "description": "The resource paths of subnetworks to use for IP address management. Example: projects/{projectNumOrId}/regions/{region}/subnetworks/{resourceId}.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Configuration used for Private Service Connect connections. Used when Infrastructure is PSC."
    },
    "Policy": {
      "type": "object",
      "id": "Policy",
      "properties": {
        "version": {
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer"
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "format": "byte",
          "type": "string"
        },
        "auditConfigs": {
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "type": "array",
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        }
      },
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
    },
    "LinkedRouterApplianceInstances": {
      "description": "A collection of router appliance instances. If you configure multiple router appliance instances to receive data from the same set of sites outside of Google Cloud, we recommend that you associate those instances with the same spoke.",
      "type": "object",
      "id": "LinkedRouterApplianceInstances",
      "properties": {
        "vpcNetwork": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The VPC network where these router appliance instances are located."
        },
        "instances": {
          "type": "array",
          "description": "The list of router appliance instances.",
          "items": {
            "$ref": "RouterApplianceInstance"
          }
        },
        "siteToSiteDataTransfer": {
          "description": "A value that controls whether site-to-site data transfer is enabled for these resources. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).",
          "type": "boolean"
        }
      }
    },
    "SpokeStateReasonCount": {
      "description": "The number of spokes in the hub that are inactive for this reason.",
      "properties": {
        "stateReasonCode": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "CODE_UNSPECIFIED",
            "PENDING_REVIEW",
            "REJECTED",
            "PAUSED",
            "FAILED"
          ],
          "enumDescriptions": [
            "No information available.",
            "The proposed spoke is pending review.",
            "The proposed spoke has been rejected by the hub administrator.",
            "The spoke has been deactivated internally.",
            "Network Connectivity Center encountered errors while accepting the spoke."
          ],
          "description": "Output only. The reason that a spoke is inactive."
        },
        "count": {
          "type": "string",
          "description": "Output only. The total number of spokes that are inactive for a particular reason and associated with a given hub.",
          "format": "int64",
          "readOnly": true
        }
      },
      "id": "SpokeStateReasonCount",
      "type": "object"
    },
    "SpokeTypeCount": {
      "id": "SpokeTypeCount",
      "properties": {
        "count": {
          "readOnly": true,
          "format": "int64",
          "type": "string",
          "description": "Output only. The total number of spokes of this type that are associated with the hub."
        },
        "spokeType": {
          "type": "string",
          "enum": [
            "SPOKE_TYPE_UNSPECIFIED",
            "VPN_TUNNEL",
            "INTERCONNECT_ATTACHMENT",
            "ROUTER_APPLIANCE",
            "VPC_NETWORK"
          ],
          "readOnly": true,
          "description": "Output only. The type of the spokes.",
          "enumDescriptions": [
            "Unspecified spoke type.",
            "Spokes associated with VPN tunnels.",
            "Spokes associated with VLAN attachments.",
            "Spokes associated with router appliance instances.",
            "Spokes associated with VPC networks."
          ]
        }
      },
      "description": "The number of spokes of a given type that are associated with a specific hub. The type indicates what kind of resource is associated with the spoke.",
      "type": "object"
    },
    "ListServiceConnectionTokensResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.",
          "type": "string"
        },
        "serviceConnectionTokens": {
          "type": "array",
          "items": {
            "$ref": "ServiceConnectionToken"
          },
          "description": "ServiceConnectionTokens to be returned."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Response for ListServiceConnectionTokens.",
      "id": "ListServiceConnectionTokensResponse"
    },
    "NextHopVpcNetwork": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "The URI of the VPC network resource"
        }
      },
      "type": "object",
      "id": "NextHopVpcNetwork"
    },
    "StateReason": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Human-readable details about this reason."
        },
        "userDetails": {
          "description": "Additional information provided by the user in the RejectSpoke call.",
          "type": "string"
        },
        "code": {
          "enum": [
            "CODE_UNSPECIFIED",
            "PENDING_REVIEW",
            "REJECTED",
            "PAUSED",
            "FAILED"
          ],
          "type": "string",
          "description": "The code associated with this reason.",
          "enumDescriptions": [
            "No information available.",
            "The proposed spoke is pending review.",
            "The proposed spoke has been rejected by the hub administrator.",
            "The spoke has been deactivated internally.",
            "Network Connectivity Center encountered errors while accepting the spoke."
          ]
        }
      },
      "description": "The reason a spoke is inactive.",
      "type": "object",
      "id": "StateReason"
    },
    "ConsumerPscConnection": {
      "description": "PSC connection details on consumer side.",
      "type": "object",
      "id": "ConsumerPscConnection",
      "properties": {
        "project": {
          "type": "string",
          "description": "The consumer project whose PSC forwarding rule is connected to the service attachments in this service connection map."
        },
        "error": {
          "description": "The most recent error during operating this connection.",
          "$ref": "GoogleRpcStatus"
        },
        "state": {
          "enumDescriptions": [
            "An invalid state as the default case.",
            "The connection is fully established and ready to use.",
            "The connection is not functional since some resources on the connection fail to be created.",
            "The connection is being created.",
            "The connection is being deleted."
          ],
          "type": "string",
          "description": "The state of the PSC connection.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "FAILED",
            "CREATING",
            "DELETING"
          ]
        },
        "network": {
          "type": "string",
          "description": "The consumer network whose PSC forwarding rule is connected to the service attachments in this service connection map. Note that the network could be on a different project (shared VPC)."
        },
        "gceOperation": {
          "type": "string",
          "description": "The last Compute Engine operation to setup PSC connection."
        },
        "serviceAttachmentUri": {
          "description": "The URI of a service attachment which is the target of the PSC connection.",
          "type": "string"
        },
        "pscConnectionId": {
          "description": "The PSC connection id of the PSC forwarding rule connected to the service attachments in this service connection map.",
          "type": "string"
        },
        "forwardingRule": {
          "type": "string",
          "description": "The URI of the consumer forwarding rule created. Example: projects/{projectNumOrId}/regions/us-east1/networks/{resourceId}."
        },
        "errorType": {
          "type": "string",
          "enum": [
            "CONNECTION_ERROR_TYPE_UNSPECIFIED",
            "ERROR_INTERNAL",
            "ERROR_CONSUMER_SIDE",
            "ERROR_PRODUCER_SIDE"
          ],
          "description": "The error type indicates whether the error is consumer facing, producer facing or system internal.",
          "enumDescriptions": [
            "An invalid error type as the default case.",
            "The error is due to Service Automation system internal.",
            "The error is due to the setup on consumer side.",
            "The error is due to the setup on producer side."
          ]
        },
        "errorInfo": {
          "readOnly": true,
          "$ref": "GoogleRpcErrorInfo",
          "description": "Output only. The error info for the latest error during operating this connection."
        },
        "ip": {
          "type": "string",
          "description": "The IP literal allocated on the consumer network for the PSC forwarding rule that is created to connect to the producer service attachment in this service connection map."
        }
      }
    },
    "AuditConfig": {
      "type": "object",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "id": "AuditConfig",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "AuditLogConfig"
          },
          "type": "array"
        }
      }
    },
    "SpokeSummary": {
      "id": "SpokeSummary",
      "type": "object",
      "description": "Summarizes information about the spokes associated with a hub. The summary includes a count of spokes according to type and according to state. If any spokes are inactive, the summary also lists the reasons they are inactive, including a count for each reason.",
      "properties": {
        "spokeStateCounts": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "SpokeStateCount"
          },
          "description": "Output only. Counts the number of spokes that are in each state and associated with a given hub."
        },
        "spokeTypeCounts": {
          "type": "array",
          "items": {
            "$ref": "SpokeTypeCount"
          },
          "description": "Output only. Counts the number of spokes of each type that are associated with a specific hub.",
          "readOnly": true
        },
        "spokeStateReasonCounts": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. Counts the number of spokes that are inactive for each possible reason and associated with a given hub.",
          "items": {
            "$ref": "SpokeStateReasonCount"
          }
        }
      }
    },
    "ServiceConnectionToken": {
      "description": "The ServiceConnectionToken resource. Next id: 10",
      "properties": {
        "name": {
          "type": "string",
          "description": "Immutable. The name of a ServiceConnectionToken. Format: projects/{project}/locations/{location}/ServiceConnectionTokens/{service_connection_token} See: https://google.aip.dev/122#fields-representing-resource-names"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "User-defined labels."
        },
        "etag": {
          "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Time when the ServiceConnectionToken was updated.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Time when the ServiceConnectionToken was created."
        },
        "expireTime": {
          "description": "Output only. The time to which this token is valid.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "A description of this resource."
        },
        "network": {
          "type": "string",
          "description": "The resource path of the network associated with this token. Example: projects/{projectNumOrId}/global/networks/{resourceId}."
        },
        "token": {
          "readOnly": true,
          "description": "Output only. The token generated by Automation.",
          "type": "string"
        }
      },
      "id": "ServiceConnectionToken",
      "type": "object"
    },
    "PscConnection": {
      "properties": {
        "errorType": {
          "enum": [
            "CONNECTION_ERROR_TYPE_UNSPECIFIED",
            "ERROR_INTERNAL",
            "ERROR_CONSUMER_SIDE",
            "ERROR_PRODUCER_SIDE"
          ],
          "type": "string",
          "enumDescriptions": [
            "An invalid error type as the default case.",
            "The error is due to Service Automation system internal.",
            "The error is due to the setup on consumer side.",
            "The error is due to the setup on producer side."
          ],
          "description": "The error type indicates whether the error is consumer facing, producer facing or system internal."
        },
        "consumerTargetProject": {
          "type": "string",
          "description": "The project where the PSC connection is created."
        },
        "gceOperation": {
          "type": "string",
          "description": "The last Compute Engine operation to setup PSC connection."
        },
        "consumerAddress": {
          "type": "string",
          "description": "The resource reference of the consumer address."
        },
        "pscConnectionId": {
          "type": "string",
          "description": "The PSC connection id of the PSC forwarding rule."
        },
        "consumerForwardingRule": {
          "description": "The resource reference of the PSC Forwarding Rule within the consumer VPC.",
          "type": "string"
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The most recent error during operating this connection."
        },
        "errorInfo": {
          "$ref": "GoogleRpcErrorInfo",
          "readOnly": true,
          "description": "Output only. The error info for the latest error during operating this connection."
        },
        "state": {
          "enumDescriptions": [
            "An invalid state as the default case.",
            "The connection is fully established and ready to use.",
            "The connection is not functional since some resources on the connection fail to be created.",
            "The connection is being created.",
            "The connection is being deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "FAILED",
            "CREATING",
            "DELETING"
          ],
          "description": "State of the PSC Connection",
          "type": "string"
        }
      },
      "description": "Information about a specific Private Service Connect connection.",
      "id": "PscConnection",
      "type": "object"
    },
    "RejectSpokeRequest": {
      "id": "RejectSpokeRequest",
      "description": "The request for HubService.RejectSpoke.",
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        },
        "details": {
          "description": "Optional. Additional information provided by the hub administrator in the `RejectSpoke` call.",
          "type": "string"
        }
      }
    },
    "ListInternalRangesResponse": {
      "type": "object",
      "id": "ListInternalRangesResponse",
      "description": "Response for InternalRange.ListInternalRanges",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result."
        },
        "internalRanges": {
          "type": "array",
          "items": {
            "$ref": "InternalRange"
          },
          "description": "Internal ranges to be returned."
        }
      }
    },
    "LocationMetadata": {
      "description": "Metadata about locations",
      "id": "LocationMetadata",
      "type": "object",
      "properties": {
        "locationFeatures": {
          "type": "array",
          "description": "List of supported features",
          "items": {
            "enumDescriptions": [
              "No publicly supported feature in this location",
              "Site-to-cloud spokes are supported in this location",
              "Site-to-site spokes are supported in this location"
            ],
            "enum": [
              "LOCATION_FEATURE_UNSPECIFIED",
              "SITE_TO_CLOUD_SPOKES",
              "SITE_TO_SITE_SPOKES"
            ],
            "type": "string"
          }
        }
      }
    },
    "GoogleRpcErrorInfo": {
      "id": "GoogleRpcErrorInfo",
      "properties": {
        "domain": {
          "description": "The logical grouping to which the \"reason\" belongs. The error domain is typically the registered service name of the tool or product that generates the error. Example: \"pubsub.googleapis.com\". If the error is generated by some common infrastructure, the error domain must be a globally unique value that identifies the infrastructure. For Google API infrastructure, the error domain is \"googleapis.com\".",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Additional structured details about this error. Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in length. When identifying the current value of an exceeded limit, the units should be contained in the key, not the value. For example, rather than {\"instanceLimit\": \"100/request\"}, should be returned as, {\"instanceLimitPerRequest\": \"100\"}, if the client exceeds the number of instances that can be created in a single (batch) request."
        },
        "reason": {
          "description": "The reason of the error. This is a constant value that identifies the proximate cause of the error. Error reasons are unique within a particular domain of errors. This should be at most 63 characters and match a regular expression of `A-Z+[A-Z0-9]`, which represents UPPER_SNAKE_CASE.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Describes the cause of the error with structured details. Example of an error when contacting the \"pubsub.googleapis.com\" API when it is not enabled: { \"reason\": \"API_DISABLED\" \"domain\": \"googleapis.com\" \"metadata\": { \"resource\": \"projects/123\", \"service\": \"pubsub.googleapis.com\" } } This response indicates that the pubsub.googleapis.com API is not enabled. Example of an error that is returned when attempting to create a Spanner instance in a region that is out of stock: { \"reason\": \"STOCKOUT\" \"domain\": \"spanner.googleapis.com\", \"metadata\": { \"availableRegions\": \"us-central1,us-east2\" } }"
    },
    "ServiceClass": {
      "type": "object",
      "id": "ServiceClass",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Time when the ServiceClass was created."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The name of a ServiceClass resource. Format: projects/{project}/locations/{location}/serviceClasses/{service_class} See: https://google.aip.dev/122#fields-representing-resource-names"
        },
        "labels": {
          "description": "User-defined labels.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "updateTime": {
          "description": "Output only. Time when the ServiceClass was updated.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "A description of this resource.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
        },
        "serviceClass": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The generated service class name. Use this name to refer to the Service class in Service Connection Maps and Service Connection Policies."
        }
      },
      "description": "The ServiceClass resource. Next id: 9"
    },
    "ListServiceClassesResponse": {
      "description": "Response for ListServiceClasses.",
      "id": "ListServiceClassesResponse",
      "properties": {
        "serviceClasses": {
          "type": "array",
          "items": {
            "$ref": "ServiceClass"
          },
          "description": "ServiceClasses to be returned."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result."
        }
      },
      "type": "object"
    },
    "LinkedVpcNetwork": {
      "properties": {
        "excludeExportRanges": {
          "description": "Optional. IP ranges encompassing the subnets to be excluded from peering.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uri": {
          "description": "Required. The URI of the VPC network resource.",
          "type": "string"
        }
      },
      "description": "An existing VPC network.",
      "type": "object",
      "id": "LinkedVpcNetwork"
    },
    "Spoke": {
      "description": "A Network Connectivity Center spoke represents one or more network connectivity resources. When you create a spoke, you associate it with a hub. You must also identify a value for exactly one of the following fields: * linked_vpn_tunnels * linked_interconnect_attachments * linked_router_appliance_instances",
      "properties": {
        "hub": {
          "type": "string",
          "description": "Immutable. The name of the hub that this spoke is attached to."
        },
        "linkedInterconnectAttachments": {
          "$ref": "LinkedInterconnectAttachments",
          "description": "VLAN attachments that are associated with the spoke."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the spoke was last updated.",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the spoke was created.",
          "format": "google-datetime"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING",
            "ACCEPTING",
            "REJECTING",
            "UPDATING",
            "INACTIVE",
            "OBSOLETE"
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. The current lifecycle state of this spoke.",
          "enumDescriptions": [
            "No state information available",
            "The resource's create operation is in progress.",
            "The resource is active",
            "The resource's delete operation is in progress.",
            "The resource's accept operation is in progress.",
            "The resource's reject operation is in progress.",
            "The resource's update operation is in progress.",
            "The resource is inactive.",
            "The hub associated with this spoke resource has been deleted. This state applies to spoke resources only."
          ]
        },
        "linkedVpcNetwork": {
          "$ref": "LinkedVpcNetwork",
          "description": "Optional. VPC network that is associated with the spoke."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The name of the spoke. Spoke names must be unique. They use the following form: `projects/{project_number}/locations/{region}/spokes/{spoke_id}`"
        },
        "linkedVpnTunnels": {
          "$ref": "LinkedVpnTunnels",
          "description": "VPN tunnels that are associated with the spoke."
        },
        "spokeType": {
          "enumDescriptions": [
            "Unspecified spoke type.",
            "Spokes associated with VPN tunnels.",
            "Spokes associated with VLAN attachments.",
            "Spokes associated with router appliance instances.",
            "Spokes associated with VPC networks."
          ],
          "readOnly": true,
          "enum": [
            "SPOKE_TYPE_UNSPECIFIED",
            "VPN_TUNNEL",
            "INTERCONNECT_ATTACHMENT",
            "ROUTER_APPLIANCE",
            "VPC_NETWORK"
          ],
          "type": "string",
          "description": "Output only. The type of resource associated with the spoke."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional labels in key:value format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)."
        },
        "reasons": {
          "items": {
            "$ref": "StateReason"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. The reasons for current state of the spoke. Only present when the spoke is in the `INACTIVE` state."
        },
        "uniqueId": {
          "readOnly": true,
          "description": "Output only. The Google-generated UUID for the spoke. This value is unique across all spoke resources. If a spoke is deleted and another with the same name is created, the new spoke is assigned a different `unique_id`.",
          "type": "string"
        },
        "linkedRouterApplianceInstances": {
          "description": "Router appliance instances that are associated with the spoke.",
          "$ref": "LinkedRouterApplianceInstances"
        },
        "description": {
          "description": "An optional description of the spoke.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Spoke"
    },
    "AuditLogConfig": {
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ]
        }
      },
      "id": "AuditLogConfig"
    },
    "Binding": {
      "description": "Associates `members`, or principals, with a `role`.",
      "properties": {
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        },
        "members": {
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "Binding"
    },
    "ListSpokesResponse": {
      "type": "object",
      "id": "ListSpokesResponse",
      "properties": {
        "spokes": {
          "description": "The requested spokes.",
          "items": {
            "$ref": "Spoke"
          },
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results."
        }
      },
      "description": "The response for HubService.ListSpokes."
    },
    "ListRouteTablesResponse": {
      "properties": {
        "routeTables": {
          "description": "The requested route tables.",
          "type": "array",
          "items": {
            "$ref": "RouteTable"
          }
        },
        "unreachable": {
          "description": "Hubs that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.",
          "type": "string"
        }
      },
      "id": "ListRouteTablesResponse",
      "description": "Response for HubService.ListRouteTables method.",
      "type": "object"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "InternalRange": {
      "id": "InternalRange",
      "type": "object",
      "properties": {
        "prefixLength": {
          "description": "An alternate to ip_cidr_range. Can be set when trying to create a reservation that automatically finds a free range of the given size. If both ip_cidr_range and prefix_length are set, there is an error if the range sizes do not match. Can also be used during updates to change the range size.",
          "format": "int32",
          "type": "integer"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "User-defined labels."
        },
        "ipCidrRange": {
          "description": "The IP range that this internal range defines.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Time when the internal range was updated."
        },
        "targetCidrRange": {
          "type": "array",
          "description": "Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set, defaults to the \"10.0.0.0/8\" address space. This can be used to search in other rfc-1918 address spaces like \"172.16.0.0/12\" and \"192.168.0.0/16\" or non-rfc-1918 address spaces used in the VPC.",
          "items": {
            "type": "string"
          }
        },
        "overlaps": {
          "items": {
            "enumDescriptions": [
              "No overlap overrides.",
              "Allow creation of static routes more specific that the current internal range.",
              "Allow creation of internal ranges that overlap with existing subnets."
            ],
            "type": "string",
            "enum": [
              "OVERLAP_UNSPECIFIED",
              "OVERLAP_ROUTE_RANGE",
              "OVERLAP_EXISTING_SUBNET_RANGE"
            ]
          },
          "type": "array",
          "description": "Optional. Types of resources that are allowed to overlap with the current internal range."
        },
        "network": {
          "description": "The URL or resource ID of the network in which to reserve the internal range. The network cannot be deleted if there are any reserved internal ranges referring to it. Legacy networks are not supported. This can only be specified for a global internal address. Example: - URL: /compute/v1/projects/{project}/global/networks/{resourceId} - ID: network123",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The name of an internal range. Format: projects/{project}/locations/{location}/internalRanges/{internal_range} See: https://google.aip.dev/122#fields-representing-resource-names"
        },
        "createTime": {
          "description": "Time when the internal range was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "usage": {
          "enum": [
            "USAGE_UNSPECIFIED",
            "FOR_VPC",
            "EXTERNAL_TO_VPC"
          ],
          "enumDescriptions": [
            "Unspecified usage is allowed in calls which identify the resource by other fields and do not need Usage set to complete. These are, i.e.: GetInternalRange and DeleteInternalRange. Usage needs to be specified explicitly in CreateInternalRange or UpdateInternalRange calls.",
            "A VPC resource can use the reserved CIDR block by associating it with the internal range resource if usage is set to FOR_VPC.",
            "Ranges created with EXTERNAL_TO_VPC cannot be associated with VPC resources and are meant to block out address ranges for various use cases, like for example, usage on-prem, with dynamic route announcements via interconnect."
          ],
          "description": "The type of usage set for this InternalRange.",
          "type": "string"
        },
        "users": {
          "readOnly": true,
          "description": "Output only. The list of resources that refer to this internal range. Resources that use the internal range for their range allocation are referred to as users of the range. Other resources mark themselves as users while doing so by creating a reference to this internal range. Having a user, based on this reference, prevents deletion of the internal range referred to. Can be empty.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "peering": {
          "enumDescriptions": [
            "If Peering is left unspecified in CreateInternalRange or UpdateInternalRange, it will be defaulted to FOR_SELF.",
            "This is the default behavior and represents the case that this internal range is intended to be used in the VPC in which it is created and is accessible from its peers. This implies that peers or peers-of-peers cannot use this range.",
            "This behavior can be set when the internal range is being reserved for usage by peers. This means that no resource within the VPC in which it is being created can use this to associate with a VPC resource, but one of the peers can. This represents donating a range for peers to use.",
            "This behavior can be set when the internal range is being reserved for usage by the VPC in which it is created, but not shared with peers. In a sense, it is local to the VPC. This can be used to create internal ranges for various purposes like HTTP_INTERNAL_LOAD_BALANCER or for Interconnect routes that are not shared with peers. This also implies that peers cannot use this range in a way that is visible to this VPC, but can re-use this range as long as it is NOT_SHARED from the peer VPC, too."
          ],
          "type": "string",
          "enum": [
            "PEERING_UNSPECIFIED",
            "FOR_SELF",
            "FOR_PEER",
            "NOT_SHARED"
          ],
          "description": "The type of peering set for this internal range."
        },
        "description": {
          "description": "A description of this resource.",
          "type": "string"
        }
      },
      "description": "The internal range resource for IPAM operations within a VPC network. Used to represent a private address range along with behavioral characterstics of that range (its usage and peering behavior). Networking resources can link to this range if they are created as belonging to it."
    },
    "GoogleRpcStatus": {
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        }
      },
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object"
    },
    "RouteTable": {
      "id": "RouteTable",
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the route table was created."
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the route table was last updated.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Optional labels in key:value format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).",
          "additionalProperties": {
            "type": "string"
          }
        },
        "uid": {
          "description": "Output only. The Google-generated UUID for the route table. This value is unique across all route table resources. If a route table is deleted and another with the same name is created, the new route table is assigned a different `uid`.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "An optional description of the route table."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The name of the route table. Route table names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub}/routeTables/{route_table_id}`"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING",
            "ACCEPTING",
            "REJECTING",
            "UPDATING",
            "INACTIVE",
            "OBSOLETE"
          ],
          "description": "Output only. The current lifecycle state of this route table.",
          "readOnly": true,
          "enumDescriptions": [
            "No state information available",
            "The resource's create operation is in progress.",
            "The resource is active",
            "The resource's delete operation is in progress.",
            "The resource's accept operation is in progress.",
            "The resource's reject operation is in progress.",
            "The resource's update operation is in progress.",
            "The resource is inactive.",
            "The hub associated with this spoke resource has been deleted. This state applies to spoke resources only."
          ],
          "type": "string"
        }
      }
    },
    "ListRoutesResponse": {
      "description": "Response for HubService.ListRoutes method.",
      "properties": {
        "unreachable": {
          "description": "RouteTables that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.",
          "type": "string"
        },
        "routes": {
          "description": "The requested routes.",
          "type": "array",
          "items": {
            "$ref": "Route"
          }
        }
      },
      "type": "object",
      "id": "ListRoutesResponse"
    },
    "SetIamPolicyRequest": {
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        },
        "updateMask": {
          "format": "google-fieldmask",
          "type": "string",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
        }
      },
      "type": "object",
      "description": "Request message for `SetIamPolicy` method.",
      "id": "SetIamPolicyRequest"
    },
    "RoutingVPC": {
      "description": "RoutingVPC contains information about the VPC networks associated with the spokes of a Network Connectivity Center hub.",
      "properties": {
        "requiredForNewSiteToSiteDataTransferSpokes": {
          "type": "boolean",
          "description": "Output only. If true, indicates that this VPC network is currently associated with spokes that use the data transfer feature (spokes where the site_to_site_data_transfer field is set to true). If you create new spokes that use data transfer, they must be associated with this VPC network. At most, one VPC network will have this field set to true.",
          "readOnly": true
        },
        "uri": {
          "type": "string",
          "description": "The URI of the VPC network."
        }
      },
      "id": "RoutingVPC",
      "type": "object"
    },
    "Location": {
      "properties": {
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        }
      },
      "description": "A resource that represents a Google Cloud location.",
      "id": "Location",
      "type": "object"
    },
    "ListServiceConnectionPoliciesResponse": {
      "id": "ListServiceConnectionPoliciesResponse",
      "type": "object",
      "properties": {
        "serviceConnectionPolicies": {
          "items": {
            "$ref": "ServiceConnectionPolicy"
          },
          "description": "ServiceConnectionPolicies to be returned.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Response for ListServiceConnectionPolicies."
    },
    "ListHubSpokesResponse": {
      "type": "object",
      "description": "The response for HubService.ListHubSpokes.",
      "id": "ListHubSpokesResponse",
      "properties": {
        "spokes": {
          "type": "array",
          "items": {
            "$ref": "Spoke"
          },
          "description": "The requested spokes. The spoke fields can be partially populated based on the `view` field in the request message."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results."
        }
      }
    },
    "ProducerPscConfig": {
      "type": "object",
      "id": "ProducerPscConfig",
      "description": "The PSC configurations on producer side.",
      "properties": {
        "serviceAttachmentUri": {
          "description": "The resource path of a service attachment. Example: projects/{projectNumOrId}/regions/{region}/serviceAttachments/{resourceId}.",
          "type": "string"
        }
      }
    },
    "ConsumerPscConfig": {
      "description": "Allow the producer to specify which consumers can connect to it.",
      "type": "object",
      "id": "ConsumerPscConfig",
      "properties": {
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Default state, when Connection Map is created initially.",
            "Set when policy and map configuration is valid, and their matching can lead to allowing creation of PSC Connections subject to other constraints like connections limit.",
            "No Service Connection Policy found for this network and Service Class",
            "Service Connection Policy limit reached for this network and Service Class"
          ],
          "description": "Output only. Overall state of PSC Connections management for this consumer psc config.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "VALID",
            "CONNECTION_POLICY_MISSING",
            "POLICY_LIMIT_REACHED"
          ]
        },
        "project": {
          "description": "The consumer project where PSC connections are allowed to be created in.",
          "type": "string"
        },
        "disableGlobalAccess": {
          "description": "This is used in PSC consumer ForwardingRule to control whether the PSC endpoint can be accessed from another region.",
          "type": "boolean"
        },
        "network": {
          "description": "The resource path of the consumer network where PSC connections are allowed to be created in. Note, this network does not need be in the ConsumerPscConfig.project in the case of SharedVPC. Example: projects/{projectNumOrId}/global/networks/{networkId}.",
          "type": "string"
        }
      }
    },
    "OperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "statusMessage": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean",
          "readOnly": true
        },
        "target": {
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string"
        }
      },
      "id": "OperationMetadata",
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "RouterApplianceInstance": {
      "id": "RouterApplianceInstance",
      "type": "object",
      "description": "A router appliance instance is a Compute Engine virtual machine (VM) instance that acts as a BGP speaker. A router appliance instance is specified by the URI of the VM and the internal IP address of one of the VM's network interfaces.",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "The IP address on the VM to use for peering."
        },
        "virtualMachine": {
          "description": "The URI of the VM.",
          "type": "string"
        }
      }
    },
    "GoogleLongrunningOperation": {
      "id": "GoogleLongrunningOperation",
      "type": "object",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "LinkedVpnTunnels": {
      "description": "A collection of Cloud VPN tunnel resources. These resources should be redundant HA VPN tunnels that all advertise the same prefixes to Google Cloud. Alternatively, in a passive/active configuration, all tunnels should be capable of advertising the same prefixes.",
      "properties": {
        "uris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The URIs of linked VPN tunnel resources."
        },
        "siteToSiteDataTransfer": {
          "type": "boolean",
          "description": "A value that controls whether site-to-site data transfer is enabled for these resources. Data transfer is available only in [supported locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations)."
        },
        "vpcNetwork": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The VPC network where these VPN tunnels are located."
        }
      },
      "type": "object",
      "id": "LinkedVpnTunnels"
    },
    "GoogleLongrunningListOperationsResponse": {
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "ListServiceConnectionMapsResponse": {
      "description": "Response for ListServiceConnectionMaps.",
      "properties": {
        "nextPageToken": {
          "description": "The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.",
          "type": "string"
        },
        "serviceConnectionMaps": {
          "description": "ServiceConnectionMaps to be returned.",
          "type": "array",
          "items": {
            "$ref": "ServiceConnectionMap"
          }
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      },
      "id": "ListServiceConnectionMapsResponse",
      "type": "object"
    },
    "ListHubsResponse": {
      "type": "object",
      "description": "Response for HubService.ListHubs method.",
      "id": "ListHubsResponse",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.",
          "type": "string"
        },
        "hubs": {
          "type": "array",
          "items": {
            "$ref": "Hub"
          },
          "description": "The requested hubs."
        }
      }
    },
    "AcceptSpokeRequest": {
      "properties": {
        "requestId": {
          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check to see whether the original operation was received. If it was, the server ignores the second request. This behavior prevents clients from mistakenly creating duplicate commitments. The request ID must be a valid UUID, with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "description": "The request for HubService.AcceptSpoke.",
      "type": "object",
      "id": "AcceptSpokeRequest"
    },
    "TestIamPermissionsResponse": {
      "type": "object",
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "ServiceConnectionPolicy": {
      "id": "ServiceConnectionPolicy",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Time when the ServiceConnectionMap was created.",
          "type": "string"
        },
        "pscConfig": {
          "$ref": "PscConfig",
          "description": "Configuration used for Private Service Connect connections. Used when Infrastructure is PSC."
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Time when the ServiceConnectionMap was updated.",
          "format": "google-datetime"
        },
        "labels": {
          "description": "User-defined labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "infrastructure": {
          "type": "string",
          "enum": [
            "INFRASTRUCTURE_UNSPECIFIED",
            "PSC"
          ],
          "enumDescriptions": [
            "An invalid infrastructure as the default case.",
            "Private Service Connect is used for connections."
          ],
          "description": "Output only. The type of underlying resources used to create the connection.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Immutable. The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names"
        },
        "description": {
          "description": "A description of this resource.",
          "type": "string"
        },
        "etag": {
          "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "network": {
          "type": "string",
          "description": "The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}."
        },
        "pscConnections": {
          "items": {
            "$ref": "PscConnection"
          },
          "readOnly": true,
          "description": "Output only. [Output only] Information about each Private Service Connect connection.",
          "type": "array"
        },
        "serviceClass": {
          "description": "The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass. It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The ServiceConnectionPolicy resource. Next id: 12"
    },
    "Hub": {
      "type": "object",
      "id": "Hub",
      "description": "A Network Connectivity Center hub is a global management resource to which you attach spokes. A single hub can contain spokes from multiple regions. However, if any of a hub's spokes use the site-to-site data transfer feature, the resources associated with those spokes must all be in the same VPC network. Spokes that do not use site-to-site data transfer can be associated with any VPC network in your project.",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional labels in key:value format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).",
          "type": "object"
        },
        "state": {
          "description": "Output only. The current lifecycle state of this hub.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING",
            "ACCEPTING",
            "REJECTING",
            "UPDATING",
            "INACTIVE",
            "OBSOLETE"
          ],
          "type": "string",
          "enumDescriptions": [
            "No state information available",
            "The resource's create operation is in progress.",
            "The resource is active",
            "The resource's delete operation is in progress.",
            "The resource's accept operation is in progress.",
            "The resource's reject operation is in progress.",
            "The resource's update operation is in progress.",
            "The resource is inactive.",
            "The hub associated with this spoke resource has been deleted. This state applies to spoke resources only."
          ]
        },
        "routingVpcs": {
          "items": {
            "$ref": "RoutingVPC"
          },
          "description": "The VPC networks associated with this hub's spokes. This field is read-only. Network Connectivity Center automatically populates it based on the set of spokes attached to the hub.",
          "type": "array"
        },
        "spokeSummary": {
          "readOnly": true,
          "$ref": "SpokeSummary",
          "description": "Output only. A summary of the spokes associated with a hub. The summary includes a count of spokes according to type and according to state. If any spokes are inactive, the summary also lists the reasons they are inactive, including a count for each reason."
        },
        "name": {
          "description": "Immutable. The name of the hub. Hub names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}`",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time the hub was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "uniqueId": {
          "description": "Output only. The Google-generated UUID for the hub. This value is unique across all hub resources. If a hub is deleted and another with the same name is created, the new hub is assigned a different unique_id.",
          "type": "string",
          "readOnly": true
        },
        "routeTables": {
          "description": "Output only. The route tables that belong to this hub. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}/routeTables/{route_table_id}` This field is read-only. Network Connectivity Center automatically populates it based on the route tables nested under the hub.",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the hub was last updated."
        },
        "description": {
          "description": "An optional description of the hub.",
          "type": "string"
        }
      }
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "id": "Expr",
      "properties": {
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        }
      }
    },
    "ServiceConnectionMap": {
      "properties": {
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Time when the ServiceConnectionMap was updated."
        },
        "name": {
          "description": "Immutable. The name of a ServiceConnectionMap. Format: projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map} See: https://google.aip.dev/122#fields-representing-resource-names",
          "type": "string"
        },
        "consumerPscConnections": {
          "items": {
            "$ref": "ConsumerPscConnection"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. PSC connection details on consumer side."
        },
        "token": {
          "description": "The token provided by the consumer. This token authenticates that the consumer can create a connecton within the specified project and network.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "User-defined labels.",
          "type": "object"
        },
        "infrastructure": {
          "enumDescriptions": [
            "An invalid infrastructure as the default case.",
            "Private Service Connect is used for connections."
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. The infrastructure used for connections between consumers/producers.",
          "enum": [
            "INFRASTRUCTURE_UNSPECIFIED",
            "PSC"
          ]
        },
        "serviceClass": {
          "type": "string",
          "description": "The service class identifier this ServiceConnectionMap is for. The user of ServiceConnectionMap create API needs to have networkconnecitivty.serviceclasses.use iam permission for the service class."
        },
        "producerPscConfigs": {
          "description": "The PSC configurations on producer side.",
          "items": {
            "$ref": "ProducerPscConfig"
          },
          "type": "array"
        },
        "etag": {
          "type": "string",
          "description": "Optional. The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
        },
        "serviceClassUri": {
          "description": "Output only. The service class uri this ServiceConnectionMap is for.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time when the ServiceConnectionMap was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "consumerPscConfigs": {
          "description": "The PSC configurations on consumer side.",
          "items": {
            "$ref": "ConsumerPscConfig"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "description": "A description of this resource."
        }
      },
      "type": "object",
      "description": "The ServiceConnectionMap resource. Next id: 15",
      "id": "ServiceConnectionMap"
    }
  },
  "baseUrl": "https://networkconnectivity.googleapis.com/",
  "name": "networkconnectivity",
  "revision": "20230721"
}

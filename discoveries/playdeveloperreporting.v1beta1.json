{
  "protocol": "rest",
  "basePath": "",
  "version": "v1beta1",
  "ownerName": "Google",
  "canonicalName": "Playdeveloperreporting",
  "name": "playdeveloperreporting",
  "documentationLink": "https://developers.google.com/play/developer/reporting",
  "resources": {
    "vitals": {
      "resources": {
        "crashrate": {
          "methods": {
            "query": {
              "httpMethod": "POST",
              "response": {
                "$ref": "GooglePlayDeveloperReportingV1beta1QueryCrashRateMetricSetResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1beta1/apps/{appsId}/crashRateMetricSet:query",
              "path": "v1beta1/{+name}:query",
              "id": "playdeveloperreporting.vitals.crashrate.query",
              "request": {
                "$ref": "GooglePlayDeveloperReportingV1beta1QueryCrashRateMetricSetRequest"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^apps/[^/]+/crashRateMetricSet$",
                  "description": "Required. The resource name. Format: apps/{app}/crashRateMetricSet"
                }
              },
              "description": "Queries the metrics in the metric set."
            },
            "get": {
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GooglePlayDeveloperReportingV1beta1CrashRateMetricSet"
              },
              "description": "Describes the properties of the metric set.",
              "flatPath": "v1beta1/apps/{appsId}/crashRateMetricSet",
              "path": "v1beta1/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^apps/[^/]+/crashRateMetricSet$",
                  "type": "string",
                  "description": "Required. The resource name. Format: apps/{app}/crashRateMetricSet",
                  "location": "path",
                  "required": true
                }
              },
              "id": "playdeveloperreporting.vitals.crashrate.get"
            }
          }
        },
        "anrrate": {
          "methods": {
            "get": {
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "description": "Required. The resource name. Format: apps/{app}/anrRateMetricSet",
                  "pattern": "^apps/[^/]+/anrRateMetricSet$",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "id": "playdeveloperreporting.vitals.anrrate.get",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/apps/{appsId}/anrRateMetricSet",
              "response": {
                "$ref": "GooglePlayDeveloperReportingV1beta1AnrRateMetricSet"
              },
              "description": "Describes the properties of the metric set."
            },
            "query": {
              "parameters": {
                "name": {
                  "pattern": "^apps/[^/]+/anrRateMetricSet$",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. The resource name. Format: apps/{app}/anrRateMetricSet"
                }
              },
              "response": {
                "$ref": "GooglePlayDeveloperReportingV1beta1QueryAnrRateMetricSetResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1beta1/apps/{appsId}/anrRateMetricSet:query",
              "id": "playdeveloperreporting.vitals.anrrate.query",
              "request": {
                "$ref": "GooglePlayDeveloperReportingV1beta1QueryAnrRateMetricSetRequest"
              },
              "httpMethod": "POST",
              "description": "Queries the metrics in the metric set.",
              "path": "v1beta1/{+name}:query"
            }
          }
        },
        "stuckbackgroundwakelockrate": {
          "methods": {
            "get": {
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1beta1/apps/{appsId}/stuckBackgroundWakelockRateMetricSet",
              "description": "Describes the properties of the metric set.",
              "path": "v1beta1/{+name}",
              "id": "playdeveloperreporting.vitals.stuckbackgroundwakelockrate.get",
              "parameters": {
                "name": {
                  "description": "Required. The resource name. Format: apps/{app}/stuckBackgroundWakelockRateMetricSet",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^apps/[^/]+/stuckBackgroundWakelockRateMetricSet$"
                }
              },
              "httpMethod": "GET",
              "response": {
                "$ref": "GooglePlayDeveloperReportingV1beta1StuckBackgroundWakelockRateMetricSet"
              }
            },
            "query": {
              "httpMethod": "POST",
              "id": "playdeveloperreporting.vitals.stuckbackgroundwakelockrate.query",
              "response": {
                "$ref": "GooglePlayDeveloperReportingV1beta1QueryStuckBackgroundWakelockRateMetricSetResponse"
              },
              "flatPath": "v1beta1/apps/{appsId}/stuckBackgroundWakelockRateMetricSet:query",
              "description": "Queries the metrics in the metric set.",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The resource name. Format: apps/{app}/stuckBackgroundWakelockRateMetricSet",
                  "type": "string",
                  "required": true,
                  "pattern": "^apps/[^/]+/stuckBackgroundWakelockRateMetricSet$"
                }
              },
              "path": "v1beta1/{+name}:query",
              "request": {
                "$ref": "GooglePlayDeveloperReportingV1beta1QueryStuckBackgroundWakelockRateMetricSetRequest"
              },
              "parameterOrder": [
                "name"
              ]
            }
          }
        },
        "excessivewakeuprate": {
          "methods": {
            "query": {
              "description": "Queries the metrics in the metric set.",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GooglePlayDeveloperReportingV1beta1QueryExcessiveWakeupRateMetricSetRequest"
              },
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^apps/[^/]+/excessiveWakeupRateMetricSet$",
                  "type": "string",
                  "description": "Required. The resource name. Format: apps/{app}/excessiveWakeupRateMetricSet",
                  "location": "path"
                }
              },
              "flatPath": "v1beta1/apps/{appsId}/excessiveWakeupRateMetricSet:query",
              "path": "v1beta1/{+name}:query",
              "id": "playdeveloperreporting.vitals.excessivewakeuprate.query",
              "response": {
                "$ref": "GooglePlayDeveloperReportingV1beta1QueryExcessiveWakeupRateMetricSetResponse"
              }
            },
            "get": {
              "response": {
                "$ref": "GooglePlayDeveloperReportingV1beta1ExcessiveWakeupRateMetricSet"
              },
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/apps/{appsId}/excessiveWakeupRateMetricSet",
              "id": "playdeveloperreporting.vitals.excessivewakeuprate.get",
              "parameters": {
                "name": {
                  "pattern": "^apps/[^/]+/excessiveWakeupRateMetricSet$",
                  "type": "string",
                  "description": "Required. The resource name. Format: apps/{app}/excessiveWakeupRateMetricSet",
                  "location": "path",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Describes the properties of the metric set.",
              "httpMethod": "GET"
            }
          }
        }
      }
    },
    "anomalies": {
      "methods": {
        "list": {
          "description": "Lists anomalies in any of the datasets.",
          "id": "playdeveloperreporting.anomalies.list",
          "response": {
            "$ref": "GooglePlayDeveloperReportingV1beta1ListAnomaliesResponse"
          },
          "parameters": {
            "pageToken": {
              "type": "string",
              "description": "A page token, received from a previous `ListErrorReports` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListErrorReports` must match the call that provided the page token.",
              "location": "query"
            },
            "filter": {
              "location": "query",
              "type": "string",
              "description": "Filtering criteria for anomalies. For basic filter guidance, please check: https://google.aip.dev/160. **Supported functions:** * `activeBetween(startTime, endTime)`: If specified, only list anomalies that were active in between `startTime` (inclusive) and `endTime` (exclusive). Both parameters are expected to conform to an RFC-3339 formatted string (e.g. `2012-04-21T11:30:00-04:00`). UTC offsets are supported. Both `startTime` and `endTime` accept the special value `UNBOUNDED`, to signify intervals with no lower or upper bound, respectively. Examples: * `activeBetween(\"2021-04-21T11:30:00Z\", \"2021-07-21T00:00:00Z\")` * `activeBetween(UNBOUNDED, \"2021-11-21T00:00:00-04:00\")` * `activeBetween(\"2021-07-21T00:00:00-04:00\", UNBOUNDED)`"
            },
            "pageSize": {
              "type": "integer",
              "description": "Maximum size of the returned data. If unspecified, at most 10 anomalies will be returned. The maximum value is 100; values above 100 will be coerced to 100.",
              "location": "query",
              "format": "int32"
            },
            "parent": {
              "description": "Required. Parent app for which anomalies were detected. Format: apps/{app}",
              "type": "string",
              "pattern": "^apps/[^/]+$",
              "location": "path",
              "required": true
            }
          },
          "flatPath": "v1beta1/apps/{appsId}/anomalies",
          "httpMethod": "GET",
          "path": "v1beta1/{+parent}/anomalies",
          "parameterOrder": [
            "parent"
          ]
        }
      }
    }
  },
  "description": "",
  "mtlsRootUrl": "https://playdeveloperreporting.mtls.googleapis.com/",
  "id": "playdeveloperreporting:v1beta1",
  "discoveryVersion": "v1",
  "batchPath": "batch",
  "parameters": {
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "alt": {
      "type": "string",
      "location": "query",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    }
  },
  "servicePath": "",
  "revision": "20220308",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "ownerDomain": "google.com",
  "fullyEncodeReservedExpansion": true,
  "schemas": {
    "GooglePlayDeveloperReportingV1beta1StuckBackgroundWakelockRateMetricSet": {
      "description": "Singleton resource representing the set of Stuck Background Wakelocks metrics. This metric set contains PowerManager wakelock duration data combined with process state data to produce a normalized metric independent of user counts. **Supported aggregation periods:** * DAILY: metrics are aggregated in calendar date intervals. Due to historical constraints, the only supported timezone is `America/Los_Angeles`. **Supported metrics:** * `stuckBgWakelockRate` (`google.type.Decimal`): Percentage of distinct users in the aggregation period that had a wakelock held in the background for longer than 1 hour. If your app exhibits a stuck background wakelocks rate equal to or higher than the threshold, it's in the bottom 25% of the top 1,000 apps on Google Play (by number of installs). * `stuckBgWakelockRate7dUserWeighted` (`google.type.Decimal`): Rolling average value of `stuckBgWakelockRate` in the last 7 days. The daily values are weighted by the count of distinct users for the day. * `stuckBgWakelockRate28dUserWeighted` (`google.type.Decimal`): Rolling average value of `stuckBgWakelockRate` in the last 28 days. The daily values are weighted by the count of distinct users for the day. * `distinctUsers` (`google.type.Decimal`): Count of distinct users in the aggregation period that were used as normalization value for the `stuckBgWakelockRate` metric. A user is counted in this metric if their app was doing any work on the device, i.e., not just active foreground usage but also background work. Care must be taken not to aggregate this count further, as it may result in users being counted multiple times. **Supported dimensions:** * `apiLevel` (string): the API level of Android that was running on the user's device. * `versionCode` (int64): version of the app that was running on the user's device. * `deviceModel` (string): unique identifier of the user's device model. * `deviceType` (string): the type (also known as form factor) of the user's device. * `countryCode` (string): the country or region of the user's device based on their IP address, represented as a 2-letter ISO-3166 code (e.g. US for the United States). **Required permissions**: to access this resource, the calling user needs the _View app information (read-only)_ permission for the app.",
      "id": "GooglePlayDeveloperReportingV1beta1StuckBackgroundWakelockRateMetricSet",
      "properties": {
        "freshnessInfo": {
          "$ref": "GooglePlayDeveloperReportingV1beta1FreshnessInfo",
          "description": "Summary about data freshness in this resource."
        },
        "name": {
          "description": "The resource name. Format: apps/{app}/stuckBackgroundWakelockRateMetricSet",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GooglePlayDeveloperReportingV1beta1QueryCrashRateMetricSetRequest": {
      "type": "object",
      "description": "Request message for QueryCrashRateMetricSet.",
      "properties": {
        "timelineSpec": {
          "$ref": "GooglePlayDeveloperReportingV1beta1TimelineSpec",
          "description": "Specification of the timeline aggregation parameters. **Supported aggregation periods:** * DAILY: metrics are aggregated in calendar date intervals. Due to historical constraints, the default and only supported timezone is `America/Los_Angeles`."
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum size of the returned data. If unspecified, at most 1000 rows will be returned. The maximum value is 100,000; values above 100,000 will be coerced to 100,000."
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Metrics to aggregate. **Supported metrics:** * `crashRate` (`google.type.Decimal`): Percentage of distinct users in the aggregation period that experienced at least one crash. If your app exhibits a crash rate equal to or higher than the threshold, it's in the bottom 25% of the top 1,000 apps on Google Play (by number of installs). * `crashRate7dUserWeighted` (`google.type.Decimal`): Rolling average value of `crashRate` in the last 7 days. The daily values are weighted by the count of distinct users for the day. * `crashRate28dUserWeighted` (`google.type.Decimal`): Rolling average value of `crashRate` in the last 28 days. The daily values are weighted by the count of distinct users for the day. * `distinctUsers` (`google.type.Decimal`): Count of distinct users in the aggregation period that were used as normalization value for the `crashRate` metric. A user is counted in this metric if they used the app in the foreground during the aggregation period. Care must be taken not to aggregate this count further, as it may result in users being counted multiple times."
        },
        "dimensions": {
          "items": {
            "type": "string"
          },
          "description": "Dimensions to slice the metrics by. **Supported dimensions:** * `apiLevel` (string): the API level of Android that was running on the user's device. * `versionCode` (int64): version of the app that was running on the user's device. * `deviceModel` (string): unique identifier of the user's device model. * `deviceType` (string): the type (also known as form factor) of the user's device. * `countryCode` (string): the country or region of the user's device based on their IP address, represented as a 2-letter ISO-3166 code (e.g. US for the United States).",
          "type": "array"
        },
        "pageToken": {
          "type": "string",
          "description": "A page token, received from a previous call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to the request must match the call that provided the page token."
        },
        "filter": {
          "description": "Filters to apply to data. The filtering expression follows [AIP-160](https://google.aip.dev/160) standard and supports filtering by equality of all breakdown dimensions.",
          "type": "string"
        }
      },
      "id": "GooglePlayDeveloperReportingV1beta1QueryCrashRateMetricSetRequest"
    },
    "GooglePlayDeveloperReportingV1beta1FreshnessInfo": {
      "description": "Represents the latest available time that can be requested in a TimelineSpec. Different aggregation periods have different freshness. For example, `DAILY` aggregation may lag behind `HOURLY` in cases where such aggregation is computed only once at the end of the day.",
      "id": "GooglePlayDeveloperReportingV1beta1FreshnessInfo",
      "type": "object",
      "properties": {
        "freshnesses": {
          "description": "Information about data freshness for every supported aggregation period. This field has set semantics, keyed by the `aggregation_period` field.",
          "type": "array",
          "items": {
            "$ref": "GooglePlayDeveloperReportingV1beta1FreshnessInfoFreshness"
          }
        }
      }
    },
    "GooglePlayDeveloperReportingV1beta1DimensionValue": {
      "id": "GooglePlayDeveloperReportingV1beta1DimensionValue",
      "properties": {
        "stringValue": {
          "type": "string",
          "description": "Actual value, represented as a string."
        },
        "dimension": {
          "type": "string",
          "description": "Name of the dimension."
        },
        "int64Value": {
          "description": "Actual value, represented as an int64.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents the value of a single dimension."
    },
    "GooglePlayDeveloperReportingV1beta1FreshnessInfoFreshness": {
      "description": "Information about data freshness for a single aggregation period.",
      "properties": {
        "aggregationPeriod": {
          "description": "Aggregation period for which data is available.",
          "enumDescriptions": [
            "Unspecified granularity.",
            "Data is aggregated in hourly intervals.",
            "Data is aggregated in daily intervals."
          ],
          "enum": [
            "AGGREGATION_PERIOD_UNSPECIFIED",
            "HOURLY",
            "DAILY"
          ],
          "type": "string"
        },
        "latestEndTime": {
          "$ref": "GoogleTypeDateTime",
          "description": "Latest end time for which data is available, for the aggregation period. The time is specified in the metric set's default timezone. *Note:* time ranges in TimelineSpec are represented as `start_time, end_time)`. For example, if the latest available timeline data point for a `DAILY` aggregation period is `2021-06-23 00:00:00 America/Los_Angeles`, the value of this field would be `2021-06-24 00:00:00 America/Los_Angeles` so it can be easily reused in [TimelineSpec.end_time."
        }
      },
      "id": "GooglePlayDeveloperReportingV1beta1FreshnessInfoFreshness",
      "type": "object"
    },
    "GooglePlayDeveloperReportingV1beta1QueryExcessiveWakeupRateMetricSetResponse": {
      "properties": {
        "rows": {
          "items": {
            "$ref": "GooglePlayDeveloperReportingV1beta1MetricsRow"
          },
          "description": "Returned rows of data.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token to fetch the next page of data."
        }
      },
      "description": "Response message for QueryExcessiveWakeupRateMetricSet.",
      "type": "object",
      "id": "GooglePlayDeveloperReportingV1beta1QueryExcessiveWakeupRateMetricSetResponse"
    },
    "GoogleTypeTimeZone": {
      "properties": {
        "id": {
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
          "type": "string"
        },
        "version": {
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
          "type": "string"
        }
      },
      "id": "GoogleTypeTimeZone",
      "type": "object",
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones)."
    },
    "GooglePlayDeveloperReportingV1beta1QueryAnrRateMetricSetResponse": {
      "description": "Response message for QueryAnrRateMetricSet.",
      "id": "GooglePlayDeveloperReportingV1beta1QueryAnrRateMetricSetResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token to fetch the next page of data."
        },
        "rows": {
          "description": "Returned rows of data.",
          "type": "array",
          "items": {
            "$ref": "GooglePlayDeveloperReportingV1beta1MetricsRow"
          }
        }
      },
      "type": "object"
    },
    "GooglePlayDeveloperReportingV1beta1TimelineSpec": {
      "id": "GooglePlayDeveloperReportingV1beta1TimelineSpec",
      "type": "object",
      "properties": {
        "aggregationPeriod": {
          "enum": [
            "AGGREGATION_PERIOD_UNSPECIFIED",
            "HOURLY",
            "DAILY"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified granularity.",
            "Data is aggregated in hourly intervals.",
            "Data is aggregated in daily intervals."
          ],
          "description": "Type of the aggregation period of the datapoints in the timeline. Intervals are identified by the date and time at the start of the interval."
        },
        "startTime": {
          "$ref": "GoogleTypeDateTime",
          "description": "Starting datapoint of the timeline (inclusive). Must be aligned to the aggregation period as follows: * HOURLY: the 'minutes', 'seconds' and 'nanos' fields must be unset. The time_zone can be left unset (defaults to UTC) or set explicitly to \"UTC\". Setting any other utc_offset or timezone id will result in a validation error. * DAILY: the 'hours', 'minutes', 'seconds' and 'nanos' fields must be unset. Different metric sets support different timezones. It can be left unset to use the default timezone specified by the metric set. The timezone of the end point must match the timezone of the start point."
        },
        "endTime": {
          "$ref": "GoogleTypeDateTime",
          "description": "Ending datapoint of the timeline (exclusive). See start_time for restrictions. The timezone of the end point must match the timezone of the start point."
        }
      },
      "description": "Specification of the time-related aggregation parameters of a timeline. Timelines have an aggregation period (`DAILY`, `HOURLY`, etc) which defines how events are aggregated in metrics. The points in a timeline are defined by the starting DateTime of the aggregation period. The duration is implicit in the AggregationPeriod. Hourly aggregation periods, when supported by a metric set, are always specified in UTC to avoid ambiguities around daylight saving time transitions, where an hour is skipped when adopting DST, and repeated when abandoning DST. For example, the timestamp '2021-11-07 01:00:00 America/Los_Angeles' is ambiguous since it can correspond to '2021-11-07 08:00:00 UTC' or '2021-11-07 09:00:00 UTC'. Daily aggregation periods require specifying a timezone which will determine the precise instants of the start and the end of the day. Not all metric sets support all timezones, so make sure to check which timezones are supported by the metric set you want to query."
    },
    "GoogleTypeDateTime": {
      "properties": {
        "nanos": {
          "description": "Required. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
          "type": "integer",
          "format": "int32"
        },
        "utcOffset": {
          "format": "google-duration",
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.",
          "type": "string"
        },
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year."
        },
        "minutes": {
          "type": "integer",
          "description": "Required. Minutes of hour of day. Must be from 0 to 59.",
          "format": "int32"
        },
        "seconds": {
          "description": "Required. Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
          "format": "int32",
          "type": "integer"
        },
        "day": {
          "format": "int32",
          "description": "Required. Day of month. Must be from 1 to 31 and valid for the year and month.",
          "type": "integer"
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Required. Month of year. Must be from 1 to 12."
        },
        "timeZone": {
          "$ref": "GoogleTypeTimeZone",
          "description": "Time zone."
        },
        "hours": {
          "type": "integer",
          "description": "Required. Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "format": "int32"
        }
      },
      "id": "GoogleTypeDateTime",
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year is 0, the DateTime is considered not to have a specific year. month and day must have valid, non-zero values. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
      "type": "object"
    },
    "GooglePlayDeveloperReportingV1beta1MetricsRow": {
      "type": "object",
      "id": "GooglePlayDeveloperReportingV1beta1MetricsRow",
      "description": "Represents a row of dimensions and metrics.",
      "properties": {
        "startTime": {
          "description": "Starting date (and time for hourly aggregation) of the period covered by this row.",
          "$ref": "GoogleTypeDateTime"
        },
        "dimensions": {
          "description": "Dimension columns in the row.",
          "type": "array",
          "items": {
            "$ref": "GooglePlayDeveloperReportingV1beta1DimensionValue"
          }
        },
        "metrics": {
          "type": "array",
          "description": "Metric columns in the row.",
          "items": {
            "$ref": "GooglePlayDeveloperReportingV1beta1MetricValue"
          }
        },
        "aggregationPeriod": {
          "description": "Granularity of the aggregation period of the row.",
          "type": "string",
          "enum": [
            "AGGREGATION_PERIOD_UNSPECIFIED",
            "HOURLY",
            "DAILY"
          ],
          "enumDescriptions": [
            "Unspecified granularity.",
            "Data is aggregated in hourly intervals.",
            "Data is aggregated in daily intervals."
          ]
        }
      }
    },
    "GooglePlayDeveloperReportingV1beta1QueryCrashRateMetricSetResponse": {
      "id": "GooglePlayDeveloperReportingV1beta1QueryCrashRateMetricSetResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token to fetch the next page of data.",
          "type": "string"
        },
        "rows": {
          "items": {
            "$ref": "GooglePlayDeveloperReportingV1beta1MetricsRow"
          },
          "description": "Returned rows of data.",
          "type": "array"
        }
      },
      "description": "Response message for QueryCrashRateMetricSet."
    },
    "GooglePlayDeveloperReportingV1beta1ExcessiveWakeupRateMetricSet": {
      "id": "GooglePlayDeveloperReportingV1beta1ExcessiveWakeupRateMetricSet",
      "type": "object",
      "description": "Singleton resource representing the set of Excessive Weakeups metrics. This metric set contains AlarmManager wakeup counts data combined with process state data to produce a normalized metric independent of user counts. **Supported aggregation periods:** * DAILY: metrics are aggregated in calendar date intervals. Due to historical constraints, the only supported timezone is `America/Los_Angeles`. **Supported metrics:** * `excessiveWakeupRate` (`google.type.Decimal`): Percentage of distinct users in the aggregation period that had more than 10 wakeups per hour. If your app exhibits an excessive wakeup rate equal to or higher than the threshold, it's in the bottom 25% of the top 1,000 apps on Google Play (by number of installs). * `excessiveWakeupRate7dUserWeighted` (`google.type.Decimal`): Rolling average value of `excessiveWakeupRate` in the last 7 days. The daily values are weighted by the count of distinct users for the day. * `excessiveWakeupRate28dUserWeighted` (`google.type.Decimal`): Rolling average value of `excessiveWakeupRate` in the last 28 days. The daily values are weighted by the count of distinct users for the day. * `distinctUsers` (`google.type.Decimal`): Count of distinct users in the aggregation period that were used as normalization value for the `excessiveWakeupRate` metric. A user is counted in this metric if they app was doing any work on the device, i.e., not just active foreground usage but also background work. Care must be taken not to aggregate this count further, as it may result in users being counted multiple times. **Supported dimensions:** * `apiLevel` (string): the API level of Android that was running on the user's device. * `versionCode` (int64): version of the app that was running on the user's device. * `deviceModel` (string): unique identifier of the user's device model. * `deviceType` (string): the type (also known as form factor) of the user's device. * `countryCode` (string): the country or region of the user's device based on their IP address, represented as a 2-letter ISO-3166 code (e.g. US for the United States). **Required permissions**: to access this resource, the calling user needs the _View app information (read-only)_ permission for the app.",
      "properties": {
        "freshnessInfo": {
          "description": "Summary about data freshness in this resource.",
          "$ref": "GooglePlayDeveloperReportingV1beta1FreshnessInfo"
        },
        "name": {
          "description": "The resource name. Format: apps/{app}/excessiveWakeupRateMetricSet",
          "type": "string"
        }
      }
    },
    "GooglePlayDeveloperReportingV1beta1QueryStuckBackgroundWakelockRateMetricSetRequest": {
      "description": "Request message for QueryStuckBackgroundWakelockRateMetricSet.",
      "type": "object",
      "properties": {
        "timelineSpec": {
          "$ref": "GooglePlayDeveloperReportingV1beta1TimelineSpec",
          "description": "Specification of the timeline aggregation parameters. **Supported aggregation periods:** * DAILY: metrics are aggregated in calendar date intervals. Due to historical constraints, the only supported timezone is `America/Los_Angeles`."
        },
        "pageToken": {
          "type": "string",
          "description": "A page token, received from a previous call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to the request must match the call that provided the page token."
        },
        "dimensions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Dimensions to slice the data by. **Supported dimensions:** * `apiLevel` (string): the API level of Android that was running on the user's device. * `versionCode` (int64): version of the app that was running on the user's device. * `deviceModel` (string): unique identifier of the user's device model. * `deviceType` (string): the type (also known as form factor) of the user's device. * `countryCode` (string): the country or region of the user's device based on their IP address, represented as a 2-letter ISO-3166 code (e.g. US for the United States)."
        },
        "pageSize": {
          "format": "int32",
          "description": "Maximum size of the returned data. If unspecified, at most 1000 rows will be returned. The maximum value is 100000; values above 100000 will be coerced to 100000.",
          "type": "integer"
        },
        "metrics": {
          "description": "Metrics to aggregate. **Supported metrics:** * `stuckBgWakelockRate` (`google.type.Decimal`): Percentage of distinct users in the aggregation period that had a wakelock held in the background for longer than 1 hour. If your app exhibits a stuck background wakelock rate equal to or higher than the threshold, it's in the bottom 25% of the top 1,000 apps on Google Play (by number of installs). * `stuckBgWakelockRate7dUserWeighted` (`google.type.Decimal`): Rolling average value of `stuckBgWakelockRate` in the last 7 days. The daily values are weighted by the count of distinct users for the day. * `stuckBgWakelockRate28dUserWeighted` (`google.type.Decimal`): Rolling average value of `stuckBgWakelockRate` in the last 28 days. The daily values are weighted by the count of distinct users for the day. * `distinctUsers` (`google.type.Decimal`): Count of distinct users in the aggregation period that were used as normalization value for the `stuckBgWakelockRate` metric. A user is counted in this metric if they app was doing any work on the device, i.e., not just active foreground usage but also background work. Care must be taken not to aggregate this count further, as it may result in users being counted multiple times.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "filter": {
          "description": "Filters to apply to data. The filtering expression follows [AIP-160](https://google.aip.dev/160) standard and supports filtering by equality of all breakdown dimensions.",
          "type": "string"
        }
      },
      "id": "GooglePlayDeveloperReportingV1beta1QueryStuckBackgroundWakelockRateMetricSetRequest"
    },
    "GooglePlayDeveloperReportingV1beta1MetricValue": {
      "properties": {
        "decimalValue": {
          "$ref": "GoogleTypeDecimal",
          "description": "Actual value, represented as a decimal number."
        },
        "metric": {
          "type": "string",
          "description": "Name of the metric."
        }
      },
      "id": "GooglePlayDeveloperReportingV1beta1MetricValue",
      "type": "object",
      "description": "Represents the value of a metric."
    },
    "GooglePlayDeveloperReportingV1beta1ListAnomaliesResponse": {
      "description": "Response with a list of anomalies in datasets.",
      "id": "GooglePlayDeveloperReportingV1beta1ListAnomaliesResponse",
      "properties": {
        "anomalies": {
          "items": {
            "$ref": "GooglePlayDeveloperReportingV1beta1Anomaly"
          },
          "type": "array",
          "description": "Anomalies that were found."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token to fetch the next page of data."
        }
      },
      "type": "object"
    },
    "GooglePlayDeveloperReportingV1beta1QueryAnrRateMetricSetRequest": {
      "description": "Request message for QueryAnrRateMetricSet.",
      "type": "object",
      "properties": {
        "pageSize": {
          "format": "int32",
          "description": "Maximum size of the returned data. If unspecified, at most 1000 rows will be returned. The maximum value is 100,000; values above 100,000 will be coerced to 100,000.",
          "type": "integer"
        },
        "pageToken": {
          "description": "A page token, received from a previous call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to the request must match the call that provided the page token.",
          "type": "string"
        },
        "timelineSpec": {
          "description": "Specification of the timeline aggregation parameters. **Supported aggregation periods:** * DAILY: metrics are aggregated in calendar date intervals. Due to historical constraints, the default and only supported timezone is `America/Los_Angeles`.",
          "$ref": "GooglePlayDeveloperReportingV1beta1TimelineSpec"
        },
        "dimensions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Dimensions to slice the metrics by. **Supported dimensions:** * `apiLevel` (string): the API level of Android that was running on the user's device. * `versionCode` (int64): version of the app that was running on the user's device. * `deviceModel` (string): unique identifier of the user's device model. * `deviceType` (string): the type (also known as form factor) of the user's device. * `countryCode` (string): the country or region of the user's device based on their IP address, represented as a 2-letter ISO-3166 code (e.g. US for the United States)."
        },
        "filter": {
          "description": "Filters to apply to data. The filtering expression follows [AIP-160](https://google.aip.dev/160) standard and supports filtering by equality of all breakdown dimensions.",
          "type": "string"
        },
        "metrics": {
          "items": {
            "type": "string"
          },
          "description": "Metrics to aggregate. **Supported metrics:** * `anrRate` (`google.type.Decimal`): Percentage of distinct users in the aggregation period that experienced at least one ANR. If your app exhibits an ANR rate equal to or higher than the threshold, it's in the bottom 25% of the top 1,000 apps on Google Play (by number of installs). * `anrRate7dUserWeighted` (`google.type.Decimal`): Rolling average value of `anrRate` in the last 7 days. The daily values are weighted by the count of distinct users for the day. * `anrRate28dUserWeighted` (`google.type.Decimal`): Rolling average value of `anrRate` in the last 28 days. The daily values are weighted by the count of distinct users for the day. * `distinctUsers` (`google.type.Decimal`): Count of distinct users in the aggregation period that were used as normalization value for the `anrRate` metric. A user is counted in this metric if they used the app in the foreground during the aggregation period. Care must be taken not to aggregate this count further, as it may result in users being counted multiple times.",
          "type": "array"
        }
      },
      "id": "GooglePlayDeveloperReportingV1beta1QueryAnrRateMetricSetRequest"
    },
    "GoogleTypeDecimal": {
      "id": "GoogleTypeDecimal",
      "properties": {
        "value": {
          "description": "The decimal value, as a string. The string representation consists of an optional sign, `+` (`U+002B`) or `-` (`U+002D`), followed by a sequence of zero or more decimal digits (\"the integer\"), optionally followed by a fraction, optionally followed by an exponent. The fraction consists of a decimal point followed by zero or more decimal digits. The string must contain at least one digit in either the integer or the fraction. The number formed by the sign, the integer and the fraction is referred to as the significand. The exponent consists of the character `e` (`U+0065`) or `E` (`U+0045`) followed by one or more decimal digits. Services **should** normalize decimal values before storing them by: - Removing an explicitly-provided `+` sign (`+2.5` -\u003e `2.5`). - Replacing a zero-length integer value with `0` (`.5` -\u003e `0.5`). - Coercing the exponent character to lower-case (`2.5E8` -\u003e `2.5e8`). - Removing an explicitly-provided zero exponent (`2.5e0` -\u003e `2.5`). Services **may** perform additional normalization based on its own needs and the internal decimal implementation selected, such as shifting the decimal point and exponent value together (example: `2.5e-1` \u003c-\u003e `0.25`). Additionally, services **may** preserve trailing zeroes in the fraction to indicate increased precision, but are not required to do so. Note that only the `.` character is supported to divide the integer and the fraction; `,` **should not** be supported regardless of locale. Additionally, thousand separators **should not** be supported. If a service does support them, values **must** be normalized. The ENBF grammar is: DecimalString = [Sign] Significand [Exponent]; Sign = '+' | '-'; Significand = Digits '.' | [Digits] '.' Digits; Exponent = ('e' | 'E') [Sign] Digits; Digits = { '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' }; Services **should** clearly document the range of supported values, the maximum supported precision (total number of digits), and, if applicable, the scale (number of digits after the decimal point), as well as how it behaves when receiving out-of-bounds values. Services **may** choose to accept values passed as input even when the value has a higher precision or scale than the service supports, and **should** round the value to fit the supported scale. Alternatively, the service **may** error with `400 Bad Request` (`INVALID_ARGUMENT` in gRPC) if precision would be lost. Services **should** error with `400 Bad Request` (`INVALID_ARGUMENT` in gRPC) if the service receives a value outside of the supported range.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A representation of a decimal value, such as 2.5. Clients may convert values into language-native decimal formats, such as Java's BigDecimal or Python's decimal.Decimal. [BigDecimal]: https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html [decimal.Decimal]: https://docs.python.org/3/library/decimal.html"
    },
    "GooglePlayDeveloperReportingV1beta1QueryExcessiveWakeupRateMetricSetRequest": {
      "properties": {
        "filter": {
          "type": "string",
          "description": "Filters to apply to data. The filtering expression follows [AIP-160](https://google.aip.dev/160) standard and supports filtering by equality of all breakdown dimensions."
        },
        "dimensions": {
          "description": "Dimensions to slice the data by. **Supported dimensions:** * `apiLevel` (string): the API level of Android that was running on the user's device. * `versionCode` (int64): version of the app that was running on the user's device. * `deviceModel` (string): unique identifier of the user's device model. * `deviceType` (string): the type (also known as form factor) of the user's device. * `countryCode` (string): the country or region of the user's device based on their IP address, represented as a 2-letter ISO-3166 code (e.g. US for the United States).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Metrics to aggregate. **Supported metrics:** * `excessiveWakeupRate` (`google.type.Decimal`): Percentage of distinct users in the aggregation period that had more than 10 wakeups per hour. If your app exhibits an excessive wakeup rate equal to or higher than the threshold, it's in the bottom 25% of the top 1,000 apps on Google Play (by number of installs). * `excessiveWakeupRate7dUserWeighted` (`google.type.Decimal`): Rolling average value of `excessiveWakeupRate` in the last 7 days. The daily values are weighted by the count of distinct users for the day. * `excessiveWakeupRate28dUserWeighted` (`google.type.Decimal`): Rolling average value of `excessiveWakeupRate` in the last 28 days. The daily values are weighted by the count of distinct users for the day. * `distinctUsers` (`google.type.Decimal`): Count of distinct users in the aggregation period that were used as normalization value for the `excessiveWakeupRate` metric. A user is counted in this metric if they app was doing any work on the device, i.e., not just active foreground usage but also background work. Care must be taken not to aggregate this count further, as it may result in users being counted multiple times."
        },
        "pageToken": {
          "type": "string",
          "description": "A page token, received from a previous call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to the request must match the call that provided the page token."
        },
        "pageSize": {
          "description": "Maximum size of the returned data. If unspecified, at most 1000 rows will be returned. The maximum value is 100000; values above 100000 will be coerced to 100000.",
          "format": "int32",
          "type": "integer"
        },
        "timelineSpec": {
          "description": "Specification of the timeline aggregation parameters. **Supported aggregation periods:** * DAILY: metrics are aggregated in calendar date intervals. Due to historical constraints, the only supported timezone is `America/Los_Angeles`.",
          "$ref": "GooglePlayDeveloperReportingV1beta1TimelineSpec"
        }
      },
      "type": "object",
      "description": "Request message for QueryExcessiveWakeupRateMetricSet.",
      "id": "GooglePlayDeveloperReportingV1beta1QueryExcessiveWakeupRateMetricSetRequest"
    },
    "GooglePlayDeveloperReportingV1beta1AnrRateMetricSet": {
      "properties": {
        "freshnessInfo": {
          "description": "Summary about data freshness in this resource.",
          "$ref": "GooglePlayDeveloperReportingV1beta1FreshnessInfo"
        },
        "name": {
          "type": "string",
          "description": "The resource name. Format: apps/{app}/anrRateMetricSet"
        }
      },
      "id": "GooglePlayDeveloperReportingV1beta1AnrRateMetricSet",
      "type": "object",
      "description": "Singleton resource representing the set of ANR (Application not responding) metrics. This metric set contains ANRs data combined with usage data to produce a normalized metric independent of user counts. **Supported aggregation periods:** * DAILY: metrics are aggregated in calendar date intervals. Due to historical constraints, the only supported timezone is `America/Los_Angeles`. **Supported metrics:** * `anrRate` (`google.type.Decimal`): Percentage of distinct users in the aggregation period that experienced at least one ANR. If your app exhibits an ANR rate equal to or higher than the threshold, it's in the bottom 25% of the top 1,000 apps on Google Play (by number of installs). * `anrRate7dUserWeighted` (`google.type.Decimal`): Rolling average value of `anrRate` in the last 7 days. The daily values are weighted by the count of distinct users for the day. * `anrRate28dUserWeighted` (`google.type.Decimal`): Rolling average value of `anrRate` in the last 28 days. The daily values are weighted by the count of distinct users for the day. * `distinctUsers` (`google.type.Decimal`): Count of distinct users in the aggregation period that were used as normalization value for the `anrRate` metric. A user is counted in this metric if they used the app in the foreground during the aggregation period. Care must be taken not to aggregate this count further, as it may result in users being counted multiple times. **Supported dimensions:** * `apiLevel` (string): the API level of Android that was running on the user's device. * `versionCode` (int64): version of the app that was running on the user's device. * `deviceModel` (string): unique identifier of the user's device model. * `deviceType` (string): the type (also known as form factor) of the user's device. * `countryCode` (string): the country or region of the user's device based on their IP address, represented as a 2-letter ISO-3166 code (e.g. US for the United States). **Required permissions**: to access this resource, the calling user needs the _View app information (read-only)_ permission for the app. **Related metric sets:** * vitals.errors contains unnormalized version (absolute counts) of crashes. * vitals.errors contains normalized metrics about crashes, another stability metric."
    },
    "GooglePlayDeveloperReportingV1beta1CrashRateMetricSet": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name. Format: apps/{app}/crashRateMetricSet",
          "type": "string"
        },
        "freshnessInfo": {
          "description": "Summary about data freshness in this resource.",
          "$ref": "GooglePlayDeveloperReportingV1beta1FreshnessInfo"
        }
      },
      "id": "GooglePlayDeveloperReportingV1beta1CrashRateMetricSet",
      "description": "Singleton resource representing the set of crashrate metrics. This metric set contains crashes data combined with usage data to produce a normalized metric independent of user counts. **Supported aggregation periods:** * DAILY: metrics are aggregated in calendar date intervals. Due to historical constraints, the only supported timezone is `America/Los_Angeles`. **Supported metrics:** * `crashRate` (`google.type.Decimal`): Percentage of distinct users in the aggregation period that experienced at least one crash. If your app exhibits a crash rate equal to or higher than the threshold, it's in the bottom 25% of the top 1,000 apps on Google Play (by number of installs). * `crashRate7dUserWeighted` (`google.type.Decimal`): Rolling average value of `crashRate` in the last 7 days. The daily values are weighted by the count of distinct users for the day. * `crashRate28dUserWeighted` (`google.type.Decimal`): Rolling average value of `crashRate` in the last 28 days. The daily values are weighted by the count of distinct users for the day. * `distinctUsers` (`google.type.Decimal`): Count of distinct users in the aggregation period that were used as normalization value for the `crashRate` metric. A user is counted in this metric if they used the app in the foreground during the aggregation period. Care must be taken not to aggregate this count further, as it may result in users being counted multiple times. **Supported dimensions:** * `apiLevel` (string): the API level of Android that was running on the user's device. * `versionCode` (int64): version of the app that was running on the user's device. * `deviceModel` (string): unique identifier of the user's device model. * `deviceType` (string): the type (also known as form factor) of the user's device. * `countryCode` (string): the country or region of the user's device based on their IP address, represented as a 2-letter ISO-3166 code (e.g. US for the United States). **Required permissions**: to access this resource, the calling user needs the _View app information (read-only)_ permission for the app. **Related metric sets:** * vitals.errors contains unnormalized version (absolute counts) of crashes. * vitals.errors contains normalized metrics about ANRs, another stability metric."
    },
    "GooglePlayDeveloperReportingV1beta1QueryStuckBackgroundWakelockRateMetricSetResponse": {
      "properties": {
        "rows": {
          "description": "Returned rows of data.",
          "type": "array",
          "items": {
            "$ref": "GooglePlayDeveloperReportingV1beta1MetricsRow"
          }
        },
        "nextPageToken": {
          "description": "Continuation token to fetch the next page of data.",
          "type": "string"
        }
      },
      "id": "GooglePlayDeveloperReportingV1beta1QueryStuckBackgroundWakelockRateMetricSetResponse",
      "type": "object",
      "description": "Response message for QueryStuckBackgroundWakelockRateMetricSet."
    },
    "GooglePlayDeveloperReportingV1beta1Anomaly": {
      "description": "Represents an anomaly detected in a dataset. Our anomaly detection systems flag datapoints in a time series that fall outside of and expected range derived from historical data. Although those expected ranges have an upper and a lower bound, we only flag anomalies when the data has become unexpectedly _worse_, which usually corresponds to the case where the metric crosses the upper bound. Multiple contiguous datapoints in a timeline outside of the expected range will be grouped into a single anomaly. Therefore, an anomaly represents effectively a segment of a metric's timeline. The information stored in the `timeline_spec`, `dimensions` and `metric` can be used to fetch a full timeline with extended ragne for context. **Required permissions**: to access this resource, the calling user needs the _View app information (read-only)_ permission for the app.",
      "id": "GooglePlayDeveloperReportingV1beta1Anomaly",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the anomaly. Format: apps/{app}/anomalies/{anomaly}"
        },
        "metricSet": {
          "type": "string",
          "description": "Metric set resource where the anomaly was detected."
        },
        "metric": {
          "$ref": "GooglePlayDeveloperReportingV1beta1MetricValue",
          "description": "Metric where the anomaly was detected, together with the anomalous value."
        },
        "timelineSpec": {
          "description": "Timeline specification that covers the anomaly period.",
          "$ref": "GooglePlayDeveloperReportingV1beta1TimelineSpec"
        },
        "dimensions": {
          "type": "array",
          "description": "Combination of dimensions in which the anomaly was detected.",
          "items": {
            "$ref": "GooglePlayDeveloperReportingV1beta1DimensionValue"
          }
        }
      },
      "type": "object"
    }
  },
  "kind": "discovery#restDescription",
  "rootUrl": "https://playdeveloperreporting.googleapis.com/",
  "title": "Google Play Developer Reporting API",
  "baseUrl": "https://playdeveloperreporting.googleapis.com/",
  "version_module": true
}

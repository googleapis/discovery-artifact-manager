{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/doubleclickbidmanager": {
          "description": "View and manage your reports in DoubleClick Bid Manager"
        }
      }
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "description": "DoubleClick Bid Manager API allows users to manage and create campaigns and reports.",
  "baseUrl": "https://doubleclickbidmanager.googleapis.com/v2/",
  "protocol": "rest",
  "name": "doubleclickbidmanager",
  "resources": {
    "queries": {
      "methods": {
        "create": {
          "id": "doubleclickbidmanager.queries.create",
          "path": "queries",
          "flatPath": "queries",
          "httpMethod": "POST",
          "parameters": {},
          "parameterOrder": [],
          "request": {
            "$ref": "Query"
          },
          "response": {
            "$ref": "Query"
          },
          "scopes": [
            "https://www.googleapis.com/auth/doubleclickbidmanager"
          ],
          "description": "Creates a query."
        },
        "delete": {
          "id": "doubleclickbidmanager.queries.delete",
          "path": "queries/{queryId}",
          "flatPath": "queries/{queryId}",
          "httpMethod": "DELETE",
          "parameters": {
            "queryId": {
              "description": "Required. ID of query to delete.",
              "location": "path",
              "required": true,
              "type": "string",
              "format": "int64"
            }
          },
          "parameterOrder": [
            "queryId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/doubleclickbidmanager"
          ],
          "description": "Deletes a query as well as the associated reports."
        },
        "get": {
          "id": "doubleclickbidmanager.queries.get",
          "path": "queries/{queryId}",
          "flatPath": "queries/{queryId}",
          "httpMethod": "GET",
          "parameters": {
            "queryId": {
              "description": "Required. ID of query to retrieve.",
              "location": "path",
              "required": true,
              "type": "string",
              "format": "int64"
            }
          },
          "parameterOrder": [
            "queryId"
          ],
          "response": {
            "$ref": "Query"
          },
          "scopes": [
            "https://www.googleapis.com/auth/doubleclickbidmanager"
          ],
          "description": "Retrieves a query."
        },
        "list": {
          "id": "doubleclickbidmanager.queries.list",
          "path": "queries",
          "flatPath": "queries",
          "httpMethod": "GET",
          "parameters": {
            "pageSize": {
              "description": "Maximum number of results per page. Must be between `1` and `100`. Defaults to `100` if unspecified.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page of queries.",
              "location": "query",
              "type": "string"
            },
            "orderBy": {
              "description": "Name of a field used to order results. The default sorting order is ascending. To specify descending order for a field, append a \" desc\" suffix. For example \"metadata.title desc\". Sorting is only supported for the following fields: * `queryId` * `metadata.title`",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [],
          "response": {
            "$ref": "ListQueriesResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/doubleclickbidmanager"
          ],
          "description": "Lists queries created by the current user."
        },
        "run": {
          "id": "doubleclickbidmanager.queries.run",
          "path": "queries/{queryId}:run",
          "flatPath": "queries/{queryId}:run",
          "httpMethod": "POST",
          "parameters": {
            "queryId": {
              "description": "Required. ID of query to run.",
              "location": "path",
              "required": true,
              "type": "string",
              "format": "int64"
            },
            "synchronous": {
              "description": "Whether the query should be run synchronously. When true, this method will not return until the query has finished running. When false or not specified, this method will return immediately.",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [
            "queryId"
          ],
          "request": {
            "$ref": "RunQueryRequest"
          },
          "response": {
            "$ref": "Report"
          },
          "scopes": [
            "https://www.googleapis.com/auth/doubleclickbidmanager"
          ],
          "description": "Runs a stored query to generate a report."
        }
      },
      "resources": {
        "reports": {
          "methods": {
            "list": {
              "id": "doubleclickbidmanager.queries.reports.list",
              "path": "queries/{queryId}/reports",
              "flatPath": "queries/{queryId}/reports",
              "httpMethod": "GET",
              "parameters": {
                "queryId": {
                  "description": "Required. ID of the query with which the reports are associated.",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "format": "int64"
                },
                "pageSize": {
                  "description": "Maximum number of results per page. Must be between `1` and `100`. Defaults to `100` if unspecified.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page of reports.",
                  "location": "query",
                  "type": "string"
                },
                "orderBy": {
                  "description": "Name of a field used to order results. The default sorting order is ascending. To specify descending order for a field, append a \" desc\" suffix. For example \"key.reportId desc\". Sorting is only supported for the following fields: * `key.reportId`",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "queryId"
              ],
              "response": {
                "$ref": "ListReportsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/doubleclickbidmanager"
              ],
              "description": "Lists reports associated with a query."
            },
            "get": {
              "id": "doubleclickbidmanager.queries.reports.get",
              "path": "queries/{queryId}/reports/{reportId}",
              "flatPath": "queries/{queryId}/reports/{reportId}",
              "httpMethod": "GET",
              "parameters": {
                "queryId": {
                  "description": "Required. ID of the query the report is associated with.",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "format": "int64"
                },
                "reportId": {
                  "description": "Required. ID of the report to retrieve.",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "format": "int64"
                }
              },
              "parameterOrder": [
                "queryId",
                "reportId"
              ],
              "response": {
                "$ref": "Report"
              },
              "scopes": [
                "https://www.googleapis.com/auth/doubleclickbidmanager"
              ],
              "description": "Retrieves a report."
            }
          }
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "version": "v2",
  "rootUrl": "https://doubleclickbidmanager.googleapis.com/",
  "batchPath": "batch",
  "ownerDomain": "google.com",
  "mtlsRootUrl": "https://doubleclickbidmanager.mtls.googleapis.com/",
  "basePath": "/v2/",
  "discoveryVersion": "v1",
  "schemas": {
    "Query": {
      "id": "Query",
      "description": "Represents a query.",
      "type": "object",
      "properties": {
        "queryId": {
          "description": "Output only. Query ID.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "metadata": {
          "description": "Query metadata.",
          "$ref": "QueryMetadata"
        },
        "params": {
          "description": "Query parameters.",
          "$ref": "Parameters"
        },
        "schedule": {
          "description": "Information on how often and when to run a query. If `ONE_TIME` is set to the frequency field, the query will only be run at the time of creation.",
          "$ref": "QuerySchedule"
        }
      }
    },
    "QueryMetadata": {
      "id": "QueryMetadata",
      "description": "Query metadata.",
      "type": "object",
      "properties": {
        "title": {
          "description": "Query title. It is used to name the reports generated from this query.",
          "type": "string"
        },
        "dataRange": {
          "description": "Range of report data. All reports will be based on the same time zone as used by the advertiser.",
          "$ref": "DataRange"
        },
        "format": {
          "description": "Format of the generated report.",
          "type": "string",
          "enumDescriptions": [
            "Default value when format is not specified or is unknown in this version.",
            "CSV.",
            "Excel."
          ],
          "enum": [
            "FORMAT_UNSPECIFIED",
            "CSV",
            "XLSX"
          ]
        },
        "sendNotification": {
          "description": "Whether to send an email notification when a report is ready. Defaults to false.",
          "type": "boolean"
        },
        "shareEmailAddress": {
          "description": "List of email addresses which are sent email notifications when the report is finished. Separate from send_notification.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DataRange": {
      "id": "DataRange",
      "description": "Report data range.",
      "type": "object",
      "properties": {
        "range": {
          "description": "Report data range used to generate the report.",
          "type": "string",
          "enumDescriptions": [
            "Default value when range is not specified or is unknown in this version.",
            "Custom range specified by custom_start_date and custom_end_date fields.",
            "Current day.",
            "Previous day.",
            "All days, including the current day, since the most recent Sunday.",
            "All days, including the current day, since the start of the current month.",
            "All days, including the current day, since the start of the current quarter.",
            "All days, including the current day, since the start of the current calendar year.",
            "The previous completed week, beginning from Sunday.",
            "The previous completed calendar month.",
            "The previous completed quarter.",
            "The previous completed calendar year.",
            "The previous 7 days, excluding the current day.",
            "The previous 30 days, excluding the current day.",
            "The previous 90 days, excluding the current day.",
            "The previous 365 days, excluding the current day.",
            "All time for which data is available, excluding the current day.",
            "The previous 14 days, excluding the current day.",
            "The previous 60 days, excluding the current day."
          ],
          "enum": [
            "RANGE_UNSPECIFIED",
            "CUSTOM_DATES",
            "CURRENT_DAY",
            "PREVIOUS_DAY",
            "WEEK_TO_DATE",
            "MONTH_TO_DATE",
            "QUARTER_TO_DATE",
            "YEAR_TO_DATE",
            "PREVIOUS_WEEK",
            "PREVIOUS_MONTH",
            "PREVIOUS_QUARTER",
            "PREVIOUS_YEAR",
            "LAST_7_DAYS",
            "LAST_30_DAYS",
            "LAST_90_DAYS",
            "LAST_365_DAYS",
            "ALL_TIME",
            "LAST_14_DAYS",
            "LAST_60_DAYS"
          ]
        },
        "customStartDate": {
          "description": "The starting data for the data that is shown in the report. Note, `customStartDate` is required if `range` is `CUSTOM_DATES` and ignored otherwise.",
          "$ref": "Date"
        },
        "customEndDate": {
          "description": "The ending date for the data that is shown in the report. Note, `customEndDate` is required if `range` is `CUSTOM_DATES` and ignored otherwise.",
          "$ref": "Date"
        }
      }
    },
    "Date": {
      "id": "Date",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "type": "object",
      "properties": {
        "year": {
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Parameters": {
      "id": "Parameters",
      "description": "Parameters of a query or report.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of the report. The type of the report will dictate what dimesions, filters, and metrics can be used.",
          "type": "string",
          "enumDescriptions": [
            "Default value when report type is not specified or is unknown in this version.",
            "Standard report.",
            "Inventory Availability report.",
            "Audience Composition report.",
            "Floodlight report.",
            "YouTube report.",
            "GRP report.",
            "YouTube Programmatic Guaranteed report.",
            "Reach report.",
            "Unique Reach Audience report.",
            "Full Path report. This report type is deprecated and will sunset on **May 1, 2024**. After sunset, requests retrieving, creating, or running reports of this type will return an error.",
            "Path Attribution report. This report type is deprecated and will sunset on **May 1, 2024**. After sunset, requests retrieving, creating, or running reports of this type will return an error."
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "enum": [
            "REPORT_TYPE_UNSPECIFIED",
            "STANDARD",
            "INVENTORY_AVAILABILITY",
            "AUDIENCE_COMPOSITION",
            "FLOODLIGHT",
            "YOUTUBE",
            "GRP",
            "YOUTUBE_PROGRAMMATIC_GUARANTEED",
            "REACH",
            "UNIQUE_REACH_AUDIENCE",
            "FULL_PATH",
            "PATH_ATTRIBUTION"
          ]
        },
        "groupBys": {
          "description": "Data is grouped by the filters listed in this field.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filters": {
          "description": "Filters used to match traffic data in your report.",
          "type": "array",
          "items": {
            "$ref": "FilterPair"
          }
        },
        "metrics": {
          "description": "Metrics to include as columns in your report.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "options": {
          "description": "Additional query options.",
          "$ref": "Options"
        }
      }
    },
    "FilterPair": {
      "id": "FilterPair",
      "description": "Filter used to match traffic data in your report.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Filter type.",
          "type": "string"
        },
        "value": {
          "description": "Filter value.",
          "type": "string"
        }
      }
    },
    "Options": {
      "id": "Options",
      "description": "Additional query options.",
      "type": "object",
      "properties": {
        "includeOnlyTargetedUserLists": {
          "description": "Set to true and filter your report by `FILTER_INSERTION_ORDER` or `FILTER_LINE_ITEM` to include data for audience lists specifically targeted by those items.",
          "type": "boolean"
        },
        "pathQueryOptions": {
          "description": "Options that contain Path Filters and Custom Channel Groupings. This field is deprecated and will sunset on **May 1, 2024**. After sunset, requests using this field will return an error.",
          "$ref": "PathQueryOptions"
        }
      }
    },
    "PathQueryOptions": {
      "id": "PathQueryOptions",
      "description": "Path Query Options for Report Options.",
      "type": "object",
      "properties": {
        "channelGrouping": {
          "description": "Custom Channel Groupings.",
          "$ref": "ChannelGrouping"
        },
        "pathFilters": {
          "description": "Path Filters. There is a limit of 100 path filters that can be set per report.",
          "type": "array",
          "items": {
            "$ref": "PathFilter"
          }
        }
      }
    },
    "ChannelGrouping": {
      "id": "ChannelGrouping",
      "description": "A channel grouping defines a set of rules that can be used to categorize events in a path report.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Channel Grouping name.",
          "type": "string"
        },
        "rules": {
          "description": "Rules within Channel Grouping. There is a limit of 100 rules that can be set per channel grouping.",
          "type": "array",
          "items": {
            "$ref": "Rule"
          }
        },
        "fallbackName": {
          "description": "The name to apply to an event that does not match any of the rules in the channel grouping.",
          "type": "string"
        }
      }
    },
    "Rule": {
      "id": "Rule",
      "description": "A Rule defines a name, and a boolean expression in [conjunctive normal form] (http://mathworld.wolfram.com/ConjunctiveNormalForm.html){.external} that can be applied to a path event to determine if that name should be applied.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Rule name.",
          "type": "string"
        },
        "disjunctiveMatchStatements": {
          "description": "DisjunctiveMatchStatements within a Rule. DisjunctiveMatchStatement OR's all contained filters.",
          "type": "array",
          "items": {
            "$ref": "DisjunctiveMatchStatement"
          }
        }
      }
    },
    "DisjunctiveMatchStatement": {
      "id": "DisjunctiveMatchStatement",
      "description": "DisjunctiveMatchStatement that OR's all contained filters.",
      "type": "object",
      "properties": {
        "eventFilters": {
          "description": "Filters. There is a limit of 100 filters that can be set per disjunctive match statement.",
          "type": "array",
          "items": {
            "$ref": "EventFilter"
          }
        }
      }
    },
    "EventFilter": {
      "id": "EventFilter",
      "description": "Defines the type of filter to be applied to the path, a DV360 event dimension filter.",
      "type": "object",
      "properties": {
        "dimensionFilter": {
          "description": "Filter on a dimension.",
          "$ref": "PathQueryOptionsFilter"
        }
      }
    },
    "PathQueryOptionsFilter": {
      "id": "PathQueryOptionsFilter",
      "description": "Dimension filter on path events.",
      "type": "object",
      "properties": {
        "filter": {
          "description": "Dimension the filter is applied to.",
          "type": "string"
        },
        "match": {
          "description": "Match logic of the filter.",
          "type": "string",
          "enumDescriptions": [
            "Default value when match is not specified or is unknown in this version.",
            "Matches a value exactly.",
            "Matches a value partially.",
            "Begins with a value.",
            "Matches a value, utilizing wildcard character logic in the value."
          ],
          "enum": [
            "UNKNOWN",
            "EXACT",
            "PARTIAL",
            "BEGINS_WITH",
            "WILDCARD_EXPRESSION"
          ]
        },
        "values": {
          "description": "Values to filter on.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PathFilter": {
      "id": "PathFilter",
      "description": "Path filters specify which paths to include in a report. A path is the result of combining DV360 events based on User ID to create a workflow of users' actions. When a path filter is set, the resulting report will only include paths that match the specified event at the specified position. All other paths will be excluded.",
      "type": "object",
      "properties": {
        "eventFilters": {
          "description": "Filter on an event to be applied to some part of the path.",
          "type": "array",
          "items": {
            "$ref": "EventFilter"
          }
        },
        "pathMatchPosition": {
          "description": "The position of the path the filter should match to (first, last, or any event in path).",
          "type": "string",
          "enumDescriptions": [
            "Default value when path match position is not specified or is unknown in this version.",
            "Any position in the path.",
            "The first position in the path.",
            "The last position in the path."
          ],
          "enum": [
            "PATH_MATCH_POSITION_UNSPECIFIED",
            "ANY",
            "FIRST",
            "LAST"
          ]
        }
      }
    },
    "QuerySchedule": {
      "id": "QuerySchedule",
      "description": "Information on when and how frequently to run a query.",
      "type": "object",
      "properties": {
        "startDate": {
          "description": "When to start running the query. Not applicable to `ONE_TIME` frequency.",
          "$ref": "Date"
        },
        "endDate": {
          "description": "Date to periodically run the query until. Not applicable to `ONE_TIME` frequency.",
          "$ref": "Date"
        },
        "frequency": {
          "description": "How often the query is run.",
          "type": "string",
          "enumDescriptions": [
            "Default value when frequency is not specified or is unknown in this version.",
            "Only once.",
            "Once a day.",
            "Once a week.",
            "Twice a month.",
            "Once a month.",
            "Once a quarter",
            "Once a year."
          ],
          "enum": [
            "FREQUENCY_UNSPECIFIED",
            "ONE_TIME",
            "DAILY",
            "WEEKLY",
            "SEMI_MONTHLY",
            "MONTHLY",
            "QUARTERLY",
            "YEARLY"
          ]
        },
        "nextRunTimezoneCode": {
          "description": "Canonical timezone code for report generation time. Defaults to `America/New_York`.",
          "type": "string"
        }
      }
    },
    "ListQueriesResponse": {
      "id": "ListQueriesResponse",
      "type": "object",
      "properties": {
        "queries": {
          "description": "The list of queries.",
          "type": "array",
          "items": {
            "$ref": "Query"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as page_token to retrieve the next page of queries. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "RunQueryRequest": {
      "id": "RunQueryRequest",
      "description": "Request to run a stored query to generate a report.",
      "type": "object",
      "properties": {
        "dataRange": {
          "description": "Report data range used to generate the report. If unspecified, the original parent query's data range is used.",
          "$ref": "DataRange"
        }
      }
    },
    "Report": {
      "id": "Report",
      "description": "Represents a report.",
      "type": "object",
      "properties": {
        "key": {
          "description": "Key used to identify a report.",
          "$ref": "ReportKey"
        },
        "metadata": {
          "description": "Report metadata.",
          "$ref": "ReportMetadata"
        },
        "params": {
          "description": "Report parameters.",
          "$ref": "Parameters"
        }
      }
    },
    "ReportKey": {
      "id": "ReportKey",
      "description": "Key used to identify a report.",
      "type": "object",
      "properties": {
        "queryId": {
          "description": "Output only. Query ID.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "reportId": {
          "description": "Output only. Report ID.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ReportMetadata": {
      "id": "ReportMetadata",
      "description": "Report metadata.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Report status.",
          "$ref": "ReportStatus"
        },
        "reportDataStartDate": {
          "description": "The starting time for the data that is shown in the report.",
          "$ref": "Date"
        },
        "reportDataEndDate": {
          "description": "The ending time for the data that is shown in the report.",
          "$ref": "Date"
        },
        "googleCloudStoragePath": {
          "description": "Output only. The path to the location in Google Cloud Storage where the report is stored.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ReportStatus": {
      "id": "ReportStatus",
      "description": "Report status.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Output only. The state of the report.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Default value when state is not specified or is unknown in this version.",
            "The report is queued to run.",
            "The report is currently running.",
            "The report has finished running successfully.",
            "The report has finished running in failure."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "QUEUED",
            "RUNNING",
            "DONE",
            "FAILED"
          ]
        },
        "finishTime": {
          "description": "Output only. The time when this report either completed successfully or failed.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "format": {
          "description": "The file type of the report.",
          "type": "string",
          "enumDescriptions": [
            "Default value when format is not specified or is unknown in this version.",
            "CSV.",
            "Excel."
          ],
          "enum": [
            "FORMAT_UNSPECIFIED",
            "CSV",
            "XLSX"
          ]
        }
      }
    },
    "ListReportsResponse": {
      "id": "ListReportsResponse",
      "type": "object",
      "properties": {
        "reports": {
          "description": "Retrieved reports.",
          "type": "array",
          "items": {
            "$ref": "Report"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as page_token to retrieve the next page of reports. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    }
  },
  "id": "doubleclickbidmanager:v2",
  "ownerName": "Google",
  "servicePath": "v2/",
  "canonicalName": "DoubleClick Bid Manager",
  "documentationLink": "https://developers.google.com/bid-manager/",
  "revision": "20240305",
  "title": "DoubleClick Bid Manager API"
}

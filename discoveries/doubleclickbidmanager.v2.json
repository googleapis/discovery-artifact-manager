{
  "version": "v2",
  "protocol": "rest",
  "canonicalName": "DoubleClick Bid Manager",
  "schemas": {
    "RunQueryRequest": {
      "type": "object",
      "description": "Request to run a stored query to generate a report.",
      "id": "RunQueryRequest",
      "properties": {
        "dataRange": {
          "description": "Report data range used to generate the report. If unspecified, the original parent query's data range is used.",
          "$ref": "DataRange"
        }
      }
    },
    "ListReportsResponse": {
      "id": "ListReportsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page of reports. If this field is omitted, there are no subsequent pages."
        },
        "reports": {
          "type": "array",
          "items": {
            "$ref": "Report"
          },
          "description": "Retrieved reports."
        }
      },
      "type": "object",
      "description": "Represents a list of reports."
    },
    "PathQueryOptions": {
      "id": "PathQueryOptions",
      "type": "object",
      "description": "Path Query Options for Report Options.",
      "properties": {
        "channelGrouping": {
          "$ref": "ChannelGrouping",
          "description": "Custom Channel Groupings."
        },
        "pathFilters": {
          "type": "array",
          "items": {
            "$ref": "PathFilter"
          },
          "description": "Path Filters. There is a limit of 100 path filters that can be set per report."
        }
      }
    },
    "PathFilter": {
      "properties": {
        "eventFilters": {
          "description": "Filter on an event to be applied to some part of the path.",
          "type": "array",
          "items": {
            "$ref": "EventFilter"
          }
        },
        "pathMatchPosition": {
          "description": "Indicates the position of the path the filter should match to (first, last, or any event in path).",
          "enum": [
            "PATH_MATCH_POSITION_UNSPECIFIED",
            "ANY",
            "FIRST",
            "LAST"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        }
      },
      "type": "object",
      "id": "PathFilter",
      "description": "Path filters specify which paths to include in a report. A path is the result of combining DV360 events based on User ID to create a workflow of users' actions. When a path filter is set, the resulting report will only include paths that match the specified event at the specified position. All other paths will be excluded."
    },
    "Report": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "Parameters",
          "description": "Report parameters."
        },
        "metadata": {
          "$ref": "ReportMetadata",
          "description": "Report metadata."
        },
        "key": {
          "$ref": "ReportKey",
          "description": "Key used to identify a report."
        }
      },
      "description": "Represents a report.",
      "id": "Report"
    },
    "DataRange": {
      "description": "Report data range.",
      "properties": {
        "range": {
          "type": "string",
          "description": "Report data range used to generate the report.",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "RANGE_UNSPECIFIED",
            "CUSTOM_DATES",
            "CURRENT_DAY",
            "PREVIOUS_DAY",
            "WEEK_TO_DATE",
            "MONTH_TO_DATE",
            "QUARTER_TO_DATE",
            "YEAR_TO_DATE",
            "PREVIOUS_WEEK",
            "PREVIOUS_MONTH",
            "PREVIOUS_QUARTER",
            "PREVIOUS_YEAR",
            "LAST_7_DAYS",
            "LAST_30_DAYS",
            "LAST_90_DAYS",
            "LAST_365_DAYS",
            "ALL_TIME",
            "LAST_14_DAYS",
            "LAST_60_DAYS"
          ]
        },
        "customStartDate": {
          "$ref": "Date",
          "description": "The starting data for the data that is shown in the report. Note, `customStartDate` is required if `range` is `CUSTOM_DATES` and ignored otherwise."
        },
        "customEndDate": {
          "$ref": "Date",
          "description": "The ending date for the data that is shown in the report. Note, `customEndDate` is required if `range` is `CUSTOM_DATES` and ignored otherwise."
        }
      },
      "type": "object",
      "id": "DataRange"
    },
    "ChannelGrouping": {
      "description": "A channel grouping defines a set of rules that can be used to categorize events in a path report.",
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "Rule"
          },
          "description": "Rules within Channel Grouping. There is a limit of 100 rules that can be set per channel grouping."
        },
        "fallbackName": {
          "description": "The name to apply to an event that does not match any of the rules in the channel grouping.",
          "type": "string"
        },
        "name": {
          "description": "Channel Grouping name.",
          "type": "string"
        }
      },
      "id": "ChannelGrouping"
    },
    "Options": {
      "id": "Options",
      "properties": {
        "pathQueryOptions": {
          "description": "Options that contain Path Filters and Custom Channel Groupings.",
          "$ref": "PathQueryOptions"
        },
        "includeOnlyTargetedUserLists": {
          "description": "Set to true and filter your report by `FILTER_INSERTION_ORDER` or `FILTER_LINE_ITEM` to include data for audience lists specifically targeted by those items.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Additional query options."
    },
    "QuerySchedule": {
      "type": "object",
      "properties": {
        "endDate": {
          "$ref": "Date",
          "description": "Date to periodically run the query until. Not applicable to `ONE_TIME` frequency."
        },
        "startDate": {
          "$ref": "Date",
          "description": "When to start running the query. Not applicable to `ONE_TIME` frequency."
        },
        "nextRunTimezoneCode": {
          "description": "Canonical timezone code for report generation time. Defaults to `America/New_York`.",
          "type": "string"
        },
        "frequency": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "FREQUENCY_UNSPECIFIED",
            "ONE_TIME",
            "DAILY",
            "WEEKLY",
            "SEMI_MONTHLY",
            "MONTHLY",
            "QUARTERLY",
            "YEARLY"
          ],
          "description": "How often the query is run."
        }
      },
      "id": "QuerySchedule",
      "description": "Information on how frequently and when to run a query."
    },
    "Rule": {
      "description": "A Rule defines a name, and a boolean expression in [conjunctive normal form] (http://mathworld.wolfram.com/ConjunctiveNormalForm.html){.external} that can be applied to a path event to determine if that name should be applied.",
      "type": "object",
      "id": "Rule",
      "properties": {
        "name": {
          "description": "Rule name.",
          "type": "string"
        },
        "disjunctiveMatchStatements": {
          "type": "array",
          "items": {
            "$ref": "DisjunctiveMatchStatement"
          },
          "description": "DisjunctiveMatchStatements within a Rule. DisjunctiveMatchStatement OR's all contained filters."
        }
      }
    },
    "PathQueryOptionsFilter": {
      "type": "object",
      "description": "Dimension Filter on path events.",
      "properties": {
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Value to filter on."
        },
        "filter": {
          "description": "Dimension the filter is applied to.",
          "type": "string"
        },
        "match": {
          "description": "Indicates how the filter should be matched to the value.",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "UNKNOWN",
            "EXACT",
            "PARTIAL",
            "BEGINS_WITH",
            "WILDCARD_EXPRESSION"
          ]
        }
      },
      "id": "PathQueryOptionsFilter"
    },
    "EventFilter": {
      "type": "object",
      "id": "EventFilter",
      "properties": {
        "dimensionFilter": {
          "description": "Filter on a dimension.",
          "$ref": "PathQueryOptionsFilter"
        }
      },
      "description": "Defines the type of filter to be applied to the path, a DV360 event dimension filter."
    },
    "Parameters": {
      "id": "Parameters",
      "type": "object",
      "description": "Parameters of a query or report.",
      "properties": {
        "groupBys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Data is grouped by the filters listed in this field."
        },
        "type": {
          "description": "Report type.",
          "type": "string",
          "enum": [
            "REPORT_TYPE_UNSPECIFIED",
            "STANDARD",
            "INVENTORY_AVAILABILITY",
            "AUDIENCE_COMPOSITION",
            "FLOODLIGHT",
            "YOUTUBE",
            "GRP",
            "YOUTUBE_PROGRAMMATIC_GUARANTEED",
            "REACH",
            "UNIQUE_REACH_AUDIENCE",
            "FULL_PATH",
            "PATH_ATTRIBUTION"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "filters": {
          "items": {
            "$ref": "FilterPair"
          },
          "description": "Filters used to match traffic data in your report.",
          "type": "array"
        },
        "options": {
          "description": "Additional query options.",
          "$ref": "Options"
        },
        "metrics": {
          "items": {
            "type": "string"
          },
          "description": "Metrics to include as columns in your report.",
          "type": "array"
        }
      }
    },
    "QueryMetadata": {
      "properties": {
        "dataRange": {
          "$ref": "DataRange",
          "description": "Range of report data."
        },
        "format": {
          "description": "Format of the generated report.",
          "type": "string",
          "enum": [
            "FORMAT_UNSPECIFIED",
            "CSV",
            "XLSX"
          ],
          "enumDescriptions": [
            "Default value when format is not specified or is unknown in this version.",
            "CSV.",
            "Excel."
          ]
        },
        "shareEmailAddress": {
          "items": {
            "type": "string"
          },
          "description": "List of email addresses which are sent email notifications when the report is finished. Separate from `sendNotification`.",
          "type": "array"
        },
        "sendNotification": {
          "type": "boolean",
          "description": "Whether to send an email notification when a report is ready. Defaults to false."
        },
        "title": {
          "description": "Query title. It is used to name the reports generated from this query.",
          "type": "string"
        }
      },
      "description": "Query metadata.",
      "type": "object",
      "id": "QueryMetadata"
    },
    "ReportStatus": {
      "description": "Report status.",
      "properties": {
        "finishTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time when this report either completed successfully or failed."
        },
        "format": {
          "description": "The file type of the report.",
          "type": "string",
          "enumDescriptions": [
            "Default value when format is not specified or is unknown in this version.",
            "CSV.",
            "Excel."
          ],
          "enum": [
            "FORMAT_UNSPECIFIED",
            "CSV",
            "XLSX"
          ]
        },
        "state": {
          "readOnly": true,
          "description": "Output only. The state of the report.",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "QUEUED",
            "RUNNING",
            "DONE",
            "FAILED"
          ]
        }
      },
      "type": "object",
      "id": "ReportStatus"
    },
    "Query": {
      "description": "Represents a query.",
      "properties": {
        "metadata": {
          "description": "Query metadata.",
          "$ref": "QueryMetadata"
        },
        "params": {
          "$ref": "Parameters",
          "description": "Query parameters."
        },
        "schedule": {
          "$ref": "QuerySchedule",
          "description": "Information on how often and when to run a query."
        },
        "queryId": {
          "format": "int64",
          "description": "Output only. Query ID.",
          "type": "string",
          "readOnly": true
        }
      },
      "id": "Query",
      "type": "object"
    },
    "ReportMetadata": {
      "type": "object",
      "description": "Report metadata.",
      "properties": {
        "status": {
          "description": "Report status.",
          "$ref": "ReportStatus"
        },
        "googleCloudStoragePath": {
          "readOnly": true,
          "description": "Output only. The path to the location in Google Cloud Storage where the report is stored.",
          "type": "string"
        },
        "reportDataStartDate": {
          "description": "The starting time for the data that is shown in the report.",
          "$ref": "Date"
        },
        "reportDataEndDate": {
          "$ref": "Date",
          "description": "The ending time for the data that is shown in the report."
        }
      },
      "id": "ReportMetadata"
    },
    "ListQueriesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page of queries. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "queries": {
          "items": {
            "$ref": "Query"
          },
          "type": "array",
          "description": "Retrieved queries."
        }
      },
      "id": "ListQueriesResponse",
      "type": "object",
      "description": "Represents a list of queries."
    },
    "DisjunctiveMatchStatement": {
      "description": "DisjunctiveMatchStatement that OR's all contained filters.",
      "id": "DisjunctiveMatchStatement",
      "properties": {
        "eventFilters": {
          "type": "array",
          "items": {
            "$ref": "EventFilter"
          },
          "description": "Filters. There is a limit of 100 filters that can be set per disjunctive match statement."
        }
      },
      "type": "object"
    },
    "ReportKey": {
      "description": "Key used to identify a report.",
      "properties": {
        "queryId": {
          "type": "string",
          "format": "int64",
          "description": "Output only. Query ID.",
          "readOnly": true
        },
        "reportId": {
          "format": "int64",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Report ID."
        }
      },
      "id": "ReportKey",
      "type": "object"
    },
    "Date": {
      "type": "object",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "properties": {
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
        },
        "year": {
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "Date"
    },
    "FilterPair": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Filter value."
        },
        "type": {
          "description": "Filter type.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "FilterPair",
      "description": "Filter used to match traffic data in your report."
    }
  },
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "name": "doubleclickbidmanager",
  "basePath": "/v2/",
  "documentationLink": "https://developers.google.com/bid-manager/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "batchPath": "batch",
  "revision": "20220524",
  "servicePath": "v2/",
  "baseUrl": "https://doubleclickbidmanager.googleapis.com/v2/",
  "title": "DoubleClick Bid Manager API",
  "ownerDomain": "google.com",
  "id": "doubleclickbidmanager:v2",
  "discoveryVersion": "v1",
  "parameters": {
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response.",
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    }
  },
  "mtlsRootUrl": "https://doubleclickbidmanager.mtls.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/doubleclickbidmanager": {
          "description": "View and manage your reports in DoubleClick Bid Manager"
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "resources": {
    "queries": {
      "methods": {
        "run": {
          "parameters": {
            "synchronous": {
              "location": "query",
              "type": "boolean",
              "description": "Whether the query should be run synchronously. When true, this method will not return until the query has finished running. When false or not specified, this method will return immediately."
            },
            "queryId": {
              "location": "path",
              "description": "Required. Query ID to run.",
              "type": "string",
              "required": true,
              "format": "int64"
            }
          },
          "httpMethod": "POST",
          "path": "queries/{queryId}:run",
          "id": "doubleclickbidmanager.queries.run",
          "parameterOrder": [
            "queryId"
          ],
          "request": {
            "$ref": "RunQueryRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/doubleclickbidmanager"
          ],
          "flatPath": "queries/{queryId}:run",
          "response": {
            "$ref": "Report"
          },
          "description": "Runs a stored query to generate a report."
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/doubleclickbidmanager"
          ],
          "id": "doubleclickbidmanager.queries.get",
          "httpMethod": "GET",
          "parameters": {
            "queryId": {
              "required": true,
              "format": "int64",
              "location": "path",
              "type": "string",
              "description": "Required. Query ID to retrieve."
            }
          },
          "response": {
            "$ref": "Query"
          },
          "flatPath": "queries/{queryId}",
          "description": "Retrieves a stored query.",
          "path": "queries/{queryId}",
          "parameterOrder": [
            "queryId"
          ]
        },
        "create": {
          "httpMethod": "POST",
          "description": "Creates a query.",
          "id": "doubleclickbidmanager.queries.create",
          "request": {
            "$ref": "Query"
          },
          "scopes": [
            "https://www.googleapis.com/auth/doubleclickbidmanager"
          ],
          "path": "queries",
          "parameters": {},
          "response": {
            "$ref": "Query"
          },
          "parameterOrder": [],
          "flatPath": "queries"
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/doubleclickbidmanager"
          ],
          "path": "queries/{queryId}",
          "id": "doubleclickbidmanager.queries.delete",
          "description": "Deletes a stored query as well as the associated stored reports.",
          "flatPath": "queries/{queryId}",
          "parameterOrder": [
            "queryId"
          ],
          "parameters": {
            "queryId": {
              "description": "Required. Query ID to delete.",
              "format": "int64",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "httpMethod": "DELETE"
        },
        "list": {
          "response": {
            "$ref": "ListQueriesResponse"
          },
          "flatPath": "queries",
          "httpMethod": "GET",
          "parameterOrder": [],
          "id": "doubleclickbidmanager.queries.list",
          "path": "queries",
          "description": "Retrieves stored queries.",
          "scopes": [
            "https://www.googleapis.com/auth/doubleclickbidmanager"
          ],
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page of queries."
            },
            "pageSize": {
              "type": "integer",
              "description": "Maximum number of results per page. Must be between `1` and `100`. Defaults to `100` if unspecified.",
              "location": "query",
              "format": "int32"
            },
            "orderBy": {
              "location": "query",
              "description": "Name of a field used to order results. The default sorting order is ascending. To specify descending order for a field, append a \" desc\" suffix. For example \"metadata.title desc\". Sorting is only supported for the following fields: * queryId * metadata.title",
              "type": "string"
            }
          }
        }
      },
      "resources": {
        "reports": {
          "methods": {
            "list": {
              "flatPath": "queries/{queryId}/reports",
              "description": "Lists reports.",
              "httpMethod": "GET",
              "parameterOrder": [
                "queryId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/doubleclickbidmanager"
              ],
              "path": "queries/{queryId}/reports",
              "id": "doubleclickbidmanager.queries.reports.list",
              "response": {
                "$ref": "ListReportsResponse"
              },
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "A page token, received from a previous list call. Provide this to retrieve the subsequent page of reports.",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "description": "Maximum number of results per page. Must be between `1` and `100`. Defaults to `100` if unspecified.",
                  "location": "query",
                  "type": "integer"
                },
                "orderBy": {
                  "location": "query",
                  "type": "string",
                  "description": "Name of a field used to order results. The default sorting order is ascending. To specify descending order for a field, append a \" desc\" suffix. For example \"key.reportId desc\". Sorting is only supported for the following fields: * key.reportId"
                },
                "queryId": {
                  "format": "int64",
                  "location": "path",
                  "description": "Required. Query ID with which the reports are associated.",
                  "type": "string",
                  "required": true
                }
              }
            },
            "get": {
              "response": {
                "$ref": "Report"
              },
              "description": "Retrieves a stored report.",
              "path": "queries/{queryId}/reports/{reportId}",
              "id": "doubleclickbidmanager.queries.reports.get",
              "scopes": [
                "https://www.googleapis.com/auth/doubleclickbidmanager"
              ],
              "parameters": {
                "queryId": {
                  "required": true,
                  "description": "Required. ID of the query the report is associated with.",
                  "location": "path",
                  "type": "string",
                  "format": "int64"
                },
                "reportId": {
                  "format": "int64",
                  "required": true,
                  "description": "Required. ID of the report to retrieve.",
                  "location": "path",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "queryId",
                "reportId"
              ],
              "httpMethod": "GET",
              "flatPath": "queries/{queryId}/reports/{reportId}"
            }
          }
        }
      }
    }
  },
  "rootUrl": "https://doubleclickbidmanager.googleapis.com/",
  "description": "DoubleClick Bid Manager API allows users to manage and create campaigns and reports."
}

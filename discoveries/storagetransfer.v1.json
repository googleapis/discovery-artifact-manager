{
  "ownerName": "Google",
  "discoveryVersion": "v1",
  "mtlsRootUrl": "https://storagetransfer.mtls.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "rootUrl": "https://storagetransfer.googleapis.com/",
  "version_module": true,
  "servicePath": "",
  "kind": "discovery#restDescription",
  "ownerDomain": "google.com",
  "protocol": "rest",
  "parameters": {
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "description": "V1 error format.",
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "default": "json",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    }
  },
  "baseUrl": "https://storagetransfer.googleapis.com/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "id": "storagetransfer:v1",
  "title": "Storage Transfer API",
  "documentationLink": "https://cloud.google.com/storage-transfer/docs",
  "batchPath": "batch",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "name": "storagetransfer",
  "version": "v1",
  "revision": "20211105",
  "schemas": {
    "AzureCredentials": {
      "properties": {
        "sasToken": {
          "type": "string",
          "description": "Required. Azure shared access signature (SAS). *Note:*Copying data from Azure Data Lake Storage (ADLS) Gen 2 is in [Preview](/products/#product-launch-stages). During Preview, if you are copying data from ADLS Gen 2, you must use an account SAS. For more information about SAS, see [Grant limited access to Azure Storage resources using shared access signatures (SAS)](https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview)."
        }
      },
      "type": "object",
      "description": "Azure credentials For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).",
      "id": "AzureCredentials"
    },
    "TransferJob": {
      "properties": {
        "schedule": {
          "$ref": "Schedule",
          "description": "Specifies schedule for the transfer job. This is an optional field. When the field is not set, the job never executes a transfer, unless you invoke RunTransferJob or update the job to have a non-empty schedule."
        },
        "loggingConfig": {
          "$ref": "LoggingConfig",
          "description": "Logging configuration."
        },
        "deletionTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time that the transfer job was deleted.",
          "readOnly": true
        },
        "creationTime": {
          "readOnly": true,
          "description": "Output only. The time that the transfer job was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "projectId": {
          "type": "string",
          "description": "The ID of the Google Cloud Platform Project that owns the job."
        },
        "description": {
          "type": "string",
          "description": "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded."
        },
        "name": {
          "type": "string",
          "description": "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error."
        },
        "transferSpec": {
          "$ref": "TransferSpec",
          "description": "Transfer specification."
        },
        "notificationConfig": {
          "$ref": "NotificationConfig",
          "description": "Notification configuration. This is not supported for transfers involving PosixFilesystem."
        },
        "latestOperationName": {
          "description": "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
          "type": "string"
        },
        "status": {
          "description": "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
          "type": "string",
          "enum": [
            "STATUS_UNSPECIFIED",
            "ENABLED",
            "DISABLED",
            "DELETED"
          ],
          "enumDescriptions": [
            "Zero is an illegal value.",
            "New transfers are performed based on the schedule.",
            "New transfers are not scheduled.",
            "This is a soft delete state. After a transfer job is set to this state, the job and all the transfer executions are subject to garbage collection. Transfer jobs become eligible for garbage collection 30 days after their status is set to `DELETED`."
          ]
        },
        "lastModificationTime": {
          "description": "Output only. The time that the transfer job was last modified.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "TransferJob",
      "description": "This resource represents the configuration of a transfer job that runs periodically."
    },
    "ObjectConditions": {
      "description": "Conditions that determine which objects are transferred. Applies only to Cloud Data Sources such as S3, Azure, and Cloud Storage. The \"last modification time\" refers to the time of the last change to the object's content or metadata â€” specifically, this is the `updated` property of Cloud Storage objects, the `LastModified` field of S3 objects, and the `Last-Modified` header of Azure blobs. Transfers with a PosixFilesystem source or destination don't support `ObjectConditions`.",
      "properties": {
        "lastModifiedSince": {
          "type": "string",
          "format": "google-datetime",
          "description": "If specified, only objects with a \"last modification time\" on or after this timestamp and objects that don't have a \"last modification time\" are transferred. The `last_modified_since` and `last_modified_before` fields can be used together for chunked data processing. For example, consider a script that processes each day's worth of data at a time. For that you'd set each of the fields as follows: * `last_modified_since` to the start of the day * `last_modified_before` to the end of the day"
        },
        "maxTimeElapsedSinceLastModification": {
          "format": "google-duration",
          "type": "string",
          "description": "If specified, only objects with a \"last modification time\" on or after `NOW` - `max_time_elapsed_since_last_modification` and objects that don't have a \"last modification time\" are transferred. For each TransferOperation started by this TransferJob, `NOW` refers to the start_time of the `TransferOperation`."
        },
        "includePrefixes": {
          "items": {
            "type": "string"
          },
          "description": "If you specify `include_prefixes`, Storage Transfer Service uses the items in the `include_prefixes` array to determine which objects to include in a transfer. Objects must start with one of the matching `include_prefixes` for inclusion in the transfer. If exclude_prefixes is specified, objects must not start with any of the `exclude_prefixes` specified for inclusion in the transfer. The following are requirements of `include_prefixes`: * Each include-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each include-prefix must omit the leading slash. For example, to include the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the include-prefix as `logs/y=2015/requests.gz`. * None of the include-prefix values can be empty, if specified. * Each include-prefix must include a distinct portion of the object namespace. No include-prefix may be a prefix of another include-prefix. The max size of `include_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers).",
          "type": "array"
        },
        "lastModifiedBefore": {
          "type": "string",
          "format": "google-datetime",
          "description": "If specified, only objects with a \"last modification time\" before this timestamp and objects that don't have a \"last modification time\" are transferred."
        },
        "excludePrefixes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "If you specify `exclude_prefixes`, Storage Transfer Service uses the items in the `exclude_prefixes` array to determine which objects to exclude from a transfer. Objects must not start with one of the matching `exclude_prefixes` for inclusion in a transfer. The following are requirements of `exclude_prefixes`: * Each exclude-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each exclude-prefix must omit the leading slash. For example, to exclude the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the exclude-prefix as `logs/y=2015/requests.gz`. * None of the exclude-prefix values can be empty, if specified. * Each exclude-prefix must exclude a distinct portion of the object namespace. No exclude-prefix may be a prefix of another exclude-prefix. * If include_prefixes is specified, then each exclude-prefix must start with the value of a path explicitly included by `include_prefixes`. The max size of `exclude_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers)."
        },
        "minTimeElapsedSinceLastModification": {
          "description": "If specified, only objects with a \"last modification time\" before `NOW` - `min_time_elapsed_since_last_modification` and objects that don't have a \"last modification time\" are transferred. For each TransferOperation started by this TransferJob, `NOW` refers to the start_time of the `TransferOperation`.",
          "type": "string",
          "format": "google-duration"
        }
      },
      "type": "object",
      "id": "ObjectConditions"
    },
    "PauseTransferOperationRequest": {
      "type": "object",
      "id": "PauseTransferOperationRequest",
      "description": "Request passed to PauseTransferOperation.",
      "properties": {}
    },
    "TransferOptions": {
      "description": "TransferOptions define the actions to be performed on objects in a transfer.",
      "type": "object",
      "properties": {
        "deleteObjectsUniqueInSink": {
          "type": "boolean",
          "description": "Whether objects that exist only in the sink should be deleted. **Note:** This option and delete_objects_from_source_after_transfer are mutually exclusive."
        },
        "deleteObjectsFromSourceAfterTransfer": {
          "description": "Whether objects should be deleted from the source after they are transferred to the sink. **Note:** This option and delete_objects_unique_in_sink are mutually exclusive.",
          "type": "boolean"
        },
        "overwriteObjectsAlreadyExistingInSink": {
          "type": "boolean",
          "description": "When to overwrite objects that already exist in the sink. The default is that only objects that are different from the source are ovewritten. If true, all objects in the sink whose name matches an object in the source are overwritten with the source object."
        }
      },
      "id": "TransferOptions"
    },
    "PosixFilesystem": {
      "description": "A POSIX filesystem resource.",
      "type": "object",
      "id": "PosixFilesystem",
      "properties": {
        "rootDirectory": {
          "type": "string",
          "description": "Root directory path to the filesystem."
        }
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "type": "object",
      "description": "The request message for Operations.CancelOperation.",
      "properties": {}
    },
    "RunTransferJobRequest": {
      "properties": {
        "projectId": {
          "description": "Required. The ID of the Google Cloud Platform Console project that owns the transfer job.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Request passed to RunTransferJob.",
      "id": "RunTransferJobRequest"
    },
    "ErrorLogEntry": {
      "type": "object",
      "properties": {
        "errorDetails": {
          "items": {
            "type": "string"
          },
          "description": "A list of messages that carry the error details.",
          "type": "array"
        },
        "url": {
          "type": "string",
          "description": "Required. A URL that refers to the target (a data source, a data sink, or an object) with which the error is associated."
        }
      },
      "id": "ErrorLogEntry",
      "description": "An entry describing an error that has occurred."
    },
    "ListTransferJobsResponse": {
      "id": "ListTransferJobsResponse",
      "description": "Response from ListTransferJobs.",
      "type": "object",
      "properties": {
        "transferJobs": {
          "type": "array",
          "items": {
            "$ref": "TransferJob"
          },
          "description": "A list of transfer jobs."
        },
        "nextPageToken": {
          "description": "The list next page token.",
          "type": "string"
        }
      }
    },
    "AwsAccessKey": {
      "description": "AWS access key (see [AWS Security Credentials](https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html)). For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials).",
      "type": "object",
      "properties": {
        "accessKeyId": {
          "description": "Required. AWS access key ID.",
          "type": "string"
        },
        "secretAccessKey": {
          "type": "string",
          "description": "Required. AWS secret access key. This field is not returned in RPC responses."
        }
      },
      "id": "AwsAccessKey"
    },
    "TransferOperation": {
      "id": "TransferOperation",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "A globally unique ID assigned by the system."
        },
        "transferJobName": {
          "type": "string",
          "description": "The name of the transfer job that triggers this transfer operation."
        },
        "errorBreakdowns": {
          "items": {
            "$ref": "ErrorSummary"
          },
          "description": "Summarizes errors encountered with sample error log entries.",
          "type": "array"
        },
        "startTime": {
          "format": "google-datetime",
          "description": "Start time of this transfer execution.",
          "type": "string"
        },
        "transferSpec": {
          "description": "Transfer specification.",
          "$ref": "TransferSpec"
        },
        "projectId": {
          "type": "string",
          "description": "The ID of the Google Cloud Platform Project that owns the operation."
        },
        "counters": {
          "$ref": "TransferCounters",
          "description": "Information about the progress of the transfer operation."
        },
        "notificationConfig": {
          "$ref": "NotificationConfig",
          "description": "Notification configuration."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "End time of this transfer execution."
        },
        "status": {
          "type": "string",
          "enum": [
            "STATUS_UNSPECIFIED",
            "IN_PROGRESS",
            "PAUSED",
            "SUCCESS",
            "FAILED",
            "ABORTED",
            "QUEUED"
          ],
          "enumDescriptions": [
            "Zero is an illegal value.",
            "In progress.",
            "Paused.",
            "Completed successfully.",
            "Terminated due to an unrecoverable failure.",
            "Aborted by the user.",
            "Temporarily delayed by the system. No user action is required."
          ],
          "description": "Status of the transfer operation."
        }
      },
      "description": "A description of the execution of a transfer."
    },
    "BandwidthLimit": {
      "id": "BandwidthLimit",
      "description": "Specifies the BandwidthLimit to describe the non-negative bandwidth rate in mbps for the agent pool.",
      "type": "object",
      "properties": {
        "limitMbps": {
          "format": "int64",
          "description": "Specifies bandwidth rate in mbps distributed across all the agents in the pool.",
          "type": "string"
        }
      }
    },
    "TimeOfDay": {
      "type": "object",
      "id": "TimeOfDay",
      "description": "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
      "properties": {
        "minutes": {
          "format": "int32",
          "type": "integer",
          "description": "Minutes of hour of day. Must be from 0 to 59."
        },
        "nanos": {
          "format": "int32",
          "type": "integer",
          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
        },
        "hours": {
          "format": "int32",
          "type": "integer",
          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
        },
        "seconds": {
          "format": "int32",
          "type": "integer",
          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
        }
      }
    },
    "ListAgentPoolsResponse": {
      "description": "Response from ListAgentPools.",
      "id": "ListAgentPoolsResponse",
      "properties": {
        "agentPools": {
          "type": "array",
          "description": "A list of agent pools.",
          "items": {
            "$ref": "AgentPool"
          }
        },
        "nextPageToken": {
          "description": "The list next page token.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferCounters": {
      "type": "object",
      "id": "TransferCounters",
      "description": "A collection of counters that report the progress of a transfer operation.",
      "properties": {
        "bytesDeletedFromSource": {
          "format": "int64",
          "type": "string",
          "description": "Bytes that are deleted from the data source."
        },
        "bytesFromSourceFailed": {
          "format": "int64",
          "type": "string",
          "description": "Bytes in the data source that failed to be transferred or that failed to be deleted after being transferred."
        },
        "bytesFoundOnlyFromSink": {
          "type": "string",
          "format": "int64",
          "description": "Bytes found only in the data sink that are scheduled to be deleted."
        },
        "bytesCopiedToSink": {
          "format": "int64",
          "type": "string",
          "description": "Bytes that are copied to the data sink."
        },
        "directoriesFailedToListFromSource": {
          "description": "For transfers involving PosixFilesystem only. Number of listing failures for each directory found at the source. Potential failures when listing a directory include permission failure or block failure. If listing a directory fails, no files in the directory are transferred.",
          "format": "int64",
          "type": "string"
        },
        "objectsCopiedToSink": {
          "description": "Objects that are copied to the data sink.",
          "type": "string",
          "format": "int64"
        },
        "bytesFailedToDeleteFromSink": {
          "type": "string",
          "description": "Bytes that failed to be deleted from the data sink.",
          "format": "int64"
        },
        "objectsFailedToDeleteFromSink": {
          "format": "int64",
          "description": "Objects that failed to be deleted from the data sink.",
          "type": "string"
        },
        "directoriesSuccessfullyListedFromSource": {
          "description": "For transfers involving PosixFilesystem only. Number of successful listings for each directory found at the source.",
          "format": "int64",
          "type": "string"
        },
        "objectsFoundFromSource": {
          "description": "Objects found in the data source that are scheduled to be transferred, excluding any that are filtered based on object conditions or skipped due to sync.",
          "format": "int64",
          "type": "string"
        },
        "objectsDeletedFromSource": {
          "format": "int64",
          "type": "string",
          "description": "Objects that are deleted from the data source."
        },
        "objectsFoundOnlyFromSink": {
          "type": "string",
          "description": "Objects found only in the data sink that are scheduled to be deleted.",
          "format": "int64"
        },
        "directoriesFoundFromSource": {
          "format": "int64",
          "description": "For transfers involving PosixFilesystem only. Number of directories found while listing. For example, if the root directory of the transfer is `base/` and there are two other directories, `a/` and `b/` under this directory, the count after listing `base/`, `base/a/` and `base/b/` is 3.",
          "type": "string"
        },
        "intermediateObjectsFailedCleanedUp": {
          "description": "Number of intermediate objects failed cleaned up.",
          "format": "int64",
          "type": "string"
        },
        "objectsDeletedFromSink": {
          "format": "int64",
          "type": "string",
          "description": "Objects that are deleted from the data sink."
        },
        "bytesDeletedFromSink": {
          "type": "string",
          "description": "Bytes that are deleted from the data sink.",
          "format": "int64"
        },
        "bytesFromSourceSkippedBySync": {
          "type": "string",
          "description": "Bytes in the data source that are not transferred because they already exist in the data sink.",
          "format": "int64"
        },
        "intermediateObjectsCleanedUp": {
          "type": "string",
          "description": "Number of successfully cleaned up intermediate objects.",
          "format": "int64"
        },
        "objectsFromSourceSkippedBySync": {
          "type": "string",
          "format": "int64",
          "description": "Objects in the data source that are not transferred because they already exist in the data sink."
        },
        "bytesFoundFromSource": {
          "description": "Bytes found in the data source that are scheduled to be transferred, excluding any that are filtered based on object conditions or skipped due to sync.",
          "format": "int64",
          "type": "string"
        },
        "objectsFromSourceFailed": {
          "format": "int64",
          "description": "Objects in the data source that failed to be transferred or that failed to be deleted after being transferred.",
          "type": "string"
        }
      }
    },
    "AzureBlobStorageData": {
      "type": "object",
      "description": "An AzureBlobStorageData resource can be a data source, but not a data sink. An AzureBlobStorageData resource represents one Azure container. The storage account determines the [Azure endpoint](https://docs.microsoft.com/en-us/azure/storage/common/storage-create-storage-account#storage-account-endpoints). In an AzureBlobStorageData resource, a blobs's name is the [Azure Blob Storage blob's key name](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#blob-names).",
      "id": "AzureBlobStorageData",
      "properties": {
        "container": {
          "type": "string",
          "description": "Required. The container to transfer from the Azure Storage account."
        },
        "azureCredentials": {
          "$ref": "AzureCredentials",
          "description": "Required. Input only. Credentials used to authenticate API requests to Azure. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials)."
        },
        "storageAccount": {
          "description": "Required. The name of the Azure Storage account.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'."
        }
      }
    },
    "TransferSpec": {
      "properties": {
        "objectConditions": {
          "$ref": "ObjectConditions",
          "description": "Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' \"last modification time\" do not exclude objects in a data sink."
        },
        "transferOptions": {
          "description": "If the option delete_objects_unique_in_sink is `true` and time-based object conditions such as 'last modification time' are specified, the request fails with an INVALID_ARGUMENT error.",
          "$ref": "TransferOptions"
        },
        "posixDataSource": {
          "$ref": "PosixFilesystem",
          "description": "A POSIX Filesystem data source."
        },
        "httpDataSource": {
          "description": "An HTTP URL data source.",
          "$ref": "HttpData"
        },
        "azureBlobStorageDataSource": {
          "$ref": "AzureBlobStorageData",
          "description": "An Azure Blob Storage data source."
        },
        "gcsDataSink": {
          "description": "A Cloud Storage data sink.",
          "$ref": "GcsData"
        },
        "gcsDataSource": {
          "description": "A Cloud Storage data source.",
          "$ref": "GcsData"
        },
        "awsS3DataSource": {
          "$ref": "AwsS3Data",
          "description": "An AWS S3 data source."
        },
        "sourceAgentPoolName": {
          "type": "string",
          "description": "Specifies the agent pool name associated with the posix data source. When unspecified, the default name is used."
        },
        "posixDataSink": {
          "description": "A POSIX Filesystem data sink.",
          "$ref": "PosixFilesystem"
        },
        "sinkAgentPoolName": {
          "description": "Specifies the agent pool name associated with the posix data sink. When unspecified, the default name is used.",
          "type": "string"
        }
      },
      "id": "TransferSpec",
      "type": "object",
      "description": "Configuration for running a transfer."
    },
    "GcsData": {
      "type": "object",
      "id": "GcsData",
      "description": "In a GcsData resource, an object's name is the Cloud Storage object's name and its \"last modification time\" refers to the object's `updated` property of Cloud Storage objects, which changes when the content or the metadata of the object is updated.",
      "properties": {
        "bucketName": {
          "description": "Required. Cloud Storage bucket name. Must meet [Bucket Name Requirements](/storage/docs/naming#requirements).",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'. The root path value must meet [Object Name Requirements](/storage/docs/naming#objectnames)."
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Represents the transfer operation object. To request a TransferOperation object, use transferOperations.get."
        },
        "name": {
          "description": "The server-assigned unique name. The format of `name` is `transferOperations/some/unique/name`.",
          "type": "string"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "GoogleServiceAccount": {
      "properties": {
        "accountEmail": {
          "description": "Email address of the service account.",
          "type": "string"
        },
        "subjectId": {
          "type": "string",
          "description": "Unique identifier for the service account."
        }
      },
      "description": "Google service account",
      "type": "object",
      "id": "GoogleServiceAccount"
    },
    "HttpData": {
      "id": "HttpData",
      "type": "object",
      "properties": {
        "listUrl": {
          "description": "Required. The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.",
          "type": "string"
        }
      },
      "description": "An HttpData resource specifies a list of objects on the web to be transferred over HTTP. The information of the objects to be transferred is contained in a file referenced by a URL. The first line in the file must be `\"TsvHttpData-1.0\"`, which specifies the format of the file. Subsequent lines specify the information of the list of objects, one object per list entry. Each entry has the following tab-delimited fields: * **HTTP URL** â€” The location of the object. * **Length** â€” The size of the object in bytes. * **MD5** â€” The base64-encoded MD5 hash of the object. For an example of a valid TSV file, see [Transferring data from URLs](https://cloud.google.com/storage-transfer/docs/create-url-list). When transferring data based on a URL list, keep the following in mind: * When an object located at `http(s)://hostname:port/` is transferred to a data sink, the name of the object at the data sink is `/`. * If the specified size of an object does not match the actual size of the object fetched, the object is not transferred. * If the specified MD5 does not match the MD5 computed from the transferred bytes, the object transfer fails. * Ensure that each URL you specify is publicly accessible. For example, in Cloud Storage you can [share an object publicly] (/storage/docs/cloud-console#_sharingdata) and get a link to it. * Storage Transfer Service obeys `robots.txt` rules and requires the source HTTP server to support `Range` requests and to return a `Content-Length` header in each response. * ObjectConditions have no effect when filtering objects to transfer."
    },
    "UpdateTransferJobRequest": {
      "properties": {
        "projectId": {
          "type": "string",
          "description": "Required. The ID of the Google Cloud Platform Console project that owns the job."
        },
        "updateTransferJobFieldMask": {
          "format": "google-fieldmask",
          "type": "string",
          "description": "The field mask of the fields in `transferJob` that are to be updated in this request. Fields in `transferJob` that can be updated are: description, transfer_spec, notification_config, and status. To update the `transfer_spec` of the job, a complete transfer specification must be provided. An incomplete specification missing any required fields is rejected with the error INVALID_ARGUMENT."
        },
        "transferJob": {
          "description": "Required. The job to update. `transferJob` is expected to specify only four fields: description, transfer_spec, notification_config, and status. An `UpdateTransferJobRequest` that specifies other fields are rejected with the error INVALID_ARGUMENT. Updating a job status to DELETED requires `storagetransfer.jobs.delete` permissions.",
          "$ref": "TransferJob"
        }
      },
      "id": "UpdateTransferJobRequest",
      "description": "Request passed to UpdateTransferJob.",
      "type": "object"
    },
    "AwsS3Data": {
      "description": "An AwsS3Data resource can be a data source, but not a data sink. In an AwsS3Data resource, an object's name is the S3 object's key name.",
      "id": "AwsS3Data",
      "properties": {
        "roleArn": {
          "description": "The Amazon Resource Name (ARN) of the role to support temporary credentials via `AssumeRoleWithWebIdentity`. For more information about ARNs, see [IAM ARNs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-arns). When a role ARN is provided, Transfer Service fetches temporary credentials for the session using a `AssumeRoleWithWebIdentity` call for the provided role using the GoogleServiceAccount for this project.",
          "type": "string"
        },
        "awsAccessKey": {
          "$ref": "AwsAccessKey",
          "description": "Input only. AWS access key used to sign the API requests to the AWS S3 bucket. Permissions on the bucket must be granted to the access ID of the AWS access key. This field is required. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials)."
        },
        "path": {
          "description": "Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.",
          "type": "string"
        },
        "bucketName": {
          "type": "string",
          "description": "Required. S3 Bucket name (see [Creating a bucket](https://docs.aws.amazon.com/AmazonS3/latest/dev/create-bucket-get-location-example.html))."
        }
      },
      "type": "object"
    },
    "Empty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "id": "Empty"
    },
    "Status": {
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "type": "array"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status"
    },
    "AgentPool": {
      "description": "Represents an On-Premises Agent pool.",
      "properties": {
        "bandwidthLimit": {
          "description": "Specifies the bandwidth limit details. If this field is unspecified, the default value is set as 'No Limit'.",
          "$ref": "BandwidthLimit"
        },
        "name": {
          "type": "string",
          "description": "Required. Specifies a unique string that identifies the agent pool. Format: projects/{project_id}/agentPools/{agent_pool_id}"
        },
        "displayName": {
          "type": "string",
          "description": "Specifies the client-specified AgentPool description."
        },
        "state": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "This is an initialization state. During this stage, the resources such as Pub/Sub topics are allocated for the AgentPool.",
            "Determines that the AgentPool is created for use. At this state, Agents can join the AgentPool and participate in the transfer jobs in that pool.",
            "Determines that the AgentPool deletion has been initiated, and all the resources are scheduled to be cleaned up and freed."
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. Specifies the state of the AgentPool.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "DELETING"
          ]
        }
      },
      "id": "AgentPool",
      "type": "object"
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "The response message for Operations.ListOperations."
    },
    "NotificationConfig": {
      "description": "Specification to configure notifications published to Pub/Sub. Notifications are published to the customer-provided topic using the following `PubsubMessage.attributes`: * `\"eventType\"`: one of the EventType values * `\"payloadFormat\"`: one of the PayloadFormat values * `\"projectId\"`: the project_id of the `TransferOperation` * `\"transferJobName\"`: the transfer_job_name of the `TransferOperation` * `\"transferOperationName\"`: the name of the `TransferOperation` The `PubsubMessage.data` contains a TransferOperation resource formatted according to the specified `PayloadFormat`.",
      "properties": {
        "pubsubTopic": {
          "description": "Required. The `Topic.name` of the Pub/Sub topic to which to publish notifications. Must be of the format: `projects/{project}/topics/{topic}`. Not matching this format results in an INVALID_ARGUMENT error.",
          "type": "string"
        },
        "payloadFormat": {
          "type": "string",
          "description": "Required. The desired format of the notification message payloads.",
          "enum": [
            "PAYLOAD_FORMAT_UNSPECIFIED",
            "NONE",
            "JSON"
          ],
          "enumDescriptions": [
            "Illegal value, to avoid allowing a default.",
            "No payload is included with the notification.",
            "`TransferOperation` is [formatted as a JSON response](https://developers.google.com/protocol-buffers/docs/proto3#json), in application/json."
          ]
        },
        "eventTypes": {
          "description": "Event types for which a notification is desired. If empty, send notifications for all event types.",
          "items": {
            "enum": [
              "EVENT_TYPE_UNSPECIFIED",
              "TRANSFER_OPERATION_SUCCESS",
              "TRANSFER_OPERATION_FAILED",
              "TRANSFER_OPERATION_ABORTED"
            ],
            "enumDescriptions": [
              "Illegal value, to avoid allowing a default.",
              "`TransferOperation` completed with status SUCCESS.",
              "`TransferOperation` completed with status FAILED.",
              "`TransferOperation` completed with status ABORTED."
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "NotificationConfig"
    },
    "ResumeTransferOperationRequest": {
      "properties": {},
      "type": "object",
      "id": "ResumeTransferOperationRequest",
      "description": "Request passed to ResumeTransferOperation."
    },
    "ErrorSummary": {
      "description": "A summary of errors by error code, plus a count and sample error log entries.",
      "type": "object",
      "id": "ErrorSummary",
      "properties": {
        "errorCode": {
          "description": "Required.",
          "enumDescriptions": [
            "Not an error; returned on success HTTP Mapping: 200 OK",
            "The operation was cancelled, typically by the caller. HTTP Mapping: 499 Client Closed Request",
            "Unknown error. For example, this error may be returned when a `Status` value received from another address space belongs to an error space that is not known in this address space. Also errors raised by APIs that do not return enough error information may be converted to this error. HTTP Mapping: 500 Internal Server Error",
            "The client specified an invalid argument. Note that this differs from `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments that are problematic regardless of the state of the system (e.g., a malformed file name). HTTP Mapping: 400 Bad Request",
            "The deadline expired before the operation could complete. For operations that change the state of the system, this error may be returned even if the operation has completed successfully. For example, a successful response from a server could have been delayed long enough for the deadline to expire. HTTP Mapping: 504 Gateway Timeout",
            "Some requested entity (e.g., file or directory) was not found. Note to server developers: if a request is denied for an entire class of users, such as gradual feature rollout or undocumented allowlist, `NOT_FOUND` may be used. If a request is denied for some users within a class of users, such as user-based access control, `PERMISSION_DENIED` must be used. HTTP Mapping: 404 Not Found",
            "The entity that a client attempted to create (e.g., file or directory) already exists. HTTP Mapping: 409 Conflict",
            "The caller does not have permission to execute the specified operation. `PERMISSION_DENIED` must not be used for rejections caused by exhausting some resource (use `RESOURCE_EXHAUSTED` instead for those errors). `PERMISSION_DENIED` must not be used if the caller can not be identified (use `UNAUTHENTICATED` instead for those errors). This error code does not imply the request is valid or the requested entity exists or satisfies other pre-conditions. HTTP Mapping: 403 Forbidden",
            "The request does not have valid authentication credentials for the operation. HTTP Mapping: 401 Unauthorized",
            "Some resource has been exhausted, perhaps a per-user quota, or perhaps the entire file system is out of space. HTTP Mapping: 429 Too Many Requests",
            "The operation was rejected because the system is not in a state required for the operation's execution. For example, the directory to be deleted is non-empty, an rmdir operation is applied to a non-directory, etc. Service implementors can use the following guidelines to decide between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`: (a) Use `UNAVAILABLE` if the client can retry just the failing call. (b) Use `ABORTED` if the client should retry at a higher level. For example, when a client-specified test-and-set fails, indicating the client should restart a read-modify-write sequence. (c) Use `FAILED_PRECONDITION` if the client should not retry until the system state has been explicitly fixed. For example, if an \"rmdir\" fails because the directory is non-empty, `FAILED_PRECONDITION` should be returned since the client should not retry unless the files are deleted from the directory. HTTP Mapping: 400 Bad Request",
            "The operation was aborted, typically due to a concurrency issue such as a sequencer check failure or transaction abort. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 409 Conflict",
            "The operation was attempted past the valid range. E.g., seeking or reading past end-of-file. Unlike `INVALID_ARGUMENT`, this error indicates a problem that may be fixed if the system state changes. For example, a 32-bit file system will generate `INVALID_ARGUMENT` if asked to read at an offset that is not in the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked to read from an offset past the current file size. There is a fair bit of overlap between `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend using `OUT_OF_RANGE` (the more specific error) when it applies so that callers who are iterating through a space can easily look for an `OUT_OF_RANGE` error to detect when they are done. HTTP Mapping: 400 Bad Request",
            "The operation is not implemented or is not supported/enabled in this service. HTTP Mapping: 501 Not Implemented",
            "Internal errors. This means that some invariants expected by the underlying system have been broken. This error code is reserved for serious errors. HTTP Mapping: 500 Internal Server Error",
            "The service is currently unavailable. This is most likely a transient condition, which can be corrected by retrying with a backoff. Note that it is not always safe to retry non-idempotent operations. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 503 Service Unavailable",
            "Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal Server Error"
          ],
          "type": "string",
          "enum": [
            "OK",
            "CANCELLED",
            "UNKNOWN",
            "INVALID_ARGUMENT",
            "DEADLINE_EXCEEDED",
            "NOT_FOUND",
            "ALREADY_EXISTS",
            "PERMISSION_DENIED",
            "UNAUTHENTICATED",
            "RESOURCE_EXHAUSTED",
            "FAILED_PRECONDITION",
            "ABORTED",
            "OUT_OF_RANGE",
            "UNIMPLEMENTED",
            "INTERNAL",
            "UNAVAILABLE",
            "DATA_LOSS"
          ]
        },
        "errorCount": {
          "description": "Required. Count of this type of error.",
          "format": "int64",
          "type": "string"
        },
        "errorLogEntries": {
          "type": "array",
          "description": "Error samples. At most 5 error log entries are recorded for a given error code for a single transfer operation.",
          "items": {
            "$ref": "ErrorLogEntry"
          }
        }
      }
    },
    "Date": {
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
      "type": "object",
      "properties": {
        "month": {
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer"
        },
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "format": "int32",
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer"
        }
      },
      "id": "Date"
    },
    "LoggingConfig": {
      "id": "LoggingConfig",
      "properties": {
        "enableOnpremGcsTransferLogs": {
          "description": "Enables the Cloud Storage transfer logs for this transfer. This is only supported for transfer jobs with PosixFilesystem sources. The default is that logs are not generated for this transfer.",
          "type": "boolean"
        }
      },
      "description": "Logging configuration.",
      "type": "object"
    },
    "Schedule": {
      "id": "Schedule",
      "description": "Transfers can be scheduled to recur or to run just once.",
      "properties": {
        "startTimeOfDay": {
          "description": "The time in UTC that a transfer job is scheduled to run. Transfers may start later than this time. If `start_time_of_day` is not specified: * One-time transfers run immediately. * Recurring transfers run immediately, and each day at midnight UTC, through schedule_end_date. If `start_time_of_day` is specified: * One-time transfers run at the specified time. * Recurring transfers run at the specified time each day, through `schedule_end_date`.",
          "$ref": "TimeOfDay"
        },
        "scheduleEndDate": {
          "$ref": "Date",
          "description": "The last day a transfer runs. Date boundaries are determined relative to UTC time. A job runs once per 24 hours within the following guidelines: * If `schedule_end_date` and schedule_start_date are the same and in the future relative to UTC, the transfer is executed only one time. * If `schedule_end_date` is later than `schedule_start_date` and `schedule_end_date` is in the future relative to UTC, the job runs each day at start_time_of_day through `schedule_end_date`."
        },
        "scheduleStartDate": {
          "description": "Required. The start date of a transfer. Date boundaries are determined relative to UTC time. If `schedule_start_date` and start_time_of_day are in the past relative to the job's creation time, the transfer starts the day after you schedule the transfer request. **Note:** When starting jobs at or near midnight UTC it is possible that a job starts later than expected. For example, if you send an outbound request on June 1 one millisecond prior to midnight UTC and the Storage Transfer Service server receives the request on June 2, then it creates a TransferJob with `schedule_start_date` set to June 2 and a `start_time_of_day` set to midnight UTC. The first scheduled TransferOperation takes place on June 3 at midnight UTC.",
          "$ref": "Date"
        },
        "repeatInterval": {
          "type": "string",
          "description": "Interval between the start of each scheduled TransferOperation. If unspecified, the default value is 24 hours. This value may not be less than 1 hour.",
          "format": "google-duration"
        },
        "endTimeOfDay": {
          "$ref": "TimeOfDay",
          "description": "The time in UTC that no further transfer operations are scheduled. Combined with schedule_end_date, `end_time_of_day` specifies the end date and time for starting new transfer operations. This field must be greater than or equal to the timestamp corresponding to the combintation of schedule_start_date and start_time_of_day, and is subject to the following: * If `end_time_of_day` is not set and `schedule_end_date` is set, then a default value of `23:59:59` is used for `end_time_of_day`. * If `end_time_of_day` is set and `schedule_end_date` is not set, then INVALID_ARGUMENT is returned."
        }
      },
      "type": "object"
    }
  },
  "description": "Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets.",
  "resources": {
    "googleServiceAccounts": {
      "methods": {
        "get": {
          "parameters": {
            "projectId": {
              "type": "string",
              "description": "Required. The ID of the Google Cloud Platform Console project that the Google service account is associated with.",
              "required": true,
              "location": "path"
            }
          },
          "id": "storagetransfer.googleServiceAccounts.get",
          "httpMethod": "GET",
          "description": "Returns the Google service account that is used by Storage Transfer Service to access buckets in the project where transfers run or in other projects. Each Google service account is associated with one Google Cloud Platform Console project. Users should add this service account to the Google Cloud Storage bucket ACLs to grant access to Storage Transfer Service. This service account is created and owned by Storage Transfer Service and can only be used by Storage Transfer Service.",
          "path": "v1/googleServiceAccounts/{projectId}",
          "parameterOrder": [
            "projectId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "GoogleServiceAccount"
          },
          "flatPath": "v1/googleServiceAccounts/{projectId}"
        }
      }
    },
    "transferOperations": {
      "methods": {
        "resume": {
          "path": "v1/{+name}:resume",
          "response": {
            "$ref": "Empty"
          },
          "request": {
            "$ref": "ResumeTransferOperationRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "storagetransfer.transferOperations.resume",
          "description": "Resumes a transfer operation that is paused.",
          "httpMethod": "POST",
          "parameters": {
            "name": {
              "pattern": "^transferOperations/.*$",
              "description": "Required. The name of the transfer operation.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1/transferOperations/{transferOperationsId}:resume"
        },
        "list": {
          "parameterOrder": [
            "name",
            "filter"
          ],
          "description": "Lists transfer operations. Operations are ordered by their creation time in reverse chronological order.",
          "path": "v1/{+name}",
          "parameters": {
            "pageSize": {
              "description": "The list page size. The max allowed value is 256.",
              "location": "query",
              "format": "int32",
              "type": "integer"
            },
            "pageToken": {
              "description": "The list page token.",
              "type": "string",
              "location": "query"
            },
            "filter": {
              "required": true,
              "location": "query",
              "type": "string",
              "description": "Required. A list of query parameters specified as JSON text in the form of: `{\"projectId\":\"my_project_id\", \"jobNames\":[\"jobid1\",\"jobid2\",...], \"operationNames\":[\"opid1\",\"opid2\",...], \"transferStatuses\":[\"status1\",\"status2\",...]}` Since `jobNames`, `operationNames`, and `transferStatuses` support multiple values, they must be specified with array notation. `projectId` is required. `jobNames`, `operationNames`, and `transferStatuses` are optional. The valid values for `transferStatuses` are case-insensitive: IN_PROGRESS, PAUSED, SUCCESS, FAILED, and ABORTED."
            },
            "name": {
              "type": "string",
              "description": "Not used.",
              "required": true,
              "pattern": "^transferOperations$",
              "location": "path"
            }
          },
          "flatPath": "v1/transferOperations",
          "response": {
            "$ref": "ListOperationsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "storagetransfer.transferOperations.list",
          "httpMethod": "GET"
        },
        "pause": {
          "parameters": {
            "name": {
              "required": true,
              "description": "Required. The name of the transfer operation.",
              "pattern": "^transferOperations/.*$",
              "location": "path",
              "type": "string"
            }
          },
          "request": {
            "$ref": "PauseTransferOperationRequest"
          },
          "id": "storagetransfer.transferOperations.pause",
          "httpMethod": "POST",
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1/transferOperations/{transferOperationsId}:pause",
          "description": "Pauses a transfer operation.",
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1/{+name}:pause"
        },
        "cancel": {
          "request": {
            "$ref": "CancelOperationRequest"
          },
          "flatPath": "v1/transferOperations/{transferOperationsId}:cancel",
          "description": "Cancels a transfer. Use the transferOperations.get method to check if the cancellation succeeded or if the operation completed despite the `cancel` request. When you cancel an operation, the currently running transfer is interrupted. For recurring transfer jobs, the next instance of the transfer job will still run. For example, if your job is configured to run every day at 1pm and you cancel Monday's operation at 1:05pm, Monday's transfer will stop. However, a transfer job will still be attempted on Tuesday. This applies only to currently running operations. If an operation is not currently running, `cancel` does nothing. *Caution:* Canceling a transfer job can leave your data in an unknown state. We recommend that you restore the state at both the destination and the source after the `cancel` request completes so that your data is in a consistent state. When you cancel a job, the next job computes a delta of files and may repair any inconsistent state. For instance, if you run a job every day, and today's job found 10 new files and transferred five files before you canceled the job, tomorrow's transfer operation will compute a new delta with the five files that were not copied today plus any new files discovered tomorrow.",
          "id": "storagetransfer.transferOperations.cancel",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "Empty"
          },
          "path": "v1/{+name}:cancel",
          "httpMethod": "POST",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "type": "string",
              "description": "The name of the operation resource to be cancelled.",
              "required": true,
              "pattern": "^transferOperations/.*$",
              "location": "path"
            }
          }
        },
        "get": {
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "name": {
              "type": "string",
              "description": "The name of the operation resource.",
              "pattern": "^transferOperations/.*$",
              "required": true,
              "location": "path"
            }
          },
          "path": "v1/{+name}",
          "flatPath": "v1/transferOperations/{transferOperationsId}",
          "id": "storagetransfer.transferOperations.get",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        }
      }
    },
    "transferJobs": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "GET",
          "parameters": {
            "projectId": {
              "type": "string",
              "description": "Required. The ID of the Google Cloud Platform Console project that owns the job.",
              "required": true,
              "location": "query"
            },
            "jobName": {
              "location": "path",
              "description": "Required. The job to get.",
              "pattern": "^transferJobs/.*$",
              "required": true,
              "type": "string"
            }
          },
          "id": "storagetransfer.transferJobs.get",
          "flatPath": "v1/transferJobs/{transferJobsId}",
          "parameterOrder": [
            "jobName",
            "projectId"
          ],
          "path": "v1/{+jobName}",
          "response": {
            "$ref": "TransferJob"
          },
          "description": "Gets a transfer job."
        },
        "patch": {
          "request": {
            "$ref": "UpdateTransferJobRequest"
          },
          "response": {
            "$ref": "TransferJob"
          },
          "path": "v1/{+jobName}",
          "description": "Updates a transfer job. Updating a job's transfer spec does not affect transfer operations that are running already. **Note:** The job's status field can be modified using this RPC (for example, to set a job's status to DELETED, DISABLED, or ENABLED).",
          "flatPath": "v1/transferJobs/{transferJobsId}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "jobName"
          ],
          "httpMethod": "PATCH",
          "parameters": {
            "jobName": {
              "pattern": "^transferJobs/.*$",
              "type": "string",
              "location": "path",
              "description": "Required. The name of job to update.",
              "required": true
            }
          },
          "id": "storagetransfer.transferJobs.patch"
        },
        "list": {
          "description": "Lists transfer jobs.",
          "parameters": {
            "pageSize": {
              "description": "The list page size. The max allowed value is 256.",
              "format": "int32",
              "type": "integer",
              "location": "query"
            },
            "pageToken": {
              "description": "The list page token.",
              "type": "string",
              "location": "query"
            },
            "filter": {
              "required": true,
              "description": "Required. A list of query parameters specified as JSON text in the form of: `{\"projectId\":\"my_project_id\", \"jobNames\":[\"jobid1\",\"jobid2\",...], \"jobStatuses\":[\"status1\",\"status2\",...]}` Since `jobNames` and `jobStatuses` support multiple values, their values must be specified with array notation. `projectId` is required. `jobNames` and `jobStatuses` are optional. The valid values for `jobStatuses` are case-insensitive: ENABLED, DISABLED, and DELETED.",
              "type": "string",
              "location": "query"
            }
          },
          "id": "storagetransfer.transferJobs.list",
          "flatPath": "v1/transferJobs",
          "path": "v1/transferJobs",
          "httpMethod": "GET",
          "response": {
            "$ref": "ListTransferJobsResponse"
          },
          "parameterOrder": [
            "filter"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "run": {
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "POST",
          "description": "Attempts to start a new TransferOperation for the current TransferJob. A TransferJob has a maximum of one active TransferOperation. If this method is called while a TransferOperation is active, an error wil be returned.",
          "flatPath": "v1/transferJobs/{transferJobsId}:run",
          "path": "v1/{+jobName}:run",
          "request": {
            "$ref": "RunTransferJobRequest"
          },
          "parameterOrder": [
            "jobName"
          ],
          "id": "storagetransfer.transferJobs.run",
          "parameters": {
            "jobName": {
              "pattern": "^transferJobs/.*$",
              "required": true,
              "description": "Required. The name of the transfer job.",
              "type": "string",
              "location": "path"
            }
          }
        },
        "create": {
          "parameters": {},
          "httpMethod": "POST",
          "description": "Creates a transfer job that runs periodically.",
          "request": {
            "$ref": "TransferJob"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "storagetransfer.transferJobs.create",
          "flatPath": "v1/transferJobs",
          "response": {
            "$ref": "TransferJob"
          },
          "parameterOrder": [],
          "path": "v1/transferJobs"
        }
      }
    },
    "projects": {
      "resources": {
        "agentPools": {
          "methods": {
            "list": {
              "parameterOrder": [
                "projectId"
              ],
              "httpMethod": "GET",
              "path": "v1/projects/{+projectId}/agentPools",
              "response": {
                "$ref": "ListAgentPoolsResponse"
              },
              "id": "storagetransfer.projects.agentPools.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/agentPools",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "The list page size. The max allowed value is 256."
                },
                "pageToken": {
                  "type": "string",
                  "description": "The list page token.",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A list of optional query parameters specified as JSON text in the form of: `{\"agentPoolNames\":[\"agentpool1\",\"agentpool2\",...]}` Since `agentPoolNames` support multiple values, its values must be specified with array notation. `agentPoolNames` is an optional field. The list returns all agent pools for the project when the filter is not provided or empty."
                },
                "projectId": {
                  "required": true,
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "description": "Required. The ID of the Google Cloud Platform Console project that owns the job.",
                  "type": "string"
                }
              },
              "description": "Lists agent pools."
            },
            "delete": {
              "path": "v1/{+name}",
              "id": "storagetransfer.projects.agentPools.delete",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/agentPools/[^/]+$",
                  "description": "Required. The agent pool name to delete."
                }
              },
              "description": "Deletes an agent pool.",
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v1/projects/{projectsId}/agentPools/{agentPoolsId}"
            },
            "patch": {
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "type": "string",
                  "description": "The field mask of the fields in `agentPool` that are to be updated in this request. Fields in `agentPool` that can be updated are: display_name, bandwidth_limit,"
                },
                "name": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/agentPools/[^/]+$",
                  "required": true,
                  "description": "Required. Specifies a unique string that identifies the agent pool. Format: projects/{project_id}/agentPools/{agent_pool_id}"
                }
              },
              "request": {
                "$ref": "AgentPool"
              },
              "id": "storagetransfer.projects.agentPools.patch",
              "parameterOrder": [
                "name"
              ],
              "description": "Updates an existing agent pool resource.",
              "httpMethod": "PATCH",
              "flatPath": "v1/projects/{projectsId}/agentPools/{agentPoolsId}",
              "response": {
                "$ref": "AgentPool"
              }
            },
            "get": {
              "response": {
                "$ref": "AgentPool"
              },
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. The agent pool to get.",
                  "pattern": "^projects/[^/]+/agentPools/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "description": "Gets an agent pool.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/agentPools/{agentPoolsId}",
              "id": "storagetransfer.projects.agentPools.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "create": {
              "httpMethod": "POST",
              "parameterOrder": [
                "projectId"
              ],
              "flatPath": "v1/projects/{projectsId}/agentPools",
              "parameters": {
                "projectId": {
                  "pattern": "^[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The ID of the Google Cloud Platform Console project that owns the agent pool.",
                  "type": "string"
                },
                "agentPoolId": {
                  "description": "Required. The id of the agent pool to create. The agent_pool_id must be non-empty, less than or equal to 128 characters, and satisfy the following regex: \"^[a-z]([a-z0-9-._~]*[a-z0-9])?$\". Also, agent pool names cannot start with the string \"goog\".",
                  "location": "query",
                  "type": "string"
                }
              },
              "id": "storagetransfer.projects.agentPools.create",
              "response": {
                "$ref": "AgentPool"
              },
              "request": {
                "$ref": "AgentPool"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Creates an agent pool resource.",
              "path": "v1/projects/{+projectId}/agentPools"
            }
          }
        }
      }
    }
  },
  "basePath": ""
}

{
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "mtlsRootUrl": "https://vmmigration.mtls.googleapis.com/",
  "ownerName": "Google",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "baseUrl": "https://vmmigration.googleapis.com/",
  "title": "VM Migration API",
  "protocol": "rest",
  "description": "Use the Migrate to Virtual Machines API to programmatically migrate workloads. ",
  "version": "v1alpha1",
  "documentationLink": "https://cloud.google.com/migrate/virtual-machines",
  "version_module": true,
  "canonicalName": "VM Migration Service",
  "revision": "20240411",
  "fullyEncodeReservedExpansion": true,
  "rootUrl": "https://vmmigration.googleapis.com/",
  "name": "vmmigration",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "vmmigration.projects.locations.list",
              "path": "v1alpha1/{+name}/locations",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "vmmigration.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "vmmigration.projects.locations.operations.list",
                  "path": "v1alpha1/{+name}/operations",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`."
                },
                "get": {
                  "id": "vmmigration.projects.locations.operations.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "vmmigration.projects.locations.operations.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "vmmigration.projects.locations.operations.cancel",
                  "path": "v1alpha1/{+name}:cancel",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "sources": {
              "methods": {
                "list": {
                  "id": "vmmigration.projects.locations.sources.list",
                  "path": "v1alpha1/{+parent}/sources",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent, which owns this collection of sources.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of sources to return. The service may return fewer than this value. If unspecified, at most 500 sources will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Required. A page token, received from a previous `ListSources` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSources` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. The filter request.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. the order by fields for the result.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListSourcesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Sources in a given project and location."
                },
                "get": {
                  "id": "vmmigration.projects.locations.sources.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The Source name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Source"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single Source."
                },
                "create": {
                  "id": "vmmigration.projects.locations.sources.create",
                  "path": "v1alpha1/{+parent}/sources",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The Source's parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "sourceId": {
                      "description": "Required. The source identifier.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Source"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Source in a given project and location."
                },
                "patch": {
                  "id": "vmmigration.projects.locations.sources.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The Source name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Field mask is used to specify the fields to be overwritten in the Source resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Source"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single Source."
                },
                "delete": {
                  "id": "vmmigration.projects.locations.sources.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The Source name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Source."
                },
                "fetchInventory": {
                  "id": "vmmigration.projects.locations.sources.fetchInventory",
                  "path": "v1alpha1/{+source}:fetchInventory",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}:fetchInventory",
                  "httpMethod": "GET",
                  "parameters": {
                    "source": {
                      "description": "Required. The name of the Source.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "forceRefresh": {
                      "description": "If this flag is set to true, the source will be queried instead of using cached results. Using this flag will make the call slower.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "pageSize": {
                      "description": "The maximum number of VMs to return. The service may return fewer than this value. For AWS source: If unspecified, at most 500 VMs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. For VMWare source: If unspecified, all VMs will be returned. There is no limit for maximum value.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A page token, received from a previous `FetchInventory` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `FetchInventory` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "source"
                  ],
                  "response": {
                    "$ref": "FetchInventoryResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List remote source's inventory of VMs. The remote source is the onprem vCenter (remote in the sense it's not in Compute Engine). The inventory describes the list of existing VMs in that source. Note that this operation lists the VMs on the remote source, as opposed to listing the MigratingVms resources in the vmmigration service."
                }
              },
              "resources": {
                "utilizationReports": {
                  "methods": {
                    "list": {
                      "id": "vmmigration.projects.locations.sources.utilizationReports.list",
                      "path": "v1alpha1/{+parent}/utilizationReports",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The Utilization Reports parent.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "view": {
                          "description": "Optional. The level of details of each report. Defaults to BASIC.",
                          "location": "query",
                          "type": "string",
                          "enumDescriptions": [
                            "The default / unset value. The API will default to FULL on single report request and BASIC for multiple reports request.",
                            "Get the report metadata, without the list of VMs and their utilization info.",
                            "Include everything."
                          ],
                          "enum": [
                            "UTILIZATION_REPORT_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ]
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of reports to return. The service may return fewer than this value. If unspecified, at most 500 reports will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Required. A page token, received from a previous `ListUtilizationReports` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListUtilizationReports` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Optional. The filter request.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Optional. the order by fields for the result.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListUtilizationReportsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists Utilization Reports of the given Source."
                    },
                    "get": {
                      "id": "vmmigration.projects.locations.sources.utilizationReports.get",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports/{utilizationReportsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The Utilization Report name.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/utilizationReports/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "view": {
                          "description": "Optional. The level of details of the report. Defaults to FULL",
                          "location": "query",
                          "type": "string",
                          "enumDescriptions": [
                            "The default / unset value. The API will default to FULL on single report request and BASIC for multiple reports request.",
                            "Get the report metadata, without the list of VMs and their utilization info.",
                            "Include everything."
                          ],
                          "enum": [
                            "UTILIZATION_REPORT_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ]
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "UtilizationReport"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets a single Utilization Report."
                    },
                    "create": {
                      "id": "vmmigration.projects.locations.sources.utilizationReports.create",
                      "path": "v1alpha1/{+parent}/utilizationReports",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The Utilization Report's parent.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "utilizationReportId": {
                          "description": "Required. The ID to use for the report, which will become the final component of the reports's resource name. This value maximum length is 63 characters, and valid characters are /a-z-/. It must start with an english letter and must not end with a hyphen.",
                          "location": "query",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "UtilizationReport"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new UtilizationReport."
                    },
                    "delete": {
                      "id": "vmmigration.projects.locations.sources.utilizationReports.delete",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports/{utilizationReportsId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. The Utilization Report name.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/utilizationReports/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a single Utilization Report."
                    }
                  }
                },
                "datacenterConnectors": {
                  "methods": {
                    "list": {
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.list",
                      "path": "v1alpha1/{+parent}/datacenterConnectors",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent, which owns this collection of connectors.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of connectors to return. The service may return fewer than this value. If unspecified, at most 500 sources will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Required. A page token, received from a previous `ListDatacenterConnectors` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDatacenterConnectors` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Optional. The filter request.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Optional. the order by fields for the result.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListDatacenterConnectorsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists DatacenterConnectors in a given Source."
                    },
                    "get": {
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.get",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the DatacenterConnector.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "DatacenterConnector"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single DatacenterConnector."
                    },
                    "create": {
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.create",
                      "path": "v1alpha1/{+parent}/datacenterConnectors",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The DatacenterConnector's parent. Required. The Source in where the new DatacenterConnector will be created. For example: `projects/my-project/locations/us-central1/sources/my-source`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "datacenterConnectorId": {
                          "description": "Required. The datacenterConnector identifier.",
                          "location": "query",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "DatacenterConnector"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new DatacenterConnector in a given Source."
                    },
                    "delete": {
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.delete",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. The DatacenterConnector name.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "requestId": {
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a single DatacenterConnector."
                    },
                    "upgradeAppliance": {
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.upgradeAppliance",
                      "path": "v1alpha1/{+datacenterConnector}:upgradeAppliance",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}:upgradeAppliance",
                      "httpMethod": "POST",
                      "parameters": {
                        "datacenterConnector": {
                          "description": "Required. The DatacenterConnector name.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "datacenterConnector"
                      ],
                      "request": {
                        "$ref": "UpgradeApplianceRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Upgrades the appliance relate to this DatacenterConnector to the in-place updateable version."
                    }
                  }
                },
                "migratingVms": {
                  "methods": {
                    "create": {
                      "id": "vmmigration.projects.locations.sources.migratingVms.create",
                      "path": "v1alpha1/{+parent}/migratingVms",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The MigratingVm's parent.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "migratingVmId": {
                          "description": "Required. The migratingVm identifier.",
                          "location": "query",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "MigratingVm"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new MigratingVm in a given Source."
                    },
                    "list": {
                      "id": "vmmigration.projects.locations.sources.migratingVms.list",
                      "path": "v1alpha1/{+parent}/migratingVms",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent, which owns this collection of MigratingVms.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of migrating VMs to return. The service may return fewer than this value. If unspecified, at most 500 migrating VMs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Required. A page token, received from a previous `ListMigratingVms` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListMigratingVms` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Optional. The filter request.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Optional. the order by fields for the result.",
                          "location": "query",
                          "type": "string"
                        },
                        "view": {
                          "description": "Optional. The level of details of each migrating VM.",
                          "location": "query",
                          "type": "string",
                          "enumDescriptions": [
                            "View is unspecified. The API will fallback to the default value.",
                            "Get the migrating VM basic details. The basic details do not include the recent clone jobs and recent cutover jobs lists.",
                            "Include everything."
                          ],
                          "enum": [
                            "MIGRATING_VM_VIEW_UNSPECIFIED",
                            "MIGRATING_VM_VIEW_BASIC",
                            "MIGRATING_VM_VIEW_FULL"
                          ]
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListMigratingVmsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists MigratingVms in a given Source."
                    },
                    "get": {
                      "id": "vmmigration.projects.locations.sources.migratingVms.get",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the MigratingVm.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "view": {
                          "description": "Optional. The level of details of the migrating VM.",
                          "location": "query",
                          "type": "string",
                          "enumDescriptions": [
                            "View is unspecified. The API will fallback to the default value.",
                            "Get the migrating VM basic details. The basic details do not include the recent clone jobs and recent cutover jobs lists.",
                            "Include everything."
                          ],
                          "enum": [
                            "MIGRATING_VM_VIEW_UNSPECIFIED",
                            "MIGRATING_VM_VIEW_BASIC",
                            "MIGRATING_VM_VIEW_FULL"
                          ]
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "MigratingVm"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single MigratingVm."
                    },
                    "patch": {
                      "id": "vmmigration.projects.locations.sources.migratingVms.patch",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "description": "Output only. The identifier of the MigratingVm.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "updateMask": {
                          "description": "Field mask is used to specify the fields to be overwritten in the MigratingVm resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        },
                        "requestId": {
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "MigratingVm"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates the parameters of a single MigratingVm."
                    },
                    "delete": {
                      "id": "vmmigration.projects.locations.sources.migratingVms.delete",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the MigratingVm.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a single MigratingVm."
                    },
                    "startMigration": {
                      "id": "vmmigration.projects.locations.sources.migratingVms.startMigration",
                      "path": "v1alpha1/{+migratingVm}:startMigration",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:startMigration",
                      "httpMethod": "POST",
                      "parameters": {
                        "migratingVm": {
                          "description": "Required. The name of the MigratingVm.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "migratingVm"
                      ],
                      "request": {
                        "$ref": "StartMigrationRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Starts migration for a VM. Starts the process of uploading data and creating snapshots, in replication cycles scheduled by the policy."
                    },
                    "resumeMigration": {
                      "id": "vmmigration.projects.locations.sources.migratingVms.resumeMigration",
                      "path": "v1alpha1/{+migratingVm}:resumeMigration",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:resumeMigration",
                      "httpMethod": "POST",
                      "parameters": {
                        "migratingVm": {
                          "description": "Required. The name of the MigratingVm.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "migratingVm"
                      ],
                      "request": {
                        "$ref": "ResumeMigrationRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Resumes a migration for a VM. When called on a paused migration, will start the process of uploading data and creating snapshots; when called on a completed cut-over migration, will update the migration to active state and start the process of uploading data and creating snapshots."
                    },
                    "pauseMigration": {
                      "id": "vmmigration.projects.locations.sources.migratingVms.pauseMigration",
                      "path": "v1alpha1/{+migratingVm}:pauseMigration",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:pauseMigration",
                      "httpMethod": "POST",
                      "parameters": {
                        "migratingVm": {
                          "description": "Required. The name of the MigratingVm.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "migratingVm"
                      ],
                      "request": {
                        "$ref": "PauseMigrationRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Pauses a migration for a VM. If cycle tasks are running they will be cancelled, preserving source task data. Further replication cycles will not be triggered while the VM is paused."
                    },
                    "finalizeMigration": {
                      "id": "vmmigration.projects.locations.sources.migratingVms.finalizeMigration",
                      "path": "v1alpha1/{+migratingVm}:finalizeMigration",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:finalizeMigration",
                      "httpMethod": "POST",
                      "parameters": {
                        "migratingVm": {
                          "description": "Required. The name of the MigratingVm.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "migratingVm"
                      ],
                      "request": {
                        "$ref": "FinalizeMigrationRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Marks a migration as completed, deleting migration resources that are no longer being used. Only applicable after cutover is done."
                    }
                  },
                  "resources": {
                    "cloneJobs": {
                      "methods": {
                        "create": {
                          "id": "vmmigration.projects.locations.sources.migratingVms.cloneJobs.create",
                          "path": "v1alpha1/{+parent}/cloneJobs",
                          "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs",
                          "httpMethod": "POST",
                          "parameters": {
                            "parent": {
                              "description": "Required. The Clone's parent.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "cloneJobId": {
                              "description": "Required. The clone job identifier.",
                              "location": "query",
                              "type": "string"
                            },
                            "requestId": {
                              "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "request": {
                            "$ref": "CloneJob"
                          },
                          "response": {
                            "$ref": "Operation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Initiates a Clone of a specific migrating VM."
                        },
                        "cancel": {
                          "id": "vmmigration.projects.locations.sources.migratingVms.cloneJobs.cancel",
                          "path": "v1alpha1/{+name}:cancel",
                          "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs/{cloneJobsId}:cancel",
                          "httpMethod": "POST",
                          "parameters": {
                            "name": {
                              "description": "Required. The clone job id",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cloneJobs/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "CancelCloneJobRequest"
                          },
                          "response": {
                            "$ref": "Operation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Initiates the cancellation of a running clone job."
                        },
                        "list": {
                          "id": "vmmigration.projects.locations.sources.migratingVms.cloneJobs.list",
                          "path": "v1alpha1/{+parent}/cloneJobs",
                          "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "Required. The parent, which owns this collection of source VMs.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "Optional. The maximum number of clone jobs to return. The service may return fewer than this value. If unspecified, at most 500 clone jobs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "Required. A page token, received from a previous `ListCloneJobs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListCloneJobs` must match the call that provided the page token.",
                              "location": "query",
                              "type": "string"
                            },
                            "filter": {
                              "description": "Optional. The filter request.",
                              "location": "query",
                              "type": "string"
                            },
                            "orderBy": {
                              "description": "Optional. the order by fields for the result.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListCloneJobsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Lists the CloneJobs of a migrating VM. Only 25 most recent CloneJobs are listed."
                        },
                        "get": {
                          "id": "vmmigration.projects.locations.sources.migratingVms.cloneJobs.get",
                          "path": "v1alpha1/{+name}",
                          "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs/{cloneJobsId}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the CloneJob.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cloneJobs/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "CloneJob"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets details of a single CloneJob."
                        }
                      }
                    },
                    "cutoverJobs": {
                      "methods": {
                        "create": {
                          "id": "vmmigration.projects.locations.sources.migratingVms.cutoverJobs.create",
                          "path": "v1alpha1/{+parent}/cutoverJobs",
                          "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs",
                          "httpMethod": "POST",
                          "parameters": {
                            "parent": {
                              "description": "Required. The Cutover's parent.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "cutoverJobId": {
                              "description": "Required. The cutover job identifier.",
                              "location": "query",
                              "type": "string"
                            },
                            "requestId": {
                              "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "request": {
                            "$ref": "CutoverJob"
                          },
                          "response": {
                            "$ref": "Operation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Initiates a Cutover of a specific migrating VM. The returned LRO is completed when the cutover job resource is created and the job is initiated."
                        },
                        "cancel": {
                          "id": "vmmigration.projects.locations.sources.migratingVms.cutoverJobs.cancel",
                          "path": "v1alpha1/{+name}:cancel",
                          "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs/{cutoverJobsId}:cancel",
                          "httpMethod": "POST",
                          "parameters": {
                            "name": {
                              "description": "Required. The cutover job id",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cutoverJobs/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "CancelCutoverJobRequest"
                          },
                          "response": {
                            "$ref": "Operation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Initiates the cancellation of a running cutover job."
                        },
                        "list": {
                          "id": "vmmigration.projects.locations.sources.migratingVms.cutoverJobs.list",
                          "path": "v1alpha1/{+parent}/cutoverJobs",
                          "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "Required. The parent, which owns this collection of migrating VMs.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "Optional. The maximum number of cutover jobs to return. The service may return fewer than this value. If unspecified, at most 500 cutover jobs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "Required. A page token, received from a previous `ListCutoverJobs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListCutoverJobs` must match the call that provided the page token.",
                              "location": "query",
                              "type": "string"
                            },
                            "filter": {
                              "description": "Optional. The filter request.",
                              "location": "query",
                              "type": "string"
                            },
                            "orderBy": {
                              "description": "Optional. the order by fields for the result.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListCutoverJobsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Lists the CutoverJobs of a migrating VM. Only 25 most recent CutoverJobs are listed."
                        },
                        "get": {
                          "id": "vmmigration.projects.locations.sources.migratingVms.cutoverJobs.get",
                          "path": "v1alpha1/{+name}",
                          "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs/{cutoverJobsId}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the CutoverJob.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cutoverJobs/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "CutoverJob"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets details of a single CutoverJob."
                        }
                      }
                    },
                    "replicationCycles": {
                      "methods": {
                        "list": {
                          "id": "vmmigration.projects.locations.sources.migratingVms.replicationCycles.list",
                          "path": "v1alpha1/{+parent}/replicationCycles",
                          "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/replicationCycles",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "Required. The parent, which owns this collection of ReplicationCycles.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "Optional. The maximum number of replication cycles to return. The service may return fewer than this value. If unspecified, at most 100 migrating VMs will be returned. The maximum value is 100; values above 100 will be coerced to 100.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "Required. A page token, received from a previous `ListReplicationCycles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListReplicationCycles` must match the call that provided the page token.",
                              "location": "query",
                              "type": "string"
                            },
                            "filter": {
                              "description": "Optional. The filter request.",
                              "location": "query",
                              "type": "string"
                            },
                            "orderBy": {
                              "description": "Optional. the order by fields for the result.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListReplicationCyclesResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Lists ReplicationCycles in a given MigratingVM."
                        },
                        "get": {
                          "id": "vmmigration.projects.locations.sources.migratingVms.replicationCycles.get",
                          "path": "v1alpha1/{+name}",
                          "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/replicationCycles/{replicationCyclesId}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the ReplicationCycle.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/replicationCycles/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "ReplicationCycle"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets details of a single ReplicationCycle."
                        }
                      }
                    }
                  }
                }
              }
            },
            "groups": {
              "methods": {
                "list": {
                  "id": "vmmigration.projects.locations.groups.list",
                  "path": "v1alpha1/{+parent}/groups",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent, which owns this collection of groups.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of groups to return. The service may return fewer than this value. If unspecified, at most 500 groups will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Required. A page token, received from a previous `ListGroups` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListGroups` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. The filter request.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. the order by fields for the result.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListGroupsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Groups in a given project and location."
                },
                "get": {
                  "id": "vmmigration.projects.locations.groups.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The group name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Group"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single Group."
                },
                "create": {
                  "id": "vmmigration.projects.locations.groups.create",
                  "path": "v1alpha1/{+parent}/groups",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The Group's parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Required. The group identifier.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Group"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Group in a given project and location."
                },
                "patch": {
                  "id": "vmmigration.projects.locations.groups.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The Group name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Field mask is used to specify the fields to be overwritten in the Group resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Group"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single Group."
                },
                "delete": {
                  "id": "vmmigration.projects.locations.groups.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The Group name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Group."
                },
                "addGroupMigration": {
                  "id": "vmmigration.projects.locations.groups.addGroupMigration",
                  "path": "v1alpha1/{+group}:addGroupMigration",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addGroupMigration",
                  "httpMethod": "POST",
                  "parameters": {
                    "group": {
                      "description": "Required. The full path name of the Group to add to.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "group"
                  ],
                  "request": {
                    "$ref": "AddGroupMigrationRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Adds a MigratingVm to a Group."
                },
                "removeGroupMigration": {
                  "id": "vmmigration.projects.locations.groups.removeGroupMigration",
                  "path": "v1alpha1/{+group}:removeGroupMigration",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeGroupMigration",
                  "httpMethod": "POST",
                  "parameters": {
                    "group": {
                      "description": "Required. The name of the Group.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "group"
                  ],
                  "request": {
                    "$ref": "RemoveGroupMigrationRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Removes a MigratingVm from a Group."
                }
              }
            },
            "targetProjects": {
              "methods": {
                "list": {
                  "id": "vmmigration.projects.locations.targetProjects.list",
                  "path": "v1alpha1/{+parent}/targetProjects",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/targetProjects",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent, which owns this collection of targets.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of targets to return. The service may return fewer than this value. If unspecified, at most 500 targets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Required. A page token, received from a previous `ListTargets` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTargets` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. The filter request.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. the order by fields for the result.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListTargetProjectsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists TargetProjects in a given project. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`."
                },
                "get": {
                  "id": "vmmigration.projects.locations.targetProjects.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/targetProjects/{targetProjectsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The TargetProject name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "TargetProject"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`."
                },
                "create": {
                  "id": "vmmigration.projects.locations.targetProjects.create",
                  "path": "v1alpha1/{+parent}/targetProjects",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/targetProjects",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The TargetProject's parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "targetProjectId": {
                      "description": "Required. The target_project identifier.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "TargetProject"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new TargetProject in a given project. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`."
                },
                "patch": {
                  "id": "vmmigration.projects.locations.targetProjects.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/targetProjects/{targetProjectsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The name of the target project.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Field mask is used to specify the fields to be overwritten in the TargetProject resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "TargetProject"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`."
                },
                "delete": {
                  "id": "vmmigration.projects.locations.targetProjects.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/targetProjects/{targetProjectsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The TargetProject name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`."
                }
              }
            },
            "imageImports": {
              "methods": {
                "list": {
                  "id": "vmmigration.projects.locations.imageImports.list",
                  "path": "v1alpha1/{+parent}/imageImports",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/imageImports",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent, which owns this collection of targets.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of targets to return. The service may return fewer than this value. If unspecified, at most 500 targets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. A page token, received from a previous `ListImageImports` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListImageImports` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. The filter request (according to https://google.aip.dev/160).",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. The order by fields for the result (according to https://google.aip.dev/132#ordering). Currently ordering is only possible by \"name\" field.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListImageImportsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists ImageImports in a given project."
                },
                "get": {
                  "id": "vmmigration.projects.locations.imageImports.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/imageImports/{imageImportsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The ImageImport name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/imageImports/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ImageImport"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single ImageImport."
                },
                "create": {
                  "id": "vmmigration.projects.locations.imageImports.create",
                  "path": "v1alpha1/{+parent}/imageImports",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/imageImports",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The ImageImport's parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "imageImportId": {
                      "description": "Required. The image import identifier. This value maximum length is 63 characters, and valid characters are /a-z-/. It must start with an english letter and must not end with a hyphen.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ImageImport"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new ImageImport in a given project."
                },
                "delete": {
                  "id": "vmmigration.projects.locations.imageImports.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/imageImports/{imageImportsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The ImageImport name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/imageImports/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single ImageImport."
                }
              },
              "resources": {
                "imageImportJobs": {
                  "methods": {
                    "list": {
                      "id": "vmmigration.projects.locations.imageImports.imageImportJobs.list",
                      "path": "v1alpha1/{+parent}/imageImportJobs",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/imageImports/{imageImportsId}/imageImportJobs",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent, which owns this collection of targets.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/imageImports/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of targets to return. The service may return fewer than this value. If unspecified, at most 500 targets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Optional. A page token, received from a previous `ListImageImportJobs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListImageImportJobs` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Optional. The filter request (according to https://google.aip.dev/160).",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Optional. The order by fields for the result (according to https://google.aip.dev/132#ordering). Currently ordering is only possible by \"name\" field.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListImageImportJobsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists ImageImportJobs in a given project."
                    },
                    "get": {
                      "id": "vmmigration.projects.locations.imageImports.imageImportJobs.get",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/imageImports/{imageImportsId}/imageImportJobs/{imageImportJobsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The ImageImportJob name.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/imageImports/[^/]+/imageImportJobs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "ImageImportJob"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single ImageImportJob."
                    },
                    "cancel": {
                      "id": "vmmigration.projects.locations.imageImports.imageImportJobs.cancel",
                      "path": "v1alpha1/{+name}:cancel",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/imageImports/{imageImportsId}/imageImportJobs/{imageImportJobsId}:cancel",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "Required. The image import job id.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/imageImports/[^/]+/imageImportJobs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "CancelImageImportJobRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Initiates the cancellation of a running clone job."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {}
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {}
    },
    "ListSourcesResponse": {
      "id": "ListSourcesResponse",
      "description": "Response message for 'ListSources' request.",
      "type": "object",
      "properties": {
        "sources": {
          "description": "Output only. The list of sources response.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Source"
          }
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true,
          "type": "string"
        },
        "unreachable": {
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Source": {
      "id": "Source",
      "description": "Source message describes a specific vm migration Source resource. It contains the source environment information.",
      "type": "object",
      "properties": {
        "vmware": {
          "description": "Vmware type source details.",
          "$ref": "VmwareSourceDetails"
        },
        "aws": {
          "description": "AWS type source details.",
          "$ref": "AwsSourceDetails"
        },
        "azure": {
          "description": "Azure type source details.",
          "$ref": "AzureSourceDetails"
        },
        "name": {
          "description": "Output only. The Source name.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The create time timestamp.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The update time timestamp.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "The labels of the source.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "User-provided description of the source.",
          "type": "string"
        },
        "encryption": {
          "description": "Optional. Immutable. The encryption details of the source data stored by the service.",
          "$ref": "Encryption"
        },
        "error": {
          "description": "Output only. Provides details on the state of the Source in case of an error.",
          "readOnly": true,
          "deprecated": true,
          "$ref": "Status"
        }
      }
    },
    "VmwareSourceDetails": {
      "id": "VmwareSourceDetails",
      "description": "VmwareSourceDetails message describes a specific source details for the vmware source type.",
      "type": "object",
      "properties": {
        "username": {
          "description": "The credentials username.",
          "type": "string"
        },
        "password": {
          "description": "Input only. The credentials password. This is write only and can not be read in a GET operation.",
          "type": "string"
        },
        "vcenterIp": {
          "description": "The ip address of the vcenter this Source represents.",
          "type": "string"
        },
        "thumbprint": {
          "description": "The thumbprint representing the certificate for the vcenter.",
          "type": "string"
        },
        "resolvedVcenterHost": {
          "description": "The hostname of the vcenter.",
          "type": "string"
        }
      }
    },
    "AwsSourceDetails": {
      "id": "AwsSourceDetails",
      "description": "AwsSourceDetails message describes a specific source details for the AWS source type.",
      "type": "object",
      "properties": {
        "accessKeyCreds": {
          "description": "AWS Credentials using access key id and secret.",
          "$ref": "AccessKeyCredentials"
        },
        "awsRegion": {
          "description": "Immutable. The AWS region that the source VMs will be migrated from.",
          "type": "string"
        },
        "state": {
          "description": "Output only. State of the source as determined by the health check.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The state was not sampled by the health checks yet.",
            "The source is available but might not be usable yet due to invalid credentials or another reason. The error message will contain further details.",
            "The source exists and its credentials were verified."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "FAILED",
            "ACTIVE"
          ]
        },
        "error": {
          "description": "Output only. Provides details on the state of the Source in case of an error.",
          "readOnly": true,
          "$ref": "Status"
        },
        "inventoryTagList": {
          "description": "AWS resource tags to limit the scope of the source inventory.",
          "type": "array",
          "items": {
            "$ref": "Tag"
          }
        },
        "inventorySecurityGroupNames": {
          "description": "AWS security group names to limit the scope of the source inventory.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "migrationResourcesUserTags": {
          "description": "User specified tags to add to every M2VM generated resource in AWS. These tags will be set in addition to the default tags that are set as part of the migration process. The tags must not begin with the reserved prefix `m2vm`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "publicIp": {
          "description": "Output only. The source's public IP. All communication initiated by this source will originate from this IP.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "AccessKeyCredentials": {
      "id": "AccessKeyCredentials",
      "description": "Message describing AWS Credentials using access key id and secret.",
      "type": "object",
      "properties": {
        "accessKeyId": {
          "description": "AWS access key ID.",
          "type": "string"
        },
        "secretAccessKey": {
          "description": "Input only. AWS secret access key.",
          "type": "string"
        },
        "sessionToken": {
          "description": "Input only. AWS session token. Used only when AWS security token service (STS) is responsible for creating the temporary credentials.",
          "type": "string"
        }
      }
    },
    "Tag": {
      "id": "Tag",
      "description": "Tag is an AWS tag representation.",
      "type": "object",
      "properties": {
        "key": {
          "description": "Key of tag.",
          "type": "string"
        },
        "value": {
          "description": "Value of tag.",
          "type": "string"
        }
      }
    },
    "AzureSourceDetails": {
      "id": "AzureSourceDetails",
      "description": "AzureSourceDetails message describes a specific source details for the Azure source type.",
      "type": "object",
      "properties": {
        "clientSecretCreds": {
          "description": "Azure Credentials using tenant ID, client ID and secret.",
          "$ref": "ClientSecretCredentials"
        },
        "subscriptionId": {
          "description": "Immutable. Azure subscription ID.",
          "type": "string"
        },
        "azureLocation": {
          "description": "Immutable. The Azure location (region) that the source VMs will be migrated from.",
          "type": "string"
        },
        "state": {
          "description": "Output only. State of the source as determined by the health check.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The state was not sampled by the health checks yet.",
            "The source is available but might not be usable yet due to invalid credentials or another reason. The error message will contain further details.",
            "The source exists and its credentials were verified."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "FAILED",
            "ACTIVE"
          ]
        },
        "error": {
          "description": "Output only. Provides details on the state of the Source in case of an error.",
          "readOnly": true,
          "$ref": "Status"
        },
        "migrationResourcesUserTags": {
          "description": "User specified tags to add to every M2VM generated resource in Azure. These tags will be set in addition to the default tags that are set as part of the migration process. The tags must not begin with the reserved prefix `m4ce` or `m2vm`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceGroupId": {
          "description": "Output only. The ID of the Azure resource group that contains all resources related to the migration process of this source.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ClientSecretCredentials": {
      "id": "ClientSecretCredentials",
      "description": "Message describing Azure Credentials using tenant ID, client ID and secret.",
      "type": "object",
      "properties": {
        "tenantId": {
          "description": "Azure tenant ID.",
          "type": "string"
        },
        "clientId": {
          "description": "Azure client ID.",
          "type": "string"
        },
        "clientSecret": {
          "description": "Input only. Azure client secret.",
          "type": "string"
        }
      }
    },
    "Encryption": {
      "id": "Encryption",
      "description": "Encryption message describes the details of the applied encryption.",
      "type": "object",
      "properties": {
        "kmsKey": {
          "description": "Required. The name of the encryption key that is stored in Google Cloud KMS.",
          "type": "string"
        }
      }
    },
    "FetchInventoryResponse": {
      "id": "FetchInventoryResponse",
      "description": "Response message for fetchInventory.",
      "type": "object",
      "properties": {
        "vmwareVms": {
          "description": "The description of the VMs in a Source of type Vmware.",
          "$ref": "VmwareVmsDetails"
        },
        "awsVms": {
          "description": "The description of the VMs in a Source of type AWS.",
          "$ref": "AwsVmsDetails"
        },
        "azureVms": {
          "description": "The description of the VMs in a Source of type Azure.",
          "$ref": "AzureVmsDetails"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the source was last queried (if the result is from the cache).",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "VmwareVmsDetails": {
      "id": "VmwareVmsDetails",
      "description": "VmwareVmsDetails describes VMs in vCenter.",
      "type": "object",
      "properties": {
        "details": {
          "description": "The details of the vmware VMs.",
          "type": "array",
          "items": {
            "$ref": "VmwareVmDetails"
          }
        }
      }
    },
    "VmwareVmDetails": {
      "id": "VmwareVmDetails",
      "description": "VmwareVmDetails describes a VM in vCenter.",
      "type": "object",
      "properties": {
        "vmId": {
          "description": "The VM's id in the source (note that this is not the MigratingVm's id). This is the moref id of the VM.",
          "type": "string"
        },
        "datacenterId": {
          "description": "The id of the vCenter's datacenter this VM is contained in.",
          "type": "string"
        },
        "datacenterDescription": {
          "description": "The descriptive name of the vCenter's datacenter this VM is contained in.",
          "type": "string"
        },
        "uuid": {
          "description": "The unique identifier of the VM in vCenter.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the VM. Note that this is not necessarily unique.",
          "type": "string"
        },
        "powerState": {
          "description": "The power state of the VM at the moment list was taken.",
          "type": "string",
          "enumDescriptions": [
            "Power state is not specified.",
            "The VM is turned ON.",
            "The VM is turned OFF.",
            "The VM is suspended. This is similar to hibernation or sleep mode."
          ],
          "enum": [
            "POWER_STATE_UNSPECIFIED",
            "ON",
            "OFF",
            "SUSPENDED"
          ]
        },
        "cpuCount": {
          "description": "The number of cpus in the VM.",
          "type": "integer",
          "format": "int32"
        },
        "memoryMb": {
          "description": "The size of the memory of the VM in MB.",
          "type": "integer",
          "format": "int32"
        },
        "diskCount": {
          "description": "The number of disks the VM has.",
          "type": "integer",
          "format": "int32"
        },
        "committedStorage": {
          "description": "The total size of the storage allocated to the VM in MB.",
          "deprecated": true,
          "type": "string",
          "format": "int64"
        },
        "committedStorageMb": {
          "description": "The total size of the storage allocated to the VM in MB.",
          "type": "string",
          "format": "int64"
        },
        "guestDescription": {
          "description": "The VM's OS. See for example https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html for types of strings this might hold.",
          "type": "string"
        },
        "bootOption": {
          "description": "Output only. The VM Boot Option.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is EFI.",
            "The boot option is BIOS."
          ],
          "enum": [
            "BOOT_OPTION_UNSPECIFIED",
            "EFI",
            "BIOS"
          ]
        }
      }
    },
    "AwsVmsDetails": {
      "id": "AwsVmsDetails",
      "description": "AWSVmsDetails describes VMs in AWS.",
      "type": "object",
      "properties": {
        "details": {
          "description": "The details of the AWS VMs.",
          "type": "array",
          "items": {
            "$ref": "AwsVmDetails"
          }
        }
      }
    },
    "AwsVmDetails": {
      "id": "AwsVmDetails",
      "description": "AwsVmDetails describes a VM in AWS.",
      "type": "object",
      "properties": {
        "vmId": {
          "description": "The VM ID in AWS.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the VM. Note that this value is not necessarily unique.",
          "type": "string"
        },
        "sourceId": {
          "description": "The id of the AWS's source this VM is connected to.",
          "type": "string"
        },
        "sourceDescription": {
          "description": "The descriptive name of the AWS's source this VM is connected to.",
          "type": "string"
        },
        "powerState": {
          "description": "Output only. The power state of the VM at the moment list was taken.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Power state is not specified.",
            "The VM is turned on.",
            "The VM is turned off.",
            "The VM is suspended. This is similar to hibernation or sleep mode.",
            "The VM is starting."
          ],
          "enum": [
            "POWER_STATE_UNSPECIFIED",
            "ON",
            "OFF",
            "SUSPENDED",
            "PENDING"
          ]
        },
        "cpuCount": {
          "description": "The number of cpus the VM has.",
          "type": "integer",
          "format": "int32"
        },
        "memoryMb": {
          "description": "The memory size of the VM in MB.",
          "type": "integer",
          "format": "int32"
        },
        "diskCount": {
          "description": "The number of disks the VM has.",
          "type": "integer",
          "format": "int32"
        },
        "committedStorageMb": {
          "description": "The total size of the storage allocated to the VM in MB.",
          "type": "string",
          "format": "int64"
        },
        "osDescription": {
          "description": "The VM's OS.",
          "type": "string"
        },
        "bootOption": {
          "description": "The VM Boot Option.",
          "type": "string",
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is UEFI.",
            "The boot option is LEGACY-BIOS."
          ],
          "enum": [
            "BOOT_OPTION_UNSPECIFIED",
            "EFI",
            "BIOS"
          ]
        },
        "instanceType": {
          "description": "The instance type of the VM.",
          "type": "string"
        },
        "vpcId": {
          "description": "The VPC ID the VM belongs to.",
          "type": "string"
        },
        "securityGroups": {
          "description": "The security groups the VM belongs to.",
          "type": "array",
          "items": {
            "$ref": "AwsSecurityGroup"
          }
        },
        "tags": {
          "description": "The tags of the VM.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "zone": {
          "description": "The AWS zone of the VM.",
          "type": "string"
        },
        "virtualizationType": {
          "description": "The virtualization type.",
          "type": "string",
          "enumDescriptions": [
            "The virtualization type is unknown.",
            "The virtualziation type is HVM.",
            "The virtualziation type is PARAVIRTUAL."
          ],
          "enum": [
            "VM_VIRTUALIZATION_TYPE_UNSPECIFIED",
            "HVM",
            "PARAVIRTUAL"
          ]
        },
        "architecture": {
          "description": "The CPU architecture.",
          "type": "string",
          "enumDescriptions": [
            "The architecture is unknown.",
            "The architecture is I386.",
            "The architecture is X86_64.",
            "The architecture is ARM64.",
            "The architecture is X86_64_MAC."
          ],
          "enum": [
            "VM_ARCHITECTURE_UNSPECIFIED",
            "I386",
            "X86_64",
            "ARM64",
            "X86_64_MAC"
          ]
        }
      }
    },
    "AwsSecurityGroup": {
      "id": "AwsSecurityGroup",
      "description": "AwsSecurityGroup describes a security group of an AWS VM.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The AWS security group id.",
          "type": "string"
        },
        "name": {
          "description": "The AWS security group name.",
          "type": "string"
        }
      }
    },
    "AzureVmsDetails": {
      "id": "AzureVmsDetails",
      "description": "AzureVmsDetails describes VMs in Azure.",
      "type": "object",
      "properties": {
        "details": {
          "description": "The details of the Azure VMs.",
          "type": "array",
          "items": {
            "$ref": "AzureVmDetails"
          }
        }
      }
    },
    "AzureVmDetails": {
      "id": "AzureVmDetails",
      "description": "AzureVmDetails describes a VM in Azure.",
      "type": "object",
      "properties": {
        "vmId": {
          "description": "The VM full path in Azure.",
          "type": "string"
        },
        "powerState": {
          "description": "The power state of the VM at the moment list was taken.",
          "type": "string",
          "enumDescriptions": [
            "Power state is not specified.",
            "The VM is starting.",
            "The VM is running.",
            "The VM is stopping.",
            "The VM is stopped.",
            "The VM is deallocating.",
            "The VM is deallocated.",
            "The VM's power state is unknown."
          ],
          "enum": [
            "POWER_STATE_UNSPECIFIED",
            "STARTING",
            "RUNNING",
            "STOPPING",
            "STOPPED",
            "DEALLOCATING",
            "DEALLOCATED",
            "UNKNOWN"
          ]
        },
        "vmSize": {
          "description": "VM size as configured in Azure. Determines the VM's hardware spec.",
          "type": "string"
        },
        "cpuCount": {
          "description": "The number of cpus the VM has.",
          "type": "integer",
          "format": "int32"
        },
        "memoryMb": {
          "description": "The memory size of the VM in MB.",
          "type": "integer",
          "format": "int32"
        },
        "diskCount": {
          "description": "The number of disks the VM has, including OS disk.",
          "type": "integer",
          "format": "int32"
        },
        "committedStorageMb": {
          "description": "The total size of the storage allocated to the VM in MB.",
          "type": "string",
          "format": "int64"
        },
        "osDisk": {
          "description": "Description of the OS disk.",
          "$ref": "OSDisk"
        },
        "disks": {
          "description": "Description of the data disks.",
          "type": "array",
          "items": {
            "$ref": "Disk"
          }
        },
        "osDescription": {
          "description": "Description of the OS.",
          "$ref": "OSDescription"
        },
        "bootOption": {
          "description": "The VM Boot Option.",
          "type": "string",
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is UEFI.",
            "The boot option is BIOS."
          ],
          "enum": [
            "BOOT_OPTION_UNSPECIFIED",
            "EFI",
            "BIOS"
          ]
        },
        "tags": {
          "description": "The tags of the VM.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "computerName": {
          "description": "The VM's ComputerName.",
          "type": "string"
        }
      }
    },
    "OSDisk": {
      "id": "OSDisk",
      "description": "A message describing the OS disk.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The disk's type.",
          "type": "string"
        },
        "name": {
          "description": "The disk's full name.",
          "type": "string"
        },
        "sizeGb": {
          "description": "The disk's size in GB.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Disk": {
      "id": "Disk",
      "description": "A message describing a data disk.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The disk name.",
          "type": "string"
        },
        "sizeGb": {
          "description": "The disk size in GB.",
          "type": "integer",
          "format": "int32"
        },
        "lun": {
          "description": "The disk's Logical Unit Number (LUN).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OSDescription": {
      "id": "OSDescription",
      "description": "A message describing the VM's OS. Including OS, Publisher, Offer and Plan if applicable.",
      "type": "object",
      "properties": {
        "type": {
          "description": "OS type.",
          "type": "string"
        },
        "publisher": {
          "description": "OS publisher.",
          "type": "string"
        },
        "offer": {
          "description": "OS offer.",
          "type": "string"
        },
        "plan": {
          "description": "OS plan.",
          "type": "string"
        }
      }
    },
    "ListUtilizationReportsResponse": {
      "id": "ListUtilizationReportsResponse",
      "description": "Response message for 'ListUtilizationReports' request.",
      "type": "object",
      "properties": {
        "utilizationReports": {
          "description": "Output only. The list of reports.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "UtilizationReport"
          }
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true,
          "type": "string"
        },
        "unreachable": {
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UtilizationReport": {
      "id": "UtilizationReport",
      "description": "Utilization report details the utilization (CPU, memory, etc.) of selected source VMs.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The report unique name.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "The report display name, as assigned by the user.",
          "type": "string"
        },
        "state": {
          "description": "Output only. Current state of the report.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The state is unknown. This value is not in use.",
            "The report is in the making.",
            "Report creation completed successfully.",
            "Report creation failed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "SUCCEEDED",
            "FAILED"
          ]
        },
        "stateTime": {
          "description": "Output only. The time the state was last set.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "error": {
          "description": "Output only. Provides details on the state of the report in case of an error.",
          "readOnly": true,
          "$ref": "Status"
        },
        "createTime": {
          "description": "Output only. The time the report was created (this refers to the time of the request, not the time the report creation completed).",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "timeFrame": {
          "description": "Time frame of the report.",
          "type": "string",
          "enumDescriptions": [
            "The time frame was not specified and will default to WEEK.",
            "One week.",
            "One month.",
            "One year."
          ],
          "enum": [
            "TIME_FRAME_UNSPECIFIED",
            "WEEK",
            "MONTH",
            "YEAR"
          ]
        },
        "frameEndTime": {
          "description": "Output only. The point in time when the time frame ends. Notice that the time frame is counted backwards. For instance if the \"frame_end_time\" value is 2021/01/20 and the time frame is WEEK then the report covers the week between 2021/01/20 and 2021/01/14.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "vmsCount": {
          "description": "Output only. Total number of VMs included in the report.",
          "readOnly": true,
          "deprecated": true,
          "type": "integer",
          "format": "int32"
        },
        "vmCount": {
          "description": "Output only. Total number of VMs included in the report.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "vms": {
          "description": "List of utilization information per VM. When sent as part of the request, the \"vm_id\" field is used in order to specify which VMs to include in the report. In that case all other fields are ignored.",
          "type": "array",
          "items": {
            "$ref": "VmUtilizationInfo"
          }
        }
      }
    },
    "VmUtilizationInfo": {
      "id": "VmUtilizationInfo",
      "description": "Utilization information of a single VM.",
      "type": "object",
      "properties": {
        "vmwareVmDetails": {
          "description": "The description of the VM in a Source of type Vmware.",
          "$ref": "VmwareVmDetails"
        },
        "vmId": {
          "description": "The VM's ID in the source.",
          "type": "string"
        },
        "utilization": {
          "description": "Utilization metrics for this VM.",
          "$ref": "VmUtilizationMetrics"
        }
      }
    },
    "VmUtilizationMetrics": {
      "id": "VmUtilizationMetrics",
      "description": "Utilization metrics values for a single VM.",
      "type": "object",
      "properties": {
        "cpuMax": {
          "description": "Max CPU usage, percent.",
          "deprecated": true,
          "type": "integer",
          "format": "int32"
        },
        "cpuMaxPercent": {
          "description": "Max CPU usage, percent.",
          "type": "integer",
          "format": "int32"
        },
        "cpuAverage": {
          "description": "Average CPU usage, percent.",
          "deprecated": true,
          "type": "integer",
          "format": "int32"
        },
        "cpuAveragePercent": {
          "description": "Average CPU usage, percent.",
          "type": "integer",
          "format": "int32"
        },
        "memoryMax": {
          "description": "Max memory usage, percent.",
          "deprecated": true,
          "type": "integer",
          "format": "int32"
        },
        "memoryMaxPercent": {
          "description": "Max memory usage, percent.",
          "type": "integer",
          "format": "int32"
        },
        "memoryAverage": {
          "description": "Average memory usage, percent.",
          "deprecated": true,
          "type": "integer",
          "format": "int32"
        },
        "memoryAveragePercent": {
          "description": "Average memory usage, percent.",
          "type": "integer",
          "format": "int32"
        },
        "diskIoRateMax": {
          "description": "Max disk IO rate, in kilobytes per second.",
          "deprecated": true,
          "type": "string",
          "format": "int64"
        },
        "diskIoRateMaxKbps": {
          "description": "Max disk IO rate, in kilobytes per second.",
          "type": "string",
          "format": "int64"
        },
        "diskIoRateAverage": {
          "description": "Average disk IO rate, in kilobytes per second.",
          "deprecated": true,
          "type": "string",
          "format": "int64"
        },
        "diskIoRateAverageKbps": {
          "description": "Average disk IO rate, in kilobytes per second.",
          "type": "string",
          "format": "int64"
        },
        "networkThroughputMax": {
          "description": "Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.",
          "deprecated": true,
          "type": "string",
          "format": "int64"
        },
        "networkThroughputMaxKbps": {
          "description": "Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.",
          "type": "string",
          "format": "int64"
        },
        "networkThroughputAverage": {
          "description": "Average network throughput (combined transmit-rates and receive-rates), in kilobytes per second.",
          "deprecated": true,
          "type": "string",
          "format": "int64"
        },
        "networkThroughputAverageKbps": {
          "description": "Average network throughput (combined transmit-rates and receive-rates), in kilobytes per second.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ListDatacenterConnectorsResponse": {
      "id": "ListDatacenterConnectorsResponse",
      "description": "Response message for 'ListDatacenterConnectors' request.",
      "type": "object",
      "properties": {
        "datacenterConnectors": {
          "description": "Output only. The list of sources response.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "DatacenterConnector"
          }
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true,
          "type": "string"
        },
        "unreachable": {
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DatacenterConnector": {
      "id": "DatacenterConnector",
      "description": "DatacenterConnector message describes a connector between the Source and Google Cloud, which is installed on a vmware datacenter (an OVA vm installed by the user) to connect the Datacenter to Google Cloud and support vm migration data transfer.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the connector was created (as an API call, not when it was actually installed).",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The last time the connector was updated with an API call.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "description": "Output only. The connector's name.",
          "readOnly": true,
          "type": "string"
        },
        "registrationId": {
          "description": "Immutable. A unique key for this connector. This key is internal to the OVA connector and is supplied with its creation during the registration process and can not be modified.",
          "type": "string"
        },
        "serviceAccount": {
          "description": "The service account to use in the connector when communicating with the cloud.",
          "type": "string"
        },
        "version": {
          "description": "The version running in the DatacenterConnector. This is supplied by the OVA connector during the registration process and can not be modified.",
          "type": "string"
        },
        "bucket": {
          "description": "Output only. The communication channel between the datacenter connector and Google Cloud.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "Output only. State of the DatacenterConnector, as determined by the health checks.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The state was not sampled by the health checks yet.",
            "The source was sampled by health checks and is not available.",
            "The source is available but might not be usable yet due to unvalidated credentials or another reason. The credentials referred to are the ones to the Source. The error message will contain further details.",
            "The source exists and its credentials were verified."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "OFFLINE",
            "FAILED",
            "ACTIVE"
          ]
        },
        "stateTime": {
          "description": "Output only. The time the state was last set.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "error": {
          "description": "Output only. Provides details on the state of the Datacenter Connector in case of an error.",
          "readOnly": true,
          "$ref": "Status"
        },
        "applianceInfrastructureVersion": {
          "description": "Output only. Appliance OVA version. This is the OVA which is manually installed by the user and contains the infrastructure for the automatically updatable components on the appliance.",
          "readOnly": true,
          "type": "string"
        },
        "applianceSoftwareVersion": {
          "description": "Output only. Appliance last installed update bundle version. This is the version of the automatically updatable components on the appliance.",
          "readOnly": true,
          "type": "string"
        },
        "availableVersions": {
          "description": "Output only. The available versions for updating this appliance.",
          "readOnly": true,
          "$ref": "AvailableUpdates"
        },
        "upgradeStatus": {
          "description": "Output only. The status of the current / last upgradeAppliance operation.",
          "readOnly": true,
          "$ref": "UpgradeStatus"
        }
      }
    },
    "AvailableUpdates": {
      "id": "AvailableUpdates",
      "description": "Holds informatiom about the available versions for upgrade.",
      "type": "object",
      "properties": {
        "newDeployableAppliance": {
          "description": "The newest deployable version of the appliance. The current appliance can't be updated into this version, and the owner must manually deploy this OVA to a new appliance.",
          "$ref": "ApplianceVersion"
        },
        "inPlaceUpdate": {
          "description": "The latest version for in place update. The current appliance can be updated to this version using the API or m4c CLI.",
          "$ref": "ApplianceVersion"
        }
      }
    },
    "ApplianceVersion": {
      "id": "ApplianceVersion",
      "description": "Describes an appliance version.",
      "type": "object",
      "properties": {
        "version": {
          "description": "The appliance version.",
          "type": "string"
        },
        "uri": {
          "description": "A link for downloading the version.",
          "type": "string"
        },
        "critical": {
          "description": "Determine whether it's critical to upgrade the appliance to this version.",
          "type": "boolean"
        },
        "releaseNotesUri": {
          "description": "Link to a page that contains the version release notes.",
          "type": "string"
        }
      }
    },
    "UpgradeStatus": {
      "id": "UpgradeStatus",
      "description": "UpgradeStatus contains information about upgradeAppliance operation.",
      "type": "object",
      "properties": {
        "version": {
          "description": "The version to upgrade to.",
          "type": "string"
        },
        "state": {
          "description": "The state of the upgradeAppliance operation.",
          "type": "string",
          "enumDescriptions": [
            "The state was not sampled by the health checks yet.",
            "The upgrade has started.",
            "The upgrade failed.",
            "The upgrade finished successfully."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "FAILED",
            "SUCCEEDED"
          ]
        },
        "error": {
          "description": "Provides details on the state of the upgrade operation in case of an error.",
          "$ref": "Status"
        },
        "startTime": {
          "description": "The time the operation was started.",
          "type": "string",
          "format": "google-datetime"
        },
        "previousVersion": {
          "description": "The version from which we upgraded.",
          "type": "string"
        }
      }
    },
    "UpgradeApplianceRequest": {
      "id": "UpgradeApplianceRequest",
      "description": "Request message for 'UpgradeAppliance' request.",
      "type": "object",
      "properties": {
        "requestId": {
          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      }
    },
    "MigratingVm": {
      "id": "MigratingVm",
      "description": "MigratingVm describes the VM that will be migrated from a Source environment and its replication state.",
      "type": "object",
      "properties": {
        "computeEngineVmDefaults": {
          "description": "Details of the VM in Compute Engine. Deprecated: Use compute_engine_target_defaults instead.",
          "deprecated": true,
          "$ref": "TargetVMDetails"
        },
        "computeEngineTargetDefaults": {
          "description": "Details of the target VM in Compute Engine.",
          "$ref": "ComputeEngineTargetDefaults"
        },
        "computeEngineDisksTargetDefaults": {
          "description": "Details of the target Persistent Disks in Compute Engine.",
          "$ref": "ComputeEngineDisksTargetDefaults"
        },
        "vmwareSourceVmDetails": {
          "description": "Output only. Details of the VM from a Vmware source.",
          "readOnly": true,
          "$ref": "VmwareSourceVmDetails"
        },
        "awsSourceVmDetails": {
          "description": "Output only. Details of the VM from an AWS source.",
          "readOnly": true,
          "$ref": "AwsSourceVmDetails"
        },
        "azureSourceVmDetails": {
          "description": "Output only. Details of the VM from an Azure source.",
          "readOnly": true,
          "$ref": "AzureSourceVmDetails"
        },
        "name": {
          "description": "Output only. The identifier of the MigratingVm.",
          "readOnly": true,
          "type": "string"
        },
        "sourceVmId": {
          "description": "The unique ID of the VM in the source. The VM's name in vSphere can be changed, so this is not the VM's name but rather its moRef id. This id is of the form vm-.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name attached to the MigratingVm by the user.",
          "type": "string"
        },
        "description": {
          "description": "The description attached to the migrating VM by the user.",
          "type": "string"
        },
        "targetDefaults": {
          "description": "The default configuration of the target VM that will be created in Google Cloud as a result of the migration. Deprecated: Use compute_engine_target_defaults instead.",
          "deprecated": true,
          "$ref": "TargetVMDetails"
        },
        "policy": {
          "description": "The replication schedule policy.",
          "$ref": "SchedulePolicy"
        },
        "createTime": {
          "description": "Output only. The time the migrating VM was created (this refers to this resource and not to the time it was installed in the source).",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The last time the migrating VM resource was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "lastSync": {
          "description": "Output only. The most updated snapshot created time in the source that finished replication.",
          "readOnly": true,
          "$ref": "ReplicationSync"
        },
        "state": {
          "description": "Output only. State of the MigratingVm.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The state was not sampled by the health checks yet.",
            "The VM in the source is being verified.",
            "The source VM was verified, and it's ready to start replication.",
            "Migration is going through the first sync cycle.",
            "The replication is active, and it's running or scheduled to run.",
            "The source VM is being turned off, and a final replication is currently running.",
            "The source VM was stopped and replicated. The replication is currently paused.",
            "A cutover job is active and replication cycle is running the final sync.",
            "The replication was paused by the user and no cycles are scheduled to run.",
            "The migrating VM is being finalized and migration resources are being removed.",
            "The replication process is done. The migrating VM is finalized and no longer consumes billable resources.",
            "The replication process encountered an unrecoverable error and was aborted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "READY",
            "FIRST_SYNC",
            "ACTIVE",
            "CUTTING_OVER",
            "CUTOVER",
            "FINAL_SYNC",
            "PAUSED",
            "FINALIZING",
            "FINALIZED",
            "ERROR"
          ]
        },
        "stateTime": {
          "description": "Output only. The last time the migrating VM state was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "currentSyncInfo": {
          "description": "Output only. Details of the current running replication cycle.",
          "readOnly": true,
          "$ref": "ReplicationCycle"
        },
        "lastReplicationCycle": {
          "description": "Output only. Details of the last replication cycle. This will be updated whenever a replication cycle is finished and is not to be confused with last_sync which is only updated on successful replication cycles.",
          "readOnly": true,
          "$ref": "ReplicationCycle"
        },
        "group": {
          "description": "Output only. The group this migrating vm is included in, if any. The group is represented by the full path of the appropriate Group resource.",
          "readOnly": true,
          "type": "string"
        },
        "labels": {
          "description": "The labels of the migrating VM.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "recentCloneJobs": {
          "description": "Output only. The recent clone jobs performed on the migrating VM. This field holds the vm's last completed clone job and the vm's running clone job, if one exists. Note: To have this field populated you need to explicitly request it via the \"view\" parameter of the Get/List request.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "CloneJob"
          }
        },
        "error": {
          "description": "Output only. Provides details on the state of the Migrating VM in case of an error in replication.",
          "readOnly": true,
          "$ref": "Status"
        },
        "recentCutoverJobs": {
          "description": "Output only. The recent cutover jobs performed on the migrating VM. This field holds the vm's last completed cutover job and the vm's running cutover job, if one exists. Note: To have this field populated you need to explicitly request it via the \"view\" parameter of the Get/List request.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "CutoverJob"
          }
        },
        "cutoverForecast": {
          "description": "Output only. Provides details of future CutoverJobs of a MigratingVm. Set to empty when cutover forecast is unavailable.",
          "readOnly": true,
          "$ref": "CutoverForecast"
        }
      }
    },
    "TargetVMDetails": {
      "id": "TargetVMDetails",
      "deprecated": true,
      "description": "TargetVMDetails is a collection of details for creating a VM in a target Compute Engine project.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the VM to create.",
          "type": "string"
        },
        "project": {
          "description": "Output only. The project in which to create the VM.",
          "readOnly": true,
          "deprecated": true,
          "type": "string"
        },
        "targetProject": {
          "description": "The full path of the resource of type TargetProject which represents the Compute Engine project in which to create this VM.",
          "type": "string"
        },
        "zone": {
          "description": "The zone in which to create the VM.",
          "type": "string"
        },
        "machineTypeSeries": {
          "description": "The machine type series to create the VM with.",
          "type": "string"
        },
        "machineType": {
          "description": "The machine type to create the VM with.",
          "type": "string"
        },
        "network": {
          "description": "The network to connect the VM to.",
          "type": "string"
        },
        "subnetwork": {
          "description": "The subnetwork to connect the VM to.",
          "type": "string"
        },
        "internalIp": {
          "description": "The internal IP to define in the VM. The formats accepted are: `ephemeral` \\ ipv4 address \\ a named address resource full path.",
          "type": "string"
        },
        "externalIp": {
          "description": "The external IP to define in the VM.",
          "type": "string"
        },
        "networkTags": {
          "description": "A list of network tags to associate with the VM.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceAccount": {
          "description": "The service account to associate the VM with.",
          "type": "string"
        },
        "diskType": {
          "description": "The disk type to use in the VM.",
          "type": "string",
          "enumDescriptions": [
            "An unspecified disk type. Will be used as STANDARD.",
            "A Standard disk type.",
            "An alternative to SSD persistent disks that balance performance and cost.",
            "SSD hard disk type."
          ],
          "enum": [
            "DISK_TYPE_UNSPECIFIED",
            "STANDARD",
            "BALANCED",
            "SSD"
          ]
        },
        "labels": {
          "description": "A map of labels to associate with the VM.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "licenseType": {
          "description": "The license type to use in OS adaptation.",
          "type": "string",
          "enumDescriptions": [
            "The license type is the default for the OS.",
            "The license type is Pay As You Go license type.",
            "The license type is Bring Your Own License type."
          ],
          "enum": [
            "DEFAULT",
            "PAYG",
            "BYOL"
          ]
        },
        "appliedLicense": {
          "description": "Output only. The OS license returned from the adaptation module report.",
          "readOnly": true,
          "$ref": "AppliedLicense"
        },
        "computeScheduling": {
          "description": "Compute instance scheduling information (if empty default is used).",
          "$ref": "ComputeScheduling"
        },
        "networkInterfaces": {
          "description": "List of NICs connected to this VM.",
          "type": "array",
          "items": {
            "$ref": "NetworkInterface"
          }
        },
        "secureBoot": {
          "description": "Defines whether the instance has Secure Boot enabled. This can be set to true only if the vm boot option is EFI.",
          "type": "boolean"
        },
        "bootOption": {
          "description": "Output only. The VM Boot Option, as set in the source VM.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is EFI.",
            "The boot option is BIOS."
          ],
          "enum": [
            "BOOT_OPTION_UNSPECIFIED",
            "EFI",
            "BIOS"
          ]
        },
        "metadata": {
          "description": "The metadata key/value pairs to assign to the VM.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AppliedLicense": {
      "id": "AppliedLicense",
      "description": "AppliedLicense holds the license data returned by adaptation module report.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The license type that was used in OS adaptation.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified license for the OS.",
            "No license available for the OS.",
            "The license type is Pay As You Go license type.",
            "The license type is Bring Your Own License type."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "NONE",
            "PAYG",
            "BYOL"
          ]
        },
        "osLicense": {
          "description": "The OS license returned from the adaptation module's report.",
          "type": "string"
        }
      }
    },
    "ComputeScheduling": {
      "id": "ComputeScheduling",
      "description": "Scheduling information for VM on maintenance/restart behaviour and node allocation in sole tenant nodes.",
      "type": "object",
      "properties": {
        "automaticRestart": {
          "deprecated": true,
          "type": "boolean"
        },
        "onHostMaintenance": {
          "description": "How the instance should behave when the host machine undergoes maintenance that may temporarily impact instance performance.",
          "type": "string",
          "enumDescriptions": [
            "An unknown, unexpected behavior.",
            "Terminate the instance when the host machine undergoes maintenance.",
            "Migrate the instance when the host machine undergoes maintenance."
          ],
          "enum": [
            "ON_HOST_MAINTENANCE_UNSPECIFIED",
            "TERMINATE",
            "MIGRATE"
          ]
        },
        "restartType": {
          "description": "Whether the Instance should be automatically restarted whenever it is terminated by Compute Engine (not terminated by user). This configuration is identical to `automaticRestart` field in Compute Engine create instance under scheduling. It was changed to an enum (instead of a boolean) to match the default value in Compute Engine which is automatic restart.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified behavior. This will use the default.",
            "The Instance should be automatically restarted whenever it is terminated by Compute Engine.",
            "The Instance isn't automatically restarted whenever it is terminated by Compute Engine."
          ],
          "enum": [
            "RESTART_TYPE_UNSPECIFIED",
            "AUTOMATIC_RESTART",
            "NO_AUTOMATIC_RESTART"
          ]
        },
        "nodeAffinities": {
          "description": "A set of node affinity and anti-affinity configurations for sole tenant nodes.",
          "type": "array",
          "items": {
            "$ref": "SchedulingNodeAffinity"
          }
        },
        "minNodeCpus": {
          "description": "The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node. Ignored if no node_affinites are configured.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SchedulingNodeAffinity": {
      "id": "SchedulingNodeAffinity",
      "description": "Node Affinity: the configuration of desired nodes onto which this Instance could be scheduled. Based on https://cloud.google.com/compute/docs/reference/rest/v1/instances/setScheduling",
      "type": "object",
      "properties": {
        "key": {
          "description": "The label key of Node resource to reference.",
          "type": "string"
        },
        "operator": {
          "description": "The operator to use for the node resources specified in the `values` parameter.",
          "type": "string",
          "enumDescriptions": [
            "An unknown, unexpected behavior.",
            "The node resource group should be in these resources affinity.",
            "The node resource group should not be in these resources affinity."
          ],
          "enum": [
            "OPERATOR_UNSPECIFIED",
            "IN",
            "NOT_IN"
          ]
        },
        "values": {
          "description": "Corresponds to the label values of Node resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NetworkInterface": {
      "id": "NetworkInterface",
      "description": "NetworkInterface represents a NIC of a VM.",
      "type": "object",
      "properties": {
        "network": {
          "description": "The network to connect the NIC to.",
          "type": "string"
        },
        "subnetwork": {
          "description": "The subnetwork to connect the NIC to.",
          "type": "string"
        },
        "internalIp": {
          "description": "The internal IP to define in the NIC. The formats accepted are: `ephemeral` \\ ipv4 address \\ a named address resource full path.",
          "type": "string"
        },
        "externalIp": {
          "description": "The external IP to define in the NIC.",
          "type": "string"
        }
      }
    },
    "ComputeEngineTargetDefaults": {
      "id": "ComputeEngineTargetDefaults",
      "description": "ComputeEngineTargetDefaults is a collection of details for creating a VM in a target Compute Engine project.",
      "type": "object",
      "properties": {
        "vmName": {
          "description": "The name of the VM to create.",
          "type": "string"
        },
        "targetProject": {
          "description": "The full path of the resource of type TargetProject which represents the Compute Engine project in which to create this VM.",
          "type": "string"
        },
        "zone": {
          "description": "The zone in which to create the VM.",
          "type": "string"
        },
        "machineTypeSeries": {
          "description": "The machine type series to create the VM with.",
          "type": "string"
        },
        "machineType": {
          "description": "The machine type to create the VM with.",
          "type": "string"
        },
        "networkTags": {
          "description": "A list of network tags to associate with the VM.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "networkInterfaces": {
          "description": "List of NICs connected to this VM.",
          "type": "array",
          "items": {
            "$ref": "NetworkInterface"
          }
        },
        "serviceAccount": {
          "description": "The service account to associate the VM with.",
          "type": "string"
        },
        "diskType": {
          "description": "The disk type to use in the VM.",
          "type": "string",
          "enumDescriptions": [
            "An unspecified disk type. Will be used as STANDARD.",
            "A Standard disk type.",
            "SSD hard disk type.",
            "An alternative to SSD persistent disks that balance performance and cost."
          ],
          "enum": [
            "COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED",
            "COMPUTE_ENGINE_DISK_TYPE_STANDARD",
            "COMPUTE_ENGINE_DISK_TYPE_SSD",
            "COMPUTE_ENGINE_DISK_TYPE_BALANCED"
          ]
        },
        "labels": {
          "description": "A map of labels to associate with the VM.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "licenseType": {
          "description": "The license type to use in OS adaptation.",
          "type": "string",
          "enumDescriptions": [
            "The license type is the default for the OS.",
            "The license type is Pay As You Go license type.",
            "The license type is Bring Your Own License type."
          ],
          "enum": [
            "COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT",
            "COMPUTE_ENGINE_LICENSE_TYPE_PAYG",
            "COMPUTE_ENGINE_LICENSE_TYPE_BYOL"
          ]
        },
        "appliedLicense": {
          "description": "Output only. The OS license returned from the adaptation module report.",
          "readOnly": true,
          "$ref": "AppliedLicense"
        },
        "computeScheduling": {
          "description": "Compute instance scheduling information (if empty default is used).",
          "$ref": "ComputeScheduling"
        },
        "secureBoot": {
          "description": "Defines whether the instance has Secure Boot enabled. This can be set to true only if the VM boot option is EFI.",
          "type": "boolean"
        },
        "bootOption": {
          "description": "Output only. The VM Boot Option, as set in the source VM.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is EFI.",
            "The boot option is BIOS."
          ],
          "enum": [
            "COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED",
            "COMPUTE_ENGINE_BOOT_OPTION_EFI",
            "COMPUTE_ENGINE_BOOT_OPTION_BIOS"
          ]
        },
        "metadata": {
          "description": "The metadata key/value pairs to assign to the VM.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "additionalLicenses": {
          "description": "Additional licenses to assign to the VM.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hostname": {
          "description": "The hostname to assign to the VM.",
          "type": "string"
        },
        "encryption": {
          "description": "Optional. Immutable. The encryption to apply to the VM disks.",
          "$ref": "Encryption"
        }
      }
    },
    "ComputeEngineDisksTargetDefaults": {
      "id": "ComputeEngineDisksTargetDefaults",
      "description": "ComputeEngineDisksTargetDefaults is a collection of details for creating Persistent Disks in a target Compute Engine project.",
      "type": "object",
      "properties": {
        "zone": {
          "description": "The zone in which to create the Persistent Disks.",
          "type": "string"
        },
        "disksTargetDefaults": {
          "description": "Details of the disk only migration target.",
          "$ref": "DisksMigrationDisksTargetDefaults"
        },
        "vmTargetDefaults": {
          "description": "Details of the VM migration target.",
          "$ref": "DisksMigrationVmTargetDefaults"
        },
        "targetProject": {
          "description": "The full path of the resource of type TargetProject which represents the Compute Engine project in which to create the Persistent Disks.",
          "type": "string"
        },
        "disks": {
          "description": "The details of each Persistent Disk to create.",
          "type": "array",
          "items": {
            "$ref": "PersistentDiskDefaults"
          }
        }
      }
    },
    "DisksMigrationDisksTargetDefaults": {
      "id": "DisksMigrationDisksTargetDefaults",
      "description": "Details for a disk only migration.",
      "type": "object",
      "properties": {}
    },
    "DisksMigrationVmTargetDefaults": {
      "id": "DisksMigrationVmTargetDefaults",
      "description": "Details for creation of a VM that migrated data disks will be attached to.",
      "type": "object",
      "properties": {
        "vmName": {
          "description": "Required. The name of the VM to create.",
          "type": "string"
        },
        "machineTypeSeries": {
          "description": "Optional. The machine type series to create the VM with. For presentation only.",
          "type": "string"
        },
        "machineType": {
          "description": "Required. The machine type to create the VM with.",
          "type": "string"
        },
        "networkTags": {
          "description": "Optional. A list of network tags to associate with the VM.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "networkInterfaces": {
          "description": "Optional. NICs to attach to the VM.",
          "type": "array",
          "items": {
            "$ref": "NetworkInterface"
          }
        },
        "serviceAccount": {
          "description": "Optional. The service account to associate the VM with.",
          "type": "string"
        },
        "computeScheduling": {
          "description": "Optional. Compute instance scheduling information (if empty default is used).",
          "$ref": "ComputeScheduling"
        },
        "secureBoot": {
          "description": "Optional. Defines whether the instance has Secure Boot enabled. This can be set to true only if the VM boot option is EFI.",
          "type": "boolean"
        },
        "metadata": {
          "description": "Optional. The metadata key/value pairs to assign to the VM.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "additionalLicenses": {
          "description": "Optional. Additional licenses to assign to the VM.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hostname": {
          "description": "Optional. The hostname to assign to the VM.",
          "type": "string"
        },
        "labels": {
          "description": "Optional. A map of labels to associate with the VM.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "bootDiskDefaults": {
          "description": "Optional. Details of the boot disk of the VM.",
          "$ref": "BootDiskDefaults"
        },
        "encryption": {
          "description": "Optional. The encryption to apply to the VM.",
          "$ref": "Encryption"
        }
      }
    },
    "BootDiskDefaults": {
      "id": "BootDiskDefaults",
      "description": "BootDiskDefaults hold information about the boot disk of a VM.",
      "type": "object",
      "properties": {
        "image": {
          "description": "The image to use when creating the disk.",
          "$ref": "DiskImageDefaults"
        },
        "diskName": {
          "description": "Optional. The name of the disk.",
          "type": "string"
        },
        "diskType": {
          "description": "Optional. The type of disk provisioning to use for the VM.",
          "type": "string",
          "enumDescriptions": [
            "An unspecified disk type. Will be used as STANDARD.",
            "A Standard disk type.",
            "SSD hard disk type.",
            "An alternative to SSD persistent disks that balance performance and cost."
          ],
          "enum": [
            "COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED",
            "COMPUTE_ENGINE_DISK_TYPE_STANDARD",
            "COMPUTE_ENGINE_DISK_TYPE_SSD",
            "COMPUTE_ENGINE_DISK_TYPE_BALANCED"
          ]
        },
        "deviceName": {
          "description": "Optional. Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.",
          "type": "string"
        },
        "encryption": {
          "description": "Optional. The encryption to apply to the boot disk.",
          "$ref": "Encryption"
        }
      }
    },
    "DiskImageDefaults": {
      "id": "DiskImageDefaults",
      "description": "Contains details about the image source used to create the disk.",
      "type": "object",
      "properties": {
        "sourceImage": {
          "description": "Required. The Image resource used when creating the disk.",
          "type": "string"
        }
      }
    },
    "PersistentDiskDefaults": {
      "id": "PersistentDiskDefaults",
      "description": "Details for creation of a Persistent Disk.",
      "type": "object",
      "properties": {
        "sourceDiskNumber": {
          "description": "Required. The ordinal number of the source VM disk.",
          "type": "integer",
          "format": "int32"
        },
        "diskName": {
          "description": "Optional. The name of the Persistent Disk to create.",
          "type": "string"
        },
        "diskType": {
          "description": "The disk type to use.",
          "type": "string",
          "enumDescriptions": [
            "An unspecified disk type. Will be used as STANDARD.",
            "A Standard disk type.",
            "SSD hard disk type.",
            "An alternative to SSD persistent disks that balance performance and cost."
          ],
          "enum": [
            "COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED",
            "COMPUTE_ENGINE_DISK_TYPE_STANDARD",
            "COMPUTE_ENGINE_DISK_TYPE_SSD",
            "COMPUTE_ENGINE_DISK_TYPE_BALANCED"
          ]
        },
        "additionalLabels": {
          "description": "A map of labels to associate with the Persistent Disk.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "encryption": {
          "description": "Optional. The encryption to apply to the disk.",
          "$ref": "Encryption"
        },
        "vmAttachmentDetails": {
          "description": "Optional. Details for attachment of the disk to a VM. Used when the disk is set to be attacked to a target VM.",
          "$ref": "VmAttachmentDetails"
        }
      }
    },
    "VmAttachmentDetails": {
      "id": "VmAttachmentDetails",
      "description": "Details for attachment of the disk to a VM.",
      "type": "object",
      "properties": {
        "deviceName": {
          "description": "Optional. Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.",
          "type": "string"
        }
      }
    },
    "VmwareSourceVmDetails": {
      "id": "VmwareSourceVmDetails",
      "description": "Represent the source Vmware VM details.",
      "type": "object",
      "properties": {
        "firmware": {
          "description": "The firmware type of the source VM.",
          "type": "string",
          "enumDescriptions": [
            "The firmware is unknown.",
            "The firmware is EFI.",
            "The firmware is BIOS."
          ],
          "enum": [
            "FIRMWARE_UNSPECIFIED",
            "EFI",
            "BIOS"
          ]
        },
        "committedStorageBytes": {
          "description": "The total size of the disks being migrated in bytes.",
          "type": "string",
          "format": "int64"
        },
        "disks": {
          "description": "The disks attached to the source VM.",
          "type": "array",
          "items": {
            "$ref": "VmwareDiskDetails"
          }
        },
        "vmCapabilitiesInfo": {
          "description": "Output only. Information about VM capabilities needed for some Compute Engine features.",
          "readOnly": true,
          "$ref": "VmCapabilities"
        }
      }
    },
    "VmwareDiskDetails": {
      "id": "VmwareDiskDetails",
      "description": "The details of a Vmware VM disk.",
      "type": "object",
      "properties": {
        "diskNumber": {
          "description": "The ordinal number of the disk.",
          "type": "integer",
          "format": "int32"
        },
        "sizeGb": {
          "description": "Size in GB.",
          "type": "string",
          "format": "int64"
        },
        "label": {
          "description": "The disk label.",
          "type": "string"
        }
      }
    },
    "VmCapabilities": {
      "id": "VmCapabilities",
      "description": "Migrating VM source information about the VM capabilities needed for some Compute Engine features.",
      "type": "object",
      "properties": {
        "osCapabilities": {
          "description": "Output only. Unordered list. List of certain VM OS capabilities needed for some Compute Engine features.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "This is for API compatibility only and is not in use.",
              "NVMe driver installed and the VM can use NVMe PD or local SSD.",
              "gVNIC virtual NIC driver supported."
            ],
            "enum": [
              "OS_CAPABILITY_UNSPECIFIED",
              "OS_CAPABILITY_NVME_STORAGE_ACCESS",
              "OS_CAPABILITY_GVNIC_NETWORK_INTERFACE"
            ]
          }
        },
        "lastOsCapabilitiesUpdateTime": {
          "description": "Output only. The last time OS capabilities list was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "AwsSourceVmDetails": {
      "id": "AwsSourceVmDetails",
      "description": "Represent the source AWS VM details.",
      "type": "object",
      "properties": {
        "firmware": {
          "description": "The firmware type of the source VM.",
          "type": "string",
          "enumDescriptions": [
            "The firmware is unknown.",
            "The firmware is EFI.",
            "The firmware is BIOS."
          ],
          "enum": [
            "FIRMWARE_UNSPECIFIED",
            "EFI",
            "BIOS"
          ]
        },
        "committedStorageBytes": {
          "description": "The total size of the disks being migrated in bytes.",
          "type": "string",
          "format": "int64"
        },
        "disks": {
          "description": "The disks attached to the source VM.",
          "type": "array",
          "items": {
            "$ref": "AwsDiskDetails"
          }
        },
        "vmCapabilitiesInfo": {
          "description": "Output only. Information about VM capabilities needed for some Compute Engine features.",
          "readOnly": true,
          "$ref": "VmCapabilities"
        }
      }
    },
    "AwsDiskDetails": {
      "id": "AwsDiskDetails",
      "description": "The details of an AWS instance disk.",
      "type": "object",
      "properties": {
        "diskNumber": {
          "description": "The ordinal number of the disk.",
          "type": "integer",
          "format": "int32"
        },
        "volumeId": {
          "description": "AWS volume ID.",
          "type": "string"
        },
        "sizeGb": {
          "description": "Size in GB.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "AzureSourceVmDetails": {
      "id": "AzureSourceVmDetails",
      "description": "Represent the source Azure VM details.",
      "type": "object",
      "properties": {
        "firmware": {
          "description": "The firmware type of the source VM.",
          "type": "string",
          "enumDescriptions": [
            "The firmware is unknown.",
            "The firmware is EFI.",
            "The firmware is BIOS."
          ],
          "enum": [
            "FIRMWARE_UNSPECIFIED",
            "EFI",
            "BIOS"
          ]
        },
        "committedStorageBytes": {
          "description": "The total size of the disks being migrated in bytes.",
          "type": "string",
          "format": "int64"
        },
        "disks": {
          "description": "The disks attached to the source VM.",
          "type": "array",
          "items": {
            "$ref": "AzureDiskDetails"
          }
        },
        "vmCapabilitiesInfo": {
          "description": "Output only. Information about VM capabilities needed for some Compute Engine features.",
          "readOnly": true,
          "$ref": "VmCapabilities"
        }
      }
    },
    "AzureDiskDetails": {
      "id": "AzureDiskDetails",
      "description": "The details of an Azure VM disk.",
      "type": "object",
      "properties": {
        "diskNumber": {
          "description": "The ordinal number of the disk.",
          "type": "integer",
          "format": "int32"
        },
        "diskId": {
          "description": "Azure disk ID.",
          "type": "string"
        },
        "sizeGb": {
          "description": "Size in GB.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "SchedulePolicy": {
      "id": "SchedulePolicy",
      "description": "A policy for scheduling replications.",
      "type": "object",
      "properties": {
        "idleDuration": {
          "description": "The idle duration between replication stages.",
          "type": "string",
          "format": "google-duration"
        },
        "skipOsAdaptation": {
          "description": "A flag to indicate whether to skip OS adaptation during the replication sync. OS adaptation is a process where the VM's operating system undergoes changes and adaptations to fully function on Compute Engine.",
          "type": "boolean"
        }
      }
    },
    "ReplicationSync": {
      "id": "ReplicationSync",
      "description": "ReplicationSync contain information about the last replica sync to the cloud.",
      "type": "object",
      "properties": {
        "lastSyncTime": {
          "description": "The most updated snapshot created time in the source that finished replication.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "ReplicationCycle": {
      "id": "ReplicationCycle",
      "description": "ReplicationCycle contains information about the current replication cycle status.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The identifier of the ReplicationCycle.",
          "type": "string"
        },
        "cycleNumber": {
          "description": "The cycle's ordinal number.",
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "description": "The time the replication cycle has started.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The time the replication cycle has ended.",
          "type": "string",
          "format": "google-datetime"
        },
        "totalPauseDuration": {
          "description": "The accumulated duration the replication cycle was paused.",
          "type": "string",
          "format": "google-duration"
        },
        "progress": {
          "description": "The current progress in percentage of this cycle.",
          "deprecated": true,
          "type": "integer",
          "format": "int32"
        },
        "progressPercent": {
          "description": "The current progress in percentage of this cycle. Was replaced by 'steps' field, which breaks down the cycle progression more accurately.",
          "deprecated": true,
          "type": "integer",
          "format": "int32"
        },
        "steps": {
          "description": "The cycle's steps list representing its progress.",
          "type": "array",
          "items": {
            "$ref": "CycleStep"
          }
        },
        "state": {
          "description": "State of the ReplicationCycle.",
          "type": "string",
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The replication cycle is running.",
            "The replication cycle is paused.",
            "The replication cycle finished with errors.",
            "The replication cycle finished successfully."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "PAUSED",
            "FAILED",
            "SUCCEEDED"
          ]
        },
        "error": {
          "description": "Provides details on the state of the cycle in case of an error.",
          "$ref": "Status"
        },
        "warnings": {
          "description": "Output only. Warnings that occurred during the cycle.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "MigrationWarning"
          }
        }
      }
    },
    "CycleStep": {
      "id": "CycleStep",
      "description": "CycleStep holds information about a step progress.",
      "type": "object",
      "properties": {
        "initializingReplication": {
          "description": "Initializing replication step.",
          "$ref": "InitializingReplicationStep"
        },
        "replicating": {
          "description": "Replicating step.",
          "$ref": "ReplicatingStep"
        },
        "postProcessing": {
          "description": "Post processing step.",
          "$ref": "PostProcessingStep"
        },
        "startTime": {
          "description": "The time the cycle step has started.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The time the cycle step has ended.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "InitializingReplicationStep": {
      "id": "InitializingReplicationStep",
      "description": "InitializingReplicationStep contains specific step details.",
      "type": "object",
      "properties": {}
    },
    "ReplicatingStep": {
      "id": "ReplicatingStep",
      "description": "ReplicatingStep contains specific step details.",
      "type": "object",
      "properties": {
        "totalBytes": {
          "description": "Total bytes to be handled in the step.",
          "type": "string",
          "format": "int64"
        },
        "replicatedBytes": {
          "description": "Replicated bytes in the step.",
          "type": "string",
          "format": "int64"
        },
        "lastTwoMinutesAverageBytesPerSecond": {
          "description": "The source disks replication rate for the last 2 minutes in bytes per second.",
          "type": "string",
          "format": "int64"
        },
        "lastThirtyMinutesAverageBytesPerSecond": {
          "description": "The source disks replication rate for the last 30 minutes in bytes per second.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "PostProcessingStep": {
      "id": "PostProcessingStep",
      "description": "PostProcessingStep contains specific step details.",
      "type": "object",
      "properties": {}
    },
    "MigrationWarning": {
      "id": "MigrationWarning",
      "description": "Represents migration resource warning information that can be used with google.rpc.Status message. MigrationWarning is used to present the user with warning information in migration operations.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The warning code.",
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is not used.",
            "A warning originated from OS Adaptation."
          ],
          "enum": [
            "WARNING_CODE_UNSPECIFIED",
            "ADAPTATION_WARNING"
          ]
        },
        "warningMessage": {
          "description": "The localized warning message.",
          "$ref": "LocalizedMessage"
        },
        "actionItem": {
          "description": "Suggested action for solving the warning.",
          "$ref": "LocalizedMessage"
        },
        "helpLinks": {
          "description": "URL(s) pointing to additional information on handling the current warning.",
          "type": "array",
          "items": {
            "$ref": "Link"
          }
        },
        "warningTime": {
          "description": "The time the warning occurred.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "LocalizedMessage": {
      "id": "LocalizedMessage",
      "description": "Provides a localized error message that is safe to return to the user which can be attached to an RPC error.",
      "type": "object",
      "properties": {
        "locale": {
          "description": "The locale used following the specification defined at https://www.rfc-editor.org/rfc/bcp/bcp47.txt. Examples are: \"en-US\", \"fr-CH\", \"es-MX\"",
          "type": "string"
        },
        "message": {
          "description": "The localized error message in the above locale.",
          "type": "string"
        }
      }
    },
    "Link": {
      "id": "Link",
      "description": "Describes a URL link.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Describes what the link offers.",
          "type": "string"
        },
        "url": {
          "description": "The URL of the link.",
          "type": "string"
        }
      }
    },
    "CloneJob": {
      "id": "CloneJob",
      "description": "CloneJob describes the process of creating a clone of a MigratingVM to the requested target based on the latest successful uploaded snapshots. While the migration cycles of a MigratingVm take place, it is possible to verify the uploaded VM can be started in the cloud, by creating a clone. The clone can be created without any downtime, and it is created using the latest snapshots which are already in the cloud. The cloneJob is only responsible for its work, not its products, which means once it is finished, it will never touch the instance it created. It will only delete it in case of the CloneJob being cancelled or upon failure to clone.",
      "type": "object",
      "properties": {
        "computeEngineVmDetails": {
          "description": "Output only. Details of the VM in Compute Engine. Deprecated: Use compute_engine_target_details instead.",
          "readOnly": true,
          "deprecated": true,
          "$ref": "TargetVMDetails"
        },
        "computeEngineTargetDetails": {
          "description": "Output only. Details of the target VM in Compute Engine.",
          "readOnly": true,
          "$ref": "ComputeEngineTargetDetails"
        },
        "computeEngineDisksTargetDetails": {
          "description": "Output only. Details of the target Persistent Disks in Compute Engine.",
          "readOnly": true,
          "$ref": "ComputeEngineDisksTargetDetails"
        },
        "createTime": {
          "description": "Output only. The time the clone job was created (as an API call, not when it was actually created in the target).",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the clone job was ended.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "description": "Output only. The name of the clone.",
          "readOnly": true,
          "type": "string"
        },
        "targetDetails": {
          "description": "Output only. Details of the VM to create as the target of this clone job. Deprecated: Use compute_engine_target_details instead.",
          "readOnly": true,
          "deprecated": true,
          "$ref": "TargetVMDetails"
        },
        "state": {
          "description": "Output only. State of the clone job.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The clone job has not yet started.",
            "The clone job is active and running.",
            "The clone job finished with errors.",
            "The clone job finished successfully.",
            "The clone job was cancelled.",
            "The clone job is being cancelled.",
            "OS adaptation is running as part of the clone job to generate license."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "ACTIVE",
            "FAILED",
            "SUCCEEDED",
            "CANCELLED",
            "CANCELLING",
            "ADAPTING_OS"
          ]
        },
        "stateTime": {
          "description": "Output only. The time the state was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "error": {
          "description": "Output only. Provides details for the errors that led to the Clone Job's state.",
          "readOnly": true,
          "$ref": "Status"
        },
        "steps": {
          "description": "Output only. The clone steps list representing its progress.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "CloneStep"
          }
        }
      }
    },
    "ComputeEngineTargetDetails": {
      "id": "ComputeEngineTargetDetails",
      "description": "ComputeEngineTargetDetails is a collection of details for creating a VM in a target Compute Engine project.",
      "type": "object",
      "properties": {
        "vmName": {
          "description": "The name of the VM to create.",
          "type": "string"
        },
        "project": {
          "description": "The Google Cloud target project ID or project name.",
          "type": "string"
        },
        "zone": {
          "description": "The zone in which to create the VM.",
          "type": "string"
        },
        "machineTypeSeries": {
          "description": "The machine type series to create the VM with.",
          "type": "string"
        },
        "machineType": {
          "description": "The machine type to create the VM with.",
          "type": "string"
        },
        "networkTags": {
          "description": "A list of network tags to associate with the VM.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "networkInterfaces": {
          "description": "List of NICs connected to this VM.",
          "type": "array",
          "items": {
            "$ref": "NetworkInterface"
          }
        },
        "serviceAccount": {
          "description": "The service account to associate the VM with.",
          "type": "string"
        },
        "diskType": {
          "description": "The disk type to use in the VM.",
          "type": "string",
          "enumDescriptions": [
            "An unspecified disk type. Will be used as STANDARD.",
            "A Standard disk type.",
            "SSD hard disk type.",
            "An alternative to SSD persistent disks that balance performance and cost."
          ],
          "enum": [
            "COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED",
            "COMPUTE_ENGINE_DISK_TYPE_STANDARD",
            "COMPUTE_ENGINE_DISK_TYPE_SSD",
            "COMPUTE_ENGINE_DISK_TYPE_BALANCED"
          ]
        },
        "labels": {
          "description": "A map of labels to associate with the VM.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "licenseType": {
          "description": "The license type to use in OS adaptation.",
          "type": "string",
          "enumDescriptions": [
            "The license type is the default for the OS.",
            "The license type is Pay As You Go license type.",
            "The license type is Bring Your Own License type."
          ],
          "enum": [
            "COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT",
            "COMPUTE_ENGINE_LICENSE_TYPE_PAYG",
            "COMPUTE_ENGINE_LICENSE_TYPE_BYOL"
          ]
        },
        "appliedLicense": {
          "description": "The OS license returned from the adaptation module report.",
          "$ref": "AppliedLicense"
        },
        "computeScheduling": {
          "description": "Compute instance scheduling information (if empty default is used).",
          "$ref": "ComputeScheduling"
        },
        "secureBoot": {
          "description": "Defines whether the instance has Secure Boot enabled. This can be set to true only if the VM boot option is EFI.",
          "type": "boolean"
        },
        "bootOption": {
          "description": "The VM Boot Option, as set in the source VM.",
          "type": "string",
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is EFI.",
            "The boot option is BIOS."
          ],
          "enum": [
            "COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED",
            "COMPUTE_ENGINE_BOOT_OPTION_EFI",
            "COMPUTE_ENGINE_BOOT_OPTION_BIOS"
          ]
        },
        "metadata": {
          "description": "The metadata key/value pairs to assign to the VM.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "additionalLicenses": {
          "description": "Additional licenses to assign to the VM.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hostname": {
          "description": "The hostname to assign to the VM.",
          "type": "string"
        },
        "encryption": {
          "description": "Optional. The encryption to apply to the VM disks.",
          "$ref": "Encryption"
        }
      }
    },
    "ComputeEngineDisksTargetDetails": {
      "id": "ComputeEngineDisksTargetDetails",
      "description": "ComputeEngineDisksTargetDetails is a collection of created Persistent Disks details.",
      "type": "object",
      "properties": {
        "disksTargetDetails": {
          "description": "Details of the disks-only migration target.",
          "$ref": "DisksMigrationDisksTargetDetails"
        },
        "vmTargetDetails": {
          "description": "Details for the VM the migrated data disks are attached to.",
          "$ref": "DisksMigrationVmTargetDetails"
        },
        "disks": {
          "description": "The details of each created Persistent Disk.",
          "type": "array",
          "items": {
            "$ref": "PersistentDisk"
          }
        }
      }
    },
    "DisksMigrationDisksTargetDetails": {
      "id": "DisksMigrationDisksTargetDetails",
      "description": "Details for a disks-only migration.",
      "type": "object",
      "properties": {}
    },
    "DisksMigrationVmTargetDetails": {
      "id": "DisksMigrationVmTargetDetails",
      "description": "Details for the VM created VM as part of disks migration.",
      "type": "object",
      "properties": {
        "vmUri": {
          "description": "Output only. The URI of the Compute Engine VM.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "PersistentDisk": {
      "id": "PersistentDisk",
      "description": "Details of a created Persistent Disk.",
      "type": "object",
      "properties": {
        "sourceDiskNumber": {
          "description": "The ordinal number of the source VM disk.",
          "type": "integer",
          "format": "int32"
        },
        "diskUri": {
          "description": "The URI of the Persistent Disk.",
          "type": "string"
        }
      }
    },
    "CloneStep": {
      "id": "CloneStep",
      "description": "CloneStep holds information about the clone step progress.",
      "type": "object",
      "properties": {
        "adaptingOs": {
          "description": "Adapting OS step.",
          "$ref": "AdaptingOSStep"
        },
        "preparingVmDisks": {
          "description": "Preparing VM disks step.",
          "$ref": "PreparingVMDisksStep"
        },
        "instantiatingMigratedVm": {
          "description": "Instantiating migrated VM step.",
          "$ref": "InstantiatingMigratedVMStep"
        },
        "startTime": {
          "description": "The time the step has started.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The time the step has ended.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "AdaptingOSStep": {
      "id": "AdaptingOSStep",
      "description": "AdaptingOSStep contains specific step details.",
      "type": "object",
      "properties": {}
    },
    "PreparingVMDisksStep": {
      "id": "PreparingVMDisksStep",
      "description": "PreparingVMDisksStep contains specific step details.",
      "type": "object",
      "properties": {}
    },
    "InstantiatingMigratedVMStep": {
      "id": "InstantiatingMigratedVMStep",
      "description": "InstantiatingMigratedVMStep contains specific step details.",
      "type": "object",
      "properties": {}
    },
    "CutoverJob": {
      "id": "CutoverJob",
      "description": "CutoverJob message describes a cutover of a migrating VM. The CutoverJob is the operation of shutting down the VM, creating a snapshot and clonning the VM using the replicated snapshot.",
      "type": "object",
      "properties": {
        "computeEngineVmDetails": {
          "description": "Output only. Details of the VM in Compute Engine. Deprecated: Use compute_engine_target_details instead.",
          "readOnly": true,
          "deprecated": true,
          "$ref": "TargetVMDetails"
        },
        "computeEngineTargetDetails": {
          "description": "Output only. Details of the target VM in Compute Engine.",
          "readOnly": true,
          "$ref": "ComputeEngineTargetDetails"
        },
        "computeEngineDisksTargetDetails": {
          "description": "Output only. Details of the target Persistent Disks in Compute Engine.",
          "readOnly": true,
          "$ref": "ComputeEngineDisksTargetDetails"
        },
        "createTime": {
          "description": "Output only. The time the cutover job was created (as an API call, not when it was actually created in the target).",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the cutover job had finished.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "description": "Output only. The name of the cutover job.",
          "readOnly": true,
          "type": "string"
        },
        "targetDetails": {
          "description": "Output only. Details of the VM to create as the target of this cutover job. Deprecated: Use compute_engine_target_details instead.",
          "readOnly": true,
          "deprecated": true,
          "$ref": "TargetVMDetails"
        },
        "state": {
          "description": "Output only. State of the cutover job.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The cutover job has not yet started.",
            "The cutover job finished with errors.",
            "The cutover job finished successfully.",
            "The cutover job was cancelled.",
            "The cutover job is being cancelled.",
            "The cutover job is active and running.",
            "OS adaptation is running as part of the cutover job to generate license."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "FAILED",
            "SUCCEEDED",
            "CANCELLED",
            "CANCELLING",
            "ACTIVE",
            "ADAPTING_OS"
          ]
        },
        "stateTime": {
          "description": "Output only. The time the state was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "progress": {
          "description": "Output only. The current progress in percentage of the cutover job.",
          "readOnly": true,
          "deprecated": true,
          "type": "integer",
          "format": "int32"
        },
        "progressPercent": {
          "description": "Output only. The current progress in percentage of the cutover job.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "error": {
          "description": "Output only. Provides details for the errors that led to the Cutover Job's state.",
          "readOnly": true,
          "$ref": "Status"
        },
        "stateMessage": {
          "description": "Output only. A message providing possible extra details about the current state.",
          "readOnly": true,
          "type": "string"
        },
        "steps": {
          "description": "Output only. The cutover steps list representing its progress.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "CutoverStep"
          }
        }
      }
    },
    "CutoverStep": {
      "id": "CutoverStep",
      "description": "CutoverStep holds information about the cutover step progress.",
      "type": "object",
      "properties": {
        "previousReplicationCycle": {
          "description": "A replication cycle prior cutover step.",
          "$ref": "ReplicationCycle"
        },
        "shuttingDownSourceVm": {
          "description": "Shutting down VM step.",
          "$ref": "ShuttingDownSourceVMStep"
        },
        "finalSync": {
          "description": "Final sync step.",
          "$ref": "ReplicationCycle"
        },
        "preparingVmDisks": {
          "description": "Preparing VM disks step.",
          "$ref": "PreparingVMDisksStep"
        },
        "instantiatingMigratedVm": {
          "description": "Instantiating migrated VM step.",
          "$ref": "InstantiatingMigratedVMStep"
        },
        "startTime": {
          "description": "The time the step has started.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The time the step has ended.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "ShuttingDownSourceVMStep": {
      "id": "ShuttingDownSourceVMStep",
      "description": "ShuttingDownSourceVMStep contains specific step details.",
      "type": "object",
      "properties": {}
    },
    "CutoverForecast": {
      "id": "CutoverForecast",
      "description": "CutoverForecast holds information about future CutoverJobs of a MigratingVm.",
      "type": "object",
      "properties": {
        "estimatedCutoverJobDuration": {
          "description": "Output only. Estimation of the CutoverJob duration.",
          "readOnly": true,
          "type": "string",
          "format": "google-duration"
        }
      }
    },
    "ListMigratingVmsResponse": {
      "id": "ListMigratingVmsResponse",
      "description": "Response message for 'ListMigratingVms' request.",
      "type": "object",
      "properties": {
        "migratingVms": {
          "description": "Output only. The list of Migrating VMs response.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "MigratingVm"
          }
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true,
          "type": "string"
        },
        "unreachable": {
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StartMigrationRequest": {
      "id": "StartMigrationRequest",
      "description": "Request message for 'StartMigrationRequest' request.",
      "type": "object",
      "properties": {}
    },
    "ResumeMigrationRequest": {
      "id": "ResumeMigrationRequest",
      "description": "Request message for 'ResumeMigration' request.",
      "type": "object",
      "properties": {}
    },
    "PauseMigrationRequest": {
      "id": "PauseMigrationRequest",
      "description": "Request message for 'PauseMigration' request.",
      "type": "object",
      "properties": {}
    },
    "FinalizeMigrationRequest": {
      "id": "FinalizeMigrationRequest",
      "description": "Request message for 'FinalizeMigration' request.",
      "type": "object",
      "properties": {}
    },
    "CancelCloneJobRequest": {
      "id": "CancelCloneJobRequest",
      "description": "Request message for 'CancelCloneJob' request.",
      "type": "object",
      "properties": {}
    },
    "ListCloneJobsResponse": {
      "id": "ListCloneJobsResponse",
      "description": "Response message for 'ListCloneJobs' request.",
      "type": "object",
      "properties": {
        "cloneJobs": {
          "description": "Output only. The list of clone jobs response.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "CloneJob"
          }
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true,
          "type": "string"
        },
        "unreachable": {
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CancelCutoverJobRequest": {
      "id": "CancelCutoverJobRequest",
      "description": "Request message for 'CancelCutoverJob' request.",
      "type": "object",
      "properties": {}
    },
    "ListCutoverJobsResponse": {
      "id": "ListCutoverJobsResponse",
      "description": "Response message for 'ListCutoverJobs' request.",
      "type": "object",
      "properties": {
        "cutoverJobs": {
          "description": "Output only. The list of cutover jobs response.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "CutoverJob"
          }
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true,
          "type": "string"
        },
        "unreachable": {
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListGroupsResponse": {
      "id": "ListGroupsResponse",
      "description": "Response message for 'ListGroups' request.",
      "type": "object",
      "properties": {
        "groups": {
          "description": "Output only. The list of groups response.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Group"
          }
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true,
          "type": "string"
        },
        "unreachable": {
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Group": {
      "id": "Group",
      "description": "Describes message for 'Group' resource. The Group is a collections of several MigratingVms.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The Group name.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The create time timestamp.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The update time timestamp.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "description": "User-provided description of the group.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name is a user defined name for this group which can be updated.",
          "type": "string"
        },
        "migrationTargetType": {
          "description": "Immutable. The target type of this group.",
          "type": "string",
          "enumDescriptions": [
            "Group type is not specified. This defaults to Compute Engine targets.",
            "All MigratingVMs in the group must have Compute Engine targets.",
            "All MigratingVMs in the group must have Compute Engine Disks targets."
          ],
          "enum": [
            "MIGRATION_TARGET_TYPE_UNSPECIFIED",
            "MIGRATION_TARGET_TYPE_GCE",
            "MIGRATION_TARGET_TYPE_DISKS"
          ]
        }
      }
    },
    "AddGroupMigrationRequest": {
      "id": "AddGroupMigrationRequest",
      "description": "Request message for 'AddGroupMigration' request.",
      "type": "object",
      "properties": {
        "migratingVm": {
          "description": "The full path name of the MigratingVm to add.",
          "type": "string"
        }
      }
    },
    "RemoveGroupMigrationRequest": {
      "id": "RemoveGroupMigrationRequest",
      "description": "Request message for 'RemoveMigration' request.",
      "type": "object",
      "properties": {
        "migratingVm": {
          "description": "The MigratingVm to remove.",
          "type": "string"
        }
      }
    },
    "ListTargetProjectsResponse": {
      "id": "ListTargetProjectsResponse",
      "description": "Response message for 'ListTargetProjects' call.",
      "type": "object",
      "properties": {
        "targetProjects": {
          "description": "Output only. The list of target response.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "TargetProject"
          }
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true,
          "type": "string"
        },
        "unreachable": {
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TargetProject": {
      "id": "TargetProject",
      "description": "TargetProject message represents a target Compute Engine project for a migration or a clone.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the target project.",
          "readOnly": true,
          "type": "string"
        },
        "project": {
          "description": "Required. The target project ID (number) or project name.",
          "type": "string"
        },
        "description": {
          "description": "The target project's description.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time this target project resource was created (not related to when the Compute Engine project it points to was created).",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The last time the target project resource was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "ListReplicationCyclesResponse": {
      "id": "ListReplicationCyclesResponse",
      "description": "Response message for 'ListReplicationCycles' request.",
      "type": "object",
      "properties": {
        "replicationCycles": {
          "description": "Output only. The list of replication cycles response.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "ReplicationCycle"
          }
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true,
          "type": "string"
        },
        "unreachable": {
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListImageImportsResponse": {
      "id": "ListImageImportsResponse",
      "description": "Response message for 'ListImageImports' call.",
      "type": "object",
      "properties": {
        "imageImports": {
          "description": "Output only. The list of target response.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "ImageImport"
          }
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true,
          "type": "string"
        },
        "unreachable": {
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ImageImport": {
      "id": "ImageImport",
      "description": "ImageImport describes the configuration of the image import to run.",
      "type": "object",
      "properties": {
        "cloudStorageUri": {
          "description": "Immutable. The path to the Cloud Storage file from which the image should be imported.",
          "type": "string"
        },
        "diskImageTargetDefaults": {
          "description": "Immutable. Target details for importing a disk image, will be used by ImageImportJob.",
          "$ref": "DiskImageTargetDetails"
        },
        "name": {
          "description": "Output only. The resource path of the ImageImport.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time the image import was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "recentImageImportJobs": {
          "description": "Output only. The result of the most recent runs for this ImageImport. All jobs for this ImageImport can be listed via ListImageImportJobs.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "ImageImportJob"
          }
        },
        "encryption": {
          "description": "Immutable. The encryption details used by the image import process during the image adaptation for Compute Engine.",
          "$ref": "Encryption"
        }
      }
    },
    "DiskImageTargetDetails": {
      "id": "DiskImageTargetDetails",
      "description": "The target details of the image resource that will be created by the import job.",
      "type": "object",
      "properties": {
        "osAdaptationParameters": {
          "description": "Optional. Use to set the parameters relevant for the OS adaptation process.",
          "$ref": "ImageImportOsAdaptationParameters"
        },
        "dataDiskImageImport": {
          "description": "Optional. Use to skip OS adaptation process.",
          "$ref": "DataDiskImageImport"
        },
        "imageName": {
          "description": "Required. The name of the image to be created.",
          "type": "string"
        },
        "targetProject": {
          "description": "Required. Reference to the TargetProject resource that represents the target project in which the imported image will be created.",
          "type": "string"
        },
        "description": {
          "description": "Optional. An optional description of the image.",
          "type": "string"
        },
        "familyName": {
          "description": "Optional. The name of the image family to which the new image belongs.",
          "type": "string"
        },
        "labels": {
          "description": "Optional. A map of labels to associate with the image.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "additionalLicenses": {
          "description": "Optional. Additional licenses to assign to the image.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "singleRegionStorage": {
          "description": "Optional. Set to true to set the image storageLocations to the single region of the import job. When false, the closest multi-region is selected.",
          "type": "boolean"
        },
        "encryption": {
          "description": "Immutable. The encryption to apply to the image.",
          "$ref": "Encryption"
        }
      }
    },
    "ImageImportOsAdaptationParameters": {
      "id": "ImageImportOsAdaptationParameters",
      "description": "Parameters affecting the OS adaptation process.",
      "type": "object",
      "properties": {
        "generalize": {
          "description": "Optional. Set to true in order to generalize the imported image. The generalization process enables co-existence of multiple VMs created from the same image. For Windows, generalizing the image removes computer-specific information such as installed drivers and the computer security identifier (SID).",
          "type": "boolean"
        },
        "licenseType": {
          "description": "Optional. Choose which type of license to apply to the imported image.",
          "type": "string",
          "enumDescriptions": [
            "The license type is the default for the OS.",
            "The license type is Pay As You Go license type.",
            "The license type is Bring Your Own License type."
          ],
          "enum": [
            "COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT",
            "COMPUTE_ENGINE_LICENSE_TYPE_PAYG",
            "COMPUTE_ENGINE_LICENSE_TYPE_BYOL"
          ]
        }
      }
    },
    "DataDiskImageImport": {
      "id": "DataDiskImageImport",
      "description": "Mentions that the image import is not using OS adaptation process.",
      "type": "object",
      "properties": {}
    },
    "ImageImportJob": {
      "id": "ImageImportJob",
      "description": "ImageImportJob describes the progress and result of an image import.",
      "type": "object",
      "properties": {
        "cloudStorageUri": {
          "description": "Output only. The path to the Cloud Storage file from which the image should be imported.",
          "readOnly": true,
          "type": "string"
        },
        "diskImageTargetDetails": {
          "description": "Output only. Target details used to import a disk image.",
          "readOnly": true,
          "$ref": "DiskImageTargetDetails"
        },
        "name": {
          "description": "Output only. The resource path of the ImageImportJob.",
          "readOnly": true,
          "type": "string"
        },
        "createdResources": {
          "description": "Output only. The resource paths of the resources created by the image import job.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only. The state of the image import.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The state is unknown.",
            "The image import has not yet started.",
            "The image import is active and running.",
            "The image import has finished successfully.",
            "The image import has finished with errors.",
            "The image import is being cancelled.",
            "The image import was cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLING",
            "CANCELLED"
          ]
        },
        "createTime": {
          "description": "Output only. The time the image import was created (as an API call, not when it was actually created in the target).",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the image import was ended.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "errors": {
          "description": "Output only. Provides details on the error that led to the image import state in case of an error.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Status"
          }
        },
        "warnings": {
          "description": "Output only. Warnings that occurred during the image import.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "MigrationWarning"
          }
        },
        "steps": {
          "description": "Output only. The image import steps list representing its progress.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "ImageImportStep"
          }
        }
      }
    },
    "ImageImportStep": {
      "id": "ImageImportStep",
      "description": "ImageImportStep holds information about the image import step progress.",
      "type": "object",
      "properties": {
        "initializing": {
          "description": "Initializing step.",
          "$ref": "InitializingImageImportStep"
        },
        "loadingSourceFiles": {
          "description": "Loading source files step.",
          "$ref": "LoadingImageSourceFilesStep"
        },
        "adaptingOs": {
          "description": "Adapting OS step.",
          "$ref": "AdaptingOSStep"
        },
        "creatingImage": {
          "description": "Creating image step.",
          "$ref": "CreatingImageStep"
        },
        "startTime": {
          "description": "Output only. The time the step has started.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the step has ended.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "InitializingImageImportStep": {
      "id": "InitializingImageImportStep",
      "description": "InitializingImageImportStep contains specific step details.",
      "type": "object",
      "properties": {}
    },
    "LoadingImageSourceFilesStep": {
      "id": "LoadingImageSourceFilesStep",
      "description": "LoadingImageSourceFilesStep contains specific step details.",
      "type": "object",
      "properties": {}
    },
    "CreatingImageStep": {
      "id": "CreatingImageStep",
      "description": "CreatingImageStep contains specific step details.",
      "type": "object",
      "properties": {}
    },
    "ListImageImportJobsResponse": {
      "id": "ListImageImportJobsResponse",
      "description": "Response message for 'ListImageImportJobs' call.",
      "type": "object",
      "properties": {
        "imageImportJobs": {
          "description": "Output only. The list of target response.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "ImageImportJob"
          }
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true,
          "type": "string"
        },
        "unreachable": {
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CancelImageImportJobRequest": {
      "id": "CancelImageImportJobRequest",
      "description": "Request message for 'CancelImageImportJob' request.",
      "type": "object",
      "properties": {}
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents a Google Cloud location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "MigrationError": {
      "id": "MigrationError",
      "description": "Represents migration resource error information that can be used with google.rpc.Status message. MigrationError is used to present the user with error information in migration operations.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Output only. The error code.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is not used.",
            "Migrate to Virtual Machines encountered an unknown error.",
            "Migrate to Virtual Machines encountered an error while validating replication source health.",
            "Migrate to Virtual Machines encountered an error during source data operation.",
            "Migrate to Virtual Machines encountered an error during target data operation.",
            "Migrate to Virtual Machines encountered an error during OS adaptation.",
            "Migrate to Virtual Machines encountered an error in clone operation.",
            "Migrate to Virtual Machines encountered an error in cutover operation.",
            "Migrate to Virtual Machines encountered an error during utilization report creation.",
            "Migrate to Virtual Machines encountered an error during appliance upgrade.",
            "Migrate to Virtual Machines encountered an error in image import operation."
          ],
          "enum": [
            "ERROR_CODE_UNSPECIFIED",
            "UNKNOWN_ERROR",
            "SOURCE_VALIDATION_ERROR",
            "SOURCE_REPLICATION_ERROR",
            "TARGET_REPLICATION_ERROR",
            "OS_ADAPTATION_ERROR",
            "CLONE_ERROR",
            "CUTOVER_ERROR",
            "UTILIZATION_REPORT_ERROR",
            "APPLIANCE_UPGRADE_ERROR",
            "IMAGE_IMPORT_ERROR"
          ]
        },
        "errorMessage": {
          "description": "Output only. The localized error message.",
          "readOnly": true,
          "$ref": "LocalizedMessage"
        },
        "actionItem": {
          "description": "Output only. Suggested action for solving the error.",
          "readOnly": true,
          "$ref": "LocalizedMessage"
        },
        "helpLinks": {
          "description": "Output only. URL(s) pointing to additional information on handling the current error.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Link"
          }
        },
        "errorTime": {
          "description": "Output only. The time the error occurred.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "id": "vmmigration:v1alpha1",
  "basePath": "",
  "servicePath": "",
  "batchPath": "batch",
  "kind": "discovery#restDescription"
}

{
  "name": "tagmanager",
  "batchPath": "batch",
  "id": "tagmanager:v2",
  "title": "Tag Manager API",
  "mtlsRootUrl": "https://tagmanager.mtls.googleapis.com/",
  "kind": "discovery#restDescription",
  "ownerName": "Google",
  "discoveryVersion": "v1",
  "resources": {
    "accounts": {
      "resources": {
        "containers": {
          "methods": {
            "delete": {
              "description": "Deletes a Container.",
              "id": "tagmanager.accounts.containers.delete",
              "path": "tagmanager/v2/{+path}",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.delete.containers"
              ],
              "parameterOrder": [
                "path"
              ],
              "parameters": {
                "path": {
                  "required": true,
                  "type": "string",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "location": "path",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}"
                }
              },
              "httpMethod": "DELETE"
            },
            "move_tag_id": {
              "id": "tagmanager.accounts.containers.move_tag_id",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:move_tag_id",
              "httpMethod": "POST",
              "response": {
                "$ref": "Container"
              },
              "description": "Move Tag ID out of a Container.",
              "path": "tagmanager/v2/{+path}:move_tag_id",
              "parameterOrder": [
                "path"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "parameters": {
                "tagName": {
                  "description": "The name for the newly created tag.",
                  "location": "query",
                  "type": "string"
                },
                "copySettings": {
                  "location": "query",
                  "description": "Whether or not to copy tag settings from this tag to the new tag.",
                  "type": "boolean"
                },
                "copyTermsOfService": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Must be set to true to accept all terms of service agreements copied from the current tag to the newly created tag. If this bit is false, the operation will fail."
                },
                "tagId": {
                  "type": "string",
                  "description": "Tag ID to be removed from the current Container.",
                  "location": "query"
                },
                "path": {
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "location": "path"
                },
                "copyUsers": {
                  "description": "Whether or not to copy users from this tag to the new tag.",
                  "type": "boolean",
                  "location": "query"
                },
                "allowUserPermissionFeatureUpdate": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail."
                }
              }
            },
            "create": {
              "httpMethod": "POST",
              "description": "Creates a Container.",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "request": {
                "$ref": "Container"
              },
              "response": {
                "$ref": "Container"
              },
              "path": "tagmanager/v2/{+parent}/containers",
              "parameterOrder": [
                "parent"
              ],
              "id": "tagmanager.accounts.containers.create",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers",
              "parameters": {
                "parent": {
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}.",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^accounts/[^/]+$"
                }
              }
            },
            "combine": {
              "path": "tagmanager/v2/{+path}:combine",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "httpMethod": "POST",
              "description": "Combines Containers.",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:combine",
              "parameterOrder": [
                "path"
              ],
              "parameters": {
                "containerId": {
                  "location": "query",
                  "type": "string",
                  "description": "ID of container that will be merged into the current container."
                },
                "path": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "required": true,
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}"
                },
                "settingSource": {
                  "location": "query",
                  "type": "string",
                  "enum": [
                    "settingSourceUnspecified",
                    "current",
                    "other"
                  ],
                  "description": "Specify the source of config setting after combine",
                  "enumDescriptions": [
                    "",
                    "Keep the current container config setting after combine",
                    "Use config setting from the other tag after combine"
                  ]
                },
                "allowUserPermissionFeatureUpdate": {
                  "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail.",
                  "location": "query",
                  "type": "boolean"
                }
              },
              "id": "tagmanager.accounts.containers.combine",
              "response": {
                "$ref": "Container"
              }
            },
            "snippet": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:snippet",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "httpMethod": "GET",
              "parameters": {
                "path": {
                  "required": true,
                  "description": "Container snippet's API relative path. Example: accounts/{account_id}/containers/{container_id}:snippet",
                  "type": "string",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "location": "path"
                }
              },
              "id": "tagmanager.accounts.containers.snippet",
              "path": "tagmanager/v2/{+path}:snippet",
              "parameterOrder": [
                "path"
              ],
              "response": {
                "$ref": "GetContainerSnippetResponse"
              },
              "description": "Gets the tagging snippet for a Container."
            },
            "lookup": {
              "response": {
                "$ref": "Container"
              },
              "flatPath": "tagmanager/v2/accounts/containers:lookup",
              "parameters": {
                "destinationId": {
                  "type": "string",
                  "description": "Destination ID linked to a GTM Container, e.g. AW-123456789. Example: accounts/containers:lookup?destination_id={destination_id}.",
                  "location": "query"
                }
              },
              "httpMethod": "GET",
              "path": "tagmanager/v2/accounts/containers:lookup",
              "parameterOrder": [],
              "id": "tagmanager.accounts.containers.lookup",
              "description": "Looks up a Container by destination ID.",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ]
            },
            "list": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers",
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^accounts/[^/]+$",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}."
                },
                "pageToken": {
                  "type": "string",
                  "description": "Continuation token for fetching the next page of results.",
                  "location": "query"
                }
              },
              "path": "tagmanager/v2/{+parent}/containers",
              "description": "Lists all Containers that belongs to a GTM Account.",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListContainersResponse"
              },
              "id": "tagmanager.accounts.containers.list",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ]
            },
            "get": {
              "path": "tagmanager/v2/{+path}",
              "httpMethod": "GET",
              "response": {
                "$ref": "Container"
              },
              "description": "Gets a Container.",
              "parameters": {
                "path": {
                  "type": "string",
                  "required": true,
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "parameterOrder": [
                "path"
              ],
              "id": "tagmanager.accounts.containers.get"
            },
            "update": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "response": {
                "$ref": "Container"
              },
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "request": {
                "$ref": "Container"
              },
              "description": "Updates a Container.",
              "parameters": {
                "fingerprint": {
                  "type": "string",
                  "location": "query",
                  "description": "When provided, this fingerprint must match the fingerprint of the container in storage."
                },
                "path": {
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "type": "string",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "required": true,
                  "location": "path"
                }
              },
              "parameterOrder": [
                "path"
              ],
              "path": "tagmanager/v2/{+path}",
              "id": "tagmanager.accounts.containers.update"
            }
          },
          "resources": {
            "environments": {
              "methods": {
                "create": {
                  "request": {
                    "$ref": "Environment"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments",
                  "id": "tagmanager.accounts.containers.environments.create",
                  "response": {
                    "$ref": "Environment"
                  },
                  "path": "tagmanager/v2/{+parent}/environments",
                  "parameters": {
                    "parent": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "httpMethod": "POST",
                  "description": "Creates a GTM Environment.",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "update": {
                  "path": "tagmanager/v2/{+path}",
                  "request": {
                    "$ref": "Environment"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "location": "path"
                    },
                    "fingerprint": {
                      "location": "query",
                      "type": "string",
                      "description": "When provided, this fingerprint must match the fingerprint of the environment in storage."
                    }
                  },
                  "id": "tagmanager.accounts.containers.environments.update",
                  "httpMethod": "PUT",
                  "description": "Updates a GTM Environment.",
                  "response": {
                    "$ref": "Environment"
                  },
                  "parameterOrder": [
                    "path"
                  ]
                },
                "reauthorize": {
                  "parameters": {
                    "path": {
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}:reauthorize",
                  "parameterOrder": [
                    "path"
                  ],
                  "request": {
                    "$ref": "Environment"
                  },
                  "httpMethod": "POST",
                  "path": "tagmanager/v2/{+path}:reauthorize",
                  "id": "tagmanager.accounts.containers.environments.reauthorize",
                  "description": "Re-generates the authorization code for a GTM Environment.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.publish"
                  ],
                  "response": {
                    "$ref": "Environment"
                  }
                },
                "get": {
                  "path": "tagmanager/v2/{+path}",
                  "description": "Gets a GTM Environment.",
                  "parameters": {
                    "path": {
                      "location": "path",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "id": "tagmanager.accounts.containers.environments.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "response": {
                    "$ref": "Environment"
                  },
                  "httpMethod": "GET"
                },
                "delete": {
                  "description": "Deletes a GTM Environment.",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "path": {
                      "type": "string",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "location": "path",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "path": "tagmanager/v2/{+path}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "id": "tagmanager.accounts.containers.environments.delete",
                  "parameterOrder": [
                    "path"
                  ]
                },
                "list": {
                  "path": "tagmanager/v2/{+parent}/environments",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "Continuation token for fetching the next page of results.",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true,
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments",
                  "response": {
                    "$ref": "ListEnvironmentsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "id": "tagmanager.accounts.containers.environments.list",
                  "httpMethod": "GET",
                  "description": "Lists all GTM Environments of a GTM Container."
                }
              }
            },
            "version_headers": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "id": "tagmanager.accounts.containers.version_headers.list",
                  "response": {
                    "$ref": "ListContainerVersionsResponse"
                  },
                  "description": "Lists all Container Versions of a GTM Container.",
                  "path": "tagmanager/v2/{+parent}/version_headers",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameters": {
                    "includeDeleted": {
                      "type": "boolean",
                      "description": "Also retrieve deleted (archived) versions when true.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Continuation token for fetching the next page of results.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers"
                },
                "latest": {
                  "id": "tagmanager.accounts.containers.version_headers.latest",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "tagmanager/v2/{+parent}/version_headers:latest",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers:latest",
                  "response": {
                    "$ref": "ContainerVersionHeader"
                  },
                  "description": "Gets the latest container version header"
                }
              }
            },
            "versions": {
              "methods": {
                "undelete": {
                  "path": "tagmanager/v2/{+path}:undelete",
                  "id": "tagmanager.accounts.containers.versions.undelete",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:undelete",
                  "description": "Undeletes a Container Version.",
                  "parameterOrder": [
                    "path"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "location": "path",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ContainerVersion"
                  }
                },
                "live": {
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "parameters": {
                    "parent": {
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "type": "string",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "required": true
                    }
                  },
                  "id": "tagmanager.accounts.containers.versions.live",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions:live",
                  "httpMethod": "GET",
                  "description": "Gets the live (i.e. published) container version",
                  "path": "tagmanager/v2/{+parent}/versions:live"
                },
                "delete": {
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "httpMethod": "DELETE",
                  "path": "tagmanager/v2/{+path}",
                  "description": "Deletes a Container Version.",
                  "id": "tagmanager.accounts.containers.versions.delete"
                },
                "publish": {
                  "httpMethod": "POST",
                  "parameters": {
                    "fingerprint": {
                      "type": "string",
                      "description": "When provided, this fingerprint must match the fingerprint of the container version in storage.",
                      "location": "query"
                    },
                    "path": {
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}"
                    }
                  },
                  "description": "Publishes a Container Version.",
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.publish"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:publish",
                  "id": "tagmanager.accounts.containers.versions.publish",
                  "path": "tagmanager/v2/{+path}:publish",
                  "response": {
                    "$ref": "PublishContainerVersionResponse"
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "path": "tagmanager/v2/{+path}",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "id": "tagmanager.accounts.containers.versions.get",
                  "parameterOrder": [
                    "path"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "containerVersionId": {
                      "description": "The GTM ContainerVersion ID. Specify published to retrieve the currently published version.",
                      "type": "string",
                      "location": "query"
                    },
                    "path": {
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "location": "path",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "description": "Gets a Container Version."
                },
                "update": {
                  "id": "tagmanager.accounts.containers.versions.update",
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "request": {
                    "$ref": "ContainerVersion"
                  },
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "fingerprint": {
                      "location": "query",
                      "type": "string",
                      "description": "When provided, this fingerprint must match the fingerprint of the container version in storage."
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "parameterOrder": [
                    "path"
                  ],
                  "httpMethod": "PUT",
                  "description": "Updates a Container Version.",
                  "path": "tagmanager/v2/{+path}"
                },
                "set_latest": {
                  "httpMethod": "POST",
                  "path": "tagmanager/v2/{+path}:set_latest",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:set_latest",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "id": "tagmanager.accounts.containers.versions.set_latest",
                  "description": "Sets the latest version used for synchronization of workspaces when detecting conflicts and errors.",
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "ContainerVersion"
                  }
                }
              }
            },
            "destinations": {
              "methods": {
                "link": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "description": "Adds a Destination to this Container and removes it from the Container to which it is currently linked.",
                  "parameters": {
                    "allowUserPermissionFeatureUpdate": {
                      "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "parent": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path",
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "type": "string",
                      "required": true
                    },
                    "destinationId": {
                      "location": "query",
                      "type": "string",
                      "description": "Destination ID to be linked to the current container."
                    }
                  },
                  "path": "tagmanager/v2/{+parent}/destinations:link",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Destination"
                  },
                  "id": "tagmanager.accounts.containers.destinations.link",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations:link"
                },
                "list": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations",
                  "path": "tagmanager/v2/{+parent}/destinations",
                  "parameters": {
                    "parent": {
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "ListDestinationsResponse"
                  },
                  "httpMethod": "GET",
                  "id": "tagmanager.accounts.containers.destinations.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists all Destinations linked to a GTM Container.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ]
                },
                "get": {
                  "description": "Gets a Destination.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations/{destinationsId}",
                  "id": "tagmanager.accounts.containers.destinations.get",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "Destination"
                  },
                  "path": "tagmanager/v2/{+path}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameters": {
                    "path": {
                      "description": "Google Tag Destination's API relative path. Example: accounts/{account_id}/containers/{container_id}/destinations/{destination_link_id}",
                      "required": true,
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/destinations/[^/]+$",
                      "location": "path"
                    }
                  }
                }
              }
            },
            "workspaces": {
              "methods": {
                "update": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.update",
                  "response": {
                    "$ref": "Workspace"
                  },
                  "path": "tagmanager/v2/{+path}",
                  "httpMethod": "PUT",
                  "description": "Updates a Workspace.",
                  "request": {
                    "$ref": "Workspace"
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "parameters": {
                    "path": {
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                    },
                    "fingerprint": {
                      "description": "When provided, this fingerprint must match the fingerprint of the workspace in storage.",
                      "type": "string",
                      "location": "query"
                    }
                  }
                },
                "create_version": {
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:create_version",
                  "request": {
                    "$ref": "CreateContainerVersionRequestVersionOptions"
                  },
                  "path": "tagmanager/v2/{+path}:create_version",
                  "response": {
                    "$ref": "CreateContainerVersionResponse"
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "httpMethod": "POST",
                  "id": "tagmanager.accounts.containers.workspaces.create_version",
                  "description": "Creates a Container Version from the entities present in the workspace, deletes the workspace, and sets the base container version to the newly created version.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ]
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "description": "Continuation token for fetching the next page of results.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "description": "Lists all Workspaces that belong to a GTM Container.",
                  "response": {
                    "$ref": "ListWorkspacesResponse"
                  },
                  "id": "tagmanager.accounts.containers.workspaces.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "tagmanager/v2/{+parent}/workspaces",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces",
                  "httpMethod": "GET"
                },
                "resolve_conflict": {
                  "httpMethod": "POST",
                  "id": "tagmanager.accounts.containers.workspaces.resolve_conflict",
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "path": "tagmanager/v2/{+path}:resolve_conflict",
                  "parameters": {
                    "fingerprint": {
                      "description": "When provided, this fingerprint must match the fingerprint of the entity_in_workspace in the merge conflict.",
                      "location": "query",
                      "type": "string"
                    },
                    "path": {
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "Entity"
                  },
                  "description": "Resolves a merge conflict for a workspace entity by updating it to the resolved entity passed in the request.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:resolve_conflict"
                },
                "getStatus": {
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "location": "path",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "type": "string",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GetWorkspaceStatusResponse"
                  },
                  "path": "tagmanager/v2/{+path}/status",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/status",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "httpMethod": "GET",
                  "id": "tagmanager.accounts.containers.workspaces.getStatus",
                  "description": "Finds conflicting and modified entities in the workspace."
                },
                "delete": {
                  "path": "tagmanager/v2/{+path}",
                  "parameters": {
                    "path": {
                      "type": "string",
                      "location": "path",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "required": true
                    }
                  },
                  "httpMethod": "DELETE",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.delete.containers"
                  ],
                  "parameterOrder": [
                    "path"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.delete",
                  "description": "Deletes a Workspace."
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.create",
                  "response": {
                    "$ref": "Workspace"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "tagmanager/v2/{+parent}/workspaces",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "Workspace"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces",
                  "description": "Creates a Workspace."
                },
                "get": {
                  "path": "tagmanager/v2/{+path}",
                  "description": "Gets a Workspace.",
                  "id": "tagmanager.accounts.containers.workspaces.get",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "response": {
                    "$ref": "Workspace"
                  },
                  "parameters": {
                    "path": {
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "required": true,
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "path"
                  ]
                },
                "sync": {
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "SyncWorkspaceResponse"
                  },
                  "id": "tagmanager.accounts.containers.workspaces.sync",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:sync",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "path": {
                      "type": "string",
                      "location": "path",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                    }
                  },
                  "path": "tagmanager/v2/{+path}:sync",
                  "description": "Syncs a workspace to the latest container version by updating all unmodified workspace entities and displaying conflicts for modified entities."
                },
                "quick_preview": {
                  "path": "tagmanager/v2/{+path}:quick_preview",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:quick_preview",
                  "description": "Quick previews a workspace by creating a fake container version from all entities in the provided workspace.",
                  "httpMethod": "POST",
                  "id": "tagmanager.accounts.containers.workspaces.quick_preview",
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "parameters": {
                    "path": {
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "QuickPreviewResponse"
                  }
                }
              },
              "resources": {
                "gtag_config": {
                  "methods": {
                    "list": {
                      "path": "tagmanager/v2/{+parent}/gtag_config",
                      "response": {
                        "$ref": "ListGtagConfigResponse"
                      },
                      "description": "Lists all Google tag configs in a Container.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "description": "Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "create": {
                      "response": {
                        "$ref": "GtagConfig"
                      },
                      "request": {
                        "$ref": "GtagConfig"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config",
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true
                        }
                      },
                      "description": "Creates a Google tag config.",
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+parent}/gtag_config",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "update": {
                      "response": {
                        "$ref": "GtagConfig"
                      },
                      "description": "Updates a Google tag config.",
                      "request": {
                        "$ref": "GtagConfig"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "PUT",
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.update",
                      "parameters": {
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the config in storage."
                        },
                        "path": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}"
                        }
                      }
                    },
                    "delete": {
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.delete",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "description": "Deletes a Google tag config.",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$",
                          "required": true,
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}",
                          "location": "path"
                        }
                      },
                      "path": "tagmanager/v2/{+path}",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "DELETE"
                    },
                    "get": {
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.get",
                      "parameters": {
                        "path": {
                          "required": true,
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}",
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "GtagConfig"
                      },
                      "description": "Gets a Google tag config."
                    }
                  }
                },
                "variables": {
                  "methods": {
                    "revert": {
                      "path": "tagmanager/v2/{+path}:revert",
                      "description": "Reverts changes to a GTM Variable in a GTM Workspace.",
                      "httpMethod": "POST",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}:revert",
                      "id": "tagmanager.accounts.containers.workspaces.variables.revert",
                      "parameters": {
                        "path": {
                          "required": true,
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "location": "path"
                        },
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the variable in storage.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "RevertVariableResponse"
                      }
                    },
                    "update": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "Variable"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.variables.update",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "parameters": {
                        "fingerprint": {
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the variable in storage.",
                          "location": "query"
                        },
                        "path": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}"
                        }
                      },
                      "description": "Updates a GTM Variable.",
                      "path": "tagmanager/v2/{+path}",
                      "request": {
                        "$ref": "Variable"
                      },
                      "httpMethod": "PUT"
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables",
                      "description": "Creates a GTM Variable.",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "Variable"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+parent}/variables",
                      "request": {
                        "$ref": "Variable"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.variables.create"
                    },
                    "delete": {
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.variables.delete",
                      "description": "Deletes a GTM Variable.",
                      "parameters": {
                        "path": {
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "location": "path",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "DELETE"
                    },
                    "get": {
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Variable"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "path": "tagmanager/v2/{+path}",
                      "description": "Gets a GTM Variable.",
                      "id": "tagmanager.accounts.containers.workspaces.variables.get"
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/variables",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListVariablesResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.variables.list",
                      "httpMethod": "GET",
                      "description": "Lists all GTM Variables of a Container."
                    }
                  }
                },
                "tags": {
                  "methods": {
                    "revert": {
                      "description": "Reverts changes to a GTM Tag in a GTM Workspace.",
                      "id": "tagmanager.accounts.containers.workspaces.tags.revert",
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of thetag in storage.",
                          "type": "string"
                        },
                        "path": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}:revert",
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+path}:revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "RevertTagResponse"
                      }
                    },
                    "get": {
                      "parameters": {
                        "path": {
                          "type": "string",
                          "required": true,
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.tags.get",
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "Tag"
                      },
                      "description": "Gets a GTM Tag.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "httpMethod": "GET"
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Tag"
                      },
                      "path": "tagmanager/v2/{+parent}/tags",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.tags.create",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "Tag"
                      },
                      "description": "Creates a GTM Tag."
                    },
                    "list": {
                      "description": "Lists all GTM Tags of a Container.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags",
                      "id": "tagmanager.accounts.containers.workspaces.tags.list",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results."
                        },
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/tags",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListTagsResponse"
                      }
                    },
                    "update": {
                      "description": "Updates a GTM Tag.",
                      "id": "tagmanager.accounts.containers.workspaces.tags.update",
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "httpMethod": "PUT",
                      "response": {
                        "$ref": "Tag"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "request": {
                        "$ref": "Tag"
                      },
                      "parameters": {
                        "path": {
                          "type": "string",
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "location": "path",
                          "required": true
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the tag in storage.",
                          "type": "string",
                          "location": "query"
                        }
                      }
                    },
                    "delete": {
                      "description": "Deletes a GTM Tag.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.tags.delete",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "path": "tagmanager/v2/{+path}"
                    }
                  }
                },
                "transformations": {
                  "methods": {
                    "revert": {
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Reverts changes to a GTM Transformation in a GTM Workspace.",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "RevertTransformationResponse"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations/{transformationsId}:revert",
                      "id": "tagmanager.accounts.containers.workspaces.transformations.revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}:revert",
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the transformation in storage.",
                          "type": "string"
                        },
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/transformations/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "GTM Transformation's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/transformations/{transformation_id}",
                          "location": "path"
                        }
                      }
                    },
                    "get": {
                      "id": "tagmanager.accounts.containers.workspaces.transformations.get",
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations/{transformationsId}",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "response": {
                        "$ref": "Transformation"
                      },
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/transformations/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "GTM Transformation's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/transformations/{transformation_id}",
                          "location": "path"
                        }
                      },
                      "description": "Gets a GTM Transformation.",
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "delete": {
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.transformations.delete",
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "DELETE",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/transformations/[^/]+$",
                          "type": "string",
                          "description": "GTM Transformation's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/transformations/{transformation_id}",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Deletes a GTM Transformation.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations/{transformationsId}"
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.transformations.create",
                      "response": {
                        "$ref": "Transformation"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "tagmanager/v2/{+parent}/transformations",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations",
                      "request": {
                        "$ref": "Transformation"
                      },
                      "description": "Creates a GTM Transformation."
                    },
                    "list": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations",
                      "response": {
                        "$ref": "ListTransformationsResponse"
                      },
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.transformations.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists all GTM Transformations of a GTM container workspace.",
                      "path": "tagmanager/v2/{+parent}/transformations"
                    },
                    "update": {
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the transformation in storage."
                        },
                        "path": {
                          "description": "GTM Transformation's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/transformations/{transformation_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/transformations/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "Transformation"
                      },
                      "description": "Updates a GTM Transformation.",
                      "httpMethod": "PUT",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "Transformation"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.transformations.update",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations/{transformationsId}"
                    }
                  }
                },
                "zones": {
                  "methods": {
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Zone"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.zones.create",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "request": {
                        "$ref": "Zone"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones",
                      "description": "Creates a GTM Zone.",
                      "path": "tagmanager/v2/{+parent}/zones"
                    },
                    "update": {
                      "id": "tagmanager.accounts.containers.workspaces.zones.update",
                      "request": {
                        "$ref": "Zone"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "PUT",
                      "description": "Updates a GTM Zone.",
                      "path": "tagmanager/v2/{+path}",
                      "response": {
                        "$ref": "Zone"
                      },
                      "parameters": {
                        "path": {
                          "location": "path",
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$"
                        },
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the zone in storage."
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}",
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "delete": {
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}",
                      "description": "Deletes a GTM Zone.",
                      "id": "tagmanager.accounts.containers.workspaces.zones.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "path": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "required": true,
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}"
                        }
                      },
                      "httpMethod": "DELETE"
                    },
                    "revert": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}:revert",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "location": "path",
                          "type": "string",
                          "required": true
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the zone in storage.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.zones.revert",
                      "description": "Reverts changes to a GTM Zone in a GTM Workspace.",
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "RevertZoneResponse"
                      },
                      "path": "tagmanager/v2/{+path}:revert"
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.zones.list",
                      "description": "Lists all GTM Zones of a GTM container workspace.",
                      "path": "tagmanager/v2/{+parent}/zones",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results."
                        },
                        "parent": {
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "response": {
                        "$ref": "ListZonesResponse"
                      }
                    },
                    "get": {
                      "description": "Gets a GTM Zone.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "response": {
                        "$ref": "Zone"
                      },
                      "httpMethod": "GET",
                      "path": "tagmanager/v2/{+path}",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.zones.get"
                    }
                  }
                },
                "built_in_variables": {
                  "methods": {
                    "delete": {
                      "description": "Deletes one or more GTM Built-In Variables.",
                      "httpMethod": "DELETE",
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.delete",
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "description": "GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/built_in_variables$",
                          "required": true,
                          "type": "string"
                        },
                        "type": {
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname",
                            "visitorRegion"
                          ],
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "type": "string",
                          "description": "The types of built-in variables to delete.",
                          "location": "query",
                          "repeated": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "revert": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables:revert",
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.revert",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "location": "path",
                          "description": "GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        },
                        "type": {
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname",
                            "visitorRegion"
                          ],
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "type": "string",
                          "location": "query",
                          "description": "The type of built-in variable to revert."
                        }
                      },
                      "response": {
                        "$ref": "RevertBuiltInVariableResponse"
                      },
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+path}/built_in_variables:revert",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Reverts changes to a GTM Built-In Variables in a GTM Workspace."
                    },
                    "create": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Creates one or more GTM Built-In Variables.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "CreateBuiltInVariableResponse"
                      },
                      "path": "tagmanager/v2/{+parent}/built_in_variables",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        },
                        "type": {
                          "description": "The types of built-in variables to enable.",
                          "location": "query",
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname",
                            "visitorRegion"
                          ],
                          "type": "string",
                          "repeated": true
                        }
                      },
                      "httpMethod": "POST",
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.create"
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.list",
                      "description": "Lists all the enabled Built-In Variables of a GTM Container.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "path": "tagmanager/v2/{+parent}/built_in_variables",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "response": {
                        "$ref": "ListEnabledBuiltInVariablesResponse"
                      },
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET"
                    }
                  }
                },
                "clients": {
                  "methods": {
                    "get": {
                      "response": {
                        "$ref": "Client"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.clients.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "description": "Gets a GTM Client.",
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "type": "string"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "update": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}",
                      "id": "tagmanager.accounts.containers.workspaces.clients.update",
                      "request": {
                        "$ref": "Client"
                      },
                      "httpMethod": "PUT",
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "required": true,
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "type": "string",
                          "location": "path"
                        },
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the client in storage."
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "Client"
                      },
                      "description": "Updates a GTM Client.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "create": {
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.clients.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "tagmanager/v2/{+parent}/clients",
                      "description": "Creates a GTM Client.",
                      "response": {
                        "$ref": "Client"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "Client"
                      }
                    },
                    "revert": {
                      "id": "tagmanager.accounts.containers.workspaces.clients.revert",
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the client in storage.",
                          "type": "string"
                        },
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "path": "tagmanager/v2/{+path}:revert",
                      "httpMethod": "POST",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}:revert",
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "RevertClientResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Reverts changes to a GTM Client in a GTM Workspace."
                    },
                    "list": {
                      "id": "tagmanager.accounts.containers.workspaces.clients.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListClientsResponse"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients",
                      "description": "Lists all GTM Clients of a GTM container workspace.",
                      "path": "tagmanager/v2/{+parent}/clients",
                      "parameters": {
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "delete": {
                      "description": "Deletes a GTM Client.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.clients.delete",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}",
                      "parameterOrder": [
                        "path"
                      ]
                    }
                  }
                },
                "templates": {
                  "methods": {
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a GTM Custom Template.",
                      "request": {
                        "$ref": "CustomTemplate"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.templates.create",
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "path": "tagmanager/v2/{+parent}/templates",
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "httpMethod": "POST"
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+parent}/templates",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates",
                      "id": "tagmanager.accounts.containers.workspaces.templates.list",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results."
                        },
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "ListTemplatesResponse"
                      },
                      "httpMethod": "GET",
                      "description": "Lists all GTM Templates of a GTM container workspace."
                    },
                    "revert": {
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}:revert",
                      "id": "tagmanager.accounts.containers.workspaces.templates.revert",
                      "description": "Reverts changes to a GTM Template in a GTM Workspace.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}:revert",
                      "httpMethod": "POST",
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the template in storage."
                        },
                        "path": {
                          "location": "path",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "RevertTemplateResponse"
                      }
                    },
                    "delete": {
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}",
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.templates.delete",
                      "parameters": {
                        "path": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}"
                        }
                      },
                      "description": "Deletes a GTM Template."
                    },
                    "update": {
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "path": {
                          "required": true,
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$"
                        },
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the templates in storage."
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.templates.update",
                      "request": {
                        "$ref": "CustomTemplate"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "description": "Updates a GTM Template.",
                      "httpMethod": "PUT"
                    },
                    "get": {
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "GET",
                      "id": "tagmanager.accounts.containers.workspaces.templates.get",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "location": "path",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "description": "Gets a GTM Template.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}"
                    }
                  }
                },
                "triggers": {
                  "methods": {
                    "delete": {
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "httpMethod": "DELETE",
                      "description": "Deletes a GTM Trigger.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "update": {
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Updates a GTM Trigger.",
                      "httpMethod": "PUT",
                      "response": {
                        "$ref": "Trigger"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.triggers.update",
                      "request": {
                        "$ref": "Trigger"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the trigger in storage.",
                          "type": "string",
                          "location": "query"
                        },
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "required": true,
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "get": {
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "Trigger"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.triggers.get",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "path": "tagmanager/v2/{+path}",
                      "description": "Gets a GTM Trigger."
                    },
                    "revert": {
                      "description": "Reverts changes to a GTM Trigger in a GTM Workspace.",
                      "parameters": {
                        "path": {
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "type": "string"
                        },
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the trigger in storage."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}:revert",
                      "response": {
                        "$ref": "RevertTriggerResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.triggers.revert",
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+path}:revert",
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Trigger"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers",
                      "description": "Creates a GTM Trigger.",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/triggers",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.create",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "request": {
                        "$ref": "Trigger"
                      }
                    },
                    "list": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.list",
                      "httpMethod": "GET",
                      "description": "Lists all GTM Triggers of a Container.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+parent}/triggers",
                      "parameters": {
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string"
                        },
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "ListTriggersResponse"
                      }
                    }
                  }
                },
                "folders": {
                  "methods": {
                    "create": {
                      "request": {
                        "$ref": "Folder"
                      },
                      "httpMethod": "POST",
                      "description": "Creates a GTM Folder.",
                      "id": "tagmanager.accounts.containers.workspaces.folders.create",
                      "path": "tagmanager/v2/{+parent}/folders",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders",
                      "response": {
                        "$ref": "Folder"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path"
                        }
                      }
                    },
                    "get": {
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "location": "path",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}"
                        }
                      },
                      "description": "Gets a GTM Folder.",
                      "response": {
                        "$ref": "Folder"
                      },
                      "httpMethod": "GET",
                      "id": "tagmanager.accounts.containers.workspaces.folders.get"
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders",
                      "path": "tagmanager/v2/{+parent}/folders",
                      "description": "Lists all GTM Folders of a Container.",
                      "response": {
                        "$ref": "ListFoldersResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.folders.list",
                      "parameters": {
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true
                        }
                      }
                    },
                    "entities": {
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "List all entities in a GTM Folder.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:entities",
                      "id": "tagmanager.accounts.containers.workspaces.folders.entities",
                      "path": "tagmanager/v2/{+path}:entities",
                      "httpMethod": "POST",
                      "parameters": {
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string",
                          "location": "query"
                        },
                        "path": {
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "FolderEntities"
                      }
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "description": "Deletes a GTM Folder.",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.folders.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "path": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}"
                        }
                      },
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}"
                    },
                    "revert": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "RevertFolderResponse"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:revert",
                      "description": "Reverts changes to a GTM Folder in a GTM Workspace.",
                      "id": "tagmanager.accounts.containers.workspaces.folders.revert",
                      "path": "tagmanager/v2/{+path}:revert",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}"
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the tag in storage.",
                          "location": "query"
                        }
                      }
                    },
                    "update": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}"
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the folder in storage.",
                          "location": "query"
                        }
                      },
                      "description": "Updates a GTM Folder.",
                      "httpMethod": "PUT",
                      "id": "tagmanager.accounts.containers.workspaces.folders.update",
                      "response": {
                        "$ref": "Folder"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "parameterOrder": [
                        "path"
                      ],
                      "request": {
                        "$ref": "Folder"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "move_entities_to_folder": {
                      "httpMethod": "POST",
                      "id": "tagmanager.accounts.containers.workspaces.folders.move_entities_to_folder",
                      "parameters": {
                        "tagId": {
                          "type": "string",
                          "repeated": true,
                          "description": "The tags to be moved to the folder.",
                          "location": "query"
                        },
                        "variableId": {
                          "repeated": true,
                          "type": "string",
                          "description": "The variables to be moved to the folder.",
                          "location": "query"
                        },
                        "triggerId": {
                          "location": "query",
                          "description": "The triggers to be moved to the folder.",
                          "repeated": true,
                          "type": "string"
                        },
                        "path": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "Folder"
                      },
                      "path": "tagmanager/v2/{+path}:move_entities_to_folder",
                      "description": "Moves entities to a GTM Folder. If {folder_id} in the request path equals 0, this will instead move entities out of the folder they currently belong to.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:move_entities_to_folder"
                    }
                  }
                }
              }
            }
          }
        },
        "user_permissions": {
          "methods": {
            "update": {
              "id": "tagmanager.accounts.user_permissions.update",
              "response": {
                "$ref": "UserPermission"
              },
              "request": {
                "$ref": "UserPermission"
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "httpMethod": "PUT",
              "parameters": {
                "path": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$"
                }
              },
              "description": "Updates a user's Account & Container access.",
              "path": "tagmanager/v2/{+path}",
              "parameterOrder": [
                "path"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ]
            },
            "list": {
              "path": "tagmanager/v2/{+parent}/user_permissions",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^accounts/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Continuation token for fetching the next page of results."
                }
              },
              "response": {
                "$ref": "ListUserPermissionsResponse"
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "id": "tagmanager.accounts.user_permissions.list",
              "description": "List all users that have access to the account along with Account and Container user access granted to each of them."
            },
            "create": {
              "request": {
                "$ref": "UserPermission"
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "UserPermission"
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "id": "tagmanager.accounts.user_permissions.create",
              "httpMethod": "POST",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions",
              "path": "tagmanager/v2/{+parent}/user_permissions",
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}",
                  "location": "path",
                  "required": true,
                  "pattern": "^accounts/[^/]+$"
                }
              },
              "description": "Creates a user's Account & Container access."
            },
            "get": {
              "response": {
                "$ref": "UserPermission"
              },
              "description": "Gets a user's Account & Container access.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "path": "tagmanager/v2/{+path}",
              "parameters": {
                "path": {
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "location": "path",
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "id": "tagmanager.accounts.user_permissions.get",
              "parameterOrder": [
                "path"
              ]
            },
            "delete": {
              "parameters": {
                "path": {
                  "type": "string",
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "id": "tagmanager.accounts.user_permissions.delete",
              "description": "Removes a user from the account, revoking access to it and all of its containers.",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "httpMethod": "DELETE",
              "path": "tagmanager/v2/{+path}",
              "parameterOrder": [
                "path"
              ]
            }
          }
        }
      },
      "methods": {
        "update": {
          "description": "Updates a GTM Account.",
          "request": {
            "$ref": "Account"
          },
          "parameters": {
            "path": {
              "required": true,
              "type": "string",
              "pattern": "^accounts/[^/]+$",
              "location": "path",
              "description": "GTM Account's API relative path. Example: accounts/{account_id}"
            },
            "fingerprint": {
              "description": "When provided, this fingerprint must match the fingerprint of the account in storage.",
              "location": "query",
              "type": "string"
            }
          },
          "httpMethod": "PUT",
          "response": {
            "$ref": "Account"
          },
          "id": "tagmanager.accounts.update",
          "path": "tagmanager/v2/{+path}",
          "flatPath": "tagmanager/v2/accounts/{accountsId}",
          "parameterOrder": [
            "path"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.manage.accounts"
          ]
        },
        "get": {
          "id": "tagmanager.accounts.get",
          "description": "Gets a GTM Account.",
          "httpMethod": "GET",
          "parameters": {
            "path": {
              "pattern": "^accounts/[^/]+$",
              "type": "string",
              "required": true,
              "location": "path",
              "description": "GTM Account's API relative path. Example: accounts/{account_id}"
            }
          },
          "flatPath": "tagmanager/v2/accounts/{accountsId}",
          "path": "tagmanager/v2/{+path}",
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.edit.containers",
            "https://www.googleapis.com/auth/tagmanager.manage.accounts",
            "https://www.googleapis.com/auth/tagmanager.readonly"
          ],
          "response": {
            "$ref": "Account"
          },
          "parameterOrder": [
            "path"
          ]
        },
        "list": {
          "path": "tagmanager/v2/accounts",
          "flatPath": "tagmanager/v2/accounts",
          "httpMethod": "GET",
          "description": "Lists all GTM Accounts that a user has access to.",
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.edit.containers",
            "https://www.googleapis.com/auth/tagmanager.manage.accounts",
            "https://www.googleapis.com/auth/tagmanager.readonly"
          ],
          "parameterOrder": [],
          "response": {
            "$ref": "ListAccountsResponse"
          },
          "id": "tagmanager.accounts.list",
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Continuation token for fetching the next page of results."
            },
            "includeGoogleTags": {
              "location": "query",
              "type": "boolean",
              "description": "Also retrieve accounts associated with Google Tag when true."
            }
          }
        }
      }
    }
  },
  "version": "v2",
  "canonicalName": "Tag Manager",
  "basePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "servicePath": "",
  "description": "This API allows clients to access and modify container and tag configuration.",
  "protocol": "rest",
  "schemas": {
    "Zone": {
      "properties": {
        "boundary": {
          "$ref": "ZoneBoundary",
          "description": "This Zone's boundary."
        },
        "typeRestriction": {
          "$ref": "ZoneTypeRestriction",
          "description": "This Zone's type restrictions."
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "childContainer": {
          "type": "array",
          "description": "Containers that are children of this Zone.",
          "items": {
            "$ref": "ZoneChildContainer"
          }
        },
        "path": {
          "description": "GTM Zone's API relative path.",
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Zone as computed at storage time. This value is recomputed whenever the zone is modified."
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Zone display name."
        },
        "zoneId": {
          "type": "string",
          "description": "The Zone ID uniquely identifies the GTM Zone."
        },
        "notes": {
          "description": "User notes on how to apply this zone in the container.",
          "type": "string"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        }
      },
      "id": "Zone",
      "description": "Represents a Google Tag Manager Zone's contents.",
      "type": "object"
    },
    "RevertClientResponse": {
      "properties": {
        "client": {
          "$ref": "Client",
          "description": "Client as it appears in the latest container version since the last workspace synchronization operation. If no client is present, that means the client was deleted in the latest container version."
        }
      },
      "type": "object",
      "id": "RevertClientResponse",
      "description": "The result of reverting a client in a workspace."
    },
    "Destination": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Destination display name."
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI."
        },
        "fingerprint": {
          "description": "The fingerprint of the Google Tag Destination as computed at storage time. This value is recomputed whenever the destination is modified.",
          "type": "string"
        },
        "destinationId": {
          "type": "string",
          "description": "Destination ID."
        },
        "path": {
          "type": "string",
          "description": "Destination's API relative path."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "destinationLinkId": {
          "description": "The Destination link ID uniquely identifies the Destination.",
          "type": "string"
        }
      },
      "id": "Destination",
      "description": "Represents a Google Tag Destination.",
      "type": "object"
    },
    "Entity": {
      "type": "object",
      "description": "A workspace entity that may represent a tag, trigger, variable, or folder in addition to its status in the workspace.",
      "properties": {
        "customTemplate": {
          "$ref": "CustomTemplate",
          "description": "The custom template being represented by the entity."
        },
        "builtInVariable": {
          "description": "The built in variable being represented by the entity.",
          "$ref": "BuiltInVariable"
        },
        "tag": {
          "description": "The tag being represented by the entity.",
          "$ref": "Tag"
        },
        "zone": {
          "$ref": "Zone",
          "description": "The zone being represented by the entity."
        },
        "changeStatus": {
          "enumDescriptions": [
            "",
            "The entity has never been changed.",
            "The entity is added to the workspace.",
            "The entity is deleted from the workspace.",
            "The entity has been updated in the workspace."
          ],
          "enum": [
            "changeStatusUnspecified",
            "none",
            "added",
            "deleted",
            "updated"
          ],
          "type": "string",
          "description": "Represents how the entity has been changed in the workspace."
        },
        "folder": {
          "description": "The folder being represented by the entity.",
          "$ref": "Folder"
        },
        "transformation": {
          "$ref": "Transformation",
          "description": "The transformation being represented by the entity."
        },
        "trigger": {
          "$ref": "Trigger",
          "description": "The trigger being represented by the entity."
        },
        "gtagConfig": {
          "description": "The gtag config being represented by the entity.",
          "$ref": "GtagConfig"
        },
        "client": {
          "$ref": "Client",
          "description": "The client being represented by the entity."
        },
        "variable": {
          "$ref": "Variable",
          "description": "The variable being represented by the entity."
        }
      },
      "id": "Entity"
    },
    "ListTagsResponse": {
      "id": "ListTagsResponse",
      "type": "object",
      "description": "List Tags Response.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "tag": {
          "type": "array",
          "description": "All GTM Tags of a GTM Container.",
          "items": {
            "$ref": "Tag"
          }
        }
      }
    },
    "RevertTagResponse": {
      "id": "RevertTagResponse",
      "properties": {
        "tag": {
          "description": "Tag as it appears in the latest container version since the last workspace synchronization operation. If no tag is present, that means the tag was deleted in the latest container version.",
          "$ref": "Tag"
        }
      },
      "description": "The result of reverting a tag in a workspace.",
      "type": "object"
    },
    "ListFoldersResponse": {
      "properties": {
        "folder": {
          "description": "All GTM Folders of a GTM Container.",
          "items": {
            "$ref": "Folder"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListFoldersResponse",
      "description": "List Folders Response."
    },
    "ListEnabledBuiltInVariablesResponse": {
      "type": "object",
      "id": "ListEnabledBuiltInVariablesResponse",
      "description": "A list of enabled built-in variables.",
      "properties": {
        "builtInVariable": {
          "type": "array",
          "items": {
            "$ref": "BuiltInVariable"
          },
          "description": "All GTM BuiltInVariables of a GTM container."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      }
    },
    "ListAccountsResponse": {
      "description": "List Accounts Response.",
      "type": "object",
      "id": "ListAccountsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "account": {
          "description": "List of GTM Accounts that a user has access to.",
          "items": {
            "$ref": "Account"
          },
          "type": "array"
        }
      }
    },
    "Container": {
      "id": "Container",
      "type": "object",
      "description": "Represents a Google Tag Manager Container, which specifies the platform tags will run on, manages workspaces, and retains container versions.",
      "properties": {
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "tagIds": {
          "items": {
            "type": "string"
          },
          "description": "All Tag IDs that refer to this Container.",
          "type": "array"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "taggingServerUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of server-side container URLs for the Container. If multiple URLs are provided, all URL paths must match. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update"
        },
        "containerId": {
          "description": "The Container ID uniquely identifies the GTM Container.",
          "type": "string"
        },
        "domainName": {
          "description": "List of domain names associated with the Container. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified."
        },
        "notes": {
          "type": "string",
          "description": "Container Notes. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update"
        },
        "path": {
          "type": "string",
          "description": "GTM Container's API relative path."
        },
        "name": {
          "description": "Container display name. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.create",
              "tagmanager.accounts.containers.update"
            ]
          },
          "type": "string"
        },
        "publicId": {
          "description": "Container Public ID.",
          "type": "string"
        },
        "usageContext": {
          "type": "array",
          "description": "List of Usage Contexts for the Container. Valid values include: web, android, or ios. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.create",
              "tagmanager.accounts.containers.update"
            ]
          },
          "items": {
            "type": "string",
            "enum": [
              "usageContextUnspecified",
              "web",
              "android",
              "ios",
              "androidSdk5",
              "iosSdk5",
              "amp",
              "server"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ]
          }
        },
        "features": {
          "$ref": "ContainerFeatures",
          "description": "Read-only Container feature set."
        }
      }
    },
    "UserPermission": {
      "properties": {
        "accountId": {
          "description": "The Account ID uniquely identifies the GTM Account.",
          "type": "string"
        },
        "path": {
          "description": "GTM UserPermission's API relative path.",
          "type": "string"
        },
        "emailAddress": {
          "description": "User's email address. @mutable tagmanager.accounts.permissions.create",
          "type": "string"
        },
        "accountAccess": {
          "$ref": "AccountAccess",
          "description": "GTM Account access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update"
        },
        "containerAccess": {
          "type": "array",
          "description": "GTM Container access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "items": {
            "$ref": "ContainerAccess"
          }
        }
      },
      "type": "object",
      "id": "UserPermission",
      "description": "Represents a user's permissions to an account and its container."
    },
    "ListVariablesResponse": {
      "id": "ListVariablesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "variable": {
          "items": {
            "$ref": "Variable"
          },
          "description": "All GTM Variables of a GTM Container.",
          "type": "array"
        }
      },
      "description": "List Variables Response."
    },
    "ListTriggersResponse": {
      "type": "object",
      "id": "ListTriggersResponse",
      "properties": {
        "trigger": {
          "type": "array",
          "items": {
            "$ref": "Trigger"
          },
          "description": "All GTM Triggers of a GTM Container."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "description": "List triggers response."
    },
    "GetContainerSnippetResponse": {
      "type": "object",
      "id": "GetContainerSnippetResponse",
      "properties": {
        "snippet": {
          "description": "Tagging snippet for a Container.",
          "type": "string"
        }
      }
    },
    "AccountFeatures": {
      "type": "object",
      "properties": {
        "supportMultipleContainers": {
          "type": "boolean",
          "description": "Whether this Account supports multiple Containers."
        },
        "supportUserPermissions": {
          "type": "boolean",
          "description": "Whether this Account supports user permissions managed by GTM."
        }
      },
      "id": "AccountFeatures"
    },
    "Account": {
      "id": "Account",
      "description": "Represents a Google Tag Manager Account.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Account display name. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "shareData": {
          "type": "boolean",
          "description": "Whether the account shares data anonymously with Google and others. This flag enables benchmarking by sharing your data in an anonymous form. Google will remove all identifiable information about your website, combine the data with hundreds of other anonymous sites and report aggregate trends in the benchmarking service. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update"
        },
        "features": {
          "$ref": "AccountFeatures",
          "description": "Read-only Account feature set"
        },
        "path": {
          "description": "GTM Account's API relative path.",
          "type": "string"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Account as computed at storage time. This value is recomputed whenever the account is modified.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "The Account ID uniquely identifies the GTM Account."
        }
      }
    },
    "RevertBuiltInVariableResponse": {
      "type": "object",
      "id": "RevertBuiltInVariableResponse",
      "description": "The result of reverting a built-in variable in a workspace.",
      "properties": {
        "enabled": {
          "description": "Whether the built-in variable is enabled after reversion.",
          "type": "boolean"
        }
      }
    },
    "ContainerVersion": {
      "id": "ContainerVersion",
      "description": "Represents a Google Tag Manager Container Version.",
      "type": "object",
      "properties": {
        "tag": {
          "type": "array",
          "items": {
            "$ref": "Tag"
          },
          "description": "The tags in the container that this version was taken from."
        },
        "customTemplate": {
          "type": "array",
          "items": {
            "$ref": "CustomTemplate"
          },
          "description": "The custom templates in the container that this version was taken from."
        },
        "folder": {
          "type": "array",
          "description": "The folders in the container that this version was taken from.",
          "items": {
            "$ref": "Folder"
          }
        },
        "container": {
          "description": "The container that this version was taken from.",
          "$ref": "Container"
        },
        "variable": {
          "items": {
            "$ref": "Variable"
          },
          "description": "The variables in the container that this version was taken from.",
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "Container version display name. @mutable tagmanager.accounts.containers.versions.update"
        },
        "path": {
          "description": "GTM Container Version's API relative path.",
          "type": "string"
        },
        "transformation": {
          "items": {
            "$ref": "Transformation"
          },
          "type": "array",
          "description": "The transformations in the container that this version was taken from."
        },
        "client": {
          "type": "array",
          "items": {
            "$ref": "Client"
          },
          "description": "The clients in the container that this version was taken from."
        },
        "gtagConfig": {
          "description": "The Google tag configs in the container that this version was taken from.",
          "items": {
            "$ref": "GtagConfig"
          },
          "type": "array"
        },
        "trigger": {
          "type": "array",
          "items": {
            "$ref": "Trigger"
          },
          "description": "The triggers in the container that this version was taken from."
        },
        "zone": {
          "items": {
            "$ref": "Zone"
          },
          "type": "array",
          "description": "The zones in the container that this version was taken from."
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "containerVersionId": {
          "description": "The Container Version ID uniquely identifies the GTM Container Version.",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "builtInVariable": {
          "items": {
            "$ref": "BuiltInVariable"
          },
          "description": "The built-in variables in the container that this version was taken from.",
          "type": "array"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified."
        },
        "deleted": {
          "type": "boolean",
          "description": "A value of true indicates this container version has been deleted."
        },
        "description": {
          "description": "Container version description. @mutable tagmanager.accounts.containers.versions.update",
          "type": "string"
        }
      }
    },
    "ContainerVersionHeader": {
      "description": "Represents a Google Tag Manager Container Version Header.",
      "type": "object",
      "id": "ContainerVersionHeader",
      "properties": {
        "numClients": {
          "type": "string",
          "description": "Number of clients in the container version."
        },
        "numZones": {
          "description": "Number of zones in the container version.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "GTM Container Version's API relative path."
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "numGtagConfigs": {
          "type": "string",
          "description": "Number of Google tag configs in the container version."
        },
        "numRules": {
          "description": "Number of rules in the container version.",
          "deprecated": true,
          "type": "string"
        },
        "numVariables": {
          "type": "string",
          "description": "Number of variables in the container version."
        },
        "numTransformations": {
          "type": "string",
          "description": "Number of transformations in the container version."
        },
        "deleted": {
          "description": "A value of true indicates this container version has been deleted.",
          "type": "boolean"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "numCustomTemplates": {
          "type": "string",
          "description": "Number of custom templates in the container version."
        },
        "containerVersionId": {
          "type": "string",
          "description": "The Container Version ID uniquely identifies the GTM Container Version."
        },
        "name": {
          "description": "Container version display name.",
          "type": "string"
        },
        "numTriggers": {
          "description": "Number of triggers in the container version.",
          "type": "string"
        },
        "numMacros": {
          "description": "Number of macros in the container version.",
          "type": "string",
          "deprecated": true
        },
        "numTags": {
          "type": "string",
          "description": "Number of tags in the container version."
        }
      }
    },
    "RevertFolderResponse": {
      "id": "RevertFolderResponse",
      "type": "object",
      "properties": {
        "folder": {
          "description": "Folder as it appears in the latest container version since the last workspace synchronization operation. If no folder is present, that means the folder was deleted in the latest container version.",
          "$ref": "Folder"
        }
      },
      "description": "The result of reverting folder changes in a workspace."
    },
    "Trigger": {
      "id": "Trigger",
      "type": "object",
      "description": "Represents a Google Tag Manager Trigger",
      "properties": {
        "name": {
          "description": "Trigger display name. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "type": "string"
        },
        "filter": {
          "type": "array",
          "description": "The trigger will only fire iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "items": {
            "$ref": "Condition"
          }
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "visiblePercentageMax": {
          "description": "A visibility trigger maximum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "parameter": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "Additional parameters. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "horizontalScrollPercentageList": {
          "$ref": "Parameter",
          "description": "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled horizontally. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "interval": {
          "$ref": "Parameter",
          "description": "Time between triggering recurring Timer Events (in milliseconds). Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "path": {
          "description": "GTM Trigger's API relative path.",
          "type": "string"
        },
        "totalTimeMinMilliseconds": {
          "description": "A visibility trigger minimum total visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "type": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create"
            ]
          },
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "eventTypeUnspecified",
            "pageview",
            "domReady",
            "windowLoaded",
            "customEvent",
            "triggerGroup",
            "init",
            "consentInit",
            "serverPageview",
            "always",
            "firebaseAppException",
            "firebaseAppUpdate",
            "firebaseCampaign",
            "firebaseFirstOpen",
            "firebaseInAppPurchase",
            "firebaseNotificationDismiss",
            "firebaseNotificationForeground",
            "firebaseNotificationOpen",
            "firebaseNotificationReceive",
            "firebaseOsUpdate",
            "firebaseSessionStart",
            "firebaseUserEngagement",
            "formSubmission",
            "click",
            "linkClick",
            "jsError",
            "historyChange",
            "timer",
            "ampClick",
            "ampTimer",
            "ampScroll",
            "ampVisibility",
            "youTubeVideo",
            "scrollDepth",
            "elementVisibility"
          ],
          "description": "Defines the data layer event that causes this trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Trigger as computed at storage time. This value is recomputed whenever the trigger is modified.",
          "type": "string"
        },
        "parentFolderId": {
          "type": "string",
          "description": "Parent folder id."
        },
        "customEventFilter": {
          "items": {
            "$ref": "Condition"
          },
          "description": "Used in the case of custom event, which is fired iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "array"
        },
        "intervalSeconds": {
          "description": "Time between Timer Events to fire (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "triggerId": {
          "description": "The Trigger ID uniquely identifies the GTM Trigger.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "limit": {
          "description": "Limit of the number of GTM events this Timer Trigger will fire. If no limit is set, we will continue to fire GTM events until the user leaves the page. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "uniqueTriggerId": {
          "description": "Globally unique id of the trigger that auto-generates this (a Form Submit, Link Click or Timer listener) if any. Used to make incompatible auto-events work together with trigger filtering based on trigger ids. This value is populated during output generation since the tags implied by triggers don't exist until then. Only valid for Form Submit, Link Click and Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "notes": {
          "description": "User notes on how to apply this trigger in the container. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "string"
        },
        "selector": {
          "description": "A click trigger CSS selector (i.e. \"a\", \"button\" etc.). Only valid for AMP Click trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "visibilitySelector": {
          "description": "A visibility trigger CSS selector (i.e. \"#id\"). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "eventName": {
          "$ref": "Parameter",
          "description": "Name of the GTM event that is fired. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "maxTimerLengthSeconds": {
          "description": "Max time to fire Timer Events (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "checkValidation": {
          "description": "Whether or not we should only fire tags if the form submit or link click event is not cancelled by some other event handler (e.g. because of validation). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "verticalScrollPercentageList": {
          "description": "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled vertically. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "waitForTags": {
          "description": "Whether or not we should delay the form submissions or link opening until all of the tags have fired (by preventing the default action and later simulating the default action). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "autoEventFilter": {
          "items": {
            "$ref": "Condition"
          },
          "description": "Used in the case of auto event tracking. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "array"
        },
        "visiblePercentageMin": {
          "$ref": "Parameter",
          "description": "A visibility trigger minimum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "waitForTagsTimeout": {
          "description": "How long to wait (in milliseconds) for tags to fire when 'waits_for_tags' above evaluates to true. Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "continuousTimeMinMilliseconds": {
          "$ref": "Parameter",
          "description": "A visibility trigger minimum continuous visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        }
      }
    },
    "BuiltInVariable": {
      "type": "object",
      "description": "Built-in variables are a special category of variables that are pre-created and non-customizable. They provide common functionality like accessing properties of the gtm data layer, monitoring clicks, or accessing elements of a page URL.",
      "id": "BuiltInVariable",
      "properties": {
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "name": {
          "description": "Name of the built-in variable to be used to refer to the built-in variable.",
          "type": "string"
        },
        "path": {
          "description": "GTM BuiltInVariable's API relative path.",
          "type": "string"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "type": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "For web or mobile.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "For web or mobile.",
            "",
            "For web or mobile.",
            "For web or mobile.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "Type of built-in variable. @required.tagmanager.accounts.containers.workspaces.built_in_variable.update @mutable tagmanager.accounts.containers.workspaces.built_in_variable.update",
          "type": "string",
          "enum": [
            "builtInVariableTypeUnspecified",
            "pageUrl",
            "pageHostname",
            "pagePath",
            "referrer",
            "event",
            "clickElement",
            "clickClasses",
            "clickId",
            "clickTarget",
            "clickUrl",
            "clickText",
            "firstPartyServingUrl",
            "formElement",
            "formClasses",
            "formId",
            "formTarget",
            "formUrl",
            "formText",
            "errorMessage",
            "errorUrl",
            "errorLine",
            "newHistoryUrl",
            "oldHistoryUrl",
            "newHistoryFragment",
            "oldHistoryFragment",
            "newHistoryState",
            "oldHistoryState",
            "historySource",
            "containerVersion",
            "debugMode",
            "randomNumber",
            "containerId",
            "appId",
            "appName",
            "appVersionCode",
            "appVersionName",
            "language",
            "osVersion",
            "platform",
            "sdkVersion",
            "deviceName",
            "resolution",
            "advertiserId",
            "advertisingTrackingEnabled",
            "htmlId",
            "environmentName",
            "ampBrowserLanguage",
            "ampCanonicalPath",
            "ampCanonicalUrl",
            "ampCanonicalHost",
            "ampReferrer",
            "ampTitle",
            "ampClientId",
            "ampClientTimezone",
            "ampClientTimestamp",
            "ampClientScreenWidth",
            "ampClientScreenHeight",
            "ampClientScrollX",
            "ampClientScrollY",
            "ampClientMaxScrollX",
            "ampClientMaxScrollY",
            "ampTotalEngagedTime",
            "ampPageViewId",
            "ampPageLoadTime",
            "ampPageDownloadTime",
            "ampGtmEvent",
            "eventName",
            "firebaseEventParameterCampaign",
            "firebaseEventParameterCampaignAclid",
            "firebaseEventParameterCampaignAnid",
            "firebaseEventParameterCampaignClickTimestamp",
            "firebaseEventParameterCampaignContent",
            "firebaseEventParameterCampaignCp1",
            "firebaseEventParameterCampaignGclid",
            "firebaseEventParameterCampaignSource",
            "firebaseEventParameterCampaignTerm",
            "firebaseEventParameterCurrency",
            "firebaseEventParameterDynamicLinkAcceptTime",
            "firebaseEventParameterDynamicLinkLinkid",
            "firebaseEventParameterNotificationMessageDeviceTime",
            "firebaseEventParameterNotificationMessageId",
            "firebaseEventParameterNotificationMessageName",
            "firebaseEventParameterNotificationMessageTime",
            "firebaseEventParameterNotificationTopic",
            "firebaseEventParameterPreviousAppVersion",
            "firebaseEventParameterPreviousOsVersion",
            "firebaseEventParameterPrice",
            "firebaseEventParameterProductId",
            "firebaseEventParameterQuantity",
            "firebaseEventParameterValue",
            "videoProvider",
            "videoUrl",
            "videoTitle",
            "videoDuration",
            "videoPercent",
            "videoVisible",
            "videoStatus",
            "videoCurrentTime",
            "scrollDepthThreshold",
            "scrollDepthUnits",
            "scrollDepthDirection",
            "elementVisibilityRatio",
            "elementVisibilityTime",
            "elementVisibilityFirstTime",
            "elementVisibilityRecentTime",
            "requestPath",
            "requestMethod",
            "clientName",
            "queryString",
            "serverPageLocationUrl",
            "serverPageLocationPath",
            "serverPageLocationHostname",
            "visitorRegion"
          ]
        }
      }
    },
    "ListDestinationsResponse": {
      "type": "object",
      "id": "ListDestinationsResponse",
      "properties": {
        "destination": {
          "type": "array",
          "description": "All Destinations linked to a GTM Container.",
          "items": {
            "$ref": "Destination"
          }
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      }
    },
    "RevertVariableResponse": {
      "description": "The result of reverting a variable in a workspace.",
      "id": "RevertVariableResponse",
      "type": "object",
      "properties": {
        "variable": {
          "$ref": "Variable",
          "description": "Variable as it appears in the latest container version since the last workspace synchronization operation. If no variable is present, that means the variable was deleted in the latest container version."
        }
      }
    },
    "VariableFormatValue": {
      "type": "object",
      "properties": {
        "caseConversionType": {
          "type": "string",
          "description": "The option to convert a string-type variable value to either lowercase or uppercase.",
          "enum": [
            "none",
            "lowercase",
            "uppercase"
          ],
          "enumDescriptions": [
            "",
            "The option to convert a variable value to lowercase.",
            "The option to convert a variable value to uppercase."
          ]
        },
        "convertTrueToValue": {
          "$ref": "Parameter",
          "description": "The value to convert if a variable value is true."
        },
        "convertUndefinedToValue": {
          "description": "The value to convert if a variable value is undefined.",
          "$ref": "Parameter"
        },
        "convertNullToValue": {
          "description": "The value to convert if a variable value is null.",
          "$ref": "Parameter"
        },
        "convertFalseToValue": {
          "description": "The value to convert if a variable value is false.",
          "$ref": "Parameter"
        }
      },
      "id": "VariableFormatValue"
    },
    "Condition": {
      "id": "Condition",
      "type": "object",
      "description": "Represents a predicate.",
      "properties": {
        "type": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "NOTE(lanzone): When defining a ConditionType here, don't forget to also define a matching PredicateType (in condition.proto)."
          ],
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "type": "string",
          "enum": [
            "conditionTypeUnspecified",
            "equals",
            "contains",
            "startsWith",
            "endsWith",
            "matchRegex",
            "greater",
            "greaterOrEquals",
            "less",
            "lessOrEquals",
            "cssSelector",
            "urlMatches"
          ],
          "description": "The type of operator for this condition. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "parameter": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "description": "A list of named parameters (key/value), depending on the condition's type. Notes: - For binary operators, include parameters named arg0 and arg1 for specifying the left and right operands, respectively. - At this time, the left operand (arg0) must be a reference to a variable. - For case-insensitive Regex matching, include a boolean parameter named ignore_case that is set to true. If not specified or set to any other value, the matching will be case sensitive. - To negate an operator, include a boolean parameter named negate boolean parameter that is set to true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        }
      }
    },
    "ListClientsResponse": {
      "properties": {
        "client": {
          "items": {
            "$ref": "Client"
          },
          "type": "array",
          "description": "All GTM Clients of a GTM Container."
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListClientsResponse"
    },
    "ZoneBoundary": {
      "properties": {
        "customEvaluationTriggerId": {
          "type": "array",
          "description": "Custom evaluation trigger IDs. A zone will evaluate its boundary conditions when any of the listed triggers are true.",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "type": "array",
          "description": "The conditions that, when conjoined, make up the boundary.",
          "items": {
            "$ref": "Condition"
          }
        }
      },
      "description": "Represents a Zone's boundaries.",
      "type": "object",
      "id": "ZoneBoundary"
    },
    "ListZonesResponse": {
      "id": "ListZonesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "zone": {
          "items": {
            "$ref": "Zone"
          },
          "description": "All GTM Zones of a GTM Container.",
          "type": "array"
        }
      }
    },
    "ZoneChildContainer": {
      "description": "Represents a child container of a Zone.",
      "id": "ZoneChildContainer",
      "type": "object",
      "properties": {
        "publicId": {
          "description": "The child container's public id.",
          "type": "string"
        },
        "nickname": {
          "description": "The zone's nickname for the child container.",
          "type": "string"
        }
      }
    },
    "Environment": {
      "id": "Environment",
      "type": "object",
      "properties": {
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "type": {
          "enum": [
            "user",
            "live",
            "latest",
            "workspace"
          ],
          "enumDescriptions": [
            "Points to a user defined environment.",
            "Points to the current live container version.",
            "Points to the latest container version.",
            "Automatically managed environment that points to a workspace preview or version created by a workspace."
          ],
          "type": "string",
          "description": "The type of this environment."
        },
        "authorizationCode": {
          "description": "The environment authorization code.",
          "type": "string"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM environment as computed at storage time. This value is recomputed whenever the environment is modified.",
          "type": "string"
        },
        "name": {
          "description": "The environment display name. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.environments.create",
              "tagmanager.accounts.containers.environments.update"
            ]
          },
          "type": "string"
        },
        "authorizationTimestamp": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time-stamp for the authorization code."
        },
        "workspaceId": {
          "description": "Represents a link to a quick preview of a workspace.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "description": {
          "type": "string",
          "description": "The environment description. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "GTM Environment's API relative path."
        },
        "environmentId": {
          "description": "GTM Environment ID uniquely identifies the GTM Environment.",
          "type": "string"
        },
        "containerVersionId": {
          "type": "string",
          "description": "Represents a link to a container version."
        },
        "enableDebug": {
          "type": "boolean",
          "description": "Whether or not to enable debug by default for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update"
        },
        "url": {
          "type": "string",
          "description": "Default preview page url for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update"
        }
      },
      "description": "Represents a Google Tag Manager Environment. Note that a user can create, delete and update environments of type USER, but can only update the enable_debug and url fields of environments of other types."
    },
    "ListWorkspacesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "workspace": {
          "description": "All Workspaces of a GTM Container.",
          "type": "array",
          "items": {
            "$ref": "Workspace"
          }
        }
      },
      "description": "A list of workspaces in a container.",
      "id": "ListWorkspacesResponse",
      "type": "object"
    },
    "ListGtagConfigResponse": {
      "type": "object",
      "id": "ListGtagConfigResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "gtagConfig": {
          "type": "array",
          "items": {
            "$ref": "GtagConfig"
          },
          "description": "All Google tag configs in a Container."
        }
      }
    },
    "Variable": {
      "type": "object",
      "description": "Represents a Google Tag Manager Variable.",
      "properties": {
        "scheduleEndMs": {
          "type": "string",
          "format": "int64",
          "description": "The end timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "scheduleStartMs": {
          "format": "int64",
          "type": "string",
          "description": "The start timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "variableId": {
          "description": "The Variable ID uniquely identifies the GTM Variable.",
          "type": "string"
        },
        "parentFolderId": {
          "type": "string",
          "description": "Parent folder id."
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "path": {
          "type": "string",
          "description": "GTM Variable's API relative path."
        },
        "formatValue": {
          "$ref": "VariableFormatValue",
          "description": "Option to convert a variable value to other value."
        },
        "parameter": {
          "description": "The variable's parameters. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        },
        "type": {
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "description": "GTM Variable Type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "enablingTriggerId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "For mobile containers only: A list of trigger IDs for enabling conditional variables; the variable is enabled if one of the enabling triggers is true while all the disabling triggers are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "name": {
          "type": "string",
          "description": "Variable display name. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          }
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this variable in the container. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "disablingTriggerId": {
          "description": "For mobile containers only: A list of trigger IDs for disabling conditional variables; the variable is enabled if one of the enabling trigger is true while all the disabling trigger are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Variable as computed at storage time. This value is recomputed whenever the variable is modified."
        }
      },
      "id": "Variable"
    },
    "ListContainerVersionsResponse": {
      "description": "List container versions response.",
      "id": "ListContainerVersionsResponse",
      "type": "object",
      "properties": {
        "containerVersionHeader": {
          "type": "array",
          "description": "All container version headers of a GTM Container.",
          "items": {
            "$ref": "ContainerVersionHeader"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      }
    },
    "ZoneTypeRestriction": {
      "properties": {
        "whitelistedTypeId": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of type public ids that have been whitelisted for use in this Zone."
        },
        "enable": {
          "type": "boolean",
          "description": "True if type restrictions have been enabled for this Zone."
        }
      },
      "type": "object",
      "description": "Represents a Zone's type restrictions.",
      "id": "ZoneTypeRestriction"
    },
    "Tag": {
      "type": "object",
      "properties": {
        "parameter": {
          "description": "The tag's parameters. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        },
        "blockingTriggerId": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Blocking trigger IDs. If any of the listed triggers evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "firingTriggerId": {
          "items": {
            "type": "string"
          },
          "description": "Firing trigger IDs. A tag will fire when any of the listed triggers are true and all of its blockingTriggerIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array"
        },
        "scheduleStartMs": {
          "type": "string",
          "description": "The start timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "format": "int64"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "tagFiringOption": {
          "enumDescriptions": [
            "",
            "Tag can be fired multiple times per event.",
            "Tag can only be fired per event but can be fired multiple times per load (e.g., app load or page load).",
            "Tag can only be fired per load (e.g., app load or page load)."
          ],
          "enum": [
            "tagFiringOptionUnspecified",
            "unlimited",
            "oncePerEvent",
            "oncePerLoad"
          ],
          "description": "Option to fire this tag.",
          "type": "string"
        },
        "liveOnly": {
          "type": "boolean",
          "description": "If set to true, this tag will only fire in the live environment (e.g. not in preview or debug mode). @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "consentSettings": {
          "description": "Consent settings of a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "$ref": "TagConsentSetting"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "priority": {
          "description": "User defined numeric priority of the tag. Tags are fired asynchronously in order of priority. Tags with higher numeric value fire first. A tag's priority can be a positive or negative value. The default value is 0. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "$ref": "Parameter"
        },
        "blockingRuleId": {
          "description": "Blocking rule IDs. If any of the listed rules evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array",
          "deprecated": true,
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Tag display name. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update"
            ]
          }
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "scheduleEndMs": {
          "format": "int64",
          "type": "string",
          "description": "The end timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "teardownTag": {
          "type": "array",
          "description": "The list of teardown tags. Currently we only allow one.",
          "items": {
            "$ref": "TeardownTag"
          }
        },
        "monitoringMetadataTagNameKey": {
          "type": "string",
          "description": "If non-empty, then the tag display name will be included in the monitoring metadata map using the key specified. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "paused": {
          "type": "boolean",
          "description": "Indicates whether the tag is paused, which prevents the tag from firing. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Tag as computed at storage time. This value is recomputed whenever the tag is modified.",
          "type": "string"
        },
        "tagId": {
          "description": "The Tag ID uniquely identifies the GTM Tag.",
          "type": "string"
        },
        "monitoringMetadata": {
          "$ref": "Parameter",
          "description": "A map of key-value pairs of tag metadata to be included in the event data for tag monitoring. Notes: - This parameter must be type MAP. - Each parameter in the map are type TEMPLATE, however cannot contain variable references. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "firingRuleId": {
          "type": "array",
          "description": "Firing rule IDs. A tag will fire when any of the listed rules are true and all of its blockingRuleIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "items": {
            "type": "string"
          },
          "deprecated": true
        },
        "type": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update"
            ]
          },
          "type": "string",
          "description": "GTM Tag Type. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "path": {
          "description": "GTM Tag's API relative path.",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "setupTag": {
          "type": "array",
          "items": {
            "$ref": "SetupTag"
          },
          "description": "The list of setup tags. Currently we only allow one."
        }
      },
      "id": "Tag",
      "description": "Represents a Google Tag Manager Tag."
    },
    "MergeConflict": {
      "id": "MergeConflict",
      "type": "object",
      "description": "Represents a merge conflict.",
      "properties": {
        "entityInBaseVersion": {
          "$ref": "Entity",
          "description": "The base version entity (since the latest sync operation) that has conflicting changes compared to the workspace. If this field is missing, it means the workspace entity is deleted from the base version."
        },
        "entityInWorkspace": {
          "description": "The workspace entity that has conflicting changes compared to the base version. If an entity is deleted in a workspace, it will still appear with a deleted change status.",
          "$ref": "Entity"
        }
      }
    },
    "Workspace": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Workspace description. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Workspace as computed at storage time. This value is recomputed whenever the workspace is modified."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "workspaceId": {
          "description": "The Workspace ID uniquely identifies the GTM Workspace.",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "path": {
          "description": "GTM Workspace's API relative path.",
          "type": "string"
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.create",
              "tagmanager.accounts.containers.workspaces.update"
            ]
          },
          "type": "string",
          "description": "Workspace display name. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update"
        }
      },
      "description": "Represents a Google Tag Manager Container Workspace.",
      "id": "Workspace",
      "type": "object"
    },
    "RevertTemplateResponse": {
      "properties": {
        "template": {
          "$ref": "CustomTemplate",
          "description": "Template as it appears in the latest container version since the last workspace synchronization operation. If no template is present, that means the template was deleted in the latest container version."
        }
      },
      "description": "The result of reverting a template in a workspace.",
      "type": "object",
      "id": "RevertTemplateResponse"
    },
    "CreateBuiltInVariableResponse": {
      "id": "CreateBuiltInVariableResponse",
      "type": "object",
      "properties": {
        "builtInVariable": {
          "items": {
            "$ref": "BuiltInVariable"
          },
          "type": "array",
          "description": "List of created built-in variables."
        }
      }
    },
    "CustomTemplate": {
      "type": "object",
      "id": "CustomTemplate",
      "description": "Represents a Google Tag Manager Custom Template's contents.",
      "properties": {
        "templateId": {
          "description": "The Custom Template ID uniquely identifies the GTM custom template.",
          "type": "string"
        },
        "templateData": {
          "type": "string",
          "description": "The custom template in text format."
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Custom Template as computed at storage time. This value is recomputed whenever the template is modified.",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "name": {
          "description": "Custom Template display name.",
          "type": "string"
        },
        "path": {
          "description": "GTM Custom Template's API relative path.",
          "type": "string"
        },
        "galleryReference": {
          "$ref": "GalleryReference",
          "description": "A reference to the Community Template Gallery entry."
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        }
      }
    },
    "GetWorkspaceStatusResponse": {
      "description": "The changes that have occurred in the workspace since the base container version.",
      "id": "GetWorkspaceStatusResponse",
      "properties": {
        "mergeConflict": {
          "items": {
            "$ref": "MergeConflict"
          },
          "type": "array",
          "description": "The merge conflict after sync."
        },
        "workspaceChange": {
          "description": "Entities that have been changed in the workspace.",
          "type": "array",
          "items": {
            "$ref": "Entity"
          }
        }
      },
      "type": "object"
    },
    "ListContainersResponse": {
      "type": "object",
      "properties": {
        "container": {
          "items": {
            "$ref": "Container"
          },
          "description": "All Containers of a GTM Account.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "id": "ListContainersResponse",
      "description": "List Containers Response."
    },
    "TagConsentSetting": {
      "id": "TagConsentSetting",
      "type": "object",
      "properties": {
        "consentType": {
          "$ref": "Parameter",
          "description": "The type of consents to check for during tag firing if in the consent NEEDED state. This parameter must be of type LIST where each list item is of type STRING."
        },
        "consentStatus": {
          "enumDescriptions": [
            "Default value where user has not specified any setting on it.",
            "Tag doesn't require any additional consent settings.",
            "Tag requires additional consent settings."
          ],
          "type": "string",
          "enum": [
            "notSet",
            "notNeeded",
            "needed"
          ],
          "description": "The tag's consent status. If set to NEEDED, the runtime will check that the consent types specified by the consent_type field have been granted."
        }
      }
    },
    "Transformation": {
      "type": "object",
      "properties": {
        "parameter": {
          "description": "The transformation's parameters. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Transformation as computed at storage time. This value is recomputed whenever the transformation is modified.",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.transformations.create",
              "tagmanager.accounts.containers.workspaces.transformations.update"
            ]
          },
          "type": "string",
          "description": "Transformation display name. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update"
        },
        "path": {
          "description": "GTM transformation's API relative path.",
          "type": "string"
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        },
        "type": {
          "description": "Transformation type. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.transformations.create",
              "tagmanager.accounts.containers.workspaces.transformations.update"
            ]
          }
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this transformation in the container. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "transformationId": {
          "type": "string",
          "description": "The Transformation ID uniquely identifies the GTM transformation."
        }
      },
      "description": "Represents a Google Tag Manager Transformation.",
      "id": "Transformation"
    },
    "PublishContainerVersionResponse": {
      "type": "object",
      "description": "Publish container version response.",
      "id": "PublishContainerVersionResponse",
      "properties": {
        "containerVersion": {
          "$ref": "ContainerVersion",
          "description": "The container version created."
        },
        "compilerError": {
          "type": "boolean",
          "description": "Compiler errors or not."
        }
      }
    },
    "FolderEntities": {
      "type": "object",
      "id": "FolderEntities",
      "properties": {
        "tag": {
          "items": {
            "$ref": "Tag"
          },
          "description": "The list of tags inside the folder.",
          "type": "array"
        },
        "trigger": {
          "description": "The list of triggers inside the folder.",
          "items": {
            "$ref": "Trigger"
          },
          "type": "array"
        },
        "variable": {
          "description": "The list of variables inside the folder.",
          "items": {
            "$ref": "Variable"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "description": "Represents a Google Tag Manager Folder's contents."
    },
    "ContainerAccess": {
      "description": "Defines the Google Tag Manager Container access permissions.",
      "type": "object",
      "properties": {
        "permission": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "List of Container permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "enum": [
            "containerPermissionUnspecified",
            "noAccess",
            "read",
            "edit",
            "approve",
            "publish"
          ],
          "type": "string"
        },
        "containerId": {
          "description": "GTM Container ID. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "type": "string"
        }
      },
      "id": "ContainerAccess"
    },
    "ListEnvironmentsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "environment": {
          "description": "All Environments of a GTM Container.",
          "type": "array",
          "items": {
            "$ref": "Environment"
          }
        }
      },
      "type": "object",
      "description": "List Environments Response.",
      "id": "ListEnvironmentsResponse"
    },
    "ListTemplatesResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "template": {
          "type": "array",
          "items": {
            "$ref": "CustomTemplate"
          },
          "description": "All GTM Custom Templates of a GTM Container."
        }
      },
      "id": "ListTemplatesResponse"
    },
    "GtagConfig": {
      "properties": {
        "workspaceId": {
          "description": "Google tag workspace ID. Only used by GTM containers. Set to 0 otherwise.",
          "type": "string"
        },
        "type": {
          "description": "Google tag config type. @required tagmanager.accounts.containers.workspaces.gtag_config.create @required tagmanager.accounts.containers.workspaces.gtag_config.update @mutable tagmanager.accounts.containers.workspaces.gtag_config.create @mutable tagmanager.accounts.containers.workspaces.gtag_config.update",
          "type": "string"
        },
        "fingerprint": {
          "description": "The fingerprint of the Google tag config as computed at storage time. This value is recomputed whenever the config is modified.",
          "type": "string"
        },
        "accountId": {
          "description": "Google tag account ID.",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "Google tag config's API relative path."
        },
        "containerId": {
          "type": "string",
          "description": "Google tag container ID."
        },
        "parameter": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "The Google tag config's parameters. @mutable tagmanager.accounts.containers.workspaces.gtag_config.create @mutable tagmanager.accounts.containers.workspaces.gtag_config.update"
        },
        "gtagConfigId": {
          "type": "string",
          "description": "The ID uniquely identifies the Google tag config."
        }
      },
      "type": "object",
      "id": "GtagConfig",
      "description": "Represents a Google tag configuration."
    },
    "SetupTag": {
      "type": "object",
      "description": "Represents a reference to atag that fires before another tag in order to set up dependencies.",
      "properties": {
        "tagName": {
          "description": "The name of the setup tag.",
          "type": "string"
        },
        "stopOnSetupFailure": {
          "description": "If true, fire the main tag if and only if the setup tag fires successfully. If false, fire the main tag regardless of setup tag firing status.",
          "type": "boolean"
        }
      },
      "id": "SetupTag"
    },
    "Parameter": {
      "type": "object",
      "properties": {
        "list": {
          "items": {
            "$ref": "Parameter"
          },
          "type": "array",
          "description": "This list parameter's parameters (keys will be ignored). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "value": {
          "type": "string",
          "description": "A parameter's value (may contain variable references such as \"{{myVariable}}\") as appropriate to the specified type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "key": {
          "type": "string",
          "description": "The named key that uniquely identifies a parameter. Required for top-level parameters, as well as map values. Ignored for list values. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "isWeakReference": {
          "type": "boolean",
          "description": "Whether or not a reference type parameter is strongly or weakly referenced. Only used by Transformations. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update"
        },
        "map": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "This map parameter's parameters (must have keys; keys must be unique). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "",
            "May include variable references (such as \"{{myVariable}}\").",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "typeUnspecified",
            "template",
            "integer",
            "boolean",
            "list",
            "map",
            "triggerReference",
            "tagReference"
          ],
          "description": "The parameter type. Valid values are: - boolean: The value represents a boolean, represented as 'true' or 'false' - integer: The value represents a 64-bit signed integer value, in base 10 - list: A list of parameters should be specified - map: A map of parameters should be specified - template: The value represents any text; this can include variable references (even variable references that might return non-string types) - trigger_reference: The value represents a trigger, represented as the trigger id - tag_reference: The value represents a tag, represented as the tag name @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update",
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update",
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          }
        }
      },
      "description": "Represents a Google Tag Manager Parameter.",
      "id": "Parameter"
    },
    "Client": {
      "type": "object",
      "properties": {
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "notes": {
          "description": "User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string"
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "path": {
          "description": "GTM client's API relative path.",
          "type": "string"
        },
        "type": {
          "description": "Client type. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.clients.create",
              "tagmanager.accounts.containers.workspaces.clients.update"
            ]
          },
          "type": "string"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "clientId": {
          "description": "The Client ID uniquely identifies the GTM client.",
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Client as computed at storage time. This value is recomputed whenever the client is modified."
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Priority determines relative firing order. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"
        },
        "name": {
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.clients.create",
              "tagmanager.accounts.containers.workspaces.clients.update"
            ]
          },
          "description": "Client display name. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"
        },
        "parameter": {
          "type": "array",
          "description": "The client's parameters. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update",
          "items": {
            "$ref": "Parameter"
          }
        }
      },
      "id": "Client"
    },
    "QuickPreviewResponse": {
      "description": "Response to quick previewing a workspace.",
      "type": "object",
      "id": "QuickPreviewResponse",
      "properties": {
        "containerVersion": {
          "$ref": "ContainerVersion",
          "description": "The quick previewed container version."
        },
        "syncStatus": {
          "description": "Whether quick previewing failed when syncing the workspace to the latest container version.",
          "$ref": "SyncStatus"
        },
        "compilerError": {
          "description": "Were there compiler errors or not.",
          "type": "boolean"
        }
      }
    },
    "ListTransformationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "transformation": {
          "description": "All GTM Transformations of a GTM Container.",
          "items": {
            "$ref": "Transformation"
          },
          "type": "array"
        }
      },
      "id": "ListTransformationsResponse"
    },
    "AccountAccess": {
      "properties": {
        "permission": {
          "type": "string",
          "enum": [
            "accountPermissionUnspecified",
            "noAccess",
            "user",
            "admin"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "Whether the user has no access, user access, or admin access to an account. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update"
        }
      },
      "id": "AccountAccess",
      "type": "object",
      "description": "Defines the Google Tag Manager Account access permissions."
    },
    "CreateContainerVersionResponse": {
      "id": "CreateContainerVersionResponse",
      "type": "object",
      "properties": {
        "containerVersion": {
          "description": "The container version created.",
          "$ref": "ContainerVersion"
        },
        "newWorkspacePath": {
          "type": "string",
          "description": "Auto generated workspace path created as a result of version creation. This field should only be populated if the created version was not a quick preview."
        },
        "compilerError": {
          "description": "Compiler errors or not.",
          "type": "boolean"
        },
        "syncStatus": {
          "description": "Whether version creation failed when syncing the workspace to the latest container version.",
          "$ref": "SyncStatus"
        }
      },
      "description": "Create container versions response."
    },
    "RevertTriggerResponse": {
      "id": "RevertTriggerResponse",
      "type": "object",
      "description": "The result of reverting a trigger in a workspace.",
      "properties": {
        "trigger": {
          "$ref": "Trigger",
          "description": "Trigger as it appears in the latest container version since the last workspace synchronization operation. If no trigger is present, that means the trigger was deleted in the latest container version."
        }
      }
    },
    "SyncWorkspaceResponse": {
      "id": "SyncWorkspaceResponse",
      "properties": {
        "mergeConflict": {
          "items": {
            "$ref": "MergeConflict"
          },
          "type": "array",
          "description": "The merge conflict after sync. If this field is not empty, the sync is still treated as successful. But a version cannot be created until all conflicts are resolved."
        },
        "syncStatus": {
          "$ref": "SyncStatus",
          "description": "Indicates whether synchronization caused a merge conflict or sync error."
        }
      },
      "type": "object",
      "description": "A response after synchronizing the workspace to the latest container version."
    },
    "ContainerFeatures": {
      "type": "object",
      "id": "ContainerFeatures",
      "properties": {
        "supportBuiltInVariables": {
          "type": "boolean",
          "description": "Whether this Container supports built-in variables"
        },
        "supportTransformations": {
          "description": "Whether this Container supports transformations.",
          "type": "boolean"
        },
        "supportUserPermissions": {
          "description": "Whether this Container supports user permissions managed by GTM.",
          "type": "boolean"
        },
        "supportGtagConfigs": {
          "type": "boolean",
          "description": "Whether this Container supports Google tag config."
        },
        "supportTags": {
          "type": "boolean",
          "description": "Whether this Container supports tags."
        },
        "supportVersions": {
          "description": "Whether this Container supports Container versions.",
          "type": "boolean"
        },
        "supportTriggers": {
          "type": "boolean",
          "description": "Whether this Container supports triggers."
        },
        "supportWorkspaces": {
          "description": "Whether this Container supports workspaces.",
          "type": "boolean"
        },
        "supportClients": {
          "description": "Whether this Container supports clients.",
          "type": "boolean"
        },
        "supportZones": {
          "description": "Whether this Container supports zones.",
          "type": "boolean"
        },
        "supportTemplates": {
          "description": "Whether this Container supports templates.",
          "type": "boolean"
        },
        "supportVariables": {
          "description": "Whether this Container supports variables.",
          "type": "boolean"
        },
        "supportEnvironments": {
          "type": "boolean",
          "description": "Whether this Container supports environments."
        },
        "supportFolders": {
          "type": "boolean",
          "description": "Whether this Container supports folders."
        }
      }
    },
    "ListUserPermissionsResponse": {
      "description": "List user permissions response.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "userPermission": {
          "description": "All GTM UserPermissions of a GTM Account.",
          "type": "array",
          "items": {
            "$ref": "UserPermission"
          }
        }
      },
      "id": "ListUserPermissionsResponse",
      "type": "object"
    },
    "CreateContainerVersionRequestVersionOptions": {
      "description": "Options for new container versions.",
      "id": "CreateContainerVersionRequestVersionOptions",
      "properties": {
        "notes": {
          "description": "The notes of the container version to be created.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the container version to be created."
        }
      },
      "type": "object"
    },
    "RevertTransformationResponse": {
      "type": "object",
      "properties": {
        "transformation": {
          "description": "Transformation as it appears in the latest container version since the last workspace synchronization operation. If no transformation is present, that means the transformation was deleted in the latest container version.",
          "$ref": "Transformation"
        }
      },
      "id": "RevertTransformationResponse",
      "description": "The result of reverting a transformation in a workspace."
    },
    "Folder": {
      "description": "Represents a Google Tag Manager Folder.",
      "id": "Folder",
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "GTM Folder's API relative path."
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "name": {
          "description": "Folder display name. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.folders.create",
              "tagmanager.accounts.containers.workspaces.folders.update"
            ]
          },
          "type": "string"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "folderId": {
          "description": "The Folder ID uniquely identifies the GTM Folder.",
          "type": "string"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "notes": {
          "description": "User notes on how to apply this folder in the container. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update",
          "type": "string"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Folder as computed at storage time. This value is recomputed whenever the folder is modified.",
          "type": "string"
        }
      }
    },
    "GalleryReference": {
      "description": "Represents the link between a custom template and an entry on the Community Template Gallery site.",
      "properties": {
        "signature": {
          "type": "string",
          "description": "The signature of the community gallery template as computed at import time. This value is recomputed whenever the template is updated from the gallery."
        },
        "owner": {
          "type": "string",
          "description": "The name of the owner for the community gallery template."
        },
        "version": {
          "description": "The version of the community gallery template.",
          "type": "string"
        },
        "repository": {
          "description": "The name of the repository for the community gallery template.",
          "type": "string"
        },
        "host": {
          "type": "string",
          "description": "The name of the host for the community gallery template."
        },
        "isModified": {
          "type": "boolean",
          "description": "If a user has manually edited the community gallery template."
        }
      },
      "type": "object",
      "id": "GalleryReference"
    },
    "TeardownTag": {
      "type": "object",
      "id": "TeardownTag",
      "properties": {
        "tagName": {
          "description": "The name of the teardown tag.",
          "type": "string"
        },
        "stopTeardownOnFailure": {
          "description": "If true, fire the teardown tag if and only if the main tag fires successfully. If false, fire the teardown tag regardless of main tag firing status.",
          "type": "boolean"
        }
      },
      "description": "Represents a tag that fires after another tag in order to tear down dependencies."
    },
    "RevertZoneResponse": {
      "properties": {
        "zone": {
          "description": "Zone as it appears in the latest container version since the last workspace synchronization operation. If no zone is present, that means the zone was deleted in the latest container version.",
          "$ref": "Zone"
        }
      },
      "id": "RevertZoneResponse",
      "type": "object",
      "description": "The result of reverting a zone in a workspace."
    },
    "SyncStatus": {
      "type": "object",
      "description": "The status of a workspace after synchronization.",
      "properties": {
        "syncError": {
          "type": "boolean",
          "description": "An error occurred during the synchronization operation."
        },
        "mergeConflict": {
          "description": "Synchornization operation detected a merge conflict.",
          "type": "boolean"
        }
      },
      "id": "SyncStatus"
    }
  },
  "ownerDomain": "google.com",
  "parameters": {
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "alt": {
      "location": "query",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    }
  },
  "rootUrl": "https://tagmanager.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/tagmanager.edit.containerversions": {
          "description": "Manage your Google Tag Manager container versions"
        },
        "https://www.googleapis.com/auth/tagmanager.manage.accounts": {
          "description": "View and manage your Google Tag Manager accounts"
        },
        "https://www.googleapis.com/auth/tagmanager.readonly": {
          "description": "View your Google Tag Manager container and its subcomponents"
        },
        "https://www.googleapis.com/auth/tagmanager.publish": {
          "description": "Publish your Google Tag Manager container versions"
        },
        "https://www.googleapis.com/auth/tagmanager.delete.containers": {
          "description": "Delete your Google Tag Manager containers"
        },
        "https://www.googleapis.com/auth/tagmanager.edit.containers": {
          "description": "Manage your Google Tag Manager container and its subcomponents, excluding versioning and publishing"
        },
        "https://www.googleapis.com/auth/tagmanager.manage.users": {
          "description": "Manage user permissions of your Google Tag Manager account and container"
        }
      }
    }
  },
  "documentationLink": "https://developers.google.com/tag-manager",
  "revision": "20230926",
  "baseUrl": "https://tagmanager.googleapis.com/"
}

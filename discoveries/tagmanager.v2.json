{
  "batchPath": "batch",
  "name": "tagmanager",
  "title": "Tag Manager API",
  "ownerDomain": "google.com",
  "kind": "discovery#restDescription",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/tagmanager.manage.accounts": {
          "description": "View and manage your Google Tag Manager accounts"
        },
        "https://www.googleapis.com/auth/tagmanager.delete.containers": {
          "description": "Delete your Google Tag Manager containers"
        },
        "https://www.googleapis.com/auth/tagmanager.readonly": {
          "description": "View your Google Tag Manager container and its subcomponents"
        },
        "https://www.googleapis.com/auth/tagmanager.manage.users": {
          "description": "Manage user permissions of your Google Tag Manager account and container"
        },
        "https://www.googleapis.com/auth/tagmanager.edit.containerversions": {
          "description": "Manage your Google Tag Manager container versions"
        },
        "https://www.googleapis.com/auth/tagmanager.edit.containers": {
          "description": "Manage your Google Tag Manager container and its subcomponents, excluding versioning and publishing"
        },
        "https://www.googleapis.com/auth/tagmanager.publish": {
          "description": "Publish your Google Tag Manager container versions"
        }
      }
    }
  },
  "revision": "20230705",
  "mtlsRootUrl": "https://tagmanager.mtls.googleapis.com/",
  "rootUrl": "https://tagmanager.googleapis.com/",
  "basePath": "",
  "servicePath": "",
  "schemas": {
    "ListTransformationsResponse": {
      "id": "ListTransformationsResponse",
      "type": "object",
      "properties": {
        "transformation": {
          "description": "All GTM Transformations of a GTM Container.",
          "type": "array",
          "items": {
            "$ref": "Transformation"
          }
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      }
    },
    "RevertZoneResponse": {
      "id": "RevertZoneResponse",
      "type": "object",
      "description": "The result of reverting a zone in a workspace.",
      "properties": {
        "zone": {
          "description": "Zone as it appears in the latest container version since the last workspace synchronization operation. If no zone is present, that means the zone was deleted in the latest container version.",
          "$ref": "Zone"
        }
      }
    },
    "UserPermission": {
      "id": "UserPermission",
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The Account ID uniquely identifies the GTM Account."
        },
        "containerAccess": {
          "items": {
            "$ref": "ContainerAccess"
          },
          "type": "array",
          "description": "GTM Container access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update"
        },
        "emailAddress": {
          "type": "string",
          "description": "User's email address. @mutable tagmanager.accounts.permissions.create"
        },
        "accountAccess": {
          "$ref": "AccountAccess",
          "description": "GTM Account access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update"
        },
        "path": {
          "description": "GTM UserPermission's API relative path.",
          "type": "string"
        }
      },
      "description": "Represents a user's permissions to an account and its container."
    },
    "Workspace": {
      "id": "Workspace",
      "type": "object",
      "description": "Represents a Google Tag Manager Container Workspace.",
      "properties": {
        "description": {
          "description": "Workspace description. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "path": {
          "type": "string",
          "description": "GTM Workspace's API relative path."
        },
        "name": {
          "description": "Workspace display name. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.create",
              "tagmanager.accounts.containers.workspaces.update"
            ]
          }
        },
        "workspaceId": {
          "type": "string",
          "description": "The Workspace ID uniquely identifies the GTM Workspace."
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Workspace as computed at storage time. This value is recomputed whenever the workspace is modified.",
          "type": "string"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        }
      }
    },
    "Condition": {
      "description": "Represents a predicate.",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "conditionTypeUnspecified",
            "equals",
            "contains",
            "startsWith",
            "endsWith",
            "matchRegex",
            "greater",
            "greaterOrEquals",
            "less",
            "lessOrEquals",
            "cssSelector",
            "urlMatches"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "NOTE(lanzone): When defining a ConditionType here, don't forget to also define a matching PredicateType (in condition.proto)."
          ],
          "description": "The type of operator for this condition. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "type": "string"
        },
        "parameter": {
          "description": "A list of named parameters (key/value), depending on the condition's type. Notes: - For binary operators, include parameters named arg0 and arg1 for specifying the left and right operands, respectively. - At this time, the left operand (arg0) must be a reference to a variable. - For case-insensitive Regex matching, include a boolean parameter named ignore_case that is set to true. If not specified or set to any other value, the matching will be case sensitive. - To negate an operator, include a boolean parameter named negate boolean parameter that is set to true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "items": {
            "$ref": "Parameter"
          },
          "type": "array"
        }
      },
      "id": "Condition"
    },
    "GtagConfig": {
      "properties": {
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "containerId": {
          "description": "Google tag container ID.",
          "type": "string"
        },
        "type": {
          "description": "Google tag config type. @required tagmanager.accounts.containers.workspaces.gtag_config.create @required tagmanager.accounts.containers.workspaces.gtag_config.update @mutable tagmanager.accounts.containers.workspaces.gtag_config.create @mutable tagmanager.accounts.containers.workspaces.gtag_config.update",
          "type": "string"
        },
        "path": {
          "description": "Google tag config's API relative path.",
          "type": "string"
        },
        "parameter": {
          "description": "The Google tag config's parameters. @mutable tagmanager.accounts.containers.workspaces.gtag_config.create @mutable tagmanager.accounts.containers.workspaces.gtag_config.update",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        },
        "fingerprint": {
          "description": "The fingerprint of the Google tag config as computed at storage time. This value is recomputed whenever the config is modified.",
          "type": "string"
        },
        "workspaceId": {
          "description": "Google tag workspace ID. Only used by GTM containers. Set to 0 otherwise.",
          "type": "string"
        },
        "gtagConfigId": {
          "type": "string",
          "description": "The ID uniquely identifies the Google tag config."
        },
        "accountId": {
          "description": "Google tag account ID.",
          "type": "string"
        }
      },
      "id": "GtagConfig",
      "description": "Represents a Google tag configuration.",
      "type": "object"
    },
    "ListTriggersResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "trigger": {
          "items": {
            "$ref": "Trigger"
          },
          "type": "array",
          "description": "All GTM Triggers of a GTM Container."
        }
      },
      "description": "List triggers response.",
      "id": "ListTriggersResponse"
    },
    "ListFoldersResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "folder": {
          "description": "All GTM Folders of a GTM Container.",
          "items": {
            "$ref": "Folder"
          },
          "type": "array"
        }
      },
      "id": "ListFoldersResponse",
      "description": "List Folders Response.",
      "type": "object"
    },
    "FolderEntities": {
      "properties": {
        "trigger": {
          "description": "The list of triggers inside the folder.",
          "items": {
            "$ref": "Trigger"
          },
          "type": "array"
        },
        "variable": {
          "type": "array",
          "items": {
            "$ref": "Variable"
          },
          "description": "The list of variables inside the folder."
        },
        "tag": {
          "items": {
            "$ref": "Tag"
          },
          "description": "The list of tags inside the folder.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "description": "Represents a Google Tag Manager Folder's contents.",
      "type": "object",
      "id": "FolderEntities"
    },
    "Client": {
      "properties": {
        "path": {
          "description": "GTM client's API relative path.",
          "type": "string"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Client as computed at storage time. This value is recomputed whenever the client is modified."
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "type": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.clients.create",
              "tagmanager.accounts.containers.workspaces.clients.update"
            ]
          },
          "type": "string",
          "description": "Client type. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"
        },
        "notes": {
          "description": "User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string"
        },
        "priority": {
          "description": "Priority determines relative firing order. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update",
          "type": "integer",
          "format": "int32"
        },
        "parentFolderId": {
          "type": "string",
          "description": "Parent folder id."
        },
        "parameter": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "The client's parameters. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"
        },
        "name": {
          "description": "Client display name. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.clients.create",
              "tagmanager.accounts.containers.workspaces.clients.update"
            ]
          },
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "clientId": {
          "type": "string",
          "description": "The Client ID uniquely identifies the GTM client."
        }
      },
      "type": "object",
      "id": "Client"
    },
    "ListWorkspacesResponse": {
      "description": "A list of workspaces in a container.",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "workspace": {
          "items": {
            "$ref": "Workspace"
          },
          "type": "array",
          "description": "All Workspaces of a GTM Container."
        }
      },
      "type": "object",
      "id": "ListWorkspacesResponse"
    },
    "SyncWorkspaceResponse": {
      "properties": {
        "syncStatus": {
          "$ref": "SyncStatus",
          "description": "Indicates whether synchronization caused a merge conflict or sync error."
        },
        "mergeConflict": {
          "description": "The merge conflict after sync. If this field is not empty, the sync is still treated as successful. But a version cannot be created until all conflicts are resolved.",
          "items": {
            "$ref": "MergeConflict"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "A response after synchronizing the workspace to the latest container version.",
      "id": "SyncWorkspaceResponse"
    },
    "RevertVariableResponse": {
      "id": "RevertVariableResponse",
      "type": "object",
      "description": "The result of reverting a variable in a workspace.",
      "properties": {
        "variable": {
          "$ref": "Variable",
          "description": "Variable as it appears in the latest container version since the last workspace synchronization operation. If no variable is present, that means the variable was deleted in the latest container version."
        }
      }
    },
    "Account": {
      "description": "Represents a Google Tag Manager Account.",
      "id": "Account",
      "properties": {
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "shareData": {
          "description": "Whether the account shares data anonymously with Google and others. This flag enables benchmarking by sharing your data in an anonymous form. Google will remove all identifiable information about your website, combine the data with hundreds of other anonymous sites and report aggregate trends in the benchmarking service. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update",
          "type": "boolean"
        },
        "features": {
          "description": "Read-only Account feature set",
          "$ref": "AccountFeatures"
        },
        "name": {
          "description": "Account display name. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "GTM Account's API relative path."
        },
        "accountId": {
          "description": "The Account ID uniquely identifies the GTM Account.",
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Account as computed at storage time. This value is recomputed whenever the account is modified."
        }
      },
      "type": "object"
    },
    "CustomTemplate": {
      "id": "CustomTemplate",
      "properties": {
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Custom Template as computed at storage time. This value is recomputed whenever the template is modified."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "galleryReference": {
          "description": "A reference to the Community Template Gallery entry.",
          "$ref": "GalleryReference"
        },
        "path": {
          "type": "string",
          "description": "GTM Custom Template's API relative path."
        },
        "templateId": {
          "type": "string",
          "description": "The Custom Template ID uniquely identifies the GTM custom template."
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "name": {
          "description": "Custom Template display name.",
          "type": "string"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "templateData": {
          "description": "The custom template in text format.",
          "type": "string"
        }
      },
      "description": "Represents a Google Tag Manager Custom Template's contents.",
      "type": "object"
    },
    "RevertTriggerResponse": {
      "type": "object",
      "id": "RevertTriggerResponse",
      "description": "The result of reverting a trigger in a workspace.",
      "properties": {
        "trigger": {
          "description": "Trigger as it appears in the latest container version since the last workspace synchronization operation. If no trigger is present, that means the trigger was deleted in the latest container version.",
          "$ref": "Trigger"
        }
      }
    },
    "CreateContainerVersionResponse": {
      "id": "CreateContainerVersionResponse",
      "properties": {
        "compilerError": {
          "type": "boolean",
          "description": "Compiler errors or not."
        },
        "syncStatus": {
          "description": "Whether version creation failed when syncing the workspace to the latest container version.",
          "$ref": "SyncStatus"
        },
        "newWorkspacePath": {
          "type": "string",
          "description": "Auto generated workspace path created as a result of version creation. This field should only be populated if the created version was not a quick preview."
        },
        "containerVersion": {
          "$ref": "ContainerVersion",
          "description": "The container version created."
        }
      },
      "type": "object",
      "description": "Create container versions response."
    },
    "Tag": {
      "id": "Tag",
      "description": "Represents a Google Tag Manager Tag.",
      "type": "object",
      "properties": {
        "firingTriggerId": {
          "description": "Firing trigger IDs. A tag will fire when any of the listed triggers are true and all of its blockingTriggerIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update"
            ]
          },
          "description": "Tag display name. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "firingRuleId": {
          "deprecated": true,
          "description": "Firing rule IDs. A tag will fire when any of the listed rules are true and all of its blockingRuleIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "parameter": {
          "items": {
            "$ref": "Parameter"
          },
          "description": "The tag's parameters. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "liveOnly": {
          "type": "boolean",
          "description": "If set to true, this tag will only fire in the live environment (e.g. not in preview or debug mode). @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "blockingRuleId": {
          "deprecated": true,
          "description": "Blocking rule IDs. If any of the listed rules evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "setupTag": {
          "type": "array",
          "items": {
            "$ref": "SetupTag"
          },
          "description": "The list of setup tags. Currently we only allow one."
        },
        "tagId": {
          "description": "The Tag ID uniquely identifies the GTM Tag.",
          "type": "string"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "teardownTag": {
          "type": "array",
          "description": "The list of teardown tags. Currently we only allow one.",
          "items": {
            "$ref": "TeardownTag"
          }
        },
        "scheduleStartMs": {
          "type": "string",
          "description": "The start timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "format": "int64"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "blockingTriggerId": {
          "description": "Blocking trigger IDs. If any of the listed triggers evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "priority": {
          "description": "User defined numeric priority of the tag. Tags are fired asynchronously in order of priority. Tags with higher numeric value fire first. A tag's priority can be a positive or negative value. The default value is 0. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "$ref": "Parameter"
        },
        "monitoringMetadataTagNameKey": {
          "description": "If non-empty, then the tag display name will be included in the monitoring metadata map using the key specified. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string"
        },
        "consentSettings": {
          "description": "Consent settings of a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "$ref": "TagConsentSetting"
        },
        "scheduleEndMs": {
          "format": "int64",
          "type": "string",
          "description": "The end timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "paused": {
          "description": "Indicates whether the tag is paused, which prevents the tag from firing. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "boolean"
        },
        "path": {
          "type": "string",
          "description": "GTM Tag's API relative path."
        },
        "type": {
          "description": "GTM Tag Type. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update"
            ]
          }
        },
        "monitoringMetadata": {
          "description": "A map of key-value pairs of tag metadata to be included in the event data for tag monitoring. Notes: - This parameter must be type MAP. - Each parameter in the map are type TEMPLATE, however cannot contain variable references. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "$ref": "Parameter"
        },
        "tagFiringOption": {
          "enumDescriptions": [
            "",
            "Tag can be fired multiple times per event.",
            "Tag can only be fired per event but can be fired multiple times per load (e.g., app load or page load).",
            "Tag can only be fired per load (e.g., app load or page load)."
          ],
          "type": "string",
          "enum": [
            "tagFiringOptionUnspecified",
            "unlimited",
            "oncePerEvent",
            "oncePerLoad"
          ],
          "description": "Option to fire this tag."
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Tag as computed at storage time. This value is recomputed whenever the tag is modified."
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        }
      }
    },
    "Trigger": {
      "description": "Represents a Google Tag Manager Trigger",
      "properties": {
        "verticalScrollPercentageList": {
          "$ref": "Parameter",
          "description": "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled vertically. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "visiblePercentageMax": {
          "description": "A visibility trigger maximum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "checkValidation": {
          "description": "Whether or not we should only fire tags if the form submit or link click event is not cancelled by some other event handler (e.g. because of validation). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "continuousTimeMinMilliseconds": {
          "$ref": "Parameter",
          "description": "A visibility trigger minimum continuous visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "autoEventFilter": {
          "description": "Used in the case of auto event tracking. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "array",
          "items": {
            "$ref": "Condition"
          }
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "parameter": {
          "type": "array",
          "description": "Additional parameters. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "items": {
            "$ref": "Parameter"
          }
        },
        "intervalSeconds": {
          "description": "Time between Timer Events to fire (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "path": {
          "type": "string",
          "description": "GTM Trigger's API relative path."
        },
        "waitForTagsTimeout": {
          "description": "How long to wait (in milliseconds) for tags to fire when 'waits_for_tags' above evaluates to true. Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "type": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create"
            ]
          },
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "eventTypeUnspecified",
            "pageview",
            "domReady",
            "windowLoaded",
            "customEvent",
            "triggerGroup",
            "init",
            "consentInit",
            "serverPageview",
            "always",
            "firebaseAppException",
            "firebaseAppUpdate",
            "firebaseCampaign",
            "firebaseFirstOpen",
            "firebaseInAppPurchase",
            "firebaseNotificationDismiss",
            "firebaseNotificationForeground",
            "firebaseNotificationOpen",
            "firebaseNotificationReceive",
            "firebaseOsUpdate",
            "firebaseSessionStart",
            "firebaseUserEngagement",
            "formSubmission",
            "click",
            "linkClick",
            "jsError",
            "historyChange",
            "timer",
            "ampClick",
            "ampTimer",
            "ampScroll",
            "ampVisibility",
            "youTubeVideo",
            "scrollDepth",
            "elementVisibility"
          ],
          "description": "Defines the data layer event that causes this trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "limit": {
          "$ref": "Parameter",
          "description": "Limit of the number of GTM events this Timer Trigger will fire. If no limit is set, we will continue to fire GTM events until the user leaves the page. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Trigger as computed at storage time. This value is recomputed whenever the trigger is modified.",
          "type": "string"
        },
        "selector": {
          "description": "A click trigger CSS selector (i.e. \"a\", \"button\" etc.). Only valid for AMP Click trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "interval": {
          "description": "Time between triggering recurring Timer Events (in milliseconds). Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "customEventFilter": {
          "description": "Used in the case of custom event, which is fired iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "array",
          "items": {
            "$ref": "Condition"
          }
        },
        "triggerId": {
          "description": "The Trigger ID uniquely identifies the GTM Trigger.",
          "type": "string"
        },
        "eventName": {
          "$ref": "Parameter",
          "description": "Name of the GTM event that is fired. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "totalTimeMinMilliseconds": {
          "$ref": "Parameter",
          "description": "A visibility trigger minimum total visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "waitForTags": {
          "description": "Whether or not we should delay the form submissions or link opening until all of the tags have fired (by preventing the default action and later simulating the default action). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "horizontalScrollPercentageList": {
          "description": "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled horizontally. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "maxTimerLengthSeconds": {
          "$ref": "Parameter",
          "description": "Max time to fire Timer Events (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this trigger in the container. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "name": {
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "description": "Trigger display name. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "filter": {
          "items": {
            "$ref": "Condition"
          },
          "description": "The trigger will only fire iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "array"
        },
        "visibilitySelector": {
          "description": "A visibility trigger CSS selector (i.e. \"#id\"). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "parentFolderId": {
          "type": "string",
          "description": "Parent folder id."
        },
        "visiblePercentageMin": {
          "description": "A visibility trigger minimum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "uniqueTriggerId": {
          "description": "Globally unique id of the trigger that auto-generates this (a Form Submit, Link Click or Timer listener) if any. Used to make incompatible auto-events work together with trigger filtering based on trigger ids. This value is populated during output generation since the tags implied by triggers don't exist until then. Only valid for Form Submit, Link Click and Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        }
      },
      "id": "Trigger",
      "type": "object"
    },
    "ListEnvironmentsResponse": {
      "id": "ListEnvironmentsResponse",
      "description": "List Environments Response.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "environment": {
          "items": {
            "$ref": "Environment"
          },
          "type": "array",
          "description": "All Environments of a GTM Container."
        }
      }
    },
    "Zone": {
      "properties": {
        "typeRestriction": {
          "description": "This Zone's type restrictions.",
          "$ref": "ZoneTypeRestriction"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "notes": {
          "description": "User notes on how to apply this zone in the container.",
          "type": "string"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "path": {
          "description": "GTM Zone's API relative path.",
          "type": "string"
        },
        "name": {
          "description": "Zone display name.",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "zoneId": {
          "description": "The Zone ID uniquely identifies the GTM Zone.",
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Zone as computed at storage time. This value is recomputed whenever the zone is modified."
        },
        "childContainer": {
          "description": "Containers that are children of this Zone.",
          "items": {
            "$ref": "ZoneChildContainer"
          },
          "type": "array"
        },
        "boundary": {
          "description": "This Zone's boundary.",
          "$ref": "ZoneBoundary"
        }
      },
      "description": "Represents a Google Tag Manager Zone's contents.",
      "id": "Zone",
      "type": "object"
    },
    "ContainerAccess": {
      "type": "object",
      "id": "ContainerAccess",
      "description": "Defines the Google Tag Manager Container access permissions.",
      "properties": {
        "containerId": {
          "description": "GTM Container ID. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "type": "string"
        },
        "permission": {
          "description": "List of Container permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "containerPermissionUnspecified",
            "noAccess",
            "read",
            "edit",
            "approve",
            "publish"
          ]
        }
      }
    },
    "ZoneBoundary": {
      "description": "Represents a Zone's boundaries.",
      "properties": {
        "customEvaluationTriggerId": {
          "items": {
            "type": "string"
          },
          "description": "Custom evaluation trigger IDs. A zone will evaluate its boundary conditions when any of the listed triggers are true.",
          "type": "array"
        },
        "condition": {
          "items": {
            "$ref": "Condition"
          },
          "type": "array",
          "description": "The conditions that, when conjoined, make up the boundary."
        }
      },
      "id": "ZoneBoundary",
      "type": "object"
    },
    "ListContainerVersionsResponse": {
      "id": "ListContainerVersionsResponse",
      "description": "List container versions response.",
      "type": "object",
      "properties": {
        "containerVersionHeader": {
          "description": "All container version headers of a GTM Container.",
          "type": "array",
          "items": {
            "$ref": "ContainerVersionHeader"
          }
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      }
    },
    "GalleryReference": {
      "description": "Represents the link between a custom template and an entry on the Community Template Gallery site.",
      "type": "object",
      "properties": {
        "isModified": {
          "description": "If a user has manually edited the community gallery template.",
          "type": "boolean"
        },
        "owner": {
          "type": "string",
          "description": "The name of the owner for the community gallery template."
        },
        "version": {
          "type": "string",
          "description": "The version of the community gallery template."
        },
        "host": {
          "description": "The name of the host for the community gallery template.",
          "type": "string"
        },
        "signature": {
          "type": "string",
          "description": "The signature of the community gallery template as computed at import time. This value is recomputed whenever the template is updated from the gallery."
        },
        "repository": {
          "type": "string",
          "description": "The name of the repository for the community gallery template."
        }
      },
      "id": "GalleryReference"
    },
    "ListTagsResponse": {
      "type": "object",
      "description": "List Tags Response.",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "tag": {
          "items": {
            "$ref": "Tag"
          },
          "description": "All GTM Tags of a GTM Container.",
          "type": "array"
        }
      },
      "id": "ListTagsResponse"
    },
    "MergeConflict": {
      "type": "object",
      "properties": {
        "entityInBaseVersion": {
          "description": "The base version entity (since the latest sync operation) that has conflicting changes compared to the workspace. If this field is missing, it means the workspace entity is deleted from the base version.",
          "$ref": "Entity"
        },
        "entityInWorkspace": {
          "description": "The workspace entity that has conflicting changes compared to the base version. If an entity is deleted in a workspace, it will still appear with a deleted change status.",
          "$ref": "Entity"
        }
      },
      "description": "Represents a merge conflict.",
      "id": "MergeConflict"
    },
    "CreateContainerVersionRequestVersionOptions": {
      "type": "object",
      "id": "CreateContainerVersionRequestVersionOptions",
      "description": "Options for new container versions.",
      "properties": {
        "notes": {
          "type": "string",
          "description": "The notes of the container version to be created."
        },
        "name": {
          "type": "string",
          "description": "The name of the container version to be created."
        }
      }
    },
    "ZoneChildContainer": {
      "type": "object",
      "description": "Represents a child container of a Zone.",
      "id": "ZoneChildContainer",
      "properties": {
        "publicId": {
          "description": "The child container's public id.",
          "type": "string"
        },
        "nickname": {
          "description": "The zone's nickname for the child container.",
          "type": "string"
        }
      }
    },
    "GetContainerSnippetResponse": {
      "properties": {
        "snippet": {
          "type": "string",
          "description": "Tagging snippet for a Container."
        }
      },
      "id": "GetContainerSnippetResponse",
      "type": "object"
    },
    "PublishContainerVersionResponse": {
      "properties": {
        "compilerError": {
          "type": "boolean",
          "description": "Compiler errors or not."
        },
        "containerVersion": {
          "description": "The container version created.",
          "$ref": "ContainerVersion"
        }
      },
      "id": "PublishContainerVersionResponse",
      "type": "object",
      "description": "Publish container version response."
    },
    "ListAccountsResponse": {
      "type": "object",
      "id": "ListAccountsResponse",
      "description": "List Accounts Response.",
      "properties": {
        "account": {
          "items": {
            "$ref": "Account"
          },
          "description": "List of GTM Accounts that a user has access to.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      }
    },
    "Parameter": {
      "type": "object",
      "id": "Parameter",
      "properties": {
        "type": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update",
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update",
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "type": "string",
          "enumDescriptions": [
            "",
            "May include variable references (such as \"{{myVariable}}\").",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "typeUnspecified",
            "template",
            "integer",
            "boolean",
            "list",
            "map",
            "triggerReference",
            "tagReference"
          ],
          "description": "The parameter type. Valid values are: - boolean: The value represents a boolean, represented as 'true' or 'false' - integer: The value represents a 64-bit signed integer value, in base 10 - list: A list of parameters should be specified - map: A map of parameters should be specified - template: The value represents any text; this can include variable references (even variable references that might return non-string types) - trigger_reference: The value represents a trigger, represented as the trigger id - tag_reference: The value represents a tag, represented as the tag name @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "value": {
          "type": "string",
          "description": "A parameter's value (may contain variable references such as \"{{myVariable}}\") as appropriate to the specified type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "key": {
          "type": "string",
          "description": "The named key that uniquely identifies a parameter. Required for top-level parameters, as well as map values. Ignored for list values. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "map": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "This map parameter's parameters (must have keys; keys must be unique). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "list": {
          "description": "This list parameter's parameters (keys will be ignored). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        }
      },
      "description": "Represents a Google Tag Manager Parameter."
    },
    "RevertClientResponse": {
      "id": "RevertClientResponse",
      "properties": {
        "client": {
          "$ref": "Client",
          "description": "Client as it appears in the latest container version since the last workspace synchronization operation. If no client is present, that means the client was deleted in the latest container version."
        }
      },
      "description": "The result of reverting a client in a workspace.",
      "type": "object"
    },
    "AccountFeatures": {
      "properties": {
        "supportUserPermissions": {
          "description": "Whether this Account supports user permissions managed by GTM.",
          "type": "boolean"
        },
        "supportMultipleContainers": {
          "type": "boolean",
          "description": "Whether this Account supports multiple Containers."
        }
      },
      "type": "object",
      "id": "AccountFeatures"
    },
    "Environment": {
      "id": "Environment",
      "properties": {
        "authorizationTimestamp": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time-stamp for the authorization code."
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "path": {
          "description": "GTM Environment's API relative path.",
          "type": "string"
        },
        "containerVersionId": {
          "type": "string",
          "description": "Represents a link to a container version."
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM environment as computed at storage time. This value is recomputed whenever the environment is modified.",
          "type": "string"
        },
        "workspaceId": {
          "description": "Represents a link to a quick preview of a workspace.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The environment description. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update"
        },
        "url": {
          "description": "Default preview page url for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "type": "string"
        },
        "environmentId": {
          "type": "string",
          "description": "GTM Environment ID uniquely identifies the GTM Environment."
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.environments.create",
              "tagmanager.accounts.containers.environments.update"
            ]
          },
          "description": "The environment display name. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "type": "string"
        },
        "enableDebug": {
          "type": "boolean",
          "description": "Whether or not to enable debug by default for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "type": {
          "description": "The type of this environment.",
          "enum": [
            "user",
            "live",
            "latest",
            "workspace"
          ],
          "enumDescriptions": [
            "Points to a user defined environment.",
            "Points to the current live container version.",
            "Points to the latest container version.",
            "Automatically managed environment that points to a workspace preview or version created by a workspace."
          ],
          "type": "string"
        },
        "authorizationCode": {
          "type": "string",
          "description": "The environment authorization code."
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        }
      },
      "type": "object",
      "description": "Represents a Google Tag Manager Environment. Note that a user can create, delete and update environments of type USER, but can only update the enable_debug and url fields of environments of other types."
    },
    "Destination": {
      "properties": {
        "fingerprint": {
          "description": "The fingerprint of the Google Tag Destination as computed at storage time. This value is recomputed whenever the destination is modified.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Destination display name."
        },
        "destinationLinkId": {
          "type": "string",
          "description": "The Destination link ID uniquely identifies the Destination."
        },
        "path": {
          "type": "string",
          "description": "Destination's API relative path."
        },
        "destinationId": {
          "description": "Destination ID.",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        }
      },
      "type": "object",
      "description": "Represents a Google Tag Destination.",
      "id": "Destination"
    },
    "Entity": {
      "description": "A workspace entity that may represent a tag, trigger, variable, or folder in addition to its status in the workspace.",
      "properties": {
        "trigger": {
          "description": "The trigger being represented by the entity.",
          "$ref": "Trigger"
        },
        "variable": {
          "description": "The variable being represented by the entity.",
          "$ref": "Variable"
        },
        "transformation": {
          "$ref": "Transformation",
          "description": "The transformation being represented by the entity."
        },
        "folder": {
          "$ref": "Folder",
          "description": "The folder being represented by the entity."
        },
        "tag": {
          "description": "The tag being represented by the entity.",
          "$ref": "Tag"
        },
        "client": {
          "description": "The client being represented by the entity.",
          "$ref": "Client"
        },
        "changeStatus": {
          "enum": [
            "changeStatusUnspecified",
            "none",
            "added",
            "deleted",
            "updated"
          ],
          "enumDescriptions": [
            "",
            "The entity has never been changed.",
            "The entity is added to the workspace.",
            "The entity is deleted from the workspace.",
            "The entity has been updated in the workspace."
          ],
          "description": "Represents how the entity has been changed in the workspace.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Entity"
    },
    "AccountAccess": {
      "description": "Defines the Google Tag Manager Account access permissions.",
      "properties": {
        "permission": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "Whether the user has no access, user access, or admin access to an account. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "type": "string",
          "enum": [
            "accountPermissionUnspecified",
            "noAccess",
            "user",
            "admin"
          ]
        }
      },
      "id": "AccountAccess",
      "type": "object"
    },
    "ListUserPermissionsResponse": {
      "id": "ListUserPermissionsResponse",
      "type": "object",
      "properties": {
        "userPermission": {
          "type": "array",
          "items": {
            "$ref": "UserPermission"
          },
          "description": "All GTM UserPermissions of a GTM Account."
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "description": "List user permissions response."
    },
    "ListDestinationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "destination": {
          "items": {
            "$ref": "Destination"
          },
          "type": "array",
          "description": "All Destinations linked to a GTM Container."
        }
      },
      "id": "ListDestinationsResponse"
    },
    "VariableFormatValue": {
      "type": "object",
      "id": "VariableFormatValue",
      "properties": {
        "caseConversionType": {
          "description": "The option to convert a string-type variable value to either lowercase or uppercase.",
          "enum": [
            "none",
            "lowercase",
            "uppercase"
          ],
          "enumDescriptions": [
            "",
            "The option to convert a variable value to lowercase.",
            "The option to convert a variable value to uppercase."
          ],
          "type": "string"
        },
        "convertNullToValue": {
          "description": "The value to convert if a variable value is null.",
          "$ref": "Parameter"
        },
        "convertUndefinedToValue": {
          "$ref": "Parameter",
          "description": "The value to convert if a variable value is undefined."
        },
        "convertFalseToValue": {
          "description": "The value to convert if a variable value is false.",
          "$ref": "Parameter"
        },
        "convertTrueToValue": {
          "description": "The value to convert if a variable value is true.",
          "$ref": "Parameter"
        }
      }
    },
    "ContainerVersion": {
      "description": "Represents a Google Tag Manager Container Version.",
      "properties": {
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Container version description. @mutable tagmanager.accounts.containers.versions.update"
        },
        "name": {
          "description": "Container version display name. @mutable tagmanager.accounts.containers.versions.update",
          "type": "string"
        },
        "builtInVariable": {
          "items": {
            "$ref": "BuiltInVariable"
          },
          "description": "The built-in variables in the container that this version was taken from.",
          "type": "array"
        },
        "customTemplate": {
          "items": {
            "$ref": "CustomTemplate"
          },
          "description": "The custom templates in the container that this version was taken from.",
          "type": "array"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "deleted": {
          "type": "boolean",
          "description": "A value of true indicates this container version has been deleted."
        },
        "container": {
          "$ref": "Container",
          "description": "The container that this version was taken from."
        },
        "trigger": {
          "type": "array",
          "items": {
            "$ref": "Trigger"
          },
          "description": "The triggers in the container that this version was taken from."
        },
        "zone": {
          "type": "array",
          "description": "The zones in the container that this version was taken from.",
          "items": {
            "$ref": "Zone"
          }
        },
        "client": {
          "items": {
            "$ref": "Client"
          },
          "type": "array",
          "description": "The clients in the container that this version was taken from."
        },
        "containerVersionId": {
          "description": "The Container Version ID uniquely identifies the GTM Container Version.",
          "type": "string"
        },
        "tag": {
          "description": "The tags in the container that this version was taken from.",
          "type": "array",
          "items": {
            "$ref": "Tag"
          }
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "transformation": {
          "description": "The transformations in the container that this version was taken from.",
          "items": {
            "$ref": "Transformation"
          },
          "type": "array"
        },
        "gtagConfig": {
          "type": "array",
          "items": {
            "$ref": "GtagConfig"
          },
          "description": "The Google tag configs in the container that this version was taken from."
        },
        "folder": {
          "description": "The folders in the container that this version was taken from.",
          "items": {
            "$ref": "Folder"
          },
          "type": "array"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified.",
          "type": "string"
        },
        "path": {
          "description": "GTM Container Version's API relative path.",
          "type": "string"
        },
        "variable": {
          "items": {
            "$ref": "Variable"
          },
          "type": "array",
          "description": "The variables in the container that this version was taken from."
        }
      },
      "id": "ContainerVersion",
      "type": "object"
    },
    "Container": {
      "description": "Represents a Google Tag Manager Container, which specifies the platform tags will run on, manages workspaces, and retains container versions.",
      "id": "Container",
      "type": "object",
      "properties": {
        "name": {
          "description": "Container display name. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.create",
              "tagmanager.accounts.containers.update"
            ]
          }
        },
        "path": {
          "description": "GTM Container's API relative path.",
          "type": "string"
        },
        "taggingServerUrls": {
          "items": {
            "type": "string"
          },
          "description": "List of server-side container URLs for the Container. If multiple URLs are provided, all URL paths must match. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "type": "array"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "features": {
          "$ref": "ContainerFeatures",
          "description": "Read-only Container feature set."
        },
        "notes": {
          "type": "string",
          "description": "Container Notes. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified.",
          "type": "string"
        },
        "publicId": {
          "description": "Container Public ID.",
          "type": "string"
        },
        "usageContext": {
          "type": "array",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.create",
              "tagmanager.accounts.containers.update"
            ]
          },
          "description": "List of Usage Contexts for the Container. Valid values include: web, android, or ios. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "enum": [
              "usageContextUnspecified",
              "web",
              "android",
              "ios",
              "androidSdk5",
              "iosSdk5",
              "amp",
              "server"
            ]
          }
        },
        "containerId": {
          "description": "The Container ID uniquely identifies the GTM Container.",
          "type": "string"
        },
        "domainName": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of domain names associated with the Container. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update"
        },
        "tagIds": {
          "items": {
            "type": "string"
          },
          "description": "All Tag IDs that refer to this Container.",
          "type": "array"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        }
      }
    },
    "Folder": {
      "properties": {
        "notes": {
          "description": "User notes on how to apply this folder in the container. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "name": {
          "description": "Folder display name. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.folders.create",
              "tagmanager.accounts.containers.workspaces.folders.update"
            ]
          }
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Folder as computed at storage time. This value is recomputed whenever the folder is modified."
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "folderId": {
          "type": "string",
          "description": "The Folder ID uniquely identifies the GTM Folder."
        },
        "path": {
          "type": "string",
          "description": "GTM Folder's API relative path."
        }
      },
      "description": "Represents a Google Tag Manager Folder.",
      "id": "Folder",
      "type": "object"
    },
    "ListClientsResponse": {
      "id": "ListClientsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "client": {
          "type": "array",
          "description": "All GTM Clients of a GTM Container.",
          "items": {
            "$ref": "Client"
          }
        }
      }
    },
    "ListGtagConfigResponse": {
      "id": "ListGtagConfigResponse",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "gtagConfig": {
          "items": {
            "$ref": "GtagConfig"
          },
          "type": "array",
          "description": "All Google tag configs in a Container."
        }
      },
      "type": "object"
    },
    "ListTemplatesResponse": {
      "type": "object",
      "properties": {
        "template": {
          "items": {
            "$ref": "CustomTemplate"
          },
          "description": "All GTM Custom Templates of a GTM Container.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "id": "ListTemplatesResponse"
    },
    "SyncStatus": {
      "properties": {
        "syncError": {
          "description": "An error occurred during the synchronization operation.",
          "type": "boolean"
        },
        "mergeConflict": {
          "description": "Synchornization operation detected a merge conflict.",
          "type": "boolean"
        }
      },
      "description": "The status of a workspace after synchronization.",
      "id": "SyncStatus",
      "type": "object"
    },
    "ZoneTypeRestriction": {
      "properties": {
        "enable": {
          "description": "True if type restrictions have been enabled for this Zone.",
          "type": "boolean"
        },
        "whitelistedTypeId": {
          "description": "List of type public ids that have been whitelisted for use in this Zone.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Represents a Zone's type restrictions.",
      "type": "object",
      "id": "ZoneTypeRestriction"
    },
    "RevertFolderResponse": {
      "description": "The result of reverting folder changes in a workspace.",
      "type": "object",
      "properties": {
        "folder": {
          "description": "Folder as it appears in the latest container version since the last workspace synchronization operation. If no folder is present, that means the folder was deleted in the latest container version.",
          "$ref": "Folder"
        }
      },
      "id": "RevertFolderResponse"
    },
    "ListContainersResponse": {
      "description": "List Containers Response.",
      "type": "object",
      "properties": {
        "container": {
          "items": {
            "$ref": "Container"
          },
          "type": "array",
          "description": "All Containers of a GTM Account."
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "id": "ListContainersResponse"
    },
    "TagConsentSetting": {
      "id": "TagConsentSetting",
      "properties": {
        "consentStatus": {
          "enumDescriptions": [
            "Default value where user has not specified any setting on it.",
            "Tag doesn't require any additional consent settings.",
            "Tag requires additional consent settings."
          ],
          "enum": [
            "notSet",
            "notNeeded",
            "needed"
          ],
          "type": "string",
          "description": "The tag's consent status. If set to NEEDED, the runtime will check that the consent types specified by the consent_type field have been granted."
        },
        "consentType": {
          "$ref": "Parameter",
          "description": "The type of consents to check for during tag firing if in the consent NEEDED state. This parameter must be of type LIST where each list item is of type STRING."
        }
      },
      "type": "object"
    },
    "ContainerFeatures": {
      "id": "ContainerFeatures",
      "type": "object",
      "properties": {
        "supportVariables": {
          "type": "boolean",
          "description": "Whether this Container supports variables."
        },
        "supportUserPermissions": {
          "description": "Whether this Container supports user permissions managed by GTM.",
          "type": "boolean"
        },
        "supportTemplates": {
          "type": "boolean",
          "description": "Whether this Container supports templates."
        },
        "supportFolders": {
          "type": "boolean",
          "description": "Whether this Container supports folders."
        },
        "supportWorkspaces": {
          "type": "boolean",
          "description": "Whether this Container supports workspaces."
        },
        "supportTags": {
          "description": "Whether this Container supports tags.",
          "type": "boolean"
        },
        "supportGtagConfigs": {
          "type": "boolean",
          "description": "Whether this Container supports Google tag config."
        },
        "supportBuiltInVariables": {
          "description": "Whether this Container supports built-in variables",
          "type": "boolean"
        },
        "supportVersions": {
          "description": "Whether this Container supports Container versions.",
          "type": "boolean"
        },
        "supportTriggers": {
          "type": "boolean",
          "description": "Whether this Container supports triggers."
        },
        "supportZones": {
          "description": "Whether this Container supports zones.",
          "type": "boolean"
        },
        "supportClients": {
          "description": "Whether this Container supports clients.",
          "type": "boolean"
        },
        "supportTransformations": {
          "type": "boolean",
          "description": "Whether this Container supports transformations."
        },
        "supportEnvironments": {
          "description": "Whether this Container supports environments.",
          "type": "boolean"
        }
      }
    },
    "RevertTagResponse": {
      "id": "RevertTagResponse",
      "properties": {
        "tag": {
          "description": "Tag as it appears in the latest container version since the last workspace synchronization operation. If no tag is present, that means the tag was deleted in the latest container version.",
          "$ref": "Tag"
        }
      },
      "type": "object",
      "description": "The result of reverting a tag in a workspace."
    },
    "CreateBuiltInVariableResponse": {
      "id": "CreateBuiltInVariableResponse",
      "properties": {
        "builtInVariable": {
          "type": "array",
          "items": {
            "$ref": "BuiltInVariable"
          },
          "description": "List of created built-in variables."
        }
      },
      "type": "object"
    },
    "RevertTemplateResponse": {
      "id": "RevertTemplateResponse",
      "properties": {
        "template": {
          "description": "Template as it appears in the latest container version since the last workspace synchronization operation. If no template is present, that means the template was deleted in the latest container version.",
          "$ref": "CustomTemplate"
        }
      },
      "type": "object",
      "description": "The result of reverting a template in a workspace."
    },
    "RevertTransformationResponse": {
      "description": "The result of reverting a transformation in a workspace.",
      "properties": {
        "transformation": {
          "$ref": "Transformation",
          "description": "Transformation as it appears in the latest container version since the last workspace synchronization operation. If no transformation is present, that means the transformation was deleted in the latest container version."
        }
      },
      "type": "object",
      "id": "RevertTransformationResponse"
    },
    "Transformation": {
      "properties": {
        "parameter": {
          "items": {
            "$ref": "Parameter"
          },
          "description": "The transformation's parameters. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update",
          "type": "array"
        },
        "type": {
          "type": "string",
          "description": "Transformation type. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.transformations.create",
              "tagmanager.accounts.containers.workspaces.transformations.update"
            ]
          }
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this transformation in the container. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update"
        },
        "parentFolderId": {
          "type": "string",
          "description": "Parent folder id."
        },
        "name": {
          "type": "string",
          "description": "Transformation display name. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.transformations.create",
              "tagmanager.accounts.containers.workspaces.transformations.update"
            ]
          }
        },
        "transformationId": {
          "type": "string",
          "description": "The Transformation ID uniquely identifies the GTM transformation."
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Transformation as computed at storage time. This value is recomputed whenever the transformation is modified.",
          "type": "string"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "path": {
          "description": "GTM transformation's API relative path.",
          "type": "string"
        }
      },
      "description": "Represents a Google Tag Manager Transformation.",
      "id": "Transformation",
      "type": "object"
    },
    "QuickPreviewResponse": {
      "description": "Response to quick previewing a workspace.",
      "id": "QuickPreviewResponse",
      "type": "object",
      "properties": {
        "syncStatus": {
          "description": "Whether quick previewing failed when syncing the workspace to the latest container version.",
          "$ref": "SyncStatus"
        },
        "containerVersion": {
          "description": "The quick previewed container version.",
          "$ref": "ContainerVersion"
        },
        "compilerError": {
          "description": "Were there compiler errors or not.",
          "type": "boolean"
        }
      }
    },
    "GetWorkspaceStatusResponse": {
      "id": "GetWorkspaceStatusResponse",
      "properties": {
        "mergeConflict": {
          "type": "array",
          "description": "The merge conflict after sync.",
          "items": {
            "$ref": "MergeConflict"
          }
        },
        "workspaceChange": {
          "items": {
            "$ref": "Entity"
          },
          "type": "array",
          "description": "Entities that have been changed in the workspace."
        }
      },
      "type": "object",
      "description": "The changes that have occurred in the workspace since the base container version."
    },
    "BuiltInVariable": {
      "properties": {
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "name": {
          "description": "Name of the built-in variable to be used to refer to the built-in variable.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "GTM BuiltInVariable's API relative path."
        },
        "type": {
          "enum": [
            "builtInVariableTypeUnspecified",
            "pageUrl",
            "pageHostname",
            "pagePath",
            "referrer",
            "event",
            "clickElement",
            "clickClasses",
            "clickId",
            "clickTarget",
            "clickUrl",
            "clickText",
            "firstPartyServingUrl",
            "formElement",
            "formClasses",
            "formId",
            "formTarget",
            "formUrl",
            "formText",
            "errorMessage",
            "errorUrl",
            "errorLine",
            "newHistoryUrl",
            "oldHistoryUrl",
            "newHistoryFragment",
            "oldHistoryFragment",
            "newHistoryState",
            "oldHistoryState",
            "historySource",
            "containerVersion",
            "debugMode",
            "randomNumber",
            "containerId",
            "appId",
            "appName",
            "appVersionCode",
            "appVersionName",
            "language",
            "osVersion",
            "platform",
            "sdkVersion",
            "deviceName",
            "resolution",
            "advertiserId",
            "advertisingTrackingEnabled",
            "htmlId",
            "environmentName",
            "ampBrowserLanguage",
            "ampCanonicalPath",
            "ampCanonicalUrl",
            "ampCanonicalHost",
            "ampReferrer",
            "ampTitle",
            "ampClientId",
            "ampClientTimezone",
            "ampClientTimestamp",
            "ampClientScreenWidth",
            "ampClientScreenHeight",
            "ampClientScrollX",
            "ampClientScrollY",
            "ampClientMaxScrollX",
            "ampClientMaxScrollY",
            "ampTotalEngagedTime",
            "ampPageViewId",
            "ampPageLoadTime",
            "ampPageDownloadTime",
            "ampGtmEvent",
            "eventName",
            "firebaseEventParameterCampaign",
            "firebaseEventParameterCampaignAclid",
            "firebaseEventParameterCampaignAnid",
            "firebaseEventParameterCampaignClickTimestamp",
            "firebaseEventParameterCampaignContent",
            "firebaseEventParameterCampaignCp1",
            "firebaseEventParameterCampaignGclid",
            "firebaseEventParameterCampaignSource",
            "firebaseEventParameterCampaignTerm",
            "firebaseEventParameterCurrency",
            "firebaseEventParameterDynamicLinkAcceptTime",
            "firebaseEventParameterDynamicLinkLinkid",
            "firebaseEventParameterNotificationMessageDeviceTime",
            "firebaseEventParameterNotificationMessageId",
            "firebaseEventParameterNotificationMessageName",
            "firebaseEventParameterNotificationMessageTime",
            "firebaseEventParameterNotificationTopic",
            "firebaseEventParameterPreviousAppVersion",
            "firebaseEventParameterPreviousOsVersion",
            "firebaseEventParameterPrice",
            "firebaseEventParameterProductId",
            "firebaseEventParameterQuantity",
            "firebaseEventParameterValue",
            "videoProvider",
            "videoUrl",
            "videoTitle",
            "videoDuration",
            "videoPercent",
            "videoVisible",
            "videoStatus",
            "videoCurrentTime",
            "scrollDepthThreshold",
            "scrollDepthUnits",
            "scrollDepthDirection",
            "elementVisibilityRatio",
            "elementVisibilityTime",
            "elementVisibilityFirstTime",
            "elementVisibilityRecentTime",
            "requestPath",
            "requestMethod",
            "clientName",
            "queryString",
            "serverPageLocationUrl",
            "serverPageLocationPath",
            "serverPageLocationHostname",
            "visitorRegion"
          ],
          "type": "string",
          "description": "Type of built-in variable. @required.tagmanager.accounts.containers.workspaces.built_in_variable.update @mutable tagmanager.accounts.containers.workspaces.built_in_variable.update",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "For web or mobile.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "For web or mobile.",
            "",
            "For web or mobile.",
            "For web or mobile.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        }
      },
      "description": "Built-in variables are a special category of variables that are pre-created and non-customizable. They provide common functionality like accessing properties of the gtm data layer, monitoring clicks, or accessing elements of a page URL.",
      "id": "BuiltInVariable",
      "type": "object"
    },
    "ListZonesResponse": {
      "id": "ListZonesResponse",
      "type": "object",
      "properties": {
        "zone": {
          "description": "All GTM Zones of a GTM Container.",
          "type": "array",
          "items": {
            "$ref": "Zone"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      }
    },
    "TeardownTag": {
      "properties": {
        "tagName": {
          "type": "string",
          "description": "The name of the teardown tag."
        },
        "stopTeardownOnFailure": {
          "description": "If true, fire the teardown tag if and only if the main tag fires successfully. If false, fire the teardown tag regardless of main tag firing status.",
          "type": "boolean"
        }
      },
      "id": "TeardownTag",
      "type": "object",
      "description": "Represents a tag that fires after another tag in order to tear down dependencies."
    },
    "Variable": {
      "type": "object",
      "properties": {
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "scheduleEndMs": {
          "description": "The end timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "string",
          "format": "int64"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this variable in the container. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "description": "Variable display name. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "string"
        },
        "parameter": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "The variable's parameters. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "parentFolderId": {
          "type": "string",
          "description": "Parent folder id."
        },
        "path": {
          "description": "GTM Variable's API relative path.",
          "type": "string"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Variable as computed at storage time. This value is recomputed whenever the variable is modified.",
          "type": "string"
        },
        "enablingTriggerId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "For mobile containers only: A list of trigger IDs for enabling conditional variables; the variable is enabled if one of the enabling triggers is true while all the disabling triggers are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "formatValue": {
          "description": "Option to convert a variable value to other value.",
          "$ref": "VariableFormatValue"
        },
        "type": {
          "description": "GTM Variable Type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "type": "string"
        },
        "scheduleStartMs": {
          "description": "The start timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "string",
          "format": "int64"
        },
        "variableId": {
          "type": "string",
          "description": "The Variable ID uniquely identifies the GTM Variable."
        },
        "disablingTriggerId": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "For mobile containers only: A list of trigger IDs for disabling conditional variables; the variable is enabled if one of the enabling trigger is true while all the disabling trigger are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        }
      },
      "id": "Variable",
      "description": "Represents a Google Tag Manager Variable."
    },
    "RevertBuiltInVariableResponse": {
      "properties": {
        "enabled": {
          "description": "Whether the built-in variable is enabled after reversion.",
          "type": "boolean"
        }
      },
      "description": "The result of reverting a built-in variable in a workspace.",
      "type": "object",
      "id": "RevertBuiltInVariableResponse"
    },
    "ListEnabledBuiltInVariablesResponse": {
      "id": "ListEnabledBuiltInVariablesResponse",
      "properties": {
        "builtInVariable": {
          "description": "All GTM BuiltInVariables of a GTM container.",
          "items": {
            "$ref": "BuiltInVariable"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "description": "A list of enabled built-in variables.",
      "type": "object"
    },
    "ContainerVersionHeader": {
      "description": "Represents a Google Tag Manager Container Version Header.",
      "properties": {
        "name": {
          "description": "Container version display name.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "numTags": {
          "description": "Number of tags in the container version.",
          "type": "string"
        },
        "numVariables": {
          "description": "Number of variables in the container version.",
          "type": "string"
        },
        "numRules": {
          "deprecated": true,
          "description": "Number of rules in the container version.",
          "type": "string"
        },
        "numCustomTemplates": {
          "type": "string",
          "description": "Number of custom templates in the container version."
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "numClients": {
          "description": "Number of clients in the container version.",
          "type": "string"
        },
        "deleted": {
          "type": "boolean",
          "description": "A value of true indicates this container version has been deleted."
        },
        "path": {
          "type": "string",
          "description": "GTM Container Version's API relative path."
        },
        "numGtagConfigs": {
          "description": "Number of Google tag configs in the container version.",
          "type": "string"
        },
        "numMacros": {
          "deprecated": true,
          "type": "string",
          "description": "Number of macros in the container version."
        },
        "numTriggers": {
          "description": "Number of triggers in the container version.",
          "type": "string"
        },
        "numZones": {
          "description": "Number of zones in the container version.",
          "type": "string"
        },
        "containerVersionId": {
          "description": "The Container Version ID uniquely identifies the GTM Container Version.",
          "type": "string"
        },
        "numTransformations": {
          "type": "string",
          "description": "Number of transformations in the container version."
        }
      },
      "type": "object",
      "id": "ContainerVersionHeader"
    },
    "ListVariablesResponse": {
      "type": "object",
      "id": "ListVariablesResponse",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "variable": {
          "description": "All GTM Variables of a GTM Container.",
          "type": "array",
          "items": {
            "$ref": "Variable"
          }
        }
      },
      "description": "List Variables Response."
    },
    "SetupTag": {
      "description": "Represents a reference to atag that fires before another tag in order to set up dependencies.",
      "type": "object",
      "id": "SetupTag",
      "properties": {
        "stopOnSetupFailure": {
          "description": "If true, fire the main tag if and only if the setup tag fires successfully. If false, fire the main tag regardless of setup tag firing status.",
          "type": "boolean"
        },
        "tagName": {
          "description": "The name of the setup tag.",
          "type": "string"
        }
      }
    }
  },
  "id": "tagmanager:v2",
  "resources": {
    "accounts": {
      "resources": {
        "containers": {
          "methods": {
            "create": {
              "parameters": {
                "parent": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^accounts/[^/]+$",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}."
                }
              },
              "description": "Creates a Container.",
              "httpMethod": "POST",
              "response": {
                "$ref": "Container"
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "path": "tagmanager/v2/{+parent}/containers",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers",
              "request": {
                "$ref": "Container"
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "tagmanager.accounts.containers.create"
            },
            "delete": {
              "parameters": {
                "path": {
                  "location": "path",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "type": "string",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "required": true
                }
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.delete.containers"
              ],
              "httpMethod": "DELETE",
              "parameterOrder": [
                "path"
              ],
              "path": "tagmanager/v2/{+path}",
              "description": "Deletes a Container.",
              "id": "tagmanager.accounts.containers.delete"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "path": "tagmanager/v2/{+parent}/containers",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers",
              "httpMethod": "GET",
              "id": "tagmanager.accounts.containers.list",
              "description": "Lists all Containers that belongs to a GTM Account.",
              "response": {
                "$ref": "ListContainersResponse"
              },
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^accounts/[^/]+$"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Continuation token for fetching the next page of results."
                }
              }
            },
            "move_tag_id": {
              "httpMethod": "POST",
              "path": "tagmanager/v2/{+path}:move_tag_id",
              "description": "Move Tag ID out of a Container.",
              "parameters": {
                "allowUserPermissionFeatureUpdate": {
                  "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail.",
                  "location": "query",
                  "type": "boolean"
                },
                "copyTermsOfService": {
                  "type": "boolean",
                  "description": "Must be set to true to accept all terms of service agreements copied from the current tag to the newly created tag. If this bit is false, the operation will fail.",
                  "location": "query"
                },
                "path": {
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "type": "string"
                },
                "tagId": {
                  "description": "Tag ID to be removed from the current Container.",
                  "location": "query",
                  "type": "string"
                },
                "copyUsers": {
                  "type": "boolean",
                  "description": "Whether or not to copy users from this tag to the new tag.",
                  "location": "query"
                },
                "copySettings": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Whether or not to copy tag settings from this tag to the new tag."
                },
                "tagName": {
                  "type": "string",
                  "location": "query",
                  "description": "The name for the newly created tag."
                }
              },
              "response": {
                "$ref": "Container"
              },
              "parameterOrder": [
                "path"
              ],
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:move_tag_id",
              "id": "tagmanager.accounts.containers.move_tag_id",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ]
            },
            "lookup": {
              "description": "Looks up a Container by destination ID.",
              "parameterOrder": [],
              "id": "tagmanager.accounts.containers.lookup",
              "parameters": {
                "destinationId": {
                  "description": "Destination ID linked to a GTM Container, e.g. AW-123456789. Example: accounts/containers:lookup?destination_id={destination_id}.",
                  "location": "query",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "path": "tagmanager/v2/accounts/containers:lookup",
              "response": {
                "$ref": "Container"
              },
              "flatPath": "tagmanager/v2/accounts/containers:lookup",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ]
            },
            "update": {
              "description": "Updates a Container.",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "httpMethod": "PUT",
              "path": "tagmanager/v2/{+path}",
              "parameterOrder": [
                "path"
              ],
              "id": "tagmanager.accounts.containers.update",
              "request": {
                "$ref": "Container"
              },
              "response": {
                "$ref": "Container"
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "parameters": {
                "path": {
                  "required": true,
                  "type": "string",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "location": "path"
                },
                "fingerprint": {
                  "type": "string",
                  "location": "query",
                  "description": "When provided, this fingerprint must match the fingerprint of the container in storage."
                }
              }
            },
            "combine": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:combine",
              "parameterOrder": [
                "path"
              ],
              "parameters": {
                "containerId": {
                  "description": "ID of container that will be merged into the current container.",
                  "location": "query",
                  "type": "string"
                },
                "allowUserPermissionFeatureUpdate": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail."
                },
                "settingSource": {
                  "type": "string",
                  "description": "Specify the source of config setting after combine",
                  "enum": [
                    "settingSourceUnspecified",
                    "current",
                    "other"
                  ],
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Keep the current container config setting after combine",
                    "Use config setting from the other tag after combine"
                  ]
                },
                "path": {
                  "required": true,
                  "location": "path",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "type": "string",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}"
                }
              },
              "description": "Combines Containers.",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "response": {
                "$ref": "Container"
              },
              "id": "tagmanager.accounts.containers.combine",
              "httpMethod": "POST",
              "path": "tagmanager/v2/{+path}:combine"
            },
            "get": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "parameters": {
                "path": {
                  "required": true,
                  "location": "path",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "type": "string",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}"
                }
              },
              "description": "Gets a Container.",
              "parameterOrder": [
                "path"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "path": "tagmanager/v2/{+path}",
              "response": {
                "$ref": "Container"
              },
              "id": "tagmanager.accounts.containers.get",
              "httpMethod": "GET"
            },
            "snippet": {
              "id": "tagmanager.accounts.containers.snippet",
              "description": "Gets the tagging snippet for a Container.",
              "parameterOrder": [
                "path"
              ],
              "parameters": {
                "path": {
                  "type": "string",
                  "location": "path",
                  "description": "Container snippet's API relative path. Example: accounts/{account_id}/containers/{container_id}:snippet",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "required": true
                }
              },
              "path": "tagmanager/v2/{+path}:snippet",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:snippet",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "response": {
                "$ref": "GetContainerSnippetResponse"
              }
            }
          },
          "resources": {
            "versions": {
              "methods": {
                "undelete": {
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "id": "tagmanager.accounts.containers.versions.undelete",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:undelete",
                  "description": "Undeletes a Container Version.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "path": "tagmanager/v2/{+path}:undelete",
                  "httpMethod": "POST",
                  "parameters": {
                    "path": {
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "type": "string",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "required": true
                    }
                  }
                },
                "set_latest": {
                  "httpMethod": "POST",
                  "path": "tagmanager/v2/{+path}:set_latest",
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "parameters": {
                    "path": {
                      "required": true,
                      "type": "string",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"
                    }
                  },
                  "id": "tagmanager.accounts.containers.versions.set_latest",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:set_latest",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "description": "Sets the latest version used for synchronization of workspaces when detecting conflicts and errors."
                },
                "delete": {
                  "id": "tagmanager.accounts.containers.versions.delete",
                  "httpMethod": "DELETE",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "path": "tagmanager/v2/{+path}",
                  "description": "Deletes a Container Version."
                },
                "publish": {
                  "response": {
                    "$ref": "PublishContainerVersionResponse"
                  },
                  "description": "Publishes a Container Version.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.publish"
                  ],
                  "id": "tagmanager.accounts.containers.versions.publish",
                  "httpMethod": "POST",
                  "path": "tagmanager/v2/{+path}:publish",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:publish",
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"
                    },
                    "fingerprint": {
                      "description": "When provided, this fingerprint must match the fingerprint of the container version in storage.",
                      "type": "string",
                      "location": "query"
                    }
                  }
                },
                "update": {
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "id": "tagmanager.accounts.containers.versions.update",
                  "description": "Updates a Container Version.",
                  "path": "tagmanager/v2/{+path}",
                  "parameters": {
                    "fingerprint": {
                      "description": "When provided, this fingerprint must match the fingerprint of the container version in storage.",
                      "type": "string",
                      "location": "query"
                    },
                    "path": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}"
                    }
                  },
                  "request": {
                    "$ref": "ContainerVersion"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "httpMethod": "PUT"
                },
                "get": {
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "parameters": {
                    "path": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}"
                    },
                    "containerVersionId": {
                      "location": "query",
                      "type": "string",
                      "description": "The GTM ContainerVersion ID. Specify published to retrieve the currently published version."
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "path": "tagmanager/v2/{+path}",
                  "description": "Gets a Container Version.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "httpMethod": "GET",
                  "id": "tagmanager.accounts.containers.versions.get"
                },
                "live": {
                  "path": "tagmanager/v2/{+parent}/versions:live",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "id": "tagmanager.accounts.containers.versions.live",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions:live",
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "parameters": {
                    "parent": {
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "description": "Gets the live (i.e. published) container version"
                }
              }
            },
            "version_headers": {
              "methods": {
                "latest": {
                  "httpMethod": "GET",
                  "description": "Gets the latest container version header",
                  "id": "tagmanager.accounts.containers.version_headers.latest",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers:latest",
                  "response": {
                    "$ref": "ContainerVersionHeader"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "tagmanager/v2/{+parent}/version_headers:latest"
                },
                "list": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "tagmanager.accounts.containers.version_headers.list",
                  "path": "tagmanager/v2/{+parent}/version_headers",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "Continuation token for fetching the next page of results.",
                      "location": "query"
                    },
                    "parent": {
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "location": "path",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "required": true
                    },
                    "includeDeleted": {
                      "description": "Also retrieve deleted (archived) versions when true.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "response": {
                    "$ref": "ListContainerVersionsResponse"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers",
                  "description": "Lists all Container Versions of a GTM Container."
                }
              }
            },
            "destinations": {
              "methods": {
                "link": {
                  "id": "tagmanager.accounts.containers.destinations.link",
                  "path": "tagmanager/v2/{+parent}/destinations:link",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Adds a Destination to this Container and removes it from the Container to which it is currently linked.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations:link",
                  "parameters": {
                    "parent": {
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true,
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path"
                    },
                    "allowUserPermissionFeatureUpdate": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail."
                    },
                    "destinationId": {
                      "location": "query",
                      "type": "string",
                      "description": "Destination ID to be linked to the current container."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Destination"
                  }
                },
                "get": {
                  "path": "tagmanager/v2/{+path}",
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations/{destinationsId}",
                  "parameters": {
                    "path": {
                      "required": true,
                      "description": "Google Tag Destination's API relative path. Example: accounts/{account_id}/containers/{container_id}/destinations/{destination_link_id}",
                      "type": "string",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/destinations/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "tagmanager.accounts.containers.destinations.get",
                  "description": "Gets a Destination.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "response": {
                    "$ref": "Destination"
                  }
                },
                "list": {
                  "id": "tagmanager.accounts.containers.destinations.list",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "description": "Lists all Destinations linked to a GTM Container.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations",
                  "path": "tagmanager/v2/{+parent}/destinations",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "ListDestinationsResponse"
                  }
                }
              }
            },
            "workspaces": {
              "methods": {
                "delete": {
                  "id": "tagmanager.accounts.containers.workspaces.delete",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "httpMethod": "DELETE",
                  "description": "Deletes a Workspace.",
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.delete.containers"
                  ],
                  "parameters": {
                    "path": {
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                    }
                  },
                  "path": "tagmanager/v2/{+path}"
                },
                "resolve_conflict": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:resolve_conflict",
                  "id": "tagmanager.accounts.containers.workspaces.resolve_conflict",
                  "parameters": {
                    "fingerprint": {
                      "type": "string",
                      "location": "query",
                      "description": "When provided, this fingerprint must match the fingerprint of the entity_in_workspace in the merge conflict."
                    },
                    "path": {
                      "location": "path",
                      "type": "string",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "Entity"
                  },
                  "description": "Resolves a merge conflict for a workspace entity by updating it to the resolved entity passed in the request.",
                  "parameterOrder": [
                    "path"
                  ],
                  "path": "tagmanager/v2/{+path}:resolve_conflict",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "httpMethod": "POST"
                },
                "sync": {
                  "path": "tagmanager/v2/{+path}:sync",
                  "id": "tagmanager.accounts.containers.workspaces.sync",
                  "parameters": {
                    "path": {
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "SyncWorkspaceResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:sync",
                  "description": "Syncs a workspace to the latest container version by updating all unmodified workspace entities and displaying conflicts for modified entities."
                },
                "create_version": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "parameters": {
                    "path": {
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:create_version",
                  "path": "tagmanager/v2/{+path}:create_version",
                  "httpMethod": "POST",
                  "description": "Creates a Container Version from the entities present in the workspace, deletes the workspace, and sets the base container version to the newly created version.",
                  "response": {
                    "$ref": "CreateContainerVersionResponse"
                  },
                  "id": "tagmanager.accounts.containers.workspaces.create_version",
                  "request": {
                    "$ref": "CreateContainerVersionRequestVersionOptions"
                  },
                  "parameterOrder": [
                    "path"
                  ]
                },
                "quick_preview": {
                  "path": "tagmanager/v2/{+path}:quick_preview",
                  "httpMethod": "POST",
                  "description": "Quick previews a workspace by creating a fake container version from all entities in the provided workspace.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "parameters": {
                    "path": {
                      "location": "path",
                      "required": true,
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                    }
                  },
                  "id": "tagmanager.accounts.containers.workspaces.quick_preview",
                  "response": {
                    "$ref": "QuickPreviewResponse"
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:quick_preview"
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces",
                  "request": {
                    "$ref": "Workspace"
                  },
                  "response": {
                    "$ref": "Workspace"
                  },
                  "id": "tagmanager.accounts.containers.workspaces.create",
                  "path": "tagmanager/v2/{+parent}/workspaces",
                  "description": "Creates a Workspace.",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ]
                },
                "get": {
                  "parameterOrder": [
                    "path"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets a Workspace.",
                  "id": "tagmanager.accounts.containers.workspaces.get",
                  "path": "tagmanager/v2/{+path}",
                  "response": {
                    "$ref": "Workspace"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "parameters": {
                    "path": {
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "update": {
                  "response": {
                    "$ref": "Workspace"
                  },
                  "description": "Updates a Workspace.",
                  "parameters": {
                    "fingerprint": {
                      "location": "query",
                      "description": "When provided, this fingerprint must match the fingerprint of the workspace in storage.",
                      "type": "string"
                    },
                    "path": {
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "Workspace"
                  },
                  "path": "tagmanager/v2/{+path}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "httpMethod": "PUT",
                  "id": "tagmanager.accounts.containers.workspaces.update"
                },
                "getStatus": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/status",
                  "parameters": {
                    "path": {
                      "location": "path",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "required": true,
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                    }
                  },
                  "id": "tagmanager.accounts.containers.workspaces.getStatus",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "response": {
                    "$ref": "GetWorkspaceStatusResponse"
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "httpMethod": "GET",
                  "description": "Finds conflicting and modified entities in the workspace.",
                  "path": "tagmanager/v2/{+path}/status"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "tagmanager/v2/{+parent}/workspaces",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "response": {
                    "$ref": "ListWorkspacesResponse"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces",
                  "id": "tagmanager.accounts.containers.workspaces.list",
                  "description": "Lists all Workspaces that belong to a GTM Container.",
                  "parameters": {
                    "parent": {
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Continuation token for fetching the next page of results.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET"
                }
              },
              "resources": {
                "folders": {
                  "methods": {
                    "get": {
                      "httpMethod": "GET",
                      "description": "Gets a GTM Folder.",
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "id": "tagmanager.accounts.containers.workspaces.folders.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameters": {
                        "path": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}"
                        }
                      },
                      "response": {
                        "$ref": "Folder"
                      },
                      "path": "tagmanager/v2/{+path}"
                    },
                    "entities": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.folders.entities",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results."
                        },
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}"
                        }
                      },
                      "response": {
                        "$ref": "FolderEntities"
                      },
                      "path": "tagmanager/v2/{+path}:entities",
                      "httpMethod": "POST",
                      "description": "List all entities in a GTM Folder.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:entities"
                    },
                    "create": {
                      "request": {
                        "$ref": "Folder"
                      },
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/folders",
                      "description": "Creates a GTM Folder.",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "Folder"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.folders.create",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders"
                    },
                    "list": {
                      "response": {
                        "$ref": "ListFoldersResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "description": "Lists all GTM Folders of a Container.",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        },
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.folders.list",
                      "httpMethod": "GET",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders",
                      "path": "tagmanager/v2/{+parent}/folders"
                    },
                    "revert": {
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the tag in storage.",
                          "type": "string"
                        },
                        "path": {
                          "type": "string",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "RevertFolderResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.folders.revert",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}:revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:revert",
                      "description": "Reverts changes to a GTM Folder in a GTM Workspace."
                    },
                    "move_entities_to_folder": {
                      "id": "tagmanager.accounts.containers.workspaces.folders.move_entities_to_folder",
                      "parameters": {
                        "variableId": {
                          "location": "query",
                          "type": "string",
                          "description": "The variables to be moved to the folder.",
                          "repeated": true
                        },
                        "triggerId": {
                          "description": "The triggers to be moved to the folder.",
                          "type": "string",
                          "repeated": true,
                          "location": "query"
                        },
                        "path": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "location": "path",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "type": "string"
                        },
                        "tagId": {
                          "repeated": true,
                          "location": "query",
                          "description": "The tags to be moved to the folder.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "POST",
                      "description": "Moves entities to a GTM Folder.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:move_entities_to_folder",
                      "request": {
                        "$ref": "Folder"
                      },
                      "path": "tagmanager/v2/{+path}:move_entities_to_folder"
                    },
                    "update": {
                      "request": {
                        "$ref": "Folder"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.folders.update",
                      "parameters": {
                        "path": {
                          "required": true,
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$"
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the folder in storage.",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "description": "Updates a GTM Folder.",
                      "httpMethod": "PUT",
                      "response": {
                        "$ref": "Folder"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "id": "tagmanager.accounts.containers.workspaces.folders.delete",
                      "description": "Deletes a GTM Folder.",
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ]
                    }
                  }
                },
                "tags": {
                  "methods": {
                    "update": {
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "type": "string",
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "required": true,
                          "location": "path"
                        },
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the tag in storage.",
                          "type": "string"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "Tag"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "request": {
                        "$ref": "Tag"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.tags.update",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "PUT",
                      "description": "Updates a GTM Tag."
                    },
                    "delete": {
                      "parameters": {
                        "path": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}"
                        }
                      },
                      "description": "Deletes a GTM Tag.",
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "DELETE",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.tags.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "create": {
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "tagmanager/v2/{+parent}/tags",
                      "request": {
                        "$ref": "Tag"
                      },
                      "response": {
                        "$ref": "Tag"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags",
                      "description": "Creates a GTM Tag.",
                      "id": "tagmanager.accounts.containers.workspaces.tags.create",
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      }
                    },
                    "get": {
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Tag"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.tags.get",
                      "description": "Gets a GTM Tag."
                    },
                    "list": {
                      "description": "Lists all GTM Tags of a Container.",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        },
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListTagsResponse"
                      },
                      "httpMethod": "GET",
                      "path": "tagmanager/v2/{+parent}/tags",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.tags.list",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags"
                    },
                    "revert": {
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of thetag in storage.",
                          "type": "string"
                        },
                        "path": {
                          "required": true,
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}:revert",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.tags.revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}:revert",
                      "response": {
                        "$ref": "RevertTagResponse"
                      },
                      "httpMethod": "POST",
                      "description": "Reverts changes to a GTM Tag in a GTM Workspace."
                    }
                  }
                },
                "transformations": {
                  "methods": {
                    "update": {
                      "description": "Updates a GTM Transformation.",
                      "parameterOrder": [
                        "path"
                      ],
                      "request": {
                        "$ref": "Transformation"
                      },
                      "response": {
                        "$ref": "Transformation"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.transformations.update",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "description": "GTM Transformation's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/transformations/{transformation_id}",
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/transformations/[^/]+$"
                        },
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the transformation in storage.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "PUT",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations/{transformationsId}",
                      "path": "tagmanager/v2/{+path}"
                    },
                    "revert": {
                      "parameters": {
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the transformation in storage."
                        },
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/transformations/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "GTM Transformation's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/transformations/{transformation_id}",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "RevertTransformationResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.transformations.revert",
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Reverts changes to a GTM Transformation in a GTM Workspace.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations/{transformationsId}:revert",
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+path}:revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "get": {
                      "path": "tagmanager/v2/{+path}",
                      "description": "Gets a GTM Transformation.",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/transformations/[^/]+$",
                          "location": "path",
                          "description": "GTM Transformation's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/transformations/{transformation_id}",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations/{transformationsId}",
                      "httpMethod": "GET",
                      "id": "tagmanager.accounts.containers.workspaces.transformations.get",
                      "response": {
                        "$ref": "Transformation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "list": {
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path"
                        }
                      },
                      "description": "Lists all GTM Transformations of a GTM container workspace.",
                      "response": {
                        "$ref": "ListTransformationsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.transformations.list",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations",
                      "path": "tagmanager/v2/{+parent}/transformations",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ]
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Transformation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Creates a GTM Transformation.",
                      "path": "tagmanager/v2/{+parent}/transformations",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations",
                      "id": "tagmanager.accounts.containers.workspaces.transformations.create",
                      "request": {
                        "$ref": "Transformation"
                      }
                    },
                    "delete": {
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "DELETE",
                      "description": "Deletes a GTM Transformation.",
                      "id": "tagmanager.accounts.containers.workspaces.transformations.delete",
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations/{transformationsId}",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "description": "GTM Transformation's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/transformations/{transformation_id}",
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/transformations/[^/]+$"
                        }
                      }
                    }
                  }
                },
                "clients": {
                  "methods": {
                    "delete": {
                      "id": "tagmanager.accounts.containers.workspaces.clients.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "path": {
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Deletes a GTM Client.",
                      "path": "tagmanager/v2/{+path}"
                    },
                    "get": {
                      "response": {
                        "$ref": "Client"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}",
                      "description": "Gets a GTM Client.",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.clients.get",
                      "httpMethod": "GET",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "required": true,
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ]
                    },
                    "list": {
                      "response": {
                        "$ref": "ListClientsResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.clients.list",
                      "description": "Lists all GTM Clients of a GTM container workspace.",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        },
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "tagmanager/v2/{+parent}/clients",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ]
                    },
                    "create": {
                      "id": "tagmanager.accounts.containers.workspaces.clients.create",
                      "request": {
                        "$ref": "Client"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients",
                      "path": "tagmanager/v2/{+parent}/clients",
                      "description": "Creates a GTM Client.",
                      "response": {
                        "$ref": "Client"
                      }
                    },
                    "revert": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}:revert",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the client in storage."
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.clients.revert",
                      "response": {
                        "$ref": "RevertClientResponse"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}:revert",
                      "description": "Reverts changes to a GTM Client in a GTM Workspace."
                    },
                    "update": {
                      "response": {
                        "$ref": "Client"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "request": {
                        "$ref": "Client"
                      },
                      "httpMethod": "PUT",
                      "id": "tagmanager.accounts.containers.workspaces.clients.update",
                      "description": "Updates a GTM Client.",
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "location": "path",
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "required": true
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the client in storage.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}"
                    }
                  }
                },
                "zones": {
                  "methods": {
                    "revert": {
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "path": {
                          "location": "path",
                          "type": "string",
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$"
                        },
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the zone in storage.",
                          "type": "string"
                        }
                      },
                      "description": "Reverts changes to a GTM Zone in a GTM Workspace.",
                      "response": {
                        "$ref": "RevertZoneResponse"
                      },
                      "path": "tagmanager/v2/{+path}:revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}:revert",
                      "id": "tagmanager.accounts.containers.workspaces.zones.revert",
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+parent}/zones",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.zones.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "description": "Creates a GTM Zone.",
                      "request": {
                        "$ref": "Zone"
                      },
                      "response": {
                        "$ref": "Zone"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones"
                    },
                    "update": {
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "Zone"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.zones.update",
                      "httpMethod": "PUT",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        },
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the zone in storage."
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Updates a GTM Zone.",
                      "request": {
                        "$ref": "Zone"
                      }
                    },
                    "get": {
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Gets a GTM Zone.",
                      "response": {
                        "$ref": "Zone"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.zones.get",
                      "parameters": {
                        "path": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "location": "path",
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "type": "string"
                        }
                      }
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "path": "tagmanager/v2/{+path}",
                      "description": "Deletes a GTM Zone.",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.zones.delete",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}"
                    },
                    "list": {
                      "id": "tagmanager.accounts.containers.workspaces.zones.list",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListZonesResponse"
                      },
                      "path": "tagmanager/v2/{+parent}/zones",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones",
                      "httpMethod": "GET",
                      "description": "Lists all GTM Zones of a GTM container workspace."
                    }
                  }
                },
                "variables": {
                  "methods": {
                    "revert": {
                      "description": "Reverts changes to a GTM Variable in a GTM Workspace.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}:revert",
                      "id": "tagmanager.accounts.containers.workspaces.variables.revert",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "location": "path",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "required": true
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the variable in storage.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "path": "tagmanager/v2/{+path}:revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "RevertVariableResponse"
                      },
                      "httpMethod": "POST"
                    },
                    "create": {
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "Variable"
                      },
                      "path": "tagmanager/v2/{+parent}/variables",
                      "id": "tagmanager.accounts.containers.workspaces.variables.create",
                      "request": {
                        "$ref": "Variable"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Creates a GTM Variable.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables"
                    },
                    "get": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "Variable"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.variables.get",
                      "parameters": {
                        "path": {
                          "required": true,
                          "type": "string",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "location": "path"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "description": "Gets a GTM Variable.",
                      "path": "tagmanager/v2/{+path}"
                    },
                    "delete": {
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "description": "Deletes a GTM Variable.",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.variables.delete"
                    },
                    "list": {
                      "description": "Lists all GTM Variables of a Container.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.variables.list",
                      "path": "tagmanager/v2/{+parent}/variables",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "response": {
                        "$ref": "ListVariablesResponse"
                      },
                      "httpMethod": "GET"
                    },
                    "update": {
                      "request": {
                        "$ref": "Variable"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Updates a GTM Variable.",
                      "httpMethod": "PUT",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "required": true,
                          "location": "path"
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the variable in storage.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "Variable"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.variables.update"
                    }
                  }
                },
                "built_in_variables": {
                  "methods": {
                    "revert": {
                      "response": {
                        "$ref": "RevertBuiltInVariableResponse"
                      },
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+path}/built_in_variables:revert",
                      "description": "Reverts changes to a GTM Built-In Variables in a GTM Workspace.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables:revert",
                      "parameters": {
                        "type": {
                          "location": "query",
                          "type": "string",
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname",
                            "visitorRegion"
                          ],
                          "description": "The type of built-in variable to revert."
                        },
                        "path": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.revert"
                    },
                    "delete": {
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.delete",
                      "parameters": {
                        "type": {
                          "type": "string",
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "repeated": true,
                          "location": "query",
                          "description": "The types of built-in variables to delete.",
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname",
                            "visitorRegion"
                          ]
                        },
                        "path": {
                          "required": true,
                          "description": "GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables",
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/built_in_variables$"
                        }
                      },
                      "description": "Deletes one or more GTM Built-In Variables.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "DELETE",
                      "path": "tagmanager/v2/{+path}",
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "type": {
                          "repeated": true,
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname",
                            "visitorRegion"
                          ],
                          "type": "string",
                          "location": "query",
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "description": "The types of built-in variables to enable."
                        },
                        "parent": {
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/built_in_variables",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.create",
                      "description": "Creates one or more GTM Built-In Variables.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "CreateBuiltInVariableResponse"
                      }
                    },
                    "list": {
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListEnabledBuiltInVariablesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameters": {
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        },
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.list",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "path": "tagmanager/v2/{+parent}/built_in_variables",
                      "description": "Lists all the enabled Built-In Variables of a GTM Container."
                    }
                  }
                },
                "gtag_config": {
                  "methods": {
                    "update": {
                      "httpMethod": "PUT",
                      "response": {
                        "$ref": "GtagConfig"
                      },
                      "request": {
                        "$ref": "GtagConfig"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the config in storage.",
                          "location": "query",
                          "type": "string"
                        },
                        "path": {
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "path": "tagmanager/v2/{+path}",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.update",
                      "description": "Updates a Google tag config."
                    },
                    "delete": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}"
                        }
                      },
                      "description": "Deletes a Google tag config.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.delete",
                      "httpMethod": "DELETE",
                      "path": "tagmanager/v2/{+path}"
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$",
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "GtagConfig"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Gets a Google tag config.",
                      "httpMethod": "GET",
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.get"
                    },
                    "create": {
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true,
                          "description": "Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path"
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/gtag_config",
                      "description": "Creates a Google tag config.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GtagConfig"
                      },
                      "request": {
                        "$ref": "GtagConfig"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "list": {
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.list",
                      "description": "Lists all Google tag configs in a Container.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+parent}/gtag_config",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query"
                        },
                        "parent": {
                          "description": "Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListGtagConfigResponse"
                      }
                    }
                  }
                },
                "templates": {
                  "methods": {
                    "create": {
                      "path": "tagmanager/v2/{+parent}/templates",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.templates.create",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "request": {
                        "$ref": "CustomTemplate"
                      },
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a GTM Custom Template."
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "path": {
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.templates.delete",
                      "description": "Deletes a GTM Template.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}"
                    },
                    "update": {
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "httpMethod": "PUT",
                      "id": "tagmanager.accounts.containers.workspaces.templates.update",
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the templates in storage.",
                          "type": "string",
                          "location": "query"
                        },
                        "path": {
                          "location": "path",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "CustomTemplate"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}",
                      "description": "Updates a GTM Template."
                    },
                    "revert": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}:revert",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "type": "string",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}"
                        },
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the template in storage."
                        }
                      },
                      "description": "Reverts changes to a GTM Template in a GTM Workspace.",
                      "path": "tagmanager/v2/{+path}:revert",
                      "id": "tagmanager.accounts.containers.workspaces.templates.revert",
                      "response": {
                        "$ref": "RevertTemplateResponse"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.templates.list",
                      "path": "tagmanager/v2/{+parent}/templates",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates",
                      "response": {
                        "$ref": "ListTemplatesResponse"
                      },
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query"
                        },
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "description": "Lists all GTM Templates of a GTM container workspace."
                    },
                    "get": {
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}",
                      "description": "Gets a GTM Template.",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "location": "path"
                        }
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.templates.get",
                      "response": {
                        "$ref": "CustomTemplate"
                      }
                    }
                  }
                },
                "triggers": {
                  "methods": {
                    "revert": {
                      "response": {
                        "$ref": "RevertTriggerResponse"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Reverts changes to a GTM Trigger in a GTM Workspace.",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.revert",
                      "path": "tagmanager/v2/{+path}:revert",
                      "httpMethod": "POST",
                      "parameters": {
                        "path": {
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "required": true
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the trigger in storage.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}:revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "get": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "description": "Gets a GTM Trigger.",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.get",
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}"
                        }
                      },
                      "response": {
                        "$ref": "Trigger"
                      }
                    },
                    "list": {
                      "response": {
                        "$ref": "ListTriggersResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists all GTM Triggers of a Container.",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.list",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path"
                        },
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+parent}/triggers"
                    },
                    "delete": {
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "location": "path"
                        }
                      },
                      "description": "Deletes a GTM Trigger.",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "DELETE",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}"
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+parent}/triggers",
                      "request": {
                        "$ref": "Trigger"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers",
                      "response": {
                        "$ref": "Trigger"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a GTM Trigger.",
                      "httpMethod": "POST",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.create"
                    },
                    "update": {
                      "parameters": {
                        "path": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "location": "path",
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "required": true
                        },
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the trigger in storage.",
                          "type": "string"
                        }
                      },
                      "httpMethod": "PUT",
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.update",
                      "parameterOrder": [
                        "path"
                      ],
                      "request": {
                        "$ref": "Trigger"
                      },
                      "description": "Updates a GTM Trigger.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "response": {
                        "$ref": "Trigger"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    }
                  }
                }
              }
            },
            "environments": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "id": "tagmanager.accounts.containers.environments.get",
                  "parameters": {
                    "path": {
                      "required": true,
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "response": {
                    "$ref": "Environment"
                  },
                  "path": "tagmanager/v2/{+path}",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "description": "Gets a GTM Environment.",
                  "parameterOrder": [
                    "path"
                  ]
                },
                "create": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments",
                  "response": {
                    "$ref": "Environment"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}"
                    }
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "Environment"
                  },
                  "description": "Creates a GTM Environment.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "path": "tagmanager/v2/{+parent}/environments",
                  "id": "tagmanager.accounts.containers.environments.create",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "update": {
                  "parameterOrder": [
                    "path"
                  ],
                  "path": "tagmanager/v2/{+path}",
                  "request": {
                    "$ref": "Environment"
                  },
                  "response": {
                    "$ref": "Environment"
                  },
                  "description": "Updates a GTM Environment.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "httpMethod": "PUT",
                  "id": "tagmanager.accounts.containers.environments.update",
                  "parameters": {
                    "path": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$"
                    },
                    "fingerprint": {
                      "location": "query",
                      "type": "string",
                      "description": "When provided, this fingerprint must match the fingerprint of the environment in storage."
                    }
                  }
                },
                "delete": {
                  "parameters": {
                    "path": {
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "id": "tagmanager.accounts.containers.environments.delete",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "parameterOrder": [
                    "path"
                  ],
                  "path": "tagmanager/v2/{+path}",
                  "description": "Deletes a GTM Environment.",
                  "httpMethod": "DELETE"
                },
                "list": {
                  "id": "tagmanager.accounts.containers.environments.list",
                  "description": "Lists all GTM Environments of a GTM Container.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Continuation token for fetching the next page of results."
                    }
                  },
                  "response": {
                    "$ref": "ListEnvironmentsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "tagmanager/v2/{+parent}/environments",
                  "httpMethod": "GET"
                },
                "reauthorize": {
                  "response": {
                    "$ref": "Environment"
                  },
                  "id": "tagmanager.accounts.containers.environments.reauthorize",
                  "parameters": {
                    "path": {
                      "location": "path",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}:reauthorize",
                  "request": {
                    "$ref": "Environment"
                  },
                  "path": "tagmanager/v2/{+path}:reauthorize",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.publish"
                  ],
                  "description": "Re-generates the authorization code for a GTM Environment."
                }
              }
            }
          }
        },
        "user_permissions": {
          "methods": {
            "list": {
              "id": "tagmanager.accounts.user_permissions.list",
              "httpMethod": "GET",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions",
              "path": "tagmanager/v2/{+parent}/user_permissions",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListUserPermissionsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^accounts/[^/]+$",
                  "type": "string",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}",
                  "required": true,
                  "location": "path"
                },
                "pageToken": {
                  "type": "string",
                  "description": "Continuation token for fetching the next page of results.",
                  "location": "query"
                }
              },
              "description": "List all users that have access to the account along with Account and Container user access granted to each of them."
            },
            "delete": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "path": "tagmanager/v2/{+path}",
              "parameters": {
                "path": {
                  "type": "string",
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "httpMethod": "DELETE",
              "description": "Removes a user from the account, revoking access to it and all of its containers.",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "parameterOrder": [
                "path"
              ],
              "id": "tagmanager.accounts.user_permissions.delete"
            },
            "get": {
              "parameterOrder": [
                "path"
              ],
              "response": {
                "$ref": "UserPermission"
              },
              "description": "Gets a user's Account & Container access.",
              "id": "tagmanager.accounts.user_permissions.get",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "httpMethod": "GET",
              "path": "tagmanager/v2/{+path}",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "parameters": {
                "path": {
                  "location": "path",
                  "required": true,
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "type": "string",
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}"
                }
              }
            },
            "update": {
              "id": "tagmanager.accounts.user_permissions.update",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "description": "Updates a user's Account & Container access.",
              "parameterOrder": [
                "path"
              ],
              "response": {
                "$ref": "UserPermission"
              },
              "httpMethod": "PUT",
              "parameters": {
                "path": {
                  "type": "string",
                  "required": true,
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "location": "path"
                }
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "path": "tagmanager/v2/{+path}",
              "request": {
                "$ref": "UserPermission"
              }
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "UserPermission"
              },
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "pattern": "^accounts/[^/]+$",
                  "type": "string",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}",
                  "required": true,
                  "location": "path"
                }
              },
              "response": {
                "$ref": "UserPermission"
              },
              "description": "Creates a user's Account & Container access.",
              "path": "tagmanager/v2/{+parent}/user_permissions",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions",
              "id": "tagmanager.accounts.user_permissions.create"
            }
          }
        }
      },
      "methods": {
        "list": {
          "flatPath": "tagmanager/v2/accounts",
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.edit.containers",
            "https://www.googleapis.com/auth/tagmanager.manage.accounts",
            "https://www.googleapis.com/auth/tagmanager.readonly"
          ],
          "parameters": {
            "includeGoogleTags": {
              "description": "Also retrieve accounts associated with Google Tag when true.",
              "location": "query",
              "type": "boolean"
            },
            "pageToken": {
              "location": "query",
              "description": "Continuation token for fetching the next page of results.",
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "id": "tagmanager.accounts.list",
          "path": "tagmanager/v2/accounts",
          "description": "Lists all GTM Accounts that a user has access to.",
          "parameterOrder": [],
          "response": {
            "$ref": "ListAccountsResponse"
          }
        },
        "update": {
          "parameters": {
            "fingerprint": {
              "type": "string",
              "location": "query",
              "description": "When provided, this fingerprint must match the fingerprint of the account in storage."
            },
            "path": {
              "type": "string",
              "required": true,
              "pattern": "^accounts/[^/]+$",
              "description": "GTM Account's API relative path. Example: accounts/{account_id}",
              "location": "path"
            }
          },
          "httpMethod": "PUT",
          "parameterOrder": [
            "path"
          ],
          "response": {
            "$ref": "Account"
          },
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.manage.accounts"
          ],
          "flatPath": "tagmanager/v2/accounts/{accountsId}",
          "path": "tagmanager/v2/{+path}",
          "id": "tagmanager.accounts.update",
          "request": {
            "$ref": "Account"
          },
          "description": "Updates a GTM Account."
        },
        "get": {
          "id": "tagmanager.accounts.get",
          "parameterOrder": [
            "path"
          ],
          "response": {
            "$ref": "Account"
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.edit.containers",
            "https://www.googleapis.com/auth/tagmanager.manage.accounts",
            "https://www.googleapis.com/auth/tagmanager.readonly"
          ],
          "description": "Gets a GTM Account.",
          "path": "tagmanager/v2/{+path}",
          "flatPath": "tagmanager/v2/accounts/{accountsId}",
          "parameters": {
            "path": {
              "pattern": "^accounts/[^/]+$",
              "required": true,
              "type": "string",
              "description": "GTM Account's API relative path. Example: accounts/{account_id}",
              "location": "path"
            }
          }
        }
      }
    }
  },
  "version": "v2",
  "ownerName": "Google",
  "baseUrl": "https://tagmanager.googleapis.com/",
  "protocol": "rest",
  "parameters": {
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "default": "json"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    }
  },
  "discoveryVersion": "v1",
  "canonicalName": "Tag Manager",
  "documentationLink": "https://developers.google.com/tag-manager",
  "description": "This API allows clients to access and modify container and tag configuration.",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  }
}

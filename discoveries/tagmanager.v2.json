{
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "parameters": {
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "alt": {
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "type": "string",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    }
  },
  "baseUrl": "https://tagmanager.googleapis.com/",
  "version": "v2",
  "protocol": "rest",
  "revision": "20230102",
  "kind": "discovery#restDescription",
  "batchPath": "batch",
  "canonicalName": "Tag Manager",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/tagmanager.manage.accounts": {
          "description": "View and manage your Google Tag Manager accounts"
        },
        "https://www.googleapis.com/auth/tagmanager.delete.containers": {
          "description": "Delete your Google Tag Manager containers"
        },
        "https://www.googleapis.com/auth/tagmanager.edit.containerversions": {
          "description": "Manage your Google Tag Manager container versions"
        },
        "https://www.googleapis.com/auth/tagmanager.publish": {
          "description": "Publish your Google Tag Manager container versions"
        },
        "https://www.googleapis.com/auth/tagmanager.edit.containers": {
          "description": "Manage your Google Tag Manager container and its subcomponents, excluding versioning and publishing"
        },
        "https://www.googleapis.com/auth/tagmanager.manage.users": {
          "description": "Manage user permissions of your Google Tag Manager account and container"
        },
        "https://www.googleapis.com/auth/tagmanager.readonly": {
          "description": "View your Google Tag Manager container and its subcomponents"
        }
      }
    }
  },
  "title": "Tag Manager API",
  "rootUrl": "https://tagmanager.googleapis.com/",
  "resources": {
    "accounts": {
      "resources": {
        "containers": {
          "resources": {
            "environments": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "description": "Lists all GTM Environments of a GTM Container.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments",
                  "id": "tagmanager.accounts.containers.environments.list",
                  "httpMethod": "GET",
                  "path": "tagmanager/v2/{+parent}/environments",
                  "response": {
                    "$ref": "ListEnvironmentsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Continuation token for fetching the next page of results.",
                      "type": "string"
                    }
                  }
                },
                "delete": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "path"
                  ],
                  "description": "Deletes a GTM Environment.",
                  "path": "tagmanager/v2/{+path}",
                  "parameters": {
                    "path": {
                      "required": true,
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "location": "path"
                    }
                  },
                  "id": "tagmanager.accounts.containers.environments.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ]
                },
                "update": {
                  "response": {
                    "$ref": "Environment"
                  },
                  "parameters": {
                    "fingerprint": {
                      "location": "query",
                      "description": "When provided, this fingerprint must match the fingerprint of the environment in storage.",
                      "type": "string"
                    },
                    "path": {
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "Environment"
                  },
                  "httpMethod": "PUT",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "path": "tagmanager/v2/{+path}",
                  "description": "Updates a GTM Environment.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "parameterOrder": [
                    "path"
                  ],
                  "id": "tagmanager.accounts.containers.environments.update"
                },
                "get": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "response": {
                    "$ref": "Environment"
                  },
                  "description": "Gets a GTM Environment.",
                  "httpMethod": "GET",
                  "id": "tagmanager.accounts.containers.environments.get",
                  "path": "tagmanager/v2/{+path}",
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ]
                },
                "reauthorize": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}:reauthorize",
                  "response": {
                    "$ref": "Environment"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.publish"
                  ],
                  "id": "tagmanager.accounts.containers.environments.reauthorize",
                  "parameters": {
                    "path": {
                      "required": true,
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "location": "path",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}"
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "request": {
                    "$ref": "Environment"
                  },
                  "httpMethod": "POST",
                  "path": "tagmanager/v2/{+path}:reauthorize",
                  "description": "Re-generates the authorization code for a GTM Environment."
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Environment"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "Environment"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "id": "tagmanager.accounts.containers.environments.create",
                  "path": "tagmanager/v2/{+parent}/environments",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments",
                  "description": "Creates a GTM Environment."
                }
              }
            },
            "versions": {
              "methods": {
                "set_latest": {
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "type": "string",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "id": "tagmanager.accounts.containers.versions.set_latest",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:set_latest",
                  "httpMethod": "POST",
                  "path": "tagmanager/v2/{+path}:set_latest",
                  "description": "Sets the latest version used for synchronization of workspaces when detecting conflicts and errors.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ]
                },
                "undelete": {
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:undelete",
                  "httpMethod": "POST",
                  "description": "Undeletes a Container Version.",
                  "parameters": {
                    "path": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}"
                    }
                  },
                  "id": "tagmanager.accounts.containers.versions.undelete",
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "path": "tagmanager/v2/{+path}:undelete"
                },
                "publish": {
                  "id": "tagmanager.accounts.containers.versions.publish",
                  "path": "tagmanager/v2/{+path}:publish",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "required": true,
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "location": "path",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"
                    },
                    "fingerprint": {
                      "description": "When provided, this fingerprint must match the fingerprint of the container version in storage.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.publish"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:publish",
                  "description": "Publishes a Container Version.",
                  "response": {
                    "$ref": "PublishContainerVersionResponse"
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "id": "tagmanager.accounts.containers.versions.delete",
                  "parameterOrder": [
                    "path"
                  ],
                  "path": "tagmanager/v2/{+path}",
                  "parameters": {
                    "path": {
                      "type": "string",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "description": "Deletes a Container Version."
                },
                "live": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "id": "tagmanager.accounts.containers.versions.live",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions:live",
                  "description": "Gets the live (i.e. published) container version",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$"
                    }
                  },
                  "path": "tagmanager/v2/{+parent}/versions:live"
                },
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "path": "tagmanager/v2/{+path}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "description": "Gets a Container Version.",
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "containerVersionId": {
                      "type": "string",
                      "location": "query",
                      "description": "The GTM ContainerVersion ID. Specify published to retrieve the currently published version."
                    },
                    "path": {
                      "required": true,
                      "type": "string",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "tagmanager.accounts.containers.versions.get"
                },
                "update": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "httpMethod": "PUT",
                  "parameterOrder": [
                    "path"
                  ],
                  "id": "tagmanager.accounts.containers.versions.update",
                  "path": "tagmanager/v2/{+path}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "request": {
                    "$ref": "ContainerVersion"
                  },
                  "parameters": {
                    "fingerprint": {
                      "description": "When provided, this fingerprint must match the fingerprint of the container version in storage.",
                      "type": "string",
                      "location": "query"
                    },
                    "path": {
                      "location": "path",
                      "required": true,
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"
                    }
                  },
                  "description": "Updates a Container Version.",
                  "response": {
                    "$ref": "ContainerVersion"
                  }
                }
              }
            },
            "version_headers": {
              "methods": {
                "latest": {
                  "path": "tagmanager/v2/{+parent}/version_headers:latest",
                  "id": "tagmanager.accounts.containers.version_headers.latest",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers:latest",
                  "response": {
                    "$ref": "ContainerVersionHeader"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "type": "string",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Gets the latest container version header",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "list": {
                  "response": {
                    "$ref": "ListContainerVersionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "httpMethod": "GET",
                  "id": "tagmanager.accounts.containers.version_headers.list",
                  "description": "Lists all Container Versions of a GTM Container.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "includeDeleted": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Also retrieve deleted (archived) versions when true."
                    },
                    "parent": {
                      "location": "path",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Continuation token for fetching the next page of results."
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers",
                  "path": "tagmanager/v2/{+parent}/version_headers"
                }
              }
            },
            "workspaces": {
              "methods": {
                "getStatus": {
                  "description": "Finds conflicting and modified entities in the workspace.",
                  "parameters": {
                    "path": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "tagmanager/v2/{+path}/status",
                  "id": "tagmanager.accounts.containers.workspaces.getStatus",
                  "response": {
                    "$ref": "GetWorkspaceStatusResponse"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/status",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameterOrder": [
                    "path"
                  ]
                },
                "update": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "path": "tagmanager/v2/{+path}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "httpMethod": "PUT",
                  "response": {
                    "$ref": "Workspace"
                  },
                  "description": "Updates a Workspace.",
                  "parameters": {
                    "path": {
                      "type": "string",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "fingerprint": {
                      "type": "string",
                      "description": "When provided, this fingerprint must match the fingerprint of the workspace in storage.",
                      "location": "query"
                    }
                  },
                  "id": "tagmanager.accounts.containers.workspaces.update",
                  "parameterOrder": [
                    "path"
                  ],
                  "request": {
                    "$ref": "Workspace"
                  }
                },
                "get": {
                  "path": "tagmanager/v2/{+path}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Workspace"
                  },
                  "id": "tagmanager.accounts.containers.workspaces.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "description": "Gets a Workspace.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "location": "path",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "resolve_conflict": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "path": "tagmanager/v2/{+path}:resolve_conflict",
                  "description": "Resolves a merge conflict for a workspace entity by updating it to the resolved entity passed in the request.",
                  "parameterOrder": [
                    "path"
                  ],
                  "request": {
                    "$ref": "Entity"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "fingerprint": {
                      "location": "query",
                      "description": "When provided, this fingerprint must match the fingerprint of the entity_in_workspace in the merge conflict.",
                      "type": "string"
                    },
                    "path": {
                      "required": true,
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "type": "string"
                    }
                  },
                  "id": "tagmanager.accounts.containers.workspaces.resolve_conflict",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:resolve_conflict"
                },
                "sync": {
                  "response": {
                    "$ref": "SyncWorkspaceResponse"
                  },
                  "id": "tagmanager.accounts.containers.workspaces.sync",
                  "httpMethod": "POST",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:sync",
                  "parameterOrder": [
                    "path"
                  ],
                  "path": "tagmanager/v2/{+path}:sync",
                  "description": "Syncs a workspace to the latest container version by updating all unmodified workspace entities and displaying conflicts for modified entities.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "parameters": {
                    "path": {
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "required": true,
                      "location": "path"
                    }
                  }
                },
                "list": {
                  "description": "Lists all Workspaces that belong to a GTM Container.",
                  "id": "tagmanager.accounts.containers.workspaces.list",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "response": {
                    "$ref": "ListWorkspacesResponse"
                  },
                  "httpMethod": "GET",
                  "path": "tagmanager/v2/{+parent}/workspaces",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path",
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Continuation token for fetching the next page of results.",
                      "location": "query"
                    }
                  }
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "request": {
                    "$ref": "Workspace"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "type": "string",
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true
                    }
                  },
                  "path": "tagmanager/v2/{+parent}/workspaces",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Workspace"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces",
                  "description": "Creates a Workspace.",
                  "id": "tagmanager.accounts.containers.workspaces.create"
                },
                "quick_preview": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "path"
                  ],
                  "path": "tagmanager/v2/{+path}:quick_preview",
                  "description": "Quick previews a workspace by creating a fake container version from all entities in the provided workspace.",
                  "response": {
                    "$ref": "QuickPreviewResponse"
                  },
                  "id": "tagmanager.accounts.containers.workspaces.quick_preview",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "parameters": {
                    "path": {
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:quick_preview"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "description": "Deletes a Workspace.",
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "required": true,
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.delete.containers"
                  ],
                  "path": "tagmanager/v2/{+path}",
                  "id": "tagmanager.accounts.containers.workspaces.delete"
                },
                "create_version": {
                  "description": "Creates a Container Version from the entities present in the workspace, deletes the workspace, and sets the base container version to the newly created version.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:create_version",
                  "parameterOrder": [
                    "path"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.create_version",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "CreateContainerVersionResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "parameters": {
                    "path": {
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "path": "tagmanager/v2/{+path}:create_version",
                  "request": {
                    "$ref": "CreateContainerVersionRequestVersionOptions"
                  }
                }
              },
              "resources": {
                "gtag_config": {
                  "methods": {
                    "update": {
                      "path": "tagmanager/v2/{+path}",
                      "description": "Updates a Google tag config.",
                      "parameters": {
                        "path": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$",
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}",
                          "type": "string",
                          "location": "path"
                        },
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the config in storage."
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "response": {
                        "$ref": "GtagConfig"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "request": {
                        "$ref": "GtagConfig"
                      },
                      "httpMethod": "PUT",
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.update",
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "get": {
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "description": "Gets a Google tag config.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GtagConfig"
                      },
                      "parameters": {
                        "path": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$"
                        }
                      }
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "path": {
                          "type": "string",
                          "required": true,
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$"
                        }
                      },
                      "description": "Deletes a Google tag config.",
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.delete"
                    },
                    "create": {
                      "path": "tagmanager/v2/{+parent}/gtag_config",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config",
                      "httpMethod": "POST",
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "request": {
                        "$ref": "GtagConfig"
                      },
                      "response": {
                        "$ref": "GtagConfig"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "description": "Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "description": "Creates a Google tag config.",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "list": {
                      "path": "tagmanager/v2/{+parent}/gtag_config",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results."
                        },
                        "parent": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "httpMethod": "GET",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists all Google tag configs in a Container.",
                      "response": {
                        "$ref": "ListGtagConfigResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.list"
                    }
                  }
                },
                "triggers": {
                  "methods": {
                    "update": {
                      "request": {
                        "$ref": "Trigger"
                      },
                      "parameters": {
                        "fingerprint": {
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the trigger in storage.",
                          "location": "query"
                        },
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.update",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "Trigger"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "description": "Updates a GTM Trigger.",
                      "httpMethod": "PUT"
                    },
                    "get": {
                      "description": "Gets a GTM Trigger.",
                      "parameters": {
                        "path": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$"
                        }
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.triggers.get",
                      "path": "tagmanager/v2/{+path}",
                      "response": {
                        "$ref": "Trigger"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}"
                    },
                    "list": {
                      "description": "Lists all GTM Triggers of a Container.",
                      "response": {
                        "$ref": "ListTriggersResponse"
                      },
                      "httpMethod": "GET",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers",
                      "parameters": {
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.triggers.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+parent}/triggers"
                    },
                    "create": {
                      "path": "tagmanager/v2/{+parent}/triggers",
                      "httpMethod": "POST",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "description": "Creates a GTM Trigger.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Trigger"
                      },
                      "request": {
                        "$ref": "Trigger"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers"
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.delete",
                      "description": "Deletes a GTM Trigger.",
                      "parameters": {
                        "path": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "path": "tagmanager/v2/{+path}",
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "revert": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Reverts changes to a GTM Trigger in a GTM Workspace.",
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+path}:revert",
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the trigger in storage.",
                          "location": "query",
                          "type": "string"
                        },
                        "path": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "required": true,
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "RevertTriggerResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.triggers.revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}:revert",
                      "parameterOrder": [
                        "path"
                      ]
                    }
                  }
                },
                "built_in_variables": {
                  "methods": {
                    "delete": {
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "path": "tagmanager/v2/{+path}",
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "DELETE",
                      "description": "Deletes one or more GTM Built-In Variables.",
                      "parameters": {
                        "type": {
                          "type": "string",
                          "location": "query",
                          "repeated": true,
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "description": "The types of built-in variables to delete.",
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname",
                            "visitorRegion"
                          ]
                        },
                        "path": {
                          "description": "GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/built_in_variables$",
                          "type": "string",
                          "required": true
                        }
                      }
                    },
                    "list": {
                      "path": "tagmanager/v2/{+parent}/built_in_variables",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.list",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "response": {
                        "$ref": "ListEnabledBuiltInVariablesResponse"
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "description": "Lists all the enabled Built-In Variables of a GTM Container.",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results."
                        },
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      }
                    },
                    "revert": {
                      "parameters": {
                        "path": {
                          "location": "path",
                          "description": "GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables",
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        },
                        "type": {
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "description": "The type of built-in variable to revert.",
                          "location": "query",
                          "type": "string",
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname",
                            "visitorRegion"
                          ]
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.revert",
                      "path": "tagmanager/v2/{+path}/built_in_variables:revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables:revert",
                      "description": "Reverts changes to a GTM Built-In Variables in a GTM Workspace.",
                      "response": {
                        "$ref": "RevertBuiltInVariableResponse"
                      }
                    },
                    "create": {
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+parent}/built_in_variables",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "description": "Creates one or more GTM Built-In Variables.",
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.create",
                      "response": {
                        "$ref": "CreateBuiltInVariableResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "type": {
                          "location": "query",
                          "description": "The types of built-in variables to enable.",
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname",
                            "visitorRegion"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "repeated": true
                        },
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    }
                  }
                },
                "folders": {
                  "methods": {
                    "update": {
                      "id": "tagmanager.accounts.containers.workspaces.folders.update",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "path": {
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the folder in storage.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "Folder"
                      },
                      "description": "Updates a GTM Folder.",
                      "response": {
                        "$ref": "Folder"
                      },
                      "httpMethod": "PUT",
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}"
                    },
                    "delete": {
                      "id": "tagmanager.accounts.containers.workspaces.folders.delete",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$"
                        }
                      },
                      "path": "tagmanager/v2/{+path}",
                      "description": "Deletes a GTM Folder."
                    },
                    "get": {
                      "response": {
                        "$ref": "Folder"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "type": "string"
                        }
                      },
                      "description": "Gets a GTM Folder.",
                      "id": "tagmanager.accounts.containers.workspaces.folders.get"
                    },
                    "move_entities_to_folder": {
                      "request": {
                        "$ref": "Folder"
                      },
                      "parameters": {
                        "tagId": {
                          "location": "query",
                          "description": "The tags to be moved to the folder.",
                          "type": "string",
                          "repeated": true
                        },
                        "variableId": {
                          "type": "string",
                          "location": "query",
                          "description": "The variables to be moved to the folder.",
                          "repeated": true
                        },
                        "path": {
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "triggerId": {
                          "type": "string",
                          "description": "The triggers to be moved to the folder.",
                          "repeated": true,
                          "location": "query"
                        }
                      },
                      "path": "tagmanager/v2/{+path}:move_entities_to_folder",
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "POST",
                      "id": "tagmanager.accounts.containers.workspaces.folders.move_entities_to_folder",
                      "description": "Moves entities to a GTM Folder.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:move_entities_to_folder"
                    },
                    "list": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "tagmanager/v2/{+parent}/folders",
                      "id": "tagmanager.accounts.containers.workspaces.folders.list",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders",
                      "description": "Lists all GTM Folders of a Container.",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "response": {
                        "$ref": "ListFoldersResponse"
                      }
                    },
                    "create": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Creates a GTM Folder.",
                      "id": "tagmanager.accounts.containers.workspaces.folders.create",
                      "response": {
                        "$ref": "Folder"
                      },
                      "request": {
                        "$ref": "Folder"
                      },
                      "path": "tagmanager/v2/{+parent}/folders",
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST"
                    },
                    "revert": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Reverts changes to a GTM Folder in a GTM Workspace.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:revert",
                      "id": "tagmanager.accounts.containers.workspaces.folders.revert",
                      "response": {
                        "$ref": "RevertFolderResponse"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+path}:revert",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "required": true,
                          "type": "string"
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the tag in storage.",
                          "type": "string",
                          "location": "query"
                        }
                      }
                    },
                    "entities": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:entities",
                      "path": "tagmanager/v2/{+path}:entities",
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "FolderEntities"
                      },
                      "description": "List all entities in a GTM Folder.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameters": {
                        "path": {
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$"
                        },
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.folders.entities",
                      "httpMethod": "POST"
                    }
                  }
                },
                "templates": {
                  "methods": {
                    "update": {
                      "parameterOrder": [
                        "path"
                      ],
                      "request": {
                        "$ref": "CustomTemplate"
                      },
                      "parameters": {
                        "path": {
                          "type": "string",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$"
                        },
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the templates in storage."
                        }
                      },
                      "httpMethod": "PUT",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}",
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.templates.update",
                      "description": "Updates a GTM Template.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "revert": {
                      "path": "tagmanager/v2/{+path}:revert",
                      "response": {
                        "$ref": "RevertTemplateResponse"
                      },
                      "description": "Reverts changes to a GTM Template in a GTM Workspace.",
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the template in storage.",
                          "type": "string",
                          "location": "query"
                        },
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.templates.revert",
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}:revert"
                    },
                    "delete": {
                      "parameters": {
                        "path": {
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "location": "path",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}"
                        }
                      },
                      "description": "Deletes a GTM Template.",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.templates.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}",
                      "httpMethod": "DELETE"
                    },
                    "get": {
                      "description": "Gets a GTM Template.",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "type": "string",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET",
                      "id": "tagmanager.accounts.containers.workspaces.templates.get"
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path"
                        },
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.templates.list",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates",
                      "path": "tagmanager/v2/{+parent}/templates",
                      "response": {
                        "$ref": "ListTemplatesResponse"
                      },
                      "description": "Lists all GTM Templates of a GTM container workspace.",
                      "httpMethod": "GET"
                    },
                    "create": {
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a GTM Custom Template.",
                      "httpMethod": "POST",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates",
                      "path": "tagmanager/v2/{+parent}/templates",
                      "request": {
                        "$ref": "CustomTemplate"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.templates.create"
                    }
                  }
                },
                "clients": {
                  "methods": {
                    "delete": {
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "description": "Deletes a GTM Client.",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}",
                      "id": "tagmanager.accounts.containers.workspaces.clients.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "get": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}",
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.clients.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Client"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$"
                        }
                      },
                      "description": "Gets a GTM Client."
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+parent}/clients",
                      "request": {
                        "$ref": "Client"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.clients.create",
                      "response": {
                        "$ref": "Client"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients",
                      "description": "Creates a GTM Client.",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      }
                    },
                    "revert": {
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Reverts changes to a GTM Client in a GTM Workspace.",
                      "path": "tagmanager/v2/{+path}:revert",
                      "httpMethod": "POST",
                      "id": "tagmanager.accounts.containers.workspaces.clients.revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}:revert",
                      "parameters": {
                        "path": {
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$"
                        },
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the client in storage."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "RevertClientResponse"
                      }
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "ListClientsResponse"
                      },
                      "path": "tagmanager/v2/{+parent}/clients",
                      "httpMethod": "GET",
                      "description": "Lists all GTM Clients of a GTM container workspace.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients",
                      "id": "tagmanager.accounts.containers.workspaces.clients.list"
                    },
                    "update": {
                      "request": {
                        "$ref": "Client"
                      },
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the client in storage."
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.clients.update",
                      "response": {
                        "$ref": "Client"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Updates a GTM Client.",
                      "httpMethod": "PUT",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}",
                      "path": "tagmanager/v2/{+path}"
                    }
                  }
                },
                "zones": {
                  "methods": {
                    "get": {
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.zones.get",
                      "path": "tagmanager/v2/{+path}",
                      "response": {
                        "$ref": "Zone"
                      },
                      "description": "Gets a GTM Zone.",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}"
                    },
                    "list": {
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        },
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "ListZonesResponse"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones",
                      "httpMethod": "GET",
                      "description": "Lists all GTM Zones of a GTM container workspace.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.zones.list",
                      "path": "tagmanager/v2/{+parent}/zones",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ]
                    },
                    "update": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.zones.update",
                      "response": {
                        "$ref": "Zone"
                      },
                      "request": {
                        "$ref": "Zone"
                      },
                      "parameters": {
                        "path": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}"
                        },
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the zone in storage."
                        }
                      },
                      "description": "Updates a GTM Zone.",
                      "httpMethod": "PUT",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}"
                    },
                    "revert": {
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+path}:revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}:revert",
                      "description": "Reverts changes to a GTM Zone in a GTM Workspace.",
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the zone in storage."
                        },
                        "path": {
                          "location": "path",
                          "required": true,
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.zones.revert",
                      "response": {
                        "$ref": "RevertZoneResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "create": {
                      "request": {
                        "$ref": "Zone"
                      },
                      "httpMethod": "POST",
                      "description": "Creates a GTM Zone.",
                      "id": "tagmanager.accounts.containers.workspaces.zones.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Zone"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string"
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/zones",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones"
                    },
                    "delete": {
                      "id": "tagmanager.accounts.containers.workspaces.zones.delete",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Deletes a GTM Zone.",
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "location": "path",
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "required": true
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}"
                    }
                  }
                },
                "tags": {
                  "methods": {
                    "create": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a GTM Tag.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "request": {
                        "$ref": "Tag"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path"
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/tags",
                      "id": "tagmanager.accounts.containers.workspaces.tags.create",
                      "response": {
                        "$ref": "Tag"
                      }
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results."
                        }
                      },
                      "description": "Lists all GTM Tags of a Container.",
                      "id": "tagmanager.accounts.containers.workspaces.tags.list",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListTagsResponse"
                      },
                      "path": "tagmanager/v2/{+parent}/tags"
                    },
                    "revert": {
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "RevertTagResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.tags.revert",
                      "path": "tagmanager/v2/{+path}:revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}:revert",
                      "description": "Reverts changes to a GTM Tag in a GTM Workspace.",
                      "parameters": {
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of thetag in storage."
                        },
                        "path": {
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "POST"
                    },
                    "update": {
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Updates a GTM Tag.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "request": {
                        "$ref": "Tag"
                      },
                      "response": {
                        "$ref": "Tag"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "path": {
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "required": true,
                          "type": "string"
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the tag in storage.",
                          "location": "query"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.tags.update",
                      "httpMethod": "PUT"
                    },
                    "get": {
                      "description": "Gets a GTM Tag.",
                      "parameters": {
                        "path": {
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "response": {
                        "$ref": "Tag"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "id": "tagmanager.accounts.containers.workspaces.tags.get"
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.tags.delete",
                      "description": "Deletes a GTM Tag.",
                      "parameters": {
                        "path": {
                          "required": true,
                          "type": "string",
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "location": "path"
                        }
                      },
                      "path": "tagmanager/v2/{+path}"
                    }
                  }
                },
                "variables": {
                  "methods": {
                    "delete": {
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Deletes a GTM Variable.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "required": true,
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.variables.delete",
                      "httpMethod": "DELETE"
                    },
                    "get": {
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.variables.get",
                      "description": "Gets a GTM Variable.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "response": {
                        "$ref": "Variable"
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameters": {
                        "path": {
                          "location": "path",
                          "type": "string",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$"
                        }
                      }
                    },
                    "update": {
                      "httpMethod": "PUT",
                      "response": {
                        "$ref": "Variable"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}"
                        },
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the variable in storage.",
                          "type": "string"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.variables.update",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "request": {
                        "$ref": "Variable"
                      },
                      "description": "Updates a GTM Variable.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}"
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+parent}/variables",
                      "response": {
                        "$ref": "ListVariablesResponse"
                      },
                      "description": "Lists all GTM Variables of a Container.",
                      "id": "tagmanager.accounts.containers.workspaces.variables.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query"
                        }
                      }
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Variable"
                      },
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables",
                      "id": "tagmanager.accounts.containers.workspaces.variables.create",
                      "description": "Creates a GTM Variable.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "Variable"
                      },
                      "path": "tagmanager/v2/{+parent}/variables",
                      "httpMethod": "POST"
                    },
                    "revert": {
                      "path": "tagmanager/v2/{+path}:revert",
                      "response": {
                        "$ref": "RevertVariableResponse"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}:revert",
                      "httpMethod": "POST",
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the variable in storage.",
                          "type": "string"
                        },
                        "path": {
                          "required": true,
                          "location": "path",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "type": "string"
                        }
                      },
                      "description": "Reverts changes to a GTM Variable in a GTM Workspace.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.variables.revert",
                      "parameterOrder": [
                        "path"
                      ]
                    }
                  }
                }
              }
            },
            "destinations": {
              "methods": {
                "list": {
                  "id": "tagmanager.accounts.containers.destinations.list",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Lists all Destinations linked to a GTM Container.",
                  "response": {
                    "$ref": "ListDestinationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "tagmanager/v2/{+parent}/destinations",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations"
                },
                "get": {
                  "description": "Gets a Destination.",
                  "path": "tagmanager/v2/{+path}",
                  "parameters": {
                    "path": {
                      "type": "string",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/destinations/[^/]+$",
                      "description": "Google Tag Destination's API relative path. Example: accounts/{account_id}/containers/{container_id}/destinations/{destination_link_id}",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations/{destinationsId}",
                  "parameterOrder": [
                    "path"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Destination"
                  },
                  "id": "tagmanager.accounts.containers.destinations.get"
                },
                "link": {
                  "response": {
                    "$ref": "Destination"
                  },
                  "httpMethod": "POST",
                  "path": "tagmanager/v2/{+parent}/destinations:link",
                  "parameters": {
                    "allowUserPermissionFeatureUpdate": {
                      "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "destinationId": {
                      "type": "string",
                      "description": "Destination ID to be linked to the current container.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations:link",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "description": "Adds a Destination to this Container and removes it from the Container to which it is currently linked.",
                  "id": "tagmanager.accounts.containers.destinations.link",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            }
          },
          "methods": {
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.delete.containers"
              ],
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "parameters": {
                "path": {
                  "type": "string",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "location": "path",
                  "required": true,
                  "pattern": "^accounts/[^/]+/containers/[^/]+$"
                }
              },
              "path": "tagmanager/v2/{+path}",
              "parameterOrder": [
                "path"
              ],
              "httpMethod": "DELETE",
              "description": "Deletes a Container.",
              "id": "tagmanager.accounts.containers.delete"
            },
            "update": {
              "id": "tagmanager.accounts.containers.update",
              "httpMethod": "PUT",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "request": {
                "$ref": "Container"
              },
              "response": {
                "$ref": "Container"
              },
              "parameters": {
                "path": {
                  "location": "path",
                  "required": true,
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "type": "string"
                },
                "fingerprint": {
                  "location": "query",
                  "description": "When provided, this fingerprint must match the fingerprint of the container in storage.",
                  "type": "string"
                }
              },
              "path": "tagmanager/v2/{+path}",
              "parameterOrder": [
                "path"
              ],
              "description": "Updates a Container."
            },
            "create": {
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "id": "tagmanager.accounts.containers.create",
              "path": "tagmanager/v2/{+parent}/containers",
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}.",
                  "type": "string",
                  "pattern": "^accounts/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers",
              "description": "Creates a Container.",
              "response": {
                "$ref": "Container"
              },
              "httpMethod": "POST",
              "request": {
                "$ref": "Container"
              }
            },
            "get": {
              "httpMethod": "GET",
              "description": "Gets a Container.",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "response": {
                "$ref": "Container"
              },
              "id": "tagmanager.accounts.containers.get",
              "path": "tagmanager/v2/{+path}",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "parameterOrder": [
                "path"
              ],
              "parameters": {
                "path": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}"
                }
              }
            },
            "lookup": {
              "flatPath": "tagmanager/v2/accounts/containers:lookup",
              "path": "tagmanager/v2/accounts/containers:lookup",
              "id": "tagmanager.accounts.containers.lookup",
              "httpMethod": "GET",
              "parameterOrder": [],
              "response": {
                "$ref": "Container"
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "description": "Looks up a Container by destination ID.",
              "parameters": {
                "destinationId": {
                  "location": "query",
                  "description": "Destination ID linked to a GTM Container, e.g. AW-123456789. Example: accounts/containers:lookup?destination_id={destination_id}.",
                  "type": "string"
                }
              }
            },
            "combine": {
              "path": "tagmanager/v2/{+path}:combine",
              "parameterOrder": [
                "path"
              ],
              "httpMethod": "POST",
              "id": "tagmanager.accounts.containers.combine",
              "description": "Combines Containers.",
              "response": {
                "$ref": "Container"
              },
              "parameters": {
                "allowUserPermissionFeatureUpdate": {
                  "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail.",
                  "location": "query",
                  "type": "boolean"
                },
                "settingSource": {
                  "enumDescriptions": [
                    "",
                    "Keep the current container config setting after combine",
                    "Use config setting from the other tag after combine"
                  ],
                  "location": "query",
                  "type": "string",
                  "enum": [
                    "settingSourceUnspecified",
                    "current",
                    "other"
                  ],
                  "description": "Specify the source of config setting after combine"
                },
                "containerId": {
                  "type": "string",
                  "description": "ID of container that will be merged into the current container.",
                  "location": "query"
                },
                "path": {
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:combine",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ]
            },
            "move_tag_id": {
              "id": "tagmanager.accounts.containers.move_tag_id",
              "response": {
                "$ref": "Container"
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:move_tag_id",
              "parameters": {
                "copyTermsOfService": {
                  "description": "Must be set to true to accept all terms of service agreements copied from the current tag to the newly created tag. If this bit is false, the operation will fail.",
                  "location": "query",
                  "type": "boolean"
                },
                "path": {
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}"
                },
                "tagId": {
                  "description": "Tag ID to be removed from the current Container.",
                  "location": "query",
                  "type": "string"
                },
                "tagName": {
                  "type": "string",
                  "location": "query",
                  "description": "The name for the newly created tag."
                },
                "copyUsers": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Whether or not to copy users from this tag to the new tag."
                },
                "allowUserPermissionFeatureUpdate": {
                  "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail.",
                  "type": "boolean",
                  "location": "query"
                },
                "copySettings": {
                  "description": "Whether or not to copy tag settings from this tag to the new tag.",
                  "location": "query",
                  "type": "boolean"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "httpMethod": "POST",
              "path": "tagmanager/v2/{+path}:move_tag_id",
              "parameterOrder": [
                "path"
              ],
              "description": "Move Tag ID out of a Container."
            },
            "list": {
              "description": "Lists all Containers that belongs to a GTM Account.",
              "parameters": {
                "parent": {
                  "location": "path",
                  "pattern": "^accounts/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}."
                },
                "pageToken": {
                  "location": "query",
                  "description": "Continuation token for fetching the next page of results.",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "path": "tagmanager/v2/{+parent}/containers",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "response": {
                "$ref": "ListContainersResponse"
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers",
              "id": "tagmanager.accounts.containers.list"
            },
            "snippet": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:snippet",
              "description": "Gets the tagging snippet for a Container.",
              "parameters": {
                "path": {
                  "description": "Container snippet's API relative path. Example: accounts/{account_id}/containers/{container_id}:snippet",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "httpMethod": "GET",
              "parameterOrder": [
                "path"
              ],
              "path": "tagmanager/v2/{+path}:snippet",
              "response": {
                "$ref": "GetContainerSnippetResponse"
              },
              "id": "tagmanager.accounts.containers.snippet"
            }
          }
        },
        "user_permissions": {
          "methods": {
            "list": {
              "description": "List all users that have access to the account along with Account and Container user access granted to each of them.",
              "response": {
                "$ref": "ListUserPermissionsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageToken": {
                  "description": "Continuation token for fetching the next page of results.",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "type": "string",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}",
                  "pattern": "^accounts/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "path": "tagmanager/v2/{+parent}/user_permissions",
              "id": "tagmanager.accounts.user_permissions.list",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions",
              "httpMethod": "GET"
            },
            "delete": {
              "path": "tagmanager/v2/{+path}",
              "parameterOrder": [
                "path"
              ],
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "httpMethod": "DELETE",
              "id": "tagmanager.accounts.user_permissions.delete",
              "parameters": {
                "path": {
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "location": "path",
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "description": "Removes a user from the account, revoking access to it and all of its containers.",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ]
            },
            "update": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "description": "Updates a user's Account & Container access.",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "parameters": {
                "path": {
                  "type": "string",
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "required": true,
                  "location": "path"
                }
              },
              "request": {
                "$ref": "UserPermission"
              },
              "httpMethod": "PUT",
              "response": {
                "$ref": "UserPermission"
              },
              "parameterOrder": [
                "path"
              ],
              "path": "tagmanager/v2/{+path}",
              "id": "tagmanager.accounts.user_permissions.update"
            },
            "get": {
              "description": "Gets a user's Account & Container access.",
              "parameters": {
                "path": {
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "type": "string",
                  "required": true,
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "path"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "httpMethod": "GET",
              "path": "tagmanager/v2/{+path}",
              "response": {
                "$ref": "UserPermission"
              },
              "id": "tagmanager.accounts.user_permissions.get",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}"
            },
            "create": {
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}",
                  "pattern": "^accounts/[^/]+$",
                  "required": true
                }
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "response": {
                "$ref": "UserPermission"
              },
              "description": "Creates a user's Account & Container access.",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "UserPermission"
              },
              "httpMethod": "POST",
              "id": "tagmanager.accounts.user_permissions.create",
              "path": "tagmanager/v2/{+parent}/user_permissions"
            }
          }
        }
      },
      "methods": {
        "update": {
          "parameters": {
            "path": {
              "location": "path",
              "required": true,
              "pattern": "^accounts/[^/]+$",
              "description": "GTM Account's API relative path. Example: accounts/{account_id}",
              "type": "string"
            },
            "fingerprint": {
              "location": "query",
              "description": "When provided, this fingerprint must match the fingerprint of the account in storage.",
              "type": "string"
            }
          },
          "path": "tagmanager/v2/{+path}",
          "parameterOrder": [
            "path"
          ],
          "request": {
            "$ref": "Account"
          },
          "flatPath": "tagmanager/v2/accounts/{accountsId}",
          "description": "Updates a GTM Account.",
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.manage.accounts"
          ],
          "httpMethod": "PUT",
          "response": {
            "$ref": "Account"
          },
          "id": "tagmanager.accounts.update"
        },
        "get": {
          "parameterOrder": [
            "path"
          ],
          "parameters": {
            "path": {
              "description": "GTM Account's API relative path. Example: accounts/{account_id}",
              "required": true,
              "type": "string",
              "pattern": "^accounts/[^/]+$",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.edit.containers",
            "https://www.googleapis.com/auth/tagmanager.manage.accounts",
            "https://www.googleapis.com/auth/tagmanager.readonly"
          ],
          "flatPath": "tagmanager/v2/accounts/{accountsId}",
          "id": "tagmanager.accounts.get",
          "description": "Gets a GTM Account.",
          "httpMethod": "GET",
          "path": "tagmanager/v2/{+path}",
          "response": {
            "$ref": "Account"
          }
        },
        "list": {
          "response": {
            "$ref": "ListAccountsResponse"
          },
          "id": "tagmanager.accounts.list",
          "parameters": {
            "includeGoogleTags": {
              "location": "query",
              "description": "Also retrieve accounts associated with Google Tag when true.",
              "type": "boolean"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Continuation token for fetching the next page of results."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.edit.containers",
            "https://www.googleapis.com/auth/tagmanager.manage.accounts",
            "https://www.googleapis.com/auth/tagmanager.readonly"
          ],
          "httpMethod": "GET",
          "parameterOrder": [],
          "description": "Lists all GTM Accounts that a user has access to.",
          "path": "tagmanager/v2/accounts",
          "flatPath": "tagmanager/v2/accounts"
        }
      }
    }
  },
  "servicePath": "",
  "documentationLink": "https://developers.google.com/tag-manager",
  "schemas": {
    "ListFoldersResponse": {
      "type": "object",
      "description": "List Folders Response.",
      "properties": {
        "folder": {
          "type": "array",
          "description": "All GTM Folders of a GTM Container.",
          "items": {
            "$ref": "Folder"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "id": "ListFoldersResponse"
    },
    "RevertTagResponse": {
      "properties": {
        "tag": {
          "$ref": "Tag",
          "description": "Tag as it appears in the latest container version since the last workspace synchronization operation. If no tag is present, that means the tag was deleted in the latest container version."
        }
      },
      "id": "RevertTagResponse",
      "type": "object",
      "description": "The result of reverting a tag in a workspace."
    },
    "MergeConflict": {
      "description": "Represents a merge conflict.",
      "type": "object",
      "id": "MergeConflict",
      "properties": {
        "entityInBaseVersion": {
          "$ref": "Entity",
          "description": "The base version entity (since the latest sync operation) that has conflicting changes compared to the workspace. If this field is missing, it means the workspace entity is deleted from the base version."
        },
        "entityInWorkspace": {
          "description": "The workspace entity that has conflicting changes compared to the base version. If an entity is deleted in a workspace, it will still appear with a deleted change status.",
          "$ref": "Entity"
        }
      }
    },
    "ZoneBoundary": {
      "properties": {
        "condition": {
          "type": "array",
          "description": "The conditions that, when conjoined, make up the boundary.",
          "items": {
            "$ref": "Condition"
          }
        },
        "customEvaluationTriggerId": {
          "type": "array",
          "description": "Custom evaluation trigger IDs. A zone will evaluate its boundary conditions when any of the listed triggers are true.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Represents a Zone's boundaries.",
      "id": "ZoneBoundary",
      "type": "object"
    },
    "CreateContainerVersionResponse": {
      "type": "object",
      "id": "CreateContainerVersionResponse",
      "properties": {
        "newWorkspacePath": {
          "type": "string",
          "description": "Auto generated workspace path created as a result of version creation. This field should only be populated if the created version was not a quick preview."
        },
        "containerVersion": {
          "$ref": "ContainerVersion",
          "description": "The container version created."
        },
        "compilerError": {
          "description": "Compiler errors or not.",
          "type": "boolean"
        },
        "syncStatus": {
          "$ref": "SyncStatus",
          "description": "Whether version creation failed when syncing the workspace to the latest container version."
        }
      },
      "description": "Create container versions response."
    },
    "ContainerVersionHeader": {
      "type": "object",
      "description": "Represents a Google Tag Manager Container Version Header.",
      "id": "ContainerVersionHeader",
      "properties": {
        "numCustomTemplates": {
          "description": "Number of custom templates in the container version.",
          "type": "string"
        },
        "path": {
          "description": "GTM Container Version's API relative path.",
          "type": "string"
        },
        "numVariables": {
          "description": "Number of variables in the container version.",
          "type": "string"
        },
        "numClients": {
          "type": "string",
          "description": "Number of clients in the container version."
        },
        "name": {
          "type": "string",
          "description": "Container version display name."
        },
        "containerVersionId": {
          "description": "The Container Version ID uniquely identifies the GTM Container Version.",
          "type": "string"
        },
        "numZones": {
          "type": "string",
          "description": "Number of zones in the container version."
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "numGtagConfigs": {
          "description": "Number of Google tag configs in the container version.",
          "type": "string"
        },
        "numMacros": {
          "description": "Number of macros in the container version.",
          "type": "string"
        },
        "numTags": {
          "description": "Number of tags in the container version.",
          "type": "string"
        },
        "deleted": {
          "type": "boolean",
          "description": "A value of true indicates this container version has been deleted."
        },
        "numTriggers": {
          "type": "string",
          "description": "Number of triggers in the container version."
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "numRules": {
          "type": "string",
          "description": "Number of rules in the container version."
        }
      }
    },
    "ListEnabledBuiltInVariablesResponse": {
      "id": "ListEnabledBuiltInVariablesResponse",
      "type": "object",
      "properties": {
        "builtInVariable": {
          "items": {
            "$ref": "BuiltInVariable"
          },
          "type": "array",
          "description": "All GTM BuiltInVariables of a GTM container."
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "description": "A list of enabled built-in variables."
    },
    "AccountFeatures": {
      "id": "AccountFeatures",
      "type": "object",
      "properties": {
        "supportUserPermissions": {
          "description": "Whether this Account supports user permissions managed by GTM.",
          "type": "boolean"
        },
        "supportMultipleContainers": {
          "description": "Whether this Account supports multiple Containers.",
          "type": "boolean"
        }
      }
    },
    "ListContainersResponse": {
      "id": "ListContainersResponse",
      "type": "object",
      "properties": {
        "container": {
          "description": "All Containers of a GTM Account.",
          "type": "array",
          "items": {
            "$ref": "Container"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "description": "List Containers Response."
    },
    "ZoneChildContainer": {
      "type": "object",
      "properties": {
        "nickname": {
          "description": "The zone's nickname for the child container.",
          "type": "string"
        },
        "publicId": {
          "description": "The child container's public id.",
          "type": "string"
        }
      },
      "id": "ZoneChildContainer",
      "description": "Represents a child container of a Zone."
    },
    "Zone": {
      "type": "object",
      "id": "Zone",
      "properties": {
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "childContainer": {
          "type": "array",
          "description": "Containers that are children of this Zone.",
          "items": {
            "$ref": "ZoneChildContainer"
          }
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this zone in the container."
        },
        "zoneId": {
          "type": "string",
          "description": "The Zone ID uniquely identifies the GTM Zone."
        },
        "typeRestriction": {
          "description": "This Zone's type restrictions.",
          "$ref": "ZoneTypeRestriction"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "path": {
          "description": "GTM Zone's API relative path.",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "boundary": {
          "description": "This Zone's boundary.",
          "$ref": "ZoneBoundary"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Zone as computed at storage time. This value is recomputed whenever the zone is modified."
        },
        "name": {
          "description": "Zone display name.",
          "type": "string"
        }
      },
      "description": "Represents a Google Tag Manager Zone's contents."
    },
    "ListUserPermissionsResponse": {
      "id": "ListUserPermissionsResponse",
      "properties": {
        "userPermission": {
          "description": "All GTM UserPermissions of a GTM Account.",
          "items": {
            "$ref": "UserPermission"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "type": "object",
      "description": "List user permissions response."
    },
    "Client": {
      "type": "object",
      "id": "Client",
      "properties": {
        "name": {
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.clients.create",
              "tagmanager.accounts.containers.workspaces.clients.update"
            ]
          },
          "description": "Client display name. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "GTM client's API relative path."
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "clientId": {
          "description": "The Client ID uniquely identifies the GTM client.",
          "type": "string"
        },
        "type": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.clients.create",
              "tagmanager.accounts.containers.workspaces.clients.update"
            ]
          },
          "type": "string",
          "description": "Client type. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Client as computed at storage time. This value is recomputed whenever the client is modified.",
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "description": "Priority determines relative firing order. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update",
          "format": "int32"
        },
        "parameter": {
          "items": {
            "$ref": "Parameter"
          },
          "description": "The client's parameters. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update",
          "type": "array"
        }
      }
    },
    "ListTriggersResponse": {
      "id": "ListTriggersResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "trigger": {
          "items": {
            "$ref": "Trigger"
          },
          "description": "All GTM Triggers of a GTM Container.",
          "type": "array"
        }
      },
      "description": "List triggers response."
    },
    "Account": {
      "type": "object",
      "description": "Represents a Google Tag Manager Account.",
      "properties": {
        "path": {
          "type": "string",
          "description": "GTM Account's API relative path."
        },
        "features": {
          "$ref": "AccountFeatures",
          "description": "Read-only Account feature set"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Account as computed at storage time. This value is recomputed whenever the account is modified."
        },
        "shareData": {
          "description": "Whether the account shares data anonymously with Google and others. This flag enables benchmarking by sharing your data in an anonymous form. Google will remove all identifiable information about your website, combine the data with hundreds of other anonymous sites and report aggregate trends in the benchmarking service. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "Account display name. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update"
        },
        "accountId": {
          "description": "The Account ID uniquely identifies the GTM Account.",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        }
      },
      "id": "Account"
    },
    "RevertTemplateResponse": {
      "properties": {
        "template": {
          "$ref": "CustomTemplate",
          "description": "Template as it appears in the latest container version since the last workspace synchronization operation. If no template is present, that means the template was deleted in the latest container version."
        }
      },
      "type": "object",
      "description": "The result of reverting a template in a workspace.",
      "id": "RevertTemplateResponse"
    },
    "RevertFolderResponse": {
      "description": "The result of reverting folder changes in a workspace.",
      "properties": {
        "folder": {
          "description": "Folder as it appears in the latest container version since the last workspace synchronization operation. If no folder is present, that means the folder was deleted in the latest container version.",
          "$ref": "Folder"
        }
      },
      "type": "object",
      "id": "RevertFolderResponse"
    },
    "Folder": {
      "id": "Folder",
      "type": "object",
      "description": "Represents a Google Tag Manager Folder.",
      "properties": {
        "path": {
          "type": "string",
          "description": "GTM Folder's API relative path."
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.folders.create",
              "tagmanager.accounts.containers.workspaces.folders.update"
            ]
          },
          "description": "Folder display name. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update",
          "type": "string"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Folder as computed at storage time. This value is recomputed whenever the folder is modified.",
          "type": "string"
        },
        "notes": {
          "description": "User notes on how to apply this folder in the container. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update",
          "type": "string"
        },
        "folderId": {
          "description": "The Folder ID uniquely identifies the GTM Folder.",
          "type": "string"
        }
      }
    },
    "PublishContainerVersionResponse": {
      "description": "Publish container version response.",
      "id": "PublishContainerVersionResponse",
      "properties": {
        "containerVersion": {
          "description": "The container version created.",
          "$ref": "ContainerVersion"
        },
        "compilerError": {
          "description": "Compiler errors or not.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RevertZoneResponse": {
      "description": "The result of reverting a zone in a workspace.",
      "properties": {
        "zone": {
          "$ref": "Zone",
          "description": "Zone as it appears in the latest container version since the last workspace synchronization operation. If no zone is present, that means the zone was deleted in the latest container version."
        }
      },
      "type": "object",
      "id": "RevertZoneResponse"
    },
    "ListClientsResponse": {
      "type": "object",
      "properties": {
        "client": {
          "items": {
            "$ref": "Client"
          },
          "description": "All GTM Clients of a GTM Container.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "id": "ListClientsResponse"
    },
    "BuiltInVariable": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "type": {
          "type": "string",
          "enum": [
            "builtInVariableTypeUnspecified",
            "pageUrl",
            "pageHostname",
            "pagePath",
            "referrer",
            "event",
            "clickElement",
            "clickClasses",
            "clickId",
            "clickTarget",
            "clickUrl",
            "clickText",
            "firstPartyServingUrl",
            "formElement",
            "formClasses",
            "formId",
            "formTarget",
            "formUrl",
            "formText",
            "errorMessage",
            "errorUrl",
            "errorLine",
            "newHistoryUrl",
            "oldHistoryUrl",
            "newHistoryFragment",
            "oldHistoryFragment",
            "newHistoryState",
            "oldHistoryState",
            "historySource",
            "containerVersion",
            "debugMode",
            "randomNumber",
            "containerId",
            "appId",
            "appName",
            "appVersionCode",
            "appVersionName",
            "language",
            "osVersion",
            "platform",
            "sdkVersion",
            "deviceName",
            "resolution",
            "advertiserId",
            "advertisingTrackingEnabled",
            "htmlId",
            "environmentName",
            "ampBrowserLanguage",
            "ampCanonicalPath",
            "ampCanonicalUrl",
            "ampCanonicalHost",
            "ampReferrer",
            "ampTitle",
            "ampClientId",
            "ampClientTimezone",
            "ampClientTimestamp",
            "ampClientScreenWidth",
            "ampClientScreenHeight",
            "ampClientScrollX",
            "ampClientScrollY",
            "ampClientMaxScrollX",
            "ampClientMaxScrollY",
            "ampTotalEngagedTime",
            "ampPageViewId",
            "ampPageLoadTime",
            "ampPageDownloadTime",
            "ampGtmEvent",
            "eventName",
            "firebaseEventParameterCampaign",
            "firebaseEventParameterCampaignAclid",
            "firebaseEventParameterCampaignAnid",
            "firebaseEventParameterCampaignClickTimestamp",
            "firebaseEventParameterCampaignContent",
            "firebaseEventParameterCampaignCp1",
            "firebaseEventParameterCampaignGclid",
            "firebaseEventParameterCampaignSource",
            "firebaseEventParameterCampaignTerm",
            "firebaseEventParameterCurrency",
            "firebaseEventParameterDynamicLinkAcceptTime",
            "firebaseEventParameterDynamicLinkLinkid",
            "firebaseEventParameterNotificationMessageDeviceTime",
            "firebaseEventParameterNotificationMessageId",
            "firebaseEventParameterNotificationMessageName",
            "firebaseEventParameterNotificationMessageTime",
            "firebaseEventParameterNotificationTopic",
            "firebaseEventParameterPreviousAppVersion",
            "firebaseEventParameterPreviousOsVersion",
            "firebaseEventParameterPrice",
            "firebaseEventParameterProductId",
            "firebaseEventParameterQuantity",
            "firebaseEventParameterValue",
            "videoProvider",
            "videoUrl",
            "videoTitle",
            "videoDuration",
            "videoPercent",
            "videoVisible",
            "videoStatus",
            "videoCurrentTime",
            "scrollDepthThreshold",
            "scrollDepthUnits",
            "scrollDepthDirection",
            "elementVisibilityRatio",
            "elementVisibilityTime",
            "elementVisibilityFirstTime",
            "elementVisibilityRecentTime",
            "requestPath",
            "requestMethod",
            "clientName",
            "queryString",
            "serverPageLocationUrl",
            "serverPageLocationPath",
            "serverPageLocationHostname",
            "visitorRegion"
          ],
          "description": "Type of built-in variable. @required.tagmanager.accounts.containers.workspaces.built_in_variable.update @mutable tagmanager.accounts.containers.workspaces.built_in_variable.update",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "For web or mobile.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "For web or mobile.",
            "",
            "For web or mobile.",
            "For web or mobile.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "path": {
          "description": "GTM BuiltInVariable's API relative path.",
          "type": "string"
        },
        "name": {
          "description": "Name of the built-in variable to be used to refer to the built-in variable.",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        }
      },
      "description": "Built-in variables are a special category of variables that are pre-created and non-customizable. They provide common functionality like accessing properties of the gtm data layer, monitoring clicks, or accessing elements of a page URL.",
      "id": "BuiltInVariable"
    },
    "Container": {
      "type": "object",
      "properties": {
        "fingerprint": {
          "description": "The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified.",
          "type": "string"
        },
        "features": {
          "description": "Read-only Container feature set.",
          "$ref": "ContainerFeatures"
        },
        "domainName": {
          "description": "List of domain names associated with the Container. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "path": {
          "description": "GTM Container's API relative path.",
          "type": "string"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "usageContext": {
          "items": {
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string",
            "enum": [
              "usageContextUnspecified",
              "web",
              "android",
              "ios",
              "androidSdk5",
              "iosSdk5",
              "amp",
              "server"
            ]
          },
          "description": "List of Usage Contexts for the Container. Valid values include: web, android, or ios. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "type": "array",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.create",
              "tagmanager.accounts.containers.update"
            ]
          }
        },
        "tagIds": {
          "items": {
            "type": "string"
          },
          "description": "All Tag IDs that refer to this Container.",
          "type": "array"
        },
        "containerId": {
          "type": "string",
          "description": "The Container ID uniquely identifies the GTM Container."
        },
        "taggingServerUrls": {
          "type": "array",
          "description": "List of server-side container URLs for the Container. If multiple URLs are provided, all URL paths must match. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Container display name. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.create",
              "tagmanager.accounts.containers.update"
            ]
          },
          "type": "string"
        },
        "publicId": {
          "description": "Container Public ID.",
          "type": "string"
        },
        "notes": {
          "description": "Container Notes. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        }
      },
      "description": "Represents a Google Tag Manager Container, which specifies the platform tags will run on, manages workspaces, and retains container versions.",
      "id": "Container"
    },
    "RevertBuiltInVariableResponse": {
      "id": "RevertBuiltInVariableResponse",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether the built-in variable is enabled after reversion.",
          "type": "boolean"
        }
      },
      "description": "The result of reverting a built-in variable in a workspace."
    },
    "SyncStatus": {
      "id": "SyncStatus",
      "properties": {
        "syncError": {
          "type": "boolean",
          "description": "An error occurred during the synchronization operation."
        },
        "mergeConflict": {
          "type": "boolean",
          "description": "Synchornization operation detected a merge conflict."
        }
      },
      "description": "The status of a workspace after synchronization.",
      "type": "object"
    },
    "ListTagsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "tag": {
          "description": "All GTM Tags of a GTM Container.",
          "items": {
            "$ref": "Tag"
          },
          "type": "array"
        }
      },
      "description": "List Tags Response.",
      "id": "ListTagsResponse",
      "type": "object"
    },
    "TagConsentSetting": {
      "type": "object",
      "properties": {
        "consentStatus": {
          "enumDescriptions": [
            "Default value where user has not specified any setting on it.",
            "Tag doesn't require any additional consent settings.",
            "Tag requires additional consent settings."
          ],
          "type": "string",
          "description": "The tag's consent status. If set to NEEDED, the runtime will check that the consent types specified by the consent_type field have been granted.",
          "enum": [
            "notSet",
            "notNeeded",
            "needed"
          ]
        },
        "consentType": {
          "description": "The type of consents to check for during tag firing if in the consent NEEDED state. This parameter must be of type LIST where each list item is of type STRING.",
          "$ref": "Parameter"
        }
      },
      "id": "TagConsentSetting"
    },
    "GetContainerSnippetResponse": {
      "id": "GetContainerSnippetResponse",
      "properties": {
        "snippet": {
          "type": "string",
          "description": "Tagging snippet for a Container."
        }
      },
      "type": "object"
    },
    "ContainerVersion": {
      "id": "ContainerVersion",
      "properties": {
        "deleted": {
          "type": "boolean",
          "description": "A value of true indicates this container version has been deleted."
        },
        "gtagConfig": {
          "items": {
            "$ref": "GtagConfig"
          },
          "description": "The Google tag configs in the container that this version was taken from.",
          "type": "array"
        },
        "path": {
          "description": "GTM Container Version's API relative path.",
          "type": "string"
        },
        "containerVersionId": {
          "description": "The Container Version ID uniquely identifies the GTM Container Version.",
          "type": "string"
        },
        "client": {
          "items": {
            "$ref": "Client"
          },
          "type": "array",
          "description": "The clients in the container that this version was taken from."
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "description": {
          "description": "Container version description. @mutable tagmanager.accounts.containers.versions.update",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "tag": {
          "type": "array",
          "description": "The tags in the container that this version was taken from.",
          "items": {
            "$ref": "Tag"
          }
        },
        "customTemplate": {
          "items": {
            "$ref": "CustomTemplate"
          },
          "type": "array",
          "description": "The custom templates in the container that this version was taken from."
        },
        "zone": {
          "description": "The zones in the container that this version was taken from.",
          "items": {
            "$ref": "Zone"
          },
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "Container version display name. @mutable tagmanager.accounts.containers.versions.update"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified.",
          "type": "string"
        },
        "folder": {
          "type": "array",
          "description": "The folders in the container that this version was taken from.",
          "items": {
            "$ref": "Folder"
          }
        },
        "trigger": {
          "description": "The triggers in the container that this version was taken from.",
          "items": {
            "$ref": "Trigger"
          },
          "type": "array"
        },
        "container": {
          "description": "The container that this version was taken from.",
          "$ref": "Container"
        },
        "variable": {
          "items": {
            "$ref": "Variable"
          },
          "description": "The variables in the container that this version was taken from.",
          "type": "array"
        },
        "builtInVariable": {
          "items": {
            "$ref": "BuiltInVariable"
          },
          "type": "array",
          "description": "The built-in variables in the container that this version was taken from."
        }
      },
      "type": "object",
      "description": "Represents a Google Tag Manager Container Version."
    },
    "Environment": {
      "type": "object",
      "properties": {
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "workspaceId": {
          "description": "Represents a link to a quick preview of a workspace.",
          "type": "string"
        },
        "url": {
          "type": "string",
          "description": "Default preview page url for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update"
        },
        "enableDebug": {
          "description": "Whether or not to enable debug by default for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "type": "boolean"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM environment as computed at storage time. This value is recomputed whenever the environment is modified."
        },
        "path": {
          "description": "GTM Environment's API relative path.",
          "type": "string"
        },
        "authorizationTimestamp": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time-stamp for the authorization code."
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "environmentId": {
          "type": "string",
          "description": "GTM Environment ID uniquely identifies the GTM Environment."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "containerVersionId": {
          "type": "string",
          "description": "Represents a link to a container version."
        },
        "description": {
          "description": "The environment description. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "type": "string"
        },
        "authorizationCode": {
          "description": "The environment authorization code.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "Points to a user defined environment.",
            "Points to the current live container version.",
            "Points to the latest container version.",
            "Automatically managed environment that points to a workspace preview or version created by a workspace."
          ],
          "type": "string",
          "description": "The type of this environment.",
          "enum": [
            "user",
            "live",
            "latest",
            "workspace"
          ]
        },
        "name": {
          "description": "The environment display name. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.environments.create",
              "tagmanager.accounts.containers.environments.update"
            ]
          }
        }
      },
      "id": "Environment",
      "description": "Represents a Google Tag Manager Environment. Note that a user can create, delete and update environments of type USER, but can only update the enable_debug and url fields of environments of other types."
    },
    "Destination": {
      "description": "Represents a Google Tag Destination.",
      "id": "Destination",
      "type": "object",
      "properties": {
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "destinationLinkId": {
          "type": "string",
          "description": "The Destination link ID uniquely identifies the Destination."
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the Google Tag Destination as computed at storage time. This value is recomputed whenever the destination is modified."
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "name": {
          "description": "Destination display name.",
          "type": "string"
        },
        "path": {
          "description": "Destination's API relative path.",
          "type": "string"
        },
        "destinationId": {
          "description": "Destination ID.",
          "type": "string"
        }
      }
    },
    "Workspace": {
      "type": "object",
      "description": "Represents a Google Tag Manager Container Workspace.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Workspace description. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Workspace as computed at storage time. This value is recomputed whenever the workspace is modified."
        },
        "name": {
          "description": "Workspace display name. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.create",
              "tagmanager.accounts.containers.workspaces.update"
            ]
          },
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "workspaceId": {
          "type": "string",
          "description": "The Workspace ID uniquely identifies the GTM Workspace."
        },
        "path": {
          "description": "GTM Workspace's API relative path.",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        }
      },
      "id": "Workspace"
    },
    "TeardownTag": {
      "type": "object",
      "id": "TeardownTag",
      "description": "Represents a tag that fires after another tag in order to tear down dependencies.",
      "properties": {
        "stopTeardownOnFailure": {
          "type": "boolean",
          "description": "If true, fire the teardown tag if and only if the main tag fires successfully. If false, fire the teardown tag regardless of main tag firing status."
        },
        "tagName": {
          "type": "string",
          "description": "The name of the teardown tag."
        }
      }
    },
    "SyncWorkspaceResponse": {
      "id": "SyncWorkspaceResponse",
      "type": "object",
      "properties": {
        "mergeConflict": {
          "items": {
            "$ref": "MergeConflict"
          },
          "type": "array",
          "description": "The merge conflict after sync. If this field is not empty, the sync is still treated as successful. But a version cannot be created until all conflicts are resolved."
        },
        "syncStatus": {
          "description": "Indicates whether synchronization caused a merge conflict or sync error.",
          "$ref": "SyncStatus"
        }
      },
      "description": "A response after synchronizing the workspace to the latest container version."
    },
    "CreateBuiltInVariableResponse": {
      "properties": {
        "builtInVariable": {
          "type": "array",
          "items": {
            "$ref": "BuiltInVariable"
          },
          "description": "List of created built-in variables."
        }
      },
      "id": "CreateBuiltInVariableResponse",
      "type": "object"
    },
    "ListVariablesResponse": {
      "description": "List Variables Response.",
      "properties": {
        "variable": {
          "description": "All GTM Variables of a GTM Container.",
          "items": {
            "$ref": "Variable"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListVariablesResponse"
    },
    "ContainerAccess": {
      "properties": {
        "containerId": {
          "type": "string",
          "description": "GTM Container ID. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update"
        },
        "permission": {
          "enum": [
            "containerPermissionUnspecified",
            "noAccess",
            "read",
            "edit",
            "approve",
            "publish"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "List of Container permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "type": "string"
        }
      },
      "id": "ContainerAccess",
      "description": "Defines the Google Tag Manager Container access permissions.",
      "type": "object"
    },
    "ListWorkspacesResponse": {
      "properties": {
        "workspace": {
          "description": "All Workspaces of a GTM Container.",
          "items": {
            "$ref": "Workspace"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "id": "ListWorkspacesResponse",
      "type": "object",
      "description": "A list of workspaces in a container."
    },
    "ListTemplatesResponse": {
      "type": "object",
      "properties": {
        "template": {
          "type": "array",
          "description": "All GTM Custom Templates of a GTM Container.",
          "items": {
            "$ref": "CustomTemplate"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "id": "ListTemplatesResponse"
    },
    "RevertTriggerResponse": {
      "id": "RevertTriggerResponse",
      "properties": {
        "trigger": {
          "description": "Trigger as it appears in the latest container version since the last workspace synchronization operation. If no trigger is present, that means the trigger was deleted in the latest container version.",
          "$ref": "Trigger"
        }
      },
      "description": "The result of reverting a trigger in a workspace.",
      "type": "object"
    },
    "CreateContainerVersionRequestVersionOptions": {
      "description": "Options for new container versions.",
      "id": "CreateContainerVersionRequestVersionOptions",
      "properties": {
        "notes": {
          "type": "string",
          "description": "The notes of the container version to be created."
        },
        "name": {
          "description": "The name of the container version to be created.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ContainerFeatures": {
      "type": "object",
      "id": "ContainerFeatures",
      "properties": {
        "supportVariables": {
          "description": "Whether this Container supports variables.",
          "type": "boolean"
        },
        "supportClients": {
          "type": "boolean",
          "description": "Whether this Container supports clients."
        },
        "supportTags": {
          "type": "boolean",
          "description": "Whether this Container supports tags."
        },
        "supportWorkspaces": {
          "type": "boolean",
          "description": "Whether this Container supports workspaces."
        },
        "supportTemplates": {
          "type": "boolean",
          "description": "Whether this Container supports templates."
        },
        "supportEnvironments": {
          "description": "Whether this Container supports environments.",
          "type": "boolean"
        },
        "supportZones": {
          "description": "Whether this Container supports zones.",
          "type": "boolean"
        },
        "supportUserPermissions": {
          "type": "boolean",
          "description": "Whether this Container supports user permissions managed by GTM."
        },
        "supportVersions": {
          "type": "boolean",
          "description": "Whether this Container supports Container versions."
        },
        "supportTriggers": {
          "description": "Whether this Container supports triggers.",
          "type": "boolean"
        },
        "supportGtagConfigs": {
          "type": "boolean",
          "description": "Whether this Container supports Google tag config."
        },
        "supportBuiltInVariables": {
          "type": "boolean",
          "description": "Whether this Container supports built-in variables"
        },
        "supportFolders": {
          "type": "boolean",
          "description": "Whether this Container supports folders."
        }
      }
    },
    "RevertClientResponse": {
      "id": "RevertClientResponse",
      "type": "object",
      "properties": {
        "client": {
          "description": "Client as it appears in the latest container version since the last workspace synchronization operation. If no client is present, that means the client was deleted in the latest container version.",
          "$ref": "Client"
        }
      },
      "description": "The result of reverting a client in a workspace."
    },
    "FolderEntities": {
      "type": "object",
      "id": "FolderEntities",
      "description": "Represents a Google Tag Manager Folder's contents.",
      "properties": {
        "variable": {
          "items": {
            "$ref": "Variable"
          },
          "type": "array",
          "description": "The list of variables inside the folder."
        },
        "trigger": {
          "description": "The list of triggers inside the folder.",
          "type": "array",
          "items": {
            "$ref": "Trigger"
          }
        },
        "tag": {
          "items": {
            "$ref": "Tag"
          },
          "description": "The list of tags inside the folder.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      }
    },
    "Entity": {
      "type": "object",
      "id": "Entity",
      "properties": {
        "client": {
          "description": "The client being represented by the entity.",
          "$ref": "Client"
        },
        "folder": {
          "$ref": "Folder",
          "description": "The folder being represented by the entity."
        },
        "changeStatus": {
          "type": "string",
          "enumDescriptions": [
            "",
            "The entity has never been changed.",
            "The entity is added to the workspace.",
            "The entity is deleted from the workspace.",
            "The entity has been updated in the workspace."
          ],
          "description": "Represents how the entity has been changed in the workspace.",
          "enum": [
            "changeStatusUnspecified",
            "none",
            "added",
            "deleted",
            "updated"
          ]
        },
        "tag": {
          "description": "The tag being represented by the entity.",
          "$ref": "Tag"
        },
        "variable": {
          "description": "The variable being represented by the entity.",
          "$ref": "Variable"
        },
        "trigger": {
          "description": "The trigger being represented by the entity.",
          "$ref": "Trigger"
        }
      },
      "description": "A workspace entity that may represent a tag, trigger, variable, or folder in addition to its status in the workspace."
    },
    "ListContainerVersionsResponse": {
      "id": "ListContainerVersionsResponse",
      "type": "object",
      "description": "List container versions response.",
      "properties": {
        "containerVersionHeader": {
          "items": {
            "$ref": "ContainerVersionHeader"
          },
          "type": "array",
          "description": "All container version headers of a GTM Container."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      }
    },
    "Variable": {
      "properties": {
        "variableId": {
          "type": "string",
          "description": "The Variable ID uniquely identifies the GTM Variable."
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Variable as computed at storage time. This value is recomputed whenever the variable is modified."
        },
        "name": {
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "description": "Variable display name. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "disablingTriggerId": {
          "description": "For mobile containers only: A list of trigger IDs for disabling conditional variables; the variable is enabled if one of the enabling trigger is true while all the disabling trigger are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "formatValue": {
          "$ref": "VariableFormatValue",
          "description": "Option to convert a variable value to other value."
        },
        "type": {
          "description": "GTM Variable Type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          }
        },
        "parentFolderId": {
          "type": "string",
          "description": "Parent folder id."
        },
        "parameter": {
          "items": {
            "$ref": "Parameter"
          },
          "description": "The variable's parameters. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "array"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "notes": {
          "description": "User notes on how to apply this variable in the container. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "scheduleStartMs": {
          "description": "The start timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "format": "int64",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "GTM Variable's API relative path."
        },
        "scheduleEndMs": {
          "format": "int64",
          "type": "string",
          "description": "The end timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "enablingTriggerId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "For mobile containers only: A list of trigger IDs for enabling conditional variables; the variable is enabled if one of the enabling triggers is true while all the disabling triggers are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        }
      },
      "type": "object",
      "description": "Represents a Google Tag Manager Variable.",
      "id": "Variable"
    },
    "Parameter": {
      "id": "Parameter",
      "properties": {
        "key": {
          "description": "The named key that uniquely identifies a parameter. Required for top-level parameters, as well as map values. Ignored for list values. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "This list parameter's parameters (keys will be ignored). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "value": {
          "type": "string",
          "description": "A parameter's value (may contain variable references such as \"{{myVariable}}\") as appropriate to the specified type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "type": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update",
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update",
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "type": "string",
          "enum": [
            "typeUnspecified",
            "template",
            "integer",
            "boolean",
            "list",
            "map",
            "triggerReference",
            "tagReference"
          ],
          "enumDescriptions": [
            "",
            "May include variable references (such as \"{{myVariable}}\").",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "The parameter type. Valid values are: - boolean: The value represents a boolean, represented as 'true' or 'false' - integer: The value represents a 64-bit signed integer value, in base 10 - list: A list of parameters should be specified - map: A map of parameters should be specified - template: The value represents any text; this can include variable references (even variable references that might return non-string types) - trigger_reference: The value represents a trigger, represented as the trigger id - tag_reference: The value represents a tag, represented as the tag name @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "map": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "This map parameter's parameters (must have keys; keys must be unique). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        }
      },
      "type": "object",
      "description": "Represents a Google Tag Manager Parameter."
    },
    "ListZonesResponse": {
      "properties": {
        "zone": {
          "type": "array",
          "items": {
            "$ref": "Zone"
          },
          "description": "All GTM Zones of a GTM Container."
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListZonesResponse"
    },
    "VariableFormatValue": {
      "id": "VariableFormatValue",
      "type": "object",
      "properties": {
        "convertNullToValue": {
          "description": "The value to convert if a variable value is null.",
          "$ref": "Parameter"
        },
        "convertUndefinedToValue": {
          "description": "The value to convert if a variable value is undefined.",
          "$ref": "Parameter"
        },
        "convertTrueToValue": {
          "description": "The value to convert if a variable value is true.",
          "$ref": "Parameter"
        },
        "convertFalseToValue": {
          "$ref": "Parameter",
          "description": "The value to convert if a variable value is false."
        },
        "caseConversionType": {
          "type": "string",
          "enum": [
            "none",
            "lowercase",
            "uppercase"
          ],
          "description": "The option to convert a string-type variable value to either lowercase or uppercase.",
          "enumDescriptions": [
            "",
            "The option to convert a variable value to lowercase.",
            "The option to convert a variable value to uppercase."
          ]
        }
      }
    },
    "Tag": {
      "description": "Represents a Google Tag Manager Tag.",
      "type": "object",
      "properties": {
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Tag as computed at storage time. This value is recomputed whenever the tag is modified."
        },
        "firingTriggerId": {
          "description": "Firing trigger IDs. A tag will fire when any of the listed triggers are true and all of its blockingTriggerIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "priority": {
          "$ref": "Parameter",
          "description": "User defined numeric priority of the tag. Tags are fired asynchronously in order of priority. Tags with higher numeric value fire first. A tag's priority can be a positive or negative value. The default value is 0. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "type": {
          "description": "GTM Tag Type. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update"
            ]
          }
        },
        "name": {
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update"
            ]
          },
          "description": "Tag display name. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "liveOnly": {
          "description": "If set to true, this tag will only fire in the live environment (e.g. not in preview or debug mode). @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "boolean"
        },
        "path": {
          "type": "string",
          "description": "GTM Tag's API relative path."
        },
        "blockingTriggerId": {
          "type": "array",
          "description": "Blocking trigger IDs. If any of the listed triggers evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "items": {
            "type": "string"
          }
        },
        "teardownTag": {
          "type": "array",
          "description": "The list of teardown tags. Currently we only allow one.",
          "items": {
            "$ref": "TeardownTag"
          }
        },
        "tagId": {
          "description": "The Tag ID uniquely identifies the GTM Tag.",
          "type": "string"
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        },
        "consentSettings": {
          "description": "Consent settings of a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "$ref": "TagConsentSetting"
        },
        "setupTag": {
          "type": "array",
          "description": "The list of setup tags. Currently we only allow one.",
          "items": {
            "$ref": "SetupTag"
          }
        },
        "monitoringMetadata": {
          "$ref": "Parameter",
          "description": "A map of key-value pairs of tag metadata to be included in the event data for tag monitoring. Notes: - This parameter must be type MAP. - Each parameter in the map are type TEMPLATE, however cannot contain variable references. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "parameter": {
          "items": {
            "$ref": "Parameter"
          },
          "type": "array",
          "description": "The tag's parameters. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "blockingRuleId": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Blocking rule IDs. If any of the listed rules evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "monitoringMetadataTagNameKey": {
          "type": "string",
          "description": "If non-empty, then the tag display name will be included in the monitoring metadata map using the key specified. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "scheduleEndMs": {
          "description": "The end timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "format": "int64",
          "type": "string"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "tagFiringOption": {
          "enumDescriptions": [
            "",
            "Tag can be fired multiple times per event.",
            "Tag can only be fired per event but can be fired multiple times per load (e.g., app load or page load).",
            "Tag can only be fired per load (e.g., app load or page load)."
          ],
          "type": "string",
          "enum": [
            "tagFiringOptionUnspecified",
            "unlimited",
            "oncePerEvent",
            "oncePerLoad"
          ],
          "description": "Option to fire this tag."
        },
        "paused": {
          "type": "boolean",
          "description": "Indicates whether the tag is paused, which prevents the tag from firing. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "scheduleStartMs": {
          "format": "int64",
          "type": "string",
          "description": "The start timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "firingRuleId": {
          "description": "Firing rule IDs. A tag will fire when any of the listed rules are true and all of its blockingRuleIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        }
      },
      "id": "Tag"
    },
    "ListAccountsResponse": {
      "id": "ListAccountsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "account": {
          "items": {
            "$ref": "Account"
          },
          "description": "List of GTM Accounts that a user has access to.",
          "type": "array"
        }
      },
      "description": "List Accounts Response.",
      "type": "object"
    },
    "QuickPreviewResponse": {
      "id": "QuickPreviewResponse",
      "properties": {
        "containerVersion": {
          "description": "The quick previewed container version.",
          "$ref": "ContainerVersion"
        },
        "compilerError": {
          "description": "Were there compiler errors or not.",
          "type": "boolean"
        },
        "syncStatus": {
          "description": "Whether quick previewing failed when syncing the workspace to the latest container version.",
          "$ref": "SyncStatus"
        }
      },
      "type": "object",
      "description": "Response to quick previewing a workspace."
    },
    "ListEnvironmentsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "environment": {
          "description": "All Environments of a GTM Container.",
          "items": {
            "$ref": "Environment"
          },
          "type": "array"
        }
      },
      "id": "ListEnvironmentsResponse",
      "description": "List Environments Response.",
      "type": "object"
    },
    "Trigger": {
      "properties": {
        "checkValidation": {
          "description": "Whether or not we should only fire tags if the form submit or link click event is not cancelled by some other event handler (e.g. because of validation). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "uniqueTriggerId": {
          "$ref": "Parameter",
          "description": "Globally unique id of the trigger that auto-generates this (a Form Submit, Link Click or Timer listener) if any. Used to make incompatible auto-events work together with trigger filtering based on trigger ids. This value is populated during output generation since the tags implied by triggers don't exist until then. Only valid for Form Submit, Link Click and Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Trigger as computed at storage time. This value is recomputed whenever the trigger is modified."
        },
        "maxTimerLengthSeconds": {
          "description": "Max time to fire Timer Events (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "waitForTagsTimeout": {
          "description": "How long to wait (in milliseconds) for tags to fire when 'waits_for_tags' above evaluates to true. Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "path": {
          "type": "string",
          "description": "GTM Trigger's API relative path."
        },
        "triggerId": {
          "type": "string",
          "description": "The Trigger ID uniquely identifies the GTM Trigger."
        },
        "totalTimeMinMilliseconds": {
          "$ref": "Parameter",
          "description": "A visibility trigger minimum total visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "visiblePercentageMin": {
          "$ref": "Parameter",
          "description": "A visibility trigger minimum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "horizontalScrollPercentageList": {
          "description": "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled horizontally. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "customEventFilter": {
          "items": {
            "$ref": "Condition"
          },
          "description": "Used in the case of custom event, which is fired iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "array"
        },
        "selector": {
          "$ref": "Parameter",
          "description": "A click trigger CSS selector (i.e. \"a\", \"button\" etc.). Only valid for AMP Click trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "visibilitySelector": {
          "$ref": "Parameter",
          "description": "A visibility trigger CSS selector (i.e. \"#id\"). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "intervalSeconds": {
          "description": "Time between Timer Events to fire (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "notes": {
          "description": "User notes on how to apply this trigger in the container. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "Defines the data layer event that causes this trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "enum": [
            "eventTypeUnspecified",
            "pageview",
            "domReady",
            "windowLoaded",
            "customEvent",
            "triggerGroup",
            "init",
            "consentInit",
            "serverPageview",
            "always",
            "firebaseAppException",
            "firebaseAppUpdate",
            "firebaseCampaign",
            "firebaseFirstOpen",
            "firebaseInAppPurchase",
            "firebaseNotificationDismiss",
            "firebaseNotificationForeground",
            "firebaseNotificationOpen",
            "firebaseNotificationReceive",
            "firebaseOsUpdate",
            "firebaseSessionStart",
            "firebaseUserEngagement",
            "formSubmission",
            "click",
            "linkClick",
            "jsError",
            "historyChange",
            "timer",
            "ampClick",
            "ampTimer",
            "ampScroll",
            "ampVisibility",
            "youTubeVideo",
            "scrollDepth",
            "elementVisibility"
          ],
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create"
            ]
          }
        },
        "filter": {
          "type": "array",
          "items": {
            "$ref": "Condition"
          },
          "description": "The trigger will only fire iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "eventName": {
          "description": "Name of the GTM event that is fired. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "autoEventFilter": {
          "description": "Used in the case of auto event tracking. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "items": {
            "$ref": "Condition"
          },
          "type": "array"
        },
        "parameter": {
          "description": "Additional parameters. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        },
        "waitForTags": {
          "description": "Whether or not we should delay the form submissions or link opening until all of the tags have fired (by preventing the default action and later simulating the default action). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "parentFolderId": {
          "type": "string",
          "description": "Parent folder id."
        },
        "visiblePercentageMax": {
          "description": "A visibility trigger maximum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "description": "Trigger display name. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "string"
        },
        "limit": {
          "description": "Limit of the number of GTM events this Timer Trigger will fire. If no limit is set, we will continue to fire GTM events until the user leaves the page. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "continuousTimeMinMilliseconds": {
          "$ref": "Parameter",
          "description": "A visibility trigger minimum continuous visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "verticalScrollPercentageList": {
          "$ref": "Parameter",
          "description": "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled vertically. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "interval": {
          "description": "Time between triggering recurring Timer Events (in milliseconds). Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents a Google Tag Manager Trigger",
      "id": "Trigger"
    },
    "CustomTemplate": {
      "properties": {
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "templateData": {
          "description": "The custom template in text format.",
          "type": "string"
        },
        "templateId": {
          "type": "string",
          "description": "The Custom Template ID uniquely identifies the GTM custom template."
        },
        "name": {
          "description": "Custom Template display name.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "GTM Custom Template's API relative path."
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "galleryReference": {
          "description": "A reference to the Community Template Gallery entry.",
          "$ref": "GalleryReference"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Custom Template as computed at storage time. This value is recomputed whenever the template is modified.",
          "type": "string"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "CustomTemplate",
      "description": "Represents a Google Tag Manager Custom Template's contents."
    },
    "GetWorkspaceStatusResponse": {
      "id": "GetWorkspaceStatusResponse",
      "type": "object",
      "properties": {
        "workspaceChange": {
          "items": {
            "$ref": "Entity"
          },
          "description": "Entities that have been changed in the workspace.",
          "type": "array"
        },
        "mergeConflict": {
          "description": "The merge conflict after sync.",
          "type": "array",
          "items": {
            "$ref": "MergeConflict"
          }
        }
      },
      "description": "The changes that have occurred in the workspace since the base container version."
    },
    "UserPermission": {
      "description": "Represents a user's permissions to an account and its container.",
      "type": "object",
      "properties": {
        "path": {
          "description": "GTM UserPermission's API relative path.",
          "type": "string"
        },
        "emailAddress": {
          "description": "User's email address. @mutable tagmanager.accounts.permissions.create",
          "type": "string"
        },
        "containerAccess": {
          "description": "GTM Container access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "items": {
            "$ref": "ContainerAccess"
          },
          "type": "array"
        },
        "accountAccess": {
          "description": "GTM Account access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "$ref": "AccountAccess"
        },
        "accountId": {
          "description": "The Account ID uniquely identifies the GTM Account.",
          "type": "string"
        }
      },
      "id": "UserPermission"
    },
    "ZoneTypeRestriction": {
      "properties": {
        "enable": {
          "description": "True if type restrictions have been enabled for this Zone.",
          "type": "boolean"
        },
        "whitelistedTypeId": {
          "description": "List of type public ids that have been whitelisted for use in this Zone.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ZoneTypeRestriction",
      "type": "object",
      "description": "Represents a Zone's type restrictions."
    },
    "GalleryReference": {
      "properties": {
        "isModified": {
          "description": "If a user has manually edited the community gallery template.",
          "type": "boolean"
        },
        "repository": {
          "description": "The name of the repository for the community gallery template.",
          "type": "string"
        },
        "host": {
          "description": "The name of the host for the community gallery template.",
          "type": "string"
        },
        "signature": {
          "description": "The signature of the community gallery template as computed at import time. This value is recomputed whenever the template is updated from the gallery.",
          "type": "string"
        },
        "owner": {
          "type": "string",
          "description": "The name of the owner for the community gallery template."
        },
        "version": {
          "type": "string",
          "description": "The version of the community gallery template."
        }
      },
      "type": "object",
      "id": "GalleryReference",
      "description": "Represents the link between a custom template and an entry on the Community Template Gallery site."
    },
    "Condition": {
      "type": "object",
      "properties": {
        "parameter": {
          "description": "A list of named parameters (key/value), depending on the condition's type. Notes: - For binary operators, include parameters named arg0 and arg1 for specifying the left and right operands, respectively. - At this time, the left operand (arg0) must be a reference to a variable. - For case-insensitive Regex matching, include a boolean parameter named ignore_case that is set to true. If not specified or set to any other value, the matching will be case sensitive. - To negate an operator, include a boolean parameter named negate boolean parameter that is set to true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "items": {
            "$ref": "Parameter"
          },
          "type": "array",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          }
        },
        "type": {
          "enum": [
            "conditionTypeUnspecified",
            "equals",
            "contains",
            "startsWith",
            "endsWith",
            "matchRegex",
            "greater",
            "greaterOrEquals",
            "less",
            "lessOrEquals",
            "cssSelector",
            "urlMatches"
          ],
          "description": "The type of operator for this condition. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "NOTE(lanzone): When defining a ConditionType here, don't forget to also define a matching PredicateType (in condition.proto)."
          ]
        }
      },
      "id": "Condition",
      "description": "Represents a predicate."
    },
    "ListDestinationsResponse": {
      "id": "ListDestinationsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "destination": {
          "items": {
            "$ref": "Destination"
          },
          "type": "array",
          "description": "All Destinations linked to a GTM Container."
        }
      }
    },
    "AccountAccess": {
      "description": "Defines the Google Tag Manager Account access permissions.",
      "type": "object",
      "id": "AccountAccess",
      "properties": {
        "permission": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "accountPermissionUnspecified",
            "noAccess",
            "user",
            "admin"
          ],
          "description": "Whether the user has no access, user access, or admin access to an account. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "type": "string"
        }
      }
    },
    "SetupTag": {
      "id": "SetupTag",
      "type": "object",
      "description": "Represents a reference to atag that fires before another tag in order to set up dependencies.",
      "properties": {
        "tagName": {
          "type": "string",
          "description": "The name of the setup tag."
        },
        "stopOnSetupFailure": {
          "type": "boolean",
          "description": "If true, fire the main tag if and only if the setup tag fires successfully. If false, fire the main tag regardless of setup tag firing status."
        }
      }
    },
    "RevertVariableResponse": {
      "properties": {
        "variable": {
          "description": "Variable as it appears in the latest container version since the last workspace synchronization operation. If no variable is present, that means the variable was deleted in the latest container version.",
          "$ref": "Variable"
        }
      },
      "id": "RevertVariableResponse",
      "type": "object",
      "description": "The result of reverting a variable in a workspace."
    },
    "GtagConfig": {
      "description": "Represents a Google tag configuration.",
      "properties": {
        "fingerprint": {
          "description": "The fingerprint of the Google tag config as computed at storage time. This value is recomputed whenever the config is modified.",
          "type": "string"
        },
        "path": {
          "description": "Google tag config's API relative path.",
          "type": "string"
        },
        "workspaceId": {
          "description": "Google tag workspace ID. Only used by GTM containers. Set to 0 otherwise.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "Google tag account ID."
        },
        "containerId": {
          "description": "Google tag container ID.",
          "type": "string"
        },
        "gtagConfigId": {
          "description": "The ID uniquely identifies the Google tag config.",
          "type": "string"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "parameter": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "The Google tag config's parameters. @mutable tagmanager.accounts.containers.workspaces.gtag_config.create @mutable tagmanager.accounts.containers.workspaces.gtag_config.update"
        },
        "type": {
          "type": "string",
          "description": "Google tag config type. @required tagmanager.accounts.containers.workspaces.gtag_config.create @required tagmanager.accounts.containers.workspaces.gtag_config.update @mutable tagmanager.accounts.containers.workspaces.gtag_config.create @mutable tagmanager.accounts.containers.workspaces.gtag_config.update"
        }
      },
      "id": "GtagConfig",
      "type": "object"
    },
    "ListGtagConfigResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "gtagConfig": {
          "description": "All Google tag configs in a Container.",
          "type": "array",
          "items": {
            "$ref": "GtagConfig"
          }
        }
      },
      "id": "ListGtagConfigResponse",
      "type": "object"
    }
  },
  "id": "tagmanager:v2",
  "discoveryVersion": "v1",
  "basePath": "",
  "ownerName": "Google",
  "name": "tagmanager",
  "ownerDomain": "google.com",
  "mtlsRootUrl": "https://tagmanager.mtls.googleapis.com/",
  "description": "This API allows clients to access and modify container and tag configuration."
}

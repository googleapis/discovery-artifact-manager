{
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "basePath": "",
  "resources": {
    "accounts": {
      "methods": {
        "get": {
          "description": "Gets a GTM Account.",
          "parameterOrder": [
            "path"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.edit.containers",
            "https://www.googleapis.com/auth/tagmanager.manage.accounts",
            "https://www.googleapis.com/auth/tagmanager.readonly"
          ],
          "id": "tagmanager.accounts.get",
          "flatPath": "tagmanager/v2/accounts/{accountsId}",
          "path": "tagmanager/v2/{+path}",
          "response": {
            "$ref": "Account"
          },
          "parameters": {
            "path": {
              "pattern": "^accounts/[^/]+$",
              "location": "path",
              "description": "GTM Account's API relative path. Example: accounts/{account_id}",
              "type": "string",
              "required": true
            }
          }
        },
        "update": {
          "flatPath": "tagmanager/v2/accounts/{accountsId}",
          "parameters": {
            "path": {
              "description": "GTM Account's API relative path. Example: accounts/{account_id}",
              "required": true,
              "location": "path",
              "type": "string",
              "pattern": "^accounts/[^/]+$"
            },
            "fingerprint": {
              "location": "query",
              "type": "string",
              "description": "When provided, this fingerprint must match the fingerprint of the account in storage."
            }
          },
          "path": "tagmanager/v2/{+path}",
          "parameterOrder": [
            "path"
          ],
          "id": "tagmanager.accounts.update",
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.manage.accounts"
          ],
          "response": {
            "$ref": "Account"
          },
          "httpMethod": "PUT",
          "description": "Updates a GTM Account.",
          "request": {
            "$ref": "Account"
          }
        },
        "list": {
          "httpMethod": "GET",
          "parameters": {
            "includeGoogleTags": {
              "type": "boolean",
              "description": "Also retrieve accounts associated with Google Tag when true.",
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Continuation token for fetching the next page of results."
            }
          },
          "flatPath": "tagmanager/v2/accounts",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.edit.containers",
            "https://www.googleapis.com/auth/tagmanager.manage.accounts",
            "https://www.googleapis.com/auth/tagmanager.readonly"
          ],
          "description": "Lists all GTM Accounts that a user has access to.",
          "path": "tagmanager/v2/accounts",
          "response": {
            "$ref": "ListAccountsResponse"
          },
          "id": "tagmanager.accounts.list"
        }
      },
      "resources": {
        "containers": {
          "methods": {
            "list": {
              "description": "Lists all Containers that belongs to a GTM Account.",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "id": "tagmanager.accounts.containers.list",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}.",
                  "location": "path",
                  "pattern": "^accounts/[^/]+$",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "Continuation token for fetching the next page of results.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "ListContainersResponse"
              },
              "path": "tagmanager/v2/{+parent}/containers",
              "parameterOrder": [
                "parent"
              ]
            },
            "combine": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:combine",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "description": "Combines Containers.",
              "httpMethod": "POST",
              "path": "tagmanager/v2/{+path}:combine",
              "parameters": {
                "allowUserPermissionFeatureUpdate": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail."
                },
                "settingSource": {
                  "enum": [
                    "settingSourceUnspecified",
                    "current",
                    "other"
                  ],
                  "description": "Specify the source of config setting after combine",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Keep the current container config setting after combine",
                    "Use config setting from the other tag after combine"
                  ],
                  "type": "string"
                },
                "path": {
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "location": "path",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "required": true,
                  "type": "string"
                },
                "containerId": {
                  "type": "string",
                  "location": "query",
                  "description": "ID of container that will be merged into the current container."
                }
              },
              "id": "tagmanager.accounts.containers.combine",
              "response": {
                "$ref": "Container"
              },
              "parameterOrder": [
                "path"
              ]
            },
            "create": {
              "parameters": {
                "parent": {
                  "location": "path",
                  "pattern": "^accounts/[^/]+$",
                  "required": true,
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "description": "Creates a Container.",
              "id": "tagmanager.accounts.containers.create",
              "path": "tagmanager/v2/{+parent}/containers",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers",
              "httpMethod": "POST",
              "request": {
                "$ref": "Container"
              },
              "response": {
                "$ref": "Container"
              },
              "parameterOrder": [
                "parent"
              ]
            },
            "snippet": {
              "description": "Gets the tagging snippet for a Container.",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:snippet",
              "response": {
                "$ref": "GetContainerSnippetResponse"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "path"
              ],
              "path": "tagmanager/v2/{+path}:snippet",
              "parameters": {
                "path": {
                  "required": true,
                  "description": "Container snippet's API relative path. Example: accounts/{account_id}/containers/{container_id}:snippet",
                  "type": "string",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "id": "tagmanager.accounts.containers.snippet"
            },
            "move_tag_id": {
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "parameters": {
                "copyUsers": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Whether or not to copy users from this tag to the new tag."
                },
                "tagName": {
                  "type": "string",
                  "location": "query",
                  "description": "The name for the newly created tag."
                },
                "copySettings": {
                  "location": "query",
                  "description": "Whether or not to copy tag settings from this tag to the new tag.",
                  "type": "boolean"
                },
                "path": {
                  "required": true,
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "type": "string",
                  "location": "path"
                },
                "tagId": {
                  "type": "string",
                  "location": "query",
                  "description": "Tag ID to be removed from the current Container."
                },
                "allowUserPermissionFeatureUpdate": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail."
                },
                "copyTermsOfService": {
                  "location": "query",
                  "description": "Must be set to true to accept all terms of service agreements copied from the current tag to the newly created tag. If this bit is false, the operation will fail.",
                  "type": "boolean"
                }
              },
              "id": "tagmanager.accounts.containers.move_tag_id",
              "description": "Move Tag ID out of a Container.",
              "parameterOrder": [
                "path"
              ],
              "path": "tagmanager/v2/{+path}:move_tag_id",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:move_tag_id",
              "httpMethod": "POST",
              "response": {
                "$ref": "Container"
              }
            },
            "delete": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "path": "tagmanager/v2/{+path}",
              "httpMethod": "DELETE",
              "id": "tagmanager.accounts.containers.delete",
              "parameterOrder": [
                "path"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.delete.containers"
              ],
              "parameters": {
                "path": {
                  "type": "string",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "required": true,
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "location": "path"
                }
              },
              "description": "Deletes a Container."
            },
            "lookup": {
              "parameters": {
                "destinationId": {
                  "location": "query",
                  "type": "string",
                  "description": "Destination ID linked to a GTM Container, e.g. AW-123456789. Example: accounts/containers:lookup?destination_id={destination_id}."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "path": "tagmanager/v2/accounts/containers:lookup",
              "description": "Looks up a Container by destination ID.",
              "parameterOrder": [],
              "flatPath": "tagmanager/v2/accounts/containers:lookup",
              "httpMethod": "GET",
              "response": {
                "$ref": "Container"
              },
              "id": "tagmanager.accounts.containers.lookup"
            },
            "update": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "parameters": {
                "fingerprint": {
                  "location": "query",
                  "description": "When provided, this fingerprint must match the fingerprint of the container in storage.",
                  "type": "string"
                },
                "path": {
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^accounts/[^/]+/containers/[^/]+$"
                }
              },
              "parameterOrder": [
                "path"
              ],
              "request": {
                "$ref": "Container"
              },
              "path": "tagmanager/v2/{+path}",
              "id": "tagmanager.accounts.containers.update",
              "description": "Updates a Container.",
              "response": {
                "$ref": "Container"
              },
              "httpMethod": "PUT"
            },
            "get": {
              "response": {
                "$ref": "Container"
              },
              "httpMethod": "GET",
              "parameters": {
                "path": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$"
                }
              },
              "description": "Gets a Container.",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "id": "tagmanager.accounts.containers.get",
              "parameterOrder": [
                "path"
              ],
              "path": "tagmanager/v2/{+path}",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ]
            }
          },
          "resources": {
            "versions": {
              "methods": {
                "live": {
                  "description": "Gets the live (i.e. published) container version",
                  "path": "tagmanager/v2/{+parent}/versions:live",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$"
                    }
                  },
                  "id": "tagmanager.accounts.containers.versions.live",
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions:live"
                },
                "publish": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:publish",
                  "parameters": {
                    "fingerprint": {
                      "description": "When provided, this fingerprint must match the fingerprint of the container version in storage.",
                      "location": "query",
                      "type": "string"
                    },
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}"
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "PublishContainerVersionResponse"
                  },
                  "path": "tagmanager/v2/{+path}:publish",
                  "description": "Publishes a Container Version.",
                  "id": "tagmanager.accounts.containers.versions.publish",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.publish"
                  ]
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "description": "Deletes a Container Version.",
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "location": "path",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "id": "tagmanager.accounts.containers.versions.delete",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "path": "tagmanager/v2/{+path}"
                },
                "get": {
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameters": {
                    "containerVersionId": {
                      "description": "The GTM ContainerVersion ID. Specify published to retrieve the currently published version.",
                      "location": "query",
                      "type": "string"
                    },
                    "path": {
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"
                    }
                  },
                  "id": "tagmanager.accounts.containers.versions.get",
                  "httpMethod": "GET",
                  "description": "Gets a Container Version.",
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "path": "tagmanager/v2/{+path}"
                },
                "update": {
                  "parameterOrder": [
                    "path"
                  ],
                  "id": "tagmanager.accounts.containers.versions.update",
                  "request": {
                    "$ref": "ContainerVersion"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "description": "Updates a Container Version.",
                  "httpMethod": "PUT",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "parameters": {
                    "fingerprint": {
                      "type": "string",
                      "description": "When provided, this fingerprint must match the fingerprint of the container version in storage.",
                      "location": "query"
                    },
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "required": true
                    }
                  },
                  "path": "tagmanager/v2/{+path}",
                  "response": {
                    "$ref": "ContainerVersion"
                  }
                },
                "set_latest": {
                  "path": "tagmanager/v2/{+path}:set_latest",
                  "description": "Sets the latest version used for synchronization of workspaces when detecting conflicts and errors.",
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "parameters": {
                    "path": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "required": true,
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}"
                    }
                  },
                  "id": "tagmanager.accounts.containers.versions.set_latest",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:set_latest"
                },
                "undelete": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:undelete",
                  "parameterOrder": [
                    "path"
                  ],
                  "httpMethod": "POST",
                  "description": "Undeletes a Container Version.",
                  "parameters": {
                    "path": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"
                    }
                  },
                  "path": "tagmanager/v2/{+path}:undelete",
                  "id": "tagmanager.accounts.containers.versions.undelete",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "response": {
                    "$ref": "ContainerVersion"
                  }
                }
              }
            },
            "destinations": {
              "methods": {
                "link": {
                  "parameters": {
                    "destinationId": {
                      "location": "query",
                      "type": "string",
                      "description": "Destination ID to be linked to the current container."
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path",
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true
                    },
                    "allowUserPermissionFeatureUpdate": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail."
                    }
                  },
                  "id": "tagmanager.accounts.containers.destinations.link",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations:link",
                  "description": "Adds a Destination to this Container and removes it from the Container to which it is currently linked.",
                  "response": {
                    "$ref": "Destination"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "tagmanager/v2/{+parent}/destinations:link",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "httpMethod": "POST"
                },
                "list": {
                  "httpMethod": "GET",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path",
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "ListDestinationsResponse"
                  },
                  "description": "Lists all Destinations linked to a GTM Container.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "tagmanager.accounts.containers.destinations.list",
                  "path": "tagmanager/v2/{+parent}/destinations"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameters": {
                    "path": {
                      "required": true,
                      "type": "string",
                      "description": "Google Tag Destination's API relative path. Example: accounts/{account_id}/containers/{container_id}/destinations/{destination_link_id}",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/destinations/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Destination"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations/{destinationsId}",
                  "description": "Gets a Destination.",
                  "parameterOrder": [
                    "path"
                  ],
                  "path": "tagmanager/v2/{+path}",
                  "id": "tagmanager.accounts.containers.destinations.get"
                }
              }
            },
            "environments": {
              "methods": {
                "update": {
                  "id": "tagmanager.accounts.containers.environments.update",
                  "httpMethod": "PUT",
                  "description": "Updates a GTM Environment.",
                  "path": "tagmanager/v2/{+path}",
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "location": "path"
                    },
                    "fingerprint": {
                      "description": "When provided, this fingerprint must match the fingerprint of the environment in storage.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "response": {
                    "$ref": "Environment"
                  },
                  "request": {
                    "$ref": "Environment"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ]
                },
                "create": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments",
                  "parameters": {
                    "parent": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "tagmanager/v2/{+parent}/environments",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "tagmanager.accounts.containers.environments.create",
                  "request": {
                    "$ref": "Environment"
                  },
                  "httpMethod": "POST",
                  "description": "Creates a GTM Environment.",
                  "response": {
                    "$ref": "Environment"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ]
                },
                "delete": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "id": "tagmanager.accounts.containers.environments.delete",
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "description": "Deletes a GTM Environment.",
                  "path": "tagmanager/v2/{+path}",
                  "httpMethod": "DELETE"
                },
                "reauthorize": {
                  "request": {
                    "$ref": "Environment"
                  },
                  "description": "Re-generates the authorization code for a GTM Environment.",
                  "parameters": {
                    "path": {
                      "required": true,
                      "location": "path",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "tagmanager/v2/{+path}:reauthorize",
                  "id": "tagmanager.accounts.containers.environments.reauthorize",
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.publish"
                  ],
                  "response": {
                    "$ref": "Environment"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}:reauthorize"
                },
                "list": {
                  "path": "tagmanager/v2/{+parent}/environments",
                  "id": "tagmanager.accounts.containers.environments.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists all GTM Environments of a GTM Container.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "Continuation token for fetching the next page of results.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "ListEnvironmentsResponse"
                  }
                },
                "get": {
                  "description": "Gets a GTM Environment.",
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Environment"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "id": "tagmanager.accounts.containers.environments.get",
                  "path": "tagmanager/v2/{+path}"
                }
              }
            },
            "workspaces": {
              "resources": {
                "transformations": {
                  "methods": {
                    "get": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations/{transformationsId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "description": "Gets a GTM Transformation.",
                      "parameters": {
                        "path": {
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/transformations/[^/]+$",
                          "description": "GTM Transformation's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/transformations/{transformation_id}",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "Transformation"
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.transformations.get"
                    },
                    "create": {
                      "request": {
                        "$ref": "Transformation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Creates a GTM Transformation.",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations",
                      "path": "tagmanager/v2/{+parent}/transformations",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.transformations.create",
                      "response": {
                        "$ref": "Transformation"
                      }
                    },
                    "delete": {
                      "parameters": {
                        "path": {
                          "description": "GTM Transformation's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/transformations/{transformation_id}",
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/transformations/[^/]+$",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations/{transformationsId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Deletes a GTM Transformation.",
                      "id": "tagmanager.accounts.containers.workspaces.transformations.delete",
                      "httpMethod": "DELETE"
                    },
                    "list": {
                      "description": "Lists all GTM Transformations of a GTM container workspace.",
                      "response": {
                        "$ref": "ListTransformationsResponse"
                      },
                      "path": "tagmanager/v2/{+parent}/transformations",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results."
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.transformations.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET"
                    },
                    "update": {
                      "request": {
                        "$ref": "Transformation"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations/{transformationsId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Updates a GTM Transformation.",
                      "response": {
                        "$ref": "Transformation"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.transformations.update",
                      "parameters": {
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the transformation in storage."
                        },
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/transformations/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "GTM Transformation's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/transformations/{transformation_id}",
                          "type": "string"
                        }
                      },
                      "httpMethod": "PUT",
                      "path": "tagmanager/v2/{+path}"
                    },
                    "revert": {
                      "path": "tagmanager/v2/{+path}:revert",
                      "httpMethod": "POST",
                      "id": "tagmanager.accounts.containers.workspaces.transformations.revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/transformations/{transformationsId}:revert",
                      "parameters": {
                        "path": {
                          "description": "GTM Transformation's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/transformations/{transformation_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/transformations/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the transformation in storage."
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "RevertTransformationResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Reverts changes to a GTM Transformation in a GTM Workspace."
                    }
                  }
                },
                "tags": {
                  "methods": {
                    "get": {
                      "description": "Gets a GTM Tag.",
                      "response": {
                        "$ref": "Tag"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.tags.get",
                      "httpMethod": "GET",
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "parameters": {
                        "path": {
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "location": "path",
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "list": {
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListTagsResponse"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags",
                      "id": "tagmanager.accounts.containers.workspaces.tags.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results."
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/tags",
                      "description": "Lists all GTM Tags of a Container."
                    },
                    "update": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "request": {
                        "$ref": "Tag"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.tags.update",
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Updates a GTM Tag.",
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the tag in storage.",
                          "type": "string",
                          "location": "query"
                        },
                        "path": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "Tag"
                      },
                      "httpMethod": "PUT"
                    },
                    "revert": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}:revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}:revert",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}"
                        },
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of thetag in storage."
                        }
                      },
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "RevertTagResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.tags.revert",
                      "description": "Reverts changes to a GTM Tag in a GTM Workspace."
                    },
                    "delete": {
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "id": "tagmanager.accounts.containers.workspaces.tags.delete",
                      "httpMethod": "DELETE",
                      "description": "Deletes a GTM Tag.",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "type": "string",
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "create": {
                      "request": {
                        "$ref": "Tag"
                      },
                      "parameters": {
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.tags.create",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags",
                      "path": "tagmanager/v2/{+parent}/tags",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "Tag"
                      },
                      "description": "Creates a GTM Tag.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST"
                    }
                  }
                },
                "templates": {
                  "methods": {
                    "get": {
                      "description": "Gets a GTM Template.",
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.templates.get"
                    },
                    "create": {
                      "id": "tagmanager.accounts.containers.workspaces.templates.create",
                      "description": "Creates a GTM Custom Template.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates",
                      "path": "tagmanager/v2/{+parent}/templates",
                      "request": {
                        "$ref": "CustomTemplate"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "list": {
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string"
                        },
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "response": {
                        "$ref": "ListTemplatesResponse"
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+parent}/templates",
                      "description": "Lists all GTM Templates of a GTM container workspace.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates",
                      "id": "tagmanager.accounts.containers.workspaces.templates.list",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "revert": {
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "RevertTemplateResponse"
                      },
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the template in storage.",
                          "location": "query"
                        }
                      },
                      "path": "tagmanager/v2/{+path}:revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}:revert",
                      "id": "tagmanager.accounts.containers.workspaces.templates.revert",
                      "description": "Reverts changes to a GTM Template in a GTM Workspace.",
                      "httpMethod": "POST"
                    },
                    "update": {
                      "id": "tagmanager.accounts.containers.workspaces.templates.update",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}",
                      "path": "tagmanager/v2/{+path}",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "httpMethod": "PUT",
                      "description": "Updates a GTM Template.",
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the templates in storage.",
                          "type": "string",
                          "location": "query"
                        },
                        "path": {
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "type": "string",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}"
                        }
                      },
                      "request": {
                        "$ref": "CustomTemplate"
                      }
                    },
                    "delete": {
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}"
                        }
                      },
                      "httpMethod": "DELETE",
                      "description": "Deletes a GTM Template.",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.templates.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}",
                      "path": "tagmanager/v2/{+path}"
                    }
                  }
                },
                "clients": {
                  "methods": {
                    "revert": {
                      "id": "tagmanager.accounts.containers.workspaces.clients.revert",
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}:revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+path}:revert",
                      "description": "Reverts changes to a GTM Client in a GTM Workspace.",
                      "response": {
                        "$ref": "RevertClientResponse"
                      },
                      "parameters": {
                        "path": {
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "location": "path"
                        },
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the client in storage."
                        }
                      }
                    },
                    "get": {
                      "parameters": {
                        "path": {
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "Client"
                      },
                      "description": "Gets a GTM Client.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET",
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.clients.get",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}",
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "create": {
                      "response": {
                        "$ref": "Client"
                      },
                      "description": "Creates a GTM Client.",
                      "request": {
                        "$ref": "Client"
                      },
                      "httpMethod": "POST",
                      "id": "tagmanager.accounts.containers.workspaces.clients.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "tagmanager/v2/{+parent}/clients",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      }
                    },
                    "update": {
                      "id": "tagmanager.accounts.containers.workspaces.clients.update",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}",
                      "description": "Updates a GTM Client.",
                      "parameters": {
                        "path": {
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "required": true,
                          "type": "string"
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the client in storage.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "request": {
                        "$ref": "Client"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "PUT",
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "Client"
                      }
                    },
                    "list": {
                      "description": "Lists all GTM Clients of a GTM container workspace.",
                      "response": {
                        "$ref": "ListClientsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients",
                      "id": "tagmanager.accounts.containers.workspaces.clients.list",
                      "path": "tagmanager/v2/{+parent}/clients",
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "type": "string"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string"
                        }
                      }
                    },
                    "delete": {
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.clients.delete",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "type": "string",
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "location": "path",
                          "required": true
                        }
                      },
                      "description": "Deletes a GTM Client.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}",
                      "httpMethod": "DELETE"
                    }
                  }
                },
                "gtag_config": {
                  "methods": {
                    "get": {
                      "path": "tagmanager/v2/{+path}",
                      "description": "Gets a Google tag config.",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$",
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "GtagConfig"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "httpMethod": "GET",
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.get"
                    },
                    "delete": {
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Deletes a Google tag config.",
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "DELETE",
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.delete",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "path": {
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}",
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$",
                          "type": "string"
                        }
                      }
                    },
                    "create": {
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.create",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config",
                      "description": "Creates a Google tag config.",
                      "request": {
                        "$ref": "GtagConfig"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+parent}/gtag_config",
                      "response": {
                        "$ref": "GtagConfig"
                      }
                    },
                    "update": {
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "PUT",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "request": {
                        "$ref": "GtagConfig"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.update",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$",
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}",
                          "location": "path"
                        },
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the config in storage."
                        }
                      },
                      "path": "tagmanager/v2/{+path}",
                      "description": "Updates a Google tag config.",
                      "response": {
                        "$ref": "GtagConfig"
                      }
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        },
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/gtag_config",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config",
                      "response": {
                        "$ref": "ListGtagConfigResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.list",
                      "description": "Lists all Google tag configs in a Container.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET"
                    }
                  }
                },
                "folders": {
                  "methods": {
                    "move_entities_to_folder": {
                      "path": "tagmanager/v2/{+path}:move_entities_to_folder",
                      "description": "Moves entities to a GTM Folder.",
                      "httpMethod": "POST",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:move_entities_to_folder",
                      "id": "tagmanager.accounts.containers.workspaces.folders.move_entities_to_folder",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "triggerId": {
                          "type": "string",
                          "location": "query",
                          "description": "The triggers to be moved to the folder.",
                          "repeated": true
                        },
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "required": true
                        },
                        "tagId": {
                          "type": "string",
                          "location": "query",
                          "description": "The tags to be moved to the folder.",
                          "repeated": true
                        },
                        "variableId": {
                          "type": "string",
                          "location": "query",
                          "repeated": true,
                          "description": "The variables to be moved to the folder."
                        }
                      },
                      "request": {
                        "$ref": "Folder"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "revert": {
                      "id": "tagmanager.accounts.containers.workspaces.folders.revert",
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}:revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:revert",
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the tag in storage.",
                          "location": "query",
                          "type": "string"
                        },
                        "path": {
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "RevertFolderResponse"
                      },
                      "description": "Reverts changes to a GTM Folder in a GTM Workspace."
                    },
                    "update": {
                      "httpMethod": "PUT",
                      "request": {
                        "$ref": "Folder"
                      },
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the folder in storage.",
                          "type": "string"
                        },
                        "path": {
                          "required": true,
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$"
                        }
                      },
                      "path": "tagmanager/v2/{+path}",
                      "description": "Updates a GTM Folder.",
                      "response": {
                        "$ref": "Folder"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.folders.update",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}"
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.folders.delete",
                      "description": "Deletes a GTM Folder.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "path": "tagmanager/v2/{+path}"
                    },
                    "entities": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameters": {
                        "path": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "location": "path",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "type": "string"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results."
                        }
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}:entities",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:entities",
                      "id": "tagmanager.accounts.containers.workspaces.folders.entities",
                      "description": "List all entities in a GTM Folder.",
                      "response": {
                        "$ref": "FolderEntities"
                      }
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Gets a GTM Folder.",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "required": true
                        }
                      },
                      "httpMethod": "GET",
                      "id": "tagmanager.accounts.containers.workspaces.folders.get",
                      "path": "tagmanager/v2/{+path}",
                      "response": {
                        "$ref": "Folder"
                      }
                    },
                    "create": {
                      "request": {
                        "$ref": "Folder"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders",
                      "description": "Creates a GTM Folder.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Folder"
                      },
                      "path": "tagmanager/v2/{+parent}/folders",
                      "id": "tagmanager.accounts.containers.workspaces.folders.create"
                    },
                    "list": {
                      "id": "tagmanager.accounts.containers.workspaces.folders.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders",
                      "description": "Lists all GTM Folders of a Container.",
                      "path": "tagmanager/v2/{+parent}/folders",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListFoldersResponse"
                      },
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "variables": {
                  "methods": {
                    "get": {
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameters": {
                        "path": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$"
                        }
                      },
                      "httpMethod": "GET",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "id": "tagmanager.accounts.containers.workspaces.variables.get",
                      "description": "Gets a GTM Variable.",
                      "response": {
                        "$ref": "Variable"
                      },
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+parent}/variables",
                      "description": "Lists all GTM Variables of a Container.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        },
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "ListVariablesResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.variables.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET"
                    },
                    "create": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables",
                      "response": {
                        "$ref": "Variable"
                      },
                      "path": "tagmanager/v2/{+parent}/variables",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "request": {
                        "$ref": "Variable"
                      },
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "id": "tagmanager.accounts.containers.workspaces.variables.create",
                      "description": "Creates a GTM Variable."
                    },
                    "update": {
                      "request": {
                        "$ref": "Variable"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "Variable"
                      },
                      "description": "Updates a GTM Variable.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "httpMethod": "PUT",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.variables.update",
                      "parameters": {
                        "path": {
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the variable in storage.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "path": "tagmanager/v2/{+path}"
                    },
                    "revert": {
                      "id": "tagmanager.accounts.containers.workspaces.variables.revert",
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}:revert",
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the variable in storage.",
                          "type": "string",
                          "location": "query"
                        },
                        "path": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}"
                        }
                      },
                      "description": "Reverts changes to a GTM Variable in a GTM Workspace.",
                      "response": {
                        "$ref": "RevertVariableResponse"
                      },
                      "path": "tagmanager/v2/{+path}:revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "delete": {
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Deletes a GTM Variable.",
                      "id": "tagmanager.accounts.containers.workspaces.variables.delete",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "required": true
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}"
                    }
                  }
                },
                "triggers": {
                  "methods": {
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "description": "Deletes a GTM Trigger.",
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "DELETE",
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.triggers.delete"
                    },
                    "update": {
                      "httpMethod": "PUT",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "Trigger"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "request": {
                        "$ref": "Trigger"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.triggers.update",
                      "parameters": {
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the trigger in storage."
                        },
                        "path": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$"
                        }
                      },
                      "description": "Updates a GTM Trigger."
                    },
                    "revert": {
                      "path": "tagmanager/v2/{+path}:revert",
                      "response": {
                        "$ref": "RevertTriggerResponse"
                      },
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the trigger in storage.",
                          "location": "query",
                          "type": "string"
                        },
                        "path": {
                          "required": true,
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}:revert",
                      "description": "Reverts changes to a GTM Trigger in a GTM Workspace.",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.revert",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results."
                        },
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers",
                      "description": "Lists all GTM Triggers of a Container.",
                      "httpMethod": "GET",
                      "path": "tagmanager/v2/{+parent}/triggers",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.triggers.list",
                      "response": {
                        "$ref": "ListTriggersResponse"
                      }
                    },
                    "create": {
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "description": "Creates a GTM Trigger.",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.create",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Trigger"
                      },
                      "response": {
                        "$ref": "Trigger"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers",
                      "path": "tagmanager/v2/{+parent}/triggers"
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "response": {
                        "$ref": "Trigger"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "GET",
                      "description": "Gets a GTM Trigger.",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.get",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$"
                        }
                      }
                    }
                  }
                },
                "built_in_variables": {
                  "methods": {
                    "delete": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "DELETE",
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "type": {
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname",
                            "visitorRegion"
                          ],
                          "type": "string",
                          "description": "The types of built-in variables to delete.",
                          "location": "query",
                          "repeated": true
                        },
                        "path": {
                          "description": "GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/built_in_variables$"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.delete",
                      "description": "Deletes one or more GTM Built-In Variables."
                    },
                    "create": {
                      "description": "Creates one or more GTM Built-In Variables.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.create",
                      "response": {
                        "$ref": "CreateBuiltInVariableResponse"
                      },
                      "parameters": {
                        "type": {
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "repeated": true,
                          "location": "query",
                          "description": "The types of built-in variables to enable.",
                          "type": "string",
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname",
                            "visitorRegion"
                          ]
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/built_in_variables",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables"
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "ListEnabledBuiltInVariablesResponse"
                      },
                      "description": "Lists all the enabled Built-In Variables of a GTM Container.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "path": "tagmanager/v2/{+parent}/built_in_variables",
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.list"
                    },
                    "revert": {
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables:revert",
                      "response": {
                        "$ref": "RevertBuiltInVariableResponse"
                      },
                      "parameters": {
                        "path": {
                          "description": "GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        },
                        "type": {
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname",
                            "visitorRegion"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "location": "query",
                          "description": "The type of built-in variable to revert."
                        }
                      },
                      "path": "tagmanager/v2/{+path}/built_in_variables:revert",
                      "description": "Reverts changes to a GTM Built-In Variables in a GTM Workspace.",
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "POST"
                    }
                  }
                },
                "zones": {
                  "methods": {
                    "list": {
                      "id": "tagmanager.accounts.containers.workspaces.zones.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListZonesResponse"
                      },
                      "path": "tagmanager/v2/{+parent}/zones",
                      "description": "Lists all GTM Zones of a GTM container workspace."
                    },
                    "revert": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "path": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}"
                        },
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the zone in storage.",
                          "type": "string"
                        }
                      },
                      "httpMethod": "POST",
                      "description": "Reverts changes to a GTM Zone in a GTM Workspace.",
                      "id": "tagmanager.accounts.containers.workspaces.zones.revert",
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}:revert",
                      "response": {
                        "$ref": "RevertZoneResponse"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}:revert"
                    },
                    "get": {
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.zones.get",
                      "parameters": {
                        "path": {
                          "required": true,
                          "location": "path",
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "Zone"
                      },
                      "description": "Gets a GTM Zone.",
                      "path": "tagmanager/v2/{+path}"
                    },
                    "create": {
                      "response": {
                        "$ref": "Zone"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones",
                      "path": "tagmanager/v2/{+parent}/zones",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a GTM Zone.",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "Zone"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.zones.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      }
                    },
                    "update": {
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the zone in storage.",
                          "location": "query",
                          "type": "string"
                        },
                        "path": {
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "type": "string",
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}"
                        }
                      },
                      "request": {
                        "$ref": "Zone"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}",
                      "httpMethod": "PUT",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "Zone"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.zones.update",
                      "path": "tagmanager/v2/{+path}",
                      "description": "Updates a GTM Zone."
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.zones.delete",
                      "description": "Deletes a GTM Zone.",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}"
                        }
                      },
                      "httpMethod": "DELETE",
                      "path": "tagmanager/v2/{+path}",
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}"
                    }
                  }
                }
              },
              "methods": {
                "quick_preview": {
                  "id": "tagmanager.accounts.containers.workspaces.quick_preview",
                  "response": {
                    "$ref": "QuickPreviewResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:quick_preview",
                  "path": "tagmanager/v2/{+path}:quick_preview",
                  "parameterOrder": [
                    "path"
                  ],
                  "description": "Quick previews a workspace by creating a fake container version from all entities in the provided workspace.",
                  "httpMethod": "POST",
                  "parameters": {
                    "path": {
                      "required": true,
                      "type": "string",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "location": "path"
                    }
                  }
                },
                "getStatus": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/status",
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "GetWorkspaceStatusResponse"
                  },
                  "parameters": {
                    "path": {
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                    }
                  },
                  "id": "tagmanager.accounts.containers.workspaces.getStatus",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "description": "Finds conflicting and modified entities in the workspace.",
                  "httpMethod": "GET",
                  "path": "tagmanager/v2/{+path}/status"
                },
                "sync": {
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "SyncWorkspaceResponse"
                  },
                  "id": "tagmanager.accounts.containers.workspaces.sync",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:sync",
                  "httpMethod": "POST",
                  "path": "tagmanager/v2/{+path}:sync",
                  "description": "Syncs a workspace to the latest container version by updating all unmodified workspace entities and displaying conflicts for modified entities.",
                  "parameters": {
                    "path": {
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ]
                },
                "update": {
                  "id": "tagmanager.accounts.containers.workspaces.update",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "path": "tagmanager/v2/{+path}",
                  "httpMethod": "PUT",
                  "parameters": {
                    "fingerprint": {
                      "type": "string",
                      "location": "query",
                      "description": "When provided, this fingerprint must match the fingerprint of the workspace in storage."
                    },
                    "path": {
                      "location": "path",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "type": "string",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                    }
                  },
                  "description": "Updates a Workspace.",
                  "response": {
                    "$ref": "Workspace"
                  },
                  "request": {
                    "$ref": "Workspace"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "parameterOrder": [
                    "path"
                  ]
                },
                "delete": {
                  "description": "Deletes a Workspace.",
                  "httpMethod": "DELETE",
                  "path": "tagmanager/v2/{+path}",
                  "id": "tagmanager.accounts.containers.workspaces.delete",
                  "parameters": {
                    "path": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.delete.containers"
                  ],
                  "parameterOrder": [
                    "path"
                  ]
                },
                "list": {
                  "description": "Lists all Workspaces that belong to a GTM Container.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "Continuation token for fetching the next page of results.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.list",
                  "response": {
                    "$ref": "ListWorkspacesResponse"
                  },
                  "path": "tagmanager/v2/{+parent}/workspaces",
                  "httpMethod": "GET"
                },
                "resolve_conflict": {
                  "path": "tagmanager/v2/{+path}:resolve_conflict",
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:resolve_conflict",
                  "request": {
                    "$ref": "Entity"
                  },
                  "id": "tagmanager.accounts.containers.workspaces.resolve_conflict",
                  "parameters": {
                    "fingerprint": {
                      "type": "string",
                      "location": "query",
                      "description": "When provided, this fingerprint must match the fingerprint of the entity_in_workspace in the merge conflict."
                    },
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "description": "Resolves a merge conflict for a workspace entity by updating it to the resolved entity passed in the request."
                },
                "create": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "id": "tagmanager.accounts.containers.workspaces.create",
                  "path": "tagmanager/v2/{+parent}/workspaces",
                  "response": {
                    "$ref": "Workspace"
                  },
                  "request": {
                    "$ref": "Workspace"
                  },
                  "description": "Creates a Workspace.",
                  "parameters": {
                    "parent": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ]
                },
                "get": {
                  "path": "tagmanager/v2/{+path}",
                  "httpMethod": "GET",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                    }
                  },
                  "description": "Gets a Workspace.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.get",
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "Workspace"
                  }
                },
                "create_version": {
                  "description": "Creates a Container Version from the entities present in the workspace, deletes the workspace, and sets the base container version to the newly created version.",
                  "path": "tagmanager/v2/{+path}:create_version",
                  "request": {
                    "$ref": "CreateContainerVersionRequestVersionOptions"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.create_version",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:create_version",
                  "response": {
                    "$ref": "CreateContainerVersionResponse"
                  },
                  "parameters": {
                    "path": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "required": true,
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "path"
                  ]
                }
              }
            },
            "version_headers": {
              "methods": {
                "list": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListContainerVersionsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "tagmanager/v2/{+parent}/version_headers",
                  "id": "tagmanager.accounts.containers.version_headers.list",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Continuation token for fetching the next page of results."
                    },
                    "includeDeleted": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Also retrieve deleted (archived) versions when true."
                    }
                  },
                  "description": "Lists all Container Versions of a GTM Container.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ]
                },
                "latest": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "response": {
                    "$ref": "ContainerVersionHeader"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers:latest",
                  "id": "tagmanager.accounts.containers.version_headers.latest",
                  "path": "tagmanager/v2/{+parent}/version_headers:latest",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Gets the latest container version header",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            }
          }
        },
        "user_permissions": {
          "methods": {
            "get": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "httpMethod": "GET",
              "description": "Gets a user's Account & Container access.",
              "parameterOrder": [
                "path"
              ],
              "response": {
                "$ref": "UserPermission"
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "path": "tagmanager/v2/{+path}",
              "parameters": {
                "path": {
                  "type": "string",
                  "required": true,
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "location": "path"
                }
              },
              "id": "tagmanager.accounts.user_permissions.get"
            },
            "update": {
              "id": "tagmanager.accounts.user_permissions.update",
              "parameterOrder": [
                "path"
              ],
              "parameters": {
                "path": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$"
                }
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "httpMethod": "PUT",
              "path": "tagmanager/v2/{+path}",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "description": "Updates a user's Account & Container access.",
              "request": {
                "$ref": "UserPermission"
              },
              "response": {
                "$ref": "UserPermission"
              }
            },
            "create": {
              "id": "tagmanager.accounts.user_permissions.create",
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}",
                  "required": true,
                  "pattern": "^accounts/[^/]+$"
                }
              },
              "request": {
                "$ref": "UserPermission"
              },
              "description": "Creates a user's Account & Container access.",
              "response": {
                "$ref": "UserPermission"
              },
              "httpMethod": "POST",
              "path": "tagmanager/v2/{+parent}/user_permissions",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ]
            },
            "delete": {
              "description": "Removes a user from the account, revoking access to it and all of its containers.",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "httpMethod": "DELETE",
              "id": "tagmanager.accounts.user_permissions.delete",
              "parameterOrder": [
                "path"
              ],
              "parameters": {
                "path": {
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}"
                }
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "path": "tagmanager/v2/{+path}"
            },
            "list": {
              "id": "tagmanager.accounts.user_permissions.list",
              "parameters": {
                "parent": {
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^accounts/[^/]+$"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Continuation token for fetching the next page of results."
                }
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "path": "tagmanager/v2/{+parent}/user_permissions",
              "description": "List all users that have access to the account along with Account and Container user access granted to each of them.",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListUserPermissionsResponse"
              },
              "httpMethod": "GET"
            }
          }
        }
      }
    }
  },
  "servicePath": "",
  "baseUrl": "https://tagmanager.googleapis.com/",
  "canonicalName": "Tag Manager",
  "kind": "discovery#restDescription",
  "rootUrl": "https://tagmanager.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/tagmanager.manage.users": {
          "description": "Manage user permissions of your Google Tag Manager account and container"
        },
        "https://www.googleapis.com/auth/tagmanager.edit.containerversions": {
          "description": "Manage your Google Tag Manager container versions"
        },
        "https://www.googleapis.com/auth/tagmanager.readonly": {
          "description": "View your Google Tag Manager container and its subcomponents"
        },
        "https://www.googleapis.com/auth/tagmanager.edit.containers": {
          "description": "Manage your Google Tag Manager container and its subcomponents, excluding versioning and publishing"
        },
        "https://www.googleapis.com/auth/tagmanager.delete.containers": {
          "description": "Delete your Google Tag Manager containers"
        },
        "https://www.googleapis.com/auth/tagmanager.manage.accounts": {
          "description": "View and manage your Google Tag Manager accounts"
        },
        "https://www.googleapis.com/auth/tagmanager.publish": {
          "description": "Publish your Google Tag Manager container versions"
        }
      }
    }
  },
  "revision": "20230614",
  "documentationLink": "https://developers.google.com/tag-manager",
  "schemas": {
    "RevertVariableResponse": {
      "id": "RevertVariableResponse",
      "description": "The result of reverting a variable in a workspace.",
      "properties": {
        "variable": {
          "$ref": "Variable",
          "description": "Variable as it appears in the latest container version since the last workspace synchronization operation. If no variable is present, that means the variable was deleted in the latest container version."
        }
      },
      "type": "object"
    },
    "ListContainerVersionsResponse": {
      "description": "List container versions response.",
      "id": "ListContainerVersionsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "containerVersionHeader": {
          "type": "array",
          "description": "All container version headers of a GTM Container.",
          "items": {
            "$ref": "ContainerVersionHeader"
          }
        }
      }
    },
    "ListAccountsResponse": {
      "type": "object",
      "id": "ListAccountsResponse",
      "description": "List Accounts Response.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "account": {
          "type": "array",
          "description": "List of GTM Accounts that a user has access to.",
          "items": {
            "$ref": "Account"
          }
        }
      }
    },
    "Condition": {
      "type": "object",
      "properties": {
        "parameter": {
          "items": {
            "$ref": "Parameter"
          },
          "description": "A list of named parameters (key/value), depending on the condition's type. Notes: - For binary operators, include parameters named arg0 and arg1 for specifying the left and right operands, respectively. - At this time, the left operand (arg0) must be a reference to a variable. - For case-insensitive Regex matching, include a boolean parameter named ignore_case that is set to true. If not specified or set to any other value, the matching will be case sensitive. - To negate an operator, include a boolean parameter named negate boolean parameter that is set to true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "type": "array"
        },
        "type": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "type": "string",
          "enum": [
            "conditionTypeUnspecified",
            "equals",
            "contains",
            "startsWith",
            "endsWith",
            "matchRegex",
            "greater",
            "greaterOrEquals",
            "less",
            "lessOrEquals",
            "cssSelector",
            "urlMatches"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "NOTE(lanzone): When defining a ConditionType here, don't forget to also define a matching PredicateType (in condition.proto)."
          ],
          "description": "The type of operator for this condition. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        }
      },
      "description": "Represents a predicate.",
      "id": "Condition"
    },
    "ListContainersResponse": {
      "description": "List Containers Response.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "container": {
          "description": "All Containers of a GTM Account.",
          "type": "array",
          "items": {
            "$ref": "Container"
          }
        }
      },
      "type": "object",
      "id": "ListContainersResponse"
    },
    "SyncStatus": {
      "description": "The status of a workspace after synchronization.",
      "id": "SyncStatus",
      "type": "object",
      "properties": {
        "mergeConflict": {
          "description": "Synchornization operation detected a merge conflict.",
          "type": "boolean"
        },
        "syncError": {
          "type": "boolean",
          "description": "An error occurred during the synchronization operation."
        }
      }
    },
    "Parameter": {
      "properties": {
        "map": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "This map parameter's parameters (must have keys; keys must be unique). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "type": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update",
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update",
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "description": "The parameter type. Valid values are: - boolean: The value represents a boolean, represented as 'true' or 'false' - integer: The value represents a 64-bit signed integer value, in base 10 - list: A list of parameters should be specified - map: A map of parameters should be specified - template: The value represents any text; this can include variable references (even variable references that might return non-string types) - trigger_reference: The value represents a trigger, represented as the trigger id - tag_reference: The value represents a tag, represented as the tag name @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "enum": [
            "typeUnspecified",
            "template",
            "integer",
            "boolean",
            "list",
            "map",
            "triggerReference",
            "tagReference"
          ],
          "enumDescriptions": [
            "",
            "May include variable references (such as \"{{myVariable}}\").",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "A parameter's value (may contain variable references such as \"{{myVariable}}\") as appropriate to the specified type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "list": {
          "description": "This list parameter's parameters (keys will be ignored). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        },
        "key": {
          "type": "string",
          "description": "The named key that uniquely identifies a parameter. Required for top-level parameters, as well as map values. Ignored for list values. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        }
      },
      "id": "Parameter",
      "description": "Represents a Google Tag Manager Parameter.",
      "type": "object"
    },
    "Folder": {
      "type": "object",
      "properties": {
        "path": {
          "description": "GTM Folder's API relative path.",
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Folder as computed at storage time. This value is recomputed whenever the folder is modified."
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "folderId": {
          "type": "string",
          "description": "The Folder ID uniquely identifies the GTM Folder."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "name": {
          "description": "Folder display name. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.folders.create",
              "tagmanager.accounts.containers.workspaces.folders.update"
            ]
          },
          "type": "string"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this folder in the container. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        }
      },
      "description": "Represents a Google Tag Manager Folder.",
      "id": "Folder"
    },
    "Variable": {
      "id": "Variable",
      "description": "Represents a Google Tag Manager Variable.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "description": "Variable display name. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "string"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "notes": {
          "description": "User notes on how to apply this variable in the container. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "string"
        },
        "variableId": {
          "description": "The Variable ID uniquely identifies the GTM Variable.",
          "type": "string"
        },
        "path": {
          "description": "GTM Variable's API relative path.",
          "type": "string"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Variable as computed at storage time. This value is recomputed whenever the variable is modified.",
          "type": "string"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "parentFolderId": {
          "type": "string",
          "description": "Parent folder id."
        },
        "scheduleEndMs": {
          "type": "string",
          "description": "The end timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "format": "int64"
        },
        "scheduleStartMs": {
          "format": "int64",
          "type": "string",
          "description": "The start timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "disablingTriggerId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "For mobile containers only: A list of trigger IDs for disabling conditional variables; the variable is enabled if one of the enabling trigger is true while all the disabling trigger are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "enablingTriggerId": {
          "description": "For mobile containers only: A list of trigger IDs for enabling conditional variables; the variable is enabled if one of the enabling triggers is true while all the disabling triggers are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "description": "GTM Variable Type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "string"
        },
        "parameter": {
          "type": "array",
          "description": "The variable's parameters. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "items": {
            "$ref": "Parameter"
          }
        },
        "formatValue": {
          "$ref": "VariableFormatValue",
          "description": "Option to convert a variable value to other value."
        }
      }
    },
    "QuickPreviewResponse": {
      "properties": {
        "compilerError": {
          "type": "boolean",
          "description": "Were there compiler errors or not."
        },
        "syncStatus": {
          "description": "Whether quick previewing failed when syncing the workspace to the latest container version.",
          "$ref": "SyncStatus"
        },
        "containerVersion": {
          "$ref": "ContainerVersion",
          "description": "The quick previewed container version."
        }
      },
      "type": "object",
      "id": "QuickPreviewResponse",
      "description": "Response to quick previewing a workspace."
    },
    "ListClientsResponse": {
      "id": "ListClientsResponse",
      "properties": {
        "client": {
          "description": "All GTM Clients of a GTM Container.",
          "items": {
            "$ref": "Client"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListFoldersResponse": {
      "id": "ListFoldersResponse",
      "type": "object",
      "properties": {
        "folder": {
          "type": "array",
          "items": {
            "$ref": "Folder"
          },
          "description": "All GTM Folders of a GTM Container."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "description": "List Folders Response."
    },
    "CustomTemplate": {
      "type": "object",
      "properties": {
        "fingerprint": {
          "description": "The fingerprint of the GTM Custom Template as computed at storage time. This value is recomputed whenever the template is modified.",
          "type": "string"
        },
        "templateData": {
          "type": "string",
          "description": "The custom template in text format."
        },
        "path": {
          "description": "GTM Custom Template's API relative path.",
          "type": "string"
        },
        "templateId": {
          "type": "string",
          "description": "The Custom Template ID uniquely identifies the GTM custom template."
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "name": {
          "description": "Custom Template display name.",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "galleryReference": {
          "$ref": "GalleryReference",
          "description": "A reference to the Community Template Gallery entry."
        }
      },
      "description": "Represents a Google Tag Manager Custom Template's contents.",
      "id": "CustomTemplate"
    },
    "CreateBuiltInVariableResponse": {
      "properties": {
        "builtInVariable": {
          "description": "List of created built-in variables.",
          "items": {
            "$ref": "BuiltInVariable"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "CreateBuiltInVariableResponse"
    },
    "Trigger": {
      "description": "Represents a Google Tag Manager Trigger",
      "type": "object",
      "id": "Trigger",
      "properties": {
        "intervalSeconds": {
          "description": "Time between Timer Events to fire (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this trigger in the container. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "interval": {
          "description": "Time between triggering recurring Timer Events (in milliseconds). Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "autoEventFilter": {
          "type": "array",
          "description": "Used in the case of auto event tracking. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "items": {
            "$ref": "Condition"
          }
        },
        "continuousTimeMinMilliseconds": {
          "description": "A visibility trigger minimum continuous visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "maxTimerLengthSeconds": {
          "$ref": "Parameter",
          "description": "Max time to fire Timer Events (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "visiblePercentageMin": {
          "description": "A visibility trigger minimum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "eventName": {
          "description": "Name of the GTM event that is fired. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "filter": {
          "items": {
            "$ref": "Condition"
          },
          "type": "array",
          "description": "The trigger will only fire iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "totalTimeMinMilliseconds": {
          "description": "A visibility trigger minimum total visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "parentFolderId": {
          "type": "string",
          "description": "Parent folder id."
        },
        "waitForTags": {
          "description": "Whether or not we should delay the form submissions or link opening until all of the tags have fired (by preventing the default action and later simulating the default action). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "customEventFilter": {
          "description": "Used in the case of custom event, which is fired iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "items": {
            "$ref": "Condition"
          },
          "type": "array"
        },
        "parameter": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "Additional parameters. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "horizontalScrollPercentageList": {
          "$ref": "Parameter",
          "description": "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled horizontally. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "uniqueTriggerId": {
          "description": "Globally unique id of the trigger that auto-generates this (a Form Submit, Link Click or Timer listener) if any. Used to make incompatible auto-events work together with trigger filtering based on trigger ids. This value is populated during output generation since the tags implied by triggers don't exist until then. Only valid for Form Submit, Link Click and Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "visiblePercentageMax": {
          "description": "A visibility trigger maximum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "type": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "eventTypeUnspecified",
            "pageview",
            "domReady",
            "windowLoaded",
            "customEvent",
            "triggerGroup",
            "init",
            "consentInit",
            "serverPageview",
            "always",
            "firebaseAppException",
            "firebaseAppUpdate",
            "firebaseCampaign",
            "firebaseFirstOpen",
            "firebaseInAppPurchase",
            "firebaseNotificationDismiss",
            "firebaseNotificationForeground",
            "firebaseNotificationOpen",
            "firebaseNotificationReceive",
            "firebaseOsUpdate",
            "firebaseSessionStart",
            "firebaseUserEngagement",
            "formSubmission",
            "click",
            "linkClick",
            "jsError",
            "historyChange",
            "timer",
            "ampClick",
            "ampTimer",
            "ampScroll",
            "ampVisibility",
            "youTubeVideo",
            "scrollDepth",
            "elementVisibility"
          ],
          "description": "Defines the data layer event that causes this trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create"
            ]
          }
        },
        "verticalScrollPercentageList": {
          "description": "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled vertically. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "waitForTagsTimeout": {
          "$ref": "Parameter",
          "description": "How long to wait (in milliseconds) for tags to fire when 'waits_for_tags' above evaluates to true. Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "path": {
          "type": "string",
          "description": "GTM Trigger's API relative path."
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "visibilitySelector": {
          "$ref": "Parameter",
          "description": "A visibility trigger CSS selector (i.e. \"#id\"). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "limit": {
          "$ref": "Parameter",
          "description": "Limit of the number of GTM events this Timer Trigger will fire. If no limit is set, we will continue to fire GTM events until the user leaves the page. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Trigger as computed at storage time. This value is recomputed whenever the trigger is modified."
        },
        "name": {
          "type": "string",
          "description": "Trigger display name. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          }
        },
        "checkValidation": {
          "description": "Whether or not we should only fire tags if the form submit or link click event is not cancelled by some other event handler (e.g. because of validation). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "selector": {
          "$ref": "Parameter",
          "description": "A click trigger CSS selector (i.e. \"a\", \"button\" etc.). Only valid for AMP Click trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "triggerId": {
          "description": "The Trigger ID uniquely identifies the GTM Trigger.",
          "type": "string"
        }
      }
    },
    "GetContainerSnippetResponse": {
      "properties": {
        "snippet": {
          "type": "string",
          "description": "Tagging snippet for a Container."
        }
      },
      "id": "GetContainerSnippetResponse",
      "type": "object"
    },
    "CreateContainerVersionResponse": {
      "properties": {
        "compilerError": {
          "type": "boolean",
          "description": "Compiler errors or not."
        },
        "syncStatus": {
          "description": "Whether version creation failed when syncing the workspace to the latest container version.",
          "$ref": "SyncStatus"
        },
        "newWorkspacePath": {
          "type": "string",
          "description": "Auto generated workspace path created as a result of version creation. This field should only be populated if the created version was not a quick preview."
        },
        "containerVersion": {
          "description": "The container version created.",
          "$ref": "ContainerVersion"
        }
      },
      "description": "Create container versions response.",
      "type": "object",
      "id": "CreateContainerVersionResponse"
    },
    "GalleryReference": {
      "id": "GalleryReference",
      "description": "Represents the link between a custom template and an entry on the Community Template Gallery site.",
      "properties": {
        "repository": {
          "description": "The name of the repository for the community gallery template.",
          "type": "string"
        },
        "owner": {
          "type": "string",
          "description": "The name of the owner for the community gallery template."
        },
        "isModified": {
          "description": "If a user has manually edited the community gallery template.",
          "type": "boolean"
        },
        "signature": {
          "description": "The signature of the community gallery template as computed at import time. This value is recomputed whenever the template is updated from the gallery.",
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "The version of the community gallery template."
        },
        "host": {
          "description": "The name of the host for the community gallery template.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Zone": {
      "properties": {
        "boundary": {
          "$ref": "ZoneBoundary",
          "description": "This Zone's boundary."
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "name": {
          "description": "Zone display name.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "path": {
          "description": "GTM Zone's API relative path.",
          "type": "string"
        },
        "childContainer": {
          "description": "Containers that are children of this Zone.",
          "type": "array",
          "items": {
            "$ref": "ZoneChildContainer"
          }
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Zone as computed at storage time. This value is recomputed whenever the zone is modified."
        },
        "typeRestriction": {
          "description": "This Zone's type restrictions.",
          "$ref": "ZoneTypeRestriction"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "zoneId": {
          "type": "string",
          "description": "The Zone ID uniquely identifies the GTM Zone."
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this zone in the container."
        }
      },
      "description": "Represents a Google Tag Manager Zone's contents.",
      "id": "Zone",
      "type": "object"
    },
    "ContainerAccess": {
      "id": "ContainerAccess",
      "description": "Defines the Google Tag Manager Container access permissions.",
      "properties": {
        "containerId": {
          "description": "GTM Container ID. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "type": "string"
        },
        "permission": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "List of Container permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "type": "string",
          "enum": [
            "containerPermissionUnspecified",
            "noAccess",
            "read",
            "edit",
            "approve",
            "publish"
          ]
        }
      },
      "type": "object"
    },
    "AccountAccess": {
      "type": "object",
      "description": "Defines the Google Tag Manager Account access permissions.",
      "properties": {
        "permission": {
          "enum": [
            "accountPermissionUnspecified",
            "noAccess",
            "user",
            "admin"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "Whether the user has no access, user access, or admin access to an account. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "type": "string"
        }
      },
      "id": "AccountAccess"
    },
    "RevertTriggerResponse": {
      "type": "object",
      "description": "The result of reverting a trigger in a workspace.",
      "properties": {
        "trigger": {
          "description": "Trigger as it appears in the latest container version since the last workspace synchronization operation. If no trigger is present, that means the trigger was deleted in the latest container version.",
          "$ref": "Trigger"
        }
      },
      "id": "RevertTriggerResponse"
    },
    "Account": {
      "properties": {
        "features": {
          "$ref": "AccountFeatures",
          "description": "Read-only Account feature set"
        },
        "accountId": {
          "type": "string",
          "description": "The Account ID uniquely identifies the GTM Account."
        },
        "name": {
          "type": "string",
          "description": "Account display name. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Account as computed at storage time. This value is recomputed whenever the account is modified."
        },
        "shareData": {
          "description": "Whether the account shares data anonymously with Google and others. This flag enables benchmarking by sharing your data in an anonymous form. Google will remove all identifiable information about your website, combine the data with hundreds of other anonymous sites and report aggregate trends in the benchmarking service. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update",
          "type": "boolean"
        },
        "path": {
          "type": "string",
          "description": "GTM Account's API relative path."
        }
      },
      "type": "object",
      "description": "Represents a Google Tag Manager Account.",
      "id": "Account"
    },
    "Workspace": {
      "properties": {
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "path": {
          "description": "GTM Workspace's API relative path.",
          "type": "string"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "description": {
          "type": "string",
          "description": "Workspace description. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update"
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.create",
              "tagmanager.accounts.containers.workspaces.update"
            ]
          },
          "type": "string",
          "description": "Workspace display name. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update"
        },
        "workspaceId": {
          "type": "string",
          "description": "The Workspace ID uniquely identifies the GTM Workspace."
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Workspace as computed at storage time. This value is recomputed whenever the workspace is modified.",
          "type": "string"
        }
      },
      "description": "Represents a Google Tag Manager Container Workspace.",
      "type": "object",
      "id": "Workspace"
    },
    "RevertTransformationResponse": {
      "properties": {
        "transformation": {
          "description": "Transformation as it appears in the latest container version since the last workspace synchronization operation. If no transformation is present, that means the transformation was deleted in the latest container version.",
          "$ref": "Transformation"
        }
      },
      "description": "The result of reverting a transformation in a workspace.",
      "type": "object",
      "id": "RevertTransformationResponse"
    },
    "CreateContainerVersionRequestVersionOptions": {
      "description": "Options for new container versions.",
      "id": "CreateContainerVersionRequestVersionOptions",
      "properties": {
        "notes": {
          "description": "The notes of the container version to be created.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the container version to be created."
        }
      },
      "type": "object"
    },
    "ListEnabledBuiltInVariablesResponse": {
      "id": "ListEnabledBuiltInVariablesResponse",
      "description": "A list of enabled built-in variables.",
      "properties": {
        "builtInVariable": {
          "type": "array",
          "description": "All GTM BuiltInVariables of a GTM container.",
          "items": {
            "$ref": "BuiltInVariable"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "type": "object"
    },
    "FolderEntities": {
      "id": "FolderEntities",
      "type": "object",
      "properties": {
        "tag": {
          "type": "array",
          "description": "The list of tags inside the folder.",
          "items": {
            "$ref": "Tag"
          }
        },
        "variable": {
          "type": "array",
          "description": "The list of variables inside the folder.",
          "items": {
            "$ref": "Variable"
          }
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "trigger": {
          "items": {
            "$ref": "Trigger"
          },
          "description": "The list of triggers inside the folder.",
          "type": "array"
        }
      },
      "description": "Represents a Google Tag Manager Folder's contents."
    },
    "ContainerFeatures": {
      "type": "object",
      "id": "ContainerFeatures",
      "properties": {
        "supportTemplates": {
          "description": "Whether this Container supports templates.",
          "type": "boolean"
        },
        "supportTags": {
          "description": "Whether this Container supports tags.",
          "type": "boolean"
        },
        "supportTransformations": {
          "description": "Whether this Container supports transformations.",
          "type": "boolean"
        },
        "supportWorkspaces": {
          "description": "Whether this Container supports workspaces.",
          "type": "boolean"
        },
        "supportBuiltInVariables": {
          "description": "Whether this Container supports built-in variables",
          "type": "boolean"
        },
        "supportUserPermissions": {
          "description": "Whether this Container supports user permissions managed by GTM.",
          "type": "boolean"
        },
        "supportVersions": {
          "type": "boolean",
          "description": "Whether this Container supports Container versions."
        },
        "supportTriggers": {
          "type": "boolean",
          "description": "Whether this Container supports triggers."
        },
        "supportGtagConfigs": {
          "description": "Whether this Container supports Google tag config.",
          "type": "boolean"
        },
        "supportClients": {
          "type": "boolean",
          "description": "Whether this Container supports clients."
        },
        "supportZones": {
          "type": "boolean",
          "description": "Whether this Container supports zones."
        },
        "supportVariables": {
          "description": "Whether this Container supports variables.",
          "type": "boolean"
        },
        "supportEnvironments": {
          "type": "boolean",
          "description": "Whether this Container supports environments."
        },
        "supportFolders": {
          "description": "Whether this Container supports folders.",
          "type": "boolean"
        }
      }
    },
    "ZoneTypeRestriction": {
      "type": "object",
      "properties": {
        "enable": {
          "description": "True if type restrictions have been enabled for this Zone.",
          "type": "boolean"
        },
        "whitelistedTypeId": {
          "description": "List of type public ids that have been whitelisted for use in this Zone.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "ZoneTypeRestriction",
      "description": "Represents a Zone's type restrictions."
    },
    "VariableFormatValue": {
      "id": "VariableFormatValue",
      "type": "object",
      "properties": {
        "caseConversionType": {
          "type": "string",
          "enum": [
            "none",
            "lowercase",
            "uppercase"
          ],
          "description": "The option to convert a string-type variable value to either lowercase or uppercase.",
          "enumDescriptions": [
            "",
            "The option to convert a variable value to lowercase.",
            "The option to convert a variable value to uppercase."
          ]
        },
        "convertFalseToValue": {
          "description": "The value to convert if a variable value is false.",
          "$ref": "Parameter"
        },
        "convertNullToValue": {
          "$ref": "Parameter",
          "description": "The value to convert if a variable value is null."
        },
        "convertTrueToValue": {
          "description": "The value to convert if a variable value is true.",
          "$ref": "Parameter"
        },
        "convertUndefinedToValue": {
          "description": "The value to convert if a variable value is undefined.",
          "$ref": "Parameter"
        }
      }
    },
    "ListTagsResponse": {
      "description": "List Tags Response.",
      "id": "ListTagsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "tag": {
          "type": "array",
          "description": "All GTM Tags of a GTM Container.",
          "items": {
            "$ref": "Tag"
          }
        }
      },
      "type": "object"
    },
    "ListEnvironmentsResponse": {
      "type": "object",
      "id": "ListEnvironmentsResponse",
      "description": "List Environments Response.",
      "properties": {
        "environment": {
          "type": "array",
          "description": "All Environments of a GTM Container.",
          "items": {
            "$ref": "Environment"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      }
    },
    "ListDestinationsResponse": {
      "type": "object",
      "properties": {
        "destination": {
          "type": "array",
          "items": {
            "$ref": "Destination"
          },
          "description": "All Destinations linked to a GTM Container."
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "id": "ListDestinationsResponse"
    },
    "GtagConfig": {
      "type": "object",
      "id": "GtagConfig",
      "properties": {
        "gtagConfigId": {
          "description": "The ID uniquely identifies the Google tag config.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Google tag config type. @required tagmanager.accounts.containers.workspaces.gtag_config.create @required tagmanager.accounts.containers.workspaces.gtag_config.update @mutable tagmanager.accounts.containers.workspaces.gtag_config.create @mutable tagmanager.accounts.containers.workspaces.gtag_config.update"
        },
        "workspaceId": {
          "type": "string",
          "description": "Google tag workspace ID. Only used by GTM containers. Set to 0 otherwise."
        },
        "accountId": {
          "description": "Google tag account ID.",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "Google tag container ID."
        },
        "parameter": {
          "description": "The Google tag config's parameters. @mutable tagmanager.accounts.containers.workspaces.gtag_config.create @mutable tagmanager.accounts.containers.workspaces.gtag_config.update",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        },
        "path": {
          "type": "string",
          "description": "Google tag config's API relative path."
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the Google tag config as computed at storage time. This value is recomputed whenever the config is modified."
        }
      },
      "description": "Represents a Google tag configuration."
    },
    "SyncWorkspaceResponse": {
      "type": "object",
      "description": "A response after synchronizing the workspace to the latest container version.",
      "id": "SyncWorkspaceResponse",
      "properties": {
        "mergeConflict": {
          "description": "The merge conflict after sync. If this field is not empty, the sync is still treated as successful. But a version cannot be created until all conflicts are resolved.",
          "type": "array",
          "items": {
            "$ref": "MergeConflict"
          }
        },
        "syncStatus": {
          "description": "Indicates whether synchronization caused a merge conflict or sync error.",
          "$ref": "SyncStatus"
        }
      }
    },
    "ListTemplatesResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "template": {
          "type": "array",
          "items": {
            "$ref": "CustomTemplate"
          },
          "description": "All GTM Custom Templates of a GTM Container."
        }
      },
      "id": "ListTemplatesResponse"
    },
    "ListZonesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "zone": {
          "items": {
            "$ref": "Zone"
          },
          "type": "array",
          "description": "All GTM Zones of a GTM Container."
        }
      },
      "type": "object",
      "id": "ListZonesResponse"
    },
    "SetupTag": {
      "id": "SetupTag",
      "description": "Represents a reference to atag that fires before another tag in order to set up dependencies.",
      "type": "object",
      "properties": {
        "stopOnSetupFailure": {
          "type": "boolean",
          "description": "If true, fire the main tag if and only if the setup tag fires successfully. If false, fire the main tag regardless of setup tag firing status."
        },
        "tagName": {
          "type": "string",
          "description": "The name of the setup tag."
        }
      }
    },
    "PublishContainerVersionResponse": {
      "description": "Publish container version response.",
      "type": "object",
      "id": "PublishContainerVersionResponse",
      "properties": {
        "compilerError": {
          "type": "boolean",
          "description": "Compiler errors or not."
        },
        "containerVersion": {
          "$ref": "ContainerVersion",
          "description": "The container version created."
        }
      }
    },
    "ZoneChildContainer": {
      "properties": {
        "nickname": {
          "type": "string",
          "description": "The zone's nickname for the child container."
        },
        "publicId": {
          "type": "string",
          "description": "The child container's public id."
        }
      },
      "type": "object",
      "description": "Represents a child container of a Zone.",
      "id": "ZoneChildContainer"
    },
    "ListGtagConfigResponse": {
      "id": "ListGtagConfigResponse",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "gtagConfig": {
          "description": "All Google tag configs in a Container.",
          "items": {
            "$ref": "GtagConfig"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RevertTagResponse": {
      "description": "The result of reverting a tag in a workspace.",
      "type": "object",
      "properties": {
        "tag": {
          "$ref": "Tag",
          "description": "Tag as it appears in the latest container version since the last workspace synchronization operation. If no tag is present, that means the tag was deleted in the latest container version."
        }
      },
      "id": "RevertTagResponse"
    },
    "GetWorkspaceStatusResponse": {
      "description": "The changes that have occurred in the workspace since the base container version.",
      "properties": {
        "workspaceChange": {
          "description": "Entities that have been changed in the workspace.",
          "items": {
            "$ref": "Entity"
          },
          "type": "array"
        },
        "mergeConflict": {
          "type": "array",
          "description": "The merge conflict after sync.",
          "items": {
            "$ref": "MergeConflict"
          }
        }
      },
      "type": "object",
      "id": "GetWorkspaceStatusResponse"
    },
    "UserPermission": {
      "description": "Represents a user's permissions to an account and its container.",
      "properties": {
        "containerAccess": {
          "items": {
            "$ref": "ContainerAccess"
          },
          "description": "GTM Container access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "type": "array"
        },
        "emailAddress": {
          "description": "User's email address. @mutable tagmanager.accounts.permissions.create",
          "type": "string"
        },
        "accountAccess": {
          "$ref": "AccountAccess",
          "description": "GTM Account access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update"
        },
        "path": {
          "description": "GTM UserPermission's API relative path.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "The Account ID uniquely identifies the GTM Account."
        }
      },
      "id": "UserPermission",
      "type": "object"
    },
    "Container": {
      "type": "object",
      "id": "Container",
      "description": "Represents a Google Tag Manager Container, which specifies the platform tags will run on, manages workspaces, and retains container versions.",
      "properties": {
        "features": {
          "description": "Read-only Container feature set.",
          "$ref": "ContainerFeatures"
        },
        "usageContext": {
          "type": "array",
          "items": {
            "enum": [
              "usageContextUnspecified",
              "web",
              "android",
              "ios",
              "androidSdk5",
              "iosSdk5",
              "amp",
              "server"
            ],
            "type": "string",
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ]
          },
          "description": "List of Usage Contexts for the Container. Valid values include: web, android, or ios. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.create",
              "tagmanager.accounts.containers.update"
            ]
          }
        },
        "tagIds": {
          "items": {
            "type": "string"
          },
          "description": "All Tag IDs that refer to this Container.",
          "type": "array"
        },
        "path": {
          "description": "GTM Container's API relative path.",
          "type": "string"
        },
        "domainName": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of domain names associated with the Container. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update"
        },
        "taggingServerUrls": {
          "description": "List of server-side container URLs for the Container. If multiple URLs are provided, all URL paths must match. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "notes": {
          "description": "Container Notes. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "type": "string"
        },
        "name": {
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.create",
              "tagmanager.accounts.containers.update"
            ]
          },
          "description": "Container display name. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified."
        },
        "publicId": {
          "description": "Container Public ID.",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "The Container ID uniquely identifies the GTM Container."
        }
      }
    },
    "ListTransformationsResponse": {
      "type": "object",
      "id": "ListTransformationsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "transformation": {
          "description": "All GTM Transformations of a GTM Container.",
          "type": "array",
          "items": {
            "$ref": "Transformation"
          }
        }
      }
    },
    "ListWorkspacesResponse": {
      "id": "ListWorkspacesResponse",
      "properties": {
        "workspace": {
          "items": {
            "$ref": "Workspace"
          },
          "type": "array",
          "description": "All Workspaces of a GTM Container."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "type": "object",
      "description": "A list of workspaces in a container."
    },
    "TagConsentSetting": {
      "type": "object",
      "id": "TagConsentSetting",
      "properties": {
        "consentStatus": {
          "enumDescriptions": [
            "Default value where user has not specified any setting on it.",
            "Tag doesn't require any additional consent settings.",
            "Tag requires additional consent settings."
          ],
          "description": "The tag's consent status. If set to NEEDED, the runtime will check that the consent types specified by the consent_type field have been granted.",
          "enum": [
            "notSet",
            "notNeeded",
            "needed"
          ],
          "type": "string"
        },
        "consentType": {
          "$ref": "Parameter",
          "description": "The type of consents to check for during tag firing if in the consent NEEDED state. This parameter must be of type LIST where each list item is of type STRING."
        }
      }
    },
    "RevertClientResponse": {
      "properties": {
        "client": {
          "$ref": "Client",
          "description": "Client as it appears in the latest container version since the last workspace synchronization operation. If no client is present, that means the client was deleted in the latest container version."
        }
      },
      "description": "The result of reverting a client in a workspace.",
      "type": "object",
      "id": "RevertClientResponse"
    },
    "ListTriggersResponse": {
      "type": "object",
      "id": "ListTriggersResponse",
      "description": "List triggers response.",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "trigger": {
          "items": {
            "$ref": "Trigger"
          },
          "type": "array",
          "description": "All GTM Triggers of a GTM Container."
        }
      }
    },
    "AccountFeatures": {
      "type": "object",
      "id": "AccountFeatures",
      "properties": {
        "supportUserPermissions": {
          "type": "boolean",
          "description": "Whether this Account supports user permissions managed by GTM."
        },
        "supportMultipleContainers": {
          "description": "Whether this Account supports multiple Containers.",
          "type": "boolean"
        }
      }
    },
    "RevertTemplateResponse": {
      "id": "RevertTemplateResponse",
      "properties": {
        "template": {
          "$ref": "CustomTemplate",
          "description": "Template as it appears in the latest container version since the last workspace synchronization operation. If no template is present, that means the template was deleted in the latest container version."
        }
      },
      "description": "The result of reverting a template in a workspace.",
      "type": "object"
    },
    "MergeConflict": {
      "properties": {
        "entityInBaseVersion": {
          "description": "The base version entity (since the latest sync operation) that has conflicting changes compared to the workspace. If this field is missing, it means the workspace entity is deleted from the base version.",
          "$ref": "Entity"
        },
        "entityInWorkspace": {
          "$ref": "Entity",
          "description": "The workspace entity that has conflicting changes compared to the base version. If an entity is deleted in a workspace, it will still appear with a deleted change status."
        }
      },
      "id": "MergeConflict",
      "description": "Represents a merge conflict.",
      "type": "object"
    },
    "ListVariablesResponse": {
      "id": "ListVariablesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "variable": {
          "description": "All GTM Variables of a GTM Container.",
          "type": "array",
          "items": {
            "$ref": "Variable"
          }
        }
      },
      "description": "List Variables Response."
    },
    "ContainerVersion": {
      "id": "ContainerVersion",
      "type": "object",
      "properties": {
        "container": {
          "description": "The container that this version was taken from.",
          "$ref": "Container"
        },
        "name": {
          "description": "Container version display name. @mutable tagmanager.accounts.containers.versions.update",
          "type": "string"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified.",
          "type": "string"
        },
        "trigger": {
          "description": "The triggers in the container that this version was taken from.",
          "items": {
            "$ref": "Trigger"
          },
          "type": "array"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "customTemplate": {
          "items": {
            "$ref": "CustomTemplate"
          },
          "type": "array",
          "description": "The custom templates in the container that this version was taken from."
        },
        "folder": {
          "items": {
            "$ref": "Folder"
          },
          "type": "array",
          "description": "The folders in the container that this version was taken from."
        },
        "builtInVariable": {
          "items": {
            "$ref": "BuiltInVariable"
          },
          "type": "array",
          "description": "The built-in variables in the container that this version was taken from."
        },
        "description": {
          "type": "string",
          "description": "Container version description. @mutable tagmanager.accounts.containers.versions.update"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "GTM Container Version's API relative path."
        },
        "zone": {
          "description": "The zones in the container that this version was taken from.",
          "items": {
            "$ref": "Zone"
          },
          "type": "array"
        },
        "deleted": {
          "description": "A value of true indicates this container version has been deleted.",
          "type": "boolean"
        },
        "gtagConfig": {
          "description": "The Google tag configs in the container that this version was taken from.",
          "items": {
            "$ref": "GtagConfig"
          },
          "type": "array"
        },
        "transformation": {
          "type": "array",
          "items": {
            "$ref": "Transformation"
          },
          "description": "The transformations in the container that this version was taken from."
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "containerVersionId": {
          "description": "The Container Version ID uniquely identifies the GTM Container Version.",
          "type": "string"
        },
        "tag": {
          "items": {
            "$ref": "Tag"
          },
          "description": "The tags in the container that this version was taken from.",
          "type": "array"
        },
        "variable": {
          "type": "array",
          "items": {
            "$ref": "Variable"
          },
          "description": "The variables in the container that this version was taken from."
        },
        "client": {
          "description": "The clients in the container that this version was taken from.",
          "type": "array",
          "items": {
            "$ref": "Client"
          }
        }
      },
      "description": "Represents a Google Tag Manager Container Version."
    },
    "Transformation": {
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Transformation as computed at storage time. This value is recomputed whenever the transformation is modified.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Transformation type. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.transformations.create",
              "tagmanager.accounts.containers.workspaces.transformations.update"
            ]
          }
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.transformations.create",
              "tagmanager.accounts.containers.workspaces.transformations.update"
            ]
          },
          "description": "Transformation display name. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update",
          "type": "string"
        },
        "parameter": {
          "description": "The transformation's parameters. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this transformation in the container. @mutable tagmanager.accounts.containers.workspaces.transformations.create @mutable tagmanager.accounts.containers.workspaces.transformations.update"
        },
        "path": {
          "description": "GTM transformation's API relative path.",
          "type": "string"
        },
        "transformationId": {
          "type": "string",
          "description": "The Transformation ID uniquely identifies the GTM transformation."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "parentFolderId": {
          "type": "string",
          "description": "Parent folder id."
        }
      },
      "description": "Represents a Google Tag Manager Transformation.",
      "id": "Transformation",
      "type": "object"
    },
    "BuiltInVariable": {
      "type": "object",
      "description": "Built-in variables are a special category of variables that are pre-created and non-customizable. They provide common functionality like accessing properties of the gtm data layer, monitoring clicks, or accessing elements of a page URL.",
      "id": "BuiltInVariable",
      "properties": {
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "type": {
          "enum": [
            "builtInVariableTypeUnspecified",
            "pageUrl",
            "pageHostname",
            "pagePath",
            "referrer",
            "event",
            "clickElement",
            "clickClasses",
            "clickId",
            "clickTarget",
            "clickUrl",
            "clickText",
            "firstPartyServingUrl",
            "formElement",
            "formClasses",
            "formId",
            "formTarget",
            "formUrl",
            "formText",
            "errorMessage",
            "errorUrl",
            "errorLine",
            "newHistoryUrl",
            "oldHistoryUrl",
            "newHistoryFragment",
            "oldHistoryFragment",
            "newHistoryState",
            "oldHistoryState",
            "historySource",
            "containerVersion",
            "debugMode",
            "randomNumber",
            "containerId",
            "appId",
            "appName",
            "appVersionCode",
            "appVersionName",
            "language",
            "osVersion",
            "platform",
            "sdkVersion",
            "deviceName",
            "resolution",
            "advertiserId",
            "advertisingTrackingEnabled",
            "htmlId",
            "environmentName",
            "ampBrowserLanguage",
            "ampCanonicalPath",
            "ampCanonicalUrl",
            "ampCanonicalHost",
            "ampReferrer",
            "ampTitle",
            "ampClientId",
            "ampClientTimezone",
            "ampClientTimestamp",
            "ampClientScreenWidth",
            "ampClientScreenHeight",
            "ampClientScrollX",
            "ampClientScrollY",
            "ampClientMaxScrollX",
            "ampClientMaxScrollY",
            "ampTotalEngagedTime",
            "ampPageViewId",
            "ampPageLoadTime",
            "ampPageDownloadTime",
            "ampGtmEvent",
            "eventName",
            "firebaseEventParameterCampaign",
            "firebaseEventParameterCampaignAclid",
            "firebaseEventParameterCampaignAnid",
            "firebaseEventParameterCampaignClickTimestamp",
            "firebaseEventParameterCampaignContent",
            "firebaseEventParameterCampaignCp1",
            "firebaseEventParameterCampaignGclid",
            "firebaseEventParameterCampaignSource",
            "firebaseEventParameterCampaignTerm",
            "firebaseEventParameterCurrency",
            "firebaseEventParameterDynamicLinkAcceptTime",
            "firebaseEventParameterDynamicLinkLinkid",
            "firebaseEventParameterNotificationMessageDeviceTime",
            "firebaseEventParameterNotificationMessageId",
            "firebaseEventParameterNotificationMessageName",
            "firebaseEventParameterNotificationMessageTime",
            "firebaseEventParameterNotificationTopic",
            "firebaseEventParameterPreviousAppVersion",
            "firebaseEventParameterPreviousOsVersion",
            "firebaseEventParameterPrice",
            "firebaseEventParameterProductId",
            "firebaseEventParameterQuantity",
            "firebaseEventParameterValue",
            "videoProvider",
            "videoUrl",
            "videoTitle",
            "videoDuration",
            "videoPercent",
            "videoVisible",
            "videoStatus",
            "videoCurrentTime",
            "scrollDepthThreshold",
            "scrollDepthUnits",
            "scrollDepthDirection",
            "elementVisibilityRatio",
            "elementVisibilityTime",
            "elementVisibilityFirstTime",
            "elementVisibilityRecentTime",
            "requestPath",
            "requestMethod",
            "clientName",
            "queryString",
            "serverPageLocationUrl",
            "serverPageLocationPath",
            "serverPageLocationHostname",
            "visitorRegion"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "For web or mobile.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "For web or mobile.",
            "",
            "For web or mobile.",
            "For web or mobile.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "Type of built-in variable. @required.tagmanager.accounts.containers.workspaces.built_in_variable.update @mutable tagmanager.accounts.containers.workspaces.built_in_variable.update"
        },
        "name": {
          "description": "Name of the built-in variable to be used to refer to the built-in variable.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "path": {
          "description": "GTM BuiltInVariable's API relative path.",
          "type": "string"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        }
      }
    },
    "RevertBuiltInVariableResponse": {
      "id": "RevertBuiltInVariableResponse",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the built-in variable is enabled after reversion."
        }
      },
      "description": "The result of reverting a built-in variable in a workspace.",
      "type": "object"
    },
    "RevertFolderResponse": {
      "properties": {
        "folder": {
          "description": "Folder as it appears in the latest container version since the last workspace synchronization operation. If no folder is present, that means the folder was deleted in the latest container version.",
          "$ref": "Folder"
        }
      },
      "type": "object",
      "description": "The result of reverting folder changes in a workspace.",
      "id": "RevertFolderResponse"
    },
    "ContainerVersionHeader": {
      "type": "object",
      "properties": {
        "numGtagConfigs": {
          "type": "string",
          "description": "Number of Google tag configs in the container version."
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "numRules": {
          "description": "Number of rules in the container version.",
          "type": "string"
        },
        "numClients": {
          "description": "Number of clients in the container version.",
          "type": "string"
        },
        "numTransformations": {
          "type": "string",
          "description": "Number of transformations in the container version."
        },
        "name": {
          "type": "string",
          "description": "Container version display name."
        },
        "numMacros": {
          "type": "string",
          "description": "Number of macros in the container version."
        },
        "deleted": {
          "description": "A value of true indicates this container version has been deleted.",
          "type": "boolean"
        },
        "numCustomTemplates": {
          "type": "string",
          "description": "Number of custom templates in the container version."
        },
        "path": {
          "description": "GTM Container Version's API relative path.",
          "type": "string"
        },
        "numTags": {
          "description": "Number of tags in the container version.",
          "type": "string"
        },
        "numTriggers": {
          "description": "Number of triggers in the container version.",
          "type": "string"
        },
        "numZones": {
          "type": "string",
          "description": "Number of zones in the container version."
        },
        "containerVersionId": {
          "type": "string",
          "description": "The Container Version ID uniquely identifies the GTM Container Version."
        },
        "numVariables": {
          "type": "string",
          "description": "Number of variables in the container version."
        }
      },
      "id": "ContainerVersionHeader",
      "description": "Represents a Google Tag Manager Container Version Header."
    },
    "Client": {
      "properties": {
        "fingerprint": {
          "description": "The fingerprint of the GTM Client as computed at storage time. This value is recomputed whenever the client is modified.",
          "type": "string"
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.clients.create",
              "tagmanager.accounts.containers.workspaces.clients.update"
            ]
          },
          "type": "string",
          "description": "Client display name. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"
        },
        "path": {
          "type": "string",
          "description": "GTM client's API relative path."
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "description": "Priority determines relative firing order. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update",
          "format": "int32"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "type": {
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.clients.create",
              "tagmanager.accounts.containers.workspaces.clients.update"
            ]
          },
          "description": "Client type. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"
        },
        "parentFolderId": {
          "type": "string",
          "description": "Parent folder id."
        },
        "parameter": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "The client's parameters. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"
        },
        "clientId": {
          "description": "The Client ID uniquely identifies the GTM client.",
          "type": "string"
        },
        "notes": {
          "description": "User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string"
        }
      },
      "id": "Client",
      "type": "object"
    },
    "ListUserPermissionsResponse": {
      "id": "ListUserPermissionsResponse",
      "description": "List user permissions response.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "userPermission": {
          "description": "All GTM UserPermissions of a GTM Account.",
          "type": "array",
          "items": {
            "$ref": "UserPermission"
          }
        }
      }
    },
    "Destination": {
      "id": "Destination",
      "type": "object",
      "properties": {
        "destinationLinkId": {
          "type": "string",
          "description": "The Destination link ID uniquely identifies the Destination."
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the Google Tag Destination as computed at storage time. This value is recomputed whenever the destination is modified."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "name": {
          "description": "Destination display name.",
          "type": "string"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI."
        },
        "path": {
          "description": "Destination's API relative path.",
          "type": "string"
        },
        "destinationId": {
          "description": "Destination ID.",
          "type": "string"
        }
      },
      "description": "Represents a Google Tag Destination."
    },
    "Tag": {
      "properties": {
        "fingerprint": {
          "description": "The fingerprint of the GTM Tag as computed at storage time. This value is recomputed whenever the tag is modified.",
          "type": "string"
        },
        "setupTag": {
          "items": {
            "$ref": "SetupTag"
          },
          "type": "array",
          "description": "The list of setup tags. Currently we only allow one."
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "GTM Tag's API relative path."
        },
        "monitoringMetadata": {
          "$ref": "Parameter",
          "description": "A map of key-value pairs of tag metadata to be included in the event data for tag monitoring. Notes: - This parameter must be type MAP. - Each parameter in the map are type TEMPLATE, however cannot contain variable references. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "scheduleEndMs": {
          "description": "The end timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "format": "int64",
          "type": "string"
        },
        "tagId": {
          "description": "The Tag ID uniquely identifies the GTM Tag.",
          "type": "string"
        },
        "tagFiringOption": {
          "description": "Option to fire this tag.",
          "type": "string",
          "enumDescriptions": [
            "",
            "Tag can be fired multiple times per event.",
            "Tag can only be fired per event but can be fired multiple times per load (e.g., app load or page load).",
            "Tag can only be fired per load (e.g., app load or page load)."
          ],
          "enum": [
            "tagFiringOptionUnspecified",
            "unlimited",
            "oncePerEvent",
            "oncePerLoad"
          ]
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "teardownTag": {
          "items": {
            "$ref": "TeardownTag"
          },
          "description": "The list of teardown tags. Currently we only allow one.",
          "type": "array"
        },
        "type": {
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update"
            ]
          },
          "description": "GTM Tag Type. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "liveOnly": {
          "description": "If set to true, this tag will only fire in the live environment (e.g. not in preview or debug mode). @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "Tag display name. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update"
            ]
          }
        },
        "monitoringMetadataTagNameKey": {
          "type": "string",
          "description": "If non-empty, then the tag display name will be included in the monitoring metadata map using the key specified. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "scheduleStartMs": {
          "format": "int64",
          "type": "string",
          "description": "The start timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "paused": {
          "type": "boolean",
          "description": "Indicates whether the tag is paused, which prevents the tag from firing. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "priority": {
          "description": "User defined numeric priority of the tag. Tags are fired asynchronously in order of priority. Tags with higher numeric value fire first. A tag's priority can be a positive or negative value. The default value is 0. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "$ref": "Parameter"
        },
        "blockingTriggerId": {
          "type": "array",
          "description": "Blocking trigger IDs. If any of the listed triggers evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "items": {
            "type": "string"
          }
        },
        "firingRuleId": {
          "type": "array",
          "description": "Firing rule IDs. A tag will fire when any of the listed rules are true and all of its blockingRuleIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "items": {
            "type": "string"
          }
        },
        "consentSettings": {
          "$ref": "TagConsentSetting",
          "description": "Consent settings of a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "blockingRuleId": {
          "items": {
            "type": "string"
          },
          "description": "Blocking rule IDs. If any of the listed rules evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "parameter": {
          "items": {
            "$ref": "Parameter"
          },
          "description": "The tag's parameters. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array"
        },
        "firingTriggerId": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Firing trigger IDs. A tag will fire when any of the listed triggers are true and all of its blockingTriggerIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        }
      },
      "description": "Represents a Google Tag Manager Tag.",
      "id": "Tag",
      "type": "object"
    },
    "Environment": {
      "type": "object",
      "description": "Represents a Google Tag Manager Environment. Note that a user can create, delete and update environments of type USER, but can only update the enable_debug and url fields of environments of other types.",
      "properties": {
        "authorizationCode": {
          "type": "string",
          "description": "The environment authorization code."
        },
        "workspaceId": {
          "description": "Represents a link to a quick preview of a workspace.",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "url": {
          "type": "string",
          "description": "Default preview page url for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update"
        },
        "containerVersionId": {
          "type": "string",
          "description": "Represents a link to a container version."
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "authorizationTimestamp": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time-stamp for the authorization code."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "path": {
          "type": "string",
          "description": "GTM Environment's API relative path."
        },
        "description": {
          "description": "The environment description. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "type": "string"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM environment as computed at storage time. This value is recomputed whenever the environment is modified.",
          "type": "string"
        },
        "environmentId": {
          "type": "string",
          "description": "GTM Environment ID uniquely identifies the GTM Environment."
        },
        "enableDebug": {
          "description": "Whether or not to enable debug by default for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "type": "boolean"
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.environments.create",
              "tagmanager.accounts.containers.environments.update"
            ]
          },
          "type": "string",
          "description": "The environment display name. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update"
        },
        "type": {
          "type": "string",
          "enum": [
            "user",
            "live",
            "latest",
            "workspace"
          ],
          "description": "The type of this environment.",
          "enumDescriptions": [
            "Points to a user defined environment.",
            "Points to the current live container version.",
            "Points to the latest container version.",
            "Automatically managed environment that points to a workspace preview or version created by a workspace."
          ]
        }
      },
      "id": "Environment"
    },
    "ZoneBoundary": {
      "type": "object",
      "id": "ZoneBoundary",
      "description": "Represents a Zone's boundaries.",
      "properties": {
        "customEvaluationTriggerId": {
          "items": {
            "type": "string"
          },
          "description": "Custom evaluation trigger IDs. A zone will evaluate its boundary conditions when any of the listed triggers are true.",
          "type": "array"
        },
        "condition": {
          "items": {
            "$ref": "Condition"
          },
          "type": "array",
          "description": "The conditions that, when conjoined, make up the boundary."
        }
      }
    },
    "RevertZoneResponse": {
      "id": "RevertZoneResponse",
      "description": "The result of reverting a zone in a workspace.",
      "type": "object",
      "properties": {
        "zone": {
          "$ref": "Zone",
          "description": "Zone as it appears in the latest container version since the last workspace synchronization operation. If no zone is present, that means the zone was deleted in the latest container version."
        }
      }
    },
    "Entity": {
      "properties": {
        "variable": {
          "description": "The variable being represented by the entity.",
          "$ref": "Variable"
        },
        "transformation": {
          "description": "The transformation being represented by the entity.",
          "$ref": "Transformation"
        },
        "folder": {
          "description": "The folder being represented by the entity.",
          "$ref": "Folder"
        },
        "trigger": {
          "$ref": "Trigger",
          "description": "The trigger being represented by the entity."
        },
        "client": {
          "description": "The client being represented by the entity.",
          "$ref": "Client"
        },
        "changeStatus": {
          "enumDescriptions": [
            "",
            "The entity has never been changed.",
            "The entity is added to the workspace.",
            "The entity is deleted from the workspace.",
            "The entity has been updated in the workspace."
          ],
          "type": "string",
          "description": "Represents how the entity has been changed in the workspace.",
          "enum": [
            "changeStatusUnspecified",
            "none",
            "added",
            "deleted",
            "updated"
          ]
        },
        "tag": {
          "description": "The tag being represented by the entity.",
          "$ref": "Tag"
        }
      },
      "description": "A workspace entity that may represent a tag, trigger, variable, or folder in addition to its status in the workspace.",
      "type": "object",
      "id": "Entity"
    },
    "TeardownTag": {
      "properties": {
        "tagName": {
          "description": "The name of the teardown tag.",
          "type": "string"
        },
        "stopTeardownOnFailure": {
          "description": "If true, fire the teardown tag if and only if the main tag fires successfully. If false, fire the teardown tag regardless of main tag firing status.",
          "type": "boolean"
        }
      },
      "description": "Represents a tag that fires after another tag in order to tear down dependencies.",
      "id": "TeardownTag",
      "type": "object"
    }
  },
  "ownerDomain": "google.com",
  "title": "Tag Manager API",
  "batchPath": "batch",
  "parameters": {
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "description": "Data format for response."
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    }
  },
  "mtlsRootUrl": "https://tagmanager.mtls.googleapis.com/",
  "description": "This API allows clients to access and modify container and tag configuration.",
  "version": "v2",
  "protocol": "rest",
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "id": "tagmanager:v2",
  "name": "tagmanager"
}

{
  "id": "tagmanager:v2",
  "description": "This API allows clients to access and modify container and tag configuration.",
  "discoveryVersion": "v1",
  "ownerDomain": "google.com",
  "parameters": {
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "type": "string",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response."
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ]
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    }
  },
  "revision": "20221024",
  "kind": "discovery#restDescription",
  "rootUrl": "https://tagmanager.googleapis.com/",
  "baseUrl": "https://tagmanager.googleapis.com/",
  "resources": {
    "accounts": {
      "resources": {
        "containers": {
          "methods": {
            "delete": {
              "description": "Deletes a Container.",
              "parameterOrder": [
                "path"
              ],
              "parameters": {
                "path": {
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "location": "path",
                  "required": true,
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "type": "string"
                }
              },
              "httpMethod": "DELETE",
              "path": "tagmanager/v2/{+path}",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "id": "tagmanager.accounts.containers.delete",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.delete.containers"
              ]
            },
            "combine": {
              "description": "Combines Containers.",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "response": {
                "$ref": "Container"
              },
              "httpMethod": "POST",
              "parameters": {
                "path": {
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "settingSource": {
                  "enum": [
                    "settingSourceUnspecified",
                    "current",
                    "other"
                  ],
                  "location": "query",
                  "type": "string",
                  "enumDescriptions": [
                    "",
                    "Keep the current container config setting after combine",
                    "Use config setting from the other tag after combine"
                  ],
                  "description": "Specify the source of config setting after combine"
                },
                "containerId": {
                  "type": "string",
                  "location": "query",
                  "description": "ID of container that will be merged into the current container."
                },
                "allowUserPermissionFeatureUpdate": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail."
                }
              },
              "parameterOrder": [
                "path"
              ],
              "path": "tagmanager/v2/{+path}:combine",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:combine",
              "id": "tagmanager.accounts.containers.combine"
            },
            "list": {
              "parameters": {
                "parent": {
                  "pattern": "^accounts/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}."
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Continuation token for fetching the next page of results."
                }
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers",
              "description": "Lists all Containers that belongs to a GTM Account.",
              "response": {
                "$ref": "ListContainersResponse"
              },
              "httpMethod": "GET",
              "path": "tagmanager/v2/{+parent}/containers",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "id": "tagmanager.accounts.containers.list"
            },
            "get": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "id": "tagmanager.accounts.containers.get",
              "response": {
                "$ref": "Container"
              },
              "path": "tagmanager/v2/{+path}",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "description": "Gets a Container.",
              "parameterOrder": [
                "path"
              ],
              "httpMethod": "GET",
              "parameters": {
                "path": {
                  "required": true,
                  "location": "path",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "type": "string"
                }
              }
            },
            "update": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "id": "tagmanager.accounts.containers.update",
              "description": "Updates a Container.",
              "response": {
                "$ref": "Container"
              },
              "request": {
                "$ref": "Container"
              },
              "path": "tagmanager/v2/{+path}",
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "parameterOrder": [
                "path"
              ],
              "parameters": {
                "path": {
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "fingerprint": {
                  "description": "When provided, this fingerprint must match the fingerprint of the container in storage.",
                  "type": "string",
                  "location": "query"
                }
              }
            },
            "move_tag_id": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:move_tag_id",
              "response": {
                "$ref": "Container"
              },
              "parameters": {
                "allowUserPermissionFeatureUpdate": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail."
                },
                "path": {
                  "required": true,
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "location": "path",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "type": "string"
                },
                "tagName": {
                  "location": "query",
                  "type": "string",
                  "description": "The name for the newly created tag."
                },
                "copySettings": {
                  "description": "Whether or not to copy tag settings from this tag to the new tag.",
                  "location": "query",
                  "type": "boolean"
                },
                "tagId": {
                  "type": "string",
                  "location": "query",
                  "description": "Tag ID to be removed from the current Container."
                },
                "copyTermsOfService": {
                  "type": "boolean",
                  "description": "Must be set to true to accept all terms of service agreements copied from the current tag to the newly created tag. If this bit is false, the operation will fail.",
                  "location": "query"
                },
                "copyUsers": {
                  "description": "Whether or not to copy users from this tag to the new tag.",
                  "location": "query",
                  "type": "boolean"
                }
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "parameterOrder": [
                "path"
              ],
              "id": "tagmanager.accounts.containers.move_tag_id",
              "path": "tagmanager/v2/{+path}:move_tag_id",
              "description": "Move Tag ID out of a Container."
            },
            "create": {
              "path": "tagmanager/v2/{+parent}/containers",
              "id": "tagmanager.accounts.containers.create",
              "request": {
                "$ref": "Container"
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "response": {
                "$ref": "Container"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "description": "Creates a Container.",
              "parameters": {
                "parent": {
                  "pattern": "^accounts/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}.",
                  "location": "path"
                }
              }
            },
            "lookup": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "id": "tagmanager.accounts.containers.lookup",
              "response": {
                "$ref": "Container"
              },
              "flatPath": "tagmanager/v2/accounts/containers:lookup",
              "parameters": {
                "destinationId": {
                  "description": "Destination ID linked to a GTM Container, e.g. AW-123456789. Example: accounts/containers:lookup?destination_id={destination_id}.",
                  "type": "string",
                  "location": "query"
                }
              },
              "path": "tagmanager/v2/accounts/containers:lookup",
              "parameterOrder": [],
              "description": "Looks up a Container by destination ID."
            },
            "snippet": {
              "response": {
                "$ref": "GetContainerSnippetResponse"
              },
              "parameters": {
                "path": {
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "description": "Container snippet's API relative path. Example: accounts/{account_id}/containers/{container_id}:snippet",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "id": "tagmanager.accounts.containers.snippet",
              "path": "tagmanager/v2/{+path}:snippet",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "httpMethod": "GET",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}:snippet",
              "description": "Gets the tagging snippet for a Container.",
              "parameterOrder": [
                "path"
              ]
            }
          },
          "resources": {
            "workspaces": {
              "methods": {
                "update": {
                  "parameterOrder": [
                    "path"
                  ],
                  "description": "Updates a Workspace.",
                  "id": "tagmanager.accounts.containers.workspaces.update",
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "required": true,
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "location": "path",
                      "type": "string"
                    },
                    "fingerprint": {
                      "description": "When provided, this fingerprint must match the fingerprint of the workspace in storage.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "httpMethod": "PUT",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "request": {
                    "$ref": "Workspace"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "response": {
                    "$ref": "Workspace"
                  },
                  "path": "tagmanager/v2/{+path}"
                },
                "quick_preview": {
                  "id": "tagmanager.accounts.containers.workspaces.quick_preview",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                    }
                  },
                  "response": {
                    "$ref": "QuickPreviewResponse"
                  },
                  "httpMethod": "POST",
                  "path": "tagmanager/v2/{+path}:quick_preview",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:quick_preview",
                  "description": "Quick previews a workspace by creating a fake container version from all entities in the provided workspace.",
                  "parameterOrder": [
                    "path"
                  ]
                },
                "list": {
                  "id": "tagmanager.accounts.containers.workspaces.list",
                  "description": "Lists all Workspaces that belong to a GTM Container.",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "Continuation token for fetching the next page of results.",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "type": "string"
                    }
                  },
                  "path": "tagmanager/v2/{+parent}/workspaces",
                  "response": {
                    "$ref": "ListWorkspacesResponse"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "create_version": {
                  "path": "tagmanager/v2/{+path}:create_version",
                  "id": "tagmanager.accounts.containers.workspaces.create_version",
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "location": "path"
                    }
                  },
                  "description": "Creates a Container Version from the entities present in the workspace, deletes the workspace, and sets the base container version to the newly created version.",
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "request": {
                    "$ref": "CreateContainerVersionRequestVersionOptions"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:create_version",
                  "response": {
                    "$ref": "CreateContainerVersionResponse"
                  },
                  "httpMethod": "POST"
                },
                "sync": {
                  "httpMethod": "POST",
                  "id": "tagmanager.accounts.containers.workspaces.sync",
                  "path": "tagmanager/v2/{+path}:sync",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:sync",
                  "response": {
                    "$ref": "SyncWorkspaceResponse"
                  },
                  "description": "Syncs a workspace to the latest container version by updating all unmodified workspace entities and displaying conflicts for modified entities.",
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "type": "string",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ]
                },
                "create": {
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces",
                  "description": "Creates a Workspace.",
                  "path": "tagmanager/v2/{+parent}/workspaces",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Workspace"
                  },
                  "response": {
                    "$ref": "Workspace"
                  },
                  "id": "tagmanager.accounts.containers.workspaces.create",
                  "parameters": {
                    "parent": {
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  }
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.delete.containers"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "path": "tagmanager/v2/{+path}",
                  "parameterOrder": [
                    "path"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "location": "path"
                    }
                  },
                  "description": "Deletes a Workspace."
                },
                "getStatus": {
                  "parameters": {
                    "path": {
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "required": true,
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "location": "path"
                    }
                  },
                  "id": "tagmanager.accounts.containers.workspaces.getStatus",
                  "response": {
                    "$ref": "GetWorkspaceStatusResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "description": "Finds conflicting and modified entities in the workspace.",
                  "path": "tagmanager/v2/{+path}/status",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/status",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "path"
                  ]
                },
                "resolve_conflict": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:resolve_conflict",
                  "description": "Resolves a merge conflict for a workspace entity by updating it to the resolved entity passed in the request.",
                  "path": "tagmanager/v2/{+path}:resolve_conflict",
                  "request": {
                    "$ref": "Entity"
                  },
                  "parameters": {
                    "path": {
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                    },
                    "fingerprint": {
                      "type": "string",
                      "description": "When provided, this fingerprint must match the fingerprint of the entity_in_workspace in the merge conflict.",
                      "location": "query"
                    }
                  },
                  "id": "tagmanager.accounts.containers.workspaces.resolve_conflict",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ]
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Workspace"
                  },
                  "id": "tagmanager.accounts.containers.workspaces.get",
                  "path": "tagmanager/v2/{+path}",
                  "description": "Gets a Workspace.",
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "httpMethod": "GET"
                }
              },
              "resources": {
                "built_in_variables": {
                  "methods": {
                    "create": {
                      "path": "tagmanager/v2/{+parent}/built_in_variables",
                      "httpMethod": "POST",
                      "description": "Creates one or more GTM Built-In Variables.",
                      "response": {
                        "$ref": "CreateBuiltInVariableResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.create",
                      "parameters": {
                        "type": {
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "repeated": true,
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname"
                          ],
                          "description": "The types of built-in variables to enable.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables"
                    },
                    "delete": {
                      "parameters": {
                        "type": {
                          "location": "query",
                          "repeated": true,
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname"
                          ],
                          "description": "The types of built-in variables to delete.",
                          "type": "string"
                        },
                        "path": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/built_in_variables$"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.delete",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "description": "Deletes one or more GTM Built-In Variables.",
                      "httpMethod": "DELETE",
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "revert": {
                      "httpMethod": "POST",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables:revert",
                      "description": "Reverts changes to a GTM Built-In Variables in a GTM Workspace.",
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.revert",
                      "parameters": {
                        "type": {
                          "location": "query",
                          "type": "string",
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString",
                            "serverPageLocationUrl",
                            "serverPageLocationPath",
                            "serverPageLocationHostname"
                          ],
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "description": "The type of built-in variable to revert."
                        },
                        "path": {
                          "type": "string",
                          "location": "path",
                          "description": "GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "RevertBuiltInVariableResponse"
                      },
                      "path": "tagmanager/v2/{+path}/built_in_variables:revert"
                    },
                    "list": {
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results."
                        },
                        "parent": {
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "tagmanager/v2/{+parent}/built_in_variables",
                      "description": "Lists all the enabled Built-In Variables of a GTM Container.",
                      "httpMethod": "GET",
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.list",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "response": {
                        "$ref": "ListEnabledBuiltInVariablesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ]
                    }
                  }
                },
                "clients": {
                  "methods": {
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.clients.get",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}",
                      "path": "tagmanager/v2/{+path}",
                      "description": "Gets a GTM Client.",
                      "response": {
                        "$ref": "Client"
                      }
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "parameters": {
                        "path": {
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$"
                        }
                      },
                      "description": "Deletes a GTM Client.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.clients.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "list": {
                      "response": {
                        "$ref": "ListClientsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.clients.list",
                      "httpMethod": "GET",
                      "path": "tagmanager/v2/{+parent}/clients",
                      "description": "Lists all GTM Clients of a GTM container workspace.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients"
                    },
                    "create": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients",
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+parent}/clients",
                      "response": {
                        "$ref": "Client"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Client"
                      },
                      "description": "Creates a GTM Client.",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.clients.create"
                    },
                    "update": {
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the client in storage."
                        },
                        "path": {
                          "required": true,
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "type": "string"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}",
                      "id": "tagmanager.accounts.containers.workspaces.clients.update",
                      "path": "tagmanager/v2/{+path}",
                      "request": {
                        "$ref": "Client"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "PUT",
                      "response": {
                        "$ref": "Client"
                      },
                      "description": "Updates a GTM Client."
                    },
                    "revert": {
                      "response": {
                        "$ref": "RevertClientResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+path}:revert",
                      "id": "tagmanager.accounts.containers.workspaces.clients.revert",
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the client in storage.",
                          "type": "string"
                        },
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$",
                          "description": "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/clients/{clientsId}:revert",
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Reverts changes to a GTM Client in a GTM Workspace."
                    }
                  }
                },
                "folders": {
                  "methods": {
                    "update": {
                      "request": {
                        "$ref": "Folder"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.folders.update",
                      "description": "Updates a GTM Folder.",
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "PUT",
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the folder in storage.",
                          "type": "string"
                        },
                        "path": {
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "Folder"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}"
                    },
                    "move_entities_to_folder": {
                      "id": "tagmanager.accounts.containers.workspaces.folders.move_entities_to_folder",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Moves entities to a GTM Folder.",
                      "path": "tagmanager/v2/{+path}:move_entities_to_folder",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:move_entities_to_folder",
                      "request": {
                        "$ref": "Folder"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "required": true,
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "type": "string"
                        },
                        "tagId": {
                          "type": "string",
                          "repeated": true,
                          "location": "query",
                          "description": "The tags to be moved to the folder."
                        },
                        "triggerId": {
                          "repeated": true,
                          "description": "The triggers to be moved to the folder.",
                          "location": "query",
                          "type": "string"
                        },
                        "variableId": {
                          "repeated": true,
                          "location": "query",
                          "type": "string",
                          "description": "The variables to be moved to the folder."
                        }
                      }
                    },
                    "list": {
                      "response": {
                        "$ref": "ListFoldersResponse"
                      },
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query"
                        }
                      },
                      "httpMethod": "GET",
                      "path": "tagmanager/v2/{+parent}/folders",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "description": "Lists all GTM Folders of a Container.",
                      "id": "tagmanager.accounts.containers.workspaces.folders.list"
                    },
                    "get": {
                      "parameters": {
                        "path": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "required": true,
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}"
                        }
                      },
                      "description": "Gets a GTM Folder.",
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "Folder"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "id": "tagmanager.accounts.containers.workspaces.folders.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET"
                    },
                    "revert": {
                      "response": {
                        "$ref": "RevertFolderResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "POST",
                      "id": "tagmanager.accounts.containers.workspaces.folders.revert",
                      "path": "tagmanager/v2/{+path}:revert",
                      "description": "Reverts changes to a GTM Folder in a GTM Workspace.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:revert",
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the tag in storage.",
                          "type": "string",
                          "location": "query"
                        },
                        "path": {
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "delete": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "required": true
                        }
                      },
                      "httpMethod": "DELETE",
                      "description": "Deletes a GTM Folder.",
                      "id": "tagmanager.accounts.containers.workspaces.folders.delete"
                    },
                    "create": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "Folder"
                      },
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.folders.create",
                      "description": "Creates a GTM Folder.",
                      "path": "tagmanager/v2/{+parent}/folders",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "Folder"
                      },
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "entities": {
                      "parameters": {
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string",
                          "location": "query"
                        },
                        "path": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "description": "List all entities in a GTM Folder.",
                      "httpMethod": "POST",
                      "id": "tagmanager.accounts.containers.workspaces.folders.entities",
                      "path": "tagmanager/v2/{+path}:entities",
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:entities",
                      "response": {
                        "$ref": "FolderEntities"
                      }
                    }
                  }
                },
                "triggers": {
                  "methods": {
                    "delete": {
                      "httpMethod": "DELETE",
                      "description": "Deletes a GTM Trigger.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "path": {
                          "required": true,
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.triggers.delete",
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "create": {
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "request": {
                        "$ref": "Trigger"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers",
                      "description": "Creates a GTM Trigger.",
                      "response": {
                        "$ref": "Trigger"
                      },
                      "httpMethod": "POST",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.create",
                      "path": "tagmanager/v2/{+parent}/triggers",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string"
                        },
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+parent}/triggers",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.list",
                      "description": "Lists all GTM Triggers of a Container.",
                      "response": {
                        "$ref": "ListTriggersResponse"
                      }
                    },
                    "revert": {
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "RevertTriggerResponse"
                      },
                      "path": "tagmanager/v2/{+path}:revert",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.revert",
                      "parameters": {
                        "path": {
                          "required": true,
                          "type": "string",
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "location": "path"
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the trigger in storage.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}:revert",
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Reverts changes to a GTM Trigger in a GTM Workspace."
                    },
                    "get": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "location": "path",
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "required": true
                        }
                      },
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.get",
                      "description": "Gets a GTM Trigger.",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "response": {
                        "$ref": "Trigger"
                      }
                    },
                    "update": {
                      "id": "tagmanager.accounts.containers.workspaces.triggers.update",
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the trigger in storage.",
                          "location": "query",
                          "type": "string"
                        },
                        "path": {
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "location": "path"
                        }
                      },
                      "path": "tagmanager/v2/{+path}",
                      "response": {
                        "$ref": "Trigger"
                      },
                      "description": "Updates a GTM Trigger.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "PUT",
                      "request": {
                        "$ref": "Trigger"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}"
                    }
                  }
                },
                "templates": {
                  "methods": {
                    "revert": {
                      "description": "Reverts changes to a GTM Template in a GTM Workspace.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}:revert",
                      "id": "tagmanager.accounts.containers.workspaces.templates.revert",
                      "path": "tagmanager/v2/{+path}:revert",
                      "response": {
                        "$ref": "RevertTemplateResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the template in storage."
                        },
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "location": "path",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "type": "string",
                          "required": true
                        }
                      }
                    },
                    "update": {
                      "request": {
                        "$ref": "CustomTemplate"
                      },
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "PUT",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "location": "path"
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the templates in storage.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "description": "Updates a GTM Template.",
                      "id": "tagmanager.accounts.containers.workspaces.templates.update",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}"
                    },
                    "delete": {
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Deletes a GTM Template.",
                      "id": "tagmanager.accounts.containers.workspaces.templates.delete",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "type": "string"
                        }
                      },
                      "httpMethod": "DELETE"
                    },
                    "list": {
                      "httpMethod": "GET",
                      "description": "Lists all GTM Templates of a GTM container workspace.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates",
                      "id": "tagmanager.accounts.containers.workspaces.templates.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "response": {
                        "$ref": "ListTemplatesResponse"
                      },
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results."
                        },
                        "parent": {
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/templates",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "create": {
                      "path": "tagmanager/v2/{+parent}/templates",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.templates.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path"
                        }
                      },
                      "request": {
                        "$ref": "CustomTemplate"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates",
                      "description": "Creates a GTM Custom Template."
                    },
                    "get": {
                      "id": "tagmanager.accounts.containers.workspaces.templates.get",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}"
                        }
                      },
                      "path": "tagmanager/v2/{+path}",
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "description": "Gets a GTM Template.",
                      "httpMethod": "GET"
                    }
                  }
                },
                "gtag_config": {
                  "methods": {
                    "delete": {
                      "httpMethod": "DELETE",
                      "description": "Deletes a Google tag config.",
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.delete",
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$"
                        }
                      }
                    },
                    "get": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.get",
                      "response": {
                        "$ref": "GtagConfig"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$",
                          "required": true,
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}",
                          "location": "path"
                        }
                      },
                      "description": "Gets a Google tag config."
                    },
                    "list": {
                      "response": {
                        "$ref": "ListGtagConfigResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config",
                      "parameters": {
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "description": "Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "description": "Lists all Google tag configs in a Container.",
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.list",
                      "path": "tagmanager/v2/{+parent}/gtag_config",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "create": {
                      "request": {
                        "$ref": "GtagConfig"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.create",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "description": "Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GtagConfig"
                      },
                      "path": "tagmanager/v2/{+parent}/gtag_config",
                      "description": "Creates a Google tag config.",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "update": {
                      "parameterOrder": [
                        "path"
                      ],
                      "request": {
                        "$ref": "GtagConfig"
                      },
                      "response": {
                        "$ref": "GtagConfig"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.gtag_config.update",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/gtag_config/[^/]+$",
                          "description": "Google tag config's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/gtag_config/{gtag_config_id}",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        },
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the config in storage."
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/gtag_config/{gtag_configId}",
                      "path": "tagmanager/v2/{+path}",
                      "description": "Updates a Google tag config.",
                      "httpMethod": "PUT"
                    }
                  }
                },
                "tags": {
                  "methods": {
                    "delete": {
                      "id": "tagmanager.accounts.containers.workspaces.tags.delete",
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "DELETE",
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "location": "path"
                        }
                      },
                      "description": "Deletes a GTM Tag.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "revert": {
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Reverts changes to a GTM Tag in a GTM Workspace.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}:revert",
                      "id": "tagmanager.accounts.containers.workspaces.tags.revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}:revert",
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of thetag in storage.",
                          "location": "query",
                          "type": "string"
                        },
                        "path": {
                          "required": true,
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "RevertTagResponse"
                      }
                    },
                    "create": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "request": {
                        "$ref": "Tag"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+parent}/tags",
                      "description": "Creates a GTM Tag.",
                      "id": "tagmanager.accounts.containers.workspaces.tags.create",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "Tag"
                      }
                    },
                    "update": {
                      "parameters": {
                        "path": {
                          "required": true,
                          "location": "path",
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$"
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the tag in storage.",
                          "location": "query"
                        }
                      },
                      "request": {
                        "$ref": "Tag"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "httpMethod": "PUT",
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.tags.update",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "Tag"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Updates a GTM Tag."
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "tagmanager/v2/{+parent}/tags",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET",
                      "description": "Lists all GTM Tags of a Container.",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags",
                      "id": "tagmanager.accounts.containers.workspaces.tags.list",
                      "response": {
                        "$ref": "ListTagsResponse"
                      }
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET",
                      "description": "Gets a GTM Tag.",
                      "response": {
                        "$ref": "Tag"
                      },
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "path": "tagmanager/v2/{+path}",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.tags.get"
                    }
                  }
                },
                "zones": {
                  "methods": {
                    "get": {
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "required": true,
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.zones.get",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Zone"
                      },
                      "description": "Gets a GTM Zone.",
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}"
                    },
                    "revert": {
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "location": "path"
                        },
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the zone in storage."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "RevertZoneResponse"
                      },
                      "description": "Reverts changes to a GTM Zone in a GTM Workspace.",
                      "path": "tagmanager/v2/{+path}:revert",
                      "id": "tagmanager.accounts.containers.workspaces.zones.revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}:revert"
                    },
                    "delete": {
                      "path": "tagmanager/v2/{+path}",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.zones.delete",
                      "description": "Deletes a GTM Zone.",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "required": true,
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "location": "path"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    },
                    "update": {
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "type": "string",
                          "required": true
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the zone in storage.",
                          "location": "query"
                        }
                      },
                      "httpMethod": "PUT",
                      "request": {
                        "$ref": "Zone"
                      },
                      "response": {
                        "$ref": "Zone"
                      },
                      "description": "Updates a GTM Zone.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}",
                      "id": "tagmanager.accounts.containers.workspaces.zones.update"
                    },
                    "list": {
                      "id": "tagmanager.accounts.containers.workspaces.zones.list",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true
                        }
                      },
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListZonesResponse"
                      },
                      "path": "tagmanager/v2/{+parent}/zones",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones",
                      "description": "Lists all GTM Zones of a GTM container workspace.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "create": {
                      "response": {
                        "$ref": "Zone"
                      },
                      "path": "tagmanager/v2/{+parent}/zones",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones",
                      "request": {
                        "$ref": "Zone"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.zones.create",
                      "description": "Creates a GTM Zone.",
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                },
                "variables": {
                  "methods": {
                    "revert": {
                      "description": "Reverts changes to a GTM Variable in a GTM Workspace.",
                      "response": {
                        "$ref": "RevertVariableResponse"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}:revert",
                      "path": "tagmanager/v2/{+path}:revert",
                      "parameters": {
                        "path": {
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "location": "path"
                        },
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the variable in storage."
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.variables.revert"
                    },
                    "get": {
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "location": "path"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "description": "Gets a GTM Variable.",
                      "response": {
                        "$ref": "Variable"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.variables.get",
                      "httpMethod": "GET",
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ]
                    },
                    "update": {
                      "parameters": {
                        "path": {
                          "required": true,
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "location": "path"
                        },
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the variable in storage."
                        }
                      },
                      "request": {
                        "$ref": "Variable"
                      },
                      "response": {
                        "$ref": "Variable"
                      },
                      "description": "Updates a GTM Variable.",
                      "id": "tagmanager.accounts.containers.workspaces.variables.update",
                      "parameterOrder": [
                        "path"
                      ],
                      "httpMethod": "PUT",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}"
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Deletes a GTM Variable.",
                      "parameters": {
                        "path": {
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "location": "path"
                        }
                      },
                      "httpMethod": "DELETE",
                      "id": "tagmanager.accounts.containers.workspaces.variables.delete"
                    },
                    "list": {
                      "parameters": {
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.variables.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "tagmanager/v2/{+parent}/variables",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "httpMethod": "GET",
                      "description": "Lists all GTM Variables of a Container.",
                      "response": {
                        "$ref": "ListVariablesResponse"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables"
                    },
                    "create": {
                      "id": "tagmanager.accounts.containers.workspaces.variables.create",
                      "response": {
                        "$ref": "Variable"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "path": "tagmanager/v2/{+parent}/variables",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables",
                      "request": {
                        "$ref": "Variable"
                      },
                      "httpMethod": "POST",
                      "description": "Creates a GTM Variable.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ]
                    }
                  }
                }
              }
            },
            "environments": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "description": "Lists all GTM Environments of a GTM Container.",
                  "response": {
                    "$ref": "ListEnvironmentsResponse"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "path": "tagmanager/v2/{+parent}/environments",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "description": "Continuation token for fetching the next page of results.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "id": "tagmanager.accounts.containers.environments.list",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "reauthorize": {
                  "path": "tagmanager/v2/{+path}:reauthorize",
                  "parameters": {
                    "path": {
                      "type": "string",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "location": "path",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.publish"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}:reauthorize",
                  "response": {
                    "$ref": "Environment"
                  },
                  "description": "Re-generates the authorization code for a GTM Environment.",
                  "id": "tagmanager.accounts.containers.environments.reauthorize",
                  "request": {
                    "$ref": "Environment"
                  }
                },
                "get": {
                  "id": "tagmanager.accounts.containers.environments.get",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "response": {
                    "$ref": "Environment"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "path": "tagmanager/v2/{+path}",
                  "httpMethod": "GET",
                  "description": "Gets a GTM Environment.",
                  "parameters": {
                    "path": {
                      "location": "path",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ]
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "parameters": {
                    "path": {
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "httpMethod": "DELETE",
                  "description": "Deletes a GTM Environment.",
                  "id": "tagmanager.accounts.containers.environments.delete",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "path": "tagmanager/v2/{+path}"
                },
                "update": {
                  "response": {
                    "$ref": "Environment"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "id": "tagmanager.accounts.containers.environments.update",
                  "path": "tagmanager/v2/{+path}",
                  "parameters": {
                    "path": {
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "type": "string",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "required": true
                    },
                    "fingerprint": {
                      "location": "query",
                      "description": "When provided, this fingerprint must match the fingerprint of the environment in storage.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "description": "Updates a GTM Environment.",
                  "request": {
                    "$ref": "Environment"
                  },
                  "httpMethod": "PUT",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}"
                },
                "create": {
                  "path": "tagmanager/v2/{+parent}/environments",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "request": {
                    "$ref": "Environment"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}"
                    }
                  },
                  "response": {
                    "$ref": "Environment"
                  },
                  "httpMethod": "POST",
                  "id": "tagmanager.accounts.containers.environments.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a GTM Environment.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments"
                }
              }
            },
            "versions": {
              "methods": {
                "publish": {
                  "httpMethod": "POST",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:publish",
                  "response": {
                    "$ref": "PublishContainerVersionResponse"
                  },
                  "parameters": {
                    "fingerprint": {
                      "location": "query",
                      "description": "When provided, this fingerprint must match the fingerprint of the container version in storage.",
                      "type": "string"
                    },
                    "path": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"
                    }
                  },
                  "path": "tagmanager/v2/{+path}:publish",
                  "description": "Publishes a Container Version.",
                  "parameterOrder": [
                    "path"
                  ],
                  "id": "tagmanager.accounts.containers.versions.publish",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.publish"
                  ]
                },
                "update": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "path": "tagmanager/v2/{+path}",
                  "request": {
                    "$ref": "ContainerVersion"
                  },
                  "id": "tagmanager.accounts.containers.versions.update",
                  "parameters": {
                    "fingerprint": {
                      "description": "When provided, this fingerprint must match the fingerprint of the container version in storage.",
                      "type": "string",
                      "location": "query"
                    },
                    "path": {
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "httpMethod": "PUT",
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "description": "Updates a Container Version."
                },
                "live": {
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions:live",
                  "description": "Gets the live (i.e. published) container version",
                  "id": "tagmanager.accounts.containers.versions.live",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "path": "tagmanager/v2/{+parent}/versions:live",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "response": {
                    "$ref": "ContainerVersion"
                  }
                },
                "get": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "description": "Gets a Container Version.",
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "id": "tagmanager.accounts.containers.versions.get",
                  "httpMethod": "GET",
                  "parameters": {
                    "containerVersionId": {
                      "type": "string",
                      "description": "The GTM ContainerVersion ID. Specify published to retrieve the currently published version.",
                      "location": "query"
                    },
                    "path": {
                      "required": true,
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "type": "string"
                    }
                  },
                  "path": "tagmanager/v2/{+path}",
                  "parameterOrder": [
                    "path"
                  ]
                },
                "undelete": {
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "parameters": {
                    "path": {
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "id": "tagmanager.accounts.containers.versions.undelete",
                  "description": "Undeletes a Container Version.",
                  "path": "tagmanager/v2/{+path}:undelete",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:undelete"
                },
                "set_latest": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:set_latest",
                  "parameterOrder": [
                    "path"
                  ],
                  "path": "tagmanager/v2/{+path}:set_latest",
                  "httpMethod": "POST",
                  "parameters": {
                    "path": {
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "location": "path",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "id": "tagmanager.accounts.containers.versions.set_latest",
                  "description": "Sets the latest version used for synchronization of workspaces when detecting conflicts and errors.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ]
                },
                "delete": {
                  "parameterOrder": [
                    "path"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "parameters": {
                    "path": {
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "required": true,
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "location": "path"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "httpMethod": "DELETE",
                  "id": "tagmanager.accounts.containers.versions.delete",
                  "description": "Deletes a Container Version.",
                  "path": "tagmanager/v2/{+path}"
                }
              }
            },
            "version_headers": {
              "methods": {
                "list": {
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "Continuation token for fetching the next page of results.",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "includeDeleted": {
                      "description": "Also retrieve deleted (archived) versions when true.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers",
                  "path": "tagmanager/v2/{+parent}/version_headers",
                  "description": "Lists all Container Versions of a GTM Container.",
                  "id": "tagmanager.accounts.containers.version_headers.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "response": {
                    "$ref": "ListContainerVersionsResponse"
                  }
                },
                "latest": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers:latest",
                  "description": "Gets the latest container version header",
                  "path": "tagmanager/v2/{+parent}/version_headers:latest",
                  "parameters": {
                    "parent": {
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ContainerVersionHeader"
                  },
                  "id": "tagmanager.accounts.containers.version_headers.latest"
                }
              }
            },
            "destinations": {
              "methods": {
                "list": {
                  "id": "tagmanager.accounts.containers.destinations.list",
                  "path": "tagmanager/v2/{+parent}/destinations",
                  "parameters": {
                    "parent": {
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListDestinationsResponse"
                  },
                  "description": "Lists all Destinations linked to a GTM Container.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ]
                },
                "get": {
                  "path": "tagmanager/v2/{+path}",
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/destinations/[^/]+$",
                      "required": true,
                      "description": "Google Tag Destination's API relative path. Example: accounts/{account_id}/containers/{container_id}/destinations/{destination_link_id}",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations/{destinationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "httpMethod": "GET",
                  "id": "tagmanager.accounts.containers.destinations.get",
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "Destination"
                  },
                  "description": "Gets a Destination."
                },
                "link": {
                  "description": "Adds a Destination to this Container and removes it from the Container to which it is currently linked.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "tagmanager.accounts.containers.destinations.link",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/destinations:link",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "path": "tagmanager/v2/{+parent}/destinations:link",
                  "response": {
                    "$ref": "Destination"
                  },
                  "parameters": {
                    "destinationId": {
                      "location": "query",
                      "type": "string",
                      "description": "Destination ID to be linked to the current container."
                    },
                    "parent": {
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true,
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path"
                    },
                    "allowUserPermissionFeatureUpdate": {
                      "description": "Must be set to true to allow features.user_permissions to change from false to true. If this operation causes an update but this bit is false, the operation will fail.",
                      "type": "boolean",
                      "location": "query"
                    }
                  },
                  "httpMethod": "POST"
                }
              }
            }
          }
        },
        "user_permissions": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "response": {
                "$ref": "ListUserPermissionsResponse"
              },
              "id": "tagmanager.accounts.user_permissions.list",
              "description": "List all users that have access to the account along with Account and Container user access granted to each of them.",
              "path": "tagmanager/v2/{+parent}/user_permissions",
              "parameters": {
                "pageToken": {
                  "description": "Continuation token for fetching the next page of results.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "type": "string",
                  "pattern": "^accounts/[^/]+$",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}",
                  "location": "path",
                  "required": true
                }
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "parameterOrder": [
                "parent"
              ]
            },
            "delete": {
              "description": "Removes a user from the account, revoking access to it and all of its containers.",
              "httpMethod": "DELETE",
              "id": "tagmanager.accounts.user_permissions.delete",
              "parameters": {
                "path": {
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "parameterOrder": [
                "path"
              ],
              "path": "tagmanager/v2/{+path}",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}"
            },
            "create": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "description": "Creates a user's Account & Container access.",
              "request": {
                "$ref": "UserPermission"
              },
              "id": "tagmanager.accounts.user_permissions.create",
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}",
                  "pattern": "^accounts/[^/]+$"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "UserPermission"
              },
              "path": "tagmanager/v2/{+parent}/user_permissions",
              "httpMethod": "POST"
            },
            "update": {
              "parameterOrder": [
                "path"
              ],
              "request": {
                "$ref": "UserPermission"
              },
              "description": "Updates a user's Account & Container access.",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "httpMethod": "PUT",
              "id": "tagmanager.accounts.user_permissions.update",
              "parameters": {
                "path": {
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$"
                }
              },
              "path": "tagmanager/v2/{+path}",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "response": {
                "$ref": "UserPermission"
              }
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "parameters": {
                "path": {
                  "type": "string",
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "description": "Gets a user's Account & Container access.",
              "response": {
                "$ref": "UserPermission"
              },
              "path": "tagmanager/v2/{+path}",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "httpMethod": "GET",
              "id": "tagmanager.accounts.user_permissions.get",
              "parameterOrder": [
                "path"
              ]
            }
          }
        }
      },
      "methods": {
        "list": {
          "description": "Lists all GTM Accounts that a user has access to.",
          "parameters": {
            "pageToken": {
              "type": "string",
              "description": "Continuation token for fetching the next page of results.",
              "location": "query"
            },
            "includeGoogleTags": {
              "location": "query",
              "description": "Also retrieve accounts associated with Google Tag when true.",
              "type": "boolean"
            }
          },
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.edit.containers",
            "https://www.googleapis.com/auth/tagmanager.manage.accounts",
            "https://www.googleapis.com/auth/tagmanager.readonly"
          ],
          "flatPath": "tagmanager/v2/accounts",
          "httpMethod": "GET",
          "path": "tagmanager/v2/accounts",
          "response": {
            "$ref": "ListAccountsResponse"
          },
          "id": "tagmanager.accounts.list"
        },
        "update": {
          "response": {
            "$ref": "Account"
          },
          "httpMethod": "PUT",
          "description": "Updates a GTM Account.",
          "flatPath": "tagmanager/v2/accounts/{accountsId}",
          "parameters": {
            "path": {
              "location": "path",
              "type": "string",
              "required": true,
              "pattern": "^accounts/[^/]+$",
              "description": "GTM Account's API relative path. Example: accounts/{account_id}"
            },
            "fingerprint": {
              "type": "string",
              "location": "query",
              "description": "When provided, this fingerprint must match the fingerprint of the account in storage."
            }
          },
          "request": {
            "$ref": "Account"
          },
          "parameterOrder": [
            "path"
          ],
          "path": "tagmanager/v2/{+path}",
          "id": "tagmanager.accounts.update",
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.manage.accounts"
          ]
        },
        "get": {
          "parameters": {
            "path": {
              "type": "string",
              "description": "GTM Account's API relative path. Example: accounts/{account_id}",
              "location": "path",
              "pattern": "^accounts/[^/]+$",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.edit.containers",
            "https://www.googleapis.com/auth/tagmanager.manage.accounts",
            "https://www.googleapis.com/auth/tagmanager.readonly"
          ],
          "parameterOrder": [
            "path"
          ],
          "path": "tagmanager/v2/{+path}",
          "response": {
            "$ref": "Account"
          },
          "description": "Gets a GTM Account.",
          "httpMethod": "GET",
          "id": "tagmanager.accounts.get",
          "flatPath": "tagmanager/v2/accounts/{accountsId}"
        }
      }
    }
  },
  "documentationLink": "https://developers.google.com/tag-manager",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "version": "v2",
  "basePath": "",
  "mtlsRootUrl": "https://tagmanager.mtls.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/tagmanager.edit.containerversions": {
          "description": "Manage your Google Tag Manager container versions"
        },
        "https://www.googleapis.com/auth/tagmanager.readonly": {
          "description": "View your Google Tag Manager container and its subcomponents"
        },
        "https://www.googleapis.com/auth/tagmanager.delete.containers": {
          "description": "Delete your Google Tag Manager containers"
        },
        "https://www.googleapis.com/auth/tagmanager.edit.containers": {
          "description": "Manage your Google Tag Manager container and its subcomponents, excluding versioning and publishing"
        },
        "https://www.googleapis.com/auth/tagmanager.publish": {
          "description": "Publish your Google Tag Manager container versions"
        },
        "https://www.googleapis.com/auth/tagmanager.manage.users": {
          "description": "Manage user permissions of your Google Tag Manager account and container"
        },
        "https://www.googleapis.com/auth/tagmanager.manage.accounts": {
          "description": "View and manage your Google Tag Manager accounts"
        }
      }
    }
  },
  "title": "Tag Manager API",
  "schemas": {
    "MergeConflict": {
      "type": "object",
      "properties": {
        "entityInWorkspace": {
          "description": "The workspace entity that has conflicting changes compared to the base version. If an entity is deleted in a workspace, it will still appear with a deleted change status.",
          "$ref": "Entity"
        },
        "entityInBaseVersion": {
          "$ref": "Entity",
          "description": "The base version entity (since the latest sync operation) that has conflicting changes compared to the workspace. If this field is missing, it means the workspace entity is deleted from the base version."
        }
      },
      "id": "MergeConflict",
      "description": "Represents a merge conflict."
    },
    "Folder": {
      "description": "Represents a Google Tag Manager Folder.",
      "type": "object",
      "properties": {
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "notes": {
          "description": "User notes on how to apply this folder in the container. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update",
          "type": "string"
        },
        "path": {
          "description": "GTM Folder's API relative path.",
          "type": "string"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Folder as computed at storage time. This value is recomputed whenever the folder is modified."
        },
        "folderId": {
          "type": "string",
          "description": "The Folder ID uniquely identifies the GTM Folder."
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "name": {
          "description": "Folder display name. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.folders.create",
              "tagmanager.accounts.containers.workspaces.folders.update"
            ]
          }
        }
      },
      "id": "Folder"
    },
    "ListZonesResponse": {
      "id": "ListZonesResponse",
      "type": "object",
      "properties": {
        "zone": {
          "items": {
            "$ref": "Zone"
          },
          "type": "array",
          "description": "All GTM Zones of a GTM Container."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      }
    },
    "ListTagsResponse": {
      "id": "ListTagsResponse",
      "description": "List Tags Response.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "tag": {
          "description": "All GTM Tags of a GTM Container.",
          "type": "array",
          "items": {
            "$ref": "Tag"
          }
        }
      }
    },
    "RevertZoneResponse": {
      "id": "RevertZoneResponse",
      "description": "The result of reverting a zone in a workspace.",
      "properties": {
        "zone": {
          "description": "Zone as it appears in the latest container version since the last workspace synchronization operation. If no zone is present, that means the zone was deleted in the latest container version.",
          "$ref": "Zone"
        }
      },
      "type": "object"
    },
    "CreateContainerVersionResponse": {
      "properties": {
        "compilerError": {
          "type": "boolean",
          "description": "Compiler errors or not."
        },
        "containerVersion": {
          "$ref": "ContainerVersion",
          "description": "The container version created."
        },
        "newWorkspacePath": {
          "description": "Auto generated workspace path created as a result of version creation. This field should only be populated if the created version was not a quick preview.",
          "type": "string"
        },
        "syncStatus": {
          "$ref": "SyncStatus",
          "description": "Whether version creation failed when syncing the workspace to the latest container version."
        }
      },
      "description": "Create container versions response.",
      "type": "object",
      "id": "CreateContainerVersionResponse"
    },
    "SyncStatus": {
      "type": "object",
      "id": "SyncStatus",
      "description": "The status of a workspace after synchronization.",
      "properties": {
        "mergeConflict": {
          "description": "Synchornization operation detected a merge conflict.",
          "type": "boolean"
        },
        "syncError": {
          "type": "boolean",
          "description": "An error occurred during the synchronization operation."
        }
      }
    },
    "ListEnabledBuiltInVariablesResponse": {
      "description": "A list of enabled built-in variables.",
      "type": "object",
      "id": "ListEnabledBuiltInVariablesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "builtInVariable": {
          "items": {
            "$ref": "BuiltInVariable"
          },
          "description": "All GTM BuiltInVariables of a GTM container.",
          "type": "array"
        }
      }
    },
    "RevertTagResponse": {
      "properties": {
        "tag": {
          "$ref": "Tag",
          "description": "Tag as it appears in the latest container version since the last workspace synchronization operation. If no tag is present, that means the tag was deleted in the latest container version."
        }
      },
      "id": "RevertTagResponse",
      "description": "The result of reverting a tag in a workspace.",
      "type": "object"
    },
    "CustomTemplate": {
      "id": "CustomTemplate",
      "type": "object",
      "description": "Represents a Google Tag Manager Custom Template's contents.",
      "properties": {
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Custom Template as computed at storage time. This value is recomputed whenever the template is modified."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "templateId": {
          "description": "The Custom Template ID uniquely identifies the GTM custom template.",
          "type": "string"
        },
        "name": {
          "description": "Custom Template display name.",
          "type": "string"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "templateData": {
          "type": "string",
          "description": "The custom template in text format."
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "path": {
          "description": "GTM Custom Template's API relative path.",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "galleryReference": {
          "description": "A reference to the Community Template Gallery entry.",
          "$ref": "GalleryReference"
        }
      }
    },
    "ListFoldersResponse": {
      "description": "List Folders Response.",
      "id": "ListFoldersResponse",
      "type": "object",
      "properties": {
        "folder": {
          "items": {
            "$ref": "Folder"
          },
          "description": "All GTM Folders of a GTM Container.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      }
    },
    "AccountFeatures": {
      "type": "object",
      "properties": {
        "supportUserPermissions": {
          "description": "Whether this Account supports user permissions managed by GTM.",
          "type": "boolean"
        },
        "supportMultipleContainers": {
          "description": "Whether this Account supports multiple Containers.",
          "type": "boolean"
        }
      },
      "id": "AccountFeatures"
    },
    "ContainerFeatures": {
      "type": "object",
      "properties": {
        "supportVariables": {
          "type": "boolean",
          "description": "Whether this Container supports variables."
        },
        "supportUserPermissions": {
          "description": "Whether this Container supports user permissions managed by GTM.",
          "type": "boolean"
        },
        "supportVersions": {
          "description": "Whether this Container supports Container versions.",
          "type": "boolean"
        },
        "supportTriggers": {
          "type": "boolean",
          "description": "Whether this Container supports triggers."
        },
        "supportTags": {
          "description": "Whether this Container supports tags.",
          "type": "boolean"
        },
        "supportEnvironments": {
          "type": "boolean",
          "description": "Whether this Container supports environments."
        },
        "supportGtagConfigs": {
          "type": "boolean",
          "description": "Whether this Container supports Google tag config."
        },
        "supportFolders": {
          "type": "boolean",
          "description": "Whether this Container supports folders."
        },
        "supportZones": {
          "description": "Whether this Container supports zones.",
          "type": "boolean"
        },
        "supportWorkspaces": {
          "type": "boolean",
          "description": "Whether this Container supports workspaces."
        },
        "supportClients": {
          "type": "boolean",
          "description": "Whether this Container supports clients."
        },
        "supportTemplates": {
          "description": "Whether this Container supports templates.",
          "type": "boolean"
        },
        "supportBuiltInVariables": {
          "description": "Whether this Container supports built-in variables",
          "type": "boolean"
        }
      },
      "id": "ContainerFeatures"
    },
    "TeardownTag": {
      "type": "object",
      "description": "Represents a tag that fires after another tag in order to tear down dependencies.",
      "id": "TeardownTag",
      "properties": {
        "tagName": {
          "type": "string",
          "description": "The name of the teardown tag."
        },
        "stopTeardownOnFailure": {
          "description": "If true, fire the teardown tag if and only if the main tag fires successfully. If false, fire the teardown tag regardless of main tag firing status.",
          "type": "boolean"
        }
      }
    },
    "GetWorkspaceStatusResponse": {
      "id": "GetWorkspaceStatusResponse",
      "description": "The changes that have occurred in the workspace since the base container version.",
      "type": "object",
      "properties": {
        "workspaceChange": {
          "type": "array",
          "description": "Entities that have been changed in the workspace.",
          "items": {
            "$ref": "Entity"
          }
        },
        "mergeConflict": {
          "type": "array",
          "items": {
            "$ref": "MergeConflict"
          },
          "description": "The merge conflict after sync."
        }
      }
    },
    "ListContainerVersionsResponse": {
      "id": "ListContainerVersionsResponse",
      "type": "object",
      "properties": {
        "containerVersionHeader": {
          "description": "All container version headers of a GTM Container.",
          "items": {
            "$ref": "ContainerVersionHeader"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "description": "List container versions response."
    },
    "RevertFolderResponse": {
      "id": "RevertFolderResponse",
      "description": "The result of reverting folder changes in a workspace.",
      "type": "object",
      "properties": {
        "folder": {
          "$ref": "Folder",
          "description": "Folder as it appears in the latest container version since the last workspace synchronization operation. If no folder is present, that means the folder was deleted in the latest container version."
        }
      }
    },
    "ListContainersResponse": {
      "type": "object",
      "description": "List Containers Response.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "container": {
          "items": {
            "$ref": "Container"
          },
          "type": "array",
          "description": "All Containers of a GTM Account."
        }
      },
      "id": "ListContainersResponse"
    },
    "ZoneBoundary": {
      "description": "Represents a Zone's boundaries.",
      "id": "ZoneBoundary",
      "properties": {
        "condition": {
          "type": "array",
          "description": "The conditions that, when conjoined, make up the boundary.",
          "items": {
            "$ref": "Condition"
          }
        },
        "customEvaluationTriggerId": {
          "description": "Custom evaluation trigger IDs. A zone will evaluate its boundary conditions when any of the listed triggers are true.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SetupTag": {
      "properties": {
        "stopOnSetupFailure": {
          "type": "boolean",
          "description": "If true, fire the main tag if and only if the setup tag fires successfully. If false, fire the main tag regardless of setup tag firing status."
        },
        "tagName": {
          "type": "string",
          "description": "The name of the setup tag."
        }
      },
      "id": "SetupTag",
      "type": "object",
      "description": "Represents a reference to atag that fires before another tag in order to set up dependencies."
    },
    "ListAccountsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "account": {
          "type": "array",
          "description": "List of GTM Accounts that a user has access to.",
          "items": {
            "$ref": "Account"
          }
        }
      },
      "type": "object",
      "description": "List Accounts Response.",
      "id": "ListAccountsResponse"
    },
    "Account": {
      "type": "object",
      "id": "Account",
      "properties": {
        "path": {
          "type": "string",
          "description": "GTM Account's API relative path."
        },
        "accountId": {
          "description": "The Account ID uniquely identifies the GTM Account.",
          "type": "string"
        },
        "name": {
          "description": "Account display name. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update",
          "type": "string"
        },
        "shareData": {
          "type": "boolean",
          "description": "Whether the account shares data anonymously with Google and others. This flag enables benchmarking by sharing your data in an anonymous form. Google will remove all identifiable information about your website, combine the data with hundreds of other anonymous sites and report aggregate trends in the benchmarking service. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update"
        },
        "features": {
          "$ref": "AccountFeatures",
          "description": "Read-only Account feature set"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Account as computed at storage time. This value is recomputed whenever the account is modified.",
          "type": "string"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        }
      },
      "description": "Represents a Google Tag Manager Account."
    },
    "ContainerAccess": {
      "id": "ContainerAccess",
      "description": "Defines the Google Tag Manager Container access permissions.",
      "type": "object",
      "properties": {
        "permission": {
          "description": "List of Container permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "containerPermissionUnspecified",
            "noAccess",
            "read",
            "edit",
            "approve",
            "publish"
          ]
        },
        "containerId": {
          "description": "GTM Container ID. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "type": "string"
        }
      }
    },
    "CreateContainerVersionRequestVersionOptions": {
      "id": "CreateContainerVersionRequestVersionOptions",
      "type": "object",
      "description": "Options for new container versions.",
      "properties": {
        "name": {
          "description": "The name of the container version to be created.",
          "type": "string"
        },
        "notes": {
          "type": "string",
          "description": "The notes of the container version to be created."
        }
      }
    },
    "RevertClientResponse": {
      "id": "RevertClientResponse",
      "properties": {
        "client": {
          "$ref": "Client",
          "description": "Client as it appears in the latest container version since the last workspace synchronization operation. If no client is present, that means the client was deleted in the latest container version."
        }
      },
      "type": "object",
      "description": "The result of reverting a client in a workspace."
    },
    "RevertTemplateResponse": {
      "description": "The result of reverting a template in a workspace.",
      "properties": {
        "template": {
          "$ref": "CustomTemplate",
          "description": "Template as it appears in the latest container version since the last workspace synchronization operation. If no template is present, that means the template was deleted in the latest container version."
        }
      },
      "id": "RevertTemplateResponse",
      "type": "object"
    },
    "RevertTriggerResponse": {
      "properties": {
        "trigger": {
          "description": "Trigger as it appears in the latest container version since the last workspace synchronization operation. If no trigger is present, that means the trigger was deleted in the latest container version.",
          "$ref": "Trigger"
        }
      },
      "type": "object",
      "id": "RevertTriggerResponse",
      "description": "The result of reverting a trigger in a workspace."
    },
    "ZoneTypeRestriction": {
      "id": "ZoneTypeRestriction",
      "type": "object",
      "description": "Represents a Zone's type restrictions.",
      "properties": {
        "whitelistedTypeId": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of type public ids that have been whitelisted for use in this Zone."
        },
        "enable": {
          "type": "boolean",
          "description": "True if type restrictions have been enabled for this Zone."
        }
      }
    },
    "RevertBuiltInVariableResponse": {
      "description": "The result of reverting a built-in variable in a workspace.",
      "type": "object",
      "id": "RevertBuiltInVariableResponse",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the built-in variable is enabled after reversion."
        }
      }
    },
    "GetContainerSnippetResponse": {
      "type": "object",
      "properties": {
        "snippet": {
          "type": "string",
          "description": "Tagging snippet for a Container."
        }
      },
      "id": "GetContainerSnippetResponse"
    },
    "Client": {
      "id": "Client",
      "type": "object",
      "properties": {
        "parentFolderId": {
          "type": "string",
          "description": "Parent folder id."
        },
        "type": {
          "description": "Client type. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.clients.create",
              "tagmanager.accounts.containers.workspaces.clients.update"
            ]
          }
        },
        "name": {
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.clients.create",
              "tagmanager.accounts.containers.workspaces.clients.update"
            ]
          },
          "description": "Client display name. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Client as computed at storage time. This value is recomputed whenever the client is modified."
        },
        "notes": {
          "description": "User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string"
        },
        "parameter": {
          "type": "array",
          "description": "The client's parameters. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update",
          "items": {
            "$ref": "Parameter"
          }
        },
        "priority": {
          "format": "int32",
          "description": "Priority determines relative firing order. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update",
          "type": "integer"
        },
        "path": {
          "description": "GTM client's API relative path.",
          "type": "string"
        },
        "clientId": {
          "description": "The Client ID uniquely identifies the GTM client.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        }
      }
    },
    "ListGtagConfigResponse": {
      "type": "object",
      "id": "ListGtagConfigResponse",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "gtagConfig": {
          "type": "array",
          "items": {
            "$ref": "GtagConfig"
          },
          "description": "All Google tag configs in a Container."
        }
      }
    },
    "ListWorkspacesResponse": {
      "id": "ListWorkspacesResponse",
      "type": "object",
      "description": "A list of workspaces in a container.",
      "properties": {
        "workspace": {
          "items": {
            "$ref": "Workspace"
          },
          "description": "All Workspaces of a GTM Container.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      }
    },
    "QuickPreviewResponse": {
      "id": "QuickPreviewResponse",
      "type": "object",
      "description": "Response to quick previewing a workspace.",
      "properties": {
        "compilerError": {
          "description": "Were there compiler errors or not.",
          "type": "boolean"
        },
        "syncStatus": {
          "description": "Whether quick previewing failed when syncing the workspace to the latest container version.",
          "$ref": "SyncStatus"
        },
        "containerVersion": {
          "$ref": "ContainerVersion",
          "description": "The quick previewed container version."
        }
      }
    },
    "Entity": {
      "type": "object",
      "description": "A workspace entity that may represent a tag, trigger, variable, or folder in addition to its status in the workspace.",
      "properties": {
        "client": {
          "$ref": "Client",
          "description": "The client being represented by the entity."
        },
        "tag": {
          "$ref": "Tag",
          "description": "The tag being represented by the entity."
        },
        "variable": {
          "$ref": "Variable",
          "description": "The variable being represented by the entity."
        },
        "changeStatus": {
          "type": "string",
          "description": "Represents how the entity has been changed in the workspace.",
          "enum": [
            "changeStatusUnspecified",
            "none",
            "added",
            "deleted",
            "updated"
          ],
          "enumDescriptions": [
            "",
            "The entity has never been changed.",
            "The entity is added to the workspace.",
            "The entity is deleted from the workspace.",
            "The entity has been updated in the workspace."
          ]
        },
        "folder": {
          "description": "The folder being represented by the entity.",
          "$ref": "Folder"
        },
        "trigger": {
          "$ref": "Trigger",
          "description": "The trigger being represented by the entity."
        }
      },
      "id": "Entity"
    },
    "ContainerVersionHeader": {
      "type": "object",
      "description": "Represents a Google Tag Manager Container Version Header.",
      "properties": {
        "deleted": {
          "description": "A value of true indicates this container version has been deleted.",
          "type": "boolean"
        },
        "containerVersionId": {
          "description": "The Container Version ID uniquely identifies the GTM Container Version.",
          "type": "string"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "numTags": {
          "description": "Number of tags in the container version.",
          "type": "string"
        },
        "numRules": {
          "description": "Number of rules in the container version.",
          "type": "string"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Container version display name."
        },
        "numTriggers": {
          "description": "Number of triggers in the container version.",
          "type": "string"
        },
        "numGtagConfigs": {
          "type": "string",
          "description": "Number of Google tag configs in the container version."
        },
        "numClients": {
          "type": "string",
          "description": "Number of clients in the container version."
        },
        "numCustomTemplates": {
          "description": "Number of custom templates in the container version.",
          "type": "string"
        },
        "numVariables": {
          "description": "Number of variables in the container version.",
          "type": "string"
        },
        "numMacros": {
          "description": "Number of macros in the container version.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "GTM Container Version's API relative path."
        },
        "numZones": {
          "type": "string",
          "description": "Number of zones in the container version."
        }
      },
      "id": "ContainerVersionHeader"
    },
    "TagConsentSetting": {
      "properties": {
        "consentType": {
          "description": "The type of consents to check for during tag firing if in the consent NEEDED state. This parameter must be of type LIST where each list item is of type STRING.",
          "$ref": "Parameter"
        },
        "consentStatus": {
          "description": "The tag's consent status. If set to NEEDED, the runtime will check that the consent types specified by the consent_type field have been granted.",
          "enumDescriptions": [
            "Default value where user has not specified any setting on it.",
            "Tag doesn't require any additional consent settings.",
            "Tag requires additional consent settings."
          ],
          "type": "string",
          "enum": [
            "notSet",
            "notNeeded",
            "needed"
          ]
        }
      },
      "type": "object",
      "id": "TagConsentSetting"
    },
    "Environment": {
      "properties": {
        "url": {
          "type": "string",
          "description": "Default preview page url for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update"
        },
        "authorizationTimestamp": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time-stamp for the authorization code."
        },
        "name": {
          "description": "The environment display name. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.environments.create",
              "tagmanager.accounts.containers.environments.update"
            ]
          }
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "workspaceId": {
          "type": "string",
          "description": "Represents a link to a quick preview of a workspace."
        },
        "authorizationCode": {
          "description": "The environment authorization code.",
          "type": "string"
        },
        "description": {
          "description": "The environment description. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "type": "string"
        },
        "containerVersionId": {
          "description": "Represents a link to a container version.",
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM environment as computed at storage time. This value is recomputed whenever the environment is modified."
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "GTM Environment's API relative path."
        },
        "environmentId": {
          "type": "string",
          "description": "GTM Environment ID uniquely identifies the GTM Environment."
        },
        "enableDebug": {
          "description": "Whether or not to enable debug by default for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "type": "boolean"
        },
        "type": {
          "description": "The type of this environment.",
          "type": "string",
          "enum": [
            "user",
            "live",
            "latest",
            "workspace"
          ],
          "enumDescriptions": [
            "Points to a user defined environment.",
            "Points to the current live container version.",
            "Points to the latest container version.",
            "Automatically managed environment that points to a workspace preview or version created by a workspace."
          ]
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        }
      },
      "type": "object",
      "id": "Environment",
      "description": "Represents a Google Tag Manager Environment. Note that a user can create, delete and update environments of type USER, but can only update the enable_debug and url fields of environments of other types."
    },
    "Zone": {
      "properties": {
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this zone in the container."
        },
        "path": {
          "type": "string",
          "description": "GTM Zone's API relative path."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "boundary": {
          "description": "This Zone's boundary.",
          "$ref": "ZoneBoundary"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "zoneId": {
          "description": "The Zone ID uniquely identifies the GTM Zone.",
          "type": "string"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Zone as computed at storage time. This value is recomputed whenever the zone is modified.",
          "type": "string"
        },
        "typeRestriction": {
          "description": "This Zone's type restrictions.",
          "$ref": "ZoneTypeRestriction"
        },
        "name": {
          "type": "string",
          "description": "Zone display name."
        },
        "childContainer": {
          "description": "Containers that are children of this Zone.",
          "items": {
            "$ref": "ZoneChildContainer"
          },
          "type": "array"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        }
      },
      "id": "Zone",
      "description": "Represents a Google Tag Manager Zone's contents.",
      "type": "object"
    },
    "ListVariablesResponse": {
      "type": "object",
      "id": "ListVariablesResponse",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "variable": {
          "description": "All GTM Variables of a GTM Container.",
          "type": "array",
          "items": {
            "$ref": "Variable"
          }
        }
      },
      "description": "List Variables Response."
    },
    "ListDestinationsResponse": {
      "id": "ListDestinationsResponse",
      "type": "object",
      "properties": {
        "destination": {
          "type": "array",
          "items": {
            "$ref": "Destination"
          },
          "description": "All Destinations linked to a GTM Container."
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      }
    },
    "GalleryReference": {
      "properties": {
        "owner": {
          "description": "The name of the owner for the community gallery template.",
          "type": "string"
        },
        "version": {
          "description": "The version of the community gallery template.",
          "type": "string"
        },
        "signature": {
          "type": "string",
          "description": "The signature of the community gallery template as computed at import time. This value is recomputed whenever the template is updated from the gallery."
        },
        "host": {
          "type": "string",
          "description": "The name of the host for the community gallery template."
        },
        "isModified": {
          "description": "If a user has manually edited the community gallery template.",
          "type": "boolean"
        },
        "repository": {
          "description": "The name of the repository for the community gallery template.",
          "type": "string"
        }
      },
      "description": "Represents the link between a custom template and an entry on the Community Template Gallery site.",
      "type": "object",
      "id": "GalleryReference"
    },
    "SyncWorkspaceResponse": {
      "type": "object",
      "description": "A response after synchronizing the workspace to the latest container version.",
      "id": "SyncWorkspaceResponse",
      "properties": {
        "mergeConflict": {
          "type": "array",
          "items": {
            "$ref": "MergeConflict"
          },
          "description": "The merge conflict after sync. If this field is not empty, the sync is still treated as successful. But a version cannot be created until all conflicts are resolved."
        },
        "syncStatus": {
          "$ref": "SyncStatus",
          "description": "Indicates whether synchronization caused a merge conflict or sync error."
        }
      }
    },
    "ListTemplatesResponse": {
      "id": "ListTemplatesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "template": {
          "description": "All GTM Custom Templates of a GTM Container.",
          "items": {
            "$ref": "CustomTemplate"
          },
          "type": "array"
        }
      }
    },
    "Container": {
      "description": "Represents a Google Tag Manager Container, which specifies the platform tags will run on, manages workspaces, and retains container versions.",
      "id": "Container",
      "type": "object",
      "properties": {
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.create",
              "tagmanager.accounts.containers.update"
            ]
          },
          "description": "Container display name. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "domainName": {
          "type": "array",
          "description": "List of domain names associated with the Container. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "items": {
            "type": "string"
          }
        },
        "tagIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "All Tag IDs that refer to this Container."
        },
        "features": {
          "description": "Read-only Container feature set.",
          "$ref": "ContainerFeatures"
        },
        "usageContext": {
          "items": {
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string",
            "enum": [
              "usageContextUnspecified",
              "web",
              "android",
              "ios",
              "androidSdk5",
              "iosSdk5",
              "amp",
              "server"
            ]
          },
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.create",
              "tagmanager.accounts.containers.update"
            ]
          },
          "type": "array",
          "description": "List of Usage Contexts for the Container. Valid values include: web, android, or ios. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update"
        },
        "path": {
          "description": "GTM Container's API relative path.",
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified."
        },
        "containerId": {
          "type": "string",
          "description": "The Container ID uniquely identifies the GTM Container."
        },
        "notes": {
          "description": "Container Notes. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "type": "string"
        },
        "publicId": {
          "type": "string",
          "description": "Container Public ID."
        }
      }
    },
    "Trigger": {
      "properties": {
        "visibilitySelector": {
          "description": "A visibility trigger CSS selector (i.e. \"#id\"). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "intervalSeconds": {
          "description": "Time between Timer Events to fire (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "waitForTags": {
          "description": "Whether or not we should delay the form submissions or link opening until all of the tags have fired (by preventing the default action and later simulating the default action). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "horizontalScrollPercentageList": {
          "description": "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled horizontally. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "type": {
          "type": "string",
          "enum": [
            "eventTypeUnspecified",
            "pageview",
            "domReady",
            "windowLoaded",
            "customEvent",
            "triggerGroup",
            "init",
            "consentInit",
            "serverPageview",
            "always",
            "firebaseAppException",
            "firebaseAppUpdate",
            "firebaseCampaign",
            "firebaseFirstOpen",
            "firebaseInAppPurchase",
            "firebaseNotificationDismiss",
            "firebaseNotificationForeground",
            "firebaseNotificationOpen",
            "firebaseNotificationReceive",
            "firebaseOsUpdate",
            "firebaseSessionStart",
            "firebaseUserEngagement",
            "formSubmission",
            "click",
            "linkClick",
            "jsError",
            "historyChange",
            "timer",
            "ampClick",
            "ampTimer",
            "ampScroll",
            "ampVisibility",
            "youTubeVideo",
            "scrollDepth",
            "elementVisibility"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create"
            ]
          },
          "description": "Defines the data layer event that causes this trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "verticalScrollPercentageList": {
          "$ref": "Parameter",
          "description": "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled vertically. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "parameter": {
          "items": {
            "$ref": "Parameter"
          },
          "type": "array",
          "description": "Additional parameters. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this trigger in the container. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Trigger as computed at storage time. This value is recomputed whenever the trigger is modified.",
          "type": "string"
        },
        "triggerId": {
          "description": "The Trigger ID uniquely identifies the GTM Trigger.",
          "type": "string"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "filter": {
          "items": {
            "$ref": "Condition"
          },
          "type": "array",
          "description": "The trigger will only fire iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "uniqueTriggerId": {
          "description": "Globally unique id of the trigger that auto-generates this (a Form Submit, Link Click or Timer listener) if any. Used to make incompatible auto-events work together with trigger filtering based on trigger ids. This value is populated during output generation since the tags implied by triggers don't exist until then. Only valid for Form Submit, Link Click and Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "limit": {
          "description": "Limit of the number of GTM events this Timer Trigger will fire. If no limit is set, we will continue to fire GTM events until the user leaves the page. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        },
        "selector": {
          "description": "A click trigger CSS selector (i.e. \"a\", \"button\" etc.). Only valid for AMP Click trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "path": {
          "description": "GTM Trigger's API relative path.",
          "type": "string"
        },
        "waitForTagsTimeout": {
          "description": "How long to wait (in milliseconds) for tags to fire when 'waits_for_tags' above evaluates to true. Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "visiblePercentageMax": {
          "$ref": "Parameter",
          "description": "A visibility trigger maximum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "eventName": {
          "description": "Name of the GTM event that is fired. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "autoEventFilter": {
          "description": "Used in the case of auto event tracking. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "items": {
            "$ref": "Condition"
          },
          "type": "array"
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "type": "string",
          "description": "Trigger display name. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "totalTimeMinMilliseconds": {
          "description": "A visibility trigger minimum total visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "visiblePercentageMin": {
          "$ref": "Parameter",
          "description": "A visibility trigger minimum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "customEventFilter": {
          "items": {
            "$ref": "Condition"
          },
          "description": "Used in the case of custom event, which is fired iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "array"
        },
        "maxTimerLengthSeconds": {
          "description": "Max time to fire Timer Events (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "checkValidation": {
          "description": "Whether or not we should only fire tags if the form submit or link click event is not cancelled by some other event handler (e.g. because of validation). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "continuousTimeMinMilliseconds": {
          "description": "A visibility trigger minimum continuous visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "interval": {
          "description": "Time between triggering recurring Timer Events (in milliseconds). Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        }
      },
      "description": "Represents a Google Tag Manager Trigger",
      "id": "Trigger",
      "type": "object"
    },
    "ListTriggersResponse": {
      "description": "List triggers response.",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "trigger": {
          "description": "All GTM Triggers of a GTM Container.",
          "type": "array",
          "items": {
            "$ref": "Trigger"
          }
        }
      },
      "type": "object",
      "id": "ListTriggersResponse"
    },
    "RevertVariableResponse": {
      "id": "RevertVariableResponse",
      "type": "object",
      "description": "The result of reverting a variable in a workspace.",
      "properties": {
        "variable": {
          "description": "Variable as it appears in the latest container version since the last workspace synchronization operation. If no variable is present, that means the variable was deleted in the latest container version.",
          "$ref": "Variable"
        }
      }
    },
    "Parameter": {
      "type": "object",
      "properties": {
        "map": {
          "description": "This map parameter's parameters (must have keys; keys must be unique). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        },
        "type": {
          "description": "The parameter type. Valid values are: - boolean: The value represents a boolean, represented as 'true' or 'false' - integer: The value represents a 64-bit signed integer value, in base 10 - list: A list of parameters should be specified - map: A map of parameters should be specified - template: The value represents any text; this can include variable references (even variable references that might return non-string types) - trigger_reference: The value represents a trigger, represented as the trigger id - tag_reference: The value represents a tag, represented as the tag name @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "enumDescriptions": [
            "",
            "May include variable references (such as \"{{myVariable}}\").",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update",
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update",
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "enum": [
            "typeUnspecified",
            "template",
            "integer",
            "boolean",
            "list",
            "map",
            "triggerReference",
            "tagReference"
          ],
          "type": "string"
        },
        "list": {
          "type": "array",
          "description": "This list parameter's parameters (keys will be ignored). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "items": {
            "$ref": "Parameter"
          }
        },
        "value": {
          "type": "string",
          "description": "A parameter's value (may contain variable references such as \"{{myVariable}}\") as appropriate to the specified type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "key": {
          "type": "string",
          "description": "The named key that uniquely identifies a parameter. Required for top-level parameters, as well as map values. Ignored for list values. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        }
      },
      "id": "Parameter",
      "description": "Represents a Google Tag Manager Parameter."
    },
    "ListClientsResponse": {
      "properties": {
        "client": {
          "description": "All GTM Clients of a GTM Container.",
          "items": {
            "$ref": "Client"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "type": "object",
      "id": "ListClientsResponse"
    },
    "ZoneChildContainer": {
      "description": "Represents a child container of a Zone.",
      "properties": {
        "nickname": {
          "description": "The zone's nickname for the child container.",
          "type": "string"
        },
        "publicId": {
          "description": "The child container's public id.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ZoneChildContainer"
    },
    "UserPermission": {
      "properties": {
        "accountAccess": {
          "description": "GTM Account access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "$ref": "AccountAccess"
        },
        "containerAccess": {
          "description": "GTM Container access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "type": "array",
          "items": {
            "$ref": "ContainerAccess"
          }
        },
        "path": {
          "description": "GTM UserPermission's API relative path.",
          "type": "string"
        },
        "emailAddress": {
          "description": "User's email address. @mutable tagmanager.accounts.permissions.create",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "The Account ID uniquely identifies the GTM Account."
        }
      },
      "description": "Represents a user's permissions to an account and its container.",
      "type": "object",
      "id": "UserPermission"
    },
    "GtagConfig": {
      "type": "object",
      "id": "GtagConfig",
      "properties": {
        "parameter": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "The Google tag config's parameters. @mutable tagmanager.accounts.containers.workspaces.gtag_config.create @mutable tagmanager.accounts.containers.workspaces.gtag_config.update"
        },
        "workspaceId": {
          "type": "string",
          "description": "Google tag workspace ID. Only used by GTM containers. Set to 0 otherwise."
        },
        "type": {
          "type": "string",
          "description": "Google tag config type. @required tagmanager.accounts.containers.workspaces.gtag_config.create @required tagmanager.accounts.containers.workspaces.gtag_config.update @mutable tagmanager.accounts.containers.workspaces.gtag_config.create @mutable tagmanager.accounts.containers.workspaces.gtag_config.update"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the Google tag config as computed at storage time. This value is recomputed whenever the config is modified."
        },
        "accountId": {
          "description": "Google tag account ID.",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "Google tag container ID."
        },
        "gtagConfigId": {
          "type": "string",
          "description": "The ID uniquely identifies the Google tag config."
        },
        "path": {
          "description": "Google tag config's API relative path.",
          "type": "string"
        }
      },
      "description": "Represents a Google tag configuration."
    },
    "ListUserPermissionsResponse": {
      "type": "object",
      "description": "List user permissions response.",
      "properties": {
        "userPermission": {
          "description": "All GTM UserPermissions of a GTM Account.",
          "type": "array",
          "items": {
            "$ref": "UserPermission"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "id": "ListUserPermissionsResponse"
    },
    "Tag": {
      "type": "object",
      "description": "Represents a Google Tag Manager Tag.",
      "id": "Tag",
      "properties": {
        "priority": {
          "description": "User defined numeric priority of the tag. Tags are fired asynchronously in order of priority. Tags with higher numeric value fire first. A tag's priority can be a positive or negative value. The default value is 0. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "$ref": "Parameter"
        },
        "blockingTriggerId": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Blocking trigger IDs. If any of the listed triggers evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "name": {
          "type": "string",
          "description": "Tag display name. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update"
            ]
          }
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        },
        "scheduleEndMs": {
          "description": "The end timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "format": "int64",
          "type": "string"
        },
        "type": {
          "description": "GTM Tag Type. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update"
            ]
          },
          "type": "string"
        },
        "tagFiringOption": {
          "enum": [
            "tagFiringOptionUnspecified",
            "unlimited",
            "oncePerEvent",
            "oncePerLoad"
          ],
          "description": "Option to fire this tag.",
          "type": "string",
          "enumDescriptions": [
            "",
            "Tag can be fired multiple times per event.",
            "Tag can only be fired per event but can be fired multiple times per load (e.g., app load or page load).",
            "Tag can only be fired per load (e.g., app load or page load)."
          ]
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "monitoringMetadataTagNameKey": {
          "type": "string",
          "description": "If non-empty, then the tag display name will be included in the monitoring metadata map using the key specified. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "firingRuleId": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Firing rule IDs. A tag will fire when any of the listed rules are true and all of its blockingRuleIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "monitoringMetadata": {
          "description": "A map of key-value pairs of tag metadata to be included in the event data for tag monitoring. Notes: - This parameter must be type MAP. - Each parameter in the map are type TEMPLATE, however cannot contain variable references. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "$ref": "Parameter"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "paused": {
          "type": "boolean",
          "description": "Indicates whether the tag is paused, which prevents the tag from firing. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "scheduleStartMs": {
          "format": "int64",
          "type": "string",
          "description": "The start timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "blockingRuleId": {
          "description": "Blocking rule IDs. If any of the listed rules evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tagId": {
          "description": "The Tag ID uniquely identifies the GTM Tag.",
          "type": "string"
        },
        "liveOnly": {
          "type": "boolean",
          "description": "If set to true, this tag will only fire in the live environment (e.g. not in preview or debug mode). @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "consentSettings": {
          "$ref": "TagConsentSetting",
          "description": "Consent settings of a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "teardownTag": {
          "type": "array",
          "items": {
            "$ref": "TeardownTag"
          },
          "description": "The list of teardown tags. Currently we only allow one."
        },
        "parameter": {
          "description": "The tag's parameters. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "items": {
            "$ref": "Parameter"
          },
          "type": "array"
        },
        "setupTag": {
          "description": "The list of setup tags. Currently we only allow one.",
          "items": {
            "$ref": "SetupTag"
          },
          "type": "array"
        },
        "path": {
          "description": "GTM Tag's API relative path.",
          "type": "string"
        },
        "firingTriggerId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Firing trigger IDs. A tag will fire when any of the listed triggers are true and all of its blockingTriggerIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Tag as computed at storage time. This value is recomputed whenever the tag is modified.",
          "type": "string"
        }
      }
    },
    "CreateBuiltInVariableResponse": {
      "type": "object",
      "id": "CreateBuiltInVariableResponse",
      "properties": {
        "builtInVariable": {
          "type": "array",
          "items": {
            "$ref": "BuiltInVariable"
          },
          "description": "List of created built-in variables."
        }
      }
    },
    "ContainerVersion": {
      "type": "object",
      "description": "Represents a Google Tag Manager Container Version.",
      "id": "ContainerVersion",
      "properties": {
        "variable": {
          "description": "The variables in the container that this version was taken from.",
          "items": {
            "$ref": "Variable"
          },
          "type": "array"
        },
        "zone": {
          "items": {
            "$ref": "Zone"
          },
          "type": "array",
          "description": "The zones in the container that this version was taken from."
        },
        "containerVersionId": {
          "type": "string",
          "description": "The Container Version ID uniquely identifies the GTM Container Version."
        },
        "folder": {
          "type": "array",
          "items": {
            "$ref": "Folder"
          },
          "description": "The folders in the container that this version was taken from."
        },
        "path": {
          "type": "string",
          "description": "GTM Container Version's API relative path."
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified.",
          "type": "string"
        },
        "builtInVariable": {
          "type": "array",
          "items": {
            "$ref": "BuiltInVariable"
          },
          "description": "The built-in variables in the container that this version was taken from."
        },
        "tag": {
          "description": "The tags in the container that this version was taken from.",
          "type": "array",
          "items": {
            "$ref": "Tag"
          }
        },
        "description": {
          "description": "Container version description. @mutable tagmanager.accounts.containers.versions.update",
          "type": "string"
        },
        "trigger": {
          "items": {
            "$ref": "Trigger"
          },
          "type": "array",
          "description": "The triggers in the container that this version was taken from."
        },
        "name": {
          "type": "string",
          "description": "Container version display name. @mutable tagmanager.accounts.containers.versions.update"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "client": {
          "items": {
            "$ref": "Client"
          },
          "description": "The clients in the container that this version was taken from.",
          "type": "array"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "gtagConfig": {
          "description": "The Google tag configs in the container that this version was taken from.",
          "type": "array",
          "items": {
            "$ref": "GtagConfig"
          }
        },
        "container": {
          "description": "The container that this version was taken from.",
          "$ref": "Container"
        },
        "customTemplate": {
          "type": "array",
          "description": "The custom templates in the container that this version was taken from.",
          "items": {
            "$ref": "CustomTemplate"
          }
        },
        "deleted": {
          "description": "A value of true indicates this container version has been deleted.",
          "type": "boolean"
        }
      }
    },
    "PublishContainerVersionResponse": {
      "properties": {
        "containerVersion": {
          "$ref": "ContainerVersion",
          "description": "The container version created."
        },
        "compilerError": {
          "description": "Compiler errors or not.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Publish container version response.",
      "id": "PublishContainerVersionResponse"
    },
    "FolderEntities": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "array",
          "items": {
            "$ref": "Tag"
          },
          "description": "The list of tags inside the folder."
        },
        "trigger": {
          "description": "The list of triggers inside the folder.",
          "items": {
            "$ref": "Trigger"
          },
          "type": "array"
        },
        "variable": {
          "type": "array",
          "description": "The list of variables inside the folder.",
          "items": {
            "$ref": "Variable"
          }
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "description": "Represents a Google Tag Manager Folder's contents.",
      "id": "FolderEntities"
    },
    "Condition": {
      "id": "Condition",
      "properties": {
        "parameter": {
          "items": {
            "$ref": "Parameter"
          },
          "type": "array",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "description": "A list of named parameters (key/value), depending on the condition's type. Notes: - For binary operators, include parameters named arg0 and arg1 for specifying the left and right operands, respectively. - At this time, the left operand (arg0) must be a reference to a variable. - For case-insensitive Regex matching, include a boolean parameter named ignore_case that is set to true. If not specified or set to any other value, the matching will be case sensitive. - To negate an operator, include a boolean parameter named negate boolean parameter that is set to true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "type": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "NOTE(lanzone): When defining a ConditionType here, don't forget to also define a matching PredicateType (in condition.proto)."
          ],
          "description": "The type of operator for this condition. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "enum": [
            "conditionTypeUnspecified",
            "equals",
            "contains",
            "startsWith",
            "endsWith",
            "matchRegex",
            "greater",
            "greaterOrEquals",
            "less",
            "lessOrEquals",
            "cssSelector",
            "urlMatches"
          ],
          "type": "string"
        }
      },
      "description": "Represents a predicate.",
      "type": "object"
    },
    "BuiltInVariable": {
      "description": "Built-in variables are a special category of variables that are pre-created and non-customizable. They provide common functionality like accessing properties of the gtm data layer, monitoring clicks, or accessing elements of a page URL.",
      "properties": {
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "name": {
          "description": "Name of the built-in variable to be used to refer to the built-in variable.",
          "type": "string"
        },
        "path": {
          "description": "GTM BuiltInVariable's API relative path.",
          "type": "string"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "type": {
          "description": "Type of built-in variable. @required.tagmanager.accounts.containers.workspaces.built_in_variable.update @mutable tagmanager.accounts.containers.workspaces.built_in_variable.update",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "For web or mobile.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "For web or mobile.",
            "",
            "For web or mobile.",
            "For web or mobile.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "builtInVariableTypeUnspecified",
            "pageUrl",
            "pageHostname",
            "pagePath",
            "referrer",
            "event",
            "clickElement",
            "clickClasses",
            "clickId",
            "clickTarget",
            "clickUrl",
            "clickText",
            "firstPartyServingUrl",
            "formElement",
            "formClasses",
            "formId",
            "formTarget",
            "formUrl",
            "formText",
            "errorMessage",
            "errorUrl",
            "errorLine",
            "newHistoryUrl",
            "oldHistoryUrl",
            "newHistoryFragment",
            "oldHistoryFragment",
            "newHistoryState",
            "oldHistoryState",
            "historySource",
            "containerVersion",
            "debugMode",
            "randomNumber",
            "containerId",
            "appId",
            "appName",
            "appVersionCode",
            "appVersionName",
            "language",
            "osVersion",
            "platform",
            "sdkVersion",
            "deviceName",
            "resolution",
            "advertiserId",
            "advertisingTrackingEnabled",
            "htmlId",
            "environmentName",
            "ampBrowserLanguage",
            "ampCanonicalPath",
            "ampCanonicalUrl",
            "ampCanonicalHost",
            "ampReferrer",
            "ampTitle",
            "ampClientId",
            "ampClientTimezone",
            "ampClientTimestamp",
            "ampClientScreenWidth",
            "ampClientScreenHeight",
            "ampClientScrollX",
            "ampClientScrollY",
            "ampClientMaxScrollX",
            "ampClientMaxScrollY",
            "ampTotalEngagedTime",
            "ampPageViewId",
            "ampPageLoadTime",
            "ampPageDownloadTime",
            "ampGtmEvent",
            "eventName",
            "firebaseEventParameterCampaign",
            "firebaseEventParameterCampaignAclid",
            "firebaseEventParameterCampaignAnid",
            "firebaseEventParameterCampaignClickTimestamp",
            "firebaseEventParameterCampaignContent",
            "firebaseEventParameterCampaignCp1",
            "firebaseEventParameterCampaignGclid",
            "firebaseEventParameterCampaignSource",
            "firebaseEventParameterCampaignTerm",
            "firebaseEventParameterCurrency",
            "firebaseEventParameterDynamicLinkAcceptTime",
            "firebaseEventParameterDynamicLinkLinkid",
            "firebaseEventParameterNotificationMessageDeviceTime",
            "firebaseEventParameterNotificationMessageId",
            "firebaseEventParameterNotificationMessageName",
            "firebaseEventParameterNotificationMessageTime",
            "firebaseEventParameterNotificationTopic",
            "firebaseEventParameterPreviousAppVersion",
            "firebaseEventParameterPreviousOsVersion",
            "firebaseEventParameterPrice",
            "firebaseEventParameterProductId",
            "firebaseEventParameterQuantity",
            "firebaseEventParameterValue",
            "videoProvider",
            "videoUrl",
            "videoTitle",
            "videoDuration",
            "videoPercent",
            "videoVisible",
            "videoStatus",
            "videoCurrentTime",
            "scrollDepthThreshold",
            "scrollDepthUnits",
            "scrollDepthDirection",
            "elementVisibilityRatio",
            "elementVisibilityTime",
            "elementVisibilityFirstTime",
            "elementVisibilityRecentTime",
            "requestPath",
            "requestMethod",
            "clientName",
            "queryString",
            "serverPageLocationUrl",
            "serverPageLocationPath",
            "serverPageLocationHostname"
          ]
        }
      },
      "type": "object",
      "id": "BuiltInVariable"
    },
    "VariableFormatValue": {
      "type": "object",
      "id": "VariableFormatValue",
      "properties": {
        "convertTrueToValue": {
          "$ref": "Parameter",
          "description": "The value to convert if a variable value is true."
        },
        "convertUndefinedToValue": {
          "$ref": "Parameter",
          "description": "The value to convert if a variable value is undefined."
        },
        "convertFalseToValue": {
          "$ref": "Parameter",
          "description": "The value to convert if a variable value is false."
        },
        "convertNullToValue": {
          "description": "The value to convert if a variable value is null.",
          "$ref": "Parameter"
        },
        "caseConversionType": {
          "enum": [
            "none",
            "lowercase",
            "uppercase"
          ],
          "enumDescriptions": [
            "",
            "The option to convert a variable value to lowercase.",
            "The option to convert a variable value to uppercase."
          ],
          "description": "The option to convert a string-type variable value to either lowercase or uppercase.",
          "type": "string"
        }
      }
    },
    "AccountAccess": {
      "description": "Defines the Google Tag Manager Account access permissions.",
      "properties": {
        "permission": {
          "description": "Whether the user has no access, user access, or admin access to an account. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "enum": [
            "accountPermissionUnspecified",
            "noAccess",
            "user",
            "admin"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        }
      },
      "type": "object",
      "id": "AccountAccess"
    },
    "Destination": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Destination's API relative path."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "name": {
          "type": "string",
          "description": "Destination display name."
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI."
        },
        "destinationLinkId": {
          "description": "The Destination link ID uniquely identifies the Destination.",
          "type": "string"
        },
        "destinationId": {
          "description": "Destination ID.",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the Google Tag Destination as computed at storage time. This value is recomputed whenever the destination is modified."
        }
      },
      "id": "Destination",
      "description": "Represents a Google Tag Destination."
    },
    "Workspace": {
      "description": "Represents a Google Tag Manager Container Workspace.",
      "type": "object",
      "id": "Workspace",
      "properties": {
        "name": {
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.create",
              "tagmanager.accounts.containers.workspaces.update"
            ]
          },
          "description": "Workspace display name. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Workspace description. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Workspace as computed at storage time. This value is recomputed whenever the workspace is modified.",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "workspaceId": {
          "type": "string",
          "description": "The Workspace ID uniquely identifies the GTM Workspace."
        },
        "path": {
          "description": "GTM Workspace's API relative path.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        }
      }
    },
    "ListEnvironmentsResponse": {
      "description": "List Environments Response.",
      "id": "ListEnvironmentsResponse",
      "properties": {
        "environment": {
          "items": {
            "$ref": "Environment"
          },
          "description": "All Environments of a GTM Container.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Variable": {
      "id": "Variable",
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Variable as computed at storage time. This value is recomputed whenever the variable is modified."
        },
        "notes": {
          "description": "User notes on how to apply this variable in the container. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "string"
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        },
        "variableId": {
          "description": "The Variable ID uniquely identifies the GTM Variable.",
          "type": "string"
        },
        "scheduleEndMs": {
          "format": "int64",
          "type": "string",
          "description": "The end timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "scheduleStartMs": {
          "format": "int64",
          "type": "string",
          "description": "The start timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "formatValue": {
          "description": "Option to convert a variable value to other value.",
          "$ref": "VariableFormatValue"
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "description": "Variable display name. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "disablingTriggerId": {
          "items": {
            "type": "string"
          },
          "description": "For mobile containers only: A list of trigger IDs for disabling conditional variables; the variable is enabled if one of the enabling trigger is true while all the disabling trigger are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "array"
        },
        "parameter": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "The variable's parameters. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "path": {
          "description": "GTM Variable's API relative path.",
          "type": "string"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "description": "GTM Variable Type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "enablingTriggerId": {
          "description": "For mobile containers only: A list of trigger IDs for enabling conditional variables; the variable is enabled if one of the enabling triggers is true while all the disabling triggers are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Represents a Google Tag Manager Variable.",
      "type": "object"
    }
  },
  "batchPath": "batch",
  "canonicalName": "Tag Manager",
  "servicePath": "",
  "name": "tagmanager",
  "ownerName": "Google",
  "protocol": "rest"
}

{
  "basePath": "",
  "baseUrl": "https://tagmanager.googleapis.com/",
  "title": "Tag Manager API",
  "ownerDomain": "google.com",
  "parameters": {
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean",
      "default": "true"
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ]
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "location": "query",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    }
  },
  "version": "v2",
  "revision": "20210602",
  "description": "This API allows clients to access and modify container and tag configuration.",
  "schemas": {
    "Entity": {
      "id": "Entity",
      "properties": {
        "tag": {
          "description": "The tag being represented by the entity.",
          "$ref": "Tag"
        },
        "folder": {
          "description": "The folder being represented by the entity.",
          "$ref": "Folder"
        },
        "trigger": {
          "$ref": "Trigger",
          "description": "The trigger being represented by the entity."
        },
        "changeStatus": {
          "enumDescriptions": [
            "",
            "The entity has never been changed.",
            "The entity is added to the workspace.",
            "The entity is deleted from the workspace.",
            "The entity has been updated in the workspace."
          ],
          "enum": [
            "changeStatusUnspecified",
            "none",
            "added",
            "deleted",
            "updated"
          ],
          "description": "Represents how the entity has been changed in the workspace.",
          "type": "string"
        },
        "client": {
          "description": "The client being represented by the entity.",
          "$ref": "Client"
        },
        "variable": {
          "description": "The variable being represented by the entity.",
          "$ref": "Variable"
        }
      },
      "description": "A workspace entity that may represent a tag, trigger, variable, or folder in addition to its status in the workspace.",
      "type": "object"
    },
    "RevertBuiltInVariableResponse": {
      "type": "object",
      "id": "RevertBuiltInVariableResponse",
      "description": "The result of reverting a built-in variable in a workspace.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the built-in variable is enabled after reversion."
        }
      }
    },
    "ZoneBoundary": {
      "type": "object",
      "description": "Represents a Zone's boundaries.",
      "id": "ZoneBoundary",
      "properties": {
        "condition": {
          "items": {
            "$ref": "Condition"
          },
          "description": "The conditions that, when conjoined, make up the boundary.",
          "type": "array"
        },
        "customEvaluationTriggerId": {
          "items": {
            "type": "string"
          },
          "description": "Custom evaluation trigger IDs. A zone will evaluate its boundary conditions when any of the listed triggers are true.",
          "type": "array"
        }
      }
    },
    "Parameter": {
      "type": "object",
      "id": "Parameter",
      "properties": {
        "key": {
          "type": "string",
          "description": "The named key that uniquely identifies a parameter. Required for top-level parameters, as well as map values. Ignored for list values. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "value": {
          "description": "A parameter's value (may contain variable references such as \"{{myVariable}}\") as appropriate to the specified type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string"
        },
        "type": {
          "description": "The parameter type. Valid values are: - boolean: The value represents a boolean, represented as 'true' or 'false' - integer: The value represents a 64-bit signed integer value, in base 10 - list: A list of parameters should be specified - map: A map of parameters should be specified - template: The value represents any text; this can include variable references (even variable references that might return non-string types) - trigger_reference: The value represents a trigger, represented as the trigger id - tag_reference: The value represents a tag, represented as the tag name @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "enum": [
            "typeUnspecified",
            "template",
            "integer",
            "boolean",
            "list",
            "map",
            "triggerReference",
            "tagReference"
          ],
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update",
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update",
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "enumDescriptions": [
            "",
            "May include variable references (such as \"{{myVariable}}\").",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "map": {
          "type": "array",
          "items": {
            "$ref": "Parameter"
          },
          "description": "This map parameter's parameters (must have keys; keys must be unique). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "list": {
          "description": "This list parameter's parameters (keys will be ignored). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        }
      },
      "description": "Represents a Google Tag Manager Parameter."
    },
    "ListTemplatesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "template": {
          "description": "All GTM Custom Templates of a GTM Container.",
          "type": "array",
          "items": {
            "$ref": "CustomTemplate"
          }
        }
      },
      "id": "ListTemplatesResponse",
      "type": "object"
    },
    "Variable": {
      "id": "Variable",
      "properties": {
        "type": {
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "description": "GTM Variable Type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        },
        "scheduleEndMs": {
          "format": "int64",
          "description": "The end timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "string"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Variable as computed at storage time. This value is recomputed whenever the variable is modified."
        },
        "name": {
          "description": "Variable display name. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.variables.create",
              "tagmanager.accounts.containers.workspaces.variables.update"
            ]
          },
          "type": "string"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "variableId": {
          "description": "The Variable ID uniquely identifies the GTM Variable.",
          "type": "string"
        },
        "scheduleStartMs": {
          "type": "string",
          "description": "The start timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "format": "int64"
        },
        "path": {
          "description": "GTM Variable's API relative path.",
          "type": "string"
        },
        "parentFolderId": {
          "type": "string",
          "description": "Parent folder id."
        },
        "formatValue": {
          "$ref": "VariableFormatValue",
          "description": "Option to convert a variable value to other value."
        },
        "enablingTriggerId": {
          "description": "For mobile containers only: A list of trigger IDs for enabling conditional variables; the variable is enabled if one of the enabling triggers is true while all the disabling triggers are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disablingTriggerId": {
          "type": "array",
          "description": "For mobile containers only: A list of trigger IDs for disabling conditional variables; the variable is enabled if one of the enabling trigger is true while all the disabling trigger are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "items": {
            "type": "string"
          }
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "parameter": {
          "description": "The variable's parameters. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update",
          "items": {
            "$ref": "Parameter"
          },
          "type": "array"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this variable in the container. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"
        }
      },
      "type": "object",
      "description": "Represents a Google Tag Manager Variable."
    },
    "ListAccountsResponse": {
      "type": "object",
      "description": "List Accounts Response.",
      "properties": {
        "account": {
          "type": "array",
          "description": "List of GTM Accounts that a user has access to.",
          "items": {
            "$ref": "Account"
          }
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "id": "ListAccountsResponse"
    },
    "GetWorkspaceStatusResponse": {
      "type": "object",
      "id": "GetWorkspaceStatusResponse",
      "description": "The changes that have occurred in the workspace since the base container version.",
      "properties": {
        "mergeConflict": {
          "items": {
            "$ref": "MergeConflict"
          },
          "description": "The merge conflict after sync.",
          "type": "array"
        },
        "workspaceChange": {
          "description": "Entities that have been changed in the workspace.",
          "type": "array",
          "items": {
            "$ref": "Entity"
          }
        }
      }
    },
    "QuickPreviewResponse": {
      "id": "QuickPreviewResponse",
      "type": "object",
      "description": "Response to quick previewing a workspace.",
      "properties": {
        "containerVersion": {
          "$ref": "ContainerVersion",
          "description": "The quick previewed container version."
        },
        "compilerError": {
          "description": "Were there compiler errors or not.",
          "type": "boolean"
        },
        "syncStatus": {
          "description": "Whether quick previewing failed when syncing the workspace to the latest container version.",
          "$ref": "SyncStatus"
        }
      }
    },
    "ZoneChildContainer": {
      "type": "object",
      "description": "Represents a child container of a Zone.",
      "properties": {
        "nickname": {
          "description": "The zone's nickname for the child container.",
          "type": "string"
        },
        "publicId": {
          "description": "The child container's public id.",
          "type": "string"
        }
      },
      "id": "ZoneChildContainer"
    },
    "CreateContainerVersionRequestVersionOptions": {
      "properties": {
        "name": {
          "description": "The name of the container version to be created.",
          "type": "string"
        },
        "notes": {
          "type": "string",
          "description": "The notes of the container version to be created."
        }
      },
      "description": "Options for new container versions.",
      "type": "object",
      "id": "CreateContainerVersionRequestVersionOptions"
    },
    "Account": {
      "type": "object",
      "id": "Account",
      "properties": {
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Account as computed at storage time. This value is recomputed whenever the account is modified."
        },
        "name": {
          "description": "Account display name. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update",
          "type": "string"
        },
        "path": {
          "description": "GTM Account's API relative path.",
          "type": "string"
        },
        "accountId": {
          "description": "The Account ID uniquely identifies the GTM Account.",
          "type": "string"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "shareData": {
          "type": "boolean",
          "description": "Whether the account shares data anonymously with Google and others. This flag enables benchmarking by sharing your data in an anonymous form. Google will remove all identifiable information about your website, combine the data with hundreds of other anonymous sites and report aggregate trends in the benchmarking service. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update"
        }
      },
      "description": "Represents a Google Tag Manager Account."
    },
    "Client": {
      "id": "Client",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The Client ID uniquely identifies the GTM client."
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "priority": {
          "description": "Priority determines relative firing order. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update",
          "format": "int32",
          "type": "integer"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Client type. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"
        },
        "parameter": {
          "items": {
            "$ref": "Parameter"
          },
          "type": "array",
          "description": "The client's parameters. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"
        },
        "path": {
          "type": "string",
          "description": "GTM client's API relative path."
        },
        "name": {
          "type": "string",
          "description": "Client display name. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Client as computed at storage time. This value is recomputed whenever the client is modified.",
          "type": "string"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PublishContainerVersionResponse": {
      "id": "PublishContainerVersionResponse",
      "description": "Publish container version response.",
      "properties": {
        "compilerError": {
          "type": "boolean",
          "description": "Compiler errors or not."
        },
        "containerVersion": {
          "description": "The container version created.",
          "$ref": "ContainerVersion"
        }
      },
      "type": "object"
    },
    "RevertTriggerResponse": {
      "description": "The result of reverting a trigger in a workspace.",
      "type": "object",
      "id": "RevertTriggerResponse",
      "properties": {
        "trigger": {
          "description": "Trigger as it appears in the latest container version since the last workspace synchronization operation. If no trigger is present, that means the trigger was deleted in the latest container version.",
          "$ref": "Trigger"
        }
      }
    },
    "ListEnabledBuiltInVariablesResponse": {
      "properties": {
        "builtInVariable": {
          "type": "array",
          "description": "All GTM BuiltInVariables of a GTM container.",
          "items": {
            "$ref": "BuiltInVariable"
          }
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "description": "A list of enabled built-in variables.",
      "type": "object",
      "id": "ListEnabledBuiltInVariablesResponse"
    },
    "Folder": {
      "description": "Represents a Google Tag Manager Folder.",
      "type": "object",
      "id": "Folder",
      "properties": {
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "path": {
          "description": "GTM Folder's API relative path.",
          "type": "string"
        },
        "folderId": {
          "type": "string",
          "description": "The Folder ID uniquely identifies the GTM Folder."
        },
        "notes": {
          "description": "User notes on how to apply this folder in the container. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update",
          "type": "string"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Folder display name. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.folders.create",
              "tagmanager.accounts.containers.workspaces.folders.update"
            ]
          }
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Folder as computed at storage time. This value is recomputed whenever the folder is modified."
        }
      }
    },
    "CreateBuiltInVariableResponse": {
      "properties": {
        "builtInVariable": {
          "type": "array",
          "description": "List of created built-in variables.",
          "items": {
            "$ref": "BuiltInVariable"
          }
        }
      },
      "type": "object",
      "id": "CreateBuiltInVariableResponse"
    },
    "RevertZoneResponse": {
      "type": "object",
      "properties": {
        "zone": {
          "$ref": "Zone",
          "description": "Zone as it appears in the latest container version since the last workspace synchronization operation. If no zone is present, that means the zone was deleted in the latest container version."
        }
      },
      "description": "The result of reverting a zone in a workspace.",
      "id": "RevertZoneResponse"
    },
    "Environment": {
      "id": "Environment",
      "properties": {
        "path": {
          "type": "string",
          "description": "GTM Environment's API relative path."
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM environment as computed at storage time. This value is recomputed whenever the environment is modified.",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "description": {
          "description": "The environment description. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "authorizationTimestamp": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time-stamp for the authorization code."
        },
        "authorizationCode": {
          "type": "string",
          "description": "The environment authorization code."
        },
        "environmentId": {
          "description": "GTM Environment ID uniquely identifies the GTM Environment.",
          "type": "string"
        },
        "containerVersionId": {
          "type": "string",
          "description": "Represents a link to a container version."
        },
        "enableDebug": {
          "description": "Whether or not to enable debug by default for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The environment display name. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.environments.create",
              "tagmanager.accounts.containers.environments.update"
            ]
          }
        },
        "url": {
          "description": "Default preview page url for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "Points to a user defined environment.",
            "Points to the current live container version.",
            "Points to the latest container version.",
            "Automatically managed environment that points to a workspace preview or version created by a workspace."
          ],
          "enum": [
            "user",
            "live",
            "latest",
            "workspace"
          ],
          "type": "string",
          "description": "The type of this environment."
        },
        "workspaceId": {
          "description": "Represents a link to a quick preview of a workspace.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        }
      },
      "description": "Represents a Google Tag Manager Environment. Note that a user can create, delete and update environments of type USER, but can only update the enable_debug and url fields of environments of other types.",
      "type": "object"
    },
    "ZoneTypeRestriction": {
      "type": "object",
      "id": "ZoneTypeRestriction",
      "description": "Represents a Zone's type restrictions.",
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "True if type restrictions have been enabled for this Zone."
        },
        "whitelistedTypeId": {
          "items": {
            "type": "string"
          },
          "description": "List of type public ids that have been whitelisted for use in this Zone.",
          "type": "array"
        }
      }
    },
    "RevertFolderResponse": {
      "properties": {
        "folder": {
          "description": "Folder as it appears in the latest container version since the last workspace synchronization operation. If no folder is present, that means the folder was deleted in the latest container version.",
          "$ref": "Folder"
        }
      },
      "type": "object",
      "id": "RevertFolderResponse",
      "description": "The result of reverting folder changes in a workspace."
    },
    "SetupTag": {
      "id": "SetupTag",
      "description": "Represents a reference to atag that fires before another tag in order to set up dependencies.",
      "properties": {
        "tagName": {
          "type": "string",
          "description": "The name of the setup tag."
        },
        "stopOnSetupFailure": {
          "description": "If true, fire the main tag if and only if the setup tag fires successfully. If false, fire the main tag regardless of setup tag firing status.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MergeConflict": {
      "description": "Represents a merge conflict.",
      "id": "MergeConflict",
      "type": "object",
      "properties": {
        "entityInBaseVersion": {
          "description": "The base version entity (since the latest sync operation) that has conflicting changes compared to the workspace. If this field is missing, it means the workspace entity is deleted from the base version.",
          "$ref": "Entity"
        },
        "entityInWorkspace": {
          "$ref": "Entity",
          "description": "The workspace entity that has conflicting changes compared to the base version. If an entity is deleted in a workspace, it will still appear with a deleted change status."
        }
      }
    },
    "BuiltInVariable": {
      "description": "Built-in variables are a special category of variables that are pre-created and non-customizable. They provide common functionality like accessing propeties of the gtm data layer, monitoring clicks, or accessing elements of a page URL.",
      "type": "object",
      "id": "BuiltInVariable",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "type": {
          "type": "string",
          "enum": [
            "builtInVariableTypeUnspecified",
            "pageUrl",
            "pageHostname",
            "pagePath",
            "referrer",
            "event",
            "clickElement",
            "clickClasses",
            "clickId",
            "clickTarget",
            "clickUrl",
            "clickText",
            "firstPartyServingUrl",
            "formElement",
            "formClasses",
            "formId",
            "formTarget",
            "formUrl",
            "formText",
            "errorMessage",
            "errorUrl",
            "errorLine",
            "newHistoryUrl",
            "oldHistoryUrl",
            "newHistoryFragment",
            "oldHistoryFragment",
            "newHistoryState",
            "oldHistoryState",
            "historySource",
            "containerVersion",
            "debugMode",
            "randomNumber",
            "containerId",
            "appId",
            "appName",
            "appVersionCode",
            "appVersionName",
            "language",
            "osVersion",
            "platform",
            "sdkVersion",
            "deviceName",
            "resolution",
            "advertiserId",
            "advertisingTrackingEnabled",
            "htmlId",
            "environmentName",
            "ampBrowserLanguage",
            "ampCanonicalPath",
            "ampCanonicalUrl",
            "ampCanonicalHost",
            "ampReferrer",
            "ampTitle",
            "ampClientId",
            "ampClientTimezone",
            "ampClientTimestamp",
            "ampClientScreenWidth",
            "ampClientScreenHeight",
            "ampClientScrollX",
            "ampClientScrollY",
            "ampClientMaxScrollX",
            "ampClientMaxScrollY",
            "ampTotalEngagedTime",
            "ampPageViewId",
            "ampPageLoadTime",
            "ampPageDownloadTime",
            "ampGtmEvent",
            "eventName",
            "firebaseEventParameterCampaign",
            "firebaseEventParameterCampaignAclid",
            "firebaseEventParameterCampaignAnid",
            "firebaseEventParameterCampaignClickTimestamp",
            "firebaseEventParameterCampaignContent",
            "firebaseEventParameterCampaignCp1",
            "firebaseEventParameterCampaignGclid",
            "firebaseEventParameterCampaignSource",
            "firebaseEventParameterCampaignTerm",
            "firebaseEventParameterCurrency",
            "firebaseEventParameterDynamicLinkAcceptTime",
            "firebaseEventParameterDynamicLinkLinkid",
            "firebaseEventParameterNotificationMessageDeviceTime",
            "firebaseEventParameterNotificationMessageId",
            "firebaseEventParameterNotificationMessageName",
            "firebaseEventParameterNotificationMessageTime",
            "firebaseEventParameterNotificationTopic",
            "firebaseEventParameterPreviousAppVersion",
            "firebaseEventParameterPreviousOsVersion",
            "firebaseEventParameterPrice",
            "firebaseEventParameterProductId",
            "firebaseEventParameterQuantity",
            "firebaseEventParameterValue",
            "videoProvider",
            "videoUrl",
            "videoTitle",
            "videoDuration",
            "videoPercent",
            "videoVisible",
            "videoStatus",
            "videoCurrentTime",
            "scrollDepthThreshold",
            "scrollDepthUnits",
            "scrollDepthDirection",
            "elementVisibilityRatio",
            "elementVisibilityTime",
            "elementVisibilityFirstTime",
            "elementVisibilityRecentTime",
            "requestPath",
            "requestMethod",
            "clientName",
            "queryString"
          ],
          "description": "Type of built-in variable. @required.tagmanager.accounts.containers.workspaces.built_in_variable.update @mutable tagmanager.accounts.containers.workspaces.built_in_variable.update",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "For web or mobile.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "For web or mobile.",
            "",
            "For web or mobile.",
            "For web or mobile.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "name": {
          "description": "Name of the built-in variable to be used to refer to the built-in variable.",
          "type": "string"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "path": {
          "description": "GTM BuiltInVariable's API relative path.",
          "type": "string"
        }
      }
    },
    "ListFoldersResponse": {
      "properties": {
        "folder": {
          "description": "All GTM Folders of a GTM Container.",
          "items": {
            "$ref": "Folder"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "type": "object",
      "description": "List Folders Response.",
      "id": "ListFoldersResponse"
    },
    "ListTriggersResponse": {
      "id": "ListTriggersResponse",
      "properties": {
        "trigger": {
          "items": {
            "$ref": "Trigger"
          },
          "type": "array",
          "description": "All GTM Triggers of a GTM Container."
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "List triggers response."
    },
    "SyncStatus": {
      "type": "object",
      "description": "The status of a workspace after synchronization.",
      "properties": {
        "mergeConflict": {
          "description": "Synchornization operation detected a merge conflict.",
          "type": "boolean"
        },
        "syncError": {
          "type": "boolean",
          "description": "An error occurred during the synchronization operation."
        }
      },
      "id": "SyncStatus"
    },
    "RevertTemplateResponse": {
      "properties": {
        "template": {
          "$ref": "CustomTemplate",
          "description": "Template as it appears in the latest container version since the last workspace synchronization operation. If no template is present, that means the template was deleted in the latest container version."
        }
      },
      "type": "object",
      "id": "RevertTemplateResponse",
      "description": "The result of reverting a template in a workspace."
    },
    "Condition": {
      "description": "Represents a predicate.",
      "type": "object",
      "id": "Condition",
      "properties": {
        "type": {
          "description": "The type of operator for this condition. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "NOTE(lanzone): When defining a ConditionType here, don't forget to also define a matching PredicateType (in condition.proto)."
          ],
          "type": "string",
          "enum": [
            "conditionTypeUnspecified",
            "equals",
            "contains",
            "startsWith",
            "endsWith",
            "matchRegex",
            "greater",
            "greaterOrEquals",
            "less",
            "lessOrEquals",
            "cssSelector",
            "urlMatches"
          ]
        },
        "parameter": {
          "items": {
            "$ref": "Parameter"
          },
          "type": "array",
          "description": "A list of named parameters (key/value), depending on the condition's type. Notes: - For binary operators, include parameters named arg0 and arg1 for specifying the left and right operands, respectively. - At this time, the left operand (arg0) must be a reference to a variable. - For case-insensitive Regex matching, include a boolean parameter named ignore_case that is set to true. If not specified or set to any other value, the matching will be case sensitive. - To negate an operator, include a boolean parameter named negate boolean parameter that is set to true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          }
        }
      }
    },
    "VariableFormatValue": {
      "type": "object",
      "id": "VariableFormatValue",
      "properties": {
        "convertFalseToValue": {
          "$ref": "Parameter",
          "description": "The value to convert if a variable value is false."
        },
        "convertUndefinedToValue": {
          "description": "The value to convert if a variable value is undefined.",
          "$ref": "Parameter"
        },
        "convertNullToValue": {
          "$ref": "Parameter",
          "description": "The value to convert if a variable value is null."
        },
        "convertTrueToValue": {
          "$ref": "Parameter",
          "description": "The value to convert if a variable value is true."
        },
        "caseConversionType": {
          "enumDescriptions": [
            "",
            "The option to convert a variable value to lowercase.",
            "The option to convert a variable value to uppercase."
          ],
          "description": "The option to convert a string-type variable value to either lowercase or uppercase.",
          "enum": [
            "none",
            "lowercase",
            "uppercase"
          ],
          "type": "string"
        }
      }
    },
    "ListContainersResponse": {
      "type": "object",
      "properties": {
        "container": {
          "type": "array",
          "items": {
            "$ref": "Container"
          },
          "description": "All Containers of a GTM Account."
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "description": "List Containers Response.",
      "id": "ListContainersResponse"
    },
    "ListVariablesResponse": {
      "description": "List Variables Response.",
      "type": "object",
      "id": "ListVariablesResponse",
      "properties": {
        "variable": {
          "items": {
            "$ref": "Variable"
          },
          "description": "All GTM Variables of a GTM Container.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      }
    },
    "Zone": {
      "id": "Zone",
      "type": "object",
      "description": "Represents a Google Tag Manager Zone's contents.",
      "properties": {
        "boundary": {
          "$ref": "ZoneBoundary",
          "description": "This Zone's boundary."
        },
        "path": {
          "type": "string",
          "description": "GTM Zone's API relative path."
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "zoneId": {
          "type": "string",
          "description": "The Zone ID uniquely identifies the GTM Zone."
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "typeRestriction": {
          "description": "This Zone's type restrictions.",
          "$ref": "ZoneTypeRestriction"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this zone in the container."
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Zone as computed at storage time. This value is recomputed whenever the zone is modified."
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Zone display name."
        },
        "childContainer": {
          "description": "Containers that are children of this Zone.",
          "type": "array",
          "items": {
            "$ref": "ZoneChildContainer"
          }
        }
      }
    },
    "RevertVariableResponse": {
      "id": "RevertVariableResponse",
      "type": "object",
      "description": "The result of reverting a variable in a workspace.",
      "properties": {
        "variable": {
          "description": "Variable as it appears in the latest container version since the last workspace synchronization operation. If no variable is present, that means the variable was deleted in the latest container version.",
          "$ref": "Variable"
        }
      }
    },
    "ListUserPermissionsResponse": {
      "id": "ListUserPermissionsResponse",
      "description": "List user permissions response.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "userPermission": {
          "items": {
            "$ref": "UserPermission"
          },
          "type": "array",
          "description": "All GTM UserPermissions of a GTM Account."
        }
      }
    },
    "CustomTemplate": {
      "id": "CustomTemplate",
      "properties": {
        "galleryReference": {
          "description": "A reference to the Community Template Gallery entry.",
          "$ref": "GalleryReference"
        },
        "name": {
          "type": "string",
          "description": "Custom Template display name."
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "templateData": {
          "type": "string",
          "description": "The custom template in text format."
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "path": {
          "description": "GTM Custom Template's API relative path.",
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Custom Template as computed at storage time. This value is recomputed whenever the template is modified."
        },
        "templateId": {
          "description": "The Custom Template ID uniquely identifies the GTM custom template.",
          "type": "string"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        }
      },
      "description": "Represents a Google Tag Manager Custom Template's contents.",
      "type": "object"
    },
    "ListTagsResponse": {
      "description": "List Tags Response.",
      "id": "ListTagsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "tag": {
          "type": "array",
          "description": "All GTM Tags of a GTM Container.",
          "items": {
            "$ref": "Tag"
          }
        }
      },
      "type": "object"
    },
    "ContainerAccess": {
      "properties": {
        "permission": {
          "type": "string",
          "description": "List of Container permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "containerPermissionUnspecified",
            "noAccess",
            "read",
            "edit",
            "approve",
            "publish"
          ]
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update"
        }
      },
      "description": "Defines the Google Tag Manager Container access permissions.",
      "id": "ContainerAccess",
      "type": "object"
    },
    "AccountAccess": {
      "description": "Defines the Google Tag Manager Account access permissions.",
      "type": "object",
      "id": "AccountAccess",
      "properties": {
        "permission": {
          "type": "string",
          "description": "Whether the user has no access, user access, or admin access to an account. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "accountPermissionUnspecified",
            "noAccess",
            "user",
            "admin"
          ]
        }
      }
    },
    "TeardownTag": {
      "description": "Represents a tag that fires after another tag in order to tear down dependencies.",
      "type": "object",
      "properties": {
        "tagName": {
          "type": "string",
          "description": "The name of the teardown tag."
        },
        "stopTeardownOnFailure": {
          "description": "If true, fire the teardown tag if and only if the main tag fires successfully. If false, fire the teardown tag regardless of main tag firing status.",
          "type": "boolean"
        }
      },
      "id": "TeardownTag"
    },
    "Container": {
      "id": "Container",
      "properties": {
        "fingerprint": {
          "description": "The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified.",
          "type": "string"
        },
        "notes": {
          "type": "string",
          "description": "Container Notes. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update"
        },
        "publicId": {
          "type": "string",
          "description": "Container Public ID."
        },
        "domainName": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of domain names associated with the Container. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update"
        },
        "name": {
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.create"
            ]
          },
          "description": "Container display name. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update"
        },
        "path": {
          "description": "GTM Container's API relative path.",
          "type": "string"
        },
        "usageContext": {
          "items": {
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string",
            "enum": [
              "usageContextUnspecified",
              "web",
              "android",
              "ios",
              "androidSdk5",
              "iosSdk5",
              "amp",
              "server"
            ]
          },
          "type": "array",
          "description": "List of Usage Contexts for the Container. Valid values include: web, android, or ios. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.create",
              "tagmanager.accounts.containers.update"
            ]
          }
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "containerId": {
          "type": "string",
          "description": "The Container ID uniquely identifies the GTM Container."
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        }
      },
      "description": "Represents a Google Tag Manager Container, which specifies the platform tags will run on, manages workspaces, and retains container versions.",
      "type": "object"
    },
    "FolderEntities": {
      "description": "Represents a Google Tag Manager Folder's contents.",
      "type": "object",
      "id": "FolderEntities",
      "properties": {
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        },
        "variable": {
          "items": {
            "$ref": "Variable"
          },
          "description": "The list of variables inside the folder.",
          "type": "array"
        },
        "trigger": {
          "description": "The list of triggers inside the folder.",
          "items": {
            "$ref": "Trigger"
          },
          "type": "array"
        },
        "tag": {
          "items": {
            "$ref": "Tag"
          },
          "description": "The list of tags inside the folder.",
          "type": "array"
        }
      }
    },
    "RevertTagResponse": {
      "id": "RevertTagResponse",
      "description": "The result of reverting a tag in a workspace.",
      "type": "object",
      "properties": {
        "tag": {
          "$ref": "Tag",
          "description": "Tag as it appears in the latest container version since the last workspace synchronization operation. If no tag is present, that means the tag was deleted in the latest container version."
        }
      }
    },
    "ContainerVersion": {
      "type": "object",
      "properties": {
        "containerVersionId": {
          "type": "string",
          "description": "The Container Version ID uniquely identifies the GTM Container Version."
        },
        "trigger": {
          "type": "array",
          "items": {
            "$ref": "Trigger"
          },
          "description": "The triggers in the container that this version was taken from."
        },
        "path": {
          "description": "GTM ContainerVersions's API relative path.",
          "type": "string"
        },
        "folder": {
          "type": "array",
          "description": "The folders in the container that this version was taken from.",
          "items": {
            "$ref": "Folder"
          }
        },
        "tag": {
          "description": "The tags in the container that this version was taken from.",
          "type": "array",
          "items": {
            "$ref": "Tag"
          }
        },
        "container": {
          "$ref": "Container",
          "description": "The container that this version was taken from."
        },
        "builtInVariable": {
          "description": "The built-in variables in the container that this version was taken from.",
          "items": {
            "$ref": "BuiltInVariable"
          },
          "type": "array"
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "variable": {
          "description": "The variables in the container that this version was taken from.",
          "type": "array",
          "items": {
            "$ref": "Variable"
          }
        },
        "deleted": {
          "type": "boolean",
          "description": "A value of true indicates this container version has been deleted."
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Container version description. @mutable tagmanager.accounts.containers.versions.update"
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified.",
          "type": "string"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "customTemplate": {
          "description": "The custom templates in the container that this version was taken from.",
          "items": {
            "$ref": "CustomTemplate"
          },
          "type": "array"
        },
        "zone": {
          "description": "The zones in the container that this version was taken from.",
          "type": "array",
          "items": {
            "$ref": "Zone"
          }
        },
        "client": {
          "items": {
            "$ref": "Client"
          },
          "description": "The clients in the container that this version was taken from.",
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "Container version display name. @mutable tagmanager.accounts.containers.versions.update"
        }
      },
      "id": "ContainerVersion",
      "description": "Represents a Google Tag Manager Container Version."
    },
    "ListWorkspacesResponse": {
      "id": "ListWorkspacesResponse",
      "description": "A list of workspaces in a container.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "workspace": {
          "items": {
            "$ref": "Workspace"
          },
          "type": "array",
          "description": "All Workspaces of a GTM Container."
        }
      },
      "type": "object"
    },
    "ListEnvironmentsResponse": {
      "description": "List Environments Response.",
      "id": "ListEnvironmentsResponse",
      "properties": {
        "environment": {
          "items": {
            "$ref": "Environment"
          },
          "description": "All Environments of a GTM Container.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Continuation token for fetching the next page of results.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListContainerVersionsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "containerVersionHeader": {
          "type": "array",
          "items": {
            "$ref": "ContainerVersionHeader"
          },
          "description": "All container version headers of a GTM Container."
        }
      },
      "id": "ListContainerVersionsResponse",
      "description": "List container versions response.",
      "type": "object"
    },
    "Workspace": {
      "properties": {
        "description": {
          "description": "Workspace description. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update",
          "type": "string"
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "GTM Workspace's API relative path."
        },
        "fingerprint": {
          "description": "The fingerprint of the GTM Workspace as computed at storage time. This value is recomputed whenever the workspace is modified.",
          "type": "string"
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "name": {
          "description": "Workspace display name. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update",
          "type": "string",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.create",
              "tagmanager.accounts.containers.workspaces.update"
            ]
          }
        },
        "workspaceId": {
          "type": "string",
          "description": "The Workspace ID uniquely identifies the GTM Workspace."
        }
      },
      "type": "object",
      "id": "Workspace",
      "description": "Represents a Google Tag Manager Container Workspace."
    },
    "GalleryReference": {
      "properties": {
        "host": {
          "description": "The name of the host for the community gallery template.",
          "type": "string"
        },
        "owner": {
          "description": "The name of the owner for the community gallery template.",
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "The version of the community gallery template."
        },
        "isModified": {
          "type": "boolean",
          "description": "If a user has manually edited the community gallery template."
        },
        "repository": {
          "type": "string",
          "description": "The name of the repository for the community gallery template."
        },
        "signature": {
          "type": "string",
          "description": "The signature of the community gallery template as computed at import time. This value is recomputed whenever the template is updated from the gallery."
        }
      },
      "id": "GalleryReference",
      "description": "Represents the link between a custom template and an entry on the Community Template Gallery site.",
      "type": "object"
    },
    "ContainerVersionHeader": {
      "description": "Represents a Google Tag Manager Container Version Header.",
      "properties": {
        "numTags": {
          "type": "string",
          "description": "Number of tags in the container version."
        },
        "numVariables": {
          "description": "Number of variables in the container version.",
          "type": "string"
        },
        "numClients": {
          "description": "Number of clients in the container version.",
          "type": "string"
        },
        "name": {
          "description": "Container version display name.",
          "type": "string"
        },
        "numRules": {
          "description": "Number of rules in the container version.",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "containerId": {
          "description": "GTM Container ID.",
          "type": "string"
        },
        "numTriggers": {
          "description": "Number of triggers in the container version.",
          "type": "string"
        },
        "numZones": {
          "type": "string",
          "description": "Number of zones in the container version."
        },
        "path": {
          "type": "string",
          "description": "GTM Container Versions's API relative path."
        },
        "numMacros": {
          "type": "string",
          "description": "Number of macros in the container version."
        },
        "containerVersionId": {
          "description": "The Container Version ID uniquely identifies the GTM Container Version.",
          "type": "string"
        },
        "numCustomTemplates": {
          "description": "Number of custom templates in the container version.",
          "type": "string"
        },
        "deleted": {
          "description": "A value of true indicates this container version has been deleted.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "ContainerVersionHeader"
    },
    "UserPermission": {
      "properties": {
        "accountAccess": {
          "$ref": "AccountAccess",
          "description": "GTM Account access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update"
        },
        "emailAddress": {
          "type": "string",
          "description": "User's email address. @mutable tagmanager.accounts.permissions.create"
        },
        "path": {
          "type": "string",
          "description": "GTM UserPermission's API relative path."
        },
        "accountId": {
          "type": "string",
          "description": "The Account ID uniquely identifies the GTM Account."
        },
        "containerAccess": {
          "description": "GTM Container access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update",
          "items": {
            "$ref": "ContainerAccess"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Represents a user's permissions to an account and its container.",
      "id": "UserPermission"
    },
    "ListZonesResponse": {
      "id": "ListZonesResponse",
      "properties": {
        "zone": {
          "items": {
            "$ref": "Zone"
          },
          "type": "array",
          "description": "All GTM Zones of a GTM Container."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "type": "object"
    },
    "Tag": {
      "type": "object",
      "id": "Tag",
      "description": "Represents a Google Tag Manager Tag.",
      "properties": {
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "firingRuleId": {
          "items": {
            "type": "string"
          },
          "description": "Firing rule IDs. A tag will fire when any of the listed rules are true and all of its blockingRuleIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array"
        },
        "blockingTriggerId": {
          "items": {
            "type": "string"
          },
          "description": "Blocking trigger IDs. If any of the listed triggers evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "array"
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        },
        "teardownTag": {
          "description": "The list of teardown tags. Currently we only allow one.",
          "items": {
            "$ref": "TeardownTag"
          },
          "type": "array"
        },
        "monitoringMetadataTagNameKey": {
          "description": "If non-empty, then the tag display name will be included in the monitoring metadata map using the key specified. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string"
        },
        "firingTriggerId": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Firing trigger IDs. A tag will fire when any of the listed triggers are true and all of its blockingTriggerIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "setupTag": {
          "type": "array",
          "items": {
            "$ref": "SetupTag"
          },
          "description": "The list of setup tags. Currently we only allow one."
        },
        "blockingRuleId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Blocking rule IDs. If any of the listed rules evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "scheduleEndMs": {
          "format": "int64",
          "description": "The end timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string"
        },
        "paused": {
          "description": "Indicates whether the tag is paused, which prevents the tag from firing. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "boolean"
        },
        "workspaceId": {
          "description": "GTM Workspace ID.",
          "type": "string"
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Tag as computed at storage time. This value is recomputed whenever the tag is modified."
        },
        "tagManagerUrl": {
          "description": "Auto generated link to the tag manager UI",
          "type": "string"
        },
        "type": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update"
            ]
          },
          "description": "GTM Tag Type. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string"
        },
        "liveOnly": {
          "type": "boolean",
          "description": "If set to true, this tag will only fire in the live environment (e.g. not in preview or debug mode). @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "accountId": {
          "description": "GTM Account ID.",
          "type": "string"
        },
        "priority": {
          "$ref": "Parameter",
          "description": "User defined numeric priority of the tag. Tags are fired asynchronously in order of priority. Tags with higher numeric value fire first. A tag's priority can be a positive or negative value. The default value is 0. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "tagFiringOption": {
          "description": "Option to fire this tag.",
          "type": "string",
          "enumDescriptions": [
            "",
            "Tag can be fired multiple times per event.",
            "Tag can only be fired per event but can be fired multiple times per load (e.g., app load or page load).",
            "Tag can only be fired per load (e.g., app load or page load)."
          ],
          "enum": [
            "tagFiringOptionUnspecified",
            "unlimited",
            "oncePerEvent",
            "oncePerLoad"
          ]
        },
        "scheduleStartMs": {
          "type": "string",
          "description": "The start timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "format": "int64"
        },
        "name": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.tags.create",
              "tagmanager.accounts.containers.workspaces.tags.update"
            ]
          },
          "description": "Tag display name. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "type": "string"
        },
        "path": {
          "description": "GTM Tag's API relative path.",
          "type": "string"
        },
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"
        },
        "monitoringMetadata": {
          "description": "A map of key-value pairs of tag metadata to be included in the event data for tag monitoring. Notes: - This parameter must be type MAP. - Each parameter in the map are type TEMPLATE, however cannot contain variable references. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "$ref": "Parameter"
        },
        "tagId": {
          "type": "string",
          "description": "The Tag ID uniquely identifies the GTM Tag."
        },
        "parameter": {
          "type": "array",
          "description": "The tag's parameters. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update",
          "items": {
            "$ref": "Parameter"
          }
        }
      }
    },
    "CreateContainerVersionResponse": {
      "type": "object",
      "description": "Create container versions response.",
      "properties": {
        "newWorkspacePath": {
          "description": "Auto generated workspace path created as a result of version creation. This field should only be populated if the created version was not a quick preview.",
          "type": "string"
        },
        "compilerError": {
          "description": "Compiler errors or not.",
          "type": "boolean"
        },
        "containerVersion": {
          "description": "The container version created.",
          "$ref": "ContainerVersion"
        },
        "syncStatus": {
          "description": "Whether version creation failed when syncing the workspace to the latest container version.",
          "$ref": "SyncStatus"
        }
      },
      "id": "CreateContainerVersionResponse"
    },
    "SyncWorkspaceResponse": {
      "description": "A response after synchronizing the workspace to the latest container version.",
      "id": "SyncWorkspaceResponse",
      "type": "object",
      "properties": {
        "syncStatus": {
          "description": "Indicates whether synchronization caused a merge conflict or sync error.",
          "$ref": "SyncStatus"
        },
        "mergeConflict": {
          "items": {
            "$ref": "MergeConflict"
          },
          "description": "The merge conflict after sync. If this field is not empty, the sync is still treated as successful. But a version cannot be created until all conflicts are resolved.",
          "type": "array"
        }
      }
    },
    "Trigger": {
      "type": "object",
      "properties": {
        "notes": {
          "type": "string",
          "description": "User notes on how to apply this trigger in the container. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "selector": {
          "$ref": "Parameter",
          "description": "A click trigger CSS selector (i.e. \"a\", \"button\" etc.). Only valid for AMP Click trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "verticalScrollPercentageList": {
          "description": "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled vertically. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "type": {
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create"
            ]
          },
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "eventTypeUnspecified",
            "pageview",
            "domReady",
            "windowLoaded",
            "customEvent",
            "triggerGroup",
            "init",
            "consentInit",
            "serverPageview",
            "always",
            "firebaseAppException",
            "firebaseAppUpdate",
            "firebaseCampaign",
            "firebaseFirstOpen",
            "firebaseInAppPurchase",
            "firebaseNotificationDismiss",
            "firebaseNotificationForeground",
            "firebaseNotificationOpen",
            "firebaseNotificationReceive",
            "firebaseOsUpdate",
            "firebaseSessionStart",
            "firebaseUserEngagement",
            "formSubmission",
            "click",
            "linkClick",
            "jsError",
            "historyChange",
            "timer",
            "ampClick",
            "ampTimer",
            "ampScroll",
            "ampVisibility",
            "youTubeVideo",
            "scrollDepth",
            "elementVisibility"
          ],
          "description": "Defines the data layer event that causes this trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "maxTimerLengthSeconds": {
          "$ref": "Parameter",
          "description": "Max time to fire Timer Events (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "waitForTagsTimeout": {
          "$ref": "Parameter",
          "description": "How long to wait (in milliseconds) for tags to fire when 'waits_for_tags' above evaluates to true. Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "workspaceId": {
          "type": "string",
          "description": "GTM Workspace ID."
        },
        "tagManagerUrl": {
          "type": "string",
          "description": "Auto generated link to the tag manager UI"
        },
        "visiblePercentageMax": {
          "description": "A visibility trigger maximum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "horizontalScrollPercentageList": {
          "description": "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled horizontally. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "path": {
          "type": "string",
          "description": "GTM Trigger's API relative path."
        },
        "name": {
          "description": "Trigger display name. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "annotations": {
            "required": [
              "tagmanager.accounts.containers.workspaces.triggers.create",
              "tagmanager.accounts.containers.workspaces.triggers.update"
            ]
          },
          "type": "string"
        },
        "triggerId": {
          "description": "The Trigger ID uniquely identifies the GTM Trigger.",
          "type": "string"
        },
        "uniqueTriggerId": {
          "description": "Globally unique id of the trigger that auto-generates this (a Form Submit, Link Click or Timer listener) if any. Used to make incompatible auto-events work together with trigger filtering based on trigger ids. This value is populated during output generation since the tags implied by triggers don't exist until then. Only valid for Form Submit, Link Click and Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "interval": {
          "$ref": "Parameter",
          "description": "Time between triggering recurring Timer Events (in milliseconds). Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "filter": {
          "description": "The trigger will only fire iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "type": "array",
          "items": {
            "$ref": "Condition"
          }
        },
        "autoEventFilter": {
          "type": "array",
          "description": "Used in the case of auto event tracking. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "items": {
            "$ref": "Condition"
          }
        },
        "eventName": {
          "description": "Name of the GTM event that is fired. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "accountId": {
          "type": "string",
          "description": "GTM Account ID."
        },
        "fingerprint": {
          "type": "string",
          "description": "The fingerprint of the GTM Trigger as computed at storage time. This value is recomputed whenever the trigger is modified."
        },
        "visibilitySelector": {
          "$ref": "Parameter",
          "description": "A visibility trigger CSS selector (i.e. \"#id\"). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "customEventFilter": {
          "description": "Used in the case of custom event, which is fired iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "items": {
            "$ref": "Condition"
          },
          "type": "array"
        },
        "checkValidation": {
          "$ref": "Parameter",
          "description": "Whether or not we should only fire tags if the form submit or link click event is not cancelled by some other event handler (e.g. because of validation). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "parentFolderId": {
          "description": "Parent folder id.",
          "type": "string"
        },
        "parameter": {
          "description": "Additional parameters. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "items": {
            "$ref": "Parameter"
          },
          "type": "array"
        },
        "visiblePercentageMin": {
          "$ref": "Parameter",
          "description": "A visibility trigger minimum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "waitForTags": {
          "$ref": "Parameter",
          "description": "Whether or not we should delay the form submissions or link opening until all of the tags have fired (by preventing the default action and later simulating the default action). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "containerId": {
          "type": "string",
          "description": "GTM Container ID."
        },
        "continuousTimeMinMilliseconds": {
          "description": "A visibility trigger minimum continuous visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "limit": {
          "description": "Limit of the number of GTM events this Timer Trigger will fire. If no limit is set, we will continue to fire GTM events until the user leaves the page. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update",
          "$ref": "Parameter"
        },
        "totalTimeMinMilliseconds": {
          "$ref": "Parameter",
          "description": "A visibility trigger minimum total visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        },
        "intervalSeconds": {
          "$ref": "Parameter",
          "description": "Time between Timer Events to fire (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"
        }
      },
      "description": "Represents a Google Tag Manager Trigger",
      "id": "Trigger"
    }
  },
  "batchPath": "batch",
  "resources": {
    "accounts": {
      "methods": {
        "get": {
          "parameters": {
            "path": {
              "pattern": "^accounts/[^/]+$",
              "location": "path",
              "type": "string",
              "required": true,
              "description": "GTM Accounts's API relative path. Example: accounts/{account_id}"
            }
          },
          "description": "Gets a GTM Account.",
          "path": "tagmanager/v2/{+path}",
          "parameterOrder": [
            "path"
          ],
          "flatPath": "tagmanager/v2/accounts/{accountsId}",
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.edit.containers",
            "https://www.googleapis.com/auth/tagmanager.manage.accounts",
            "https://www.googleapis.com/auth/tagmanager.readonly"
          ],
          "id": "tagmanager.accounts.get",
          "response": {
            "$ref": "Account"
          },
          "httpMethod": "GET"
        },
        "update": {
          "response": {
            "$ref": "Account"
          },
          "flatPath": "tagmanager/v2/accounts/{accountsId}",
          "id": "tagmanager.accounts.update",
          "request": {
            "$ref": "Account"
          },
          "path": "tagmanager/v2/{+path}",
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.manage.accounts"
          ],
          "description": "Updates a GTM Account.",
          "parameters": {
            "fingerprint": {
              "location": "query",
              "type": "string",
              "description": "When provided, this fingerprint must match the fingerprint of the account in storage."
            },
            "path": {
              "type": "string",
              "location": "path",
              "description": "GTM Accounts's API relative path. Example: accounts/{account_id}",
              "pattern": "^accounts/[^/]+$",
              "required": true
            }
          },
          "parameterOrder": [
            "path"
          ],
          "httpMethod": "PUT"
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/tagmanager.edit.containers",
            "https://www.googleapis.com/auth/tagmanager.manage.accounts",
            "https://www.googleapis.com/auth/tagmanager.readonly"
          ],
          "description": "Lists all GTM Accounts that a user has access to.",
          "flatPath": "tagmanager/v2/accounts",
          "path": "tagmanager/v2/accounts",
          "id": "tagmanager.accounts.list",
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Continuation token for fetching the next page of results."
            }
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "response": {
            "$ref": "ListAccountsResponse"
          }
        }
      },
      "resources": {
        "containers": {
          "methods": {
            "list": {
              "path": "tagmanager/v2/{+parent}/containers",
              "id": "tagmanager.accounts.containers.list",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "Continuation token for fetching the next page of results.",
                  "type": "string"
                },
                "parent": {
                  "location": "path",
                  "description": "GTM Accounts's API relative path. Example: accounts/{account_id}.",
                  "required": true,
                  "pattern": "^accounts/[^/]+$",
                  "type": "string"
                }
              },
              "description": "Lists all Containers that belongs to a GTM Account.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ],
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers",
              "response": {
                "$ref": "ListContainersResponse"
              }
            },
            "create": {
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}.",
                  "required": true,
                  "location": "path",
                  "pattern": "^accounts/[^/]+$"
                }
              },
              "response": {
                "$ref": "Container"
              },
              "path": "tagmanager/v2/{+parent}/containers",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "request": {
                "$ref": "Container"
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "id": "tagmanager.accounts.containers.create",
              "description": "Creates a Container."
            },
            "delete": {
              "parameterOrder": [
                "path"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.delete.containers"
              ],
              "description": "Deletes a Container.",
              "id": "tagmanager.accounts.containers.delete",
              "path": "tagmanager/v2/{+path}",
              "httpMethod": "DELETE",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "parameters": {
                "path": {
                  "location": "path",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "type": "string",
                  "required": true,
                  "pattern": "^accounts/[^/]+/containers/[^/]+$"
                }
              }
            },
            "get": {
              "id": "tagmanager.accounts.containers.get",
              "path": "tagmanager/v2/{+path}",
              "parameters": {
                "path": {
                  "required": true,
                  "type": "string",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                  "location": "path",
                  "pattern": "^accounts/[^/]+/containers/[^/]+$"
                }
              },
              "response": {
                "$ref": "Container"
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "httpMethod": "GET",
              "description": "Gets a Container.",
              "parameterOrder": [
                "path"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers",
                "https://www.googleapis.com/auth/tagmanager.readonly"
              ]
            },
            "update": {
              "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.edit.containers"
              ],
              "description": "Updates a Container.",
              "parameters": {
                "fingerprint": {
                  "location": "query",
                  "type": "string",
                  "description": "When provided, this fingerprint must match the fingerprint of the container in storage."
                },
                "path": {
                  "location": "path",
                  "required": true,
                  "pattern": "^accounts/[^/]+/containers/[^/]+$",
                  "type": "string",
                  "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}"
                }
              },
              "id": "tagmanager.accounts.containers.update",
              "request": {
                "$ref": "Container"
              },
              "path": "tagmanager/v2/{+path}",
              "response": {
                "$ref": "Container"
              },
              "parameterOrder": [
                "path"
              ],
              "httpMethod": "PUT"
            }
          },
          "resources": {
            "environments": {
              "methods": {
                "update": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "request": {
                    "$ref": "Environment"
                  },
                  "httpMethod": "PUT",
                  "parameterOrder": [
                    "path"
                  ],
                  "parameters": {
                    "path": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}"
                    },
                    "fingerprint": {
                      "location": "query",
                      "description": "When provided, this fingerprint must match the fingerprint of the environment in storage.",
                      "type": "string"
                    }
                  },
                  "id": "tagmanager.accounts.containers.environments.update",
                  "description": "Updates a GTM Environment.",
                  "response": {
                    "$ref": "Environment"
                  },
                  "path": "tagmanager/v2/{+path}",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}"
                },
                "list": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments",
                  "id": "tagmanager.accounts.containers.environments.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "Continuation token for fetching the next page of results.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+$"
                    }
                  },
                  "description": "Lists all GTM Environments of a GTM Container.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "tagmanager/v2/{+parent}/environments",
                  "response": {
                    "$ref": "ListEnvironmentsResponse"
                  },
                  "httpMethod": "GET"
                },
                "reauthorize": {
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}:reauthorize",
                  "parameters": {
                    "path": {
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "type": "string",
                      "required": true
                    }
                  },
                  "id": "tagmanager.accounts.containers.environments.reauthorize",
                  "httpMethod": "POST",
                  "description": "Re-generates the authorization code for a GTM Environment.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.publish"
                  ],
                  "request": {
                    "$ref": "Environment"
                  },
                  "path": "tagmanager/v2/{+path}:reauthorize",
                  "response": {
                    "$ref": "Environment"
                  }
                },
                "create": {
                  "path": "tagmanager/v2/{+parent}/environments",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Environment"
                  },
                  "description": "Creates a GTM Environment.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "request": {
                    "$ref": "Environment"
                  },
                  "httpMethod": "POST",
                  "id": "tagmanager.accounts.containers.environments.create",
                  "parameters": {
                    "parent": {
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments"
                },
                "get": {
                  "path": "tagmanager/v2/{+path}",
                  "response": {
                    "$ref": "Environment"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameters": {
                    "path": {
                      "type": "string",
                      "location": "path",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$"
                    }
                  },
                  "description": "Gets a GTM Environment.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "id": "tagmanager.accounts.containers.environments.get"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "description": "Deletes a GTM Environment.",
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/environments/{environmentsId}",
                  "path": "tagmanager/v2/{+path}",
                  "id": "tagmanager.accounts.containers.environments.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "path": {
                      "type": "string",
                      "description": "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  }
                }
              }
            },
            "versions": {
              "methods": {
                "update": {
                  "path": "tagmanager/v2/{+path}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "parameters": {
                    "fingerprint": {
                      "location": "query",
                      "description": "When provided, this fingerprint must match the fingerprint of the container version in storage.",
                      "type": "string"
                    },
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "request": {
                    "$ref": "ContainerVersion"
                  },
                  "description": "Updates a Container Version.",
                  "httpMethod": "PUT",
                  "id": "tagmanager.accounts.containers.versions.update"
                },
                "undelete": {
                  "path": "tagmanager/v2/{+path}:undelete",
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:undelete",
                  "description": "Undeletes a Container Version.",
                  "httpMethod": "POST",
                  "parameters": {
                    "path": {
                      "required": true,
                      "location": "path",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"
                    }
                  },
                  "id": "tagmanager.accounts.containers.versions.undelete",
                  "parameterOrder": [
                    "path"
                  ]
                },
                "live": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "id": "tagmanager.accounts.containers.versions.live",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "required": true,
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions:live",
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "description": "Gets the live (i.e. published) container version",
                  "path": "tagmanager/v2/{+parent}/versions:live",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "get": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "path": "tagmanager/v2/{+path}",
                  "description": "Gets a Container Version.",
                  "httpMethod": "GET",
                  "id": "tagmanager.accounts.containers.versions.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameters": {
                    "path": {
                      "required": true,
                      "type": "string",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"
                    },
                    "containerVersionId": {
                      "type": "string",
                      "location": "query",
                      "description": "The GTM ContainerVersion ID. Specify published to retrieve the currently published version."
                    }
                  }
                },
                "publish": {
                  "description": "Publishes a Container Version.",
                  "parameters": {
                    "fingerprint": {
                      "location": "query",
                      "description": "When provided, this fingerprint must match the fingerprint of the container version in storage.",
                      "type": "string"
                    },
                    "path": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "PublishContainerVersionResponse"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:publish",
                  "path": "tagmanager/v2/{+path}:publish",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.publish"
                  ],
                  "parameterOrder": [
                    "path"
                  ],
                  "id": "tagmanager.accounts.containers.versions.publish"
                },
                "set_latest": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}:set_latest",
                  "id": "tagmanager.accounts.containers.versions.set_latest",
                  "parameterOrder": [
                    "path"
                  ],
                  "path": "tagmanager/v2/{+path}:set_latest",
                  "response": {
                    "$ref": "ContainerVersion"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "parameters": {
                    "path": {
                      "required": true,
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Sets the latest version used for synchronization of workspaces when detecting conflicts and errors."
                },
                "delete": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/versions/{versionsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "path": "tagmanager/v2/{+path}",
                  "parameters": {
                    "path": {
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}"
                    }
                  },
                  "id": "tagmanager.accounts.containers.versions.delete",
                  "parameterOrder": [
                    "path"
                  ],
                  "httpMethod": "DELETE",
                  "description": "Deletes a Container Version."
                }
              }
            },
            "workspaces": {
              "resources": {
                "built_in_variables": {
                  "methods": {
                    "delete": {
                      "parameters": {
                        "type": {
                          "location": "query",
                          "description": "The types of built-in variables to delete.",
                          "type": "string",
                          "repeated": true,
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString"
                          ]
                        },
                        "path": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/built_in_variables$",
                          "required": true,
                          "description": "GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables"
                        }
                      },
                      "httpMethod": "DELETE",
                      "description": "Deletes one or more GTM Built-In Variables.",
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.delete",
                      "path": "tagmanager/v2/{+path}",
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables"
                    },
                    "list": {
                      "httpMethod": "GET",
                      "path": "tagmanager/v2/{+parent}/built_in_variables",
                      "response": {
                        "$ref": "ListEnabledBuiltInVariablesResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists all the enabled Built-In Variables of a GTM Container.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.list",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path"
                        },
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query",
                          "type": "string"
                        }
                      }
                    },
                    "revert": {
                      "description": "Reverts changes to a GTM Built-In Variables in a GTM Workspace.",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables:revert",
                      "httpMethod": "POST",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "description": "GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables",
                          "type": "string",
                          "required": true
                        },
                        "type": {
                          "description": "The type of built-in variable to revert.",
                          "location": "query",
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString"
                          ],
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "RevertBuiltInVariableResponse"
                      },
                      "path": "tagmanager/v2/{+path}/built_in_variables:revert"
                    },
                    "create": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/built_in_variables",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "tagmanager/v2/{+parent}/built_in_variables",
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "required": true
                        },
                        "type": {
                          "enumDescriptions": [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "For web or mobile.",
                            "",
                            "For web or mobile.",
                            "For web or mobile.",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ],
                          "type": "string",
                          "repeated": true,
                          "location": "query",
                          "description": "The types of built-in variables to enable.",
                          "enum": [
                            "builtInVariableTypeUnspecified",
                            "pageUrl",
                            "pageHostname",
                            "pagePath",
                            "referrer",
                            "event",
                            "clickElement",
                            "clickClasses",
                            "clickId",
                            "clickTarget",
                            "clickUrl",
                            "clickText",
                            "firstPartyServingUrl",
                            "formElement",
                            "formClasses",
                            "formId",
                            "formTarget",
                            "formUrl",
                            "formText",
                            "errorMessage",
                            "errorUrl",
                            "errorLine",
                            "newHistoryUrl",
                            "oldHistoryUrl",
                            "newHistoryFragment",
                            "oldHistoryFragment",
                            "newHistoryState",
                            "oldHistoryState",
                            "historySource",
                            "containerVersion",
                            "debugMode",
                            "randomNumber",
                            "containerId",
                            "appId",
                            "appName",
                            "appVersionCode",
                            "appVersionName",
                            "language",
                            "osVersion",
                            "platform",
                            "sdkVersion",
                            "deviceName",
                            "resolution",
                            "advertiserId",
                            "advertisingTrackingEnabled",
                            "htmlId",
                            "environmentName",
                            "ampBrowserLanguage",
                            "ampCanonicalPath",
                            "ampCanonicalUrl",
                            "ampCanonicalHost",
                            "ampReferrer",
                            "ampTitle",
                            "ampClientId",
                            "ampClientTimezone",
                            "ampClientTimestamp",
                            "ampClientScreenWidth",
                            "ampClientScreenHeight",
                            "ampClientScrollX",
                            "ampClientScrollY",
                            "ampClientMaxScrollX",
                            "ampClientMaxScrollY",
                            "ampTotalEngagedTime",
                            "ampPageViewId",
                            "ampPageLoadTime",
                            "ampPageDownloadTime",
                            "ampGtmEvent",
                            "eventName",
                            "firebaseEventParameterCampaign",
                            "firebaseEventParameterCampaignAclid",
                            "firebaseEventParameterCampaignAnid",
                            "firebaseEventParameterCampaignClickTimestamp",
                            "firebaseEventParameterCampaignContent",
                            "firebaseEventParameterCampaignCp1",
                            "firebaseEventParameterCampaignGclid",
                            "firebaseEventParameterCampaignSource",
                            "firebaseEventParameterCampaignTerm",
                            "firebaseEventParameterCurrency",
                            "firebaseEventParameterDynamicLinkAcceptTime",
                            "firebaseEventParameterDynamicLinkLinkid",
                            "firebaseEventParameterNotificationMessageDeviceTime",
                            "firebaseEventParameterNotificationMessageId",
                            "firebaseEventParameterNotificationMessageName",
                            "firebaseEventParameterNotificationMessageTime",
                            "firebaseEventParameterNotificationTopic",
                            "firebaseEventParameterPreviousAppVersion",
                            "firebaseEventParameterPreviousOsVersion",
                            "firebaseEventParameterPrice",
                            "firebaseEventParameterProductId",
                            "firebaseEventParameterQuantity",
                            "firebaseEventParameterValue",
                            "videoProvider",
                            "videoUrl",
                            "videoTitle",
                            "videoDuration",
                            "videoPercent",
                            "videoVisible",
                            "videoStatus",
                            "videoCurrentTime",
                            "scrollDepthThreshold",
                            "scrollDepthUnits",
                            "scrollDepthDirection",
                            "elementVisibilityRatio",
                            "elementVisibilityTime",
                            "elementVisibilityFirstTime",
                            "elementVisibilityRecentTime",
                            "requestPath",
                            "requestMethod",
                            "clientName",
                            "queryString"
                          ]
                        }
                      },
                      "description": "Creates one or more GTM Built-In Variables.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "CreateBuiltInVariableResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.built_in_variables.create"
                    }
                  }
                },
                "tags": {
                  "methods": {
                    "get": {
                      "description": "Gets a GTM Tag.",
                      "path": "tagmanager/v2/{+path}",
                      "id": "tagmanager.accounts.containers.workspaces.tags.get",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "required": true,
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "response": {
                        "$ref": "Tag"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "httpMethod": "GET"
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "description": "Lists all GTM Tags of a Container.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListTagsResponse"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.tags.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "tagmanager/v2/{+parent}/tags",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string"
                        },
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags"
                    },
                    "update": {
                      "response": {
                        "$ref": "Tag"
                      },
                      "request": {
                        "$ref": "Tag"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "PUT",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.tags.update",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the tag in storage."
                        },
                        "path": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "description": "Updates a GTM Tag."
                    },
                    "revert": {
                      "description": "Reverts changes to a GTM Tag in a GTM Workspace.",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "required": true,
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$"
                        },
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of thetag in storage."
                        }
                      },
                      "path": "tagmanager/v2/{+path}:revert",
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "RevertTagResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.tags.revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}:revert",
                      "httpMethod": "POST"
                    },
                    "create": {
                      "id": "tagmanager.accounts.containers.workspaces.tags.create",
                      "request": {
                        "$ref": "Tag"
                      },
                      "description": "Creates a GTM Tag.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Tag"
                      },
                      "path": "tagmanager/v2/{+parent}/tags",
                      "parameters": {
                        "parent": {
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      }
                    },
                    "delete": {
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$",
                          "description": "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.tags.delete",
                      "description": "Deletes a GTM Tag.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/tags/{tagsId}",
                      "httpMethod": "DELETE"
                    }
                  }
                },
                "templates": {
                  "methods": {
                    "get": {
                      "id": "tagmanager.accounts.containers.workspaces.templates.get",
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "description": "Gets a GTM Template.",
                      "httpMethod": "GET",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "path": "tagmanager/v2/{+parent}/templates",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListTemplatesResponse"
                      },
                      "parameters": {
                        "pageToken": {
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "description": "Lists all GTM Templates of a GTM container workspace.",
                      "id": "tagmanager.accounts.containers.workspaces.templates.list"
                    },
                    "update": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}"
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the templates in storage.",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "PUT",
                      "parameterOrder": [
                        "path"
                      ],
                      "request": {
                        "$ref": "CustomTemplate"
                      },
                      "description": "Updates a GTM Template.",
                      "id": "tagmanager.accounts.containers.workspaces.templates.update",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}"
                    },
                    "delete": {
                      "parameters": {
                        "path": {
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$"
                        }
                      },
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Deletes a GTM Template.",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.templates.delete",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}"
                    },
                    "create": {
                      "httpMethod": "POST",
                      "description": "Creates a GTM Custom Template.",
                      "response": {
                        "$ref": "CustomTemplate"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "CustomTemplate"
                      },
                      "path": "tagmanager/v2/{+parent}/templates",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.templates.create"
                    },
                    "revert": {
                      "description": "Reverts changes to a GTM Template in a GTM Workspace.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "RevertTemplateResponse"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/templates/{templatesId}:revert",
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+path}:revert",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$",
                          "required": true,
                          "description": "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}"
                        },
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the template in storage.",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.templates.revert"
                    }
                  }
                },
                "variables": {
                  "methods": {
                    "get": {
                      "parameters": {
                        "path": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.variables.get",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "response": {
                        "$ref": "Variable"
                      },
                      "httpMethod": "GET",
                      "description": "Gets a GTM Variable."
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "DELETE",
                      "description": "Deletes a GTM Variable.",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.variables.delete",
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "type": "string"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}"
                    },
                    "list": {
                      "path": "tagmanager/v2/{+parent}/variables",
                      "httpMethod": "GET",
                      "description": "Lists all GTM Variables of a Container.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.variables.list",
                      "response": {
                        "$ref": "ListVariablesResponse"
                      },
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string"
                        },
                        "parent": {
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "create": {
                      "response": {
                        "$ref": "Variable"
                      },
                      "path": "tagmanager/v2/{+parent}/variables",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        }
                      },
                      "description": "Creates a GTM Variable.",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables",
                      "request": {
                        "$ref": "Variable"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.variables.create"
                    },
                    "update": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "description": "Updates a GTM Variable.",
                      "response": {
                        "$ref": "Variable"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.variables.update",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}",
                      "request": {
                        "$ref": "Variable"
                      },
                      "httpMethod": "PUT",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "type": "string"
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the variable in storage.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "path": "tagmanager/v2/{+path}"
                    },
                    "revert": {
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.variables.revert",
                      "path": "tagmanager/v2/{+path}:revert",
                      "response": {
                        "$ref": "RevertVariableResponse"
                      },
                      "parameters": {
                        "path": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$"
                        },
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the variable in storage.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "description": "Reverts changes to a GTM Variable in a GTM Workspace.",
                      "httpMethod": "POST",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/variables/{variablesId}:revert"
                    }
                  }
                },
                "zones": {
                  "methods": {
                    "revert": {
                      "id": "tagmanager.accounts.containers.workspaces.zones.revert",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}:revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+path}:revert",
                      "response": {
                        "$ref": "RevertZoneResponse"
                      },
                      "description": "Reverts changes to a GTM Zone in a GTM Workspace.",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "required": true
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the zone in storage.",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ]
                    },
                    "update": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}",
                      "description": "Updates a GTM Zone.",
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "httpMethod": "PUT",
                      "parameterOrder": [
                        "path"
                      ],
                      "parameters": {
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the zone in storage."
                        },
                        "path": {
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "Zone"
                      },
                      "id": "tagmanager.accounts.containers.workspaces.zones.update",
                      "response": {
                        "$ref": "Zone"
                      }
                    },
                    "delete": {
                      "description": "Deletes a GTM Zone.",
                      "parameters": {
                        "path": {
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.zones.delete",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}",
                      "path": "tagmanager/v2/{+path}"
                    },
                    "create": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones",
                      "request": {
                        "$ref": "Zone"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "response": {
                        "$ref": "Zone"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "description": "Creates a GTM Zone.",
                      "path": "tagmanager/v2/{+parent}/zones",
                      "httpMethod": "POST",
                      "id": "tagmanager.accounts.containers.workspaces.zones.create"
                    },
                    "get": {
                      "description": "Gets a GTM Zone.",
                      "parameters": {
                        "path": {
                          "description": "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "response": {
                        "$ref": "Zone"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones/{zonesId}",
                      "id": "tagmanager.accounts.containers.workspaces.zones.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ]
                    },
                    "list": {
                      "path": "tagmanager/v2/{+parent}/zones",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "type": "string",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query"
                        }
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.zones.list",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/zones",
                      "response": {
                        "$ref": "ListZonesResponse"
                      },
                      "description": "Lists all GTM Zones of a GTM container workspace."
                    }
                  }
                },
                "triggers": {
                  "methods": {
                    "create": {
                      "httpMethod": "POST",
                      "path": "tagmanager/v2/{+parent}/triggers",
                      "parameters": {
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "GTM Workspaces's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                        }
                      },
                      "description": "Creates a GTM Trigger.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.triggers.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers",
                      "response": {
                        "$ref": "Trigger"
                      },
                      "request": {
                        "$ref": "Trigger"
                      }
                    },
                    "delete": {
                      "parameters": {
                        "path": {
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "required": true
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Deletes a GTM Trigger.",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.delete"
                    },
                    "get": {
                      "parameters": {
                        "path": {
                          "type": "string",
                          "location": "path",
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$"
                        }
                      },
                      "id": "tagmanager.accounts.containers.workspaces.triggers.get",
                      "response": {
                        "$ref": "Trigger"
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "path": "tagmanager/v2/{+path}",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameterOrder": [
                        "path"
                      ],
                      "description": "Gets a GTM Trigger.",
                      "httpMethod": "GET"
                    },
                    "update": {
                      "request": {
                        "$ref": "Trigger"
                      },
                      "response": {
                        "$ref": "Trigger"
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.triggers.update",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}",
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$"
                        },
                        "fingerprint": {
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the trigger in storage.",
                          "type": "string"
                        }
                      },
                      "httpMethod": "PUT",
                      "description": "Updates a GTM Trigger."
                    },
                    "list": {
                      "response": {
                        "$ref": "ListTriggersResponse"
                      },
                      "description": "Lists all GTM Triggers of a Container.",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.list",
                      "path": "tagmanager/v2/{+parent}/triggers",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string"
                        },
                        "parent": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path",
                          "description": "GTM Workspaces's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers"
                    },
                    "revert": {
                      "parameters": {
                        "fingerprint": {
                          "location": "query",
                          "type": "string",
                          "description": "When provided, this fingerprint must match the fingerprint of the trigger in storage."
                        },
                        "path": {
                          "description": "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}",
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "RevertTriggerResponse"
                      },
                      "description": "Reverts changes to a GTM Trigger in a GTM Workspace.",
                      "path": "tagmanager/v2/{+path}:revert",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/triggers/{triggersId}:revert",
                      "id": "tagmanager.accounts.containers.workspaces.triggers.revert",
                      "httpMethod": "POST"
                    }
                  }
                },
                "folders": {
                  "methods": {
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "id": "tagmanager.accounts.containers.workspaces.folders.delete",
                      "description": "Deletes a GTM Folder.",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "path": "tagmanager/v2/{+path}",
                      "httpMethod": "DELETE"
                    },
                    "create": {
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.folders.create",
                      "request": {
                        "$ref": "Folder"
                      },
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Folder"
                      },
                      "path": "tagmanager/v2/{+parent}/folders",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a GTM Folder."
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "Continuation token for fetching the next page of results.",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                          "location": "path"
                        }
                      },
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders",
                      "path": "tagmanager/v2/{+parent}/folders",
                      "id": "tagmanager.accounts.containers.workspaces.folders.list",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "description": "Lists all GTM Folders of a Container.",
                      "response": {
                        "$ref": "ListFoldersResponse"
                      }
                    },
                    "move_entities_to_folder": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "parameters": {
                        "variableId": {
                          "description": "The variables to be moved to the folder.",
                          "type": "string",
                          "location": "query",
                          "repeated": true
                        },
                        "path": {
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "tagId": {
                          "repeated": true,
                          "location": "query",
                          "type": "string",
                          "description": "The tags to be moved to the folder."
                        },
                        "triggerId": {
                          "type": "string",
                          "location": "query",
                          "description": "The triggers to be moved to the folder.",
                          "repeated": true
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.folders.move_entities_to_folder",
                      "description": "Moves entities to a GTM Folder.",
                      "path": "tagmanager/v2/{+path}:move_entities_to_folder",
                      "httpMethod": "POST",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:move_entities_to_folder",
                      "request": {
                        "$ref": "Folder"
                      }
                    },
                    "entities": {
                      "parameterOrder": [
                        "path"
                      ],
                      "response": {
                        "$ref": "FolderEntities"
                      },
                      "path": "tagmanager/v2/{+path}:entities",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.folders.entities",
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:entities",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Continuation token for fetching the next page of results.",
                          "type": "string"
                        },
                        "path": {
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "type": "string",
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "location": "path"
                        }
                      },
                      "httpMethod": "POST",
                      "description": "List all entities in a GTM Folder."
                    },
                    "update": {
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "request": {
                        "$ref": "Folder"
                      },
                      "response": {
                        "$ref": "Folder"
                      },
                      "path": "tagmanager/v2/{+path}",
                      "parameters": {
                        "path": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "required": true
                        },
                        "fingerprint": {
                          "type": "string",
                          "location": "query",
                          "description": "When provided, this fingerprint must match the fingerprint of the folder in storage."
                        }
                      },
                      "parameterOrder": [
                        "path"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "httpMethod": "PUT",
                      "id": "tagmanager.accounts.containers.workspaces.folders.update",
                      "description": "Updates a GTM Folder."
                    },
                    "get": {
                      "parameters": {
                        "path": {
                          "required": true,
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.folders.get",
                      "description": "Gets a GTM Folder.",
                      "response": {
                        "$ref": "Folder"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers",
                        "https://www.googleapis.com/auth/tagmanager.readonly"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}",
                      "path": "tagmanager/v2/{+path}"
                    },
                    "revert": {
                      "parameters": {
                        "fingerprint": {
                          "description": "When provided, this fingerprint must match the fingerprint of the tag in storage.",
                          "type": "string",
                          "location": "query"
                        },
                        "path": {
                          "type": "string",
                          "description": "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}",
                          "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "RevertFolderResponse"
                      },
                      "description": "Reverts changes to a GTM Folder in a GTM Workspace.",
                      "scopes": [
                        "https://www.googleapis.com/auth/tagmanager.edit.containers"
                      ],
                      "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/folders/{foldersId}:revert",
                      "path": "tagmanager/v2/{+path}:revert",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "path"
                      ],
                      "id": "tagmanager.accounts.containers.workspaces.folders.revert"
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "description": "Gets a Workspace.",
                  "id": "tagmanager.accounts.containers.workspaces.get",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "parameters": {
                    "path": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Workspace"
                  },
                  "httpMethod": "GET",
                  "path": "tagmanager/v2/{+path}",
                  "parameterOrder": [
                    "path"
                  ]
                },
                "create_version": {
                  "parameters": {
                    "path": {
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Creates a Container Version from the entities present in the workspace, deletes the workspace, and sets the base container version to the newly created version.",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "response": {
                    "$ref": "CreateContainerVersionResponse"
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:create_version",
                  "path": "tagmanager/v2/{+path}:create_version",
                  "id": "tagmanager.accounts.containers.workspaces.create_version",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "CreateContainerVersionRequestVersionOptions"
                  }
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Workspace"
                  },
                  "request": {
                    "$ref": "Workspace"
                  },
                  "path": "tagmanager/v2/{+parent}/workspaces",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.create",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces",
                  "description": "Creates a Workspace."
                },
                "quick_preview": {
                  "path": "tagmanager/v2/{+path}:quick_preview",
                  "response": {
                    "$ref": "QuickPreviewResponse"
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "path": {
                      "required": true,
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "type": "string",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.quick_preview",
                  "description": "Quick previews a workspace by creating a fake container version from all entities in the provided workspace.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:quick_preview"
                },
                "update": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "description": "Updates a Workspace.",
                  "path": "tagmanager/v2/{+path}",
                  "request": {
                    "$ref": "Workspace"
                  },
                  "httpMethod": "PUT",
                  "id": "tagmanager.accounts.containers.workspaces.update",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "parameters": {
                    "fingerprint": {
                      "location": "query",
                      "description": "When provided, this fingerprint must match the fingerprint of the workspace in storage.",
                      "type": "string"
                    },
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                    }
                  },
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "Workspace"
                  }
                },
                "getStatus": {
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}/status",
                  "response": {
                    "$ref": "GetWorkspaceStatusResponse"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "path"
                  ],
                  "path": "tagmanager/v2/{+path}/status",
                  "id": "tagmanager.accounts.containers.workspaces.getStatus",
                  "description": "Finds conflicting and modified entities in the workspace.",
                  "parameters": {
                    "path": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces",
                  "parameters": {
                    "pageToken": {
                      "description": "Continuation token for fetching the next page of results.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "description": "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "id": "tagmanager.accounts.containers.workspaces.list",
                  "description": "Lists all Workspaces that belong to a GTM Container.",
                  "response": {
                    "$ref": "ListWorkspacesResponse"
                  },
                  "path": "tagmanager/v2/{+parent}/workspaces",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "resolve_conflict": {
                  "parameters": {
                    "fingerprint": {
                      "location": "query",
                      "type": "string",
                      "description": "When provided, this fingerprint must match the fingerprint of the entity_in_workspace in the merge conflict."
                    },
                    "path": {
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "Entity"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ],
                  "path": "tagmanager/v2/{+path}:resolve_conflict",
                  "httpMethod": "POST",
                  "description": "Resolves a merge conflict for a workspace entity by updating it to the resolved entity passed in the request.",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:resolve_conflict",
                  "parameterOrder": [
                    "path"
                  ],
                  "id": "tagmanager.accounts.containers.workspaces.resolve_conflict"
                },
                "sync": {
                  "parameters": {
                    "path": {
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"
                    }
                  },
                  "id": "tagmanager.accounts.containers.workspaces.sync",
                  "httpMethod": "POST",
                  "path": "tagmanager/v2/{+path}:sync",
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}:sync",
                  "description": "Syncs a workspace to the latest container version by updating all unmodified workspace entities and displaying conflicts for modified entities.",
                  "parameterOrder": [
                    "path"
                  ],
                  "response": {
                    "$ref": "SyncWorkspaceResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers"
                  ]
                },
                "delete": {
                  "description": "Deletes a Workspace.",
                  "parameters": {
                    "path": {
                      "description": "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}",
                      "pattern": "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.delete.containers"
                  ],
                  "path": "tagmanager/v2/{+path}",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "path"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/workspaces/{workspacesId}",
                  "id": "tagmanager.accounts.containers.workspaces.delete"
                }
              }
            },
            "version_headers": {
              "methods": {
                "latest": {
                  "description": "Gets the latest container version header",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "required": true,
                      "type": "string",
                      "pattern": "^accounts/[^/]+/containers/[^/]+$"
                    }
                  },
                  "path": "tagmanager/v2/{+parent}/version_headers:latest",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers:latest",
                  "id": "tagmanager.accounts.containers.version_headers.latest",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ContainerVersionHeader"
                  }
                },
                "list": {
                  "id": "tagmanager.accounts.containers.version_headers.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/tagmanager.edit.containers",
                    "https://www.googleapis.com/auth/tagmanager.edit.containerversions",
                    "https://www.googleapis.com/auth/tagmanager.readonly"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists all Container Versions of a GTM Container.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListContainerVersionsResponse"
                  },
                  "flatPath": "tagmanager/v2/accounts/{accountsId}/containers/{containersId}/version_headers",
                  "path": "tagmanager/v2/{+parent}/version_headers",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^accounts/[^/]+/containers/[^/]+$",
                      "location": "path",
                      "description": "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "Continuation token for fetching the next page of results.",
                      "location": "query",
                      "type": "string"
                    },
                    "includeDeleted": {
                      "description": "Also retrieve deleted (archived) versions when true.",
                      "location": "query",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "user_permissions": {
          "methods": {
            "update": {
              "description": "Updates a user's Account & Container access.",
              "response": {
                "$ref": "UserPermission"
              },
              "path": "tagmanager/v2/{+path}",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "id": "tagmanager.accounts.user_permissions.update",
              "parameterOrder": [
                "path"
              ],
              "httpMethod": "PUT",
              "parameters": {
                "path": {
                  "required": true,
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}",
                  "type": "string",
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "location": "path"
                }
              },
              "request": {
                "$ref": "UserPermission"
              },
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ]
            },
            "create": {
              "id": "tagmanager.accounts.user_permissions.create",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "response": {
                "$ref": "UserPermission"
              },
              "description": "Creates a user's Account & Container access.",
              "parameters": {
                "parent": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^accounts/[^/]+$",
                  "description": "GTM Account's API relative path. Example: accounts/{account_id}",
                  "required": true
                }
              },
              "path": "tagmanager/v2/{+parent}/user_permissions",
              "request": {
                "$ref": "UserPermission"
              },
              "httpMethod": "POST",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions",
              "parameterOrder": [
                "parent"
              ]
            },
            "delete": {
              "description": "Removes a user from the account, revoking access to it and all of its containers.",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "path": "tagmanager/v2/{+path}",
              "httpMethod": "DELETE",
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "parameters": {
                "path": {
                  "type": "string",
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}"
                }
              },
              "parameterOrder": [
                "path"
              ],
              "id": "tagmanager.accounts.user_permissions.delete"
            },
            "get": {
              "httpMethod": "GET",
              "path": "tagmanager/v2/{+path}",
              "parameters": {
                "path": {
                  "required": true,
                  "location": "path",
                  "pattern": "^accounts/[^/]+/user_permissions/[^/]+$",
                  "type": "string",
                  "description": "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}"
                }
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions/{user_permissionsId}",
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "description": "Gets a user's Account & Container access.",
              "parameterOrder": [
                "path"
              ],
              "id": "tagmanager.accounts.user_permissions.get",
              "response": {
                "$ref": "UserPermission"
              }
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/tagmanager.manage.users"
              ],
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListUserPermissionsResponse"
              },
              "flatPath": "tagmanager/v2/accounts/{accountsId}/user_permissions",
              "path": "tagmanager/v2/{+parent}/user_permissions",
              "parameters": {
                "parent": {
                  "description": "GTM Accounts's API relative path. Example: accounts/{account_id}",
                  "required": true,
                  "type": "string",
                  "pattern": "^accounts/[^/]+$",
                  "location": "path"
                },
                "pageToken": {
                  "description": "Continuation token for fetching the next page of results.",
                  "location": "query",
                  "type": "string"
                }
              },
              "id": "tagmanager.accounts.user_permissions.list",
              "httpMethod": "GET",
              "description": "List all users that have access to the account along with Account and Container user access granted to each of them."
            }
          }
        }
      }
    }
  },
  "id": "tagmanager:v2",
  "mtlsRootUrl": "https://tagmanager.mtls.googleapis.com/",
  "canonicalName": "Tag Manager",
  "documentationLink": "https://developers.google.com/tag-manager",
  "ownerName": "Google",
  "servicePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/tagmanager.edit.containerversions": {
          "description": "Manage your Google Tag Manager container versions"
        },
        "https://www.googleapis.com/auth/tagmanager.manage.accounts": {
          "description": "View and manage your Google Tag Manager accounts"
        },
        "https://www.googleapis.com/auth/tagmanager.delete.containers": {
          "description": "Delete your Google Tag Manager containers"
        },
        "https://www.googleapis.com/auth/tagmanager.edit.containers": {
          "description": "Manage your Google Tag Manager container and its subcomponents, excluding versioning and publishing"
        },
        "https://www.googleapis.com/auth/tagmanager.manage.users": {
          "description": "Manage user permissions of your Google Tag Manager account and container"
        },
        "https://www.googleapis.com/auth/tagmanager.readonly": {
          "description": "View your Google Tag Manager container and its subcomponents"
        },
        "https://www.googleapis.com/auth/tagmanager.publish": {
          "description": "Publish your Google Tag Manager container versions"
        }
      }
    }
  },
  "protocol": "rest",
  "discoveryVersion": "v1",
  "name": "tagmanager",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "rootUrl": "https://tagmanager.googleapis.com/",
  "kind": "discovery#restDescription"
}

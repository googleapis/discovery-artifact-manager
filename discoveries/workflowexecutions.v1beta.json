{
  "batchPath": "batch",
  "parameters": {
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "location": "query",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "default": "json"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    }
  },
  "version_module": true,
  "ownerDomain": "google.com",
  "baseUrl": "https://workflowexecutions.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "workflows": {
              "resources": {
                "executions": {
                  "methods": {
                    "create": {
                      "description": "Creates a new execution using the latest revision of the given workflow.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Execution"
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions",
                      "id": "workflowexecutions.projects.locations.workflows.executions.create",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. Name of the workflow for which an execution should be created. Format: projects/{project}/locations/{location}/workflows/{workflow} The latest revision of the workflow will be used.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workflows/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Execution"
                      },
                      "path": "v1beta/{+parent}/executions"
                    },
                    "list": {
                      "description": "Returns a list of executions which belong to the workflow with the given name. The method returns executions of all workflow revisions. Returned executions are ordered by their start time (newest first).",
                      "response": {
                        "$ref": "ListExecutionsResponse"
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "id": "workflowexecutions.projects.locations.workflows.executions.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageToken": {
                          "description": "A page token, received from a previous `ListExecutions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListExecutions` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "view": {
                          "type": "string",
                          "enumDescriptions": [
                            "The default / unset value.",
                            "Includes only basic metadata about the execution. Following fields are returned: name, start_time, end_time, state and workflow_revision_id.",
                            "Includes all data."
                          ],
                          "description": "Optional. A view defining which fields should be filled in the returned executions. The API will default to the BASIC view.",
                          "location": "query",
                          "enum": [
                            "EXECUTION_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ]
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "format": "int32",
                          "description": "Maximum number of executions to return per call. Max supported value depends on the selected Execution view: it's 10000 for BASIC and 100 for FULL. The default value used if the field is not specified is 100, regardless of the selected view. Values greater than the max value will be coerced down to it."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/workflows/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. Name of the workflow for which the executions should be listed. Format: projects/{project}/locations/{location}/workflows/{workflow}"
                        }
                      },
                      "path": "v1beta/{+parent}/executions"
                    },
                    "get": {
                      "path": "v1beta/{+name}",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions/{executionsId}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/workflows/[^/]+/executions/[^/]+$",
                          "description": "Required. Name of the execution to be retrieved. Format: projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "view": {
                          "description": "Optional. A view defining which fields should be filled in the returned execution. The API will default to the FULL view.",
                          "location": "query",
                          "type": "string",
                          "enum": [
                            "EXECUTION_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "enumDescriptions": [
                            "The default / unset value.",
                            "Includes only basic metadata about the execution. Following fields are returned: name, start_time, end_time, state and workflow_revision_id.",
                            "Includes all data."
                          ]
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Execution"
                      },
                      "httpMethod": "GET",
                      "id": "workflowexecutions.projects.locations.workflows.executions.get",
                      "description": "Returns an execution of the given name.",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "cancel": {
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the execution to be cancelled. Format: projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workflows/[^/]+/executions/[^/]+$",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "Execution"
                      },
                      "httpMethod": "POST",
                      "id": "workflowexecutions.projects.locations.workflows.executions.cancel",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1beta/{+name}:cancel",
                      "description": "Cancels an execution of the given name.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "CancelExecutionRequest"
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions/{executionsId}:cancel"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "mtlsRootUrl": "https://workflowexecutions.mtls.googleapis.com/",
  "name": "workflowexecutions",
  "servicePath": "",
  "version": "v1beta",
  "ownerName": "Google",
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "fullyEncodeReservedExpansion": true,
  "discoveryVersion": "v1",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "basePath": "",
  "schemas": {
    "Status": {
      "description": "Represents the current status of this execution.",
      "id": "Status",
      "properties": {
        "currentSteps": {
          "description": "A list of currently executing or last executed step names for the workflow execution currently running. If the workflow has succeeded or failed, this is the last attempted or executed step. Presently, if the current step is inside a subworkflow, the list only includes that step. In the future, the list will contain items for each step in the call stack, starting with the outermost step in the `main` subworkflow, and ending with the most deeply nested step.",
          "items": {
            "$ref": "Step"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "StackTraceElement": {
      "description": "A single stack element (frame) where an error occurred.",
      "properties": {
        "step": {
          "description": "The step the error occurred at.",
          "type": "string"
        },
        "routine": {
          "type": "string",
          "description": "The routine where the error occurred."
        },
        "position": {
          "$ref": "Position",
          "description": "The source position information of the stack trace element."
        }
      },
      "id": "StackTraceElement",
      "type": "object"
    },
    "ListExecutionsResponse": {
      "type": "object",
      "description": "Response for the ListExecutions method.",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "executions": {
          "type": "array",
          "items": {
            "$ref": "Execution"
          },
          "description": "The executions which match the request."
        }
      },
      "id": "ListExecutionsResponse"
    },
    "Error": {
      "properties": {
        "payload": {
          "type": "string",
          "description": "Error message and data returned represented as a JSON string."
        },
        "context": {
          "description": "Human-readable stack trace string.",
          "type": "string"
        },
        "stackTrace": {
          "description": "Stack trace with detailed information of where error was generated.",
          "$ref": "StackTrace"
        }
      },
      "id": "Error",
      "description": "Error describes why the execution was abnormally terminated.",
      "type": "object"
    },
    "Step": {
      "id": "Step",
      "type": "object",
      "properties": {
        "step": {
          "description": "Name of a step within the routine.",
          "type": "string"
        },
        "routine": {
          "description": "Name of a routine within the workflow.",
          "type": "string"
        }
      },
      "description": "Represents a step of the workflow this execution is running."
    },
    "Execution": {
      "properties": {
        "callLogLevel": {
          "enum": [
            "CALL_LOG_LEVEL_UNSPECIFIED",
            "LOG_ALL_CALLS",
            "LOG_ERRORS_ONLY"
          ],
          "description": "The call logging level associated to this execution.",
          "enumDescriptions": [
            "No call logging level specified.",
            "Log all call steps within workflows, all call returns, and all exceptions raised.",
            "Log only exceptions that are raised from call steps within workflows."
          ],
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource name of the execution. Format: projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}"
        },
        "argument": {
          "description": "Input parameters of the execution represented as a JSON string. The size limit is 32KB. *Note*: If you are using the REST API directly to run your workflow, you must escape any JSON string value of `argument`. Example: `'{\"argument\":\"{\\\"firstName\\\":\\\"FIRST\\\",\\\"lastName\\\":\\\"LAST\\\"}\"}'`",
          "type": "string"
        },
        "workflowRevisionId": {
          "type": "string",
          "description": "Output only. Revision of the workflow this execution is using.",
          "readOnly": true
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Marks the end of execution, successful or not.",
          "readOnly": true
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED",
            "UNAVAILABLE",
            "QUEUED"
          ],
          "readOnly": true,
          "description": "Output only. Current state of the execution.",
          "enumDescriptions": [
            "Invalid state.",
            "The execution is in progress.",
            "The execution finished successfully.",
            "The execution failed with an error.",
            "The execution was stopped intentionally.",
            "Reserved for future use.",
            "Request has been placed in the backlog for processing at a later time."
          ],
          "type": "string"
        },
        "result": {
          "readOnly": true,
          "description": "Output only. Output of the execution represented as a JSON string. The value can only be present if the execution's state is `SUCCEEDED`.",
          "type": "string"
        },
        "status": {
          "readOnly": true,
          "$ref": "Status",
          "description": "Output only. Status tracks the current steps and progress data of this execution."
        },
        "error": {
          "readOnly": true,
          "$ref": "Error",
          "description": "Output only. The error which caused the execution to finish prematurely. The value is only present if the execution's state is `FAILED` or `CANCELLED`."
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Marks the beginning of execution.",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "Execution",
      "description": "A running instance of a [Workflow](/workflows/docs/reference/rest/v1beta/projects.locations.workflows)."
    },
    "Position": {
      "properties": {
        "length": {
          "description": "The number of bytes of source code making up this stack trace element.",
          "type": "string",
          "format": "int64"
        },
        "line": {
          "description": "The source code line number the current instruction was generated from.",
          "type": "string",
          "format": "int64"
        },
        "column": {
          "format": "int64",
          "description": "The source code column position (of the line) the current instruction was generated from.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Position contains source position information about the stack trace element such as line number, column number and length of the code block in bytes.",
      "id": "Position"
    },
    "StackTrace": {
      "type": "object",
      "id": "StackTrace",
      "properties": {
        "elements": {
          "type": "array",
          "description": "An array of stack elements.",
          "items": {
            "$ref": "StackTraceElement"
          }
        }
      },
      "description": "A collection of stack elements (frames) where an error occurred."
    },
    "CancelExecutionRequest": {
      "properties": {},
      "id": "CancelExecutionRequest",
      "type": "object",
      "description": "Request for the CancelExecution method."
    }
  },
  "revision": "20230719",
  "title": "Workflow Executions API",
  "id": "workflowexecutions:v1beta",
  "rootUrl": "https://workflowexecutions.googleapis.com/",
  "documentationLink": "https://cloud.google.com/workflows",
  "canonicalName": "Workflow Executions",
  "description": "Execute workflows created with Workflows API."
}

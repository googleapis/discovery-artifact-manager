{
  "revision": "20220927",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "BigQuery Data Transfer",
  "ownerDomain": "google.com",
  "servicePath": "",
  "kind": "discovery#restDescription",
  "description": "Schedule queries or transfer external data from SaaS applications to Google BigQuery on a regular basis.",
  "batchPath": "batch",
  "id": "bigquerydatatransfer:v1",
  "mtlsRootUrl": "https://bigquerydatatransfer.mtls.googleapis.com/",
  "baseUrl": "https://bigquerydatatransfer.googleapis.com/",
  "title": "BigQuery Data Transfer API",
  "version": "v1",
  "rootUrl": "https://bigquerydatatransfer.googleapis.com/",
  "discoveryVersion": "v1",
  "name": "bigquerydatatransfer",
  "parameters": {
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    }
  },
  "basePath": "",
  "documentationLink": "https://cloud.google.com/bigquery-transfer/",
  "resources": {
    "projects": {
      "resources": {
        "transferConfigs": {
          "methods": {
            "startManualRuns": {
              "response": {
                "$ref": "StartManualTransferRunsResponse"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`."
                }
              },
              "id": "bigquerydatatransfer.projects.transferConfigs.startManualRuns",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "request": {
                "$ref": "StartManualTransferRunsRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}:startManualRuns",
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}:startManualRuns",
              "description": "Start manual transfer runs to be executed now with schedule_time equal to current time. The transfer runs can be created for a time range where the run_time is between start_time (inclusive) and end_time (exclusive), or for a specific run_time."
            },
            "create": {
              "request": {
                "$ref": "TransferConfig"
              },
              "path": "v1/{+parent}/transferConfigs",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "TransferConfig"
              },
              "httpMethod": "POST",
              "description": "Creates a new data transfer configuration.",
              "id": "bigquerydatatransfer.projects.transferConfigs.create",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/transferConfigs",
              "parameters": {
                "versionInfo": {
                  "description": "Optional version info. This is required only if `transferConfig.dataSourceId` is not 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain version info, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=version_info&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to create the transfer config.",
                  "location": "query",
                  "type": "string"
                },
                "authorizationCode": {
                  "type": "string",
                  "description": "Optional OAuth2 authorization code to use with this transfer configuration. This is required only if `transferConfig.dataSourceId` is 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain authorization_code, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=authorization_code&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to create the transfer config.",
                  "location": "query"
                },
                "serviceAccountName": {
                  "location": "query",
                  "description": "Optional service account name. If this field is set, the transfer config will be created with this service account's credentials. It requires that the requesting user calling this API has permissions to act as this service account. Note that not all data sources support service account credentials when creating a transfer config. For the latest list of data sources, read about [using service accounts](https://cloud.google.com/bigquery-transfer/docs/use-service-accounts).",
                  "type": "string"
                },
                "parent": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The BigQuery project id where the transfer configuration should be created. Must be in the format projects/{project_id}/locations/{location_id} or projects/{project_id}. If specified location and location of the destination bigquery dataset do not match - the request will fail.",
                  "pattern": "^projects/[^/]+$",
                  "type": "string"
                }
              }
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "TransferConfig"
              },
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`"
                }
              },
              "description": "Returns information about a data transfer config.",
              "id": "bigquerydatatransfer.projects.transferConfigs.get",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}"
            },
            "delete": {
              "id": "bigquerydatatransfer.projects.transferConfigs.delete",
              "description": "Deletes a data transfer configuration, including any associated transfer runs and logs.",
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`",
                  "required": true
                }
              },
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}",
              "path": "v1/{+name}"
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "ListTransferConfigsResponse"
              },
              "flatPath": "v1/projects/{projectsId}/transferConfigs",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "path": "v1/{+parent}/transferConfigs",
              "description": "Returns information about all transfer configs owned by a project in the specified location.",
              "id": "bigquerydatatransfer.projects.transferConfigs.list",
              "parameters": {
                "dataSourceIds": {
                  "repeated": true,
                  "location": "query",
                  "description": "When specified, only configurations of requested data sources are returned.",
                  "type": "string"
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The BigQuery project id for which transfer configs should be returned: `projects/{project_id}` or `projects/{project_id}/locations/{location_id}`",
                  "required": true
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Page size. The default page size is the maximum value of 1000 results.",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Pagination token, which can be used to request a specific page of `ListTransfersRequest` list results. For multiple-page results, `ListTransfersResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.",
                  "location": "query",
                  "type": "string"
                }
              }
            },
            "patch": {
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "description": "Required. Required list of fields to be updated in this request.",
                  "format": "google-fieldmask"
                },
                "serviceAccountName": {
                  "type": "string",
                  "description": "Optional service account name. If this field is set, the transfer config will be created with this service account's credentials. It requires that the requesting user calling this API has permissions to act as this service account. Note that not all data sources support service account credentials when creating a transfer config. For the latest list of data sources, read about [using service accounts](https://cloud.google.com/bigquery-transfer/docs/use-service-accounts).",
                  "location": "query"
                },
                "authorizationCode": {
                  "description": "Optional OAuth2 authorization code to use with this transfer configuration. This is required only if `transferConfig.dataSourceId` is 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain authorization_code, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=authorization_code&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to update the transfer config.",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "required": true
                },
                "versionInfo": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional version info. This is required only if `transferConfig.dataSourceId` is not 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain version info, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=version_info&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to update the transfer config."
                }
              },
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}",
              "response": {
                "$ref": "TransferConfig"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "TransferConfig"
              },
              "description": "Updates a data transfer configuration. All fields must be set, even if they are not updated.",
              "id": "bigquerydatatransfer.projects.transferConfigs.patch",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH"
            },
            "scheduleRuns": {
              "parameters": {
                "parent": {
                  "description": "Required. Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "httpMethod": "POST",
              "description": "Creates transfer runs for a time range [start_time, end_time]. For each date - or whatever granularity the data source supports - in the range, one transfer run is created. Note that runs are created per UTC time in the time range. DEPRECATED: use StartManualTransferRuns instead.",
              "response": {
                "$ref": "ScheduleTransferRunsResponse"
              },
              "request": {
                "$ref": "ScheduleTransferRunsRequest"
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}:scheduleRuns",
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}:scheduleRuns",
              "id": "bigquerydatatransfer.projects.transferConfigs.scheduleRuns"
            }
          },
          "resources": {
            "runs": {
              "methods": {
                "get": {
                  "description": "Returns information about the particular transfer run.",
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                  "response": {
                    "$ref": "TransferRun"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.get",
                  "parameters": {
                    "name": {
                      "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$"
                    }
                  }
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes the specified transfer run.",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`",
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.delete",
                  "httpMethod": "DELETE"
                },
                "list": {
                  "parameters": {
                    "states": {
                      "description": "When specified, only transfer runs with requested states are returned.",
                      "enum": [
                        "TRANSFER_STATE_UNSPECIFIED",
                        "PENDING",
                        "RUNNING",
                        "SUCCEEDED",
                        "FAILED",
                        "CANCELLED"
                      ],
                      "enumDescriptions": [
                        "State placeholder (0).",
                        "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                        "Data transfer is in progress (3).",
                        "Data transfer completed successfully (4).",
                        "Data transfer failed (5).",
                        "Data transfer is cancelled (6)."
                      ],
                      "repeated": true,
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Page size. The default page size is the maximum value of 1000 results."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Pagination token, which can be used to request a specific page of `ListTransferRunsRequest` list results. For multiple-page results, `ListTransferRunsResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results."
                    },
                    "runAttempt": {
                      "enumDescriptions": [
                        "All runs should be returned.",
                        "Only latest run per day should be returned."
                      ],
                      "description": "Indicates how run attempts are to be pulled.",
                      "enum": [
                        "RUN_ATTEMPT_UNSPECIFIED",
                        "LATEST"
                      ],
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of transfer configuration for which transfer runs should be retrieved. Format of transfer configuration resource name is: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListTransferRunsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs",
                  "description": "Returns information about running and completed transfer runs.",
                  "httpMethod": "GET",
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.list",
                  "path": "v1/{+parent}/runs",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                }
              },
              "resources": {
                "transferLogs": {
                  "methods": {
                    "list": {
                      "description": "Returns log messages for the transfer run.",
                      "response": {
                        "$ref": "ListTransferLogsResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}/transferLogs",
                      "id": "bigquerydatatransfer.projects.transferConfigs.runs.transferLogs.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Pagination token, which can be used to request a specific page of `ListTransferLogsRequest` list results. For multiple-page results, `ListTransferLogsResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Page size. The default page size is the maximum value of 1000 results.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                          "description": "Required. Transfer run name in the form: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        },
                        "messageTypes": {
                          "repeated": true,
                          "location": "query",
                          "type": "string",
                          "enum": [
                            "MESSAGE_SEVERITY_UNSPECIFIED",
                            "INFO",
                            "WARNING",
                            "ERROR"
                          ],
                          "description": "Message types to return. If not populated - INFO, WARNING and ERROR messages are returned.",
                          "enumDescriptions": [
                            "No severity specified.",
                            "Informational message.",
                            "Warning message.",
                            "Error message."
                          ]
                        }
                      },
                      "httpMethod": "GET",
                      "path": "v1/{+parent}/transferLogs"
                    }
                  }
                }
              }
            }
          }
        },
        "locations": {
          "methods": {
            "get": {
              "response": {
                "$ref": "Location"
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "httpMethod": "GET",
              "id": "bigquerydatatransfer.projects.locations.get",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "description": "Resource name for the location."
                }
              },
              "description": "Gets information about a location.",
              "parameterOrder": [
                "name"
              ]
            },
            "enrollDataSources": {
              "id": "bigquerydatatransfer.projects.locations.enrollDataSources",
              "path": "v1/{+name}:enrollDataSources",
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "The name of the project resource in the form: `projects/{project_id}`",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:enrollDataSources",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Enroll data sources in a user project. This allows users to create transfer configurations for these data sources. They will also appear in the ListDataSources RPC and as such, will appear in the [BigQuery UI](https://console.cloud.google.com/bigquery), and the documents can be found in the public guide for [BigQuery Web UI](https://cloud.google.com/bigquery/bigquery-web-ui) and [Data Transfer Service](https://cloud.google.com/bigquery/docs/working-with-transfers).",
              "request": {
                "$ref": "EnrollDataSourcesRequest"
              }
            },
            "list": {
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "path": "v1/{+name}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "id": "bigquerydatatransfer.projects.locations.list",
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations"
            }
          },
          "resources": {
            "dataSources": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Page size. The default page size is the maximum value of 1000 results."
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The BigQuery project id for which data sources should be returned. Must be in the form: `projects/{project_id}` or `projects/{project_id}/locations/{location_id}`"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Pagination token, which can be used to request a specific page of `ListDataSourcesRequest` list results. For multiple-page results, `ListDataSourcesResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results."
                    }
                  },
                  "id": "bigquerydatatransfer.projects.locations.dataSources.list",
                  "path": "v1/{+parent}/dataSources",
                  "description": "Lists supported data sources and returns their settings.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListDataSourcesResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSources"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/dataSources/{data_source_id}` or `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataSources/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSources/{dataSourcesId}",
                  "response": {
                    "$ref": "DataSource"
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "description": "Retrieves a supported data source and returns its settings.",
                  "id": "bigquerydatatransfer.projects.locations.dataSources.get",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "checkValidCreds": {
                  "path": "v1/{+name}:checkValidCreds",
                  "response": {
                    "$ref": "CheckValidCredsResponse"
                  },
                  "description": "Returns true if valid credentials exist for the given data source and requesting user.",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataSources/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The data source in the form: `projects/{project_id}/dataSources/{data_source_id}` or `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`."
                    }
                  },
                  "request": {
                    "$ref": "CheckValidCredsRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSources/{dataSourcesId}:checkValidCreds",
                  "id": "bigquerydatatransfer.projects.locations.dataSources.checkValidCreds",
                  "httpMethod": "POST"
                }
              }
            },
            "transferConfigs": {
              "resources": {
                "runs": {
                  "resources": {
                    "transferLogs": {
                      "methods": {
                        "list": {
                          "description": "Returns log messages for the transfer run.",
                          "path": "v1/{+parent}/transferLogs",
                          "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.transferLogs.list",
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/bigquery",
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "location": "path",
                              "description": "Required. Transfer run name in the form: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`",
                              "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                              "required": true,
                              "type": "string"
                            },
                            "messageTypes": {
                              "location": "query",
                              "type": "string",
                              "enum": [
                                "MESSAGE_SEVERITY_UNSPECIFIED",
                                "INFO",
                                "WARNING",
                                "ERROR"
                              ],
                              "repeated": true,
                              "description": "Message types to return. If not populated - INFO, WARNING and ERROR messages are returned.",
                              "enumDescriptions": [
                                "No severity specified.",
                                "Informational message.",
                                "Warning message.",
                                "Error message."
                              ]
                            },
                            "pageToken": {
                              "description": "Pagination token, which can be used to request a specific page of `ListTransferLogsRequest` list results. For multiple-page results, `ListTransferLogsResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.",
                              "type": "string",
                              "location": "query"
                            },
                            "pageSize": {
                              "location": "query",
                              "format": "int32",
                              "description": "Page size. The default page size is the maximum value of 1000 results.",
                              "type": "integer"
                            }
                          },
                          "response": {
                            "$ref": "ListTransferLogsResponse"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}/transferLogs"
                        }
                      }
                    }
                  },
                  "methods": {
                    "get": {
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.get",
                      "parameters": {
                        "name": {
                          "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                          "type": "string"
                        }
                      },
                      "description": "Returns information about the particular transfer run.",
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                      "response": {
                        "$ref": "TransferRun"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "httpMethod": "GET"
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "description": "Deletes the specified transfer run.",
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.delete",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                          "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "Empty"
                      },
                      "httpMethod": "DELETE"
                    },
                    "list": {
                      "response": {
                        "$ref": "ListTransferRunsResponse"
                      },
                      "httpMethod": "GET",
                      "path": "v1/{+parent}/runs",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Required. Name of transfer configuration for which transfer runs should be retrieved. Format of transfer configuration resource name is: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                          "type": "string",
                          "required": true
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "format": "int32",
                          "description": "Page size. The default page size is the maximum value of 1000 results."
                        },
                        "runAttempt": {
                          "enumDescriptions": [
                            "All runs should be returned.",
                            "Only latest run per day should be returned."
                          ],
                          "location": "query",
                          "description": "Indicates how run attempts are to be pulled.",
                          "enum": [
                            "RUN_ATTEMPT_UNSPECIFIED",
                            "LATEST"
                          ],
                          "type": "string"
                        },
                        "states": {
                          "repeated": true,
                          "description": "When specified, only transfer runs with requested states are returned.",
                          "enum": [
                            "TRANSFER_STATE_UNSPECIFIED",
                            "PENDING",
                            "RUNNING",
                            "SUCCEEDED",
                            "FAILED",
                            "CANCELLED"
                          ],
                          "location": "query",
                          "type": "string",
                          "enumDescriptions": [
                            "State placeholder (0).",
                            "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                            "Data transfer is in progress (3).",
                            "Data transfer completed successfully (4).",
                            "Data transfer failed (5).",
                            "Data transfer is cancelled (6)."
                          ]
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Pagination token, which can be used to request a specific page of `ListTransferRunsRequest` list results. For multiple-page results, `ListTransferRunsResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs",
                      "description": "Returns information about running and completed transfer runs.",
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.list"
                    }
                  }
                }
              },
              "methods": {
                "scheduleRuns": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ScheduleTransferRunsResponse"
                  },
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.scheduleRuns",
                  "request": {
                    "$ref": "ScheduleTransferRunsRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}:scheduleRuns",
                  "path": "v1/{+parent}:scheduleRuns",
                  "httpMethod": "POST",
                  "description": "Creates transfer runs for a time range [start_time, end_time]. For each date - or whatever granularity the data source supports - in the range, one transfer run is created. Note that runs are created per UTC time in the time range. DEPRECATED: use StartManualTransferRuns instead.",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  }
                },
                "startManualRuns": {
                  "response": {
                    "$ref": "StartManualTransferRunsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "StartManualTransferRunsRequest"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                      "description": "Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`."
                    }
                  },
                  "path": "v1/{+parent}:startManualRuns",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}:startManualRuns",
                  "httpMethod": "POST",
                  "description": "Start manual transfer runs to be executed now with schedule_time equal to current time. The transfer runs can be created for a time range where the run_time is between start_time (inclusive) and end_time (exclusive), or for a specific run_time.",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.startManualRuns"
                },
                "delete": {
                  "path": "v1/{+name}",
                  "description": "Deletes a data transfer configuration, including any associated transfer runs and logs.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$"
                    }
                  }
                },
                "list": {
                  "description": "Returns information about all transfer configs owned by a project in the specified location.",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "Pagination token, which can be used to request a specific page of `ListTransfersRequest` list results. For multiple-page results, `ListTransfersResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The BigQuery project id for which transfer configs should be returned: `projects/{project_id}` or `projects/{project_id}/locations/{location_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "Page size. The default page size is the maximum value of 1000 results.",
                      "type": "integer"
                    },
                    "dataSourceIds": {
                      "description": "When specified, only configurations of requested data sources are returned.",
                      "repeated": true,
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListTransferConfigsResponse"
                  },
                  "path": "v1/{+parent}/transferConfigs",
                  "httpMethod": "GET"
                },
                "get": {
                  "description": "Returns information about a data transfer config.",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.get",
                  "parameters": {
                    "name": {
                      "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}",
                  "response": {
                    "$ref": "TransferConfig"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "httpMethod": "GET"
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "description": "Updates a data transfer configuration. All fields must be set, even if they are not updated.",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "TransferConfig"
                  },
                  "response": {
                    "$ref": "TransferConfig"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "authorizationCode": {
                      "location": "query",
                      "description": "Optional OAuth2 authorization code to use with this transfer configuration. This is required only if `transferConfig.dataSourceId` is 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain authorization_code, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=authorization_code&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to update the transfer config.",
                      "type": "string"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. Required list of fields to be updated in this request.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$"
                    },
                    "versionInfo": {
                      "description": "Optional version info. This is required only if `transferConfig.dataSourceId` is not 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain version info, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=version_info&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to update the transfer config.",
                      "type": "string",
                      "location": "query"
                    },
                    "serviceAccountName": {
                      "type": "string",
                      "description": "Optional service account name. If this field is set, the transfer config will be created with this service account's credentials. It requires that the requesting user calling this API has permissions to act as this service account. Note that not all data sources support service account credentials when creating a transfer config. For the latest list of data sources, read about [using service accounts](https://cloud.google.com/bigquery-transfer/docs/use-service-accounts).",
                      "location": "query"
                    }
                  }
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "authorizationCode": {
                      "description": "Optional OAuth2 authorization code to use with this transfer configuration. This is required only if `transferConfig.dataSourceId` is 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain authorization_code, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=authorization_code&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to create the transfer config.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The BigQuery project id where the transfer configuration should be created. Must be in the format projects/{project_id}/locations/{location_id} or projects/{project_id}. If specified location and location of the destination bigquery dataset do not match - the request will fail.",
                      "location": "path"
                    },
                    "serviceAccountName": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional service account name. If this field is set, the transfer config will be created with this service account's credentials. It requires that the requesting user calling this API has permissions to act as this service account. Note that not all data sources support service account credentials when creating a transfer config. For the latest list of data sources, read about [using service accounts](https://cloud.google.com/bigquery-transfer/docs/use-service-accounts)."
                    },
                    "versionInfo": {
                      "location": "query",
                      "description": "Optional version info. This is required only if `transferConfig.dataSourceId` is not 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain version info, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=version_info&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to create the transfer config.",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "TransferConfig"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs",
                  "path": "v1/{+parent}/transferConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new data transfer configuration.",
                  "response": {
                    "$ref": "TransferConfig"
                  },
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.create",
                  "httpMethod": "POST"
                }
              }
            }
          }
        },
        "dataSources": {
          "methods": {
            "get": {
              "id": "bigquerydatatransfer.projects.dataSources.get",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/dataSources/{dataSourcesId}",
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "response": {
                "$ref": "DataSource"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/dataSources/{data_source_id}` or `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`",
                  "pattern": "^projects/[^/]+/dataSources/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "description": "Retrieves a supported data source and returns its settings.",
              "httpMethod": "GET"
            },
            "list": {
              "parameters": {
                "pageToken": {
                  "description": "Pagination token, which can be used to request a specific page of `ListDataSourcesRequest` list results. For multiple-page results, `ListDataSourcesResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "Page size. The default page size is the maximum value of 1000 results."
                },
                "parent": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The BigQuery project id for which data sources should be returned. Must be in the form: `projects/{project_id}` or `projects/{project_id}/locations/{location_id}`",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              },
              "description": "Lists supported data sources and returns their settings.",
              "httpMethod": "GET",
              "path": "v1/{+parent}/dataSources",
              "response": {
                "$ref": "ListDataSourcesResponse"
              },
              "id": "bigquerydatatransfer.projects.dataSources.list",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/projects/{projectsId}/dataSources",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            },
            "checkValidCreds": {
              "flatPath": "v1/projects/{projectsId}/dataSources/{dataSourcesId}:checkValidCreds",
              "id": "bigquerydatatransfer.projects.dataSources.checkValidCreds",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "CheckValidCredsResponse"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The data source in the form: `projects/{project_id}/dataSources/{data_source_id}` or `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/dataSources/[^/]+$",
                  "required": true
                }
              },
              "description": "Returns true if valid credentials exist for the given data source and requesting user.",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "request": {
                "$ref": "CheckValidCredsRequest"
              },
              "path": "v1/{+name}:checkValidCreds"
            }
          }
        }
      },
      "methods": {
        "enrollDataSources": {
          "description": "Enroll data sources in a user project. This allows users to create transfer configurations for these data sources. They will also appear in the ListDataSources RPC and as such, will appear in the [BigQuery UI](https://console.cloud.google.com/bigquery), and the documents can be found in the public guide for [BigQuery Web UI](https://cloud.google.com/bigquery/bigquery-web-ui) and [Data Transfer Service](https://cloud.google.com/bigquery/docs/working-with-transfers).",
          "id": "bigquerydatatransfer.projects.enrollDataSources",
          "parameters": {
            "name": {
              "required": true,
              "description": "The name of the project resource in the form: `projects/{project_id}`",
              "pattern": "^projects/[^/]+$",
              "location": "path",
              "type": "string"
            }
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/bigquery",
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "request": {
            "$ref": "EnrollDataSourcesRequest"
          },
          "flatPath": "v1/projects/{projectsId}:enrollDataSources",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Empty"
          },
          "path": "v1/{+name}:enrollDataSources"
        }
      }
    }
  },
  "ownerName": "Google",
  "protocol": "rest",
  "version_module": true,
  "schemas": {
    "ListDataSourcesResponse": {
      "properties": {
        "dataSources": {
          "type": "array",
          "items": {
            "$ref": "DataSource"
          },
          "description": "List of supported data sources and their transfer settings."
        },
        "nextPageToken": {
          "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListDataSourcesRequest.page_token` to request the next page of list results.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Returns list of supported data sources and their metadata.",
      "id": "ListDataSourcesResponse",
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "CheckValidCredsRequest": {
      "id": "CheckValidCredsRequest",
      "type": "object",
      "description": "A request to determine whether the user has valid credentials. This method is used to limit the number of OAuth popups in the user interface. The user id is inferred from the API call context. If the data source has the Google+ authorization type, this method returns false, as it cannot be determined whether the credentials are already valid merely based on the user id.",
      "properties": {}
    },
    "TransferConfig": {
      "description": "Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User specified display name for the data transfer."
        },
        "disabled": {
          "type": "boolean",
          "description": "Is this config disabled. When set to true, no runs are scheduled for a given transfer."
        },
        "state": {
          "type": "string",
          "enum": [
            "TRANSFER_STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "description": "Output only. State of the most recently updated transfer run.",
          "enumDescriptions": [
            "State placeholder (0).",
            "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
            "Data transfer is in progress (3).",
            "Data transfer completed successfully (4).",
            "Data transfer failed (5).",
            "Data transfer is cancelled (6)."
          ],
          "readOnly": true
        },
        "dataSourceId": {
          "description": "Data source ID. This cannot be changed once data transfer is created. The full list of available data source IDs can be returned through an API call: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.dataSources/list",
          "type": "string"
        },
        "userId": {
          "format": "int64",
          "type": "string",
          "description": "Deprecated. Unique ID of the user on whose behalf transfer is done."
        },
        "datasetRegion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Region in which BigQuery dataset is located."
        },
        "notificationPubsubTopic": {
          "type": "string",
          "description": "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish. The format for specifying a pubsub topic is: `projects/{project}/topics/{topic}`"
        },
        "scheduleOptions": {
          "description": "Options customizing the data transfer schedule.",
          "$ref": "ScheduleOptions"
        },
        "name": {
          "description": "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.",
          "type": "string"
        },
        "params": {
          "description": "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "emailPreferences": {
          "description": "Email notifications will be sent according to these preferences to the email address of the user who owns this transfer config.",
          "$ref": "EmailPreferences"
        },
        "schedule": {
          "description": "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: The minimum interval time between recurring transfers depends on the data source; refer to the documentation for your data source.",
          "type": "string"
        },
        "nextRunTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Next time when data transfer will run.",
          "readOnly": true
        },
        "dataRefreshWindowDays": {
          "description": "The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value.",
          "format": "int32",
          "type": "integer"
        },
        "destinationDatasetId": {
          "description": "The BigQuery target dataset id.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. Data transfer modification time. Ignored by server on input.",
          "readOnly": true,
          "type": "string"
        },
        "ownerInfo": {
          "description": "Output only. Information about the user whose credentials are used to transfer data. Populated only for `transferConfigs.get` requests. In case the user information is not available, this field will not be populated.",
          "readOnly": true,
          "$ref": "UserInfo"
        }
      },
      "type": "object",
      "id": "TransferConfig"
    },
    "DataSourceParameter": {
      "description": "A parameter used to define custom fields in a data source definition.",
      "id": "DataSourceParameter",
      "type": "object",
      "properties": {
        "validationHelpUrl": {
          "description": "URL to a help document to further explain the naming requirements.",
          "type": "string"
        },
        "allowedValues": {
          "type": "array",
          "description": "All possible values for the parameter.",
          "items": {
            "type": "string"
          }
        },
        "maxValue": {
          "description": "For integer and double values specifies maxminum allowed value.",
          "format": "double",
          "type": "number"
        },
        "validationDescription": {
          "type": "string",
          "description": "Description of the requirements for this field, in case the user input does not fulfill the regex pattern or min/max values."
        },
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "STRING",
            "INTEGER",
            "DOUBLE",
            "BOOLEAN",
            "RECORD",
            "PLUS_PAGE"
          ],
          "description": "Parameter type.",
          "enumDescriptions": [
            "Type unspecified.",
            "String parameter.",
            "Integer parameter (64-bits). Will be serialized to json as string.",
            "Double precision floating point parameter.",
            "Boolean parameter.",
            "Deprecated. This field has no effect.",
            "Page ID for a Google+ Page."
          ]
        },
        "required": {
          "description": "Is parameter required.",
          "type": "boolean"
        },
        "recurse": {
          "description": "Deprecated. This field has no effect.",
          "type": "boolean"
        },
        "description": {
          "description": "Parameter description.",
          "type": "string"
        },
        "validationRegex": {
          "type": "string",
          "description": "Regular expression which can be used for parameter validation."
        },
        "deprecated": {
          "type": "boolean",
          "description": "If true, it should not be used in new transfers, and it should not be visible to users."
        },
        "displayName": {
          "description": "Parameter display name in the user interface.",
          "type": "string"
        },
        "immutable": {
          "type": "boolean",
          "description": "Cannot be changed after initial creation."
        },
        "paramId": {
          "description": "Parameter identifier.",
          "type": "string"
        },
        "fields": {
          "items": {
            "$ref": "DataSourceParameter"
          },
          "description": "Deprecated. This field has no effect.",
          "type": "array"
        },
        "minValue": {
          "description": "For integer and double values specifies minimum allowed value.",
          "type": "number",
          "format": "double"
        },
        "repeated": {
          "description": "Deprecated. This field has no effect.",
          "type": "boolean"
        }
      }
    },
    "ListTransferLogsResponse": {
      "type": "object",
      "properties": {
        "transferMessages": {
          "readOnly": true,
          "description": "Output only. The stored pipeline transfer messages.",
          "items": {
            "$ref": "TransferMessage"
          },
          "type": "array"
        },
        "nextPageToken": {
          "readOnly": true,
          "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `GetTransferRunLogRequest.page_token` to request the next page of list results.",
          "type": "string"
        }
      },
      "id": "ListTransferLogsResponse",
      "description": "The returned list transfer run messages."
    },
    "EmailPreferences": {
      "description": "Represents preferences for sending email notifications for transfer run events.",
      "properties": {
        "enableFailureEmail": {
          "type": "boolean",
          "description": "If true, email notifications will be sent on transfer run failures."
        }
      },
      "type": "object",
      "id": "EmailPreferences"
    },
    "CheckValidCredsResponse": {
      "description": "A response indicating whether the credentials exist and are valid.",
      "id": "CheckValidCredsResponse",
      "properties": {
        "hasValidCreds": {
          "type": "boolean",
          "description": "If set to `true`, the credentials exist and are valid."
        }
      },
      "type": "object"
    },
    "TransferRun": {
      "id": "TransferRun",
      "properties": {
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Time when transfer run ended. Parameter ignored by server for input requests.",
          "type": "string"
        },
        "userId": {
          "type": "string",
          "format": "int64",
          "description": "Deprecated. Unique ID of the user on whose behalf transfer is done."
        },
        "emailPreferences": {
          "$ref": "EmailPreferences",
          "readOnly": true,
          "description": "Output only. Email notifications will be sent according to these preferences to the email address of the user who owns the transfer config this run was derived from."
        },
        "destinationDatasetId": {
          "type": "string",
          "description": "Output only. The BigQuery target dataset id.",
          "readOnly": true
        },
        "state": {
          "enumDescriptions": [
            "State placeholder (0).",
            "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
            "Data transfer is in progress (3).",
            "Data transfer completed successfully (4).",
            "Data transfer failed (5).",
            "Data transfer is cancelled (6)."
          ],
          "enum": [
            "TRANSFER_STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "description": "Data transfer run state. Ignored for input requests.",
          "type": "string"
        },
        "errorStatus": {
          "$ref": "Status",
          "description": "Status of the transfer run."
        },
        "schedule": {
          "description": "Output only. Describes the schedule of this transfer run if it was created as part of a regular schedule. For batch transfer runs that are scheduled manually, this is empty. NOTE: the system might choose to delay the schedule depending on the current load, so `schedule_time` doesn't always match this.",
          "readOnly": true,
          "type": "string"
        },
        "dataSourceId": {
          "description": "Output only. Data source id.",
          "type": "string",
          "readOnly": true
        },
        "params": {
          "description": "Output only. Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "name": {
          "type": "string",
          "description": "The resource name of the transfer run. Transfer run names have the form `projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`. The name is ignored when creating a transfer run."
        },
        "notificationPubsubTopic": {
          "readOnly": true,
          "description": "Output only. Pub/Sub topic where a notification will be sent after this transfer run finishes. The format for specifying a pubsub topic is: `projects/{project}/topics/{topic}`",
          "type": "string"
        },
        "startTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Time when transfer run was started. Parameter ignored by server for input requests.",
          "type": "string"
        },
        "runTime": {
          "format": "google-datetime",
          "description": "For batch transfer runs, specifies the date and time of the data should be ingested.",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Last time the data transfer run state was updated."
        },
        "scheduleTime": {
          "type": "string",
          "description": "Minimum time after which a transfer run can be started.",
          "format": "google-datetime"
        }
      },
      "description": "Represents a data transfer run.",
      "type": "object"
    },
    "ListTransferConfigsResponse": {
      "description": "The returned list of pipelines in the project.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferConfigsRequest.page_token` to request the next page of list results."
        },
        "transferConfigs": {
          "type": "array",
          "description": "Output only. The stored pipeline transfer configurations.",
          "items": {
            "$ref": "TransferConfig"
          },
          "readOnly": true
        }
      },
      "type": "object",
      "id": "ListTransferConfigsResponse"
    },
    "ListTransferRunsResponse": {
      "type": "object",
      "description": "The returned list of pipelines in the project.",
      "id": "ListTransferRunsResponse",
      "properties": {
        "nextPageToken": {
          "readOnly": true,
          "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferRunsRequest.page_token` to request the next page of list results.",
          "type": "string"
        },
        "transferRuns": {
          "items": {
            "$ref": "TransferRun"
          },
          "type": "array",
          "description": "Output only. The stored pipeline transfer runs.",
          "readOnly": true
        }
      }
    },
    "EnrollDataSourcesRequest": {
      "description": "A request to enroll a set of data sources so they are visible in the BigQuery UI's `Transfer` tab.",
      "type": "object",
      "properties": {
        "dataSourceIds": {
          "items": {
            "type": "string"
          },
          "description": "Data sources that are enrolled. It is required to provide at least one data source id.",
          "type": "array"
        }
      },
      "id": "EnrollDataSourcesRequest"
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        }
      },
      "id": "ListLocationsResponse",
      "type": "object",
      "description": "The response message for Locations.ListLocations."
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        }
      },
      "type": "object"
    },
    "ScheduleOptions": {
      "description": "Options customizing the data transfer schedule.",
      "type": "object",
      "id": "ScheduleOptions",
      "properties": {
        "disableAutoScheduling": {
          "description": "If true, automatic scheduling of data transfer runs for this configuration will be disabled. The runs can be started on ad-hoc basis using StartManualTransferRuns API. When automatic scheduling is disabled, the TransferConfig.schedule field will be ignored.",
          "type": "boolean"
        },
        "endTime": {
          "description": "Defines time to stop scheduling transfer runs. A transfer run cannot be scheduled at or after the end time. The end time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "format": "google-datetime",
          "description": "Specifies time to start scheduling transfer runs. The first run will be scheduled at or after the start time according to a recurrence pattern defined in the schedule string. The start time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option.",
          "type": "string"
        }
      }
    },
    "DataSource": {
      "description": "Defines the properties and custom parameters for a data source.",
      "id": "DataSource",
      "type": "object",
      "properties": {
        "description": {
          "description": "User friendly data source description string.",
          "type": "string"
        },
        "manualRunsDisabled": {
          "type": "boolean",
          "description": "Disables backfilling and manual run scheduling for the data source."
        },
        "supportsCustomSchedule": {
          "description": "Specifies whether the data source supports a user defined schedule, or operates on the default schedule. When set to `true`, user can override default schedule.",
          "type": "boolean"
        },
        "supportsMultipleTransfers": {
          "description": "Deprecated. This field has no effect.",
          "type": "boolean"
        },
        "scopes": {
          "description": "Api auth scopes for which refresh token needs to be obtained. These are scopes needed by a data source to prepare data and ingest them into BigQuery, e.g., https://www.googleapis.com/auth/bigquery",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "clientId": {
          "description": "Data source client id which should be used to receive refresh token.",
          "type": "string"
        },
        "minimumScheduleInterval": {
          "description": "The minimum interval for scheduler to schedule runs.",
          "format": "google-duration",
          "type": "string"
        },
        "dataRefreshType": {
          "type": "string",
          "enum": [
            "DATA_REFRESH_TYPE_UNSPECIFIED",
            "SLIDING_WINDOW",
            "CUSTOM_SLIDING_WINDOW"
          ],
          "description": "Specifies whether the data source supports automatic data refresh for the past few days, and how it's supported. For some data sources, data might not be complete until a few days later, so it's useful to refresh data automatically.",
          "enumDescriptions": [
            "The data source won't support data auto refresh, which is default value.",
            "The data source supports data auto refresh, and runs will be scheduled for the past few days. Does not allow custom values to be set for each transfer config.",
            "The data source supports data auto refresh, and runs will be scheduled for the past few days. Allows custom values to be set for each transfer config."
          ]
        },
        "name": {
          "description": "Output only. Data source resource name.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "User friendly data source name."
        },
        "helpUrl": {
          "type": "string",
          "description": "Url for the help document for this data source."
        },
        "parameters": {
          "items": {
            "$ref": "DataSourceParameter"
          },
          "type": "array",
          "description": "Data source parameters."
        },
        "dataSourceId": {
          "description": "Data source id.",
          "type": "string"
        },
        "updateDeadlineSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The number of seconds to wait for an update from the data source before the Data Transfer Service marks the transfer as FAILED."
        },
        "transferType": {
          "enumDescriptions": [
            "Invalid or Unknown transfer type placeholder.",
            "Batch data transfer.",
            "Streaming data transfer. Streaming data source currently doesn't support multiple transfer configs per project."
          ],
          "type": "string",
          "description": "Deprecated. This field has no effect.",
          "enum": [
            "TRANSFER_TYPE_UNSPECIFIED",
            "BATCH",
            "STREAMING"
          ]
        },
        "defaultSchedule": {
          "description": "Default data transfer schedule. Examples of valid schedules include: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`.",
          "type": "string"
        },
        "authorizationType": {
          "enum": [
            "AUTHORIZATION_TYPE_UNSPECIFIED",
            "AUTHORIZATION_CODE",
            "GOOGLE_PLUS_AUTHORIZATION_CODE",
            "FIRST_PARTY_OAUTH"
          ],
          "enumDescriptions": [
            "Type unspecified.",
            "Use OAuth 2 authorization codes that can be exchanged for a refresh token on the backend.",
            "Return an authorization code for a given Google+ page that can then be exchanged for a refresh token on the backend.",
            "Use First Party OAuth."
          ],
          "type": "string",
          "description": "Indicates the type of authorization."
        },
        "defaultDataRefreshWindowDays": {
          "type": "integer",
          "format": "int32",
          "description": "Default data refresh window on days. Only meaningful when `data_refresh_type` = `SLIDING_WINDOW`."
        }
      }
    },
    "StartManualTransferRunsResponse": {
      "properties": {
        "runs": {
          "type": "array",
          "items": {
            "$ref": "TransferRun"
          },
          "description": "The transfer runs that were created."
        }
      },
      "id": "StartManualTransferRunsResponse",
      "description": "A response to start manual transfer runs.",
      "type": "object"
    },
    "ScheduleTransferRunsResponse": {
      "properties": {
        "runs": {
          "type": "array",
          "description": "The transfer runs that were scheduled.",
          "items": {
            "$ref": "TransferRun"
          }
        }
      },
      "id": "ScheduleTransferRunsResponse",
      "type": "object",
      "description": "A response to schedule transfer runs for a time range."
    },
    "TransferMessage": {
      "properties": {
        "messageTime": {
          "description": "Time when message was logged.",
          "type": "string",
          "format": "google-datetime"
        },
        "messageText": {
          "description": "Message text.",
          "type": "string"
        },
        "severity": {
          "description": "Message severity.",
          "enum": [
            "MESSAGE_SEVERITY_UNSPECIFIED",
            "INFO",
            "WARNING",
            "ERROR"
          ],
          "enumDescriptions": [
            "No severity specified.",
            "Informational message.",
            "Warning message.",
            "Error message."
          ],
          "type": "string"
        }
      },
      "description": "Represents a user facing message for a particular data transfer run.",
      "type": "object",
      "id": "TransferMessage"
    },
    "StartManualTransferRunsRequest": {
      "id": "StartManualTransferRunsRequest",
      "properties": {
        "requestedRunTime": {
          "description": "Specific run_time for a transfer run to be started. The requested_run_time must not be in the future.",
          "type": "string",
          "format": "google-datetime"
        },
        "requestedTimeRange": {
          "description": "Time range for the transfer runs that should be started.",
          "$ref": "TimeRange"
        }
      },
      "type": "object",
      "description": "A request to start manual transfer runs."
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ScheduleTransferRunsRequest": {
      "properties": {
        "startTime": {
          "description": "Required. Start time of the range of transfer runs. For example, `\"2017-05-25T00:00:00+00:00\"`.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Required. End time of the range of transfer runs. For example, `\"2017-05-30T00:00:00+00:00\"`.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "ScheduleTransferRunsRequest",
      "type": "object",
      "description": "A request to schedule transfer runs for a time range."
    },
    "TimeRange": {
      "properties": {
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Start time of the range of transfer runs. For example, `\"2017-05-25T00:00:00+00:00\"`. The start_time must be strictly less than the end_time. Creates transfer runs where run_time is in the range between start_time (inclusive) and end_time (exclusive)."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "End time of the range of transfer runs. For example, `\"2017-05-30T00:00:00+00:00\"`. The end_time must not be in the future. Creates transfer runs where run_time is in the range between start_time (inclusive) and end_time (exclusive)."
        }
      },
      "id": "TimeRange",
      "type": "object",
      "description": "A specification for a time range, this will request transfer runs with run_time between start_time (inclusive) and end_time (exclusive)."
    },
    "UserInfo": {
      "description": "Information about a user.",
      "type": "object",
      "id": "UserInfo",
      "properties": {
        "email": {
          "type": "string",
          "description": "E-mail address of the user."
        }
      }
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud services and see the email address of your Google Account"
        },
        "https://www.googleapis.com/auth/bigquery": {
          "description": "View and manage your data in Google BigQuery and see the email address for your Google Account"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true
}

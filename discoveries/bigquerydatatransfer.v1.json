{
  "fullyEncodeReservedExpansion": true,
  "version": "v1",
  "baseUrl": "https://bigquerydatatransfer.googleapis.com/",
  "servicePath": "",
  "basePath": "",
  "resources": {
    "projects": {
      "methods": {
        "enrollDataSources": {
          "request": {
            "$ref": "EnrollDataSourcesRequest"
          },
          "description": "Enroll data sources in a user project. This allows users to create transfer configurations for these data sources. They will also appear in the ListDataSources RPC and as such, will appear in the [BigQuery UI](https://console.cloud.google.com/bigquery), and the documents can be found in the public guide for [BigQuery Web UI](https://cloud.google.com/bigquery/bigquery-web-ui) and [Data Transfer Service](https://cloud.google.com/bigquery/docs/working-with-transfers).",
          "parameters": {
            "name": {
              "type": "string",
              "description": "The name of the project resource in the form: `projects/{project_id}`",
              "required": true,
              "pattern": "^projects/[^/]+$",
              "location": "path"
            }
          },
          "response": {
            "$ref": "Empty"
          },
          "id": "bigquerydatatransfer.projects.enrollDataSources",
          "flatPath": "v1/projects/{projectsId}:enrollDataSources",
          "path": "v1/{+name}:enrollDataSources",
          "scopes": [
            "https://www.googleapis.com/auth/bigquery",
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "POST"
        }
      },
      "resources": {
        "dataSources": {
          "methods": {
            "get": {
              "description": "Retrieves a supported data source and returns its settings.",
              "id": "bigquerydatatransfer.projects.dataSources.get",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "response": {
                "$ref": "DataSource"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/dataSources/[^/]+$",
                  "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/dataSources/{data_source_id}` or `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1/projects/{projectsId}/dataSources/{dataSourcesId}"
            },
            "checkValidCreds": {
              "description": "Returns true if valid credentials exist for the given data source and requesting user.",
              "flatPath": "v1/projects/{projectsId}/dataSources/{dataSourcesId}:checkValidCreds",
              "path": "v1/{+name}:checkValidCreds",
              "response": {
                "$ref": "CheckValidCredsResponse"
              },
              "id": "bigquerydatatransfer.projects.dataSources.checkValidCreds",
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/dataSources/[^/]+$",
                  "type": "string",
                  "description": "Required. The data source in the form: `projects/{project_id}/dataSources/{data_source_id}` or `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`.",
                  "required": true,
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "request": {
                "$ref": "CheckValidCredsRequest"
              }
            },
            "list": {
              "description": "Lists supported data sources and returns their settings.",
              "response": {
                "$ref": "ListDataSourcesResponse"
              },
              "parameters": {
                "pageToken": {
                  "description": "Pagination token, which can be used to request a specific page of `ListDataSourcesRequest` list results. For multiple-page results, `ListDataSourcesResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The BigQuery project id for which data sources should be returned. Must be in the form: `projects/{project_id}` or `projects/{project_id}/locations/{location_id}`",
                  "location": "path"
                },
                "pageSize": {
                  "description": "Page size. The default page size is the maximum value of 1000 results.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/projects/{projectsId}/dataSources",
              "path": "v1/{+parent}/dataSources",
              "id": "bigquerydatatransfer.projects.dataSources.list",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            }
          }
        },
        "locations": {
          "methods": {
            "list": {
              "parameterOrder": [
                "name"
              ],
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1/projects/{projectsId}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "httpMethod": "GET",
              "path": "v1/{+name}/locations",
              "id": "bigquerydatatransfer.projects.locations.list",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "required": true,
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "type": "string"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                }
              }
            },
            "enrollDataSources": {
              "httpMethod": "POST",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:enrollDataSources",
              "path": "v1/{+name}:enrollDataSources",
              "description": "Enroll data sources in a user project. This allows users to create transfer configurations for these data sources. They will also appear in the ListDataSources RPC and as such, will appear in the [BigQuery UI](https://console.cloud.google.com/bigquery), and the documents can be found in the public guide for [BigQuery Web UI](https://cloud.google.com/bigquery/bigquery-web-ui) and [Data Transfer Service](https://cloud.google.com/bigquery/docs/working-with-transfers).",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "The name of the project resource in the form: `projects/{project_id}`",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "id": "bigquerydatatransfer.projects.locations.enrollDataSources",
              "request": {
                "$ref": "EnrollDataSourcesRequest"
              }
            },
            "get": {
              "id": "bigquerydatatransfer.projects.locations.get",
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "response": {
                "$ref": "Location"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Resource name for the location.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "description": "Gets information about a location."
            }
          },
          "resources": {
            "transferConfigs": {
              "methods": {
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "description": "Returns information about a data transfer config.",
                  "path": "v1/{+name}",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "TransferConfig"
                  }
                },
                "patch": {
                  "request": {
                    "$ref": "TransferConfig"
                  },
                  "description": "Updates a data transfer configuration. All fields must be set, even if they are not updated.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "serviceAccountName": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional service account email. If this field is set, the transfer config will be created with this service account's credentials. It requires that the requesting user calling this API has permissions to act as this service account. Note that not all data sources support service account credentials when creating a transfer config. For the latest list of data sources, read about [using service accounts](https://cloud.google.com/bigquery-transfer/docs/use-service-accounts)."
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                      "description": "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.",
                      "location": "path",
                      "required": true
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Required. Required list of fields to be updated in this request."
                    },
                    "authorizationCode": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional OAuth2 authorization code to use with this transfer configuration. This is required only if `transferConfig.dataSourceId` is 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain authorization_code, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=authorization_code&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to update the transfer config."
                    },
                    "versionInfo": {
                      "description": "Optional version info. This is required only if `transferConfig.dataSourceId` is not 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain version info, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=version_info&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to update the transfer config.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "TransferConfig"
                  }
                },
                "scheduleRuns": {
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ScheduleTransferRunsRequest"
                  },
                  "description": "Creates transfer runs for a time range [start_time, end_time]. For each date - or whatever granularity the data source supports - in the range, one transfer run is created. Note that runs are created per UTC time in the time range. DEPRECATED: use StartManualTransferRuns instead.",
                  "deprecated": true,
                  "response": {
                    "$ref": "ScheduleTransferRunsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.scheduleRuns",
                  "path": "v1/{+parent}:scheduleRuns",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}:scheduleRuns",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                      "location": "path",
                      "description": "Required. Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.",
                      "type": "string"
                    }
                  }
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "versionInfo": {
                      "location": "query",
                      "description": "Optional version info. This is required only if `transferConfig.dataSourceId` is not 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain version info, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=version_info&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to create the transfer config.",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The BigQuery project id where the transfer configuration should be created. Must be in the format projects/{project_id}/locations/{location_id} or projects/{project_id}. If specified location and location of the destination bigquery dataset do not match - the request will fail.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "authorizationCode": {
                      "description": "Optional OAuth2 authorization code to use with this transfer configuration. This is required only if `transferConfig.dataSourceId` is 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain authorization_code, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=authorization_code&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to create the transfer config.",
                      "type": "string",
                      "location": "query"
                    },
                    "serviceAccountName": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional service account email. If this field is set, the transfer config will be created with this service account's credentials. It requires that the requesting user calling this API has permissions to act as this service account. Note that not all data sources support service account credentials when creating a transfer config. For the latest list of data sources, read about [using service accounts](https://cloud.google.com/bigquery-transfer/docs/use-service-accounts)."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.create",
                  "request": {
                    "$ref": "TransferConfig"
                  },
                  "httpMethod": "POST",
                  "description": "Creates a new data transfer configuration.",
                  "path": "v1/{+parent}/transferConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "TransferConfig"
                  }
                },
                "delete": {
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$"
                    }
                  },
                  "description": "Deletes a data transfer configuration, including any associated transfer runs and logs."
                },
                "startManualRuns": {
                  "path": "v1/{+parent}:startManualRuns",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                      "description": "Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`."
                    }
                  },
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.startManualRuns",
                  "response": {
                    "$ref": "StartManualTransferRunsResponse"
                  },
                  "httpMethod": "POST",
                  "description": "Start manual transfer runs to be executed now with schedule_time equal to current time. The transfer runs can be created for a time range where the run_time is between start_time (inclusive) and end_time (exclusive), or for a specific run_time.",
                  "request": {
                    "$ref": "StartManualTransferRunsRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}:startManualRuns"
                },
                "list": {
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "description": "Returns information about all transfer configs owned by a project in the specified location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs",
                  "response": {
                    "$ref": "ListTransferConfigsResponse"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The BigQuery project id for which transfer configs should be returned: `projects/{project_id}` or `projects/{project_id}/locations/{location_id}`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "dataSourceIds": {
                      "repeated": true,
                      "type": "string",
                      "location": "query",
                      "description": "When specified, only configurations of requested data sources are returned."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Pagination token, which can be used to request a specific page of `ListTransfersRequest` list results. For multiple-page results, `ListTransfersResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Page size. The default page size is the maximum value of 1000 results."
                    }
                  },
                  "path": "v1/{+parent}/transferConfigs"
                }
              },
              "resources": {
                "runs": {
                  "methods": {
                    "get": {
                      "response": {
                        "$ref": "TransferRun"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                      "description": "Returns information about the particular transfer run.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.get",
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ]
                    },
                    "list": {
                      "response": {
                        "$ref": "ListTransferRunsResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs",
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.list",
                      "parameters": {
                        "states": {
                          "location": "query",
                          "description": "When specified, only transfer runs with requested states are returned.",
                          "enumDescriptions": [
                            "State placeholder (0).",
                            "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                            "Data transfer is in progress (3).",
                            "Data transfer completed successfully (4).",
                            "Data transfer failed (5).",
                            "Data transfer is cancelled (6)."
                          ],
                          "enum": [
                            "TRANSFER_STATE_UNSPECIFIED",
                            "PENDING",
                            "RUNNING",
                            "SUCCEEDED",
                            "FAILED",
                            "CANCELLED"
                          ],
                          "repeated": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "description": "Page size. The default page size is the maximum value of 1000 results.",
                          "format": "int32"
                        },
                        "runAttempt": {
                          "type": "string",
                          "location": "query",
                          "enum": [
                            "RUN_ATTEMPT_UNSPECIFIED",
                            "LATEST"
                          ],
                          "enumDescriptions": [
                            "All runs should be returned.",
                            "Only latest run per day should be returned."
                          ],
                          "description": "Indicates how run attempts are to be pulled."
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Pagination token, which can be used to request a specific page of `ListTransferRunsRequest` list results. For multiple-page results, `ListTransferRunsResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results."
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. Name of transfer configuration for which transfer runs should be retrieved. Format of transfer configuration resource name is: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$"
                        }
                      },
                      "path": "v1/{+parent}/runs",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Returns information about running and completed transfer runs."
                    },
                    "delete": {
                      "response": {
                        "$ref": "Empty"
                      },
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.delete",
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes the specified transfer run.",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                          "required": true,
                          "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`",
                          "location": "path"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}"
                    }
                  },
                  "resources": {
                    "transferLogs": {
                      "methods": {
                        "list": {
                          "parameters": {
                            "pageSize": {
                              "type": "integer",
                              "location": "query",
                              "description": "Page size. The default page size is the maximum value of 1000 results.",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "Pagination token, which can be used to request a specific page of `ListTransferLogsRequest` list results. For multiple-page results, `ListTransferLogsResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.",
                              "type": "string",
                              "location": "query"
                            },
                            "parent": {
                              "required": true,
                              "description": "Required. Transfer run name in the form: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`",
                              "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                              "location": "path",
                              "type": "string"
                            },
                            "messageTypes": {
                              "enumDescriptions": [
                                "No severity specified.",
                                "Informational message.",
                                "Warning message.",
                                "Error message."
                              ],
                              "enum": [
                                "MESSAGE_SEVERITY_UNSPECIFIED",
                                "INFO",
                                "WARNING",
                                "ERROR"
                              ],
                              "description": "Message types to return. If not populated - INFO, WARNING and ERROR messages are returned.",
                              "repeated": true,
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/bigquery",
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "description": "Returns log messages for the transfer run.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}/transferLogs",
                          "path": "v1/{+parent}/transferLogs",
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "ListTransferLogsResponse"
                          },
                          "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.transferLogs.list"
                        }
                      }
                    }
                  }
                }
              }
            },
            "dataSources": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListDataSourcesResponse"
                  },
                  "path": "v1/{+parent}/dataSources",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Page size. The default page size is the maximum value of 1000 results.",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Pagination token, which can be used to request a specific page of `ListDataSourcesRequest` list results. For multiple-page results, `ListDataSourcesResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. The BigQuery project id for which data sources should be returned. Must be in the form: `projects/{project_id}` or `projects/{project_id}/locations/{location_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "bigquerydatatransfer.projects.locations.dataSources.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSources",
                  "description": "Lists supported data sources and returns their settings.",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                },
                "get": {
                  "id": "bigquerydatatransfer.projects.locations.dataSources.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSources/{dataSourcesId}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "DataSource"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/dataSources/{data_source_id}` or `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataSources/[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "path": "v1/{+name}",
                  "description": "Retrieves a supported data source and returns its settings."
                },
                "checkValidCreds": {
                  "response": {
                    "$ref": "CheckValidCredsResponse"
                  },
                  "request": {
                    "$ref": "CheckValidCredsRequest"
                  },
                  "path": "v1/{+name}:checkValidCreds",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSources/{dataSourcesId}:checkValidCreds",
                  "description": "Returns true if valid credentials exist for the given data source and requesting user.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The data source in the form: `projects/{project_id}/dataSources/{data_source_id}` or `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataSources/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "id": "bigquerydatatransfer.projects.locations.dataSources.checkValidCreds",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                }
              }
            }
          }
        },
        "transferConfigs": {
          "methods": {
            "get": {
              "description": "Returns information about a data transfer config.",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "TransferConfig"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`",
                  "location": "path",
                  "required": true
                }
              },
              "path": "v1/{+name}",
              "id": "bigquerydatatransfer.projects.transferConfigs.get",
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}"
            },
            "list": {
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The BigQuery project id for which transfer configs should be returned: `projects/{project_id}` or `projects/{project_id}/locations/{location_id}`",
                  "pattern": "^projects/[^/]+$"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "Page size. The default page size is the maximum value of 1000 results."
                },
                "dataSourceIds": {
                  "repeated": true,
                  "type": "string",
                  "description": "When specified, only configurations of requested data sources are returned.",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Pagination token, which can be used to request a specific page of `ListTransfersRequest` list results. For multiple-page results, `ListTransfersResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results."
                }
              },
              "description": "Returns information about all transfer configs owned by a project in the specified location.",
              "path": "v1/{+parent}/transferConfigs",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "id": "bigquerydatatransfer.projects.transferConfigs.list",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/projects/{projectsId}/transferConfigs",
              "response": {
                "$ref": "ListTransferConfigsResponse"
              }
            },
            "create": {
              "flatPath": "v1/projects/{projectsId}/transferConfigs",
              "parameters": {
                "serviceAccountName": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional service account email. If this field is set, the transfer config will be created with this service account's credentials. It requires that the requesting user calling this API has permissions to act as this service account. Note that not all data sources support service account credentials when creating a transfer config. For the latest list of data sources, read about [using service accounts](https://cloud.google.com/bigquery-transfer/docs/use-service-accounts)."
                },
                "authorizationCode": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional OAuth2 authorization code to use with this transfer configuration. This is required only if `transferConfig.dataSourceId` is 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain authorization_code, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=authorization_code&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to create the transfer config."
                },
                "parent": {
                  "location": "path",
                  "required": true,
                  "description": "Required. The BigQuery project id where the transfer configuration should be created. Must be in the format projects/{project_id}/locations/{location_id} or projects/{project_id}. If specified location and location of the destination bigquery dataset do not match - the request will fail.",
                  "pattern": "^projects/[^/]+$",
                  "type": "string"
                },
                "versionInfo": {
                  "location": "query",
                  "description": "Optional version info. This is required only if `transferConfig.dataSourceId` is not 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain version info, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=version_info&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to create the transfer config.",
                  "type": "string"
                }
              },
              "httpMethod": "POST",
              "id": "bigquerydatatransfer.projects.transferConfigs.create",
              "description": "Creates a new data transfer configuration.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}/transferConfigs",
              "response": {
                "$ref": "TransferConfig"
              },
              "request": {
                "$ref": "TransferConfig"
              },
              "parameterOrder": [
                "parent"
              ]
            },
            "patch": {
              "parameters": {
                "serviceAccountName": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional service account email. If this field is set, the transfer config will be created with this service account's credentials. It requires that the requesting user calling this API has permissions to act as this service account. Note that not all data sources support service account credentials when creating a transfer config. For the latest list of data sources, read about [using service accounts](https://cloud.google.com/bigquery-transfer/docs/use-service-accounts)."
                },
                "authorizationCode": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional OAuth2 authorization code to use with this transfer configuration. This is required only if `transferConfig.dataSourceId` is 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain authorization_code, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=authorization_code&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to update the transfer config."
                },
                "versionInfo": {
                  "type": "string",
                  "description": "Optional version info. This is required only if `transferConfig.dataSourceId` is not 'youtube_channel' and new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain version info, make a request to the following URL: https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?redirect_uri=urn:ietf:wg:oauth:2.0:oob&response_type=version_info&client_id=client_id&scope=data_source_scopes * The client_id is the OAuth client_id of the a data source as returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. Note that this should not be set when `service_account_name` is used to update the transfer config.",
                  "location": "query"
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Required. Required list of fields to be updated in this request.",
                  "type": "string"
                },
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "description": "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.",
                  "location": "path",
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "PATCH",
              "id": "bigquerydatatransfer.projects.transferConfigs.patch",
              "response": {
                "$ref": "TransferConfig"
              },
              "path": "v1/{+name}",
              "request": {
                "$ref": "TransferConfig"
              },
              "description": "Updates a data transfer configuration. All fields must be set, even if they are not updated."
            },
            "scheduleRuns": {
              "response": {
                "$ref": "ScheduleTransferRunsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "deprecated": true,
              "description": "Creates transfer runs for a time range [start_time, end_time]. For each date - or whatever granularity the data source supports - in the range, one transfer run is created. Note that runs are created per UTC time in the time range. DEPRECATED: use StartManualTransferRuns instead.",
              "httpMethod": "POST",
              "path": "v1/{+parent}:scheduleRuns",
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}:scheduleRuns",
              "id": "bigquerydatatransfer.projects.transferConfigs.scheduleRuns",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "ScheduleTransferRunsRequest"
              },
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              }
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Deletes a data transfer configuration, including any associated transfer runs and logs.",
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$"
                }
              },
              "httpMethod": "DELETE",
              "id": "bigquerydatatransfer.projects.transferConfigs.delete",
              "path": "v1/{+name}"
            },
            "startManualRuns": {
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Start manual transfer runs to be executed now with schedule_time equal to current time. The transfer runs can be created for a time range where the run_time is between start_time (inclusive) and end_time (exclusive), or for a specific run_time.",
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "description": "Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`."
                }
              },
              "path": "v1/{+parent}:startManualRuns",
              "id": "bigquerydatatransfer.projects.transferConfigs.startManualRuns",
              "response": {
                "$ref": "StartManualTransferRunsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "StartManualTransferRunsRequest"
              },
              "httpMethod": "POST",
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}:startManualRuns"
            }
          },
          "resources": {
            "runs": {
              "resources": {
                "transferLogs": {
                  "methods": {
                    "list": {
                      "parameters": {
                        "pageToken": {
                          "description": "Pagination token, which can be used to request a specific page of `ListTransferLogsRequest` list results. For multiple-page results, `ListTransferLogsResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.",
                          "location": "query",
                          "type": "string"
                        },
                        "messageTypes": {
                          "type": "string",
                          "enumDescriptions": [
                            "No severity specified.",
                            "Informational message.",
                            "Warning message.",
                            "Error message."
                          ],
                          "location": "query",
                          "repeated": true,
                          "description": "Message types to return. If not populated - INFO, WARNING and ERROR messages are returned.",
                          "enum": [
                            "MESSAGE_SEVERITY_UNSPECIFIED",
                            "INFO",
                            "WARNING",
                            "ERROR"
                          ]
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "Page size. The default page size is the maximum value of 1000 results.",
                          "location": "query",
                          "format": "int32"
                        },
                        "parent": {
                          "type": "string",
                          "description": "Required. Transfer run name in the form: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`",
                          "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "httpMethod": "GET",
                      "id": "bigquerydatatransfer.projects.transferConfigs.runs.transferLogs.list",
                      "response": {
                        "$ref": "ListTransferLogsResponse"
                      },
                      "description": "Returns log messages for the transfer run.",
                      "path": "v1/{+parent}/transferLogs",
                      "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}/transferLogs"
                    }
                  }
                }
              },
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes the specified transfer run.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                  "path": "v1/{+name}",
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.delete"
                },
                "list": {
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Page size. The default page size is the maximum value of 1000 results."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Pagination token, which can be used to request a specific page of `ListTransferRunsRequest` list results. For multiple-page results, `ListTransferRunsResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results."
                    },
                    "runAttempt": {
                      "enum": [
                        "RUN_ATTEMPT_UNSPECIFIED",
                        "LATEST"
                      ],
                      "enumDescriptions": [
                        "All runs should be returned.",
                        "Only latest run per day should be returned."
                      ],
                      "type": "string",
                      "location": "query",
                      "description": "Indicates how run attempts are to be pulled."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of transfer configuration for which transfer runs should be retrieved. Format of transfer configuration resource name is: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`."
                    },
                    "states": {
                      "enumDescriptions": [
                        "State placeholder (0).",
                        "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                        "Data transfer is in progress (3).",
                        "Data transfer completed successfully (4).",
                        "Data transfer failed (5).",
                        "Data transfer is cancelled (6)."
                      ],
                      "description": "When specified, only transfer runs with requested states are returned.",
                      "type": "string",
                      "repeated": true,
                      "enum": [
                        "TRANSFER_STATE_UNSPECIFIED",
                        "PENDING",
                        "RUNNING",
                        "SUCCEEDED",
                        "FAILED",
                        "CANCELLED"
                      ],
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs",
                  "path": "v1/{+parent}/runs",
                  "description": "Returns information about running and completed transfer runs.",
                  "response": {
                    "$ref": "ListTransferRunsResponse"
                  }
                },
                "get": {
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Returns information about the particular transfer run.",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                  "response": {
                    "$ref": "TransferRun"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`",
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "name": "bigquerydatatransfer",
  "schemas": {
    "ScheduleOptions": {
      "type": "object",
      "description": "Options customizing the data transfer schedule.",
      "id": "ScheduleOptions",
      "properties": {
        "startTime": {
          "type": "string",
          "description": "Specifies time to start scheduling transfer runs. The first run will be scheduled at or after the start time according to a recurrence pattern defined in the schedule string. The start time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option.",
          "format": "google-datetime"
        },
        "disableAutoScheduling": {
          "type": "boolean",
          "description": "If true, automatic scheduling of data transfer runs for this configuration will be disabled. The runs can be started on ad-hoc basis using StartManualTransferRuns API. When automatic scheduling is disabled, the TransferConfig.schedule field will be ignored."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Defines time to stop scheduling transfer runs. A transfer run cannot be scheduled at or after the end time. The end time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option."
        }
      }
    },
    "StartManualTransferRunsRequest": {
      "type": "object",
      "description": "A request to start manual transfer runs.",
      "properties": {
        "requestedTimeRange": {
          "$ref": "TimeRange",
          "description": "Time range for the transfer runs that should be started."
        },
        "requestedRunTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Specific run_time for a transfer run to be started. The requested_run_time must not be in the future."
        }
      },
      "id": "StartManualTransferRunsRequest"
    },
    "ListTransferRunsResponse": {
      "type": "object",
      "properties": {
        "transferRuns": {
          "description": "Output only. The stored pipeline transfer runs.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "TransferRun"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferRunsRequest.page_token` to request the next page of list results.",
          "readOnly": true
        }
      },
      "id": "ListTransferRunsResponse",
      "description": "The returned list of pipelines in the project."
    },
    "ScheduleTransferRunsResponse": {
      "description": "A response to schedule transfer runs for a time range.",
      "type": "object",
      "properties": {
        "runs": {
          "type": "array",
          "description": "The transfer runs that were scheduled.",
          "items": {
            "$ref": "TransferRun"
          }
        }
      },
      "id": "ScheduleTransferRunsResponse"
    },
    "TransferConfig": {
      "id": "TransferConfig",
      "properties": {
        "destinationDatasetId": {
          "description": "The BigQuery target dataset id.",
          "type": "string"
        },
        "params": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
          "type": "object"
        },
        "dataSourceId": {
          "type": "string",
          "description": "Data source ID. This cannot be changed once data transfer is created. The full list of available data source IDs can be returned through an API call: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.dataSources/list"
        },
        "schedule": {
          "description": "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: The minimum interval time between recurring transfers depends on the data source; refer to the documentation for your data source.",
          "type": "string"
        },
        "ownerInfo": {
          "description": "Output only. Information about the user whose credentials are used to transfer data. Populated only for `transferConfigs.get` requests. In case the user information is not available, this field will not be populated.",
          "$ref": "UserInfo",
          "readOnly": true
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Data transfer modification time. Ignored by server on input."
        },
        "displayName": {
          "description": "User specified display name for the data transfer.",
          "type": "string"
        },
        "notificationPubsubTopic": {
          "description": "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish. The format for specifying a pubsub topic is: `projects/{project}/topics/{topic}`",
          "type": "string"
        },
        "emailPreferences": {
          "$ref": "EmailPreferences",
          "description": "Email notifications will be sent according to these preferences to the email address of the user who owns this transfer config."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "TRANSFER_STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "State placeholder (0).",
            "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
            "Data transfer is in progress (3).",
            "Data transfer completed successfully (4).",
            "Data transfer failed (5).",
            "Data transfer is cancelled (6)."
          ],
          "description": "Output only. State of the most recently updated transfer run."
        },
        "scheduleOptions": {
          "description": "Options customizing the data transfer schedule.",
          "$ref": "ScheduleOptions"
        },
        "nextRunTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Next time when data transfer will run.",
          "type": "string"
        },
        "datasetRegion": {
          "description": "Output only. Region in which BigQuery dataset is located.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.",
          "type": "string"
        },
        "dataRefreshWindowDays": {
          "description": "The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value.",
          "format": "int32",
          "type": "integer"
        },
        "userId": {
          "description": "Deprecated. Unique ID of the user on whose behalf transfer is done.",
          "type": "string",
          "format": "int64"
        },
        "disabled": {
          "description": "Is this config disabled. When set to true, no runs are scheduled for a given transfer.",
          "type": "boolean"
        }
      },
      "description": "Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account.",
      "type": "object"
    },
    "EmailPreferences": {
      "description": "Represents preferences for sending email notifications for transfer run events.",
      "type": "object",
      "properties": {
        "enableFailureEmail": {
          "description": "If true, email notifications will be sent on transfer run failures.",
          "type": "boolean"
        }
      },
      "id": "EmailPreferences"
    },
    "TransferRun": {
      "id": "TransferRun",
      "type": "object",
      "description": "Represents a data transfer run.",
      "properties": {
        "name": {
          "description": "The resource name of the transfer run. Transfer run names have the form `projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`. The name is ignored when creating a transfer run.",
          "type": "string"
        },
        "params": {
          "description": "Output only. Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
          "readOnly": true,
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        },
        "startTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Time when transfer run was started. Parameter ignored by server for input requests."
        },
        "dataSourceId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Data source id."
        },
        "errorStatus": {
          "$ref": "Status",
          "description": "Status of the transfer run."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. Last time the data transfer run state was updated.",
          "type": "string",
          "readOnly": true
        },
        "schedule": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Describes the schedule of this transfer run if it was created as part of a regular schedule. For batch transfer runs that are scheduled manually, this is empty. NOTE: the system might choose to delay the schedule depending on the current load, so `schedule_time` doesn't always match this."
        },
        "userId": {
          "type": "string",
          "description": "Deprecated. Unique ID of the user on whose behalf transfer is done.",
          "format": "int64"
        },
        "scheduleTime": {
          "format": "google-datetime",
          "description": "Minimum time after which a transfer run can be started.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "State placeholder (0).",
            "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
            "Data transfer is in progress (3).",
            "Data transfer completed successfully (4).",
            "Data transfer failed (5).",
            "Data transfer is cancelled (6)."
          ],
          "description": "Data transfer run state. Ignored for input requests.",
          "enum": [
            "TRANSFER_STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "type": "string"
        },
        "runTime": {
          "description": "For batch transfer runs, specifies the date and time of the data should be ingested.",
          "format": "google-datetime",
          "type": "string"
        },
        "notificationPubsubTopic": {
          "readOnly": true,
          "description": "Output only. Pub/Sub topic where a notification will be sent after this transfer run finishes. The format for specifying a pubsub topic is: `projects/{project}/topics/{topic}`",
          "type": "string"
        },
        "destinationDatasetId": {
          "description": "Output only. The BigQuery target dataset id.",
          "readOnly": true,
          "type": "string"
        },
        "emailPreferences": {
          "readOnly": true,
          "$ref": "EmailPreferences",
          "description": "Output only. Email notifications will be sent according to these preferences to the email address of the user who owns the transfer config this run was derived from."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. Time when transfer run ended. Parameter ignored by server for input requests.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "TimeRange": {
      "type": "object",
      "id": "TimeRange",
      "description": "A specification for a time range, this will request transfer runs with run_time between start_time (inclusive) and end_time (exclusive).",
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Start time of the range of transfer runs. For example, `\"2017-05-25T00:00:00+00:00\"`. The start_time must be strictly less than the end_time. Creates transfer runs where run_time is in the range between start_time (inclusive) and end_time (exclusive)."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "End time of the range of transfer runs. For example, `\"2017-05-30T00:00:00+00:00\"`. The end_time must not be in the future. Creates transfer runs where run_time is in the range between start_time (inclusive) and end_time (exclusive).",
          "type": "string"
        }
      }
    },
    "ListDataSourcesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListDataSourcesRequest.page_token` to request the next page of list results.",
          "readOnly": true,
          "type": "string"
        },
        "dataSources": {
          "type": "array",
          "description": "List of supported data sources and their transfer settings.",
          "items": {
            "$ref": "DataSource"
          }
        }
      },
      "description": "Returns list of supported data sources and their metadata.",
      "id": "ListDataSourcesResponse",
      "type": "object"
    },
    "CheckValidCredsResponse": {
      "description": "A response indicating whether the credentials exist and are valid.",
      "id": "CheckValidCredsResponse",
      "properties": {
        "hasValidCreds": {
          "type": "boolean",
          "description": "If set to `true`, the credentials exist and are valid."
        }
      },
      "type": "object"
    },
    "ListTransferLogsResponse": {
      "properties": {
        "nextPageToken": {
          "readOnly": true,
          "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `GetTransferRunLogRequest.page_token` to request the next page of list results.",
          "type": "string"
        },
        "transferMessages": {
          "readOnly": true,
          "description": "Output only. The stored pipeline transfer messages.",
          "type": "array",
          "items": {
            "$ref": "TransferMessage"
          }
        }
      },
      "type": "object",
      "id": "ListTransferLogsResponse",
      "description": "The returned list transfer run messages."
    },
    "EnrollDataSourcesRequest": {
      "description": "A request to enroll a set of data sources so they are visible in the BigQuery UI's `Transfer` tab.",
      "type": "object",
      "id": "EnrollDataSourcesRequest",
      "properties": {
        "dataSourceIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Data sources that are enrolled. It is required to provide at least one data source id."
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "description": "Information about a user.",
      "id": "UserInfo",
      "properties": {
        "email": {
          "type": "string",
          "description": "E-mail address of the user."
        }
      }
    },
    "DataSourceParameter": {
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "STRING",
            "INTEGER",
            "DOUBLE",
            "BOOLEAN",
            "RECORD",
            "PLUS_PAGE"
          ],
          "enumDescriptions": [
            "Type unspecified.",
            "String parameter.",
            "Integer parameter (64-bits). Will be serialized to json as string.",
            "Double precision floating point parameter.",
            "Boolean parameter.",
            "Deprecated. This field has no effect.",
            "Page ID for a Google+ Page."
          ],
          "type": "string",
          "description": "Parameter type."
        },
        "recurse": {
          "type": "boolean",
          "description": "Deprecated. This field has no effect."
        },
        "required": {
          "type": "boolean",
          "description": "Is parameter required."
        },
        "allowedValues": {
          "items": {
            "type": "string"
          },
          "description": "All possible values for the parameter.",
          "type": "array"
        },
        "repeated": {
          "type": "boolean",
          "description": "Deprecated. This field has no effect."
        },
        "minValue": {
          "format": "double",
          "description": "For integer and double values specifies minimum allowed value.",
          "type": "number"
        },
        "fields": {
          "items": {
            "$ref": "DataSourceParameter"
          },
          "description": "Deprecated. This field has no effect.",
          "type": "array"
        },
        "validationRegex": {
          "description": "Regular expression which can be used for parameter validation.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Parameter display name in the user interface."
        },
        "description": {
          "type": "string",
          "description": "Parameter description."
        },
        "deprecated": {
          "type": "boolean",
          "description": "If true, it should not be used in new transfers, and it should not be visible to users."
        },
        "maxValue": {
          "description": "For integer and double values specifies maximum allowed value.",
          "type": "number",
          "format": "double"
        },
        "validationHelpUrl": {
          "type": "string",
          "description": "URL to a help document to further explain the naming requirements."
        },
        "paramId": {
          "type": "string",
          "description": "Parameter identifier."
        },
        "immutable": {
          "description": "Cannot be changed after initial creation.",
          "type": "boolean"
        },
        "validationDescription": {
          "type": "string",
          "description": "Description of the requirements for this field, in case the user input does not fulfill the regex pattern or min/max values."
        }
      },
      "id": "DataSourceParameter",
      "description": "A parameter used to define custom fields in a data source definition.",
      "type": "object"
    },
    "ScheduleTransferRunsRequest": {
      "properties": {
        "startTime": {
          "description": "Required. Start time of the range of transfer runs. For example, `\"2017-05-25T00:00:00+00:00\"`.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Required. End time of the range of transfer runs. For example, `\"2017-05-30T00:00:00+00:00\"`."
        }
      },
      "description": "A request to schedule transfer runs for a time range.",
      "id": "ScheduleTransferRunsRequest",
      "type": "object"
    },
    "CheckValidCredsRequest": {
      "type": "object",
      "description": "A request to determine whether the user has valid credentials. This method is used to limit the number of OAuth popups in the user interface. The user id is inferred from the API call context. If the data source has the Google+ authorization type, this method returns false, as it cannot be determined whether the credentials are already valid merely based on the user id.",
      "properties": {},
      "id": "CheckValidCredsRequest"
    },
    "ListTransferConfigsResponse": {
      "description": "The returned list of pipelines in the project.",
      "properties": {
        "nextPageToken": {
          "readOnly": true,
          "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferConfigsRequest.page_token` to request the next page of list results.",
          "type": "string"
        },
        "transferConfigs": {
          "type": "array",
          "description": "Output only. The stored pipeline transfer configurations.",
          "readOnly": true,
          "items": {
            "$ref": "TransferConfig"
          }
        }
      },
      "id": "ListTransferConfigsResponse",
      "type": "object"
    },
    "DataSource": {
      "id": "DataSource",
      "properties": {
        "dataRefreshType": {
          "type": "string",
          "enum": [
            "DATA_REFRESH_TYPE_UNSPECIFIED",
            "SLIDING_WINDOW",
            "CUSTOM_SLIDING_WINDOW"
          ],
          "enumDescriptions": [
            "The data source won't support data auto refresh, which is default value.",
            "The data source supports data auto refresh, and runs will be scheduled for the past few days. Does not allow custom values to be set for each transfer config.",
            "The data source supports data auto refresh, and runs will be scheduled for the past few days. Allows custom values to be set for each transfer config."
          ],
          "description": "Specifies whether the data source supports automatic data refresh for the past few days, and how it's supported. For some data sources, data might not be complete until a few days later, so it's useful to refresh data automatically."
        },
        "authorizationType": {
          "enumDescriptions": [
            "Type unspecified.",
            "Use OAuth 2 authorization codes that can be exchanged for a refresh token on the backend.",
            "Return an authorization code for a given Google+ page that can then be exchanged for a refresh token on the backend.",
            "Use First Party OAuth."
          ],
          "type": "string",
          "enum": [
            "AUTHORIZATION_TYPE_UNSPECIFIED",
            "AUTHORIZATION_CODE",
            "GOOGLE_PLUS_AUTHORIZATION_CODE",
            "FIRST_PARTY_OAUTH"
          ],
          "description": "Indicates the type of authorization."
        },
        "parameters": {
          "description": "Data source parameters.",
          "items": {
            "$ref": "DataSourceParameter"
          },
          "type": "array"
        },
        "clientId": {
          "type": "string",
          "description": "Data source client id which should be used to receive refresh token."
        },
        "transferType": {
          "description": "Deprecated. This field has no effect.",
          "enum": [
            "TRANSFER_TYPE_UNSPECIFIED",
            "BATCH",
            "STREAMING"
          ],
          "deprecated": true,
          "type": "string",
          "enumDescriptions": [
            "Invalid or Unknown transfer type placeholder.",
            "Batch data transfer.",
            "Streaming data transfer. Streaming data source currently doesn't support multiple transfer configs per project."
          ]
        },
        "supportsMultipleTransfers": {
          "deprecated": true,
          "description": "Deprecated. This field has no effect.",
          "type": "boolean"
        },
        "supportsCustomSchedule": {
          "description": "Specifies whether the data source supports a user defined schedule, or operates on the default schedule. When set to `true`, user can override default schedule.",
          "type": "boolean"
        },
        "description": {
          "type": "string",
          "description": "User friendly data source description string."
        },
        "defaultDataRefreshWindowDays": {
          "format": "int32",
          "description": "Default data refresh window on days. Only meaningful when `data_refresh_type` = `SLIDING_WINDOW`.",
          "type": "integer"
        },
        "displayName": {
          "description": "User friendly data source name.",
          "type": "string"
        },
        "minimumScheduleInterval": {
          "format": "google-duration",
          "description": "The minimum interval for scheduler to schedule runs.",
          "type": "string"
        },
        "scopes": {
          "description": "Api auth scopes for which refresh token needs to be obtained. These are scopes needed by a data source to prepare data and ingest them into BigQuery, e.g., https://www.googleapis.com/auth/bigquery",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "Output only. Data source resource name.",
          "readOnly": true
        },
        "manualRunsDisabled": {
          "description": "Disables backfilling and manual run scheduling for the data source.",
          "type": "boolean"
        },
        "defaultSchedule": {
          "description": "Default data transfer schedule. Examples of valid schedules include: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`.",
          "type": "string"
        },
        "helpUrl": {
          "description": "Url for the help document for this data source.",
          "type": "string"
        },
        "updateDeadlineSeconds": {
          "description": "The number of seconds to wait for an update from the data source before the Data Transfer Service marks the transfer as FAILED.",
          "format": "int32",
          "type": "integer"
        },
        "dataSourceId": {
          "type": "string",
          "description": "Data source id."
        }
      },
      "type": "object",
      "description": "Defines the properties and custom parameters for a data source."
    },
    "StartManualTransferRunsResponse": {
      "type": "object",
      "description": "A response to start manual transfer runs.",
      "id": "StartManualTransferRunsResponse",
      "properties": {
        "runs": {
          "description": "The transfer runs that were created.",
          "items": {
            "$ref": "TransferRun"
          },
          "type": "array"
        }
      }
    },
    "Status": {
      "id": "Status",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "ListLocationsResponse": {
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "type": "object"
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents a Google Cloud location.",
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object"
    },
    "TransferMessage": {
      "properties": {
        "messageTime": {
          "description": "Time when message was logged.",
          "type": "string",
          "format": "google-datetime"
        },
        "severity": {
          "description": "Message severity.",
          "type": "string",
          "enumDescriptions": [
            "No severity specified.",
            "Informational message.",
            "Warning message.",
            "Error message."
          ],
          "enum": [
            "MESSAGE_SEVERITY_UNSPECIFIED",
            "INFO",
            "WARNING",
            "ERROR"
          ]
        },
        "messageText": {
          "description": "Message text.",
          "type": "string"
        }
      },
      "description": "Represents a user facing message for a particular data transfer run.",
      "type": "object",
      "id": "TransferMessage"
    }
  },
  "title": "BigQuery Data Transfer API",
  "ownerName": "Google",
  "canonicalName": "BigQuery Data Transfer",
  "ownerDomain": "google.com",
  "description": "Schedule queries or transfer external data from SaaS applications to Google BigQuery on a regular basis.",
  "kind": "discovery#restDescription",
  "id": "bigquerydatatransfer:v1",
  "documentationLink": "https://cloud.google.com/bigquery-transfer/",
  "version_module": true,
  "batchPath": "batch",
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        },
        "https://www.googleapis.com/auth/bigquery": {
          "description": "View and manage your data in Google BigQuery and see the email address for your Google Account"
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud services and see the email address of your Google Account"
        }
      }
    }
  },
  "mtlsRootUrl": "https://bigquerydatatransfer.mtls.googleapis.com/",
  "discoveryVersion": "v1",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "parameters": {
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "default": "json",
      "type": "string",
      "location": "query",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    }
  },
  "rootUrl": "https://bigquerydatatransfer.googleapis.com/",
  "revision": "20230701"
}

{
  "kind": "discovery#restDescription",
  "servicePath": "",
  "id": "bigquerydatatransfer:v1",
  "schemas": {
    "CheckValidCredsRequest": {
      "description": "A request to determine whether the user has valid credentials. This method is used to limit the number of OAuth popups in the user interface. The user id is inferred from the API call context. If the data source has the Google+ authorization type, this method returns false, as it cannot be determined whether the credentials are already valid merely based on the user id.",
      "id": "CheckValidCredsRequest",
      "properties": {},
      "type": "object"
    },
    "StartManualTransferRunsResponse": {
      "properties": {
        "runs": {
          "type": "array",
          "items": {
            "$ref": "TransferRun"
          },
          "description": "The transfer runs that were created."
        }
      },
      "type": "object",
      "description": "A response to start manual transfer runs.",
      "id": "StartManualTransferRunsResponse"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListLocationsResponse",
      "type": "object"
    },
    "Location": {
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        }
      },
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "id": "Location"
    },
    "Status": {
      "properties": {
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object"
    },
    "CheckValidCredsResponse": {
      "properties": {
        "hasValidCreds": {
          "description": "If set to `true`, the credentials exist and are valid.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "CheckValidCredsResponse",
      "description": "A response indicating whether the credentials exist and are valid."
    },
    "DataSource": {
      "type": "object",
      "id": "DataSource",
      "description": "Represents data source metadata. Metadata is sufficient to render UI and request proper OAuth tokens.",
      "properties": {
        "supportsCustomSchedule": {
          "description": "Specifies whether the data source supports a user defined schedule, or operates on the default schedule. When set to `true`, user can override default schedule.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "Output only. Data source resource name.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "User friendly data source name."
        },
        "parameters": {
          "items": {
            "$ref": "DataSourceParameter"
          },
          "description": "Data source parameters.",
          "type": "array"
        },
        "defaultSchedule": {
          "type": "string",
          "description": "Default data transfer schedule. Examples of valid schedules include: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`."
        },
        "defaultDataRefreshWindowDays": {
          "description": "Default data refresh window on days. Only meaningful when `data_refresh_type` = `SLIDING_WINDOW`.",
          "type": "integer",
          "format": "int32"
        },
        "helpUrl": {
          "type": "string",
          "description": "Url for the help document for this data source."
        },
        "dataSourceId": {
          "description": "Data source id.",
          "type": "string"
        },
        "clientId": {
          "type": "string",
          "description": "Data source client id which should be used to receive refresh token."
        },
        "description": {
          "description": "User friendly data source description string.",
          "type": "string"
        },
        "minimumScheduleInterval": {
          "format": "google-duration",
          "type": "string",
          "description": "The minimum interval for scheduler to schedule runs."
        },
        "authorizationType": {
          "type": "string",
          "enum": [
            "AUTHORIZATION_TYPE_UNSPECIFIED",
            "AUTHORIZATION_CODE",
            "GOOGLE_PLUS_AUTHORIZATION_CODE",
            "FIRST_PARTY_OAUTH"
          ],
          "description": "Indicates the type of authorization.",
          "enumDescriptions": [
            "Type unspecified.",
            "Use OAuth 2 authorization codes that can be exchanged for a refresh token on the backend.",
            "Return an authorization code for a given Google+ page that can then be exchanged for a refresh token on the backend.",
            "Use First Party OAuth based on Loas Owned Clients. First Party OAuth doesn't require a refresh token to get an offline access token. Instead, it uses a client-signed JWT assertion to retrieve an access token."
          ]
        },
        "updateDeadlineSeconds": {
          "format": "int32",
          "description": "The number of seconds to wait for an update from the data source before the Data Transfer Service marks the transfer as FAILED.",
          "type": "integer"
        },
        "manualRunsDisabled": {
          "description": "Disables backfilling and manual run scheduling for the data source.",
          "type": "boolean"
        },
        "dataRefreshType": {
          "enum": [
            "DATA_REFRESH_TYPE_UNSPECIFIED",
            "SLIDING_WINDOW",
            "CUSTOM_SLIDING_WINDOW"
          ],
          "description": "Specifies whether the data source supports automatic data refresh for the past few days, and how it's supported. For some data sources, data might not be complete until a few days later, so it's useful to refresh data automatically.",
          "enumDescriptions": [
            "The data source won't support data auto refresh, which is default value.",
            "The data source supports data auto refresh, and runs will be scheduled for the past few days. Does not allow custom values to be set for each transfer config.",
            "The data source supports data auto refresh, and runs will be scheduled for the past few days. Allows custom values to be set for each transfer config."
          ],
          "type": "string"
        },
        "transferType": {
          "description": "Deprecated. This field has no effect.",
          "enumDescriptions": [
            "Invalid or Unknown transfer type placeholder.",
            "Batch data transfer.",
            "Streaming data transfer. Streaming data source currently doesn't support multiple transfer configs per project."
          ],
          "enum": [
            "TRANSFER_TYPE_UNSPECIFIED",
            "BATCH",
            "STREAMING"
          ],
          "type": "string"
        },
        "scopes": {
          "description": "Api auth scopes for which refresh token needs to be obtained. These are scopes needed by a data source to prepare data and ingest them into BigQuery, e.g., https://www.googleapis.com/auth/bigquery",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportsMultipleTransfers": {
          "description": "Deprecated. This field has no effect.",
          "type": "boolean"
        }
      }
    },
    "TransferMessage": {
      "type": "object",
      "id": "TransferMessage",
      "properties": {
        "messageText": {
          "type": "string",
          "description": "Message text."
        },
        "severity": {
          "enum": [
            "MESSAGE_SEVERITY_UNSPECIFIED",
            "INFO",
            "WARNING",
            "ERROR"
          ],
          "type": "string",
          "description": "Message severity.",
          "enumDescriptions": [
            "No severity specified.",
            "Informational message.",
            "Warning message.",
            "Error message."
          ]
        },
        "messageTime": {
          "type": "string",
          "description": "Time when message was logged.",
          "format": "google-datetime"
        }
      },
      "description": "Represents a user facing message for a particular data transfer run."
    },
    "ListTransferRunsResponse": {
      "id": "ListTransferRunsResponse",
      "type": "object",
      "properties": {
        "transferRuns": {
          "description": "Output only. The stored pipeline transfer runs.",
          "readOnly": true,
          "items": {
            "$ref": "TransferRun"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferRunsRequest.page_token` to request the next page of list results.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "The returned list of pipelines in the project."
    },
    "ScheduleTransferRunsRequest": {
      "description": "A request to schedule transfer runs for a time range.",
      "id": "ScheduleTransferRunsRequest",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Required. End time of the range of transfer runs. For example, `\"2017-05-30T00:00:00+00:00\"`."
        },
        "startTime": {
          "type": "string",
          "description": "Required. Start time of the range of transfer runs. For example, `\"2017-05-25T00:00:00+00:00\"`.",
          "format": "google-datetime"
        }
      },
      "type": "object"
    },
    "ScheduleTransferRunsResponse": {
      "type": "object",
      "properties": {
        "runs": {
          "description": "The transfer runs that were scheduled.",
          "items": {
            "$ref": "TransferRun"
          },
          "type": "array"
        }
      },
      "description": "A response to schedule transfer runs for a time range.",
      "id": "ScheduleTransferRunsResponse"
    },
    "ScheduleOptions": {
      "id": "ScheduleOptions",
      "description": "Options customizing the data transfer schedule.",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "description": "Specifies time to start scheduling transfer runs. The first run will be scheduled at or after the start time according to a recurrence pattern defined in the schedule string. The start time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option.",
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Defines time to stop scheduling transfer runs. A transfer run cannot be scheduled at or after the end time. The end time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option."
        },
        "disableAutoScheduling": {
          "description": "If true, automatic scheduling of data transfer runs for this configuration will be disabled. The runs can be started on ad-hoc basis using StartManualTransferRuns API. When automatic scheduling is disabled, the TransferConfig.schedule field will be ignored.",
          "type": "boolean"
        }
      }
    },
    "TimeRange": {
      "description": "A specification for a time range, this will request transfer runs with run_time between start_time (inclusive) and end_time (exclusive).",
      "type": "object",
      "id": "TimeRange",
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Start time of the range of transfer runs. For example, `\"2017-05-25T00:00:00+00:00\"`. The start_time must be strictly less than the end_time. Creates transfer runs where run_time is in the range between start_time (inclusive) and end_time (exclusive)."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "End time of the range of transfer runs. For example, `\"2017-05-30T00:00:00+00:00\"`. The end_time must not be in the future. Creates transfer runs where run_time is in the range between start_time (inclusive) and end_time (exclusive).",
          "type": "string"
        }
      }
    },
    "EmailPreferences": {
      "description": "Represents preferences for sending email notifications for transfer run events.",
      "properties": {
        "enableFailureEmail": {
          "description": "If true, email notifications will be sent on transfer run failures.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "EmailPreferences"
    },
    "ListTransferConfigsResponse": {
      "description": "The returned list of pipelines in the project.",
      "properties": {
        "nextPageToken": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferConfigsRequest.page_token` to request the next page of list results."
        },
        "transferConfigs": {
          "type": "array",
          "description": "Output only. The stored pipeline transfer configurations.",
          "items": {
            "$ref": "TransferConfig"
          },
          "readOnly": true
        }
      },
      "type": "object",
      "id": "ListTransferConfigsResponse"
    },
    "DataSourceParameter": {
      "description": "Represents a data source parameter with validation rules, so that parameters can be rendered in the UI. These parameters are given to us by supported data sources, and include all needed information for rendering and validation. Thus, whoever uses this api can decide to generate either generic ui, or custom data source specific forms.",
      "type": "object",
      "id": "DataSourceParameter",
      "properties": {
        "paramId": {
          "description": "Parameter identifier.",
          "type": "string"
        },
        "recurse": {
          "description": "Deprecated. This field has no effect.",
          "type": "boolean"
        },
        "type": {
          "enumDescriptions": [
            "Type unspecified.",
            "String parameter.",
            "Integer parameter (64-bits). Will be serialized to json as string.",
            "Double precision floating point parameter.",
            "Boolean parameter.",
            "Deprecated. This field has no effect.",
            "Page ID for a Google+ Page."
          ],
          "description": "Parameter type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "STRING",
            "INTEGER",
            "DOUBLE",
            "BOOLEAN",
            "RECORD",
            "PLUS_PAGE"
          ],
          "type": "string"
        },
        "validationRegex": {
          "description": "Regular expression which can be used for parameter validation.",
          "type": "string"
        },
        "fields": {
          "items": {
            "$ref": "DataSourceParameter"
          },
          "description": "Deprecated. This field has no effect.",
          "type": "array"
        },
        "validationDescription": {
          "type": "string",
          "description": "Description of the requirements for this field, in case the user input does not fulfill the regex pattern or min/max values."
        },
        "maxValue": {
          "description": "For integer and double values specifies maxminum allowed value.",
          "format": "double",
          "type": "number"
        },
        "deprecated": {
          "type": "boolean",
          "description": "If true, it should not be used in new transfers, and it should not be visible to users."
        },
        "required": {
          "type": "boolean",
          "description": "Is parameter required."
        },
        "immutable": {
          "description": "Cannot be changed after initial creation.",
          "type": "boolean"
        },
        "validationHelpUrl": {
          "description": "URL to a help document to further explain the naming requirements.",
          "type": "string"
        },
        "repeated": {
          "description": "Deprecated. This field has no effect.",
          "type": "boolean"
        },
        "allowedValues": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "All possible values for the parameter."
        },
        "description": {
          "description": "Parameter description.",
          "type": "string"
        },
        "minValue": {
          "type": "number",
          "description": "For integer and double values specifies minimum allowed value.",
          "format": "double"
        },
        "displayName": {
          "description": "Parameter display name in the user interface.",
          "type": "string"
        }
      }
    },
    "ListTransferLogsResponse": {
      "description": "The returned list transfer run messages.",
      "properties": {
        "nextPageToken": {
          "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `GetTransferRunLogRequest.page_token` to request the next page of list results.",
          "readOnly": true,
          "type": "string"
        },
        "transferMessages": {
          "description": "Output only. The stored pipeline transfer messages.",
          "items": {
            "$ref": "TransferMessage"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object",
      "id": "ListTransferLogsResponse"
    },
    "Empty": {
      "id": "Empty",
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "ListDataSourcesResponse": {
      "properties": {
        "dataSources": {
          "description": "List of supported data sources and their transfer settings.",
          "type": "array",
          "items": {
            "$ref": "DataSource"
          }
        },
        "nextPageToken": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListDataSourcesRequest.page_token` to request the next page of list results."
        }
      },
      "id": "ListDataSourcesResponse",
      "type": "object",
      "description": "Returns list of supported data sources and their metadata."
    },
    "StartManualTransferRunsRequest": {
      "type": "object",
      "id": "StartManualTransferRunsRequest",
      "description": "A request to start manual transfer runs.",
      "properties": {
        "requestedRunTime": {
          "description": "Specific run_time for a transfer run to be started. The requested_run_time must not be in the future.",
          "format": "google-datetime",
          "type": "string"
        },
        "requestedTimeRange": {
          "description": "Time range for the transfer runs that should be started.",
          "$ref": "TimeRange"
        }
      }
    },
    "TransferRun": {
      "description": "Represents a data transfer run.",
      "properties": {
        "destinationDatasetId": {
          "readOnly": true,
          "description": "Output only. The BigQuery target dataset id.",
          "type": "string"
        },
        "userId": {
          "type": "string",
          "format": "int64",
          "description": "Deprecated. Unique ID of the user on whose behalf transfer is done."
        },
        "runTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "For batch transfer runs, specifies the date and time of the data should be ingested."
        },
        "errorStatus": {
          "$ref": "Status",
          "description": "Status of the transfer run."
        },
        "scheduleTime": {
          "description": "Minimum time after which a transfer run can be started.",
          "format": "google-datetime",
          "type": "string"
        },
        "params": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "Output only. Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Last time the data transfer run state was updated."
        },
        "schedule": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Describes the schedule of this transfer run if it was created as part of a regular schedule. For batch transfer runs that are scheduled manually, this is empty. NOTE: the system might choose to delay the schedule depending on the current load, so `schedule_time` doesn't always match this."
        },
        "notificationPubsubTopic": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Pub/Sub topic where a notification will be sent after this transfer run finishes"
        },
        "state": {
          "description": "Data transfer run state. Ignored for input requests.",
          "type": "string",
          "enum": [
            "TRANSFER_STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "State placeholder (0).",
            "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
            "Data transfer is in progress (3).",
            "Data transfer completed successfully (4).",
            "Data transfer failed (5).",
            "Data transfer is cancelled (6)."
          ]
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Time when transfer run ended. Parameter ignored by server for input requests."
        },
        "name": {
          "description": "The resource name of the transfer run. Transfer run names have the form `projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`. The name is ignored when creating a transfer run.",
          "type": "string"
        },
        "startTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Time when transfer run was started. Parameter ignored by server for input requests."
        },
        "emailPreferences": {
          "readOnly": true,
          "description": "Output only. Email notifications will be sent according to these preferences to the email address of the user who owns the transfer config this run was derived from.",
          "$ref": "EmailPreferences"
        },
        "dataSourceId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Data source id."
        }
      },
      "type": "object",
      "id": "TransferRun"
    },
    "TransferConfig": {
      "type": "object",
      "id": "TransferConfig",
      "properties": {
        "nextRunTime": {
          "readOnly": true,
          "description": "Output only. Next time when data transfer will run.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "TRANSFER_STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "State placeholder (0).",
            "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
            "Data transfer is in progress (3).",
            "Data transfer completed successfully (4).",
            "Data transfer failed (5).",
            "Data transfer is cancelled (6)."
          ],
          "description": "Output only. State of the most recently updated transfer run."
        },
        "schedule": {
          "description": "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: the granularity should be at least 8 hours, or less frequent.",
          "type": "string"
        },
        "dataSourceId": {
          "description": "Data source id. Cannot be changed once data transfer is created.",
          "type": "string"
        },
        "displayName": {
          "description": "User specified display name for the data transfer.",
          "type": "string"
        },
        "userId": {
          "type": "string",
          "description": "Deprecated. Unique ID of the user on whose behalf transfer is done.",
          "format": "int64"
        },
        "disabled": {
          "type": "boolean",
          "description": "Is this config disabled. When set to true, no runs are scheduled for a given transfer."
        },
        "notificationPubsubTopic": {
          "type": "string",
          "description": "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish."
        },
        "destinationDatasetId": {
          "type": "string",
          "description": "The BigQuery target dataset id."
        },
        "emailPreferences": {
          "$ref": "EmailPreferences",
          "description": "Email notifications will be sent according to these preferences to the email address of the user who owns this transfer config."
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. Data transfer modification time. Ignored by server on input.",
          "format": "google-datetime",
          "readOnly": true
        },
        "params": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
          "type": "object"
        },
        "dataRefreshWindowDays": {
          "type": "integer",
          "description": "The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value.",
          "format": "int32"
        },
        "datasetRegion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Region in which BigQuery dataset is located."
        },
        "name": {
          "description": "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.",
          "type": "string"
        },
        "scheduleOptions": {
          "$ref": "ScheduleOptions",
          "description": "Options customizing the data transfer schedule."
        }
      },
      "description": "Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account."
    }
  },
  "protocol": "rest",
  "name": "bigquerydatatransfer",
  "canonicalName": "BigQuery Data Transfer",
  "revision": "20210717",
  "description": "Schedule queries or transfer external data from SaaS applications to Google BigQuery on a regular basis.",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        },
        "https://www.googleapis.com/auth/bigquery": {
          "description": "View and manage your data in Google BigQuery"
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://bigquerydatatransfer.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "mtlsRootUrl": "https://bigquerydatatransfer.mtls.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "transferConfigs": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`",
                  "location": "path"
                }
              },
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}",
              "httpMethod": "GET",
              "description": "Returns information about a data transfer config.",
              "path": "v1/{+name}",
              "id": "bigquerydatatransfer.projects.transferConfigs.get",
              "response": {
                "$ref": "TransferConfig"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "httpMethod": "GET",
              "parameters": {
                "dataSourceIds": {
                  "type": "string",
                  "repeated": true,
                  "description": "When specified, only configurations of requested data sources are returned.",
                  "location": "query"
                },
                "parent": {
                  "type": "string",
                  "description": "Required. The BigQuery project id for which data sources should be returned: `projects/{project_id}` or `projects/{project_id}/locations/{location_id}`",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Pagination token, which can be used to request a specific page of `ListTransfersRequest` list results. For multiple-page results, `ListTransfersResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results."
                },
                "pageSize": {
                  "description": "Page size. The default page size is the maximum value of 1000 results.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "response": {
                "$ref": "ListTransferConfigsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/transferConfigs",
              "id": "bigquerydatatransfer.projects.transferConfigs.list",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "description": "Returns information about all transfer configs owned by a project in the specified location.",
              "flatPath": "v1/projects/{projectsId}/transferConfigs"
            },
            "create": {
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. The BigQuery project id where the transfer configuration should be created. Must be in the format projects/{project_id}/locations/{location_id} or projects/{project_id}. If specified location and location of the destination bigquery dataset do not match - the request will fail.",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                },
                "serviceAccountName": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional service account name. If this field is set, transfer config will be created with this service account credentials. It requires that requesting user calling this API has permissions to act as this service account."
                },
                "authorizationCode": {
                  "description": "Optional OAuth2 authorization code to use with this transfer configuration. This is required if new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain authorization_code, please make a request to https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=&scope=&redirect_uri= * client_id should be OAuth client_id of BigQuery DTS API for the given data source returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. * redirect_uri is an optional parameter. If not specified, then authorization code is posted to the opener of authorization flow window. Otherwise it will be sent to the redirect uri. A special value of urn:ietf:wg:oauth:2.0:oob means that authorization code should be returned in the title bar of the browser, with the page text prompting the user to copy the code and paste it in the application.",
                  "location": "query",
                  "type": "string"
                },
                "versionInfo": {
                  "description": "Optional version info. If users want to find a very recent access token, that is, immediately after approving access, users have to set the version_info claim in the token request. To obtain the version_info, users must use the \"none+gsession\" response type. which be return a version_info back in the authorization response which be be put in a JWT claim in the token request.",
                  "type": "string",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "bigquerydatatransfer.projects.transferConfigs.create",
              "description": "Creates a new data transfer configuration.",
              "flatPath": "v1/projects/{projectsId}/transferConfigs",
              "request": {
                "$ref": "TransferConfig"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}/transferConfigs",
              "httpMethod": "POST",
              "response": {
                "$ref": "TransferConfig"
              }
            },
            "delete": {
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}",
              "parameters": {
                "name": {
                  "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`",
                  "location": "path",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "id": "bigquerydatatransfer.projects.transferConfigs.delete",
              "httpMethod": "DELETE",
              "path": "v1/{+name}",
              "description": "Deletes a data transfer configuration, including any associated transfer runs and logs.",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "scheduleRuns": {
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ScheduleTransferRunsResponse"
              },
              "description": "Creates transfer runs for a time range [start_time, end_time]. For each date - or whatever granularity the data source supports - in the range, one transfer run is created. Note that runs are created per UTC time in the time range. DEPRECATED: use StartManualTransferRuns instead.",
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "Required. Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "bigquerydatatransfer.projects.transferConfigs.scheduleRuns",
              "request": {
                "$ref": "ScheduleTransferRunsRequest"
              },
              "path": "v1/{+parent}:scheduleRuns",
              "httpMethod": "POST",
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}:scheduleRuns"
            },
            "startManualRuns": {
              "path": "v1/{+parent}:startManualRuns",
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "id": "bigquerydatatransfer.projects.transferConfigs.startManualRuns",
              "request": {
                "$ref": "StartManualTransferRunsRequest"
              },
              "description": "Start manual transfer runs to be executed now with schedule_time equal to current time. The transfer runs can be created for a time range where the run_time is between start_time (inclusive) and end_time (exclusive), or for a specific run_time.",
              "response": {
                "$ref": "StartManualTransferRunsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}:startManualRuns",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "patch": {
              "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.",
                  "pattern": "^projects/[^/]+/transferConfigs/[^/]+$"
                },
                "updateMask": {
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask",
                  "description": "Required. Required list of fields to be updated in this request."
                },
                "versionInfo": {
                  "description": "Optional version info. If users want to find a very recent access token, that is, immediately after approving access, users have to set the version_info claim in the token request. To obtain the version_info, users must use the \"none+gsession\" response type. which be return a version_info back in the authorization response which be be put in a JWT claim in the token request.",
                  "type": "string",
                  "location": "query"
                },
                "authorizationCode": {
                  "location": "query",
                  "description": "Optional OAuth2 authorization code to use with this transfer configuration. If it is provided, the transfer configuration will be associated with the authorizing user. In order to obtain authorization_code, please make a request to https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=&scope=&redirect_uri= * client_id should be OAuth client_id of BigQuery DTS API for the given data source returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. * redirect_uri is an optional parameter. If not specified, then authorization code is posted to the opener of authorization flow window. Otherwise it will be sent to the redirect uri. A special value of urn:ietf:wg:oauth:2.0:oob means that authorization code should be returned in the title bar of the browser, with the page text prompting the user to copy the code and paste it in the application.",
                  "type": "string"
                },
                "serviceAccountName": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional service account name. If this field is set and \"service_account_name\" is set in update_mask, transfer config will be updated to use this service account credentials. It requires that requesting user calling this API has permissions to act as this service account."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "response": {
                "$ref": "TransferConfig"
              },
              "description": "Updates a data transfer configuration. All fields must be set, even if they are not updated.",
              "path": "v1/{+name}",
              "id": "bigquerydatatransfer.projects.transferConfigs.patch",
              "request": {
                "$ref": "TransferConfig"
              }
            }
          },
          "resources": {
            "runs": {
              "methods": {
                "list": {
                  "description": "Returns information about running and completed jobs.",
                  "response": {
                    "$ref": "ListTransferRunsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of transfer configuration for which transfer runs should be retrieved. Format of transfer configuration resource name is: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.",
                      "location": "path"
                    },
                    "pageSize": {
                      "description": "Page size. The default page size is the maximum value of 1000 results.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "states": {
                      "description": "When specified, only transfer runs with requested states are returned.",
                      "repeated": true,
                      "location": "query",
                      "enum": [
                        "TRANSFER_STATE_UNSPECIFIED",
                        "PENDING",
                        "RUNNING",
                        "SUCCEEDED",
                        "FAILED",
                        "CANCELLED"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "State placeholder (0).",
                        "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                        "Data transfer is in progress (3).",
                        "Data transfer completed successfully (4).",
                        "Data transfer failed (5).",
                        "Data transfer is cancelled (6)."
                      ]
                    },
                    "pageToken": {
                      "description": "Pagination token, which can be used to request a specific page of `ListTransferRunsRequest` list results. For multiple-page results, `ListTransferRunsResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.",
                      "location": "query",
                      "type": "string"
                    },
                    "runAttempt": {
                      "enumDescriptions": [
                        "All runs should be returned.",
                        "Only latest run per day should be returned."
                      ],
                      "enum": [
                        "RUN_ATTEMPT_UNSPECIFIED",
                        "LATEST"
                      ],
                      "type": "string",
                      "location": "query",
                      "description": "Indicates how run attempts are to be pulled."
                    }
                  },
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.list",
                  "path": "v1/{+parent}/runs",
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs",
                  "httpMethod": "GET"
                },
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "TransferRun"
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                  "description": "Returns information about the particular transfer run.",
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                      "required": true,
                      "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                },
                "delete": {
                  "description": "Deletes the specified transfer run.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                  "id": "bigquerydatatransfer.projects.transferConfigs.runs.delete",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`",
                      "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                }
              },
              "resources": {
                "transferLogs": {
                  "methods": {
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. Transfer run name in the form: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`",
                          "pattern": "^projects/[^/]+/transferConfigs/[^/]+/runs/[^/]+$"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Pagination token, which can be used to request a specific page of `ListTransferLogsRequest` list results. For multiple-page results, `ListTransferLogsResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.",
                          "type": "string"
                        },
                        "messageTypes": {
                          "enumDescriptions": [
                            "No severity specified.",
                            "Informational message.",
                            "Warning message.",
                            "Error message."
                          ],
                          "description": "Message types to return. If not populated - INFO, WARNING and ERROR messages are returned.",
                          "repeated": true,
                          "enum": [
                            "MESSAGE_SEVERITY_UNSPECIFIED",
                            "INFO",
                            "WARNING",
                            "ERROR"
                          ],
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "type": "integer",
                          "description": "Page size. The default page size is the maximum value of 1000 results."
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/transferConfigs/{transferConfigsId}/runs/{runsId}/transferLogs",
                      "id": "bigquerydatatransfer.projects.transferConfigs.runs.transferLogs.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Returns user facing log messages for the data transfer run.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListTransferLogsResponse"
                      },
                      "path": "v1/{+parent}/transferLogs"
                    }
                  }
                }
              }
            }
          }
        },
        "locations": {
          "resources": {
            "dataSources": {
              "methods": {
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSources/{dataSourcesId}",
                  "description": "Retrieves a supported data source and returns its settings, which can be used for UI rendering.",
                  "id": "bigquerydatatransfer.projects.locations.dataSources.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/dataSources/{data_source_id}` or `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataSources/[^/]+$",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "DataSource"
                  }
                },
                "list": {
                  "id": "bigquerydatatransfer.projects.locations.dataSources.list",
                  "response": {
                    "$ref": "ListDataSourcesResponse"
                  },
                  "description": "Lists supported data sources and returns their settings, which can be used for UI rendering.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "path": "v1/{+parent}/dataSources",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSources",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Pagination token, which can be used to request a specific page of `ListDataSourcesRequest` list results. For multiple-page results, `ListDataSourcesResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results."
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The BigQuery project id for which data sources should be returned. Must be in the form: `projects/{project_id}` or `projects/{project_id}/locations/{location_id}",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Page size. The default page size is the maximum value of 1000 results."
                    }
                  }
                },
                "checkValidCreds": {
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "description": "Returns true if valid credentials exist for the given data source and requesting user. Some data sources doesn't support service account, so we need to talk to them on behalf of the end user. This API just checks whether we have OAuth token for the particular user, which is a pre-requisite before user can create a transfer config.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dataSources/{dataSourcesId}:checkValidCreds",
                  "path": "v1/{+name}:checkValidCreds",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "CheckValidCredsResponse"
                  },
                  "request": {
                    "$ref": "CheckValidCredsRequest"
                  },
                  "id": "bigquerydatatransfer.projects.locations.dataSources.checkValidCreds",
                  "parameters": {
                    "name": {
                      "description": "Required. The data source in the form: `projects/{project_id}/dataSources/{data_source_id}` or `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataSources/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "POST"
                }
              }
            },
            "transferConfigs": {
              "methods": {
                "patch": {
                  "parameters": {
                    "authorizationCode": {
                      "location": "query",
                      "description": "Optional OAuth2 authorization code to use with this transfer configuration. If it is provided, the transfer configuration will be associated with the authorizing user. In order to obtain authorization_code, please make a request to https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=&scope=&redirect_uri= * client_id should be OAuth client_id of BigQuery DTS API for the given data source returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. * redirect_uri is an optional parameter. If not specified, then authorization code is posted to the opener of authorization flow window. Otherwise it will be sent to the redirect uri. A special value of urn:ietf:wg:oauth:2.0:oob means that authorization code should be returned in the title bar of the browser, with the page text prompting the user to copy the code and paste it in the application.",
                      "type": "string"
                    },
                    "serviceAccountName": {
                      "description": "Optional service account name. If this field is set and \"service_account_name\" is set in update_mask, transfer config will be updated to use this service account credentials. It requires that requesting user calling this API has permissions to act as this service account.",
                      "type": "string",
                      "location": "query"
                    },
                    "versionInfo": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional version info. If users want to find a very recent access token, that is, immediately after approving access, users have to set the version_info claim in the token request. To obtain the version_info, users must use the \"none+gsession\" response type. which be return a version_info back in the authorization response which be be put in a JWT claim in the token request."
                    },
                    "name": {
                      "description": "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Required. Required list of fields to be updated in this request.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "description": "Updates a data transfer configuration. All fields must be set, even if they are not updated.",
                  "response": {
                    "$ref": "TransferConfig"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "TransferConfig"
                  },
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.patch",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH"
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListTransferConfigsResponse"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.list",
                  "path": "v1/{+parent}/transferConfigs",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "Page size. The default page size is the maximum value of 1000 results.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The BigQuery project id for which data sources should be returned: `projects/{project_id}` or `projects/{project_id}/locations/{location_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "Pagination token, which can be used to request a specific page of `ListTransfersRequest` list results. For multiple-page results, `ListTransfersResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.",
                      "location": "query",
                      "type": "string"
                    },
                    "dataSourceIds": {
                      "location": "query",
                      "type": "string",
                      "repeated": true,
                      "description": "When specified, only configurations of requested data sources are returned."
                    }
                  },
                  "description": "Returns information about all transfer configs owned by a project in the specified location."
                },
                "startManualRuns": {
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$"
                    }
                  },
                  "path": "v1/{+parent}:startManualRuns",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.startManualRuns",
                  "request": {
                    "$ref": "StartManualTransferRunsRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "StartManualTransferRunsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}:startManualRuns",
                  "httpMethod": "POST",
                  "description": "Start manual transfer runs to be executed now with schedule_time equal to current time. The transfer runs can be created for a time range where the run_time is between start_time (inclusive) and end_time (exclusive), or for a specific run_time."
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "TransferConfig"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                      "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Returns information about a data transfer config.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}",
                  "httpMethod": "GET",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.get",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                },
                "scheduleRuns": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}:scheduleRuns",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.scheduleRuns",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ScheduleTransferRunsRequest"
                  },
                  "path": "v1/{+parent}:scheduleRuns",
                  "response": {
                    "$ref": "ScheduleTransferRunsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates transfer runs for a time range [start_time, end_time]. For each date - or whatever granularity the data source supports - in the range, one transfer run is created. Note that runs are created per UTC time in the time range. DEPRECATED: use StartManualTransferRuns instead.",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$",
                      "description": "Required. Transfer configuration name in the form: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`."
                    }
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a data transfer configuration, including any associated transfer runs and logs."
                },
                "create": {
                  "request": {
                    "$ref": "TransferConfig"
                  },
                  "parameters": {
                    "versionInfo": {
                      "description": "Optional version info. If users want to find a very recent access token, that is, immediately after approving access, users have to set the version_info claim in the token request. To obtain the version_info, users must use the \"none+gsession\" response type. which be return a version_info back in the authorization response which be be put in a JWT claim in the token request.",
                      "location": "query",
                      "type": "string"
                    },
                    "serviceAccountName": {
                      "description": "Optional service account name. If this field is set, transfer config will be created with this service account credentials. It requires that requesting user calling this API has permissions to act as this service account.",
                      "location": "query",
                      "type": "string"
                    },
                    "authorizationCode": {
                      "location": "query",
                      "description": "Optional OAuth2 authorization code to use with this transfer configuration. This is required if new credentials are needed, as indicated by `CheckValidCreds`. In order to obtain authorization_code, please make a request to https://www.gstatic.com/bigquerydatatransfer/oauthz/auth?client_id=&scope=&redirect_uri= * client_id should be OAuth client_id of BigQuery DTS API for the given data source returned by ListDataSources method. * data_source_scopes are the scopes returned by ListDataSources method. * redirect_uri is an optional parameter. If not specified, then authorization code is posted to the opener of authorization flow window. Otherwise it will be sent to the redirect uri. A special value of urn:ietf:wg:oauth:2.0:oob means that authorization code should be returned in the title bar of the browser, with the page text prompting the user to copy the code and paste it in the application.",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The BigQuery project id where the transfer configuration should be created. Must be in the format projects/{project_id}/locations/{location_id} or projects/{project_id}. If specified location and location of the destination bigquery dataset do not match - the request will fail."
                    }
                  },
                  "path": "v1/{+parent}/transferConfigs",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new data transfer configuration.",
                  "id": "bigquerydatatransfer.projects.locations.transferConfigs.create",
                  "response": {
                    "$ref": "TransferConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                }
              },
              "resources": {
                "runs": {
                  "resources": {
                    "transferLogs": {
                      "methods": {
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/bigquery",
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "parameters": {
                            "messageTypes": {
                              "repeated": true,
                              "type": "string",
                              "enumDescriptions": [
                                "No severity specified.",
                                "Informational message.",
                                "Warning message.",
                                "Error message."
                              ],
                              "enum": [
                                "MESSAGE_SEVERITY_UNSPECIFIED",
                                "INFO",
                                "WARNING",
                                "ERROR"
                              ],
                              "location": "query",
                              "description": "Message types to return. If not populated - INFO, WARNING and ERROR messages are returned."
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "Pagination token, which can be used to request a specific page of `ListTransferLogsRequest` list results. For multiple-page results, `ListTransferLogsResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results."
                            },
                            "parent": {
                              "required": true,
                              "description": "Required. Transfer run name in the form: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`",
                              "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                              "type": "string",
                              "location": "path"
                            },
                            "pageSize": {
                              "format": "int32",
                              "type": "integer",
                              "description": "Page size. The default page size is the maximum value of 1000 results.",
                              "location": "query"
                            }
                          },
                          "httpMethod": "GET",
                          "description": "Returns user facing log messages for the data transfer run.",
                          "path": "v1/{+parent}/transferLogs",
                          "response": {
                            "$ref": "ListTransferLogsResponse"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.transferLogs.list",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}/transferLogs"
                        }
                      }
                    }
                  },
                  "methods": {
                    "delete": {
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.delete",
                      "response": {
                        "$ref": "Empty"
                      },
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "description": "Deletes the specified transfer run.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+/runs/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/transferConfigs/{config_id}/runs/{run_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}/runs/{run_id}`",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs/{runsId}",
                      "response": {
                        "$ref": "TransferRun"
                      },
                      "httpMethod": "GET",
                      "description": "Returns information about the particular transfer run.",
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.get"
                    },
                    "list": {
                      "parameters": {
                        "pageToken": {
                          "description": "Pagination token, which can be used to request a specific page of `ListTransferRunsRequest` list results. For multiple-page results, `ListTransferRunsResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.",
                          "type": "string",
                          "location": "query"
                        },
                        "runAttempt": {
                          "enumDescriptions": [
                            "All runs should be returned.",
                            "Only latest run per day should be returned."
                          ],
                          "type": "string",
                          "location": "query",
                          "enum": [
                            "RUN_ATTEMPT_UNSPECIFIED",
                            "LATEST"
                          ],
                          "description": "Indicates how run attempts are to be pulled."
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "description": "Required. Name of transfer configuration for which transfer runs should be retrieved. Format of transfer configuration resource name is: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/transferConfigs/[^/]+$"
                        },
                        "states": {
                          "description": "When specified, only transfer runs with requested states are returned.",
                          "repeated": true,
                          "enumDescriptions": [
                            "State placeholder (0).",
                            "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                            "Data transfer is in progress (3).",
                            "Data transfer completed successfully (4).",
                            "Data transfer failed (5).",
                            "Data transfer is cancelled (6)."
                          ],
                          "enum": [
                            "TRANSFER_STATE_UNSPECIFIED",
                            "PENDING",
                            "RUNNING",
                            "SUCCEEDED",
                            "FAILED",
                            "CANCELLED"
                          ],
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Page size. The default page size is the maximum value of 1000 results.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        }
                      },
                      "path": "v1/{+parent}/runs",
                      "id": "bigquerydatatransfer.projects.locations.transferConfigs.runs.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "response": {
                        "$ref": "ListTransferRunsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/transferConfigs/{transferConfigsId}/runs",
                      "description": "Returns information about running and completed jobs.",
                      "httpMethod": "GET"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "httpMethod": "GET",
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/locations",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}/locations",
              "description": "Lists information about the supported locations for this service.",
              "id": "bigquerydatatransfer.projects.locations.list"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "id": "bigquerydatatransfer.projects.locations.get",
              "description": "Gets information about a location.",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Resource name for the location."
                }
              },
              "httpMethod": "GET"
            }
          }
        },
        "dataSources": {
          "methods": {
            "checkValidCreds": {
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The data source in the form: `projects/{project_id}/dataSources/{data_source_id}` or `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/dataSources/[^/]+$"
                }
              },
              "flatPath": "v1/projects/{projectsId}/dataSources/{dataSourcesId}:checkValidCreds",
              "id": "bigquerydatatransfer.projects.dataSources.checkValidCreds",
              "response": {
                "$ref": "CheckValidCredsResponse"
              },
              "description": "Returns true if valid credentials exist for the given data source and requesting user. Some data sources doesn't support service account, so we need to talk to them on behalf of the end user. This API just checks whether we have OAuth token for the particular user, which is a pre-requisite before user can create a transfer config.",
              "request": {
                "$ref": "CheckValidCredsRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}:checkValidCreds",
              "httpMethod": "POST"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "id": "bigquerydatatransfer.projects.dataSources.get",
              "description": "Retrieves a supported data source and returns its settings, which can be used for UI rendering.",
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/dataSources/{dataSourcesId}",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The field will contain name of the resource requested, for example: `projects/{project_id}/dataSources/{data_source_id}` or `projects/{project_id}/locations/{location_id}/dataSources/{data_source_id}`",
                  "pattern": "^projects/[^/]+/dataSources/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "DataSource"
              }
            },
            "list": {
              "id": "bigquerydatatransfer.projects.dataSources.list",
              "path": "v1/{+parent}/dataSources",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "description": "Page size. The default page size is the maximum value of 1000 results.",
                  "type": "integer",
                  "location": "query"
                },
                "parent": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "description": "Required. The BigQuery project id for which data sources should be returned. Must be in the form: `projects/{project_id}` or `projects/{project_id}/locations/{location_id}"
                },
                "pageToken": {
                  "location": "query",
                  "description": "Pagination token, which can be used to request a specific page of `ListDataSourcesRequest` list results. For multiple-page results, `ListDataSourcesResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigquery",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "description": "Lists supported data sources and returns their settings, which can be used for UI rendering.",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/projects/{projectsId}/dataSources",
              "response": {
                "$ref": "ListDataSourcesResponse"
              },
              "httpMethod": "GET"
            }
          }
        }
      }
    }
  },
  "version_module": true,
  "baseUrl": "https://bigquerydatatransfer.googleapis.com/",
  "discoveryVersion": "v1",
  "basePath": "",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "batchPath": "batch",
  "ownerName": "Google",
  "parameters": {
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "alt": {
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true",
      "type": "boolean"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format.",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    }
  },
  "documentationLink": "https://cloud.google.com/bigquery-transfer/",
  "title": "BigQuery Data Transfer API",
  "ownerDomain": "google.com",
  "version": "v1"
}

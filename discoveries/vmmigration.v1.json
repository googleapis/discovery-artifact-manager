{
  "schemas": {
    "ListLocationsResponse": {
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse"
    },
    "AddGroupMigrationRequest": {
      "type": "object",
      "id": "AddGroupMigrationRequest",
      "description": "Request message for 'AddGroupMigration' request.",
      "properties": {
        "migratingVm": {
          "type": "string",
          "description": "The full path name of the MigratingVm to add."
        }
      }
    },
    "VmCapabilities": {
      "id": "VmCapabilities",
      "type": "object",
      "description": "Migrating VM source information about the VM capabilities needed for some Compute Engine features.",
      "properties": {
        "osCapabilities": {
          "readOnly": true,
          "description": "Output only. Unordered list. List of certain VM OS capabilities needed for some Compute Engine features.",
          "items": {
            "enumDescriptions": [
              "This is for API compatibility only and is not in use.",
              "NVMe driver installed and the VM can use NVMe PD or local SSD.",
              "gVNIC virtual NIC driver supported."
            ],
            "type": "string",
            "enum": [
              "OS_CAPABILITY_UNSPECIFIED",
              "OS_CAPABILITY_NVME_STORAGE_ACCESS",
              "OS_CAPABILITY_GVNIC_NETWORK_INTERFACE"
            ]
          },
          "type": "array"
        },
        "lastOsCapabilitiesUpdateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The last time OS capabilities list was updated."
        }
      }
    },
    "ComputeEngineDisksTargetDetails": {
      "properties": {
        "vmTargetDetails": {
          "description": "Details for the VM the migrated data disks are attached to.",
          "$ref": "DisksMigrationVmTargetDetails"
        },
        "disksTargetDetails": {
          "$ref": "DisksMigrationDisksTargetDetails",
          "description": "Details of the disks-only migration target."
        },
        "disks": {
          "items": {
            "$ref": "PersistentDisk"
          },
          "description": "The details of each created Persistent Disk.",
          "type": "array"
        }
      },
      "description": "ComputeEngineDisksTargetDetails is a collection of created Persistent Disks details.",
      "type": "object",
      "id": "ComputeEngineDisksTargetDetails"
    },
    "VmwareSourceVmDetails": {
      "description": "Represent the source Vmware VM details.",
      "id": "VmwareSourceVmDetails",
      "type": "object",
      "properties": {
        "vmCapabilitiesInfo": {
          "readOnly": true,
          "description": "Output only. Information about VM capabilities needed for some Compute Engine features.",
          "$ref": "VmCapabilities"
        },
        "disks": {
          "description": "The disks attached to the source VM.",
          "type": "array",
          "items": {
            "$ref": "VmwareDiskDetails"
          }
        },
        "committedStorageBytes": {
          "type": "string",
          "format": "int64",
          "description": "The total size of the disks being migrated in bytes."
        },
        "firmware": {
          "type": "string",
          "enum": [
            "FIRMWARE_UNSPECIFIED",
            "EFI",
            "BIOS"
          ],
          "enumDescriptions": [
            "The firmware is unknown.",
            "The firmware is EFI.",
            "The firmware is BIOS."
          ],
          "description": "The firmware type of the source VM."
        }
      }
    },
    "BootDiskDefaults": {
      "description": "BootDiskDefaults hold information about the boot disk of a VM.",
      "id": "BootDiskDefaults",
      "type": "object",
      "properties": {
        "deviceName": {
          "description": "Optional. Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.",
          "type": "string"
        },
        "diskType": {
          "enum": [
            "COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED",
            "COMPUTE_ENGINE_DISK_TYPE_STANDARD",
            "COMPUTE_ENGINE_DISK_TYPE_SSD",
            "COMPUTE_ENGINE_DISK_TYPE_BALANCED"
          ],
          "type": "string",
          "description": "Optional. The type of disk provisioning to use for the VM.",
          "enumDescriptions": [
            "An unspecified disk type. Will be used as STANDARD.",
            "A Standard disk type.",
            "SSD hard disk type.",
            "An alternative to SSD persistent disks that balance performance and cost."
          ]
        },
        "image": {
          "$ref": "DiskImageDefaults",
          "description": "The image to use when creating the disk."
        },
        "diskName": {
          "type": "string",
          "description": "Optional. The name of the disk."
        }
      }
    },
    "UtilizationReport": {
      "type": "object",
      "id": "UtilizationReport",
      "description": "Utilization report details the utilization (CPU, memory, etc.) of selected source VMs.",
      "properties": {
        "frameEndTime": {
          "type": "string",
          "description": "Output only. The point in time when the time frame ends. Notice that the time frame is counted backwards. For instance if the \"frame_end_time\" value is 2021/01/20 and the time frame is WEEK then the report covers the week between 2021/01/20 and 2021/01/14.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "timeFrame": {
          "enum": [
            "TIME_FRAME_UNSPECIFIED",
            "WEEK",
            "MONTH",
            "YEAR"
          ],
          "enumDescriptions": [
            "The time frame was not specified and will default to WEEK.",
            "One week.",
            "One month.",
            "One year."
          ],
          "type": "string",
          "description": "Time frame of the report."
        },
        "displayName": {
          "description": "The report display name, as assigned by the user.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time the report was created (this refers to the time of the request, not the time the report creation completed).",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "description": "Output only. The report unique name.",
          "type": "string",
          "readOnly": true
        },
        "vmCount": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "Output only. Total number of VMs included in the report."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The state is unknown. This value is not in use.",
            "The report is in the making.",
            "Report creation completed successfully.",
            "Report creation failed."
          ],
          "description": "Output only. Current state of the report.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "SUCCEEDED",
            "FAILED"
          ]
        },
        "stateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the state was last set.",
          "format": "google-datetime"
        },
        "error": {
          "description": "Output only. Provides details on the state of the report in case of an error.",
          "readOnly": true,
          "$ref": "Status"
        },
        "vms": {
          "type": "array",
          "description": "List of utilization information per VM. When sent as part of the request, the \"vm_id\" field is used in order to specify which VMs to include in the report. In that case all other fields are ignored.",
          "items": {
            "$ref": "VmUtilizationInfo"
          }
        }
      }
    },
    "ReplicationCycle": {
      "type": "object",
      "properties": {
        "totalPauseDuration": {
          "description": "The accumulated duration the replication cycle was paused.",
          "format": "google-duration",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "PAUSED",
            "FAILED",
            "SUCCEEDED"
          ],
          "type": "string",
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The replication cycle is running.",
            "The replication cycle is paused.",
            "The replication cycle finished with errors.",
            "The replication cycle finished successfully."
          ],
          "description": "State of the ReplicationCycle."
        },
        "warnings": {
          "description": "Output only. Warnings that occurred during the cycle.",
          "items": {
            "$ref": "MigrationWarning"
          },
          "readOnly": true,
          "type": "array"
        },
        "cycleNumber": {
          "type": "integer",
          "description": "The cycle's ordinal number.",
          "format": "int32"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time the replication cycle has ended.",
          "type": "string"
        },
        "error": {
          "$ref": "Status",
          "description": "Provides details on the state of the cycle in case of an error."
        },
        "name": {
          "description": "The identifier of the ReplicationCycle.",
          "type": "string"
        },
        "steps": {
          "type": "array",
          "description": "The cycle's steps list representing its progress.",
          "items": {
            "$ref": "CycleStep"
          }
        },
        "startTime": {
          "format": "google-datetime",
          "description": "The time the replication cycle has started.",
          "type": "string"
        },
        "progressPercent": {
          "format": "int32",
          "type": "integer",
          "deprecated": true,
          "description": "The current progress in percentage of this cycle. Was replaced by 'steps' field, which breaks down the cycle progression more accurately."
        }
      },
      "id": "ReplicationCycle",
      "description": "ReplicationCycle contains information about the current replication cycle status."
    },
    "DiskImageDefaults": {
      "description": "Contains details about the image source used to create the disk.",
      "properties": {
        "sourceImage": {
          "type": "string",
          "description": "Required. The Image resource used when creating the disk."
        }
      },
      "type": "object",
      "id": "DiskImageDefaults"
    },
    "PauseMigrationRequest": {
      "id": "PauseMigrationRequest",
      "description": "Request message for 'PauseMigration' request.",
      "properties": {},
      "type": "object"
    },
    "ClientSecretCredentials": {
      "description": "Message describing Azure Credentials using tenant ID, client ID and secret.",
      "type": "object",
      "id": "ClientSecretCredentials",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Azure tenant ID."
        },
        "clientId": {
          "description": "Azure client ID.",
          "type": "string"
        },
        "clientSecret": {
          "description": "Input only. Azure client secret.",
          "type": "string"
        }
      }
    },
    "ApplianceVersion": {
      "id": "ApplianceVersion",
      "description": "Describes an appliance version.",
      "type": "object",
      "properties": {
        "critical": {
          "type": "boolean",
          "description": "Determine whether it's critical to upgrade the appliance to this version."
        },
        "releaseNotesUri": {
          "type": "string",
          "description": "Link to a page that contains the version release notes."
        },
        "version": {
          "type": "string",
          "description": "The appliance version."
        },
        "uri": {
          "description": "A link for downloading the version.",
          "type": "string"
        }
      }
    },
    "AzureSourceDetails": {
      "id": "AzureSourceDetails",
      "properties": {
        "subscriptionId": {
          "description": "Immutable. Azure subscription ID.",
          "type": "string"
        },
        "clientSecretCreds": {
          "description": "Azure Credentials using tenant ID, client ID and secret.",
          "$ref": "ClientSecretCredentials"
        },
        "state": {
          "description": "Output only. State of the source as determined by the health check.",
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The state was not sampled by the health checks yet.",
            "The source is available but might not be usable yet due to invalid credentials or another reason. The error message will contain further details.",
            "The source exists and its credentials were verified."
          ],
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "FAILED",
            "ACTIVE"
          ],
          "type": "string"
        },
        "azureLocation": {
          "type": "string",
          "description": "Immutable. The Azure location (region) that the source VMs will be migrated from."
        },
        "error": {
          "description": "Output only. Provides details on the state of the Source in case of an error.",
          "$ref": "Status",
          "readOnly": true
        },
        "resourceGroupId": {
          "readOnly": true,
          "description": "Output only. The ID of the Azure resource group that contains all resources related to the migration process of this source.",
          "type": "string"
        },
        "migrationResourcesUserTags": {
          "description": "User specified tags to add to every M2VM generated resource in Azure. These tags will be set in addition to the default tags that are set as part of the migration process. The tags must not begin with the reserved prefix `m4ce` or `m2vm`.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "description": "AzureSourceDetails message describes a specific source details for the Azure source type.",
      "type": "object"
    },
    "ListUtilizationReportsResponse": {
      "properties": {
        "nextPageToken": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "readOnly": true,
          "description": "Output only. Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "utilizationReports": {
          "description": "Output only. The list of reports.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "UtilizationReport"
          }
        }
      },
      "id": "ListUtilizationReportsResponse",
      "type": "object",
      "description": "Response message for 'ListUtilizationReports' request."
    },
    "CloneJob": {
      "description": "CloneJob describes the process of creating a clone of a MigratingVM to the requested target based on the latest successful uploaded snapshots. While the migration cycles of a MigratingVm take place, it is possible to verify the uploaded VM can be started in the cloud, by creating a clone. The clone can be created without any downtime, and it is created using the latest snapshots which are already in the cloud. The cloneJob is only responsible for its work, not its products, which means once it is finished, it will never touch the instance it created. It will only delete it in case of the CloneJob being cancelled or upon failure to clone.",
      "properties": {
        "computeEngineDisksTargetDetails": {
          "description": "Output only. Details of the target Persistent Disks in Compute Engine.",
          "$ref": "ComputeEngineDisksTargetDetails",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the clone job was created (as an API call, not when it was actually created in the target)."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "ACTIVE",
            "FAILED",
            "SUCCEEDED",
            "CANCELLED",
            "CANCELLING",
            "ADAPTING_OS"
          ],
          "readOnly": true,
          "description": "Output only. State of the clone job.",
          "type": "string",
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The clone job has not yet started.",
            "The clone job is active and running.",
            "The clone job finished with errors.",
            "The clone job finished successfully.",
            "The clone job was cancelled.",
            "The clone job is being cancelled.",
            "OS adaptation is running as part of the clone job to generate license."
          ]
        },
        "computeEngineTargetDetails": {
          "readOnly": true,
          "description": "Output only. Details of the target VM in Compute Engine.",
          "$ref": "ComputeEngineTargetDetails"
        },
        "endTime": {
          "description": "Output only. The time the clone job was ended.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the clone.",
          "readOnly": true
        },
        "stateTime": {
          "description": "Output only. The time the state was last updated.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "error": {
          "$ref": "Status",
          "readOnly": true,
          "description": "Output only. Provides details for the errors that led to the Clone Job's state."
        },
        "steps": {
          "items": {
            "$ref": "CloneStep"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. The clone steps list representing its progress."
        }
      },
      "id": "CloneJob",
      "type": "object"
    },
    "Group": {
      "type": "object",
      "properties": {
        "migrationTargetType": {
          "enum": [
            "MIGRATION_TARGET_TYPE_UNSPECIFIED",
            "MIGRATION_TARGET_TYPE_GCE",
            "MIGRATION_TARGET_TYPE_DISKS"
          ],
          "type": "string",
          "description": "Immutable. The target type of this group.",
          "enumDescriptions": [
            "Group type is not specified. This defaults to Compute Engine targets.",
            "All MigratingVMs in the group must have Compute Engine targets.",
            "All MigratingVMs in the group must have Compute Engine Disks targets."
          ]
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The create time timestamp.",
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "Output only. The Group name.",
          "readOnly": true
        },
        "displayName": {
          "description": "Display name is a user defined name for this group which can be updated.",
          "type": "string"
        },
        "description": {
          "description": "User-provided description of the group.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The update time timestamp.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "Group",
      "description": "Describes message for 'Group' resource. The Group is a collections of several MigratingVms."
    },
    "ListCloneJobsResponse": {
      "id": "ListCloneJobsResponse",
      "properties": {
        "cloneJobs": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. The list of clone jobs response.",
          "items": {
            "$ref": "CloneJob"
          }
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string",
          "readOnly": true
        },
        "unreachable": {
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "Output only. Locations that could not be reached.",
          "type": "array"
        }
      },
      "description": "Response message for 'ListCloneJobs' request.",
      "type": "object"
    },
    "LocalizedMessage": {
      "properties": {
        "locale": {
          "description": "The locale used following the specification defined at https://www.rfc-editor.org/rfc/bcp/bcp47.txt. Examples are: \"en-US\", \"fr-CH\", \"es-MX\"",
          "type": "string"
        },
        "message": {
          "type": "string",
          "description": "The localized error message in the above locale."
        }
      },
      "type": "object",
      "id": "LocalizedMessage",
      "description": "Provides a localized error message that is safe to return to the user which can be attached to an RPC error."
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "type": "object"
    },
    "ListTargetProjectsResponse": {
      "type": "object",
      "id": "ListTargetProjectsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string",
          "readOnly": true
        },
        "unreachable": {
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. Locations that could not be reached."
        },
        "targetProjects": {
          "items": {
            "$ref": "TargetProject"
          },
          "description": "Output only. The list of target response.",
          "type": "array",
          "readOnly": true
        }
      },
      "description": "Response message for 'ListTargetProjects' call."
    },
    "InitializingReplicationStep": {
      "properties": {},
      "type": "object",
      "description": "InitializingReplicationStep contains specific step details.",
      "id": "InitializingReplicationStep"
    },
    "CutoverJob": {
      "description": "CutoverJob message describes a cutover of a migrating VM. The CutoverJob is the operation of shutting down the VM, creating a snapshot and clonning the VM using the replicated snapshot.",
      "properties": {
        "state": {
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "FAILED",
            "SUCCEEDED",
            "CANCELLED",
            "CANCELLING",
            "ACTIVE",
            "ADAPTING_OS"
          ],
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The cutover job has not yet started.",
            "The cutover job finished with errors.",
            "The cutover job finished successfully.",
            "The cutover job was cancelled.",
            "The cutover job is being cancelled.",
            "The cutover job is active and running.",
            "OS adaptation is running as part of the cutover job to generate license."
          ],
          "description": "Output only. State of the cutover job.",
          "type": "string"
        },
        "error": {
          "readOnly": true,
          "description": "Output only. Provides details for the errors that led to the Cutover Job's state.",
          "$ref": "Status"
        },
        "stateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the state was last updated.",
          "type": "string"
        },
        "computeEngineDisksTargetDetails": {
          "$ref": "ComputeEngineDisksTargetDetails",
          "readOnly": true,
          "description": "Output only. Details of the target Persistent Disks in Compute Engine."
        },
        "stateMessage": {
          "description": "Output only. A message providing possible extra details about the current state.",
          "type": "string",
          "readOnly": true
        },
        "steps": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "CutoverStep"
          },
          "description": "Output only. The cutover steps list representing its progress."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the cutover job was created (as an API call, not when it was actually created in the target).",
          "format": "google-datetime",
          "readOnly": true
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the cutover job had finished.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the cutover job.",
          "type": "string",
          "readOnly": true
        },
        "progressPercent": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Output only. The current progress in percentage of the cutover job."
        },
        "computeEngineTargetDetails": {
          "description": "Output only. Details of the target VM in Compute Engine.",
          "readOnly": true,
          "$ref": "ComputeEngineTargetDetails"
        }
      },
      "type": "object",
      "id": "CutoverJob"
    },
    "MigrationWarning": {
      "id": "MigrationWarning",
      "type": "object",
      "description": "Represents migration resource warning information that can be used with google.rpc.Status message. MigrationWarning is used to present the user with warning information in migration operations.",
      "properties": {
        "code": {
          "description": "The warning code.",
          "enum": [
            "WARNING_CODE_UNSPECIFIED",
            "ADAPTATION_WARNING"
          ],
          "enumDescriptions": [
            "Default value. This value is not used.",
            "A warning originated from OS Adaptation."
          ],
          "type": "string"
        },
        "actionItem": {
          "$ref": "LocalizedMessage",
          "description": "Suggested action for solving the warning."
        },
        "helpLinks": {
          "type": "array",
          "items": {
            "$ref": "Link"
          },
          "description": "URL(s) pointing to additional information on handling the current warning."
        },
        "warningMessage": {
          "description": "The localized warning message.",
          "$ref": "LocalizedMessage"
        },
        "warningTime": {
          "description": "The time the warning occurred.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "ListDatacenterConnectorsResponse": {
      "id": "ListDatacenterConnectorsResponse",
      "type": "object",
      "description": "Response message for 'ListDatacenterConnectors' request.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true
        },
        "unreachable": {
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. Locations that could not be reached."
        },
        "datacenterConnectors": {
          "readOnly": true,
          "items": {
            "$ref": "DatacenterConnector"
          },
          "type": "array",
          "description": "Output only. The list of sources response."
        }
      }
    },
    "PostProcessingStep": {
      "type": "object",
      "id": "PostProcessingStep",
      "properties": {},
      "description": "PostProcessingStep contains specific step details."
    },
    "Link": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Describes what the link offers."
        },
        "url": {
          "description": "The URL of the link.",
          "type": "string"
        }
      },
      "description": "Describes a URL link.",
      "id": "Link"
    },
    "AwsSecurityGroup": {
      "description": "AwsSecurityGroup describes a security group of an AWS VM.",
      "type": "object",
      "id": "AwsSecurityGroup",
      "properties": {
        "id": {
          "type": "string",
          "description": "The AWS security group id."
        },
        "name": {
          "description": "The AWS security group name.",
          "type": "string"
        }
      }
    },
    "Tag": {
      "description": "Tag is an AWS tag representation.",
      "id": "Tag",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of tag."
        },
        "key": {
          "type": "string",
          "description": "Key of tag."
        }
      }
    },
    "AvailableUpdates": {
      "type": "object",
      "description": "Holds informatiom about the available versions for upgrade.",
      "id": "AvailableUpdates",
      "properties": {
        "newDeployableAppliance": {
          "description": "The newest deployable version of the appliance. The current appliance can't be updated into this version, and the owner must manually deploy this OVA to a new appliance.",
          "$ref": "ApplianceVersion"
        },
        "inPlaceUpdate": {
          "description": "The latest version for in place update. The current appliance can be updated to this version using the API or m4c CLI.",
          "$ref": "ApplianceVersion"
        }
      }
    },
    "VmwareVmsDetails": {
      "type": "object",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "$ref": "VmwareVmDetails"
          },
          "description": "The details of the vmware VMs."
        }
      },
      "description": "VmwareVmsDetails describes VMs in vCenter.",
      "id": "VmwareVmsDetails"
    },
    "VmAttachmentDetails": {
      "description": "Details for attachment of the disk to a VM.",
      "properties": {
        "deviceName": {
          "type": "string",
          "description": "Optional. Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks."
        }
      },
      "id": "VmAttachmentDetails",
      "type": "object"
    },
    "AzureVmsDetails": {
      "type": "object",
      "properties": {
        "details": {
          "description": "The details of the Azure VMs.",
          "type": "array",
          "items": {
            "$ref": "AzureVmDetails"
          }
        }
      },
      "id": "AzureVmsDetails",
      "description": "AzureVmsDetails describes VMs in Azure."
    },
    "RemoveGroupMigrationRequest": {
      "properties": {
        "migratingVm": {
          "description": "The MigratingVm to remove.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "RemoveGroupMigrationRequest",
      "description": "Request message for 'RemoveMigration' request."
    },
    "ReplicatingStep": {
      "type": "object",
      "id": "ReplicatingStep",
      "description": "ReplicatingStep contains specific step details.",
      "properties": {
        "totalBytes": {
          "type": "string",
          "format": "int64",
          "description": "Total bytes to be handled in the step."
        },
        "lastTwoMinutesAverageBytesPerSecond": {
          "format": "int64",
          "description": "The source disks replication rate for the last 2 minutes in bytes per second.",
          "type": "string"
        },
        "lastThirtyMinutesAverageBytesPerSecond": {
          "format": "int64",
          "description": "The source disks replication rate for the last 30 minutes in bytes per second.",
          "type": "string"
        },
        "replicatedBytes": {
          "format": "int64",
          "description": "Replicated bytes in the step.",
          "type": "string"
        }
      }
    },
    "ListSourcesResponse": {
      "properties": {
        "sources": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. The list of sources response.",
          "items": {
            "$ref": "Source"
          }
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true
        },
        "nextPageToken": {
          "type": "string",
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Response message for 'ListSources' request.",
      "id": "ListSourcesResponse"
    },
    "ComputeEngineDisksTargetDefaults": {
      "properties": {
        "vmTargetDefaults": {
          "$ref": "DisksMigrationVmTargetDefaults",
          "description": "Details of the VM migration target."
        },
        "zone": {
          "type": "string",
          "description": "The zone in which to create the Persistent Disks."
        },
        "disks": {
          "description": "The details of each Persistent Disk to create.",
          "type": "array",
          "items": {
            "$ref": "PersistentDiskDefaults"
          }
        },
        "disksTargetDefaults": {
          "$ref": "DisksMigrationDisksTargetDefaults",
          "description": "Details of the disk only migration target."
        },
        "targetProject": {
          "description": "The full path of the resource of type TargetProject which represents the Compute Engine project in which to create the Persistent Disks.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ComputeEngineDisksTargetDefaults",
      "description": "ComputeEngineDisksTargetDefaults is a collection of details for creating Persistent Disks in a target Compute Engine project."
    },
    "OSDisk": {
      "description": "A message describing the OS disk.",
      "type": "object",
      "id": "OSDisk",
      "properties": {
        "sizeGb": {
          "type": "integer",
          "description": "The disk's size in GB.",
          "format": "int32"
        },
        "type": {
          "description": "The disk's type.",
          "type": "string"
        },
        "name": {
          "description": "The disk's full name.",
          "type": "string"
        }
      }
    },
    "Location": {
      "type": "object",
      "id": "Location",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "A resource that represents a Google Cloud location."
    },
    "PersistentDiskDefaults": {
      "description": "Details for creation of a Persistent Disk.",
      "type": "object",
      "properties": {
        "vmAttachmentDetails": {
          "$ref": "VmAttachmentDetails",
          "description": "Optional. Details for attachment of the disk to a VM. Used when the disk is set to be attacked to a target VM."
        },
        "diskType": {
          "enum": [
            "COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED",
            "COMPUTE_ENGINE_DISK_TYPE_STANDARD",
            "COMPUTE_ENGINE_DISK_TYPE_SSD",
            "COMPUTE_ENGINE_DISK_TYPE_BALANCED"
          ],
          "description": "The disk type to use.",
          "enumDescriptions": [
            "An unspecified disk type. Will be used as STANDARD.",
            "A Standard disk type.",
            "SSD hard disk type.",
            "An alternative to SSD persistent disks that balance performance and cost."
          ],
          "type": "string"
        },
        "diskName": {
          "type": "string",
          "description": "Optional. The name of the Persistent Disk to create."
        },
        "additionalLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map of labels to associate with the Persistent Disk.",
          "type": "object"
        },
        "sourceDiskNumber": {
          "description": "Required. The ordinal number of the source VM disk.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "PersistentDiskDefaults"
    },
    "MigrationError": {
      "id": "MigrationError",
      "properties": {
        "helpLinks": {
          "description": "Output only. URL(s) pointing to additional information on handling the current error.",
          "items": {
            "$ref": "Link"
          },
          "readOnly": true,
          "type": "array"
        },
        "errorTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the error occurred."
        },
        "actionItem": {
          "readOnly": true,
          "description": "Output only. Suggested action for solving the error.",
          "$ref": "LocalizedMessage"
        },
        "code": {
          "description": "Output only. The error code.",
          "enum": [
            "ERROR_CODE_UNSPECIFIED",
            "UNKNOWN_ERROR",
            "SOURCE_VALIDATION_ERROR",
            "SOURCE_REPLICATION_ERROR",
            "TARGET_REPLICATION_ERROR",
            "OS_ADAPTATION_ERROR",
            "CLONE_ERROR",
            "CUTOVER_ERROR",
            "UTILIZATION_REPORT_ERROR",
            "APPLIANCE_UPGRADE_ERROR"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Default value. This value is not used.",
            "Migrate to Virtual Machines encountered an unknown error.",
            "Migrate to Virtual Machines encountered an error while validating replication source health.",
            "Migrate to Virtual Machines encountered an error during source data operation.",
            "Migrate to Virtual Machines encountered an error during target data operation.",
            "Migrate to Virtual Machines encountered an error during OS adaptation.",
            "Migrate to Virtual Machines encountered an error in clone operation.",
            "Migrate to Virtual Machines encountered an error in cutover operation.",
            "Migrate to Virtual Machines encountered an error during utilization report creation.",
            "Migrate to Virtual Machines encountered an error during appliance upgrade."
          ],
          "type": "string"
        },
        "errorMessage": {
          "readOnly": true,
          "$ref": "LocalizedMessage",
          "description": "Output only. The localized error message."
        }
      },
      "type": "object",
      "description": "Represents migration resource error information that can be used with google.rpc.Status message. MigrationError is used to present the user with error information in migration operations."
    },
    "VmwareVmDetails": {
      "type": "object",
      "id": "VmwareVmDetails",
      "properties": {
        "diskCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of disks the VM has."
        },
        "powerState": {
          "enumDescriptions": [
            "Power state is not specified.",
            "The VM is turned ON.",
            "The VM is turned OFF.",
            "The VM is suspended. This is similar to hibernation or sleep mode."
          ],
          "enum": [
            "POWER_STATE_UNSPECIFIED",
            "ON",
            "OFF",
            "SUSPENDED"
          ],
          "type": "string",
          "description": "The power state of the VM at the moment list was taken."
        },
        "cpuCount": {
          "description": "The number of cpus in the VM.",
          "type": "integer",
          "format": "int32"
        },
        "datacenterId": {
          "description": "The id of the vCenter's datacenter this VM is contained in.",
          "type": "string"
        },
        "memoryMb": {
          "format": "int32",
          "description": "The size of the memory of the VM in MB.",
          "type": "integer"
        },
        "committedStorageMb": {
          "type": "string",
          "format": "int64",
          "description": "The total size of the storage allocated to the VM in MB."
        },
        "bootOption": {
          "type": "string",
          "enum": [
            "BOOT_OPTION_UNSPECIFIED",
            "EFI",
            "BIOS"
          ],
          "readOnly": true,
          "description": "Output only. The VM Boot Option.",
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is EFI.",
            "The boot option is BIOS."
          ]
        },
        "uuid": {
          "description": "The unique identifier of the VM in vCenter.",
          "type": "string"
        },
        "datacenterDescription": {
          "type": "string",
          "description": "The descriptive name of the vCenter's datacenter this VM is contained in."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the VM. Note that this is not necessarily unique."
        },
        "vmId": {
          "type": "string",
          "description": "The VM's id in the source (note that this is not the MigratingVm's id). This is the moref id of the VM."
        },
        "guestDescription": {
          "type": "string",
          "description": "The VM's OS. See for example https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html for types of strings this might hold."
        }
      },
      "description": "VmwareVmDetails describes a VM in vCenter."
    },
    "ComputeEngineTargetDefaults": {
      "id": "ComputeEngineTargetDefaults",
      "type": "object",
      "properties": {
        "machineType": {
          "description": "The machine type to create the VM with.",
          "type": "string"
        },
        "secureBoot": {
          "type": "boolean",
          "description": "Defines whether the instance has Secure Boot enabled. This can be set to true only if the VM boot option is EFI."
        },
        "networkInterfaces": {
          "items": {
            "$ref": "NetworkInterface"
          },
          "type": "array",
          "description": "List of NICs connected to this VM."
        },
        "targetProject": {
          "type": "string",
          "description": "The full path of the resource of type TargetProject which represents the Compute Engine project in which to create this VM."
        },
        "machineTypeSeries": {
          "description": "The machine type series to create the VM with.",
          "type": "string"
        },
        "additionalLicenses": {
          "items": {
            "type": "string"
          },
          "description": "Additional licenses to assign to the VM.",
          "type": "array"
        },
        "computeScheduling": {
          "$ref": "ComputeScheduling",
          "description": "Compute instance scheduling information (if empty default is used)."
        },
        "bootOption": {
          "type": "string",
          "description": "Output only. The VM Boot Option, as set in the source VM.",
          "enum": [
            "COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED",
            "COMPUTE_ENGINE_BOOT_OPTION_EFI",
            "COMPUTE_ENGINE_BOOT_OPTION_BIOS"
          ],
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is EFI.",
            "The boot option is BIOS."
          ],
          "readOnly": true
        },
        "zone": {
          "type": "string",
          "description": "The zone in which to create the VM."
        },
        "diskType": {
          "enum": [
            "COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED",
            "COMPUTE_ENGINE_DISK_TYPE_STANDARD",
            "COMPUTE_ENGINE_DISK_TYPE_SSD",
            "COMPUTE_ENGINE_DISK_TYPE_BALANCED"
          ],
          "enumDescriptions": [
            "An unspecified disk type. Will be used as STANDARD.",
            "A Standard disk type.",
            "SSD hard disk type.",
            "An alternative to SSD persistent disks that balance performance and cost."
          ],
          "type": "string",
          "description": "The disk type to use in the VM."
        },
        "hostname": {
          "type": "string",
          "description": "The hostname to assign to the VM."
        },
        "metadata": {
          "type": "object",
          "description": "The metadata key/value pairs to assign to the VM.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "appliedLicense": {
          "description": "Output only. The OS license returned from the adaptation module report.",
          "readOnly": true,
          "$ref": "AppliedLicense"
        },
        "networkTags": {
          "description": "A list of network tags to associate with the VM.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "serviceAccount": {
          "type": "string",
          "description": "The service account to associate the VM with."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map of labels to associate with the VM.",
          "type": "object"
        },
        "vmName": {
          "type": "string",
          "description": "The name of the VM to create."
        },
        "licenseType": {
          "enumDescriptions": [
            "The license type is the default for the OS.",
            "The license type is Pay As You Go license type.",
            "The license type is Bring Your Own License type."
          ],
          "enum": [
            "COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT",
            "COMPUTE_ENGINE_LICENSE_TYPE_PAYG",
            "COMPUTE_ENGINE_LICENSE_TYPE_BYOL"
          ],
          "type": "string",
          "description": "The license type to use in OS adaptation."
        }
      },
      "description": "ComputeEngineTargetDefaults is a collection of details for creating a VM in a target Compute Engine project."
    },
    "FinalizeMigrationRequest": {
      "description": "Request message for 'FinalizeMigration' request.",
      "id": "FinalizeMigrationRequest",
      "type": "object",
      "properties": {}
    },
    "AzureDiskDetails": {
      "type": "object",
      "properties": {
        "sizeGb": {
          "format": "int64",
          "type": "string",
          "description": "Size in GB."
        },
        "diskId": {
          "type": "string",
          "description": "Azure disk ID."
        },
        "diskNumber": {
          "description": "The ordinal number of the disk.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "AzureDiskDetails",
      "description": "The details of an Azure VM disk."
    },
    "VmUtilizationMetrics": {
      "type": "object",
      "description": "Utilization metrics values for a single VM.",
      "id": "VmUtilizationMetrics",
      "properties": {
        "diskIoRateAverageKbps": {
          "format": "int64",
          "description": "Average disk IO rate, in kilobytes per second.",
          "type": "string"
        },
        "networkThroughputAverageKbps": {
          "format": "int64",
          "type": "string",
          "description": "Average network throughput (combined transmit-rates and receive-rates), in kilobytes per second."
        },
        "memoryMaxPercent": {
          "format": "int32",
          "type": "integer",
          "description": "Max memory usage, percent."
        },
        "cpuMaxPercent": {
          "format": "int32",
          "type": "integer",
          "description": "Max CPU usage, percent."
        },
        "cpuAveragePercent": {
          "description": "Average CPU usage, percent.",
          "format": "int32",
          "type": "integer"
        },
        "diskIoRateMaxKbps": {
          "description": "Max disk IO rate, in kilobytes per second.",
          "format": "int64",
          "type": "string"
        },
        "memoryAveragePercent": {
          "format": "int32",
          "description": "Average memory usage, percent.",
          "type": "integer"
        },
        "networkThroughputMaxKbps": {
          "description": "Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "properties": {},
      "type": "object",
      "description": "The request message for Operations.CancelOperation."
    },
    "DisksMigrationVmTargetDefaults": {
      "type": "object",
      "properties": {
        "computeScheduling": {
          "$ref": "ComputeScheduling",
          "description": "Optional. Compute instance scheduling information (if empty default is used)."
        },
        "networkInterfaces": {
          "items": {
            "$ref": "NetworkInterface"
          },
          "type": "array",
          "description": "Optional. NICs to attach to the VM."
        },
        "machineTypeSeries": {
          "description": "Optional. The machine type series to create the VM with. For presentation only.",
          "type": "string"
        },
        "vmName": {
          "type": "string",
          "description": "Required. The name of the VM to create."
        },
        "serviceAccount": {
          "description": "Optional. The service account to associate the VM with.",
          "type": "string"
        },
        "additionalLicenses": {
          "items": {
            "type": "string"
          },
          "description": "Optional. Additional licenses to assign to the VM.",
          "type": "array"
        },
        "networkTags": {
          "items": {
            "type": "string"
          },
          "description": "Optional. A list of network tags to associate with the VM.",
          "type": "array"
        },
        "secureBoot": {
          "description": "Optional. Defines whether the instance has Secure Boot enabled. This can be set to true only if the VM boot option is EFI.",
          "type": "boolean"
        },
        "bootDiskDefaults": {
          "description": "Optional. Details of the boot disk of the VM.",
          "$ref": "BootDiskDefaults"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. The metadata key/value pairs to assign to the VM."
        },
        "machineType": {
          "description": "Required. The machine type to create the VM with.",
          "type": "string"
        },
        "hostname": {
          "description": "Optional. The hostname to assign to the VM.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. A map of labels to associate with the VM."
        }
      },
      "id": "DisksMigrationVmTargetDefaults",
      "description": "Details for creation of a VM that migrated data disks will be attached to."
    },
    "DisksMigrationDisksTargetDefaults": {
      "type": "object",
      "description": "Details for a disk only migration.",
      "properties": {},
      "id": "DisksMigrationDisksTargetDefaults"
    },
    "NetworkInterface": {
      "id": "NetworkInterface",
      "type": "object",
      "description": "NetworkInterface represents a NIC of a VM.",
      "properties": {
        "network": {
          "type": "string",
          "description": "The network to connect the NIC to."
        },
        "subnetwork": {
          "description": "The subnetwork to connect the NIC to.",
          "type": "string"
        },
        "externalIp": {
          "type": "string",
          "description": "The external IP to define in the NIC."
        },
        "internalIp": {
          "type": "string",
          "description": "The internal IP to define in the NIC. The formats accepted are: `ephemeral` \\ ipv4 address \\ a named address resource full path."
        }
      }
    },
    "AwsDiskDetails": {
      "type": "object",
      "id": "AwsDiskDetails",
      "properties": {
        "volumeId": {
          "description": "AWS volume ID.",
          "type": "string"
        },
        "sizeGb": {
          "format": "int64",
          "type": "string",
          "description": "Size in GB."
        },
        "diskNumber": {
          "description": "The ordinal number of the disk.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "The details of an AWS instance disk."
    },
    "FetchInventoryResponse": {
      "id": "FetchInventoryResponse",
      "properties": {
        "azureVms": {
          "$ref": "AzureVmsDetails",
          "description": "The description of the VMs in a Source of type Azure."
        },
        "nextPageToken": {
          "readOnly": true,
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the source was last queried (if the result is from the cache).",
          "type": "string"
        },
        "vmwareVms": {
          "$ref": "VmwareVmsDetails",
          "description": "The description of the VMs in a Source of type Vmware."
        },
        "awsVms": {
          "$ref": "AwsVmsDetails",
          "description": "The description of the VMs in a Source of type AWS."
        }
      },
      "type": "object",
      "description": "Response message for fetchInventory."
    },
    "OSDescription": {
      "id": "OSDescription",
      "description": "A message describing the VM's OS. Including OS, Publisher, Offer and Plan if applicable.",
      "properties": {
        "plan": {
          "type": "string",
          "description": "OS plan."
        },
        "publisher": {
          "type": "string",
          "description": "OS publisher."
        },
        "offer": {
          "type": "string",
          "description": "OS offer."
        },
        "type": {
          "description": "OS type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AwsVmDetails": {
      "id": "AwsVmDetails",
      "type": "object",
      "description": "AwsVmDetails describes a VM in AWS.",
      "properties": {
        "architecture": {
          "enum": [
            "VM_ARCHITECTURE_UNSPECIFIED",
            "I386",
            "X86_64",
            "ARM64",
            "X86_64_MAC"
          ],
          "description": "The CPU architecture.",
          "enumDescriptions": [
            "The architecture is unknown.",
            "The architecture is I386.",
            "The architecture is X86_64.",
            "The architecture is ARM64.",
            "The architecture is X86_64_MAC."
          ],
          "type": "string"
        },
        "osDescription": {
          "type": "string",
          "description": "The VM's OS."
        },
        "zone": {
          "type": "string",
          "description": "The AWS zone of the VM."
        },
        "sourceDescription": {
          "description": "The descriptive name of the AWS's source this VM is connected to.",
          "type": "string"
        },
        "memoryMb": {
          "description": "The memory size of the VM in MB.",
          "format": "int32",
          "type": "integer"
        },
        "committedStorageMb": {
          "description": "The total size of the storage allocated to the VM in MB.",
          "type": "string",
          "format": "int64"
        },
        "vmId": {
          "description": "The VM ID in AWS.",
          "type": "string"
        },
        "instanceType": {
          "type": "string",
          "description": "The instance type of the VM."
        },
        "bootOption": {
          "description": "The VM Boot Option.",
          "enum": [
            "BOOT_OPTION_UNSPECIFIED",
            "EFI",
            "BIOS"
          ],
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is UEFI.",
            "The boot option is LEGACY-BIOS."
          ],
          "type": "string"
        },
        "virtualizationType": {
          "enumDescriptions": [
            "The virtualization type is unknown.",
            "The virtualziation type is HVM.",
            "The virtualziation type is PARAVIRTUAL."
          ],
          "enum": [
            "VM_VIRTUALIZATION_TYPE_UNSPECIFIED",
            "HVM",
            "PARAVIRTUAL"
          ],
          "type": "string",
          "description": "The virtualization type."
        },
        "sourceId": {
          "type": "string",
          "description": "The id of the AWS's source this VM is connected to."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the VM. Note that this value is not necessarily unique."
        },
        "powerState": {
          "type": "string",
          "enum": [
            "POWER_STATE_UNSPECIFIED",
            "ON",
            "OFF",
            "SUSPENDED",
            "PENDING"
          ],
          "description": "Output only. The power state of the VM at the moment list was taken.",
          "enumDescriptions": [
            "Power state is not specified.",
            "The VM is turned on.",
            "The VM is turned off.",
            "The VM is suspended. This is similar to hibernation or sleep mode.",
            "The VM is starting."
          ],
          "readOnly": true
        },
        "vpcId": {
          "description": "The VPC ID the VM belongs to.",
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags of the VM.",
          "type": "object"
        },
        "diskCount": {
          "type": "integer",
          "description": "The number of disks the VM has.",
          "format": "int32"
        },
        "cpuCount": {
          "format": "int32",
          "type": "integer",
          "description": "The number of cpus the VM has."
        },
        "securityGroups": {
          "description": "The security groups the VM belongs to.",
          "type": "array",
          "items": {
            "$ref": "AwsSecurityGroup"
          }
        }
      }
    },
    "AzureSourceVmDetails": {
      "properties": {
        "disks": {
          "description": "The disks attached to the source VM.",
          "type": "array",
          "items": {
            "$ref": "AzureDiskDetails"
          }
        },
        "vmCapabilitiesInfo": {
          "description": "Output only. Information about VM capabilities needed for some Compute Engine features.",
          "$ref": "VmCapabilities",
          "readOnly": true
        },
        "committedStorageBytes": {
          "description": "The total size of the disks being migrated in bytes.",
          "type": "string",
          "format": "int64"
        },
        "firmware": {
          "enum": [
            "FIRMWARE_UNSPECIFIED",
            "EFI",
            "BIOS"
          ],
          "description": "The firmware type of the source VM.",
          "enumDescriptions": [
            "The firmware is unknown.",
            "The firmware is EFI.",
            "The firmware is BIOS."
          ],
          "type": "string"
        }
      },
      "id": "AzureSourceVmDetails",
      "type": "object",
      "description": "Represent the source Azure VM details."
    },
    "AzureVmDetails": {
      "type": "object",
      "description": "AwsVmDetails describes a VM in AWS.",
      "properties": {
        "vmId": {
          "description": "The VM full path in Azure.",
          "type": "string"
        },
        "osDescription": {
          "$ref": "OSDescription",
          "description": "Description of the OS."
        },
        "osDisk": {
          "description": "Description of the OS disk.",
          "$ref": "OSDisk"
        },
        "bootOption": {
          "description": "The VM Boot Option.",
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is UEFI.",
            "The boot option is BIOS."
          ],
          "enum": [
            "BOOT_OPTION_UNSPECIFIED",
            "EFI",
            "BIOS"
          ],
          "type": "string"
        },
        "powerState": {
          "enum": [
            "POWER_STATE_UNSPECIFIED",
            "STARTING",
            "RUNNING",
            "STOPPING",
            "STOPPED",
            "DEALLOCATING",
            "DEALLOCATED",
            "UNKNOWN"
          ],
          "type": "string",
          "description": "The power state of the VM at the moment list was taken.",
          "enumDescriptions": [
            "Power state is not specified.",
            "The VM is starting.",
            "The VM is running.",
            "The VM is stopping.",
            "The VM is stopped.",
            "The VM is deallocating.",
            "The VM is deallocated.",
            "The VM's power state is unknown."
          ]
        },
        "diskCount": {
          "type": "integer",
          "description": "The number of disks the VM has, including OS disk.",
          "format": "int32"
        },
        "computerName": {
          "type": "string",
          "description": "The VM's ComputerName."
        },
        "disks": {
          "items": {
            "$ref": "Disk"
          },
          "description": "Description of the data disks.",
          "type": "array"
        },
        "cpuCount": {
          "format": "int32",
          "description": "The number of cpus the VM has.",
          "type": "integer"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags of the VM."
        },
        "committedStorageMb": {
          "format": "int64",
          "type": "string",
          "description": "The total size of the storage allocated to the VM in MB."
        },
        "memoryMb": {
          "type": "integer",
          "format": "int32",
          "description": "The memory size of the VM in MB."
        },
        "vmSize": {
          "type": "string",
          "description": "VM size as configured in Azure. Determines the VM's hardware spec."
        }
      },
      "id": "AzureVmDetails"
    },
    "OperationMetadata": {
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation finished running."
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents the metadata of the long-running operation.",
      "id": "OperationMetadata"
    },
    "AccessKeyCredentials": {
      "id": "AccessKeyCredentials",
      "type": "object",
      "description": "Message describing AWS Credentials using access key id and secret.",
      "properties": {
        "secretAccessKey": {
          "type": "string",
          "description": "Input only. AWS secret access key."
        },
        "sessionToken": {
          "description": "Input only. AWS session token. Used only when AWS security token service (STS) is responsible for creating the temporary credentials.",
          "type": "string"
        },
        "accessKeyId": {
          "type": "string",
          "description": "AWS access key ID."
        }
      }
    },
    "AppliedLicense": {
      "id": "AppliedLicense",
      "properties": {
        "osLicense": {
          "type": "string",
          "description": "The OS license returned from the adaptation module's report."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "NONE",
            "PAYG",
            "BYOL"
          ],
          "enumDescriptions": [
            "Unspecified license for the OS.",
            "No license available for the OS.",
            "The license type is Pay As You Go license type.",
            "The license type is Bring Your Own License type."
          ],
          "description": "The license type that was used in OS adaptation.",
          "type": "string"
        }
      },
      "description": "AppliedLicense holds the license data returned by adaptation module report.",
      "type": "object"
    },
    "ComputeEngineTargetDetails": {
      "id": "ComputeEngineTargetDetails",
      "description": "ComputeEngineTargetDetails is a collection of details for creating a VM in a target Compute Engine project.",
      "properties": {
        "additionalLicenses": {
          "description": "Additional licenses to assign to the VM.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "vmName": {
          "description": "The name of the VM to create.",
          "type": "string"
        },
        "project": {
          "description": "The Google Cloud target project ID or project name.",
          "type": "string"
        },
        "diskType": {
          "enum": [
            "COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED",
            "COMPUTE_ENGINE_DISK_TYPE_STANDARD",
            "COMPUTE_ENGINE_DISK_TYPE_SSD",
            "COMPUTE_ENGINE_DISK_TYPE_BALANCED"
          ],
          "enumDescriptions": [
            "An unspecified disk type. Will be used as STANDARD.",
            "A Standard disk type.",
            "SSD hard disk type.",
            "An alternative to SSD persistent disks that balance performance and cost."
          ],
          "description": "The disk type to use in the VM.",
          "type": "string"
        },
        "zone": {
          "type": "string",
          "description": "The zone in which to create the VM."
        },
        "networkTags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of network tags to associate with the VM."
        },
        "machineType": {
          "description": "The machine type to create the VM with.",
          "type": "string"
        },
        "secureBoot": {
          "type": "boolean",
          "description": "Defines whether the instance has Secure Boot enabled. This can be set to true only if the VM boot option is EFI."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The metadata key/value pairs to assign to the VM."
        },
        "networkInterfaces": {
          "type": "array",
          "items": {
            "$ref": "NetworkInterface"
          },
          "description": "List of NICs connected to this VM."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map of labels to associate with the VM."
        },
        "computeScheduling": {
          "$ref": "ComputeScheduling",
          "description": "Compute instance scheduling information (if empty default is used)."
        },
        "licenseType": {
          "type": "string",
          "enum": [
            "COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT",
            "COMPUTE_ENGINE_LICENSE_TYPE_PAYG",
            "COMPUTE_ENGINE_LICENSE_TYPE_BYOL"
          ],
          "description": "The license type to use in OS adaptation.",
          "enumDescriptions": [
            "The license type is the default for the OS.",
            "The license type is Pay As You Go license type.",
            "The license type is Bring Your Own License type."
          ]
        },
        "serviceAccount": {
          "type": "string",
          "description": "The service account to associate the VM with."
        },
        "hostname": {
          "type": "string",
          "description": "The hostname to assign to the VM."
        },
        "bootOption": {
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is EFI.",
            "The boot option is BIOS."
          ],
          "description": "The VM Boot Option, as set in the source VM.",
          "enum": [
            "COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED",
            "COMPUTE_ENGINE_BOOT_OPTION_EFI",
            "COMPUTE_ENGINE_BOOT_OPTION_BIOS"
          ],
          "type": "string"
        },
        "appliedLicense": {
          "description": "The OS license returned from the adaptation module report.",
          "$ref": "AppliedLicense"
        },
        "machineTypeSeries": {
          "type": "string",
          "description": "The machine type series to create the VM with."
        }
      },
      "type": "object"
    },
    "VmUtilizationInfo": {
      "description": "Utilization information of a single VM.",
      "id": "VmUtilizationInfo",
      "type": "object",
      "properties": {
        "utilization": {
          "$ref": "VmUtilizationMetrics",
          "description": "Utilization metrics for this VM."
        },
        "vmId": {
          "type": "string",
          "description": "The VM's ID in the source."
        },
        "vmwareVmDetails": {
          "$ref": "VmwareVmDetails",
          "description": "The description of the VM in a Source of type Vmware."
        }
      }
    },
    "CloneStep": {
      "id": "CloneStep",
      "type": "object",
      "properties": {
        "adaptingOs": {
          "description": "Adapting OS step.",
          "$ref": "AdaptingOSStep"
        },
        "instantiatingMigratedVm": {
          "$ref": "InstantiatingMigratedVMStep",
          "description": "Instantiating migrated VM step."
        },
        "startTime": {
          "description": "The time the step has started.",
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "description": "The time the step has ended.",
          "format": "google-datetime"
        },
        "preparingVmDisks": {
          "description": "Preparing VM disks step.",
          "$ref": "PreparingVMDisksStep"
        }
      },
      "description": "CloneStep holds information about the clone step progress."
    },
    "CycleStep": {
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the cycle step has ended."
        },
        "replicating": {
          "$ref": "ReplicatingStep",
          "description": "Replicating step."
        },
        "initializingReplication": {
          "description": "Initializing replication step.",
          "$ref": "InitializingReplicationStep"
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the cycle step has started."
        },
        "postProcessing": {
          "description": "Post processing step.",
          "$ref": "PostProcessingStep"
        }
      },
      "description": "CycleStep holds information about a step progress.",
      "id": "CycleStep",
      "type": "object"
    },
    "ResumeMigrationRequest": {
      "description": "Request message for 'ResumeMigration' request.",
      "type": "object",
      "id": "ResumeMigrationRequest",
      "properties": {}
    },
    "ListCutoverJobsResponse": {
      "properties": {
        "nextPageToken": {
          "readOnly": true,
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "cutoverJobs": {
          "items": {
            "$ref": "CutoverJob"
          },
          "type": "array",
          "description": "Output only. The list of cutover jobs response.",
          "readOnly": true
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Output only. Locations that could not be reached.",
          "type": "array",
          "readOnly": true
        }
      },
      "id": "ListCutoverJobsResponse",
      "description": "Response message for 'ListCutoverJobs' request.",
      "type": "object"
    },
    "ListReplicationCyclesResponse": {
      "properties": {
        "unreachable": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "Output only. Locations that could not be reached."
        },
        "replicationCycles": {
          "items": {
            "$ref": "ReplicationCycle"
          },
          "description": "Output only. The list of replication cycles response.",
          "readOnly": true,
          "type": "array"
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string",
          "readOnly": true
        }
      },
      "id": "ListReplicationCyclesResponse",
      "description": "Response message for 'ListReplicationCycles' request.",
      "type": "object"
    },
    "Operation": {
      "properties": {
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation",
      "type": "object"
    },
    "ListGroupsResponse": {
      "type": "object",
      "description": "Response message for 'ListGroups' request.",
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "Group"
          },
          "description": "Output only. The list of groups response.",
          "readOnly": true
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "ListGroupsResponse"
    },
    "SchedulingNodeAffinity": {
      "type": "object",
      "id": "SchedulingNodeAffinity",
      "properties": {
        "values": {
          "description": "Corresponds to the label values of Node resource.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "key": {
          "type": "string",
          "description": "The label key of Node resource to reference."
        },
        "operator": {
          "enumDescriptions": [
            "An unknown, unexpected behavior.",
            "The node resource group should be in these resources affinity.",
            "The node resource group should not be in these resources affinity."
          ],
          "description": "The operator to use for the node resources specified in the `values` parameter.",
          "enum": [
            "OPERATOR_UNSPECIFIED",
            "IN",
            "NOT_IN"
          ],
          "type": "string"
        }
      },
      "description": "Node Affinity: the configuration of desired nodes onto which this Instance could be scheduled. Based on https://cloud.google.com/compute/docs/reference/rest/v1/instances/setScheduling"
    },
    "ReplicationSync": {
      "properties": {
        "lastSyncTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The most updated snapshot created time in the source that finished replication."
        }
      },
      "type": "object",
      "id": "ReplicationSync",
      "description": "ReplicationSync contain information about the last replica sync to the cloud."
    },
    "CutoverStep": {
      "description": "CutoverStep holds information about the cutover step progress.",
      "properties": {
        "finalSync": {
          "description": "Final sync step.",
          "$ref": "ReplicationCycle"
        },
        "instantiatingMigratedVm": {
          "description": "Instantiating migrated VM step.",
          "$ref": "InstantiatingMigratedVMStep"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time the step has ended.",
          "type": "string"
        },
        "shuttingDownSourceVm": {
          "description": "Shutting down VM step.",
          "$ref": "ShuttingDownSourceVMStep"
        },
        "previousReplicationCycle": {
          "$ref": "ReplicationCycle",
          "description": "A replication cycle prior cutover step."
        },
        "preparingVmDisks": {
          "description": "Preparing VM disks step.",
          "$ref": "PreparingVMDisksStep"
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the step has started."
        }
      },
      "id": "CutoverStep",
      "type": "object"
    },
    "AwsSourceVmDetails": {
      "properties": {
        "disks": {
          "items": {
            "$ref": "AwsDiskDetails"
          },
          "description": "The disks attached to the source VM.",
          "type": "array"
        },
        "firmware": {
          "description": "The firmware type of the source VM.",
          "enum": [
            "FIRMWARE_UNSPECIFIED",
            "EFI",
            "BIOS"
          ],
          "type": "string",
          "enumDescriptions": [
            "The firmware is unknown.",
            "The firmware is EFI.",
            "The firmware is BIOS."
          ]
        },
        "vmCapabilitiesInfo": {
          "readOnly": true,
          "$ref": "VmCapabilities",
          "description": "Output only. Information about VM capabilities needed for some Compute Engine features."
        },
        "committedStorageBytes": {
          "type": "string",
          "format": "int64",
          "description": "The total size of the disks being migrated in bytes."
        }
      },
      "type": "object",
      "id": "AwsSourceVmDetails",
      "description": "Represent the source AWS VM details."
    },
    "TargetProject": {
      "id": "TargetProject",
      "type": "object",
      "description": "TargetProject message represents a target Compute Engine project for a migration or a clone.",
      "properties": {
        "createTime": {
          "description": "Output only. The time this target project resource was created (not related to when the Compute Engine project it points to was created).",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The target project's description.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the target project.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The last time the target project resource was updated."
        },
        "project": {
          "description": "The target project ID (number) or project name.",
          "type": "string"
        }
      }
    },
    "ComputeScheduling": {
      "properties": {
        "restartType": {
          "enumDescriptions": [
            "Unspecified behavior. This will use the default.",
            "The Instance should be automatically restarted whenever it is terminated by Compute Engine.",
            "The Instance isn't automatically restarted whenever it is terminated by Compute Engine."
          ],
          "type": "string",
          "enum": [
            "RESTART_TYPE_UNSPECIFIED",
            "AUTOMATIC_RESTART",
            "NO_AUTOMATIC_RESTART"
          ],
          "description": "Whether the Instance should be automatically restarted whenever it is terminated by Compute Engine (not terminated by user). This configuration is identical to `automaticRestart` field in Compute Engine create instance under scheduling. It was changed to an enum (instead of a boolean) to match the default value in Compute Engine which is automatic restart."
        },
        "minNodeCpus": {
          "format": "int32",
          "description": "The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node. Ignored if no node_affinites are configured.",
          "type": "integer"
        },
        "onHostMaintenance": {
          "description": "How the instance should behave when the host machine undergoes maintenance that may temporarily impact instance performance.",
          "enum": [
            "ON_HOST_MAINTENANCE_UNSPECIFIED",
            "TERMINATE",
            "MIGRATE"
          ],
          "enumDescriptions": [
            "An unknown, unexpected behavior.",
            "Terminate the instance when the host machine undergoes maintenance.",
            "Migrate the instance when the host machine undergoes maintenance."
          ],
          "type": "string"
        },
        "nodeAffinities": {
          "type": "array",
          "items": {
            "$ref": "SchedulingNodeAffinity"
          },
          "description": "A set of node affinity and anti-affinity configurations for sole tenant nodes."
        }
      },
      "id": "ComputeScheduling",
      "description": "Scheduling information for VM on maintenance/restart behaviour and node allocation in sole tenant nodes.",
      "type": "object"
    },
    "DisksMigrationDisksTargetDetails": {
      "description": "Details for a disks-only migration.",
      "id": "DisksMigrationDisksTargetDetails",
      "type": "object",
      "properties": {}
    },
    "UpgradeStatus": {
      "id": "UpgradeStatus",
      "type": "object",
      "description": "UpgradeStatus contains information about upgradeAppliance operation.",
      "properties": {
        "version": {
          "type": "string",
          "description": "The version to upgrade to."
        },
        "previousVersion": {
          "description": "The version from which we upgraded.",
          "type": "string"
        },
        "startTime": {
          "description": "The time the operation was started.",
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "FAILED",
            "SUCCEEDED"
          ],
          "type": "string",
          "description": "The state of the upgradeAppliance operation.",
          "enumDescriptions": [
            "The state was not sampled by the health checks yet.",
            "The upgrade has started.",
            "The upgrade failed.",
            "The upgrade finished successfully."
          ]
        },
        "error": {
          "description": "Provides details on the state of the upgrade operation in case of an error.",
          "$ref": "Status"
        }
      }
    },
    "PreparingVMDisksStep": {
      "type": "object",
      "id": "PreparingVMDisksStep",
      "description": "PreparingVMDisksStep contains specific step details.",
      "properties": {}
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "type": "array"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "id": "Status"
    },
    "CancelCloneJobRequest": {
      "description": "Request message for 'CancelCloneJob' request.",
      "id": "CancelCloneJobRequest",
      "type": "object",
      "properties": {}
    },
    "DisksMigrationVmTargetDetails": {
      "id": "DisksMigrationVmTargetDetails",
      "type": "object",
      "properties": {
        "vmUri": {
          "description": "Output only. The URI of the Compute Engine VM.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Details for the VM created VM as part of disks migration."
    },
    "MigratingVm": {
      "properties": {
        "state": {
          "description": "Output only. State of the MigratingVm.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "READY",
            "FIRST_SYNC",
            "ACTIVE",
            "CUTTING_OVER",
            "CUTOVER",
            "FINAL_SYNC",
            "PAUSED",
            "FINALIZING",
            "FINALIZED",
            "ERROR"
          ],
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The state was not sampled by the health checks yet.",
            "The VM in the source is being verified.",
            "The source VM was verified, and it's ready to start replication.",
            "Migration is going through the first sync cycle.",
            "The replication is active, and it's running or scheduled to run.",
            "The source VM is being turned off, and a final replication is currently running.",
            "The source VM was stopped and replicated. The replication is currently paused.",
            "A cutover job is active and replication cycle is running the final sync.",
            "The replication was paused by the user and no cycles are scheduled to run.",
            "The migrating VM is being finalized and migration resources are being removed.",
            "The replication process is done. The migrating VM is finalized and no longer consumes billable resources.",
            "The replication process encountered an unrecoverable error and was aborted."
          ]
        },
        "stateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The last time the migrating VM state was updated."
        },
        "currentSyncInfo": {
          "readOnly": true,
          "$ref": "ReplicationCycle",
          "description": "Output only. Details of the current running replication cycle."
        },
        "displayName": {
          "type": "string",
          "description": "The display name attached to the MigratingVm by the user."
        },
        "awsSourceVmDetails": {
          "readOnly": true,
          "description": "Output only. Details of the VM from an AWS source.",
          "$ref": "AwsSourceVmDetails"
        },
        "sourceVmId": {
          "description": "The unique ID of the VM in the source. The VM's name in vSphere can be changed, so this is not the VM's name but rather its moRef id. This id is of the form vm-.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The identifier of the MigratingVm.",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The labels of the migrating VM.",
          "type": "object"
        },
        "lastSync": {
          "$ref": "ReplicationSync",
          "description": "Output only. The most updated snapshot created time in the source that finished replication.",
          "readOnly": true
        },
        "cutoverForecast": {
          "$ref": "CutoverForecast",
          "description": "Output only. Provides details of future CutoverJobs of a MigratingVm. Set to empty when cutover forecast is unavailable.",
          "readOnly": true
        },
        "recentCutoverJobs": {
          "items": {
            "$ref": "CutoverJob"
          },
          "description": "Output only. The recent cutover jobs performed on the migrating VM. This field holds the vm's last completed cutover job and the vm's running cutover job, if one exists. Note: To have this field populated you need to explicitly request it via the \"view\" parameter of the Get/List request.",
          "type": "array",
          "readOnly": true
        },
        "computeEngineTargetDefaults": {
          "description": "Details of the target VM in Compute Engine.",
          "$ref": "ComputeEngineTargetDefaults"
        },
        "vmwareSourceVmDetails": {
          "$ref": "VmwareSourceVmDetails",
          "readOnly": true,
          "description": "Output only. Details of the VM from a Vmware source."
        },
        "computeEngineDisksTargetDefaults": {
          "description": "Details of the target Persistent Disks in Compute Engine.",
          "$ref": "ComputeEngineDisksTargetDefaults"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The last time the migrating VM resource was updated.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the migrating VM was created (this refers to this resource and not to the time it was installed in the source).",
          "format": "google-datetime",
          "readOnly": true
        },
        "group": {
          "readOnly": true,
          "description": "Output only. The group this migrating vm is included in, if any. The group is represented by the full path of the appropriate Group resource.",
          "type": "string"
        },
        "policy": {
          "description": "The replication schedule policy.",
          "$ref": "SchedulePolicy"
        },
        "recentCloneJobs": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. The recent clone jobs performed on the migrating VM. This field holds the vm's last completed clone job and the vm's running clone job, if one exists. Note: To have this field populated you need to explicitly request it via the \"view\" parameter of the Get/List request.",
          "items": {
            "$ref": "CloneJob"
          }
        },
        "description": {
          "type": "string",
          "description": "The description attached to the migrating VM by the user."
        },
        "azureSourceVmDetails": {
          "readOnly": true,
          "$ref": "AzureSourceVmDetails",
          "description": "Output only. Details of the VM from an Azure source."
        },
        "lastReplicationCycle": {
          "$ref": "ReplicationCycle",
          "description": "Output only. Details of the last replication cycle. This will be updated whenever a replication cycle is finished and is not to be confused with last_sync which is only updated on successful replication cycles.",
          "readOnly": true
        },
        "error": {
          "$ref": "Status",
          "readOnly": true,
          "description": "Output only. Provides details on the state of the Migrating VM in case of an error in replication."
        }
      },
      "id": "MigratingVm",
      "description": "MigratingVm describes the VM that will be migrated from a Source environment and its replication state.",
      "type": "object"
    },
    "CutoverForecast": {
      "id": "CutoverForecast",
      "type": "object",
      "properties": {
        "estimatedCutoverJobDuration": {
          "readOnly": true,
          "format": "google-duration",
          "type": "string",
          "description": "Output only. Estimation of the CutoverJob duration."
        }
      },
      "description": "CutoverForecast holds information about future CutoverJobs of a MigratingVm."
    },
    "SchedulePolicy": {
      "properties": {
        "idleDuration": {
          "description": "The idle duration between replication stages.",
          "format": "google-duration",
          "type": "string"
        },
        "skipOsAdaptation": {
          "type": "boolean",
          "description": "A flag to indicate whether to skip OS adaptation during the replication sync. OS adaptation is a process where the VM's operating system undergoes changes and adaptations to fully function on Compute Engine."
        }
      },
      "id": "SchedulePolicy",
      "type": "object",
      "description": "A policy for scheduling replications."
    },
    "VmwareSourceDetails": {
      "type": "object",
      "id": "VmwareSourceDetails",
      "properties": {
        "thumbprint": {
          "description": "The thumbprint representing the certificate for the vcenter.",
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "Input only. The credentials password. This is write only and can not be read in a GET operation."
        },
        "vcenterIp": {
          "description": "The ip address of the vcenter this Source represents.",
          "type": "string"
        },
        "resolvedVcenterHost": {
          "type": "string",
          "description": "The hostname of the vcenter."
        },
        "username": {
          "type": "string",
          "description": "The credentials username."
        }
      },
      "description": "VmwareSourceDetails message describes a specific source details for the vmware source type."
    },
    "VmwareDiskDetails": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "The disk label."
        },
        "diskNumber": {
          "format": "int32",
          "description": "The ordinal number of the disk.",
          "type": "integer"
        },
        "sizeGb": {
          "description": "Size in GB.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "The details of a Vmware VM disk.",
      "id": "VmwareDiskDetails"
    },
    "DatacenterConnector": {
      "description": "DatacenterConnector message describes a connector between the Source and Google Cloud, which is installed on a vmware datacenter (an OVA vm installed by the user) to connect the Datacenter to Google Cloud and support vm migration data transfer.",
      "type": "object",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the connector was created (as an API call, not when it was actually installed).",
          "type": "string"
        },
        "applianceInfrastructureVersion": {
          "description": "Output only. Appliance OVA version. This is the OVA which is manually installed by the user and contains the infrastructure for the automatically updatable components on the appliance.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The connector's name.",
          "type": "string"
        },
        "upgradeStatus": {
          "readOnly": true,
          "description": "Output only. The status of the current / last upgradeAppliance operation.",
          "$ref": "UpgradeStatus"
        },
        "availableVersions": {
          "$ref": "AvailableUpdates",
          "description": "Output only. The available versions for updating this appliance.",
          "readOnly": true
        },
        "error": {
          "$ref": "Status",
          "description": "Output only. Provides details on the state of the Datacenter Connector in case of an error.",
          "readOnly": true
        },
        "applianceSoftwareVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Appliance last installed update bundle version. This is the version of the automatically updatable components on the appliance."
        },
        "version": {
          "description": "The version running in the DatacenterConnector. This is supplied by the OVA connector during the registration process and can not be modified.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "OFFLINE",
            "FAILED",
            "ACTIVE"
          ],
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The state was not sampled by the health checks yet.",
            "The source was sampled by health checks and is not available.",
            "The source is available but might not be usable yet due to unvalidated credentials or another reason. The credentials referred to are the ones to the Source. The error message will contain further details.",
            "The source exists and its credentials were verified."
          ],
          "readOnly": true,
          "description": "Output only. State of the DatacenterConnector, as determined by the health checks."
        },
        "bucket": {
          "description": "Output only. The communication channel between the datacenter connector and Google Cloud.",
          "type": "string",
          "readOnly": true
        },
        "stateTime": {
          "readOnly": true,
          "description": "Output only. The time the state was last set.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The last time the connector was updated with an API call.",
          "type": "string"
        },
        "registrationId": {
          "type": "string",
          "description": "Immutable. A unique key for this connector. This key is internal to the OVA connector and is supplied with its creation during the registration process and can not be modified."
        },
        "serviceAccount": {
          "description": "The service account to use in the connector when communicating with the cloud.",
          "type": "string"
        }
      },
      "id": "DatacenterConnector"
    },
    "Disk": {
      "description": "A message describing a data disk.",
      "id": "Disk",
      "type": "object",
      "properties": {
        "sizeGb": {
          "description": "The disk size in GB.",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string",
          "description": "The disk name."
        },
        "lun": {
          "description": "The disk's Logical Unit Number (LUN).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Source": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The Source name."
        },
        "vmware": {
          "$ref": "VmwareSourceDetails",
          "description": "Vmware type source details."
        },
        "aws": {
          "description": "AWS type source details.",
          "$ref": "AwsSourceDetails"
        },
        "createTime": {
          "description": "Output only. The create time timestamp.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The update time timestamp."
        },
        "labels": {
          "description": "The labels of the source.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "User-provided description of the source.",
          "type": "string"
        },
        "azure": {
          "description": "Azure type source details.",
          "$ref": "AzureSourceDetails"
        }
      },
      "description": "Source message describes a specific vm migration Source resource. It contains the source environment information.",
      "id": "Source"
    },
    "AwsVmsDetails": {
      "description": "AWSVmsDetails describes VMs in AWS.",
      "type": "object",
      "properties": {
        "details": {
          "items": {
            "$ref": "AwsVmDetails"
          },
          "description": "The details of the AWS VMs.",
          "type": "array"
        }
      },
      "id": "AwsVmsDetails"
    },
    "ShuttingDownSourceVMStep": {
      "description": "ShuttingDownSourceVMStep contains specific step details.",
      "id": "ShuttingDownSourceVMStep",
      "type": "object",
      "properties": {}
    },
    "AdaptingOSStep": {
      "properties": {},
      "description": "AdaptingOSStep contains specific step details.",
      "id": "AdaptingOSStep",
      "type": "object"
    },
    "PersistentDisk": {
      "description": "Details of a created Persistent Disk.",
      "id": "PersistentDisk",
      "type": "object",
      "properties": {
        "sourceDiskNumber": {
          "type": "integer",
          "description": "The ordinal number of the source VM disk.",
          "format": "int32"
        },
        "diskUri": {
          "type": "string",
          "description": "The URI of the Persistent Disk."
        }
      }
    },
    "ListMigratingVmsResponse": {
      "id": "ListMigratingVmsResponse",
      "description": "Response message for 'ListMigratingVms' request.",
      "type": "object",
      "properties": {
        "migratingVms": {
          "description": "Output only. The list of Migrating VMs response.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "MigratingVm"
          }
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true
        },
        "nextPageToken": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "CancelCutoverJobRequest": {
      "properties": {},
      "description": "Request message for 'CancelCutoverJob' request.",
      "type": "object",
      "id": "CancelCutoverJobRequest"
    },
    "StartMigrationRequest": {
      "type": "object",
      "description": "Request message for 'StartMigrationRequest' request.",
      "id": "StartMigrationRequest",
      "properties": {}
    },
    "Empty": {
      "type": "object",
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "UpgradeApplianceRequest": {
      "id": "UpgradeApplianceRequest",
      "type": "object",
      "properties": {
        "requestId": {
          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "description": "Request message for 'UpgradeAppliance' request."
    },
    "AwsSourceDetails": {
      "description": "AwsSourceDetails message describes a specific source details for the AWS source type.",
      "properties": {
        "error": {
          "readOnly": true,
          "description": "Output only. Provides details on the state of the Source in case of an error.",
          "$ref": "Status"
        },
        "migrationResourcesUserTags": {
          "type": "object",
          "description": "User specified tags to add to every M2VM generated resource in AWS. These tags will be set in addition to the default tags that are set as part of the migration process. The tags must not begin with the reserved prefix `m2vm`.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "accessKeyCreds": {
          "description": "AWS Credentials using access key id and secret.",
          "$ref": "AccessKeyCredentials"
        },
        "publicIp": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The source's public IP. All communication initiated by this source will originate from this IP."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "FAILED",
            "ACTIVE"
          ],
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The state was not sampled by the health checks yet.",
            "The source is available but might not be usable yet due to invalid credentials or another reason. The error message will contain further details.",
            "The source exists and its credentials were verified."
          ],
          "description": "Output only. State of the source as determined by the health check."
        },
        "awsRegion": {
          "type": "string",
          "description": "Immutable. The AWS region that the source VMs will be migrated from."
        },
        "inventorySecurityGroupNames": {
          "items": {
            "type": "string"
          },
          "description": "AWS security group names to limit the scope of the source inventory.",
          "type": "array"
        },
        "inventoryTagList": {
          "items": {
            "$ref": "Tag"
          },
          "description": "AWS resource tags to limit the scope of the source inventory.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "AwsSourceDetails"
    },
    "InstantiatingMigratedVMStep": {
      "id": "InstantiatingMigratedVMStep",
      "properties": {},
      "description": "InstantiatingMigratedVMStep contains specific step details.",
      "type": "object"
    }
  },
  "servicePath": "",
  "fullyEncodeReservedExpansion": true,
  "id": "vmmigration:v1",
  "name": "vmmigration",
  "kind": "discovery#restDescription",
  "parameters": {
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "alt": {
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "cancel": {
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:cancel",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "vmmigration.projects.locations.operations.cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation resource to be deleted.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "id": "vmmigration.projects.locations.operations.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "vmmigration.projects.locations.operations.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "vmmigration.projects.locations.operations.list",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The name of the operation's parent resource.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "path": "v1/{+name}/operations"
                }
              }
            },
            "sources": {
              "methods": {
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a single Source.",
                  "path": "v1/{+name}",
                  "id": "vmmigration.projects.locations.sources.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "description": "Required. The Source name.",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "response": {
                    "$ref": "ListSourcesResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources",
                  "path": "v1/{+parent}/sources",
                  "id": "vmmigration.projects.locations.sources.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists Sources in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "filter": {
                      "description": "Optional. The filter request.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Optional. the order by fields for the result.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent, which owns this collection of sources."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Required. A page token, received from a previous `ListSources` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSources` must match the call that provided the page token.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of sources to return. The service may return fewer than this value. If unspecified, at most 500 sources will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  }
                },
                "create": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "Source"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The Source's parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "sourceId": {
                      "description": "Required. The source identifier.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources",
                  "description": "Creates a new Source in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/sources",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "vmmigration.projects.locations.sources.create"
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "id": "vmmigration.projects.locations.sources.patch",
                  "request": {
                    "$ref": "Source"
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single Source.",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Output only. The Source name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "Field mask is used to specify the fields to be overwritten in the Source resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "id": "vmmigration.projects.locations.sources.get",
                  "response": {
                    "$ref": "Source"
                  },
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. The Source name.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Gets details of a single Source.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "fetchInventory": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}:fetchInventory",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "source": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "description": "Required. The name of the Source.",
                      "location": "path"
                    },
                    "forceRefresh": {
                      "description": "If this flag is set to true, the source will be queried instead of using cached results. Using this flag will make the call slower.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "pageToken": {
                      "description": "A page token, received from a previous `FetchInventory` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `FetchInventory` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of VMs to return. The service may return fewer than this value. For AWS source: If unspecified, at most 500 VMs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. For VMWare source: If unspecified, all VMs will be returned. There is no limit for maximum value.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "parameterOrder": [
                    "source"
                  ],
                  "path": "v1/{+source}:fetchInventory",
                  "description": "List remote source's inventory of VMs. The remote source is the onprem vCenter (remote in the sense it's not in Compute Engine). The inventory describes the list of existing VMs in that source. Note that this operation lists the VMs on the remote source, as opposed to listing the MigratingVms resources in the vmmigration service.",
                  "id": "vmmigration.projects.locations.sources.fetchInventory",
                  "response": {
                    "$ref": "FetchInventoryResponse"
                  }
                }
              },
              "resources": {
                "datacenterConnectors": {
                  "methods": {
                    "upgradeAppliance": {
                      "parameters": {
                        "datacenterConnector": {
                          "location": "path",
                          "description": "Required. The DatacenterConnector name.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$",
                          "required": true
                        }
                      },
                      "path": "v1/{+datacenterConnector}:upgradeAppliance",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "datacenterConnector"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}:upgradeAppliance",
                      "request": {
                        "$ref": "UpgradeApplianceRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Upgrades the appliance relate to this DatacenterConnector to the in-place updateable version.",
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.upgradeAppliance"
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$",
                          "description": "Required. The name of the DatacenterConnector.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "DatacenterConnector"
                      },
                      "description": "Gets details of a single DatacenterConnector.",
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.get",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}",
                      "httpMethod": "GET"
                    },
                    "delete": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}",
                      "parameters": {
                        "name": {
                          "description": "Required. The DatacenterConnector name.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        },
                        "requestId": {
                          "location": "query",
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        }
                      },
                      "httpMethod": "DELETE",
                      "description": "Deletes a single DatacenterConnector.",
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.delete"
                    },
                    "list": {
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. A page token, received from a previous `ListDatacenterConnectors` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDatacenterConnectors` must match the call that provided the page token."
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "required": true,
                          "description": "Required. The parent, which owns this collection of connectors.",
                          "location": "path"
                        },
                        "orderBy": {
                          "type": "string",
                          "description": "Optional. the order by fields for the result.",
                          "location": "query"
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "location": "query",
                          "description": "Optional. The maximum number of connectors to return. The service may return fewer than this value. If unspecified, at most 500 sources will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. The filter request."
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors",
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.list",
                      "response": {
                        "$ref": "ListDatacenterConnectorsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/datacenterConnectors",
                      "httpMethod": "GET",
                      "description": "Lists DatacenterConnectors in a given Source.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "create": {
                      "description": "Creates a new DatacenterConnector in a given Source.",
                      "path": "v1/{+parent}/datacenterConnectors",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors",
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.create",
                      "request": {
                        "$ref": "DatacenterConnector"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "type": "string",
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        },
                        "datacenterConnectorId": {
                          "description": "Required. The datacenterConnector identifier.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "description": "Required. The DatacenterConnector's parent. Required. The Source in where the new DatacenterConnector will be created. For example: `projects/my-project/locations/us-central1/sources/my-source`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                },
                "utilizationReports": {
                  "methods": {
                    "get": {
                      "path": "v1/{+name}",
                      "id": "vmmigration.projects.locations.sources.utilizationReports.get",
                      "parameters": {
                        "view": {
                          "description": "Optional. The level of details of the report. Defaults to FULL",
                          "enumDescriptions": [
                            "The default / unset value. The API will default to FULL on single report request and BASIC for multiple reports request.",
                            "Get the report metadata, without the list of VMs and their utilization info.",
                            "Include everything."
                          ],
                          "location": "query",
                          "type": "string",
                          "enum": [
                            "UTILIZATION_REPORT_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ]
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/utilizationReports/[^/]+$",
                          "description": "Required. The Utilization Report name.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets a single Utilization Report.",
                      "response": {
                        "$ref": "UtilizationReport"
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports/{utilizationReportsId}"
                    },
                    "create": {
                      "id": "vmmigration.projects.locations.sources.utilizationReports.create",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/utilizationReports",
                      "description": "Creates a new UtilizationReport.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "UtilizationReport"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports",
                      "parameters": {
                        "parent": {
                          "description": "Required. The Utilization Report's parent.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "type": "string",
                          "required": true
                        },
                        "requestId": {
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "utilizationReportId": {
                          "location": "query",
                          "description": "Required. The ID to use for the report, which will become the final component of the reports's resource name. This value maximum length is 63 characters, and valid characters are /a-z-/. It must start with an english letter and must not end with a hyphen.",
                          "type": "string"
                        }
                      }
                    },
                    "list": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports",
                      "id": "vmmigration.projects.locations.sources.utilizationReports.list",
                      "path": "v1/{+parent}/utilizationReports",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. The filter request."
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "description": "Optional. The maximum number of reports to return. The service may return fewer than this value. If unspecified, at most 500 reports will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer"
                        },
                        "parent": {
                          "description": "Required. The Utilization Reports parent.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        },
                        "pageToken": {
                          "description": "Required. A page token, received from a previous `ListUtilizationReports` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListUtilizationReports` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Optional. the order by fields for the result.",
                          "type": "string",
                          "location": "query"
                        },
                        "view": {
                          "enumDescriptions": [
                            "The default / unset value. The API will default to FULL on single report request and BASIC for multiple reports request.",
                            "Get the report metadata, without the list of VMs and their utilization info.",
                            "Include everything."
                          ],
                          "enum": [
                            "UTILIZATION_REPORT_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "type": "string",
                          "description": "Optional. The level of details of each report. Defaults to BASIC.",
                          "location": "query"
                        }
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists Utilization Reports of the given Source.",
                      "response": {
                        "$ref": "ListUtilizationReportsResponse"
                      }
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports/{utilizationReportsId}",
                      "id": "vmmigration.projects.locations.sources.utilizationReports.delete",
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1/{+name}",
                      "description": "Deletes a single Utilization Report.",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/utilizationReports/[^/]+$",
                          "required": true,
                          "description": "Required. The Utilization Report name.",
                          "location": "path",
                          "type": "string"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        }
                      }
                    }
                  }
                },
                "migratingVms": {
                  "methods": {
                    "list": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms",
                      "id": "vmmigration.projects.locations.sources.migratingVms.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "Required. A page token, received from a previous `ListMigratingVms` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListMigratingVms` must match the call that provided the page token.",
                          "location": "query"
                        },
                        "orderBy": {
                          "type": "string",
                          "description": "Optional. the order by fields for the result.",
                          "location": "query"
                        },
                        "view": {
                          "description": "Optional. The level of details of each migrating VM.",
                          "location": "query",
                          "type": "string",
                          "enum": [
                            "MIGRATING_VM_VIEW_UNSPECIFIED",
                            "MIGRATING_VM_VIEW_BASIC",
                            "MIGRATING_VM_VIEW_FULL"
                          ],
                          "enumDescriptions": [
                            "View is unspecified. The API will fallback to the default value.",
                            "Get the migrating VM basic details. The basic details do not include the recent clone jobs and recent cutover jobs lists.",
                            "Include everything."
                          ]
                        },
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "type": "string",
                          "description": "Required. The parent, which owns this collection of MigratingVms.",
                          "location": "path"
                        },
                        "filter": {
                          "description": "Optional. The filter request.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of migrating VMs to return. The service may return fewer than this value. If unspecified, at most 500 migrating VMs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer",
                          "location": "query",
                          "format": "int32"
                        }
                      },
                      "httpMethod": "GET",
                      "description": "Lists MigratingVms in a given Source.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListMigratingVmsResponse"
                      },
                      "path": "v1/{+parent}/migratingVms"
                    },
                    "get": {
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the MigratingVm."
                        },
                        "view": {
                          "location": "query",
                          "enum": [
                            "MIGRATING_VM_VIEW_UNSPECIFIED",
                            "MIGRATING_VM_VIEW_BASIC",
                            "MIGRATING_VM_VIEW_FULL"
                          ],
                          "description": "Optional. The level of details of the migrating VM.",
                          "type": "string",
                          "enumDescriptions": [
                            "View is unspecified. The API will fallback to the default value.",
                            "Get the migrating VM basic details. The basic details do not include the recent clone jobs and recent cutover jobs lists.",
                            "Include everything."
                          ]
                        }
                      },
                      "description": "Gets details of a single MigratingVm.",
                      "id": "vmmigration.projects.locations.sources.migratingVms.get",
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}",
                      "response": {
                        "$ref": "MigratingVm"
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new MigratingVm in a given Source.",
                      "id": "vmmigration.projects.locations.sources.migratingVms.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "MigratingVm"
                      },
                      "parameters": {
                        "requestId": {
                          "type": "string",
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        },
                        "migratingVmId": {
                          "description": "Required. The migratingVm identifier.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. The MigratingVm's parent.",
                          "location": "path"
                        }
                      },
                      "path": "v1/{+parent}/migratingVms",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms",
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST"
                    },
                    "finalizeMigration": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "migratingVm"
                      ],
                      "request": {
                        "$ref": "FinalizeMigrationRequest"
                      },
                      "id": "vmmigration.projects.locations.sources.migratingVms.finalizeMigration",
                      "path": "v1/{+migratingVm}:finalizeMigration",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:finalizeMigration",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "migratingVm": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. The name of the MigratingVm.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "required": true
                        }
                      },
                      "description": "Marks a migration as completed, deleting migration resources that are no longer being used. Only applicable after cutover is done."
                    },
                    "startMigration": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:startMigration",
                      "parameters": {
                        "migratingVm": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the MigratingVm.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "description": "Starts migration for a VM. Starts the process of uploading data and creating snapshots, in replication cycles scheduled by the policy.",
                      "request": {
                        "$ref": "StartMigrationRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "migratingVm"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "id": "vmmigration.projects.locations.sources.migratingVms.startMigration",
                      "path": "v1/{+migratingVm}:startMigration"
                    },
                    "delete": {
                      "id": "vmmigration.projects.locations.sources.migratingVms.delete",
                      "description": "Deletes a single MigratingVm.",
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the MigratingVm.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "required": true
                        }
                      },
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}",
                      "response": {
                        "$ref": "Operation"
                      }
                    },
                    "resumeMigration": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "id": "vmmigration.projects.locations.sources.migratingVms.resumeMigration",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:resumeMigration",
                      "request": {
                        "$ref": "ResumeMigrationRequest"
                      },
                      "parameters": {
                        "migratingVm": {
                          "type": "string",
                          "description": "Required. The name of the MigratingVm.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "migratingVm"
                      ],
                      "description": "Resumes a migration for a VM. When called on a paused migration, will start the process of uploading data and creating snapshots; when called on a completed cut-over migration, will update the migration to active state and start the process of uploading data and creating snapshots.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+migratingVm}:resumeMigration"
                    },
                    "pauseMigration": {
                      "description": "Pauses a migration for a VM. If cycle tasks are running they will be cancelled, preserving source task data. Further replication cycles will not be triggered while the VM is paused.",
                      "parameterOrder": [
                        "migratingVm"
                      ],
                      "parameters": {
                        "migratingVm": {
                          "description": "Required. The name of the MigratingVm.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "PauseMigrationRequest"
                      },
                      "path": "v1/{+migratingVm}:pauseMigration",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "vmmigration.projects.locations.sources.migratingVms.pauseMigration",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:pauseMigration"
                    },
                    "patch": {
                      "parameters": {
                        "updateMask": {
                          "type": "string",
                          "description": "Field mask is used to specify the fields to be overwritten in the MigratingVm resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                          "location": "query",
                          "format": "google-fieldmask"
                        },
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "description": "Output only. The identifier of the MigratingVm.",
                          "location": "path",
                          "required": true
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "vmmigration.projects.locations.sources.migratingVms.patch",
                      "httpMethod": "PATCH",
                      "description": "Updates the parameters of a single MigratingVm.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "MigratingVm"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}"
                    }
                  },
                  "resources": {
                    "replicationCycles": {
                      "methods": {
                        "get": {
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/replicationCycles/[^/]+$",
                              "description": "Required. The name of the ReplicationCycle."
                            }
                          },
                          "path": "v1/{+name}",
                          "description": "Gets details of a single ReplicationCycle.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/replicationCycles/{replicationCyclesId}",
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "vmmigration.projects.locations.sources.migratingVms.replicationCycles.get",
                          "response": {
                            "$ref": "ReplicationCycle"
                          }
                        },
                        "list": {
                          "response": {
                            "$ref": "ListReplicationCyclesResponse"
                          },
                          "httpMethod": "GET",
                          "path": "v1/{+parent}/replicationCycles",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/replicationCycles",
                          "parameters": {
                            "pageSize": {
                              "description": "Optional. The maximum number of replication cycles to return. The service may return fewer than this value. If unspecified, at most 100 migrating VMs will be returned. The maximum value is 100; values above 100 will be coerced to 100.",
                              "location": "query",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parent": {
                              "description": "Required. The parent, which owns this collection of ReplicationCycles.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                              "location": "path",
                              "type": "string",
                              "required": true
                            },
                            "filter": {
                              "location": "query",
                              "type": "string",
                              "description": "Optional. The filter request."
                            },
                            "pageToken": {
                              "type": "string",
                              "description": "Required. A page token, received from a previous `ListReplicationCycles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListReplicationCycles` must match the call that provided the page token.",
                              "location": "query"
                            },
                            "orderBy": {
                              "description": "Optional. the order by fields for the result.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "Lists ReplicationCycles in a given MigratingVM.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "vmmigration.projects.locations.sources.migratingVms.replicationCycles.list"
                        }
                      }
                    },
                    "cutoverJobs": {
                      "methods": {
                        "create": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "POST",
                          "request": {
                            "$ref": "CutoverJob"
                          },
                          "id": "vmmigration.projects.locations.sources.migratingVms.cutoverJobs.create",
                          "parameters": {
                            "parent": {
                              "description": "Required. The Cutover's parent.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "required": true
                            },
                            "cutoverJobId": {
                              "type": "string",
                              "location": "query",
                              "description": "Required. The cutover job identifier."
                            },
                            "requestId": {
                              "type": "string",
                              "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                              "location": "query"
                            }
                          },
                          "response": {
                            "$ref": "Operation"
                          },
                          "path": "v1/{+parent}/cutoverJobs",
                          "description": "Initiates a Cutover of a specific migrating VM. The returned LRO is completed when the cutover job resource is created and the job is initiated."
                        },
                        "get": {
                          "parameters": {
                            "name": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cutoverJobs/[^/]+$",
                              "description": "Required. The name of the CutoverJob.",
                              "type": "string",
                              "required": true
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs/{cutoverJobsId}",
                          "description": "Gets details of a single CutoverJob.",
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "CutoverJob"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1/{+name}",
                          "id": "vmmigration.projects.locations.sources.migratingVms.cutoverJobs.get"
                        },
                        "list": {
                          "description": "Lists CutoverJobs of a given migrating VM.",
                          "path": "v1/{+parent}/cutoverJobs",
                          "id": "vmmigration.projects.locations.sources.migratingVms.cutoverJobs.list",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "parameters": {
                            "pageSize": {
                              "location": "query",
                              "format": "int32",
                              "type": "integer",
                              "description": "Optional. The maximum number of cutover jobs to return. The service may return fewer than this value. If unspecified, at most 500 cutover jobs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                            },
                            "orderBy": {
                              "description": "Optional. the order by fields for the result.",
                              "type": "string",
                              "location": "query"
                            },
                            "pageToken": {
                              "location": "query",
                              "description": "Required. A page token, received from a previous `ListCutoverJobs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListCutoverJobs` must match the call that provided the page token.",
                              "type": "string"
                            },
                            "parent": {
                              "location": "path",
                              "description": "Required. The parent, which owns this collection of migrating VMs.",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                              "required": true
                            },
                            "filter": {
                              "description": "Optional. The filter request.",
                              "type": "string",
                              "location": "query"
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs",
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListCutoverJobsResponse"
                          }
                        },
                        "cancel": {
                          "request": {
                            "$ref": "CancelCutoverJobRequest"
                          },
                          "description": "Initiates the cancellation of a running cutover job.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cutoverJobs/[^/]+$",
                              "required": true,
                              "description": "Required. The cutover job id",
                              "type": "string",
                              "location": "path"
                            }
                          },
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Operation"
                          },
                          "path": "v1/{+name}:cancel",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs/{cutoverJobsId}:cancel",
                          "id": "vmmigration.projects.locations.sources.migratingVms.cutoverJobs.cancel"
                        }
                      }
                    },
                    "cloneJobs": {
                      "methods": {
                        "cancel": {
                          "description": "Initiates the cancellation of a running clone job.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs/{cloneJobsId}:cancel",
                          "response": {
                            "$ref": "Operation"
                          },
                          "request": {
                            "$ref": "CancelCloneJobRequest"
                          },
                          "id": "vmmigration.projects.locations.sources.migratingVms.cloneJobs.cancel",
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "required": true,
                              "type": "string",
                              "description": "Required. The clone job id",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cloneJobs/[^/]+$"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+name}:cancel",
                          "httpMethod": "POST"
                        },
                        "create": {
                          "parameters": {
                            "parent": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                              "type": "string",
                              "required": true,
                              "description": "Required. The Clone's parent."
                            },
                            "requestId": {
                              "type": "string",
                              "location": "query",
                              "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                            },
                            "cloneJobId": {
                              "type": "string",
                              "description": "Required. The clone job identifier.",
                              "location": "query"
                            }
                          },
                          "httpMethod": "POST",
                          "description": "Initiates a Clone of a specific migrating VM.",
                          "id": "vmmigration.projects.locations.sources.migratingVms.cloneJobs.create",
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs",
                          "path": "v1/{+parent}/cloneJobs",
                          "request": {
                            "$ref": "CloneJob"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "Operation"
                          }
                        },
                        "list": {
                          "parameters": {
                            "orderBy": {
                              "location": "query",
                              "type": "string",
                              "description": "Optional. the order by fields for the result."
                            },
                            "pageToken": {
                              "description": "Required. A page token, received from a previous `ListCloneJobs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListCloneJobs` must match the call that provided the page token.",
                              "location": "query",
                              "type": "string"
                            },
                            "parent": {
                              "description": "Required. The parent, which owns this collection of source VMs.",
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$"
                            },
                            "filter": {
                              "description": "Optional. The filter request.",
                              "location": "query",
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "Optional. The maximum number of clone jobs to return. The service may return fewer than this value. If unspecified, at most 500 clone jobs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "GET",
                          "path": "v1/{+parent}/cloneJobs",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs",
                          "id": "vmmigration.projects.locations.sources.migratingVms.cloneJobs.list",
                          "response": {
                            "$ref": "ListCloneJobsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Lists CloneJobs of a given migrating VM."
                        },
                        "get": {
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "vmmigration.projects.locations.sources.migratingVms.cloneJobs.get",
                          "description": "Gets details of a single CloneJob.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs/{cloneJobsId}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cloneJobs/[^/]+$",
                              "location": "path",
                              "description": "Required. The name of the CloneJob.",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "response": {
                            "$ref": "CloneJob"
                          },
                          "path": "v1/{+name}"
                        }
                      }
                    }
                  }
                }
              }
            },
            "groups": {
              "methods": {
                "removeGroupMigration": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "vmmigration.projects.locations.groups.removeGroupMigration",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "group"
                  ],
                  "path": "v1/{+group}:removeGroupMigration",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeGroupMigration",
                  "parameters": {
                    "group": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the Group.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "description": "Removes a MigratingVm from a Group.",
                  "request": {
                    "$ref": "RemoveGroupMigrationRequest"
                  },
                  "httpMethod": "POST"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "Required. A page token, received from a previous `ListGroups` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListGroups` must match the call that provided the page token.",
                      "type": "string"
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. the order by fields for the result."
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Optional. The maximum number of groups to return. The service may return fewer than this value. If unspecified, at most 500 groups will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    },
                    "filter": {
                      "description": "Optional. The filter request.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent, which owns this collection of groups.",
                      "required": true
                    }
                  },
                  "path": "v1/{+parent}/groups",
                  "description": "Lists Groups in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListGroupsResponse"
                  },
                  "id": "vmmigration.projects.locations.groups.list",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups"
                },
                "delete": {
                  "parameters": {
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "description": "Required. The Group name.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "id": "vmmigration.projects.locations.groups.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Group.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}"
                },
                "create": {
                  "path": "v1/{+parent}/groups",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Group in a given project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The Group's parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "groupId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The group identifier."
                    }
                  },
                  "request": {
                    "$ref": "Group"
                  },
                  "id": "vmmigration.projects.locations.groups.create"
                },
                "addGroupMigration": {
                  "description": "Adds a MigratingVm to a Group.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "AddGroupMigrationRequest"
                  },
                  "id": "vmmigration.projects.locations.groups.addGroupMigration",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "group"
                  ],
                  "parameters": {
                    "group": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The full path name of the Group to add to."
                    }
                  },
                  "path": "v1/{+group}:addGroupMigration",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addGroupMigration"
                },
                "get": {
                  "path": "v1/{+name}",
                  "id": "vmmigration.projects.locations.groups.get",
                  "description": "Gets details of a single Group.",
                  "response": {
                    "$ref": "Group"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The group name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "patch": {
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "id": "vmmigration.projects.locations.groups.patch",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "description": "Output only. The Group name.",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "Field mask is used to specify the fields to be overwritten in the Group resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "format": "google-fieldmask"
                    }
                  },
                  "description": "Updates the parameters of a single Group.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Group"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "targetProjects": {
              "methods": {
                "get": {
                  "description": "Gets details of a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targetProjects/{targetProjectsId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The TargetProject name.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "TargetProject"
                  },
                  "httpMethod": "GET",
                  "id": "vmmigration.projects.locations.targetProjects.get"
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "TargetProject"
                  },
                  "description": "Creates a new TargetProject in a given project. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+parent}/targetProjects",
                  "httpMethod": "POST",
                  "id": "vmmigration.projects.locations.targetProjects.create",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The TargetProject's parent."
                    },
                    "targetProjectId": {
                      "location": "query",
                      "description": "Required. The target_project identifier.",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targetProjects"
                },
                "delete": {
                  "description": "Deletes a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.",
                  "id": "vmmigration.projects.locations.targetProjects.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The TargetProject name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targetProjects/{targetProjectsId}",
                  "path": "v1/{+name}"
                },
                "list": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent, which owns this collection of targets.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "orderBy": {
                      "description": "Optional. the order by fields for the result.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Optional. The maximum number of targets to return. The service may return fewer than this value. If unspecified, at most 500 targets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    },
                    "filter": {
                      "description": "Optional. The filter request.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. A page token, received from a previous `ListTargets` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTargets` must match the call that provided the page token."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targetProjects",
                  "path": "v1/{+parent}/targetProjects",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists TargetProjects in a given project. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "vmmigration.projects.locations.targetProjects.list",
                  "response": {
                    "$ref": "ListTargetProjectsResponse"
                  }
                },
                "patch": {
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "TargetProject"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targetProjects/{targetProjectsId}",
                  "description": "Updates the parameters of a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$",
                      "description": "Output only. The name of the target project.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Field mask is used to specify the fields to be overwritten in the TargetProject resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "format": "google-fieldmask"
                    }
                  },
                  "id": "vmmigration.projects.locations.targetProjects.patch",
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          },
          "methods": {
            "list": {
              "flatPath": "v1/projects/{projectsId}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "id": "vmmigration.projects.locations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "name": {
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+$"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "location": "query"
                }
              },
              "path": "v1/{+name}/locations",
              "parameterOrder": [
                "name"
              ],
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET"
            },
            "get": {
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Resource name for the location.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Location"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "description": "Gets information about a location.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "id": "vmmigration.projects.locations.get"
            }
          }
        }
      }
    }
  },
  "basePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "rootUrl": "https://vmmigration.googleapis.com/",
  "version": "v1",
  "batchPath": "batch",
  "baseUrl": "https://vmmigration.googleapis.com/",
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/migrate/virtual-machines",
  "mtlsRootUrl": "https://vmmigration.mtls.googleapis.com/",
  "description": "Use the Migrate to Virtual Machines API to programmatically migrate workloads. ",
  "title": "VM Migration API",
  "ownerDomain": "google.com",
  "revision": "20230927",
  "version_module": true,
  "canonicalName": "VM Migration Service",
  "protocol": "rest",
  "ownerName": "Google"
}

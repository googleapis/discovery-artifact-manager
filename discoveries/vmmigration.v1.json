{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "revision": "20220811",
  "description": "Use the Migrate to Virtual Machines API to programmatically migrate workloads. ",
  "documentationLink": "https://cloud.google.com/migrate/virtual-machines",
  "version_module": true,
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "name": "vmmigration",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "mtlsRootUrl": "https://vmmigration.mtls.googleapis.com/",
  "rootUrl": "https://vmmigration.googleapis.com/",
  "id": "vmmigration:v1",
  "kind": "discovery#restDescription",
  "servicePath": "",
  "fullyEncodeReservedExpansion": true,
  "title": "VM Migration API",
  "basePath": "",
  "version": "v1",
  "ownerDomain": "google.com",
  "baseUrl": "https://vmmigration.googleapis.com/",
  "canonicalName": "VM Migration Service",
  "protocol": "rest",
  "parameters": {
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    }
  },
  "batchPath": "batch",
  "schemas": {
    "NetworkInterface": {
      "id": "NetworkInterface",
      "properties": {
        "externalIp": {
          "type": "string",
          "description": "The external IP to define in the NIC."
        },
        "network": {
          "type": "string",
          "description": "The network to connect the NIC to."
        },
        "subnetwork": {
          "type": "string",
          "description": "The subnetwork to connect the NIC to."
        },
        "internalIp": {
          "type": "string",
          "description": "The internal IP to define in the NIC. The formats accepted are: `ephemeral` \\ ipv4 address \\ a named address resource full path."
        }
      },
      "type": "object",
      "description": "NetworkInterface represents a NIC of a VM."
    },
    "VmUtilizationMetrics": {
      "description": "Utilization metrics values for a single VM.",
      "type": "object",
      "id": "VmUtilizationMetrics",
      "properties": {
        "cpuAveragePercent": {
          "type": "integer",
          "description": "Average CPU usage, percent.",
          "format": "int32"
        },
        "diskIoRateMaxKbps": {
          "type": "string",
          "description": "Max disk IO rate, in kilobytes per second.",
          "format": "int64"
        },
        "memoryMaxPercent": {
          "format": "int32",
          "description": "Max memory usage, percent.",
          "type": "integer"
        },
        "diskIoRateAverageKbps": {
          "type": "string",
          "format": "int64",
          "description": "Average disk IO rate, in kilobytes per second."
        },
        "memoryAveragePercent": {
          "description": "Average memory usage, percent.",
          "format": "int32",
          "type": "integer"
        },
        "cpuMaxPercent": {
          "type": "integer",
          "description": "Max CPU usage, percent.",
          "format": "int32"
        },
        "networkThroughputMaxKbps": {
          "type": "string",
          "description": "Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.",
          "format": "int64"
        },
        "networkThroughputAverageKbps": {
          "type": "string",
          "format": "int64",
          "description": "Average network throughput (combined transmit-rates and receive-rates), in kilobytes per second."
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "type": "object",
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string",
          "readOnly": true
        },
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. API version used to start the operation."
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ListDatacenterConnectorsResponse": {
      "id": "ListDatacenterConnectorsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true
        },
        "datacenterConnectors": {
          "items": {
            "$ref": "DatacenterConnector"
          },
          "readOnly": true,
          "description": "Output only. The list of sources response.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response message for 'ListDatacenterConnectors' request."
    },
    "ComputeScheduling": {
      "description": "Scheduling information for VM on maintenance/restart behaviour and node allocation in sole tenant nodes.",
      "properties": {
        "minNodeCpus": {
          "type": "integer",
          "description": "The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node. Ignored if no node_affinites are configured.",
          "format": "int32"
        },
        "nodeAffinities": {
          "items": {
            "$ref": "SchedulingNodeAffinity"
          },
          "description": "A set of node affinity and anti-affinity configurations for sole tenant nodes.",
          "type": "array"
        },
        "onHostMaintenance": {
          "enum": [
            "ON_HOST_MAINTENANCE_UNSPECIFIED",
            "TERMINATE",
            "MIGRATE"
          ],
          "type": "string",
          "enumDescriptions": [
            "An unknown, unexpected behavior.",
            "Terminate the instance when the host machine undergoes maintenance.",
            "Migrate the instance when the host machine undergoes maintenance."
          ],
          "description": "How the instance should behave when the host machine undergoes maintenance that may temporarily impact instance performance."
        },
        "restartType": {
          "description": "Whether the Instance should be automatically restarted whenever it is terminated by Compute Engine (not terminated by user). This configuration is identical to `automaticRestart` field in Compute Engine create instance under scheduling. It was changed to an enum (instead of a boolean) to match the default value in Compute Engine which is automatic restart.",
          "enumDescriptions": [
            "Unspecified behavior. This will use the default.",
            "The Instance should be automatically restarted whenever it is terminated by Compute Engine.",
            "The Instance isn't automatically restarted whenever it is terminated by Compute Engine."
          ],
          "enum": [
            "RESTART_TYPE_UNSPECIFIED",
            "AUTOMATIC_RESTART",
            "NO_AUTOMATIC_RESTART"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "id": "ComputeScheduling"
    },
    "ListGroupsResponse": {
      "description": "Response message for 'ListGroups' request.",
      "properties": {
        "groups": {
          "description": "Output only. The list of groups response.",
          "items": {
            "$ref": "Group"
          },
          "type": "array",
          "readOnly": true
        },
        "unreachable": {
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "Output only. Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "id": "ListGroupsResponse",
      "type": "object"
    },
    "FinalizeMigrationRequest": {
      "properties": {},
      "type": "object",
      "description": "Request message for 'FinalizeMigration' request.",
      "id": "FinalizeMigrationRequest"
    },
    "AppliedLicense": {
      "id": "AppliedLicense",
      "description": "AppliedLicense holds the license data returned by adaptation module report.",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "NONE",
            "PAYG",
            "BYOL"
          ],
          "type": "string",
          "description": "The license type that was used in OS adaptation.",
          "enumDescriptions": [
            "Unspecified license for the OS.",
            "No license available for the OS.",
            "The license type is Pay As You Go license type.",
            "The license type is is Bring Your Own License type."
          ]
        },
        "osLicense": {
          "type": "string",
          "description": "The OS license returned from the adaptation module's report."
        }
      },
      "type": "object"
    },
    "CutoverJob": {
      "description": "CutoverJob message describes a cutover of a migrating VM. The CutoverJob is the operation of shutting down the VM, creating a snapshot and clonning the VM using the replicated snapshot.",
      "properties": {
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the cutover job had finished."
        },
        "error": {
          "readOnly": true,
          "$ref": "Status",
          "description": "Output only. Provides details for the errors that led to the Cutover Job's state."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the cutover job."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the cutover job was created (as an API call, not when it was actually created in the target).",
          "type": "string",
          "readOnly": true
        },
        "stateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the state was last updated.",
          "readOnly": true
        },
        "state": {
          "description": "Output only. State of the cutover job.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "FAILED",
            "SUCCEEDED",
            "CANCELLED",
            "CANCELLING",
            "ACTIVE",
            "ADAPTING_OS"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The cutover job has not yet started.",
            "The cutover job finished with errors.",
            "The cutover job finished successfully.",
            "The cutover job was cancelled.",
            "The cutover job is being cancelled.",
            "The cutover job is active and running.",
            "OS adaptation is running as part of the cutover job to generate license."
          ]
        },
        "computeEngineTargetDetails": {
          "description": "Output only. Details of the target VM in Compute Engine.",
          "$ref": "ComputeEngineTargetDetails",
          "readOnly": true
        },
        "progressPercent": {
          "format": "int32",
          "type": "integer",
          "description": "Output only. The current progress in percentage of the cutover job.",
          "readOnly": true
        },
        "stateMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. A message providing possible extra details about the current state."
        }
      },
      "id": "CutoverJob",
      "type": "object"
    },
    "ComputeEngineTargetDetails": {
      "description": "ComputeEngineTargetDetails is a collection of details for creating a VM in a target Compute Engine project.",
      "properties": {
        "labels": {
          "type": "object",
          "description": "A map of labels to associate with the VM.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "appliedLicense": {
          "description": "The OS license returned from the adaptation module report.",
          "$ref": "AppliedLicense"
        },
        "vmName": {
          "description": "The name of the VM to create.",
          "type": "string"
        },
        "networkTags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A map of network tags to associate with the VM."
        },
        "project": {
          "type": "string",
          "description": "The GCP target project ID or project name."
        },
        "hostname": {
          "type": "string",
          "description": "The hostname to assign to the VM."
        },
        "serviceAccount": {
          "description": "The service account to associate the VM with.",
          "type": "string"
        },
        "machineType": {
          "description": "The machine type to create the VM with.",
          "type": "string"
        },
        "zone": {
          "description": "The zone in which to create the VM.",
          "type": "string"
        },
        "networkInterfaces": {
          "type": "array",
          "items": {
            "$ref": "NetworkInterface"
          },
          "description": "List of NICs connected to this VM."
        },
        "secureBoot": {
          "type": "boolean",
          "description": "Defines whether the instance has Secure Boot enabled. This can be set to true only if the vm boot option is EFI."
        },
        "licenseType": {
          "type": "string",
          "description": "The license type to use in OS adaptation.",
          "enumDescriptions": [
            "The license type is the default for the OS.",
            "The license type is Pay As You Go license type.",
            "The license type is Bring Your Own License type."
          ],
          "enum": [
            "COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT",
            "COMPUTE_ENGINE_LICENSE_TYPE_PAYG",
            "COMPUTE_ENGINE_LICENSE_TYPE_BYOL"
          ]
        },
        "machineTypeSeries": {
          "description": "The machine type series to create the VM with.",
          "type": "string"
        },
        "bootOption": {
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is EFI.",
            "The boot option is BIOS."
          ],
          "type": "string",
          "enum": [
            "COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED",
            "COMPUTE_ENGINE_BOOT_OPTION_EFI",
            "COMPUTE_ENGINE_BOOT_OPTION_BIOS"
          ],
          "description": "The VM Boot Option, as set in the source vm."
        },
        "computeScheduling": {
          "description": "Compute instance scheduling information (if empty default is used).",
          "$ref": "ComputeScheduling"
        },
        "diskType": {
          "enum": [
            "COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED",
            "COMPUTE_ENGINE_DISK_TYPE_STANDARD",
            "COMPUTE_ENGINE_DISK_TYPE_SSD",
            "COMPUTE_ENGINE_DISK_TYPE_BALANCED"
          ],
          "type": "string",
          "description": "The disk type to use in the VM.",
          "enumDescriptions": [
            "An unspecified disk type. Will be used as STANDARD.",
            "A Standard disk type.",
            "SSD hard disk type.",
            "An alternative to SSD persistent disks that balance performance and cost."
          ]
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The metadata key/value pairs to assign to the VM.",
          "type": "object"
        },
        "additionalLicenses": {
          "description": "Additional licenses to assign to the VM.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ComputeEngineTargetDetails",
      "type": "object"
    },
    "SchedulePolicy": {
      "properties": {
        "skipOsAdaptation": {
          "description": "A flag to indicate whether to skip OS adaptation during the replication sync. OS adaptation is a process where the VM's operating system undergoes changes and adaptations to fully function on Compute Engine.",
          "type": "boolean"
        },
        "idleDuration": {
          "description": "The idle duration between replication stages.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "description": "A policy for scheduling replications.",
      "id": "SchedulePolicy",
      "type": "object"
    },
    "Status": {
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        }
      },
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object"
    },
    "SchedulingNodeAffinity": {
      "properties": {
        "values": {
          "description": "Corresponds to the label values of Node resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "key": {
          "type": "string",
          "description": "The label key of Node resource to reference."
        },
        "operator": {
          "enum": [
            "OPERATOR_UNSPECIFIED",
            "IN",
            "NOT_IN"
          ],
          "description": "The operator to use for the node resources specified in the `values` parameter.",
          "enumDescriptions": [
            "An unknown, unexpected behavior.",
            "The node resource group should be in these resources affinity.",
            "The node resource group should not be in these resources affinity."
          ],
          "type": "string"
        }
      },
      "description": "Node Affinity: the configuration of desired nodes onto which this Instance could be scheduled. Based on https://cloud.google.com/compute/docs/reference/rest/v1/instances/setScheduling",
      "id": "SchedulingNodeAffinity",
      "type": "object"
    },
    "TargetProject": {
      "id": "TargetProject",
      "properties": {
        "description": {
          "type": "string",
          "description": "The target project's description."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The last time the target project resource was updated."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the target project."
        },
        "project": {
          "description": "The target project ID (number) or project name.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time this target project resource was created (not related to when the Compute Engine project it points to was created).",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "description": "TargetProject message represents a target Compute Engine project for a migration or a clone.",
      "type": "object"
    },
    "CancelCloneJobRequest": {
      "type": "object",
      "id": "CancelCloneJobRequest",
      "description": "Request message for 'CancelCloneJob' request.",
      "properties": {}
    },
    "ListSourcesResponse": {
      "type": "object",
      "id": "ListSourcesResponse",
      "properties": {
        "unreachable": {
          "readOnly": true,
          "description": "Output only. Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sources": {
          "items": {
            "$ref": "Source"
          },
          "type": "array",
          "description": "Output only. The list of sources response.",
          "readOnly": true
        },
        "nextPageToken": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "description": "Response message for 'ListSources' request."
    },
    "Group": {
      "properties": {
        "description": {
          "description": "User-provided description of the group.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The create time timestamp.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "displayName": {
          "description": "Display name is a user defined name for this group which can be updated.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The update time timestamp."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The Group name."
        }
      },
      "type": "object",
      "description": "Describes message for 'Group' resource. The Group is a collections of several MigratingVms.",
      "id": "Group"
    },
    "MigrationError": {
      "id": "MigrationError",
      "type": "object",
      "description": "Represents migration resource error information that can be used with google.rpc.Status message. MigrationError is used to present the user with error information in migration operations.",
      "properties": {
        "actionItem": {
          "description": "Output only. Suggested action for solving the error.",
          "readOnly": true,
          "$ref": "LocalizedMessage"
        },
        "errorTime": {
          "description": "Output only. The time the error occurred.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "code": {
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is not used.",
            "Migrate for Compute encountered an unknown error.",
            "Migrate for Compute encountered an error while validating replication source health.",
            "Migrate for Compute encountered an error during source data operation.",
            "Migrate for Compute encountered an error during target data operation.",
            "Migrate for Compute encountered an error during OS adaptation.",
            "Migrate for Compute encountered an error in clone operation.",
            "Migrate for Compute encountered an error in cutover operation.",
            "Migrate for Compute encountered an error during utilization report creation.",
            "Migrate for Compute encountered an error during appliance upgrade."
          ],
          "enum": [
            "ERROR_CODE_UNSPECIFIED",
            "UNKNOWN_ERROR",
            "SOURCE_VALIDATION_ERROR",
            "SOURCE_REPLICATION_ERROR",
            "TARGET_REPLICATION_ERROR",
            "OS_ADAPTATION_ERROR",
            "CLONE_ERROR",
            "CUTOVER_ERROR",
            "UTILIZATION_REPORT_ERROR",
            "APPLIANCE_UPGRADE_ERROR"
          ],
          "description": "Output only. The error code.",
          "readOnly": true
        },
        "errorMessage": {
          "description": "Output only. The localized error message.",
          "readOnly": true,
          "$ref": "LocalizedMessage"
        },
        "helpLinks": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "Link"
          },
          "description": "Output only. URL(s) pointing to additional information on handling the current error."
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "properties": {
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object"
    },
    "ListMigratingVmsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string",
          "readOnly": true
        },
        "unreachable": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "migratingVms": {
          "items": {
            "$ref": "MigratingVm"
          },
          "readOnly": true,
          "description": "Output only. The list of Migrating VMs response.",
          "type": "array"
        }
      },
      "description": "Response message for 'ListMigratingVms' request.",
      "id": "ListMigratingVmsResponse",
      "type": "object"
    },
    "ListCloneJobsResponse": {
      "type": "object",
      "description": "Response message for 'ListCloneJobs' request.",
      "id": "ListCloneJobsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true
        },
        "cloneJobs": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "CloneJob"
          },
          "description": "Output only. The list of clone jobs response."
        },
        "unreachable": {
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "Output only. Locations that could not be reached.",
          "type": "array"
        }
      }
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "id": "Empty",
      "type": "object"
    },
    "ApplianceVersion": {
      "type": "object",
      "properties": {
        "releaseNotesUri": {
          "description": "Link to a page that contains the version release notes.",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "A link for downloading the version."
        },
        "critical": {
          "type": "boolean",
          "description": "Determine whether it's critical to upgrade the appliance to this version."
        },
        "version": {
          "type": "string",
          "description": "The appliance version."
        }
      },
      "description": "Describes an appliance version.",
      "id": "ApplianceVersion"
    },
    "VmwareVmsDetails": {
      "description": "VmwareVmsDetails describes VMs in vCenter.",
      "properties": {
        "details": {
          "type": "array",
          "description": "The details of the vmware VMs.",
          "items": {
            "$ref": "VmwareVmDetails"
          }
        }
      },
      "type": "object",
      "id": "VmwareVmsDetails"
    },
    "FetchInventoryResponse": {
      "id": "FetchInventoryResponse",
      "properties": {
        "updateTime": {
          "description": "Output only. The timestamp when the source was last queried (if the result is from the cache).",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true
        },
        "vmwareVms": {
          "description": "The description of the VMs in a Source of type Vmware.",
          "$ref": "VmwareVmsDetails"
        }
      },
      "description": "Response message for fetchInventory.",
      "type": "object"
    },
    "PauseMigrationRequest": {
      "description": "Request message for 'PauseMigration' request.",
      "type": "object",
      "id": "PauseMigrationRequest",
      "properties": {}
    },
    "MigratingVm": {
      "description": "MigratingVm describes the VM that will be migrated from a Source environment and its replication state.",
      "id": "MigratingVm",
      "properties": {
        "sourceVmId": {
          "type": "string",
          "description": "The unique ID of the VM in the source. The VM's name in vSphere can be changed, so this is not the VM's name but rather its moRef id. This id is of the form vm-."
        },
        "createTime": {
          "description": "Output only. The time the migrating VM was created (this refers to this resource and not to the time it was installed in the source).",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "group": {
          "readOnly": true,
          "description": "Output only. The group this migrating vm is included in, if any. The group is represented by the full path of the appropriate Group resource.",
          "type": "string"
        },
        "error": {
          "readOnly": true,
          "$ref": "Status",
          "description": "Output only. Provides details on the state of the Migrating VM in case of an error in replication."
        },
        "state": {
          "description": "Output only. State of the MigratingVm.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "READY",
            "FIRST_SYNC",
            "ACTIVE",
            "CUTTING_OVER",
            "CUTOVER",
            "FINAL_SYNC",
            "PAUSED",
            "FINALIZING",
            "FINALIZED",
            "ERROR"
          ],
          "enumDescriptions": [
            "The state was not sampled by the health checks yet.",
            "The VM in the source is being verified.",
            "The source VM was verified, and it's ready to start replication.",
            "Migration is going through the first sync cycle.",
            "The replication is active, and it's running or scheduled to run.",
            "The source VM is being turned off, and a final replication is currently running.",
            "The source VM was stopped and replicated. The replication is currently paused.",
            "A cutover job is active and replication cycle is running the final sync.",
            "The replication was paused by the user and no cycles are scheduled to run.",
            "The migrating VM is being finalized and migration resources are being removed.",
            "The replication process is done. The migrating VM is finalized and no longer consumes billable resources.",
            "The replication process encountered an unrecoverable error and was aborted."
          ],
          "readOnly": true
        },
        "stateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The last time the migrating VM state was updated."
        },
        "description": {
          "description": "The description attached to the migrating VM by the user.",
          "type": "string"
        },
        "policy": {
          "description": "The replication schedule policy.",
          "$ref": "SchedulePolicy"
        },
        "computeEngineTargetDefaults": {
          "$ref": "ComputeEngineTargetDefaults",
          "description": "Details of the target VM in Compute Engine."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The identifier of the MigratingVm.",
          "type": "string"
        },
        "currentSyncInfo": {
          "description": "Output only. The percentage progress of the current running replication cycle.",
          "readOnly": true,
          "$ref": "ReplicationCycle"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The last time the migrating VM resource was updated.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "The display name attached to the MigratingVm by the user.",
          "type": "string"
        },
        "recentCloneJobs": {
          "readOnly": true,
          "items": {
            "$ref": "CloneJob"
          },
          "description": "Output only. The recent clone jobs performed on the migrating VM. This field holds the vm's last completed clone job and the vm's running clone job, if one exists. Note: To have this field populated you need to explicitly request it via the \"view\" parameter of the Get/List request.",
          "type": "array"
        },
        "recentCutoverJobs": {
          "items": {
            "$ref": "CutoverJob"
          },
          "description": "Output only. The recent cutover jobs performed on the migrating VM. This field holds the vm's last completed cutover job and the vm's running cutover job, if one exists. Note: To have this field populated you need to explicitly request it via the \"view\" parameter of the Get/List request.",
          "readOnly": true,
          "type": "array"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The labels of the migrating VM."
        },
        "lastSync": {
          "$ref": "ReplicationSync",
          "description": "Output only. The most updated snapshot created time in the source that finished replication.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "ReplicationSync": {
      "id": "ReplicationSync",
      "properties": {
        "lastSyncTime": {
          "description": "The most updated snapshot created time in the source that finished replication.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "ReplicationSync contain information about the last replica sync to the cloud."
    },
    "UtilizationReport": {
      "description": "Utilization report details the utilization (CPU, memory, etc.) of selected source VMs.",
      "id": "UtilizationReport",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The report display name, as assigned by the user."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The report unique name."
        },
        "vmCount": {
          "description": "Output only. Total number of VMs included in the report.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "SUCCEEDED",
            "FAILED"
          ],
          "description": "Output only. Current state of the report.",
          "enumDescriptions": [
            "The state is unknown. This value is not in use.",
            "The report is in the making.",
            "Report creation completed successfully.",
            "Report creation failed."
          ]
        },
        "error": {
          "readOnly": true,
          "$ref": "Status",
          "description": "Output only. Provides details on the state of the report in case of an error."
        },
        "frameEndTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The point in time when the time frame ends. Notice that the time frame is counted backwards. For instance if the \"frame_end_time\" value is 2021/01/20 and the time frame is WEEK then the report covers the week between 2021/01/20 and 2021/01/14.",
          "type": "string"
        },
        "timeFrame": {
          "description": "Time frame of the report.",
          "type": "string",
          "enum": [
            "TIME_FRAME_UNSPECIFIED",
            "WEEK",
            "MONTH",
            "YEAR"
          ],
          "enumDescriptions": [
            "The time frame was not specified and will default to WEEK.",
            "One week.",
            "One month.",
            "One year."
          ]
        },
        "vms": {
          "type": "array",
          "items": {
            "$ref": "VmUtilizationInfo"
          },
          "description": "List of utilization information per VM. When sent as part of the request, the \"vm_id\" field is used in order to specify which VMs to include in the report. In that case all other fields are ignored."
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the report was created (this refers to the time of the request, not the time the report creation completed)."
        },
        "stateTime": {
          "description": "Output only. The time the state was last set.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        }
      }
    },
    "AvailableUpdates": {
      "properties": {
        "inPlaceUpdate": {
          "description": "The latest version for in place update. The current appliance can be updated to this version using the API or m4c CLI.",
          "$ref": "ApplianceVersion"
        },
        "newDeployableAppliance": {
          "description": "The newest deployable version of the appliance. The current appliance can't be updated into this version, and the owner must manually deploy this OVA to a new appliance.",
          "$ref": "ApplianceVersion"
        }
      },
      "description": "Holds informatiom about the available versions for upgrade.",
      "type": "object",
      "id": "AvailableUpdates"
    },
    "ListCutoverJobsResponse": {
      "type": "object",
      "properties": {
        "cutoverJobs": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "CutoverJob"
          },
          "description": "Output only. The list of cutover jobs response."
        },
        "nextPageToken": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "description": "Output only. Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "description": "Response message for 'ListCutoverJobs' request.",
      "id": "ListCutoverJobsResponse"
    },
    "Source": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "User-provided description of the source."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The labels of the source."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The update time timestamp."
        },
        "vmware": {
          "description": "Vmware type source details.",
          "$ref": "VmwareSourceDetails"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The Source name.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The create time timestamp.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      },
      "description": "Source message describes a specific vm migration Source resource. It contains the source environment information.",
      "id": "Source"
    },
    "Link": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Describes what the link offers."
        },
        "url": {
          "type": "string",
          "description": "The URL of the link."
        }
      },
      "description": "Describes a URL link.",
      "id": "Link",
      "type": "object"
    },
    "StartMigrationRequest": {
      "description": "Request message for 'StartMigrationRequest' request.",
      "id": "StartMigrationRequest",
      "properties": {},
      "type": "object"
    },
    "CancelCutoverJobRequest": {
      "type": "object",
      "description": "Request message for 'CancelCutoverJob' request.",
      "properties": {},
      "id": "CancelCutoverJobRequest"
    },
    "ComputeEngineTargetDefaults": {
      "description": "ComputeEngineTargetDefaults is a collection of details for creating a VM in a target Compute Engine project.",
      "type": "object",
      "properties": {
        "networkTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A map of network tags to associate with the VM."
        },
        "labels": {
          "description": "A map of labels to associate with the VM.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "diskType": {
          "enumDescriptions": [
            "An unspecified disk type. Will be used as STANDARD.",
            "A Standard disk type.",
            "SSD hard disk type.",
            "An alternative to SSD persistent disks that balance performance and cost."
          ],
          "enum": [
            "COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED",
            "COMPUTE_ENGINE_DISK_TYPE_STANDARD",
            "COMPUTE_ENGINE_DISK_TYPE_SSD",
            "COMPUTE_ENGINE_DISK_TYPE_BALANCED"
          ],
          "type": "string",
          "description": "The disk type to use in the VM."
        },
        "secureBoot": {
          "description": "Defines whether the instance has Secure Boot enabled. This can be set to true only if the vm boot option is EFI.",
          "type": "boolean"
        },
        "computeScheduling": {
          "$ref": "ComputeScheduling",
          "description": "Compute instance scheduling information (if empty default is used)."
        },
        "machineTypeSeries": {
          "description": "The machine type series to create the VM with.",
          "type": "string"
        },
        "zone": {
          "type": "string",
          "description": "The zone in which to create the VM."
        },
        "machineType": {
          "type": "string",
          "description": "The machine type to create the VM with."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The metadata key/value pairs to assign to the VM.",
          "type": "object"
        },
        "licenseType": {
          "enum": [
            "COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT",
            "COMPUTE_ENGINE_LICENSE_TYPE_PAYG",
            "COMPUTE_ENGINE_LICENSE_TYPE_BYOL"
          ],
          "description": "The license type to use in OS adaptation.",
          "enumDescriptions": [
            "The license type is the default for the OS.",
            "The license type is Pay As You Go license type.",
            "The license type is Bring Your Own License type."
          ],
          "type": "string"
        },
        "bootOption": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED",
            "COMPUTE_ENGINE_BOOT_OPTION_EFI",
            "COMPUTE_ENGINE_BOOT_OPTION_BIOS"
          ],
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is EFI.",
            "The boot option is BIOS."
          ],
          "description": "Output only. The VM Boot Option, as set in the source vm."
        },
        "additionalLicenses": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Additional licenses to assign to the VM."
        },
        "networkInterfaces": {
          "description": "List of NICs connected to this VM.",
          "type": "array",
          "items": {
            "$ref": "NetworkInterface"
          }
        },
        "targetProject": {
          "description": "The full path of the resource of type TargetProject which represents the Compute Engine project in which to create this VM.",
          "type": "string"
        },
        "vmName": {
          "type": "string",
          "description": "The name of the VM to create."
        },
        "hostname": {
          "type": "string",
          "description": "The hostname to assign to the VM."
        },
        "serviceAccount": {
          "description": "The service account to associate the VM with.",
          "type": "string"
        },
        "appliedLicense": {
          "$ref": "AppliedLicense",
          "description": "Output only. The OS license returned from the adaptation module report.",
          "readOnly": true
        }
      },
      "id": "ComputeEngineTargetDefaults"
    },
    "UpgradeApplianceRequest": {
      "id": "UpgradeApplianceRequest",
      "type": "object",
      "properties": {
        "requestId": {
          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "description": "Request message for 'UpgradeAppliance' request."
    },
    "VmwareSourceDetails": {
      "id": "VmwareSourceDetails",
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "Input only. The credentials password. This is write only and can not be read in a GET operation."
        },
        "thumbprint": {
          "type": "string",
          "description": "The thumbprint representing the certificate for the vcenter."
        },
        "vcenterIp": {
          "type": "string",
          "description": "The ip address of the vcenter this Source represents."
        },
        "username": {
          "description": "The credentials username.",
          "type": "string"
        }
      },
      "description": "VmwareSourceDetails message describes a specific source details for the vmware source type."
    },
    "UpgradeStatus": {
      "description": "UpgradeStatus contains information about upgradeAppliance operation.",
      "type": "object",
      "id": "UpgradeStatus",
      "properties": {
        "version": {
          "description": "The version to upgrade to.",
          "type": "string"
        },
        "state": {
          "description": "The state of the upgradeAppliance operation.",
          "enumDescriptions": [
            "The state was not sampled by the health checks yet.",
            "The upgrade has started.",
            "The upgrade failed.",
            "The upgrade finished successfully."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "FAILED",
            "SUCCEEDED"
          ],
          "type": "string"
        },
        "previousVersion": {
          "description": "The version from which we upgraded.",
          "type": "string"
        },
        "startTime": {
          "description": "The time the operation was started.",
          "type": "string",
          "format": "google-datetime"
        },
        "error": {
          "description": "Provides details on the state of the upgrade operation in case of an error.",
          "$ref": "Status"
        }
      }
    },
    "DatacenterConnector": {
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "OFFLINE",
            "FAILED",
            "ACTIVE"
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. State of the DatacenterConnector, as determined by the health checks.",
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The state was not sampled by the health checks yet.",
            "The source was sampled by health checks and is not available.",
            "The source is available but might not be usable yet due to unvalidated credentials or another reason. The credentials referred to are the ones to the Source. The error message will contain further details.",
            "The source exists and its credentials were verified."
          ]
        },
        "serviceAccount": {
          "type": "string",
          "description": "The service account to use in the connector when communicating with the cloud."
        },
        "stateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the state was last set."
        },
        "registrationId": {
          "description": "Immutable. A unique key for this connector. This key is internal to the OVA connector and is supplied with its creation during the registration process and can not be modified.",
          "type": "string"
        },
        "upgradeStatus": {
          "$ref": "UpgradeStatus",
          "description": "Output only. The status of the current / last upgradeAppliance operation.",
          "readOnly": true
        },
        "error": {
          "readOnly": true,
          "description": "Output only. Provides details on the state of the Datacenter Connector in case of an error.",
          "$ref": "Status"
        },
        "availableVersions": {
          "readOnly": true,
          "$ref": "AvailableUpdates",
          "description": "Output only. The available versions for updating this appliance."
        },
        "name": {
          "description": "Output only. The connector's name.",
          "type": "string",
          "readOnly": true
        },
        "applianceInfrastructureVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Appliance OVA version. This is the OVA which is manually installed by the user and contains the infrastructure for the automatically updatable components on the appliance."
        },
        "createTime": {
          "description": "Output only. The time the connector was created (as an API call, not when it was actually installed).",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "bucket": {
          "description": "Output only. The communication channel between the datacenter connector and GCP.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The last time the connector was updated with an API call.",
          "type": "string",
          "format": "google-datetime"
        },
        "version": {
          "type": "string",
          "description": "The version running in the DatacenterConnector. This is supplied by the OVA connector during the registration process and can not be modified."
        },
        "applianceSoftwareVersion": {
          "type": "string",
          "description": "Output only. Appliance last installed update bundle version. This is the version of the automatically updatable components on the appliance.",
          "readOnly": true
        }
      },
      "id": "DatacenterConnector",
      "description": "DatacenterConnector message describes a connector between the Source and GCP, which is installed on a vmware datacenter (an OVA vm installed by the user) to connect the Datacenter to GCP and support vm migration data transfer.",
      "type": "object"
    },
    "AddGroupMigrationRequest": {
      "properties": {
        "migratingVm": {
          "type": "string",
          "description": "The full path name of the MigratingVm to add."
        }
      },
      "id": "AddGroupMigrationRequest",
      "description": "Request message for 'AddGroupMigration' request.",
      "type": "object"
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "properties": {
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        }
      },
      "type": "object"
    },
    "RemoveGroupMigrationRequest": {
      "properties": {
        "migratingVm": {
          "type": "string",
          "description": "The MigratingVm to remove."
        }
      },
      "type": "object",
      "description": "Request message for 'RemoveMigration' request.",
      "id": "RemoveGroupMigrationRequest"
    },
    "VmUtilizationInfo": {
      "id": "VmUtilizationInfo",
      "description": "Utilization information of a single VM.",
      "properties": {
        "vmId": {
          "description": "The VM's ID in the source.",
          "type": "string"
        },
        "vmwareVmDetails": {
          "description": "The description of the VM in a Source of type Vmware.",
          "$ref": "VmwareVmDetails"
        },
        "utilization": {
          "description": "Utilization metrics for this VM.",
          "$ref": "VmUtilizationMetrics"
        }
      },
      "type": "object"
    },
    "VmwareVmDetails": {
      "description": "VmwareVmDetails describes a VM in vCenter.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name of the VM. Note that this is not necessarily unique."
        },
        "guestDescription": {
          "type": "string",
          "description": "The VM's OS. See for example https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html for types of strings this might hold."
        },
        "datacenterDescription": {
          "description": "The descriptive name of the vCenter's datacenter this VM is contained in.",
          "type": "string"
        },
        "memoryMb": {
          "format": "int32",
          "description": "The size of the memory of the VM in MB.",
          "type": "integer"
        },
        "vmId": {
          "description": "The VM's id in the source (note that this is not the MigratingVm's id). This is the moref id of the VM.",
          "type": "string"
        },
        "diskCount": {
          "description": "The number of disks the VM has.",
          "format": "int32",
          "type": "integer"
        },
        "datacenterId": {
          "description": "The id of the vCenter's datacenter this VM is contained in.",
          "type": "string"
        },
        "powerState": {
          "enum": [
            "POWER_STATE_UNSPECIFIED",
            "ON",
            "OFF",
            "SUSPENDED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Power state is not specified.",
            "The VM is turned ON.",
            "The VM is turned OFF.",
            "The VM is suspended. This is similar to hibernation or sleep mode."
          ],
          "description": "The power state of the VM at the moment list was taken."
        },
        "bootOption": {
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is EFI.",
            "The boot option is BIOS."
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. The VM Boot Option.",
          "enum": [
            "BOOT_OPTION_UNSPECIFIED",
            "EFI",
            "BIOS"
          ]
        },
        "committedStorageMb": {
          "format": "int64",
          "type": "string",
          "description": "The total size of the storage allocated to the VM in MB."
        },
        "cpuCount": {
          "type": "integer",
          "description": "The number of cpus in the VM.",
          "format": "int32"
        },
        "uuid": {
          "description": "The unique identifier of the VM in vCenter.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "VmwareVmDetails"
    },
    "LocalizedMessage": {
      "id": "LocalizedMessage",
      "type": "object",
      "description": "Provides a localized error message that is safe to return to the user which can be attached to an RPC error.",
      "properties": {
        "message": {
          "type": "string",
          "description": "The localized error message in the above locale."
        },
        "locale": {
          "description": "The locale used following the specification defined at https://www.rfc-editor.org/rfc/bcp/bcp47.txt. Examples are: \"en-US\", \"fr-CH\", \"es-MX\"",
          "type": "string"
        }
      }
    },
    "ResumeMigrationRequest": {
      "properties": {},
      "id": "ResumeMigrationRequest",
      "type": "object",
      "description": "Request message for 'ResumeMigration' request."
    },
    "ListTargetProjectsResponse": {
      "id": "ListTargetProjectsResponse",
      "type": "object",
      "properties": {
        "targetProjects": {
          "readOnly": true,
          "items": {
            "$ref": "TargetProject"
          },
          "type": "array",
          "description": "Output only. The list of target response."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true,
          "type": "array"
        },
        "nextPageToken": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "description": "Response message for 'ListTargetProjects' call."
    },
    "ListLocationsResponse": {
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object"
    },
    "ReplicationCycle": {
      "properties": {
        "progressPercent": {
          "format": "int32",
          "description": "The current progress in percentage of this cycle.",
          "type": "integer"
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the replication cycle has started."
        }
      },
      "type": "object",
      "id": "ReplicationCycle",
      "description": "ReplicationCycle contains information about the current replication cycle status."
    },
    "ListUtilizationReportsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true
        },
        "utilizationReports": {
          "items": {
            "$ref": "UtilizationReport"
          },
          "description": "Output only. The list of reports.",
          "type": "array",
          "readOnly": true
        },
        "unreachable": {
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Response message for 'ListUtilizationReports' request.",
      "type": "object",
      "id": "ListUtilizationReportsResponse"
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "type": "object"
    },
    "CloneJob": {
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the clone."
        },
        "computeEngineTargetDetails": {
          "readOnly": true,
          "description": "Output only. Details of the target VM in Compute Engine.",
          "$ref": "ComputeEngineTargetDetails"
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the clone job was ended."
        },
        "stateTime": {
          "format": "google-datetime",
          "description": "Output only. The time the state was last updated.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The time the clone job was created (as an API call, not when it was actually created in the target).",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "ACTIVE",
            "FAILED",
            "SUCCEEDED",
            "CANCELLED",
            "CANCELLING",
            "ADAPTING_OS"
          ],
          "description": "Output only. State of the clone job.",
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The clone job has not yet started.",
            "The clone job is active and running.",
            "The clone job finished with errors.",
            "The clone job finished successfully.",
            "The clone job was cancelled.",
            "The clone job is being cancelled.",
            "OS adaptation is running as part of the clone job to generate license."
          ],
          "readOnly": true
        },
        "error": {
          "readOnly": true,
          "description": "Output only. Provides details for the errors that led to the Clone Job's state.",
          "$ref": "Status"
        }
      },
      "description": "CloneJob describes the process of creating a clone of a MigratingVM to the requested target based on the latest successful uploaded snapshots. While the migration cycles of a MigratingVm take place, it is possible to verify the uploaded VM can be started in the cloud, by creating a clone. The clone can be created without any downtime, and it is created using the latest snapshots which are already in the cloud. The cloneJob is only responsible for its work, not its products, which means once it is finished, it will never touch the instance it created. It will only delete it in case of the CloneJob being cancelled or upon failure to clone.",
      "id": "CloneJob",
      "type": "object"
    },
    "ListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "type": "object"
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string",
                  "location": "path"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "flatPath": "v1/projects/{projectsId}/locations",
              "id": "vmmigration.projects.locations.list",
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET"
            },
            "get": {
              "path": "v1/{+name}",
              "response": {
                "$ref": "Location"
              },
              "httpMethod": "GET",
              "id": "vmmigration.projects.locations.get",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "description": "Resource name for the location.",
                  "location": "path",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "description": "Gets information about a location."
            }
          },
          "resources": {
            "sources": {
              "methods": {
                "patch": {
                  "id": "vmmigration.projects.locations.sources.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Updates the parameters of a single Source.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Output only. The Source name.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "location": "path"
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Field mask is used to specify the fields to be overwritten in the Source resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "request": {
                    "$ref": "Source"
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH"
                },
                "get": {
                  "id": "vmmigration.projects.locations.sources.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The Source name.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$"
                    }
                  },
                  "description": "Gets details of a single Source.",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Source"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "path": "v1/{+parent}/sources",
                  "response": {
                    "$ref": "ListSourcesResponse"
                  },
                  "parameters": {
                    "filter": {
                      "description": "Optional. The filter request.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent, which owns this collection of sources.",
                      "location": "path"
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. the order by fields for the result."
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Optional. The maximum number of sources to return. The service may return fewer than this value. If unspecified, at most 500 sources will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Required. A page token, received from a previous `ListSources` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSources` must match the call that provided the page token.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources",
                  "id": "vmmigration.projects.locations.sources.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Sources in a given project and location."
                },
                "fetchInventory": {
                  "parameters": {
                    "forceRefresh": {
                      "type": "boolean",
                      "location": "query",
                      "description": "If this flag is set to true, the source will be queried instead of using cached results. Using this flag will make the call slower."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A page token, received from a previous `FetchInventory` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `FetchInventory` must match the call that provided the page token."
                    },
                    "source": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the Source.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "required": true
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of VMs to return. The service may return fewer than this value. For AWS source: If unspecified, at most 500 VMs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. For VMWare source: If unspecified, all VMs will be returned. There is no limit for maximum value.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}:fetchInventory",
                  "response": {
                    "$ref": "FetchInventoryResponse"
                  },
                  "id": "vmmigration.projects.locations.sources.fetchInventory",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List remote source's inventory of VMs. The remote source is the onprem vCenter (remote in the sense it's not in Compute Engine). The inventory describes the list of existing VMs in that source. Note that this operation lists the VMs on the remote source, as opposed to listing the MigratingVms resources in the vmmigration service.",
                  "parameterOrder": [
                    "source"
                  ],
                  "path": "v1/{+source}:fetchInventory"
                },
                "create": {
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources",
                  "path": "v1/{+parent}/sources",
                  "description": "Creates a new Source in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "vmmigration.projects.locations.sources.create",
                  "request": {
                    "$ref": "Source"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "sourceId": {
                      "type": "string",
                      "description": "Required. The source identifier.",
                      "location": "query"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The Source's parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Source.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "vmmigration.projects.locations.sources.delete",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "type": "string",
                      "description": "Required. The Source name."
                    }
                  }
                }
              },
              "resources": {
                "datacenterConnectors": {
                  "methods": {
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/datacenterConnectors",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.create",
                      "parameters": {
                        "datacenterConnectorId": {
                          "description": "Required. The datacenterConnector identifier.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "description": "Required. The DatacenterConnector's parent. Required. The Source in where the new DatacenterConnector will be created. For example: `projects/my-project/locations/us-central1/sources/my-source`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Creates a new DatacenterConnector in a given Source.",
                      "request": {
                        "$ref": "DatacenterConnector"
                      }
                    },
                    "delete": {
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. The DatacenterConnector name."
                        },
                        "requestId": {
                          "type": "string",
                          "location": "query",
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        }
                      },
                      "httpMethod": "DELETE",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}",
                      "description": "Deletes a single DatacenterConnector.",
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "description": "Lists DatacenterConnectors in a given Source.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.list",
                      "path": "v1/{+parent}/datacenterConnectors",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListDatacenterConnectorsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors",
                      "parameters": {
                        "pageToken": {
                          "description": "Required. A page token, received from a previous `ListDatacenterConnectors` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDatacenterConnectors` must match the call that provided the page token.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "type": "integer",
                          "description": "Optional. The maximum number of connectors to return. The service may return fewer than this value. If unspecified, at most 500 sources will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                        },
                        "orderBy": {
                          "description": "Optional. the order by fields for the result.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "description": "Required. The parent, which owns this collection of connectors.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "filter": {
                          "type": "string",
                          "description": "Optional. The filter request.",
                          "location": "query"
                        }
                      }
                    },
                    "upgradeAppliance": {
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.upgradeAppliance",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}:upgradeAppliance",
                      "parameterOrder": [
                        "datacenterConnector"
                      ],
                      "request": {
                        "$ref": "UpgradeApplianceRequest"
                      },
                      "parameters": {
                        "datacenterConnector": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$",
                          "description": "Required. The DatacenterConnector name.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "description": "Upgrades the appliance relate to this DatacenterConnector to the in-place updateable version.",
                      "path": "v1/{+datacenterConnector}:upgradeAppliance",
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST"
                    },
                    "get": {
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "DatacenterConnector"
                      },
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.get",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the DatacenterConnector."
                        }
                      },
                      "description": "Gets details of a single DatacenterConnector.",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}"
                    }
                  }
                },
                "utilizationReports": {
                  "methods": {
                    "get": {
                      "httpMethod": "GET",
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "UtilizationReport"
                      },
                      "id": "vmmigration.projects.locations.sources.utilizationReports.get",
                      "parameters": {
                        "view": {
                          "enum": [
                            "UTILIZATION_REPORT_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "type": "string",
                          "description": "Optional. The level of details of the report. Defaults to FULL",
                          "enumDescriptions": [
                            "The default / unset value. The API will default to FULL on single report request and BASIC for multiple reports request.",
                            "Get the report metadata, without the list of VMs and their utilization info.",
                            "Include everything."
                          ],
                          "location": "query"
                        },
                        "name": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The Utilization Report name.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/utilizationReports/[^/]+$"
                        }
                      },
                      "description": "Gets a single Utilization Report.",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports/{utilizationReportsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "response": {
                        "$ref": "ListUtilizationReportsResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports",
                      "httpMethod": "GET",
                      "description": "Lists Utilization Reports of the given Source.",
                      "path": "v1/{+parent}/utilizationReports",
                      "id": "vmmigration.projects.locations.sources.utilizationReports.list",
                      "parameters": {
                        "parent": {
                          "description": "Required. The Utilization Reports parent.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "location": "path"
                        },
                        "orderBy": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. the order by fields for the result."
                        },
                        "pageToken": {
                          "description": "Required. A page token, received from a previous `ListUtilizationReports` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListUtilizationReports` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "view": {
                          "enum": [
                            "UTILIZATION_REPORT_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "location": "query",
                          "type": "string",
                          "description": "Optional. The level of details of each report. Defaults to BASIC.",
                          "enumDescriptions": [
                            "The default / unset value. The API will default to FULL on single report request and BASIC for multiple reports request.",
                            "Get the report metadata, without the list of VMs and their utilization info.",
                            "Include everything."
                          ]
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. The filter request."
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "format": "int32",
                          "description": "Optional. The maximum number of reports to return. The service may return fewer than this value. If unspecified, at most 500 reports will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "delete": {
                      "description": "Deletes a single Utilization Report.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports/{utilizationReportsId}",
                      "id": "vmmigration.projects.locations.sources.utilizationReports.delete",
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        },
                        "name": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/utilizationReports/[^/]+$",
                          "description": "Required. The Utilization Report name.",
                          "type": "string"
                        }
                      }
                    },
                    "create": {
                      "path": "v1/{+parent}/utilizationReports",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports",
                      "description": "Creates a new UtilizationReport.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "vmmigration.projects.locations.sources.utilizationReports.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "requestId": {
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The Utilization Report's parent."
                        },
                        "utilizationReportId": {
                          "description": "Required. The ID to use for the report, which will become the final component of the reports's resource name. This value maximum length is 63 characters, and valid characters are /a-z-/. It must start with an english letter and must not end with a hyphen.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "request": {
                        "$ref": "UtilizationReport"
                      },
                      "httpMethod": "POST"
                    }
                  }
                },
                "migratingVms": {
                  "resources": {
                    "cutoverJobs": {
                      "methods": {
                        "list": {
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "ListCutoverJobsResponse"
                          },
                          "id": "vmmigration.projects.locations.sources.migratingVms.cutoverJobs.list",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+parent}/cutoverJobs",
                          "description": "Lists CutoverJobs of a given migrating VM.",
                          "parameters": {
                            "orderBy": {
                              "description": "Optional. the order by fields for the result.",
                              "type": "string",
                              "location": "query"
                            },
                            "parent": {
                              "type": "string",
                              "description": "Required. The parent, which owns this collection of migrating VMs.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                              "location": "path",
                              "required": true
                            },
                            "filter": {
                              "description": "Optional. The filter request.",
                              "type": "string",
                              "location": "query"
                            },
                            "pageSize": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Optional. The maximum number of cutover jobs to return. The service may return fewer than this value. If unspecified, at most 500 cutover jobs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "location": "query"
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "Required. A page token, received from a previous `ListCutoverJobs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListCutoverJobs` must match the call that provided the page token."
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs",
                          "parameterOrder": [
                            "parent"
                          ]
                        },
                        "get": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs/{cutoverJobsId}",
                          "id": "vmmigration.projects.locations.sources.migratingVms.cutoverJobs.get",
                          "description": "Gets details of a single CutoverJob.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "CutoverJob"
                          },
                          "parameters": {
                            "name": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cutoverJobs/[^/]+$",
                              "description": "Required. The name of the CutoverJob.",
                              "type": "string",
                              "location": "path"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "GET",
                          "path": "v1/{+name}"
                        },
                        "create": {
                          "request": {
                            "$ref": "CutoverJob"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs",
                          "description": "Initiates a Cutover of a specific migrating VM. The returned LRO is completed when the cutover job resource is created and the job is initiated.",
                          "httpMethod": "POST",
                          "path": "v1/{+parent}/cutoverJobs",
                          "parameters": {
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                              "required": true,
                              "description": "Required. The Cutover's parent.",
                              "location": "path",
                              "type": "string"
                            },
                            "requestId": {
                              "location": "query",
                              "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                              "type": "string"
                            },
                            "cutoverJobId": {
                              "description": "Required. The cutover job identifier.",
                              "type": "string",
                              "location": "query"
                            }
                          },
                          "response": {
                            "$ref": "Operation"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "vmmigration.projects.locations.sources.migratingVms.cutoverJobs.create"
                        },
                        "cancel": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "POST",
                          "request": {
                            "$ref": "CancelCutoverJobRequest"
                          },
                          "path": "v1/{+name}:cancel",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs/{cutoverJobsId}:cancel",
                          "parameters": {
                            "name": {
                              "type": "string",
                              "description": "Required. The cutover job id",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cutoverJobs/[^/]+$",
                              "location": "path"
                            }
                          },
                          "response": {
                            "$ref": "Operation"
                          },
                          "description": "Initiates the cancellation of a running cutover job.",
                          "id": "vmmigration.projects.locations.sources.migratingVms.cutoverJobs.cancel"
                        }
                      }
                    },
                    "cloneJobs": {
                      "methods": {
                        "cancel": {
                          "response": {
                            "$ref": "Operation"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "POST",
                          "request": {
                            "$ref": "CancelCloneJobRequest"
                          },
                          "description": "Initiates the cancellation of a running clone job.",
                          "path": "v1/{+name}:cancel",
                          "parameters": {
                            "name": {
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cloneJobs/[^/]+$",
                              "description": "Required. The clone job id",
                              "location": "path"
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs/{cloneJobsId}:cancel",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "vmmigration.projects.locations.sources.migratingVms.cloneJobs.cancel"
                        },
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "orderBy": {
                              "location": "query",
                              "description": "Optional. the order by fields for the result.",
                              "type": "string"
                            },
                            "pageSize": {
                              "format": "int32",
                              "location": "query",
                              "type": "integer",
                              "description": "Optional. The maximum number of clone jobs to return. The service may return fewer than this value. If unspecified, at most 500 clone jobs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                            },
                            "parent": {
                              "required": true,
                              "description": "Required. The parent, which owns this collection of source VMs.",
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$"
                            },
                            "filter": {
                              "location": "query",
                              "description": "Optional. The filter request.",
                              "type": "string"
                            },
                            "pageToken": {
                              "description": "Required. A page token, received from a previous `ListCloneJobs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListCloneJobs` must match the call that provided the page token.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs",
                          "httpMethod": "GET",
                          "path": "v1/{+parent}/cloneJobs",
                          "id": "vmmigration.projects.locations.sources.migratingVms.cloneJobs.list",
                          "response": {
                            "$ref": "ListCloneJobsResponse"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "Lists CloneJobs of a given migrating VM."
                        },
                        "create": {
                          "description": "Initiates a Clone of a specific migrating VM.",
                          "id": "vmmigration.projects.locations.sources.migratingVms.cloneJobs.create",
                          "request": {
                            "$ref": "CloneJob"
                          },
                          "httpMethod": "POST",
                          "path": "v1/{+parent}/cloneJobs",
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "Operation"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "parent": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                              "description": "Required. The Clone's parent.",
                              "required": true,
                              "location": "path"
                            },
                            "cloneJobId": {
                              "description": "Required. The clone job identifier.",
                              "type": "string",
                              "location": "query"
                            },
                            "requestId": {
                              "location": "query",
                              "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                              "type": "string"
                            }
                          }
                        },
                        "get": {
                          "path": "v1/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cloneJobs/[^/]+$",
                              "required": true,
                              "location": "path",
                              "description": "Required. The name of the CloneJob.",
                              "type": "string"
                            }
                          },
                          "response": {
                            "$ref": "CloneJob"
                          },
                          "description": "Gets details of a single CloneJob.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs/{cloneJobsId}",
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "vmmigration.projects.locations.sources.migratingVms.cloneJobs.get"
                        }
                      }
                    }
                  },
                  "methods": {
                    "pauseMigration": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:pauseMigration",
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Pauses a migration for a VM. If cycle tasks are running they will be cancelled, preserving source task data. Further replication cycles will not be triggered while the VM is paused.",
                      "request": {
                        "$ref": "PauseMigrationRequest"
                      },
                      "path": "v1/{+migratingVm}:pauseMigration",
                      "parameterOrder": [
                        "migratingVm"
                      ],
                      "parameters": {
                        "migratingVm": {
                          "description": "Required. The name of the MigratingVm.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "type": "string"
                        }
                      },
                      "id": "vmmigration.projects.locations.sources.migratingVms.pauseMigration"
                    },
                    "startMigration": {
                      "path": "v1/{+migratingVm}:startMigration",
                      "id": "vmmigration.projects.locations.sources.migratingVms.startMigration",
                      "request": {
                        "$ref": "StartMigrationRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Starts migration for a VM. Starts the process of uploading data and creating snapshots, in replication cycles scheduled by the policy.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:startMigration",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "migratingVm"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "migratingVm": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the MigratingVm.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$"
                        }
                      }
                    },
                    "delete": {
                      "id": "vmmigration.projects.locations.sources.migratingVms.delete",
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The name of the MigratingVm.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}",
                      "description": "Deletes a single MigratingVm.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "id": "vmmigration.projects.locations.sources.migratingVms.list",
                      "description": "Lists MigratingVms in a given Source.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "orderBy": {
                          "description": "Optional. the order by fields for the result.",
                          "location": "query",
                          "type": "string"
                        },
                        "view": {
                          "description": "Optional. The level of details of each migrating VM.",
                          "enumDescriptions": [
                            "View is unspecified. The API will fallback to the default value.",
                            "Get the migrating VM basic details. The basic details do not include the recent clone jobs and recent cutover jobs lists.",
                            "Include everything."
                          ],
                          "location": "query",
                          "enum": [
                            "MIGRATING_VM_VIEW_UNSPECIFIED",
                            "MIGRATING_VM_VIEW_BASIC",
                            "MIGRATING_VM_VIEW_FULL"
                          ],
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of migrating VMs to return. The service may return fewer than this value. If unspecified, at most 500 migrating VMs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        },
                        "parent": {
                          "description": "Required. The parent, which owns this collection of MigratingVms.",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$"
                        },
                        "pageToken": {
                          "description": "Required. A page token, received from a previous `ListMigratingVms` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListMigratingVms` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "type": "string",
                          "description": "Optional. The filter request.",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "ListMigratingVmsResponse"
                      },
                      "path": "v1/{+parent}/migratingVms"
                    },
                    "patch": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}",
                      "description": "Updates the parameters of a single MigratingVm.",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "updateMask": {
                          "format": "google-fieldmask",
                          "description": "Field mask is used to specify the fields to be overwritten in the MigratingVm resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                          "type": "string",
                          "location": "query"
                        },
                        "requestId": {
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string",
                          "location": "query"
                        },
                        "name": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Output only. The identifier of the MigratingVm.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$"
                        }
                      },
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1/{+name}",
                      "request": {
                        "$ref": "MigratingVm"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "vmmigration.projects.locations.sources.migratingVms.patch"
                    },
                    "create": {
                      "request": {
                        "$ref": "MigratingVm"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "vmmigration.projects.locations.sources.migratingVms.create",
                      "path": "v1/{+parent}/migratingVms",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms",
                      "httpMethod": "POST",
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "description": "Required. The MigratingVm's parent.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "location": "path",
                          "required": true
                        },
                        "migratingVmId": {
                          "description": "Required. The migratingVm identifier.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "description": "Creates a new MigratingVm in a given Source."
                    },
                    "resumeMigration": {
                      "parameters": {
                        "migratingVm": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the MigratingVm.",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+migratingVm}:resumeMigration",
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:resumeMigration",
                      "request": {
                        "$ref": "ResumeMigrationRequest"
                      },
                      "description": "Resumes a migration for a VM. When called on a paused migration, will start the process of uploading data and creating snapshots; when called on a completed cut-over migration, will update the migration to active state and start the process of uploading data and creating snapshots.",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "migratingVm"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "vmmigration.projects.locations.sources.migratingVms.resumeMigration"
                    },
                    "finalizeMigration": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "vmmigration.projects.locations.sources.migratingVms.finalizeMigration",
                      "description": "Marks a migration as completed, deleting migration resources that are no longer being used. Only applicable after cutover is done.",
                      "parameters": {
                        "migratingVm": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the MigratingVm.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "migratingVm"
                      ],
                      "request": {
                        "$ref": "FinalizeMigrationRequest"
                      },
                      "path": "v1/{+migratingVm}:finalizeMigration",
                      "httpMethod": "POST",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:finalizeMigration",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "response": {
                        "$ref": "MigratingVm"
                      },
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "description": "Required. The name of the MigratingVm."
                        },
                        "view": {
                          "location": "query",
                          "enum": [
                            "MIGRATING_VM_VIEW_UNSPECIFIED",
                            "MIGRATING_VM_VIEW_BASIC",
                            "MIGRATING_VM_VIEW_FULL"
                          ],
                          "description": "Optional. The level of details of the migrating VM.",
                          "type": "string",
                          "enumDescriptions": [
                            "View is unspecified. The API will fallback to the default value.",
                            "Get the migrating VM basic details. The basic details do not include the recent clone jobs and recent cutover jobs lists.",
                            "Include everything."
                          ]
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}",
                      "id": "vmmigration.projects.locations.sources.migratingVms.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "path": "v1/{+name}",
                      "description": "Gets details of a single MigratingVm.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              }
            },
            "targetProjects": {
              "methods": {
                "delete": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The TargetProject name.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "description": "Deletes a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "vmmigration.projects.locations.targetProjects.delete",
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targetProjects/{targetProjectsId}",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "get": {
                  "id": "vmmigration.projects.locations.targetProjects.get",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targetProjects/{targetProjectsId}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The TargetProject name.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "TargetProject"
                  },
                  "description": "Gets details of a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`."
                },
                "create": {
                  "id": "vmmigration.projects.locations.targetProjects.create",
                  "request": {
                    "$ref": "TargetProject"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targetProjects",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new TargetProject in a given project. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.",
                  "parameters": {
                    "requestId": {
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "targetProjectId": {
                      "description": "Required. The target_project identifier.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The TargetProject's parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v1/{+parent}/targetProjects",
                  "httpMethod": "POST"
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "TargetProject"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Output only. The name of the target project."
                    },
                    "updateMask": {
                      "description": "Field mask is used to specify the fields to be overwritten in the TargetProject resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targetProjects/{targetProjectsId}",
                  "id": "vmmigration.projects.locations.targetProjects.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the parameters of a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.",
                  "path": "v1/{+name}"
                },
                "list": {
                  "id": "vmmigration.projects.locations.targetProjects.list",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targetProjects",
                  "description": "Lists TargetProjects in a given project. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "orderBy": {
                      "location": "query",
                      "description": "Optional. the order by fields for the result.",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent, which owns this collection of targets.",
                      "location": "path",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. The filter request.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Optional. The maximum number of targets to return. The service may return fewer than this value. If unspecified, at most 500 targets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Required. A page token, received from a previous `ListTargets` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTargets` must match the call that provided the page token.",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/targetProjects",
                  "response": {
                    "$ref": "ListTargetProjectsResponse"
                  }
                }
              }
            },
            "groups": {
              "methods": {
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "vmmigration.projects.locations.groups.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a single Group.",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "description": "Required. The Group name."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "removeGroupMigration": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "group": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the Group.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "group"
                  ],
                  "request": {
                    "$ref": "RemoveGroupMigrationRequest"
                  },
                  "id": "vmmigration.projects.locations.groups.removeGroupMigration",
                  "httpMethod": "POST",
                  "description": "Removes a MigratingVm from a Group.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeGroupMigration",
                  "path": "v1/{+group}:removeGroupMigration"
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "groupId": {
                      "description": "Required. The group identifier.",
                      "type": "string",
                      "location": "query"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The Group's parent.",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new Group in a given project and location.",
                  "path": "v1/{+parent}/groups",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups",
                  "request": {
                    "$ref": "Group"
                  },
                  "id": "vmmigration.projects.locations.groups.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "id": "vmmigration.projects.locations.groups.list",
                  "response": {
                    "$ref": "ListGroupsResponse"
                  },
                  "path": "v1/{+parent}/groups",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "orderBy": {
                      "description": "Optional. the order by fields for the result.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of groups to return. The service may return fewer than this value. If unspecified, at most 500 groups will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Required. A page token, received from a previous `ListGroups` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListGroups` must match the call that provided the page token.",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The filter request."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent, which owns this collection of groups."
                    }
                  },
                  "description": "Lists Groups in a given project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "description": "Required. The group name.",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Gets details of a single Group.",
                  "id": "vmmigration.projects.locations.groups.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Group"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}"
                },
                "patch": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "Group"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Output only. The Group name.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Field mask is used to specify the fields to be overwritten in the Group resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten."
                    }
                  },
                  "id": "vmmigration.projects.locations.groups.patch",
                  "description": "Updates the parameters of a single Group.",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "addGroupMigration": {
                  "id": "vmmigration.projects.locations.groups.addGroupMigration",
                  "description": "Adds a MigratingVm to a Group.",
                  "request": {
                    "$ref": "AddGroupMigrationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "group"
                  ],
                  "path": "v1/{+group}:addGroupMigration",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addGroupMigration",
                  "parameters": {
                    "group": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "description": "Required. The full path name of the Group to add to."
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "id": "vmmigration.projects.locations.operations.cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "path": "v1/{+name}:cancel",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The standard list page size.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    }
                  },
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "id": "vmmigration.projects.locations.operations.list"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation resource."
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "vmmigration.projects.locations.operations.get",
                  "path": "v1/{+name}",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "vmmigration.projects.locations.operations.delete",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}

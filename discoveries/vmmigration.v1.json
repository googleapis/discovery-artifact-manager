{
  "version_module": true,
  "baseUrl": "https://vmmigration.googleapis.com/",
  "parameters": {
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query",
      "type": "boolean"
    },
    "alt": {
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    }
  },
  "name": "vmmigration",
  "id": "vmmigration:v1",
  "discoveryVersion": "v1",
  "mtlsRootUrl": "https://vmmigration.mtls.googleapis.com/",
  "servicePath": "",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "id": "vmmigration.projects.locations.get",
              "response": {
                "$ref": "Location"
              },
              "description": "Gets information about a location.",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              }
            },
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}/locations",
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations",
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "format": "int32"
                },
                "filter": {
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable."
                }
              },
              "id": "vmmigration.projects.locations.list",
              "parameterOrder": [
                "name"
              ]
            }
          },
          "resources": {
            "groups": {
              "methods": {
                "delete": {
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "description": "Required. The Group name."
                    }
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "vmmigration.projects.locations.groups.delete",
                  "description": "Deletes a single Group.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}"
                },
                "patch": {
                  "id": "vmmigration.projects.locations.groups.patch",
                  "description": "Updates the parameters of a single Group.",
                  "parameters": {
                    "name": {
                      "description": "Output only. The Group name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Field mask is used to specify the fields to be overwritten in the Group resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten."
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "request": {
                    "$ref": "Group"
                  },
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "vmmigration.projects.locations.groups.get",
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Group"
                  },
                  "description": "Gets details of a single Group.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The group name."
                    }
                  }
                },
                "addGroupMigration": {
                  "parameters": {
                    "group": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The full path name of the Group to add to.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$"
                    }
                  },
                  "description": "Adds a MigratingVm to a Group.",
                  "path": "v1/{+group}:addGroupMigration",
                  "parameterOrder": [
                    "group"
                  ],
                  "id": "vmmigration.projects.locations.groups.addGroupMigration",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addGroupMigration",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "AddGroupMigrationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                },
                "list": {
                  "parameters": {
                    "orderBy": {
                      "description": "Optional. the order by fields for the result.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent, which owns this collection of groups.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Required. A page token, received from a previous `ListGroups` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListGroups` must match the call that provided the page token.",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Optional. The filter request.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of groups to return. The service may return fewer than this value. If unspecified, at most 500 groups will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists Groups in a given project and location.",
                  "id": "vmmigration.projects.locations.groups.list",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListGroupsResponse"
                  },
                  "path": "v1/{+parent}/groups",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "removeGroupMigration": {
                  "parameterOrder": [
                    "group"
                  ],
                  "parameters": {
                    "group": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/groups/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the Group.",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+group}:removeGroupMigration",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "RemoveGroupMigrationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "vmmigration.projects.locations.groups.removeGroupMigration",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeGroupMigration",
                  "description": "Removes a MigratingVm from a Group."
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/groups",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/groups",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "groupId": {
                      "description": "Required. The group identifier.",
                      "type": "string",
                      "location": "query"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The Group's parent.",
                      "type": "string"
                    }
                  },
                  "id": "vmmigration.projects.locations.groups.create",
                  "description": "Creates a new Group in a given project and location.",
                  "request": {
                    "$ref": "Group"
                  }
                }
              }
            },
            "sources": {
              "methods": {
                "list": {
                  "path": "v1/{+parent}/sources",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists Sources in a given project and location.",
                  "id": "vmmigration.projects.locations.sources.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "orderBy": {
                      "location": "query",
                      "description": "Optional. the order by fields for the result.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Required. A page token, received from a previous `ListSources` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSources` must match the call that provided the page token.",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Optional. The maximum number of sources to return. The service may return fewer than this value. If unspecified, at most 500 sources will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The filter request."
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent, which owns this collection of sources."
                    }
                  },
                  "response": {
                    "$ref": "ListSourcesResponse"
                  }
                },
                "fetchInventory": {
                  "path": "v1/{+source}:fetchInventory",
                  "parameterOrder": [
                    "source"
                  ],
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of VMs to return. The service may return fewer than this value. For AWS source: If unspecified, at most 500 VMs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000. For VMWare source: If unspecified, all VMs will be returned. There is no limit for maximum value.",
                      "location": "query",
                      "type": "integer"
                    },
                    "forceRefresh": {
                      "description": "If this flag is set to true, the source will be queried instead of using cached results. Using this flag will make the call slower.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "source": {
                      "type": "string",
                      "description": "Required. The name of the Source.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$"
                    },
                    "pageToken": {
                      "description": "A page token, received from a previous `FetchInventory` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `FetchInventory` must match the call that provided the page token.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}:fetchInventory",
                  "response": {
                    "$ref": "FetchInventoryResponse"
                  },
                  "id": "vmmigration.projects.locations.sources.fetchInventory",
                  "description": "List remote source's inventory of VMs. The remote source is the onprem vCenter (remote in the sense it's not in Compute Engine). The inventory describes the list of existing VMs in that source. Note that this operation lists the VMs on the remote source, as opposed to listing the MigratingVms resources in the vmmigration service."
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "id": "vmmigration.projects.locations.sources.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the parameters of a single Source.",
                  "path": "v1/{+name}",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Field mask is used to specify the fields to be overwritten in the Source resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "description": "Output only. The Source name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "request": {
                    "$ref": "Source"
                  },
                  "httpMethod": "PATCH"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. The Source name.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "description": "Deletes a single Source.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "id": "vmmigration.projects.locations.sources.delete",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single Source.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}",
                  "response": {
                    "$ref": "Source"
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The Source name.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$"
                    }
                  },
                  "id": "vmmigration.projects.locations.sources.get"
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new Source in a given project and location.",
                  "request": {
                    "$ref": "Source"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources",
                  "parameters": {
                    "sourceId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The source identifier."
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The Source's parent."
                    },
                    "requestId": {
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/sources",
                  "id": "vmmigration.projects.locations.sources.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              },
              "resources": {
                "datacenterConnectors": {
                  "methods": {
                    "create": {
                      "path": "v1/{+parent}/datacenterConnectors",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "location": "path",
                          "description": "Required. The DatacenterConnector's parent. Required. The Source in where the new DatacenterConnector will be created. For example: `projects/my-project/locations/us-central1/sources/my-source`"
                        },
                        "datacenterConnectorId": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. The datacenterConnector identifier."
                        },
                        "requestId": {
                          "type": "string",
                          "location": "query",
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        }
                      },
                      "description": "Creates a new DatacenterConnector in a given Source.",
                      "request": {
                        "$ref": "DatacenterConnector"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors",
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.create"
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a single DatacenterConnector.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}",
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$",
                          "description": "Required. The DatacenterConnector name.",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.delete",
                      "httpMethod": "DELETE"
                    },
                    "upgradeAppliance": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "UpgradeApplianceRequest"
                      },
                      "httpMethod": "POST",
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.upgradeAppliance",
                      "description": "Upgrades the appliance relate to this DatacenterConnector to the in-place updateable version.",
                      "parameters": {
                        "datacenterConnector": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The DatacenterConnector name."
                        }
                      },
                      "path": "v1/{+datacenterConnector}:upgradeAppliance",
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}:upgradeAppliance",
                      "parameterOrder": [
                        "datacenterConnector"
                      ]
                    },
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "description": "Optional. The maximum number of connectors to return. The service may return fewer than this value. If unspecified, at most 500 sources will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Required. A page token, received from a previous `ListDatacenterConnectors` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDatacenterConnectors` must match the call that provided the page token.",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The parent, which owns this collection of connectors.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$"
                        },
                        "filter": {
                          "type": "string",
                          "description": "Optional. The filter request.",
                          "location": "query"
                        },
                        "orderBy": {
                          "type": "string",
                          "description": "Optional. the order by fields for the result.",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListDatacenterConnectorsResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors",
                      "httpMethod": "GET",
                      "description": "Lists DatacenterConnectors in a given Source.",
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/datacenterConnectors"
                    },
                    "get": {
                      "description": "Gets details of a single DatacenterConnector.",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/datacenterConnectors/[^/]+$",
                          "description": "Required. The name of the DatacenterConnector."
                        }
                      },
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "DatacenterConnector"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}",
                      "id": "vmmigration.projects.locations.sources.datacenterConnectors.get"
                    }
                  }
                },
                "utilizationReports": {
                  "methods": {
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "vmmigration.projects.locations.sources.utilizationReports.create",
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/utilizationReports",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports",
                      "description": "Creates a new UtilizationReport.",
                      "parameters": {
                        "parent": {
                          "description": "Required. The Utilization Report's parent.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        },
                        "requestId": {
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string",
                          "location": "query"
                        },
                        "utilizationReportId": {
                          "type": "string",
                          "description": "Required. The ID to use for the report, which will become the final component of the reports's resource name. This value maximum length is 63 characters, and valid characters are /a-z-/. It must start with an english letter and must not end with a hyphen.",
                          "location": "query"
                        }
                      },
                      "request": {
                        "$ref": "UtilizationReport"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/utilizationReports/[^/]+$",
                          "description": "Required. The Utilization Report name.",
                          "type": "string"
                        },
                        "requestId": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        }
                      },
                      "description": "Deletes a single Utilization Report.",
                      "id": "vmmigration.projects.locations.sources.utilizationReports.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports/{utilizationReportsId}",
                      "response": {
                        "$ref": "Operation"
                      }
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports/{utilizationReportsId}",
                      "description": "Gets a single Utilization Report.",
                      "parameters": {
                        "view": {
                          "type": "string",
                          "description": "Optional. The level of details of the report. Defaults to FULL",
                          "location": "query",
                          "enum": [
                            "UTILIZATION_REPORT_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "enumDescriptions": [
                            "The default / unset value. The API will default to FULL on single report request and BASIC for multiple reports request.",
                            "Get the report metadata, without the list of VMs and their utilization info.",
                            "Include everything."
                          ]
                        },
                        "name": {
                          "type": "string",
                          "description": "Required. The Utilization Report name.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/utilizationReports/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "UtilizationReport"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "vmmigration.projects.locations.sources.utilizationReports.get"
                    },
                    "list": {
                      "id": "vmmigration.projects.locations.sources.utilizationReports.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists Utilization Reports of the given Source.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListUtilizationReportsResponse"
                      },
                      "path": "v1/{+parent}/utilizationReports",
                      "httpMethod": "GET",
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "description": "Optional. The maximum number of reports to return. The service may return fewer than this value. If unspecified, at most 500 reports will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "format": "int32"
                        },
                        "orderBy": {
                          "description": "Optional. the order by fields for the result.",
                          "type": "string",
                          "location": "query"
                        },
                        "view": {
                          "enum": [
                            "UTILIZATION_REPORT_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "location": "query",
                          "enumDescriptions": [
                            "The default / unset value. The API will default to FULL on single report request and BASIC for multiple reports request.",
                            "Get the report metadata, without the list of VMs and their utilization info.",
                            "Include everything."
                          ],
                          "description": "Optional. The level of details of each report. Defaults to BASIC.",
                          "type": "string"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "location": "path",
                          "description": "Required. The Utilization Reports parent.",
                          "required": true,
                          "type": "string"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Required. A page token, received from a previous `ListUtilizationReports` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListUtilizationReports` must match the call that provided the page token.",
                          "location": "query"
                        },
                        "filter": {
                          "description": "Optional. The filter request.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports"
                    }
                  }
                },
                "migratingVms": {
                  "resources": {
                    "replicationCycles": {
                      "methods": {
                        "list": {
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "orderBy": {
                              "description": "Optional. the order by fields for the result.",
                              "type": "string",
                              "location": "query"
                            },
                            "filter": {
                              "type": "string",
                              "location": "query",
                              "description": "Optional. The filter request."
                            },
                            "pageToken": {
                              "location": "query",
                              "description": "Required. A page token, received from a previous `ListReplicationCycles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListReplicationCycles` must match the call that provided the page token.",
                              "type": "string"
                            },
                            "pageSize": {
                              "location": "query",
                              "format": "int32",
                              "description": "Optional. The maximum number of replication cycles to return. The service may return fewer than this value. If unspecified, at most 100 migrating VMs will be returned. The maximum value is 100; values above 100 will be coerced to 100.",
                              "type": "integer"
                            },
                            "parent": {
                              "required": true,
                              "type": "string",
                              "description": "Required. The parent, which owns this collection of ReplicationCycles.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$"
                            }
                          },
                          "response": {
                            "$ref": "ListReplicationCyclesResponse"
                          },
                          "id": "vmmigration.projects.locations.sources.migratingVms.replicationCycles.list",
                          "description": "Lists ReplicationCycles in a given MigratingVM.",
                          "httpMethod": "GET",
                          "path": "v1/{+parent}/replicationCycles",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/replicationCycles"
                        },
                        "get": {
                          "description": "Gets details of a single ReplicationCycle.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "type": "string",
                              "description": "Required. The name of the ReplicationCycle.",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/replicationCycles/[^/]+$"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1/{+name}",
                          "id": "vmmigration.projects.locations.sources.migratingVms.replicationCycles.get",
                          "response": {
                            "$ref": "ReplicationCycle"
                          },
                          "httpMethod": "GET",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/replicationCycles/{replicationCyclesId}"
                        }
                      }
                    },
                    "cutoverJobs": {
                      "methods": {
                        "get": {
                          "description": "Gets details of a single CutoverJob.",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cutoverJobs/[^/]+$",
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "description": "Required. The name of the CutoverJob."
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs/{cutoverJobsId}",
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "vmmigration.projects.locations.sources.migratingVms.cutoverJobs.get",
                          "path": "v1/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "CutoverJob"
                          }
                        },
                        "list": {
                          "path": "v1/{+parent}/cutoverJobs",
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "vmmigration.projects.locations.sources.migratingVms.cutoverJobs.list",
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs",
                          "response": {
                            "$ref": "ListCutoverJobsResponse"
                          },
                          "parameters": {
                            "orderBy": {
                              "description": "Optional. the order by fields for the result.",
                              "type": "string",
                              "location": "query"
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "Required. A page token, received from a previous `ListCutoverJobs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListCutoverJobs` must match the call that provided the page token."
                            },
                            "filter": {
                              "type": "string",
                              "description": "Optional. The filter request.",
                              "location": "query"
                            },
                            "parent": {
                              "type": "string",
                              "description": "Required. The parent, which owns this collection of migrating VMs.",
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$"
                            },
                            "pageSize": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Optional. The maximum number of cutover jobs to return. The service may return fewer than this value. If unspecified, at most 500 cutover jobs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                              "location": "query"
                            }
                          },
                          "description": "Lists CutoverJobs of a given migrating VM."
                        },
                        "create": {
                          "description": "Initiates a Cutover of a specific migrating VM. The returned LRO is completed when the cutover job resource is created and the job is initiated.",
                          "request": {
                            "$ref": "CutoverJob"
                          },
                          "path": "v1/{+parent}/cutoverJobs",
                          "response": {
                            "$ref": "Operation"
                          },
                          "id": "vmmigration.projects.locations.sources.migratingVms.cutoverJobs.create",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "cutoverJobId": {
                              "type": "string",
                              "description": "Required. The cutover job identifier.",
                              "location": "query"
                            },
                            "requestId": {
                              "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                              "type": "string",
                              "location": "query"
                            },
                            "parent": {
                              "description": "Required. The Cutover's parent.",
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs",
                          "httpMethod": "POST"
                        },
                        "cancel": {
                          "path": "v1/{+name}:cancel",
                          "parameters": {
                            "name": {
                              "description": "Required. The cutover job id",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cutoverJobs/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "response": {
                            "$ref": "Operation"
                          },
                          "id": "vmmigration.projects.locations.sources.migratingVms.cutoverJobs.cancel",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs/{cutoverJobsId}:cancel",
                          "description": "Initiates the cancellation of a running cutover job.",
                          "httpMethod": "POST",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "request": {
                            "$ref": "CancelCutoverJobRequest"
                          },
                          "parameterOrder": [
                            "name"
                          ]
                        }
                      }
                    },
                    "cloneJobs": {
                      "methods": {
                        "cancel": {
                          "parameters": {
                            "name": {
                              "location": "path",
                              "description": "Required. The clone job id",
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cloneJobs/[^/]+$"
                            }
                          },
                          "description": "Initiates the cancellation of a running clone job.",
                          "id": "vmmigration.projects.locations.sources.migratingVms.cloneJobs.cancel",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "Operation"
                          },
                          "path": "v1/{+name}:cancel",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs/{cloneJobsId}:cancel",
                          "httpMethod": "POST",
                          "request": {
                            "$ref": "CancelCloneJobRequest"
                          },
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "list": {
                          "id": "vmmigration.projects.locations.sources.migratingVms.cloneJobs.list",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "path": "v1/{+parent}/cloneJobs",
                          "description": "Lists CloneJobs of a given migrating VM.",
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs",
                          "response": {
                            "$ref": "ListCloneJobsResponse"
                          },
                          "parameters": {
                            "parent": {
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "description": "Required. The parent, which owns this collection of source VMs.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$"
                            },
                            "filter": {
                              "location": "query",
                              "description": "Optional. The filter request.",
                              "type": "string"
                            },
                            "pageSize": {
                              "format": "int32",
                              "location": "query",
                              "type": "integer",
                              "description": "Optional. The maximum number of clone jobs to return. The service may return fewer than this value. If unspecified, at most 500 clone jobs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                            },
                            "pageToken": {
                              "location": "query",
                              "type": "string",
                              "description": "Required. A page token, received from a previous `ListCloneJobs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListCloneJobs` must match the call that provided the page token."
                            },
                            "orderBy": {
                              "location": "query",
                              "description": "Optional. the order by fields for the result.",
                              "type": "string"
                            }
                          }
                        },
                        "get": {
                          "parameters": {
                            "name": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+/cloneJobs/[^/]+$",
                              "type": "string",
                              "description": "Required. The name of the CloneJob.",
                              "location": "path"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "id": "vmmigration.projects.locations.sources.migratingVms.cloneJobs.get",
                          "response": {
                            "$ref": "CloneJob"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs/{cloneJobsId}",
                          "path": "v1/{+name}",
                          "description": "Gets details of a single CloneJob.",
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "create": {
                          "description": "Initiates a Clone of a specific migrating VM.",
                          "response": {
                            "$ref": "Operation"
                          },
                          "path": "v1/{+parent}/cloneJobs",
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "parent": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                              "type": "string",
                              "description": "Required. The Clone's parent.",
                              "location": "path"
                            },
                            "cloneJobId": {
                              "location": "query",
                              "description": "Required. The clone job identifier.",
                              "type": "string"
                            },
                            "requestId": {
                              "location": "query",
                              "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                              "type": "string"
                            }
                          },
                          "request": {
                            "$ref": "CloneJob"
                          },
                          "id": "vmmigration.projects.locations.sources.migratingVms.cloneJobs.create",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs"
                        }
                      }
                    }
                  },
                  "methods": {
                    "resumeMigration": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:resumeMigration",
                      "request": {
                        "$ref": "ResumeMigrationRequest"
                      },
                      "id": "vmmigration.projects.locations.sources.migratingVms.resumeMigration",
                      "httpMethod": "POST",
                      "parameters": {
                        "migratingVm": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the MigratingVm.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "migratingVm"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+migratingVm}:resumeMigration",
                      "description": "Resumes a migration for a VM. When called on a paused migration, will start the process of uploading data and creating snapshots; when called on a completed cut-over migration, will update the migration to active state and start the process of uploading data and creating snapshots.",
                      "response": {
                        "$ref": "Operation"
                      }
                    },
                    "startMigration": {
                      "id": "vmmigration.projects.locations.sources.migratingVms.startMigration",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Starts migration for a VM. Starts the process of uploading data and creating snapshots, in replication cycles scheduled by the policy.",
                      "request": {
                        "$ref": "StartMigrationRequest"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:startMigration",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "migratingVm"
                      ],
                      "parameters": {
                        "migratingVm": {
                          "description": "Required. The name of the MigratingVm.",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$"
                        }
                      },
                      "path": "v1/{+migratingVm}:startMigration"
                    },
                    "finalizeMigration": {
                      "path": "v1/{+migratingVm}:finalizeMigration",
                      "httpMethod": "POST",
                      "id": "vmmigration.projects.locations.sources.migratingVms.finalizeMigration",
                      "parameterOrder": [
                        "migratingVm"
                      ],
                      "request": {
                        "$ref": "FinalizeMigrationRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Marks a migration as completed, deleting migration resources that are no longer being used. Only applicable after cutover is done.",
                      "parameters": {
                        "migratingVm": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the MigratingVm.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:finalizeMigration"
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/migratingVms",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "type": "string",
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        },
                        "migratingVmId": {
                          "description": "Required. The migratingVm identifier.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "required": true,
                          "description": "Required. The MigratingVm's parent.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "MigratingVm"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new MigratingVm in a given Source.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms",
                      "id": "vmmigration.projects.locations.sources.migratingVms.create"
                    },
                    "list": {
                      "description": "Lists MigratingVms in a given Source.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "vmmigration.projects.locations.sources.migratingVms.list",
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. The filter request."
                        },
                        "view": {
                          "location": "query",
                          "enumDescriptions": [
                            "View is unspecified. The API will fallback to the default value.",
                            "Get the migrating VM basic details. The basic details do not include the recent clone jobs and recent cutover jobs lists.",
                            "Include everything."
                          ],
                          "description": "Optional. The level of details of each migrating VM.",
                          "type": "string",
                          "enum": [
                            "MIGRATING_VM_VIEW_UNSPECIFIED",
                            "MIGRATING_VM_VIEW_BASIC",
                            "MIGRATING_VM_VIEW_FULL"
                          ]
                        },
                        "orderBy": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. the order by fields for the result."
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of migrating VMs to return. The service may return fewer than this value. If unspecified, at most 500 migrating VMs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. The parent, which owns this collection of MigratingVms."
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. A page token, received from a previous `ListMigratingVms` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListMigratingVms` must match the call that provided the page token."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/migratingVms",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms",
                      "response": {
                        "$ref": "ListMigratingVmsResponse"
                      }
                    },
                    "patch": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "type": "string",
                          "description": "Output only. The identifier of the MigratingVm.",
                          "location": "path",
                          "required": true
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        },
                        "updateMask": {
                          "type": "string",
                          "format": "google-fieldmask",
                          "location": "query",
                          "description": "Field mask is used to specify the fields to be overwritten in the MigratingVm resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten."
                        }
                      },
                      "path": "v1/{+name}",
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "MigratingVm"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Updates the parameters of a single MigratingVm.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "vmmigration.projects.locations.sources.migratingVms.patch"
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Required. The name of the MigratingVm."
                        },
                        "view": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. The level of details of the migrating VM.",
                          "enumDescriptions": [
                            "View is unspecified. The API will fallback to the default value.",
                            "Get the migrating VM basic details. The basic details do not include the recent clone jobs and recent cutover jobs lists.",
                            "Include everything."
                          ],
                          "enum": [
                            "MIGRATING_VM_VIEW_UNSPECIFIED",
                            "MIGRATING_VM_VIEW_BASIC",
                            "MIGRATING_VM_VIEW_FULL"
                          ]
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}",
                      "httpMethod": "GET",
                      "description": "Gets details of a single MigratingVm.",
                      "id": "vmmigration.projects.locations.sources.migratingVms.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "MigratingVm"
                      }
                    },
                    "pauseMigration": {
                      "parameterOrder": [
                        "migratingVm"
                      ],
                      "id": "vmmigration.projects.locations.sources.migratingVms.pauseMigration",
                      "httpMethod": "POST",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:pauseMigration",
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "PauseMigrationRequest"
                      },
                      "description": "Pauses a migration for a VM. If cycle tasks are running they will be cancelled, preserving source task data. Further replication cycles will not be triggered while the VM is paused.",
                      "path": "v1/{+migratingVm}:pauseMigration",
                      "parameters": {
                        "migratingVm": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "description": "Required. The name of the MigratingVm.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      }
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "vmmigration.projects.locations.sources.migratingVms.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. The name of the MigratingVm.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/sources/[^/]+/migratingVms/[^/]+$",
                          "required": true
                        }
                      },
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}",
                      "description": "Deletes a single MigratingVm."
                    }
                  }
                }
              }
            },
            "targetProjects": {
              "methods": {
                "patch": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targetProjects/{targetProjectsId}",
                  "description": "Updates the parameters of a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.",
                  "request": {
                    "$ref": "TargetProject"
                  },
                  "id": "vmmigration.projects.locations.targetProjects.patch",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "requestId": {
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "description": "Output only. The name of the target project.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "Field mask is used to specify the fields to be overwritten in the TargetProject resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten."
                    }
                  }
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListTargetProjectsResponse"
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/targetProjects",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targetProjects",
                  "description": "Lists TargetProjects in a given project. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.",
                  "id": "vmmigration.projects.locations.targetProjects.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "description": "Optional. The maximum number of targets to return. The service may return fewer than this value. If unspecified, at most 500 targets will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "Required. A page token, received from a previous `ListTargets` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTargets` must match the call that provided the page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Optional. The filter request.",
                      "type": "string",
                      "location": "query"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Optional. the order by fields for the result.",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The parent, which owns this collection of targets.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "get": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The TargetProject name."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "vmmigration.projects.locations.targetProjects.get",
                  "description": "Gets details of a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.",
                  "response": {
                    "$ref": "TargetProject"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targetProjects/{targetProjectsId}",
                  "path": "v1/{+name}"
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targetProjects/{targetProjectsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "vmmigration.projects.locations.targetProjects.delete",
                  "description": "Deletes a single TargetProject. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The TargetProject name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targetProjects/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "vmmigration.projects.locations.targetProjects.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targetProjects",
                  "description": "Creates a new TargetProject in a given project. NOTE: TargetProject is a global resource; hence the only supported value for location is `global`.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/targetProjects",
                  "request": {
                    "$ref": "TargetProject"
                  },
                  "parameters": {
                    "requestId": {
                      "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The TargetProject's parent.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "targetProjectId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The target_project identifier."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "vmmigration.projects.locations.operations.delete",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "vmmigration.projects.locations.operations.get",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}"
                },
                "list": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list page token."
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The standard list page size.",
                      "type": "integer",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "id": "vmmigration.projects.locations.operations.list"
                },
                "cancel": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "path": "v1/{+name}:cancel",
                  "id": "vmmigration.projects.locations.operations.cancel"
                }
              }
            }
          }
        }
      }
    }
  },
  "version": "v1",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "description": "Use the Migrate to Virtual Machines API to programmatically migrate workloads. ",
  "ownerDomain": "google.com",
  "schemas": {
    "VmAttachmentDetails": {
      "description": "Details for attachment of the disk to a VM.",
      "type": "object",
      "properties": {
        "deviceName": {
          "type": "string",
          "description": "Optional. Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks."
        }
      },
      "id": "VmAttachmentDetails"
    },
    "ShuttingDownSourceVMStep": {
      "properties": {},
      "id": "ShuttingDownSourceVMStep",
      "type": "object",
      "description": "ShuttingDownSourceVMStep contains specific step details."
    },
    "ListGroupsResponse": {
      "id": "ListGroupsResponse",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Output only. Locations that could not be reached.",
          "type": "array",
          "readOnly": true
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string",
          "readOnly": true
        },
        "groups": {
          "items": {
            "$ref": "Group"
          },
          "type": "array",
          "description": "Output only. The list of groups response.",
          "readOnly": true
        }
      },
      "description": "Response message for 'ListGroups' request.",
      "type": "object"
    },
    "RemoveGroupMigrationRequest": {
      "properties": {
        "migratingVm": {
          "description": "The MigratingVm to remove.",
          "type": "string"
        }
      },
      "id": "RemoveGroupMigrationRequest",
      "description": "Request message for 'RemoveMigration' request.",
      "type": "object"
    },
    "ClientSecretCredentials": {
      "description": "Message describing Azure Credentials using tenant ID, client ID and secret.",
      "properties": {
        "clientSecret": {
          "type": "string",
          "description": "Input only. Azure client secret."
        },
        "clientId": {
          "description": "Azure client ID.",
          "type": "string"
        },
        "tenantId": {
          "description": "Azure tenant ID.",
          "type": "string"
        }
      },
      "id": "ClientSecretCredentials",
      "type": "object"
    },
    "ReplicatingStep": {
      "type": "object",
      "properties": {
        "lastThirtyMinutesAverageBytesPerSecond": {
          "description": "The source disks replication rate for the last 30 minutes in bytes per second.",
          "format": "int64",
          "type": "string"
        },
        "lastTwoMinutesAverageBytesPerSecond": {
          "format": "int64",
          "description": "The source disks replication rate for the last 2 minutes in bytes per second.",
          "type": "string"
        },
        "totalBytes": {
          "format": "int64",
          "type": "string",
          "description": "Total bytes to be handled in the step."
        },
        "replicatedBytes": {
          "description": "Replicated bytes in the step.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "ReplicatingStep contains specific step details.",
      "id": "ReplicatingStep"
    },
    "VmwareVmDetails": {
      "description": "VmwareVmDetails describes a VM in vCenter.",
      "properties": {
        "memoryMb": {
          "description": "The size of the memory of the VM in MB.",
          "format": "int32",
          "type": "integer"
        },
        "committedStorageMb": {
          "type": "string",
          "format": "int64",
          "description": "The total size of the storage allocated to the VM in MB."
        },
        "diskCount": {
          "format": "int32",
          "type": "integer",
          "description": "The number of disks the VM has."
        },
        "vmId": {
          "description": "The VM's id in the source (note that this is not the MigratingVm's id). This is the moref id of the VM.",
          "type": "string"
        },
        "uuid": {
          "type": "string",
          "description": "The unique identifier of the VM in vCenter."
        },
        "powerState": {
          "type": "string",
          "enum": [
            "POWER_STATE_UNSPECIFIED",
            "ON",
            "OFF",
            "SUSPENDED"
          ],
          "enumDescriptions": [
            "Power state is not specified.",
            "The VM is turned ON.",
            "The VM is turned OFF.",
            "The VM is suspended. This is similar to hibernation or sleep mode."
          ],
          "description": "The power state of the VM at the moment list was taken."
        },
        "bootOption": {
          "enum": [
            "BOOT_OPTION_UNSPECIFIED",
            "EFI",
            "BIOS"
          ],
          "description": "Output only. The VM Boot Option.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is EFI.",
            "The boot option is BIOS."
          ]
        },
        "guestDescription": {
          "type": "string",
          "description": "The VM's OS. See for example https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html for types of strings this might hold."
        },
        "datacenterId": {
          "description": "The id of the vCenter's datacenter this VM is contained in.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the VM. Note that this is not necessarily unique.",
          "type": "string"
        },
        "cpuCount": {
          "format": "int32",
          "description": "The number of cpus in the VM.",
          "type": "integer"
        },
        "datacenterDescription": {
          "type": "string",
          "description": "The descriptive name of the vCenter's datacenter this VM is contained in."
        }
      },
      "id": "VmwareVmDetails",
      "type": "object"
    },
    "AppliedLicense": {
      "id": "AppliedLicense",
      "type": "object",
      "description": "AppliedLicense holds the license data returned by adaptation module report.",
      "properties": {
        "osLicense": {
          "description": "The OS license returned from the adaptation module's report.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "Unspecified license for the OS.",
            "No license available for the OS.",
            "The license type is Pay As You Go license type.",
            "The license type is Bring Your Own License type."
          ],
          "type": "string",
          "description": "The license type that was used in OS adaptation.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "NONE",
            "PAYG",
            "BYOL"
          ]
        }
      }
    },
    "AddGroupMigrationRequest": {
      "properties": {
        "migratingVm": {
          "description": "The full path name of the MigratingVm to add.",
          "type": "string"
        }
      },
      "id": "AddGroupMigrationRequest",
      "type": "object",
      "description": "Request message for 'AddGroupMigration' request."
    },
    "DiskImageDefaults": {
      "properties": {
        "sourceImage": {
          "type": "string",
          "description": "Required. The Image resource used when creating the disk."
        }
      },
      "description": "Contains details about the image source used to create the disk.",
      "id": "DiskImageDefaults",
      "type": "object"
    },
    "AwsSourceVmDetails": {
      "id": "AwsSourceVmDetails",
      "properties": {
        "vmCapabilitiesInfo": {
          "$ref": "VmCapabilities",
          "description": "Output only. Information about VM capabilities needed for some Compute Engine features.",
          "readOnly": true
        },
        "firmware": {
          "enumDescriptions": [
            "The firmware is unknown.",
            "The firmware is EFI.",
            "The firmware is BIOS."
          ],
          "type": "string",
          "enum": [
            "FIRMWARE_UNSPECIFIED",
            "EFI",
            "BIOS"
          ],
          "description": "The firmware type of the source VM."
        },
        "committedStorageBytes": {
          "format": "int64",
          "description": "The total size of the disks being migrated in bytes.",
          "type": "string"
        },
        "disks": {
          "description": "The disks attached to the source VM.",
          "type": "array",
          "items": {
            "$ref": "AwsDiskDetails"
          }
        }
      },
      "description": "Represent the source AWS VM details.",
      "type": "object"
    },
    "DatacenterConnector": {
      "description": "DatacenterConnector message describes a connector between the Source and Google Cloud, which is installed on a vmware datacenter (an OVA vm installed by the user) to connect the Datacenter to Google Cloud and support vm migration data transfer.",
      "type": "object",
      "properties": {
        "registrationId": {
          "description": "Immutable. A unique key for this connector. This key is internal to the OVA connector and is supplied with its creation during the registration process and can not be modified.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The state was not sampled by the health checks yet.",
            "The source was sampled by health checks and is not available.",
            "The source is available but might not be usable yet due to unvalidated credentials or another reason. The credentials referred to are the ones to the Source. The error message will contain further details.",
            "The source exists and its credentials were verified."
          ],
          "type": "string",
          "description": "Output only. State of the DatacenterConnector, as determined by the health checks.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "OFFLINE",
            "FAILED",
            "ACTIVE"
          ]
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The last time the connector was updated with an API call.",
          "format": "google-datetime"
        },
        "serviceAccount": {
          "type": "string",
          "description": "The service account to use in the connector when communicating with the cloud."
        },
        "error": {
          "readOnly": true,
          "$ref": "Status",
          "description": "Output only. Provides details on the state of the Datacenter Connector in case of an error."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the connector was created (as an API call, not when it was actually installed).",
          "readOnly": true
        },
        "upgradeStatus": {
          "description": "Output only. The status of the current / last upgradeAppliance operation.",
          "readOnly": true,
          "$ref": "UpgradeStatus"
        },
        "applianceSoftwareVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Appliance last installed update bundle version. This is the version of the automatically updatable components on the appliance."
        },
        "availableVersions": {
          "$ref": "AvailableUpdates",
          "description": "Output only. The available versions for updating this appliance.",
          "readOnly": true
        },
        "stateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the state was last set."
        },
        "bucket": {
          "description": "Output only. The communication channel between the datacenter connector and Google Cloud.",
          "readOnly": true,
          "type": "string"
        },
        "applianceInfrastructureVersion": {
          "description": "Output only. Appliance OVA version. This is the OVA which is manually installed by the user and contains the infrastructure for the automatically updatable components on the appliance.",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "The version running in the DatacenterConnector. This is supplied by the OVA connector during the registration process and can not be modified.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The connector's name.",
          "readOnly": true
        }
      },
      "id": "DatacenterConnector"
    },
    "DisksMigrationVmTargetDefaults": {
      "type": "object",
      "description": "Details for creation of a VM that migrated data disks will be attached to.",
      "id": "DisksMigrationVmTargetDefaults",
      "properties": {
        "networkInterfaces": {
          "description": "Optional. NICs to attach to the VM.",
          "items": {
            "$ref": "NetworkInterface"
          },
          "type": "array"
        },
        "machineTypeSeries": {
          "description": "Optional. The machine type series to create the VM with. For presentation only.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. A map of labels to associate with the VM.",
          "type": "object"
        },
        "secureBoot": {
          "description": "Optional. Defines whether the instance has Secure Boot enabled. This can be set to true only if the VM boot option is EFI.",
          "type": "boolean"
        },
        "serviceAccount": {
          "type": "string",
          "description": "Optional. The service account to associate the VM with."
        },
        "computeScheduling": {
          "description": "Optional. Compute instance scheduling information (if empty default is used).",
          "$ref": "ComputeScheduling"
        },
        "networkTags": {
          "description": "Optional. A list of network tags to associate with the VM.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "additionalLicenses": {
          "items": {
            "type": "string"
          },
          "description": "Optional. Additional licenses to assign to the VM.",
          "type": "array"
        },
        "machineType": {
          "type": "string",
          "description": "Required. The machine type to create the VM with."
        },
        "hostname": {
          "type": "string",
          "description": "Optional. The hostname to assign to the VM."
        },
        "vmName": {
          "description": "Required. The name of the VM to create.",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The metadata key/value pairs to assign to the VM."
        },
        "bootDiskDefaults": {
          "description": "Optional. Details of the boot disk of the VM.",
          "$ref": "BootDiskDefaults"
        }
      }
    },
    "VmwareSourceDetails": {
      "type": "object",
      "description": "VmwareSourceDetails message describes a specific source details for the vmware source type.",
      "properties": {
        "vcenterIp": {
          "type": "string",
          "description": "The ip address of the vcenter this Source represents."
        },
        "username": {
          "type": "string",
          "description": "The credentials username."
        },
        "resolvedVcenterHost": {
          "description": "The hostname of the vcenter.",
          "type": "string"
        },
        "thumbprint": {
          "description": "The thumbprint representing the certificate for the vcenter.",
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "Input only. The credentials password. This is write only and can not be read in a GET operation."
        }
      },
      "id": "VmwareSourceDetails"
    },
    "BootDiskDefaults": {
      "description": "BootDiskDefaults hold information about the boot disk of a VM.",
      "properties": {
        "diskName": {
          "description": "Optional. The name of the disk.",
          "type": "string"
        },
        "diskType": {
          "enum": [
            "COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED",
            "COMPUTE_ENGINE_DISK_TYPE_STANDARD",
            "COMPUTE_ENGINE_DISK_TYPE_SSD",
            "COMPUTE_ENGINE_DISK_TYPE_BALANCED"
          ],
          "description": "Optional. The type of disk provisioning to use for the VM.",
          "type": "string",
          "enumDescriptions": [
            "An unspecified disk type. Will be used as STANDARD.",
            "A Standard disk type.",
            "SSD hard disk type.",
            "An alternative to SSD persistent disks that balance performance and cost."
          ]
        },
        "deviceName": {
          "type": "string",
          "description": "Optional. Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks."
        },
        "image": {
          "$ref": "DiskImageDefaults",
          "description": "The image to use when creating the disk."
        }
      },
      "type": "object",
      "id": "BootDiskDefaults"
    },
    "CloneJob": {
      "properties": {
        "stateTime": {
          "description": "Output only. The time the state was last updated.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "steps": {
          "items": {
            "$ref": "CloneStep"
          },
          "description": "Output only. The clone steps list representing its progress.",
          "type": "array",
          "readOnly": true
        },
        "state": {
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "ACTIVE",
            "FAILED",
            "SUCCEEDED",
            "CANCELLED",
            "CANCELLING",
            "ADAPTING_OS"
          ],
          "type": "string",
          "description": "Output only. State of the clone job.",
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The clone job has not yet started.",
            "The clone job is active and running.",
            "The clone job finished with errors.",
            "The clone job finished successfully.",
            "The clone job was cancelled.",
            "The clone job is being cancelled.",
            "OS adaptation is running as part of the clone job to generate license."
          ]
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the clone."
        },
        "computeEngineTargetDetails": {
          "$ref": "ComputeEngineTargetDetails",
          "readOnly": true,
          "description": "Output only. Details of the target VM in Compute Engine."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the clone job was ended."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the clone job was created (as an API call, not when it was actually created in the target)."
        },
        "error": {
          "description": "Output only. Provides details for the errors that led to the Clone Job's state.",
          "$ref": "Status",
          "readOnly": true
        },
        "computeEngineDisksTargetDetails": {
          "readOnly": true,
          "description": "Output only. Details of the target Persistent Disks in Compute Engine.",
          "$ref": "ComputeEngineDisksTargetDetails"
        }
      },
      "id": "CloneJob",
      "type": "object",
      "description": "CloneJob describes the process of creating a clone of a MigratingVM to the requested target based on the latest successful uploaded snapshots. While the migration cycles of a MigratingVm take place, it is possible to verify the uploaded VM can be started in the cloud, by creating a clone. The clone can be created without any downtime, and it is created using the latest snapshots which are already in the cloud. The cloneJob is only responsible for its work, not its products, which means once it is finished, it will never touch the instance it created. It will only delete it in case of the CloneJob being cancelled or upon failure to clone."
    },
    "FetchInventoryResponse": {
      "id": "FetchInventoryResponse",
      "type": "object",
      "description": "Response message for fetchInventory.",
      "properties": {
        "awsVms": {
          "$ref": "AwsVmsDetails",
          "description": "The description of the VMs in a Source of type AWS."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The timestamp when the source was last queried (if the result is from the cache).",
          "readOnly": true
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string",
          "readOnly": true
        },
        "vmwareVms": {
          "$ref": "VmwareVmsDetails",
          "description": "The description of the VMs in a Source of type Vmware."
        },
        "azureVms": {
          "description": "The description of the VMs in a Source of type Azure.",
          "$ref": "AzureVmsDetails"
        }
      }
    },
    "SchedulingNodeAffinity": {
      "type": "object",
      "description": "Node Affinity: the configuration of desired nodes onto which this Instance could be scheduled. Based on https://cloud.google.com/compute/docs/reference/rest/v1/instances/setScheduling",
      "properties": {
        "operator": {
          "enum": [
            "OPERATOR_UNSPECIFIED",
            "IN",
            "NOT_IN"
          ],
          "type": "string",
          "enumDescriptions": [
            "An unknown, unexpected behavior.",
            "The node resource group should be in these resources affinity.",
            "The node resource group should not be in these resources affinity."
          ],
          "description": "The operator to use for the node resources specified in the `values` parameter."
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Corresponds to the label values of Node resource."
        },
        "key": {
          "type": "string",
          "description": "The label key of Node resource to reference."
        }
      },
      "id": "SchedulingNodeAffinity"
    },
    "AwsSourceDetails": {
      "properties": {
        "error": {
          "readOnly": true,
          "$ref": "Status",
          "description": "Output only. Provides details on the state of the Source in case of an error."
        },
        "awsRegion": {
          "description": "Immutable. The AWS region that the source VMs will be migrated from.",
          "type": "string"
        },
        "inventorySecurityGroupNames": {
          "items": {
            "type": "string"
          },
          "description": "AWS security group names to limit the scope of the source inventory.",
          "type": "array"
        },
        "migrationResourcesUserTags": {
          "description": "User specified tags to add to every M2VM generated resource in AWS. These tags will be set in addition to the default tags that are set as part of the migration process. The tags must not begin with the reserved prefix `m2vm`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "inventoryTagList": {
          "type": "array",
          "description": "AWS resource tags to limit the scope of the source inventory.",
          "items": {
            "$ref": "Tag"
          }
        },
        "publicIp": {
          "description": "Output only. The source's public IP. All communication initiated by this source will originate from this IP.",
          "readOnly": true,
          "type": "string"
        },
        "accessKeyCreds": {
          "description": "AWS Credentials using access key id and secret.",
          "$ref": "AccessKeyCredentials"
        },
        "state": {
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The state was not sampled by the health checks yet.",
            "The source is available but might not be usable yet due to invalid credentials or another reason. The error message will contain further details.",
            "The source exists and its credentials were verified."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "FAILED",
            "ACTIVE"
          ],
          "description": "Output only. State of the source as determined by the health check.",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "AwsSourceDetails",
      "description": "AwsSourceDetails message describes a specific source details for the AWS source type."
    },
    "PersistentDiskDefaults": {
      "id": "PersistentDiskDefaults",
      "properties": {
        "sourceDiskNumber": {
          "type": "integer",
          "description": "Required. The ordinal number of the source VM disk.",
          "format": "int32"
        },
        "diskType": {
          "enum": [
            "COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED",
            "COMPUTE_ENGINE_DISK_TYPE_STANDARD",
            "COMPUTE_ENGINE_DISK_TYPE_SSD",
            "COMPUTE_ENGINE_DISK_TYPE_BALANCED"
          ],
          "enumDescriptions": [
            "An unspecified disk type. Will be used as STANDARD.",
            "A Standard disk type.",
            "SSD hard disk type.",
            "An alternative to SSD persistent disks that balance performance and cost."
          ],
          "type": "string",
          "description": "The disk type to use."
        },
        "diskName": {
          "type": "string",
          "description": "Optional. The name of the Persistent Disk to create."
        },
        "additionalLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map of labels to associate with the Persistent Disk.",
          "type": "object"
        },
        "vmAttachmentDetails": {
          "$ref": "VmAttachmentDetails",
          "description": "Optional. Details for attachment of the disk to a VM. Used when the disk is set to be attacked to a target VM."
        }
      },
      "type": "object",
      "description": "Details for creation of a Persistent Disk."
    },
    "Link": {
      "id": "Link",
      "description": "Describes a URL link.",
      "type": "object",
      "properties": {
        "url": {
          "description": "The URL of the link.",
          "type": "string"
        },
        "description": {
          "description": "Describes what the link offers.",
          "type": "string"
        }
      }
    },
    "ListUtilizationReportsResponse": {
      "id": "ListUtilizationReportsResponse",
      "description": "Response message for 'ListUtilizationReports' request.",
      "type": "object",
      "properties": {
        "unreachable": {
          "description": "Output only. Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true,
          "type": "string"
        },
        "utilizationReports": {
          "items": {
            "$ref": "UtilizationReport"
          },
          "description": "Output only. The list of reports.",
          "readOnly": true,
          "type": "array"
        }
      }
    },
    "CancelCloneJobRequest": {
      "properties": {},
      "type": "object",
      "description": "Request message for 'CancelCloneJob' request.",
      "id": "CancelCloneJobRequest"
    },
    "AzureDiskDetails": {
      "properties": {
        "sizeGb": {
          "type": "string",
          "format": "int64",
          "description": "Size in GB."
        },
        "diskId": {
          "description": "Azure disk ID.",
          "type": "string"
        },
        "diskNumber": {
          "format": "int32",
          "description": "The ordinal number of the disk.",
          "type": "integer"
        }
      },
      "id": "AzureDiskDetails",
      "description": "The details of an Azure VM disk.",
      "type": "object"
    },
    "TargetProject": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the target project.",
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The last time the target project resource was updated."
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time this target project resource was created (not related to when the Compute Engine project it points to was created).",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The target project's description."
        },
        "project": {
          "description": "The target project ID (number) or project name.",
          "type": "string"
        }
      },
      "id": "TargetProject",
      "description": "TargetProject message represents a target Compute Engine project for a migration or a clone."
    },
    "OSDescription": {
      "type": "object",
      "description": "A message describing the VM's OS. Including OS, Publisher, Offer and Plan if applicable.",
      "properties": {
        "offer": {
          "description": "OS offer.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "OS type."
        },
        "publisher": {
          "description": "OS publisher.",
          "type": "string"
        },
        "plan": {
          "description": "OS plan.",
          "type": "string"
        }
      },
      "id": "OSDescription"
    },
    "VmUtilizationMetrics": {
      "description": "Utilization metrics values for a single VM.",
      "properties": {
        "memoryAveragePercent": {
          "description": "Average memory usage, percent.",
          "type": "integer",
          "format": "int32"
        },
        "cpuMaxPercent": {
          "description": "Max CPU usage, percent.",
          "type": "integer",
          "format": "int32"
        },
        "networkThroughputMaxKbps": {
          "type": "string",
          "format": "int64",
          "description": "Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second."
        },
        "diskIoRateMaxKbps": {
          "description": "Max disk IO rate, in kilobytes per second.",
          "format": "int64",
          "type": "string"
        },
        "networkThroughputAverageKbps": {
          "type": "string",
          "format": "int64",
          "description": "Average network throughput (combined transmit-rates and receive-rates), in kilobytes per second."
        },
        "cpuAveragePercent": {
          "format": "int32",
          "type": "integer",
          "description": "Average CPU usage, percent."
        },
        "diskIoRateAverageKbps": {
          "type": "string",
          "description": "Average disk IO rate, in kilobytes per second.",
          "format": "int64"
        },
        "memoryMaxPercent": {
          "format": "int32",
          "description": "Max memory usage, percent.",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "VmUtilizationMetrics"
    },
    "InstantiatingMigratedVMStep": {
      "type": "object",
      "properties": {},
      "description": "InstantiatingMigratedVMStep contains specific step details.",
      "id": "InstantiatingMigratedVMStep"
    },
    "ReplicationSync": {
      "type": "object",
      "description": "ReplicationSync contain information about the last replica sync to the cloud.",
      "id": "ReplicationSync",
      "properties": {
        "lastSyncTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The most updated snapshot created time in the source that finished replication."
        }
      }
    },
    "ComputeEngineTargetDefaults": {
      "type": "object",
      "description": "ComputeEngineTargetDefaults is a collection of details for creating a VM in a target Compute Engine project.",
      "id": "ComputeEngineTargetDefaults",
      "properties": {
        "secureBoot": {
          "type": "boolean",
          "description": "Defines whether the instance has Secure Boot enabled. This can be set to true only if the VM boot option is EFI."
        },
        "licenseType": {
          "enum": [
            "COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT",
            "COMPUTE_ENGINE_LICENSE_TYPE_PAYG",
            "COMPUTE_ENGINE_LICENSE_TYPE_BYOL"
          ],
          "type": "string",
          "enumDescriptions": [
            "The license type is the default for the OS.",
            "The license type is Pay As You Go license type.",
            "The license type is Bring Your Own License type."
          ],
          "description": "The license type to use in OS adaptation."
        },
        "vmName": {
          "type": "string",
          "description": "The name of the VM to create."
        },
        "additionalLicenses": {
          "description": "Additional licenses to assign to the VM.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hostname": {
          "description": "The hostname to assign to the VM.",
          "type": "string"
        },
        "diskType": {
          "description": "The disk type to use in the VM.",
          "enumDescriptions": [
            "An unspecified disk type. Will be used as STANDARD.",
            "A Standard disk type.",
            "SSD hard disk type.",
            "An alternative to SSD persistent disks that balance performance and cost."
          ],
          "enum": [
            "COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED",
            "COMPUTE_ENGINE_DISK_TYPE_STANDARD",
            "COMPUTE_ENGINE_DISK_TYPE_SSD",
            "COMPUTE_ENGINE_DISK_TYPE_BALANCED"
          ],
          "type": "string"
        },
        "zone": {
          "type": "string",
          "description": "The zone in which to create the VM."
        },
        "machineTypeSeries": {
          "type": "string",
          "description": "The machine type series to create the VM with."
        },
        "networkInterfaces": {
          "type": "array",
          "items": {
            "$ref": "NetworkInterface"
          },
          "description": "List of NICs connected to this VM."
        },
        "appliedLicense": {
          "description": "Output only. The OS license returned from the adaptation module report.",
          "readOnly": true,
          "$ref": "AppliedLicense"
        },
        "serviceAccount": {
          "type": "string",
          "description": "The service account to associate the VM with."
        },
        "networkTags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of network tags to associate with the VM."
        },
        "bootOption": {
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is EFI.",
            "The boot option is BIOS."
          ],
          "description": "Output only. The VM Boot Option, as set in the source VM.",
          "type": "string",
          "enum": [
            "COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED",
            "COMPUTE_ENGINE_BOOT_OPTION_EFI",
            "COMPUTE_ENGINE_BOOT_OPTION_BIOS"
          ],
          "readOnly": true
        },
        "targetProject": {
          "description": "The full path of the resource of type TargetProject which represents the Compute Engine project in which to create this VM.",
          "type": "string"
        },
        "computeScheduling": {
          "$ref": "ComputeScheduling",
          "description": "Compute instance scheduling information (if empty default is used)."
        },
        "labels": {
          "description": "A map of labels to associate with the VM.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "machineType": {
          "description": "The machine type to create the VM with.",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The metadata key/value pairs to assign to the VM."
        }
      }
    },
    "AdaptingOSStep": {
      "id": "AdaptingOSStep",
      "type": "object",
      "description": "AdaptingOSStep contains specific step details.",
      "properties": {}
    },
    "VmwareDiskDetails": {
      "description": "The details of a Vmware VM disk.",
      "id": "VmwareDiskDetails",
      "type": "object",
      "properties": {
        "sizeGb": {
          "description": "Size in GB.",
          "format": "int64",
          "type": "string"
        },
        "diskNumber": {
          "description": "The ordinal number of the disk.",
          "format": "int32",
          "type": "integer"
        },
        "label": {
          "type": "string",
          "description": "The disk label."
        }
      }
    },
    "CutoverStep": {
      "type": "object",
      "description": "CutoverStep holds information about the cutover step progress.",
      "id": "CutoverStep",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the step has started."
        },
        "previousReplicationCycle": {
          "$ref": "ReplicationCycle",
          "description": "A replication cycle prior cutover step."
        },
        "instantiatingMigratedVm": {
          "description": "Instantiating migrated VM step.",
          "$ref": "InstantiatingMigratedVMStep"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the step has ended."
        },
        "shuttingDownSourceVm": {
          "$ref": "ShuttingDownSourceVMStep",
          "description": "Shutting down VM step."
        },
        "preparingVmDisks": {
          "description": "Preparing VM disks step.",
          "$ref": "PreparingVMDisksStep"
        },
        "finalSync": {
          "$ref": "ReplicationCycle",
          "description": "Final sync step."
        }
      }
    },
    "Status": {
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status"
    },
    "Disk": {
      "id": "Disk",
      "properties": {
        "name": {
          "description": "The disk name.",
          "type": "string"
        },
        "lun": {
          "description": "The disk's Logical Unit Number (LUN).",
          "type": "integer",
          "format": "int32"
        },
        "sizeGb": {
          "description": "The disk size in GB.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "A message describing a data disk.",
      "type": "object"
    },
    "AwsSecurityGroup": {
      "type": "object",
      "id": "AwsSecurityGroup",
      "description": "AwsSecurityGroup describes a security group of an AWS VM.",
      "properties": {
        "id": {
          "description": "The AWS security group id.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The AWS security group name."
        }
      }
    },
    "MigratingVm": {
      "id": "MigratingVm",
      "type": "object",
      "description": "MigratingVm describes the VM that will be migrated from a Source environment and its replication state.",
      "properties": {
        "lastSync": {
          "description": "Output only. The most updated snapshot created time in the source that finished replication.",
          "readOnly": true,
          "$ref": "ReplicationSync"
        },
        "vmwareSourceVmDetails": {
          "description": "Output only. Details of the VM from a Vmware source.",
          "readOnly": true,
          "$ref": "VmwareSourceVmDetails"
        },
        "displayName": {
          "type": "string",
          "description": "The display name attached to the MigratingVm by the user."
        },
        "cutoverForecast": {
          "$ref": "CutoverForecast",
          "readOnly": true,
          "description": "Output only. Provides details of future CutoverJobs of a MigratingVm. Set to empty when cutover forecast is unavailable."
        },
        "computeEngineDisksTargetDefaults": {
          "$ref": "ComputeEngineDisksTargetDefaults",
          "description": "Details of the target Persistent Disks in Compute Engine."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the migrating VM was created (this refers to this resource and not to the time it was installed in the source).",
          "type": "string"
        },
        "lastReplicationCycle": {
          "$ref": "ReplicationCycle",
          "description": "Output only. Details of the last replication cycle. This will be updated whenever a replication cycle is finished and is not to be confused with last_sync which is only updated on successful replication cycles.",
          "readOnly": true
        },
        "computeEngineTargetDefaults": {
          "description": "Details of the target VM in Compute Engine.",
          "$ref": "ComputeEngineTargetDefaults"
        },
        "labels": {
          "description": "The labels of the migrating VM.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sourceVmId": {
          "type": "string",
          "description": "The unique ID of the VM in the source. The VM's name in vSphere can be changed, so this is not the VM's name but rather its moRef id. This id is of the form vm-."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The identifier of the MigratingVm.",
          "type": "string"
        },
        "recentCutoverJobs": {
          "type": "array",
          "description": "Output only. The recent cutover jobs performed on the migrating VM. This field holds the vm's last completed cutover job and the vm's running cutover job, if one exists. Note: To have this field populated you need to explicitly request it via the \"view\" parameter of the Get/List request.",
          "readOnly": true,
          "items": {
            "$ref": "CutoverJob"
          }
        },
        "currentSyncInfo": {
          "description": "Output only. Details of the current running replication cycle.",
          "readOnly": true,
          "$ref": "ReplicationCycle"
        },
        "azureSourceVmDetails": {
          "readOnly": true,
          "description": "Output only. Details of the VM from an Azure source.",
          "$ref": "AzureSourceVmDetails"
        },
        "group": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The group this migrating vm is included in, if any. The group is represented by the full path of the appropriate Group resource."
        },
        "recentCloneJobs": {
          "description": "Output only. The recent clone jobs performed on the migrating VM. This field holds the vm's last completed clone job and the vm's running clone job, if one exists. Note: To have this field populated you need to explicitly request it via the \"view\" parameter of the Get/List request.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "CloneJob"
          }
        },
        "state": {
          "readOnly": true,
          "description": "Output only. State of the MigratingVm.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "READY",
            "FIRST_SYNC",
            "ACTIVE",
            "CUTTING_OVER",
            "CUTOVER",
            "FINAL_SYNC",
            "PAUSED",
            "FINALIZING",
            "FINALIZED",
            "ERROR"
          ],
          "enumDescriptions": [
            "The state was not sampled by the health checks yet.",
            "The VM in the source is being verified.",
            "The source VM was verified, and it's ready to start replication.",
            "Migration is going through the first sync cycle.",
            "The replication is active, and it's running or scheduled to run.",
            "The source VM is being turned off, and a final replication is currently running.",
            "The source VM was stopped and replicated. The replication is currently paused.",
            "A cutover job is active and replication cycle is running the final sync.",
            "The replication was paused by the user and no cycles are scheduled to run.",
            "The migrating VM is being finalized and migration resources are being removed.",
            "The replication process is done. The migrating VM is finalized and no longer consumes billable resources.",
            "The replication process encountered an unrecoverable error and was aborted."
          ],
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The description attached to the migrating VM by the user."
        },
        "policy": {
          "description": "The replication schedule policy.",
          "$ref": "SchedulePolicy"
        },
        "stateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The last time the migrating VM state was updated.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The last time the migrating VM resource was updated."
        },
        "awsSourceVmDetails": {
          "description": "Output only. Details of the VM from an AWS source.",
          "$ref": "AwsSourceVmDetails",
          "readOnly": true
        },
        "error": {
          "description": "Output only. Provides details on the state of the Migrating VM in case of an error in replication.",
          "$ref": "Status",
          "readOnly": true
        }
      }
    },
    "PreparingVMDisksStep": {
      "type": "object",
      "description": "PreparingVMDisksStep contains specific step details.",
      "id": "PreparingVMDisksStep",
      "properties": {}
    },
    "Source": {
      "type": "object",
      "id": "Source",
      "description": "Source message describes a specific vm migration Source resource. It contains the source environment information.",
      "properties": {
        "labels": {
          "description": "The labels of the source.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The update time timestamp.",
          "format": "google-datetime",
          "readOnly": true
        },
        "azure": {
          "$ref": "AzureSourceDetails",
          "description": "Azure type source details."
        },
        "vmware": {
          "description": "Vmware type source details.",
          "$ref": "VmwareSourceDetails"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The Source name.",
          "type": "string"
        },
        "aws": {
          "$ref": "AwsSourceDetails",
          "description": "AWS type source details."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The create time timestamp."
        },
        "description": {
          "type": "string",
          "description": "User-provided description of the source."
        }
      }
    },
    "ListCloneJobsResponse": {
      "type": "object",
      "id": "ListCloneJobsResponse",
      "properties": {
        "unreachable": {
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cloneJobs": {
          "description": "Output only. The list of clone jobs response.",
          "readOnly": true,
          "items": {
            "$ref": "CloneJob"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Response message for 'ListCloneJobs' request."
    },
    "NetworkInterface": {
      "properties": {
        "network": {
          "description": "The network to connect the NIC to.",
          "type": "string"
        },
        "internalIp": {
          "description": "The internal IP to define in the NIC. The formats accepted are: `ephemeral` \\ ipv4 address \\ a named address resource full path.",
          "type": "string"
        },
        "externalIp": {
          "type": "string",
          "description": "The external IP to define in the NIC."
        },
        "subnetwork": {
          "type": "string",
          "description": "The subnetwork to connect the NIC to."
        }
      },
      "type": "object",
      "description": "NetworkInterface represents a NIC of a VM.",
      "id": "NetworkInterface"
    },
    "ListDatacenterConnectorsResponse": {
      "id": "ListDatacenterConnectorsResponse",
      "type": "object",
      "description": "Response message for 'ListDatacenterConnectors' request.",
      "properties": {
        "nextPageToken": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "datacenterConnectors": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "DatacenterConnector"
          },
          "description": "Output only. The list of sources response."
        },
        "unreachable": {
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListSourcesResponse": {
      "type": "object",
      "id": "ListSourcesResponse",
      "properties": {
        "sources": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. The list of sources response.",
          "items": {
            "$ref": "Source"
          }
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true
        },
        "nextPageToken": {
          "readOnly": true,
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "description": "Response message for 'ListSources' request."
    },
    "ComputeEngineDisksTargetDetails": {
      "id": "ComputeEngineDisksTargetDetails",
      "description": "ComputeEngineDisksTargetDetails is a collection of created Persistent Disks details.",
      "properties": {
        "vmTargetDetails": {
          "description": "Details for the VM the migrated data disks are attached to.",
          "$ref": "DisksMigrationVmTargetDetails"
        },
        "disks": {
          "items": {
            "$ref": "PersistentDisk"
          },
          "description": "The details of each created Persistent Disk.",
          "type": "array"
        },
        "disksTargetDetails": {
          "description": "Details of the disks-only migration target.",
          "$ref": "DisksMigrationDisksTargetDetails"
        }
      },
      "type": "object"
    },
    "CutoverJob": {
      "type": "object",
      "description": "CutoverJob message describes a cutover of a migrating VM. The CutoverJob is the operation of shutting down the VM, creating a snapshot and clonning the VM using the replicated snapshot.",
      "id": "CutoverJob",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the cutover job was created (as an API call, not when it was actually created in the target)."
        },
        "state": {
          "description": "Output only. State of the cutover job.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "FAILED",
            "SUCCEEDED",
            "CANCELLED",
            "CANCELLING",
            "ACTIVE",
            "ADAPTING_OS"
          ],
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The cutover job has not yet started.",
            "The cutover job finished with errors.",
            "The cutover job finished successfully.",
            "The cutover job was cancelled.",
            "The cutover job is being cancelled.",
            "The cutover job is active and running.",
            "OS adaptation is running as part of the cutover job to generate license."
          ]
        },
        "error": {
          "readOnly": true,
          "$ref": "Status",
          "description": "Output only. Provides details for the errors that led to the Cutover Job's state."
        },
        "computeEngineTargetDetails": {
          "$ref": "ComputeEngineTargetDetails",
          "readOnly": true,
          "description": "Output only. Details of the target VM in Compute Engine."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the cutover job.",
          "type": "string"
        },
        "stateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the state was last updated.",
          "format": "google-datetime"
        },
        "stateMessage": {
          "readOnly": true,
          "description": "Output only. A message providing possible extra details about the current state.",
          "type": "string"
        },
        "computeEngineDisksTargetDetails": {
          "$ref": "ComputeEngineDisksTargetDetails",
          "description": "Output only. Details of the target Persistent Disks in Compute Engine.",
          "readOnly": true
        },
        "endTime": {
          "description": "Output only. The time the cutover job had finished.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "progressPercent": {
          "readOnly": true,
          "description": "Output only. The current progress in percentage of the cutover job.",
          "format": "int32",
          "type": "integer"
        },
        "steps": {
          "items": {
            "$ref": "CutoverStep"
          },
          "description": "Output only. The cutover steps list representing its progress.",
          "type": "array",
          "readOnly": true
        }
      }
    },
    "CycleStep": {
      "properties": {
        "initializingReplication": {
          "description": "Initializing replication step.",
          "$ref": "InitializingReplicationStep"
        },
        "postProcessing": {
          "description": "Post processing step.",
          "$ref": "PostProcessingStep"
        },
        "startTime": {
          "description": "The time the cycle step has started.",
          "format": "google-datetime",
          "type": "string"
        },
        "replicating": {
          "$ref": "ReplicatingStep",
          "description": "Replicating step."
        },
        "endTime": {
          "type": "string",
          "description": "The time the cycle step has ended.",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "CycleStep",
      "description": "CycleStep holds information about a step progress."
    },
    "AwsDiskDetails": {
      "id": "AwsDiskDetails",
      "properties": {
        "sizeGb": {
          "description": "Size in GB.",
          "format": "int64",
          "type": "string"
        },
        "volumeId": {
          "description": "AWS volume ID.",
          "type": "string"
        },
        "diskNumber": {
          "type": "integer",
          "description": "The ordinal number of the disk.",
          "format": "int32"
        }
      },
      "description": "The details of an AWS instance disk.",
      "type": "object"
    },
    "UpgradeApplianceRequest": {
      "properties": {
        "requestId": {
          "type": "string",
          "description": "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      },
      "type": "object",
      "description": "Request message for 'UpgradeAppliance' request.",
      "id": "UpgradeApplianceRequest"
    },
    "CutoverForecast": {
      "properties": {
        "estimatedCutoverJobDuration": {
          "readOnly": true,
          "format": "google-duration",
          "description": "Output only. Estimation of the CutoverJob duration.",
          "type": "string"
        }
      },
      "description": "CutoverForecast holds information about future CutoverJobs of a MigratingVm.",
      "id": "CutoverForecast",
      "type": "object"
    },
    "ListTargetProjectsResponse": {
      "properties": {
        "targetProjects": {
          "items": {
            "$ref": "TargetProject"
          },
          "description": "Output only. The list of target response.",
          "type": "array",
          "readOnly": true
        },
        "unreachable": {
          "description": "Output only. Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "readOnly": true
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "ListTargetProjectsResponse",
      "type": "object",
      "description": "Response message for 'ListTargetProjects' call."
    },
    "Empty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "id": "Empty"
    },
    "VmwareSourceVmDetails": {
      "description": "Represent the source Vmware VM details.",
      "properties": {
        "firmware": {
          "type": "string",
          "description": "The firmware type of the source VM.",
          "enum": [
            "FIRMWARE_UNSPECIFIED",
            "EFI",
            "BIOS"
          ],
          "enumDescriptions": [
            "The firmware is unknown.",
            "The firmware is EFI.",
            "The firmware is BIOS."
          ]
        },
        "committedStorageBytes": {
          "format": "int64",
          "type": "string",
          "description": "The total size of the disks being migrated in bytes."
        },
        "vmCapabilitiesInfo": {
          "description": "Output only. Information about VM capabilities needed for some Compute Engine features.",
          "readOnly": true,
          "$ref": "VmCapabilities"
        },
        "disks": {
          "items": {
            "$ref": "VmwareDiskDetails"
          },
          "type": "array",
          "description": "The disks attached to the source VM."
        }
      },
      "type": "object",
      "id": "VmwareSourceVmDetails"
    },
    "VmCapabilities": {
      "id": "VmCapabilities",
      "properties": {
        "osCapabilities": {
          "description": "Output only. Unordered list. List of certain VM OS capabilities needed for some Compute Engine features.",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "This is for API compatibility only and is not in use.",
              "NVMe driver installed and the VM can use NVMe PD or local SSD.",
              "gVNIC virtual NIC driver supported."
            ],
            "enum": [
              "OS_CAPABILITY_UNSPECIFIED",
              "OS_CAPABILITY_NVME_STORAGE_ACCESS",
              "OS_CAPABILITY_GVNIC_NETWORK_INTERFACE"
            ]
          },
          "type": "array",
          "readOnly": true
        },
        "lastOsCapabilitiesUpdateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The last time OS capabilities list was updated."
        }
      },
      "description": "Migrating VM source information about the VM capabilities needed for some Compute Engine features.",
      "type": "object"
    },
    "CancelCutoverJobRequest": {
      "description": "Request message for 'CancelCutoverJob' request.",
      "type": "object",
      "id": "CancelCutoverJobRequest",
      "properties": {}
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "type": "object"
    },
    "MigrationError": {
      "description": "Represents migration resource error information that can be used with google.rpc.Status message. MigrationError is used to present the user with error information in migration operations.",
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "ERROR_CODE_UNSPECIFIED",
            "UNKNOWN_ERROR",
            "SOURCE_VALIDATION_ERROR",
            "SOURCE_REPLICATION_ERROR",
            "TARGET_REPLICATION_ERROR",
            "OS_ADAPTATION_ERROR",
            "CLONE_ERROR",
            "CUTOVER_ERROR",
            "UTILIZATION_REPORT_ERROR",
            "APPLIANCE_UPGRADE_ERROR"
          ],
          "enumDescriptions": [
            "Default value. This value is not used.",
            "Migrate for Compute encountered an unknown error.",
            "Migrate for Compute encountered an error while validating replication source health.",
            "Migrate for Compute encountered an error during source data operation.",
            "Migrate for Compute encountered an error during target data operation.",
            "Migrate for Compute encountered an error during OS adaptation.",
            "Migrate for Compute encountered an error in clone operation.",
            "Migrate for Compute encountered an error in cutover operation.",
            "Migrate for Compute encountered an error during utilization report creation.",
            "Migrate for Compute encountered an error during appliance upgrade."
          ],
          "description": "Output only. The error code."
        },
        "errorTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the error occurred."
        },
        "helpLinks": {
          "items": {
            "$ref": "Link"
          },
          "description": "Output only. URL(s) pointing to additional information on handling the current error.",
          "type": "array",
          "readOnly": true
        },
        "actionItem": {
          "readOnly": true,
          "$ref": "LocalizedMessage",
          "description": "Output only. Suggested action for solving the error."
        },
        "errorMessage": {
          "$ref": "LocalizedMessage",
          "description": "Output only. The localized error message.",
          "readOnly": true
        }
      },
      "id": "MigrationError",
      "type": "object"
    },
    "DisksMigrationDisksTargetDetails": {
      "type": "object",
      "description": "Details for a disks-only migration.",
      "properties": {},
      "id": "DisksMigrationDisksTargetDetails"
    },
    "ReplicationCycle": {
      "properties": {
        "error": {
          "description": "Provides details on the state of the cycle in case of an error.",
          "$ref": "Status"
        },
        "warnings": {
          "items": {
            "$ref": "MigrationWarning"
          },
          "readOnly": true,
          "description": "Output only. Warnings that occurred during the cycle.",
          "type": "array"
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the replication cycle has started."
        },
        "progressPercent": {
          "deprecated": true,
          "description": "The current progress in percentage of this cycle. Was replaced by 'steps' field, which breaks down the cycle progression more accurately.",
          "type": "integer",
          "format": "int32"
        },
        "steps": {
          "items": {
            "$ref": "CycleStep"
          },
          "description": "The cycle's steps list representing its progress.",
          "type": "array"
        },
        "state": {
          "type": "string",
          "description": "State of the ReplicationCycle.",
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "PAUSED",
            "FAILED",
            "SUCCEEDED"
          ],
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The replication cycle is running.",
            "The replication cycle is paused.",
            "The replication cycle finished with errors.",
            "The replication cycle finished successfully."
          ]
        },
        "cycleNumber": {
          "description": "The cycle's ordinal number.",
          "format": "int32",
          "type": "integer"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time the replication cycle has ended.",
          "type": "string"
        },
        "totalPauseDuration": {
          "format": "google-duration",
          "type": "string",
          "description": "The accumulated duration the replication cycle was paused."
        },
        "name": {
          "type": "string",
          "description": "The identifier of the ReplicationCycle."
        }
      },
      "id": "ReplicationCycle",
      "type": "object",
      "description": "ReplicationCycle contains information about the current replication cycle status."
    },
    "Tag": {
      "id": "Tag",
      "properties": {
        "value": {
          "description": "Value of tag.",
          "type": "string"
        },
        "key": {
          "type": "string",
          "description": "Key of tag."
        }
      },
      "description": "Tag is an AWS tag representation.",
      "type": "object"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        }
      },
      "type": "object"
    },
    "CloneStep": {
      "type": "object",
      "description": "CloneStep holds information about the clone step progress.",
      "properties": {
        "adaptingOs": {
          "description": "Adapting OS step.",
          "$ref": "AdaptingOSStep"
        },
        "startTime": {
          "description": "The time the step has started.",
          "format": "google-datetime",
          "type": "string"
        },
        "preparingVmDisks": {
          "$ref": "PreparingVMDisksStep",
          "description": "Preparing VM disks step."
        },
        "instantiatingMigratedVm": {
          "description": "Instantiating migrated VM step.",
          "$ref": "InstantiatingMigratedVMStep"
        },
        "endTime": {
          "type": "string",
          "description": "The time the step has ended.",
          "format": "google-datetime"
        }
      },
      "id": "CloneStep"
    },
    "FinalizeMigrationRequest": {
      "description": "Request message for 'FinalizeMigration' request.",
      "properties": {},
      "type": "object",
      "id": "FinalizeMigrationRequest"
    },
    "AvailableUpdates": {
      "id": "AvailableUpdates",
      "description": "Holds informatiom about the available versions for upgrade.",
      "type": "object",
      "properties": {
        "newDeployableAppliance": {
          "description": "The newest deployable version of the appliance. The current appliance can't be updated into this version, and the owner must manually deploy this OVA to a new appliance.",
          "$ref": "ApplianceVersion"
        },
        "inPlaceUpdate": {
          "$ref": "ApplianceVersion",
          "description": "The latest version for in place update. The current appliance can be updated to this version using the API or m4c CLI."
        }
      }
    },
    "PersistentDisk": {
      "id": "PersistentDisk",
      "properties": {
        "diskUri": {
          "description": "The URI of the Persistent Disk.",
          "type": "string"
        },
        "sourceDiskNumber": {
          "type": "integer",
          "description": "The ordinal number of the source VM disk.",
          "format": "int32"
        }
      },
      "description": "Details of a created Persistent Disk.",
      "type": "object"
    },
    "ComputeEngineDisksTargetDefaults": {
      "type": "object",
      "properties": {
        "targetProject": {
          "description": "The full path of the resource of type TargetProject which represents the Compute Engine project in which to create the Persistent Disks.",
          "type": "string"
        },
        "vmTargetDefaults": {
          "description": "Details of the VM migration target.",
          "$ref": "DisksMigrationVmTargetDefaults"
        },
        "disks": {
          "items": {
            "$ref": "PersistentDiskDefaults"
          },
          "description": "The details of each Persistent Disk to create.",
          "type": "array"
        },
        "zone": {
          "description": "The zone in which to create the Persistent Disks.",
          "type": "string"
        },
        "disksTargetDefaults": {
          "description": "Details of the disk only migration target.",
          "$ref": "DisksMigrationDisksTargetDefaults"
        }
      },
      "description": "ComputeEngineDisksTargetDefaults is a collection of details for creating Persistent Disks in a target Compute Engine project.",
      "id": "ComputeEngineDisksTargetDefaults"
    },
    "AwsVmsDetails": {
      "id": "AwsVmsDetails",
      "description": "AWSVmsDetails describes VMs in AWS.",
      "type": "object",
      "properties": {
        "details": {
          "items": {
            "$ref": "AwsVmDetails"
          },
          "description": "The details of the AWS VMs.",
          "type": "array"
        }
      }
    },
    "SchedulePolicy": {
      "properties": {
        "skipOsAdaptation": {
          "description": "A flag to indicate whether to skip OS adaptation during the replication sync. OS adaptation is a process where the VM's operating system undergoes changes and adaptations to fully function on Compute Engine.",
          "type": "boolean"
        },
        "idleDuration": {
          "description": "The idle duration between replication stages.",
          "type": "string",
          "format": "google-duration"
        }
      },
      "id": "SchedulePolicy",
      "description": "A policy for scheduling replications.",
      "type": "object"
    },
    "OSDisk": {
      "id": "OSDisk",
      "type": "object",
      "properties": {
        "type": {
          "description": "The disk's type.",
          "type": "string"
        },
        "sizeGb": {
          "format": "int32",
          "type": "integer",
          "description": "The disk's size in GB."
        },
        "name": {
          "description": "The disk's full name.",
          "type": "string"
        }
      },
      "description": "A message describing the OS disk."
    },
    "ComputeEngineTargetDetails": {
      "id": "ComputeEngineTargetDetails",
      "description": "ComputeEngineTargetDetails is a collection of details for creating a VM in a target Compute Engine project.",
      "properties": {
        "licenseType": {
          "enum": [
            "COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT",
            "COMPUTE_ENGINE_LICENSE_TYPE_PAYG",
            "COMPUTE_ENGINE_LICENSE_TYPE_BYOL"
          ],
          "enumDescriptions": [
            "The license type is the default for the OS.",
            "The license type is Pay As You Go license type.",
            "The license type is Bring Your Own License type."
          ],
          "type": "string",
          "description": "The license type to use in OS adaptation."
        },
        "machineType": {
          "description": "The machine type to create the VM with.",
          "type": "string"
        },
        "hostname": {
          "description": "The hostname to assign to the VM.",
          "type": "string"
        },
        "project": {
          "type": "string",
          "description": "The Google Cloud target project ID or project name."
        },
        "networkTags": {
          "description": "A list of network tags to associate with the VM.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "The metadata key/value pairs to assign to the VM.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "networkInterfaces": {
          "type": "array",
          "description": "List of NICs connected to this VM.",
          "items": {
            "$ref": "NetworkInterface"
          }
        },
        "additionalLicenses": {
          "type": "array",
          "description": "Additional licenses to assign to the VM.",
          "items": {
            "type": "string"
          }
        },
        "vmName": {
          "description": "The name of the VM to create.",
          "type": "string"
        },
        "appliedLicense": {
          "description": "The OS license returned from the adaptation module report.",
          "$ref": "AppliedLicense"
        },
        "machineTypeSeries": {
          "description": "The machine type series to create the VM with.",
          "type": "string"
        },
        "secureBoot": {
          "description": "Defines whether the instance has Secure Boot enabled. This can be set to true only if the VM boot option is EFI.",
          "type": "boolean"
        },
        "diskType": {
          "description": "The disk type to use in the VM.",
          "enumDescriptions": [
            "An unspecified disk type. Will be used as STANDARD.",
            "A Standard disk type.",
            "SSD hard disk type.",
            "An alternative to SSD persistent disks that balance performance and cost."
          ],
          "enum": [
            "COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED",
            "COMPUTE_ENGINE_DISK_TYPE_STANDARD",
            "COMPUTE_ENGINE_DISK_TYPE_SSD",
            "COMPUTE_ENGINE_DISK_TYPE_BALANCED"
          ],
          "type": "string"
        },
        "zone": {
          "description": "The zone in which to create the VM.",
          "type": "string"
        },
        "computeScheduling": {
          "description": "Compute instance scheduling information (if empty default is used).",
          "$ref": "ComputeScheduling"
        },
        "serviceAccount": {
          "type": "string",
          "description": "The service account to associate the VM with."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map of labels to associate with the VM.",
          "type": "object"
        },
        "bootOption": {
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is EFI.",
            "The boot option is BIOS."
          ],
          "description": "The VM Boot Option, as set in the source VM.",
          "type": "string",
          "enum": [
            "COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED",
            "COMPUTE_ENGINE_BOOT_OPTION_EFI",
            "COMPUTE_ENGINE_BOOT_OPTION_BIOS"
          ]
        }
      },
      "type": "object"
    },
    "DisksMigrationVmTargetDetails": {
      "type": "object",
      "id": "DisksMigrationVmTargetDetails",
      "properties": {
        "vmUri": {
          "type": "string",
          "description": "Output only. The URI of the Compute Engine VM.",
          "readOnly": true
        }
      },
      "description": "Details for the VM created VM as part of disks migration."
    },
    "AzureVmDetails": {
      "id": "AzureVmDetails",
      "type": "object",
      "properties": {
        "vmId": {
          "description": "The VM full path in Azure.",
          "type": "string"
        },
        "computerName": {
          "type": "string",
          "description": "The VM's ComputerName."
        },
        "vmSize": {
          "type": "string",
          "description": "VM size as configured in Azure. Determines the VM's hardware spec."
        },
        "committedStorageMb": {
          "type": "string",
          "description": "The total size of the storage allocated to the VM in MB.",
          "format": "int64"
        },
        "memoryMb": {
          "format": "int32",
          "description": "The memory size of the VM in MB.",
          "type": "integer"
        },
        "osDescription": {
          "$ref": "OSDescription",
          "description": "Description of the OS."
        },
        "bootOption": {
          "description": "The VM Boot Option.",
          "type": "string",
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is UEFI.",
            "The boot option is BIOS."
          ],
          "enum": [
            "BOOT_OPTION_UNSPECIFIED",
            "EFI",
            "BIOS"
          ]
        },
        "powerState": {
          "description": "The power state of the VM at the moment list was taken.",
          "type": "string",
          "enumDescriptions": [
            "Power state is not specified.",
            "The VM is starting.",
            "The VM is running.",
            "The VM is stopping.",
            "The VM is stopped.",
            "The VM is deallocating.",
            "The VM is deallocated.",
            "The VM's power state is unknown."
          ],
          "enum": [
            "POWER_STATE_UNSPECIFIED",
            "STARTING",
            "RUNNING",
            "STOPPING",
            "STOPPED",
            "DEALLOCATING",
            "DEALLOCATED",
            "UNKNOWN"
          ]
        },
        "disks": {
          "type": "array",
          "items": {
            "$ref": "Disk"
          },
          "description": "Description of the data disks."
        },
        "osDisk": {
          "description": "Description of the OS disk.",
          "$ref": "OSDisk"
        },
        "diskCount": {
          "format": "int32",
          "type": "integer",
          "description": "The number of disks the VM has, including OS disk."
        },
        "tags": {
          "description": "The tags of the VM.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cpuCount": {
          "format": "int32",
          "type": "integer",
          "description": "The number of cpus the VM has."
        }
      },
      "description": "AwsVmDetails describes a VM in AWS."
    },
    "AccessKeyCredentials": {
      "description": "Message describing AWS Credentials using access key id and secret.",
      "id": "AccessKeyCredentials",
      "type": "object",
      "properties": {
        "sessionToken": {
          "description": "Input only. AWS session token. Used only when AWS security token service (STS) is responsible for creating the temporary credentials.",
          "type": "string"
        },
        "accessKeyId": {
          "type": "string",
          "description": "AWS access key ID."
        },
        "secretAccessKey": {
          "type": "string",
          "description": "Input only. AWS secret access key."
        }
      }
    },
    "ListMigratingVmsResponse": {
      "description": "Response message for 'ListMigratingVms' request.",
      "properties": {
        "migratingVms": {
          "description": "Output only. The list of Migrating VMs response.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "MigratingVm"
          }
        },
        "nextPageToken": {
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "readOnly": true,
          "type": "string"
        },
        "unreachable": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. Locations that could not be reached."
        }
      },
      "type": "object",
      "id": "ListMigratingVmsResponse"
    },
    "VmUtilizationInfo": {
      "properties": {
        "vmwareVmDetails": {
          "$ref": "VmwareVmDetails",
          "description": "The description of the VM in a Source of type Vmware."
        },
        "vmId": {
          "description": "The VM's ID in the source.",
          "type": "string"
        },
        "utilization": {
          "description": "Utilization metrics for this VM.",
          "$ref": "VmUtilizationMetrics"
        }
      },
      "id": "VmUtilizationInfo",
      "description": "Utilization information of a single VM.",
      "type": "object"
    },
    "AzureVmsDetails": {
      "type": "object",
      "description": "AzureVmsDetails describes VMs in Azure.",
      "id": "AzureVmsDetails",
      "properties": {
        "details": {
          "items": {
            "$ref": "AzureVmDetails"
          },
          "description": "The details of the Azure VMs.",
          "type": "array"
        }
      }
    },
    "PostProcessingStep": {
      "description": "PostProcessingStep contains specific step details.",
      "type": "object",
      "id": "PostProcessingStep",
      "properties": {}
    },
    "MigrationWarning": {
      "properties": {
        "code": {
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is not used.",
            "A warning originated from OS Adaptation."
          ],
          "description": "The warning code.",
          "enum": [
            "WARNING_CODE_UNSPECIFIED",
            "ADAPTATION_WARNING"
          ]
        },
        "actionItem": {
          "description": "Suggested action for solving the warning.",
          "$ref": "LocalizedMessage"
        },
        "warningMessage": {
          "description": "The localized warning message.",
          "$ref": "LocalizedMessage"
        },
        "helpLinks": {
          "description": "URL(s) pointing to additional information on handling the current warning.",
          "type": "array",
          "items": {
            "$ref": "Link"
          }
        },
        "warningTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the warning occurred."
        }
      },
      "id": "MigrationWarning",
      "type": "object",
      "description": "Represents migration resource warning information that can be used with google.rpc.Status message. MigrationWarning is used to present the user with warning information in migration operations."
    },
    "PauseMigrationRequest": {
      "type": "object",
      "properties": {},
      "description": "Request message for 'PauseMigration' request.",
      "id": "PauseMigrationRequest"
    },
    "StartMigrationRequest": {
      "description": "Request message for 'StartMigrationRequest' request.",
      "properties": {},
      "id": "StartMigrationRequest",
      "type": "object"
    },
    "ListReplicationCyclesResponse": {
      "type": "object",
      "description": "Response message for 'ListReplicationCycles' request.",
      "properties": {
        "replicationCycles": {
          "items": {
            "$ref": "ReplicationCycle"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. The list of replication cycles response."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Output only. Locations that could not be reached.",
          "readOnly": true,
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "id": "ListReplicationCyclesResponse"
    },
    "DisksMigrationDisksTargetDefaults": {
      "type": "object",
      "properties": {},
      "id": "DisksMigrationDisksTargetDefaults",
      "description": "Details for a disk only migration."
    },
    "ComputeScheduling": {
      "description": "Scheduling information for VM on maintenance/restart behaviour and node allocation in sole tenant nodes.",
      "type": "object",
      "properties": {
        "onHostMaintenance": {
          "enum": [
            "ON_HOST_MAINTENANCE_UNSPECIFIED",
            "TERMINATE",
            "MIGRATE"
          ],
          "type": "string",
          "description": "How the instance should behave when the host machine undergoes maintenance that may temporarily impact instance performance.",
          "enumDescriptions": [
            "An unknown, unexpected behavior.",
            "Terminate the instance when the host machine undergoes maintenance.",
            "Migrate the instance when the host machine undergoes maintenance."
          ]
        },
        "restartType": {
          "description": "Whether the Instance should be automatically restarted whenever it is terminated by Compute Engine (not terminated by user). This configuration is identical to `automaticRestart` field in Compute Engine create instance under scheduling. It was changed to an enum (instead of a boolean) to match the default value in Compute Engine which is automatic restart.",
          "enumDescriptions": [
            "Unspecified behavior. This will use the default.",
            "The Instance should be automatically restarted whenever it is terminated by Compute Engine.",
            "The Instance isn't automatically restarted whenever it is terminated by Compute Engine."
          ],
          "enum": [
            "RESTART_TYPE_UNSPECIFIED",
            "AUTOMATIC_RESTART",
            "NO_AUTOMATIC_RESTART"
          ],
          "type": "string"
        },
        "nodeAffinities": {
          "description": "A set of node affinity and anti-affinity configurations for sole tenant nodes.",
          "items": {
            "$ref": "SchedulingNodeAffinity"
          },
          "type": "array"
        },
        "minNodeCpus": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node. Ignored if no node_affinites are configured."
        }
      },
      "id": "ComputeScheduling"
    },
    "VmwareVmsDetails": {
      "id": "VmwareVmsDetails",
      "properties": {
        "details": {
          "description": "The details of the vmware VMs.",
          "items": {
            "$ref": "VmwareVmDetails"
          },
          "type": "array"
        }
      },
      "description": "VmwareVmsDetails describes VMs in vCenter.",
      "type": "object"
    },
    "UpgradeStatus": {
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "description": "The time the operation was started.",
          "type": "string"
        },
        "error": {
          "description": "Provides details on the state of the upgrade operation in case of an error.",
          "$ref": "Status"
        },
        "state": {
          "description": "The state of the upgradeAppliance operation.",
          "type": "string",
          "enumDescriptions": [
            "The state was not sampled by the health checks yet.",
            "The upgrade has started.",
            "The upgrade failed.",
            "The upgrade finished successfully."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "FAILED",
            "SUCCEEDED"
          ]
        },
        "previousVersion": {
          "description": "The version from which we upgraded.",
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "The version to upgrade to."
        }
      },
      "description": "UpgradeStatus contains information about upgradeAppliance operation.",
      "id": "UpgradeStatus",
      "type": "object"
    },
    "AzureSourceVmDetails": {
      "description": "Represent the source Azure VM details.",
      "properties": {
        "vmCapabilitiesInfo": {
          "description": "Output only. Information about VM capabilities needed for some Compute Engine features.",
          "$ref": "VmCapabilities",
          "readOnly": true
        },
        "committedStorageBytes": {
          "type": "string",
          "description": "The total size of the disks being migrated in bytes.",
          "format": "int64"
        },
        "firmware": {
          "description": "The firmware type of the source VM.",
          "enumDescriptions": [
            "The firmware is unknown.",
            "The firmware is EFI.",
            "The firmware is BIOS."
          ],
          "enum": [
            "FIRMWARE_UNSPECIFIED",
            "EFI",
            "BIOS"
          ],
          "type": "string"
        },
        "disks": {
          "type": "array",
          "items": {
            "$ref": "AzureDiskDetails"
          },
          "description": "The disks attached to the source VM."
        }
      },
      "id": "AzureSourceVmDetails",
      "type": "object"
    },
    "LocalizedMessage": {
      "description": "Provides a localized error message that is safe to return to the user which can be attached to an RPC error.",
      "id": "LocalizedMessage",
      "properties": {
        "message": {
          "description": "The localized error message in the above locale.",
          "type": "string"
        },
        "locale": {
          "description": "The locale used following the specification defined at https://www.rfc-editor.org/rfc/bcp/bcp47.txt. Examples are: \"en-US\", \"fr-CH\", \"es-MX\"",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AwsVmDetails": {
      "properties": {
        "committedStorageMb": {
          "format": "int64",
          "description": "The total size of the storage allocated to the VM in MB.",
          "type": "string"
        },
        "securityGroups": {
          "items": {
            "$ref": "AwsSecurityGroup"
          },
          "description": "The security groups the VM belongs to.",
          "type": "array"
        },
        "cpuCount": {
          "description": "The number of cpus the VM has.",
          "type": "integer",
          "format": "int32"
        },
        "bootOption": {
          "type": "string",
          "enumDescriptions": [
            "The boot option is unknown.",
            "The boot option is UEFI.",
            "The boot option is LEGACY-BIOS."
          ],
          "enum": [
            "BOOT_OPTION_UNSPECIFIED",
            "EFI",
            "BIOS"
          ],
          "description": "The VM Boot Option."
        },
        "diskCount": {
          "description": "The number of disks the VM has.",
          "type": "integer",
          "format": "int32"
        },
        "osDescription": {
          "description": "The VM's OS.",
          "type": "string"
        },
        "memoryMb": {
          "format": "int32",
          "type": "integer",
          "description": "The memory size of the VM in MB."
        },
        "zone": {
          "description": "The AWS zone of the VM.",
          "type": "string"
        },
        "vmId": {
          "type": "string",
          "description": "The VM ID in AWS."
        },
        "powerState": {
          "readOnly": true,
          "enumDescriptions": [
            "Power state is not specified.",
            "The VM is turned on.",
            "The VM is turned off.",
            "The VM is suspended. This is similar to hibernation or sleep mode.",
            "The VM is starting."
          ],
          "description": "Output only. The power state of the VM at the moment list was taken.",
          "type": "string",
          "enum": [
            "POWER_STATE_UNSPECIFIED",
            "ON",
            "OFF",
            "SUSPENDED",
            "PENDING"
          ]
        },
        "virtualizationType": {
          "enumDescriptions": [
            "The virtualization type is unknown.",
            "The virtualziation type is HVM.",
            "The virtualziation type is PARAVIRTUAL."
          ],
          "enum": [
            "VM_VIRTUALIZATION_TYPE_UNSPECIFIED",
            "HVM",
            "PARAVIRTUAL"
          ],
          "type": "string",
          "description": "The virtualization type."
        },
        "instanceType": {
          "type": "string",
          "description": "The instance type of the VM."
        },
        "displayName": {
          "description": "The display name of the VM. Note that this value is not necessarily unique.",
          "type": "string"
        },
        "sourceId": {
          "type": "string",
          "description": "The id of the AWS's source this VM is connected to."
        },
        "architecture": {
          "description": "The CPU architecture.",
          "type": "string",
          "enumDescriptions": [
            "The architecture is unknown.",
            "The architecture is I386.",
            "The architecture is X86_64.",
            "The architecture is ARM64.",
            "The architecture is X86_64_MAC."
          ],
          "enum": [
            "VM_ARCHITECTURE_UNSPECIFIED",
            "I386",
            "X86_64",
            "ARM64",
            "X86_64_MAC"
          ]
        },
        "vpcId": {
          "description": "The VPC ID the VM belongs to.",
          "type": "string"
        },
        "sourceDescription": {
          "type": "string",
          "description": "The descriptive name of the AWS's source this VM is connected to."
        },
        "tags": {
          "description": "The tags of the VM.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "AwsVmDetails describes a VM in AWS.",
      "id": "AwsVmDetails"
    },
    "UtilizationReport": {
      "id": "UtilizationReport",
      "properties": {
        "error": {
          "$ref": "Status",
          "readOnly": true,
          "description": "Output only. Provides details on the state of the report in case of an error."
        },
        "vmCount": {
          "description": "Output only. Total number of VMs included in the report.",
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "frameEndTime": {
          "description": "Output only. The point in time when the time frame ends. Notice that the time frame is counted backwards. For instance if the \"frame_end_time\" value is 2021/01/20 and the time frame is WEEK then the report covers the week between 2021/01/20 and 2021/01/14.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "SUCCEEDED",
            "FAILED"
          ],
          "description": "Output only. Current state of the report.",
          "enumDescriptions": [
            "The state is unknown. This value is not in use.",
            "The report is in the making.",
            "Report creation completed successfully.",
            "Report creation failed."
          ],
          "type": "string",
          "readOnly": true
        },
        "stateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the state was last set.",
          "readOnly": true
        },
        "timeFrame": {
          "enum": [
            "TIME_FRAME_UNSPECIFIED",
            "WEEK",
            "MONTH",
            "YEAR"
          ],
          "type": "string",
          "description": "Time frame of the report.",
          "enumDescriptions": [
            "The time frame was not specified and will default to WEEK.",
            "One week.",
            "One month.",
            "One year."
          ]
        },
        "vms": {
          "items": {
            "$ref": "VmUtilizationInfo"
          },
          "description": "List of utilization information per VM. When sent as part of the request, the \"vm_id\" field is used in order to specify which VMs to include in the report. In that case all other fields are ignored.",
          "type": "array"
        },
        "createTime": {
          "description": "Output only. The time the report was created (this refers to the time of the request, not the time the report creation completed).",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "The report display name, as assigned by the user.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The report unique name.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Utilization report details the utilization (CPU, memory, etc.) of selected source VMs."
    },
    "ListCutoverJobsResponse": {
      "properties": {
        "cutoverJobs": {
          "readOnly": true,
          "items": {
            "$ref": "CutoverJob"
          },
          "type": "array",
          "description": "Output only. The list of cutover jobs response."
        },
        "unreachable": {
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "type": "object",
      "description": "Response message for 'ListCutoverJobs' request.",
      "id": "ListCutoverJobsResponse"
    },
    "Group": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "User-provided description of the group."
        },
        "name": {
          "description": "Output only. The Group name.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Display name is a user defined name for this group which can be updated."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The update time timestamp.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The create time timestamp.",
          "readOnly": true
        },
        "migrationTargetType": {
          "enum": [
            "MIGRATION_TARGET_TYPE_UNSPECIFIED",
            "MIGRATION_TARGET_TYPE_GCE",
            "MIGRATION_TARGET_TYPE_DISKS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Group type is not specified. This defaults to Compute Engine targets.",
            "All MigratingVMs in the group must have Compute Engine targets.",
            "All MigratingVMs in the group must have Compute Engine Disks targets."
          ],
          "description": "Immutable. The target type of this group."
        }
      },
      "description": "Describes message for 'Group' resource. The Group is a collections of several MigratingVms.",
      "id": "Group"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "Operation"
    },
    "AzureSourceDetails": {
      "properties": {
        "azureLocation": {
          "description": "Immutable. The Azure location (region) that the source VMs will be migrated from.",
          "type": "string"
        },
        "subscriptionId": {
          "description": "Immutable. Azure subscription ID.",
          "type": "string"
        },
        "clientSecretCreds": {
          "description": "Azure Credentials using tenant ID, client ID and secret.",
          "$ref": "ClientSecretCredentials"
        },
        "resourceGroupId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The ID of the Azure resource group that contains all resources related to the migration process of this source."
        },
        "migrationResourcesUserTags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "User specified tags to add to every M2VM generated resource in Azure. These tags will be set in addition to the default tags that are set as part of the migration process. The tags must not begin with the reserved prefix `m4ce` or `m2vm`."
        },
        "state": {
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "FAILED",
            "ACTIVE"
          ],
          "enumDescriptions": [
            "The state is unknown. This is used for API compatibility only and is not used by the system.",
            "The state was not sampled by the health checks yet.",
            "The source is available but might not be usable yet due to invalid credentials or another reason. The error message will contain further details.",
            "The source exists and its credentials were verified."
          ],
          "description": "Output only. State of the source as determined by the health check.",
          "type": "string"
        },
        "error": {
          "description": "Output only. Provides details on the state of the Source in case of an error.",
          "readOnly": true,
          "$ref": "Status"
        }
      },
      "type": "object",
      "id": "AzureSourceDetails",
      "description": "AzureSourceDetails message describes a specific source details for the Azure source type."
    },
    "OperationMetadata": {
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation finished running."
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string",
          "readOnly": true
        },
        "statusMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "id": "OperationMetadata"
    },
    "ResumeMigrationRequest": {
      "properties": {},
      "id": "ResumeMigrationRequest",
      "description": "Request message for 'ResumeMigration' request.",
      "type": "object"
    },
    "CancelOperationRequest": {
      "properties": {},
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object"
    },
    "Location": {
      "type": "object",
      "id": "Location",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "A resource that represents a Google Cloud location."
    },
    "ApplianceVersion": {
      "description": "Describes an appliance version.",
      "properties": {
        "releaseNotesUri": {
          "type": "string",
          "description": "Link to a page that contains the version release notes."
        },
        "critical": {
          "description": "Determine whether it's critical to upgrade the appliance to this version.",
          "type": "boolean"
        },
        "version": {
          "type": "string",
          "description": "The appliance version."
        },
        "uri": {
          "type": "string",
          "description": "A link for downloading the version."
        }
      },
      "type": "object",
      "id": "ApplianceVersion"
    },
    "InitializingReplicationStep": {
      "type": "object",
      "properties": {},
      "description": "InitializingReplicationStep contains specific step details.",
      "id": "InitializingReplicationStep"
    }
  },
  "rootUrl": "https://vmmigration.googleapis.com/",
  "batchPath": "batch",
  "title": "VM Migration API",
  "canonicalName": "VM Migration Service",
  "fullyEncodeReservedExpansion": true,
  "basePath": "",
  "documentationLink": "https://cloud.google.com/migrate/virtual-machines",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "revision": "20230914",
  "protocol": "rest",
  "kind": "discovery#restDescription",
  "ownerName": "Google"
}

{
  "fullyEncodeReservedExpansion": true,
  "servicePath": "",
  "revision": "20240307",
  "version_module": true,
  "version": "v1",
  "parameters": {
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "alt": {
      "type": "string",
      "default": "json",
      "description": "Data format for response.",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean",
      "default": "true"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    }
  },
  "schemas": {
    "GoogleCloudDocumentaiV1OcrConfig": {
      "type": "object",
      "properties": {
        "advancedOcrOptions": {
          "type": "array",
          "description": "A list of advanced OCR options to further fine-tune OCR behavior. Current valid values are: - `legacy_layout`: a heuristics layout detection algorithm, which serves as an alternative to the current ML-based layout detection algorithm. Customers can choose the best suitable layout algorithm based on their situation.",
          "items": {
            "type": "string"
          }
        },
        "enableNativePdfParsing": {
          "type": "boolean",
          "description": "Enables special handling for PDFs with existing text information. Results in better text extraction quality in such PDF inputs."
        },
        "disableCharacterBoxesDetection": {
          "description": "Turn off character box detector in OCR engine. Character box detection is enabled by default in OCR 2.0 (and later) processors.",
          "type": "boolean"
        },
        "premiumFeatures": {
          "$ref": "GoogleCloudDocumentaiV1OcrConfigPremiumFeatures",
          "description": "Configurations for premium OCR features."
        },
        "enableImageQualityScores": {
          "type": "boolean",
          "description": "Enables intelligent document quality scores after OCR. Can help with diagnosing why OCR responses are of poor quality for a given input. Adds additional latency comparable to regular OCR to the process call."
        },
        "hints": {
          "$ref": "GoogleCloudDocumentaiV1OcrConfigHints",
          "description": "Hints for the OCR model."
        },
        "computeStyleInfo": {
          "description": "Turn on font identification model and return font style information. Deprecated, use PremiumFeatures.compute_style_info instead.",
          "deprecated": true,
          "type": "boolean"
        },
        "enableSymbol": {
          "type": "boolean",
          "description": "Includes symbol level OCR information if set to true."
        }
      },
      "description": "Config for Document OCR.",
      "id": "GoogleCloudDocumentaiV1OcrConfig"
    },
    "GoogleCloudDocumentaiV1DocumentPageDimension": {
      "id": "GoogleCloudDocumentaiV1DocumentPageDimension",
      "type": "object",
      "description": "Dimension for the page.",
      "properties": {
        "height": {
          "description": "Page height.",
          "format": "float",
          "type": "number"
        },
        "width": {
          "format": "float",
          "description": "Page width.",
          "type": "number"
        },
        "unit": {
          "description": "Dimension unit.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DatasetDocumentWarehouseConfig": {
      "properties": {
        "schema": {
          "description": "Output only. The schema in Document AI Warehouse associated with the dataset.",
          "readOnly": true,
          "type": "string"
        },
        "collection": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The collection in Document AI Warehouse associated with the dataset."
        }
      },
      "description": "Configuration specific to the Document AI Warehouse-based implementation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DatasetDocumentWarehouseConfig"
    },
    "GoogleCloudDocumentaiV1beta1OutputConfig": {
      "properties": {
        "gcsDestination": {
          "$ref": "GoogleCloudDocumentaiV1beta1GcsDestination",
          "description": "The Google Cloud Storage location to write the output to."
        },
        "pagesPerShard": {
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "The desired output location and metadata.",
      "id": "GoogleCloudDocumentaiV1beta1OutputConfig"
    },
    "GoogleCloudDocumentaiUiv1beta3DocumentId": {
      "properties": {
        "unmanagedDocId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId",
          "description": "A document id within unmanaged dataset."
        },
        "revisionRef": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3RevisionRef",
          "description": "Points to a specific revision of the document if set."
        },
        "gcsManagedDocId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId",
          "description": "A document id within user-managed Cloud Storage."
        }
      },
      "type": "object",
      "description": "Document Identifier.",
      "id": "GoogleCloudDocumentaiUiv1beta3DocumentId"
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextChange": {
      "properties": {
        "provenance": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
          },
          "deprecated": true,
          "type": "array",
          "description": "The history of this annotation."
        },
        "changedText": {
          "description": "The text that replaces the text identified in the `text_anchor`.",
          "type": "string"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextChange",
      "description": "This message is used for text changes aka. OCR corrections.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageSymbol": {
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for Symbol."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageSymbol",
      "description": "A detected symbol."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDimension": {
      "type": "object",
      "description": "Dimension for the page.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDimension",
      "properties": {
        "unit": {
          "description": "Dimension unit.",
          "type": "string"
        },
        "height": {
          "type": "number",
          "description": "Page height.",
          "format": "float"
        },
        "width": {
          "format": "float",
          "description": "Page width.",
          "type": "number"
        }
      }
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus": {
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus",
      "description": "The status of a each individual document in the batch process.",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status processing the document."
        },
        "outputGcsDestination": {
          "type": "string",
          "description": "The Cloud Storage output destination (in the request as DocumentOutputConfig.GcsOutputConfig.gcs_uri) of the processed document if it was successful, otherwise empty."
        },
        "humanReviewStatus": {
          "$ref": "GoogleCloudDocumentaiV1HumanReviewStatus",
          "description": "The status of human review on the processed document."
        },
        "inputGcsSource": {
          "description": "The source of the document, same as the input_gcs_source field in the request when the batch process started.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult": {
      "description": "The validation status of each import config. Status is set to an error if there are no documents to import in the `import_config`, or `OK` if the operation will try to proceed with at least one document.",
      "properties": {
        "inputGcsSource": {
          "description": "The source Cloud Storage URI specified in the import config.",
          "type": "string"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The validation status of import config."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse": {
      "description": "Response of the import document operation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1ListProcessorsResponse": {
      "id": "GoogleCloudDocumentaiV1ListProcessorsResponse",
      "properties": {
        "processors": {
          "type": "array",
          "description": "The list of processors.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1Processor"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Points to the next processor, otherwise empty."
        }
      },
      "type": "object",
      "description": "Response message for the ListProcessors method."
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment": {
      "type": "object",
      "properties": {
        "endIndex": {
          "description": "TextSegment half open end UTF-8 char index in the Document.text.",
          "format": "int64",
          "type": "string"
        },
        "startIndex": {
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment"
    },
    "GoogleCloudDocumentaiV1DocumentPageTable": {
      "type": "object",
      "description": "A table representation similar to HTML table structure.",
      "id": "GoogleCloudDocumentaiV1DocumentPageTable",
      "properties": {
        "provenance": {
          "deprecated": true,
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "The history of this table."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "headerRows": {
          "description": "Header rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableRow"
          },
          "type": "array"
        },
        "bodyRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableRow"
          },
          "description": "Body rows of the table.",
          "type": "array"
        },
        "layout": {
          "description": "Layout for Table.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation": {
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset.",
      "type": "object",
      "properties": {
        "datasetErrorCount": {
          "format": "int32",
          "description": "The total number of dataset errors.",
          "type": "integer"
        },
        "datasetErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training."
        },
        "documentErrorCount": {
          "type": "integer",
          "description": "The total number of document errors.",
          "format": "int32"
        },
        "documentErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training."
        }
      }
    },
    "GoogleCloudDocumentaiV1EvaluationCounters": {
      "description": "Evaluation counters for the documents that were used.",
      "properties": {
        "invalidDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "How many documents were not included in the evaluation as they didn't pass validation."
        },
        "evaluatedDocumentsCount": {
          "format": "int32",
          "description": "How many documents were used in the evaluation.",
          "type": "integer"
        },
        "failedDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "How many documents were not included in the evaluation as Document AI failed to process them."
        },
        "inputDocumentsCount": {
          "type": "integer",
          "description": "How many documents were sent for evaluation.",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1EvaluationCounters"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak": {
      "type": "object",
      "description": "Detected break at the end of a Token.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ],
          "description": "Detected break type."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DisableProcessorResponse": {
      "properties": {},
      "description": "Response message for the DisableProcessor method. Intentionally empty proto for adding fields in future.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DisableProcessorResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse": {
      "type": "object",
      "properties": {
        "processorVersion": {
          "description": "The resource name of the processor version produced by training.",
          "type": "string"
        }
      },
      "description": "The response for TrainProcessorVersion.",
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1DeployProcessorVersionResponse": {
      "properties": {},
      "id": "GoogleCloudDocumentaiV1DeployProcessorVersionResponse",
      "description": "Response message for the DeployProcessorVersion method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores": {
      "type": "object",
      "description": "Image quality scores for the page image.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores",
      "properties": {
        "qualityScore": {
          "type": "number",
          "description": "The overall quality score. Range `[0, 1]` where `1` is perfect quality.",
          "format": "float"
        },
        "detectedDefects": {
          "description": "A list of detected defects.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect"
          }
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2Vertex": {
      "properties": {
        "x": {
          "format": "int32",
          "description": "X coordinate.",
          "type": "integer"
        },
        "y": {
          "format": "int32",
          "description": "Y coordinate (starts from the top of the image).",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "id": "GoogleCloudDocumentaiV1beta2Vertex"
    },
    "GoogleCloudDocumentaiV1DocumentRevision": {
      "properties": {
        "parent": {
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "deprecated": true
        },
        "parentIds": {
          "items": {
            "type": "string"
          },
          "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.",
          "type": "array"
        },
        "id": {
          "type": "string",
          "description": "Id of the revision, internally generated by doc proto storage. Unique within the context of the document."
        },
        "createTime": {
          "description": "The time that the revision was created, internally generated by doc proto storage at the time of create.",
          "format": "google-datetime",
          "type": "string"
        },
        "processor": {
          "description": "If the annotation was made by processor identify the processor by its resource name.",
          "type": "string"
        },
        "agent": {
          "description": "If the change was made by a person specify the name or id of that person.",
          "type": "string"
        },
        "humanReview": {
          "$ref": "GoogleCloudDocumentaiV1DocumentRevisionHumanReview",
          "description": "Human Review information of this revision."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentRevision",
      "type": "object",
      "description": "Contains past or forward revisions of this document."
    },
    "GoogleCloudDocumentaiV1ProcessorVersionAlias": {
      "id": "GoogleCloudDocumentaiV1ProcessorVersionAlias",
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "description": "The alias in the form of `processor_version` resource name."
        },
        "processorVersion": {
          "description": "The resource name of aliased processor version.",
          "type": "string"
        }
      },
      "description": "Contains the alias and the aliased resource name of processor version."
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadata": {
      "description": "Metadata of the auto-labeling documents operation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadata",
      "properties": {
        "totalDocumentCount": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of the auto-labeling documents."
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "individualAutoLabelStatuses": {
          "description": "The list of individual auto-labeling statuses of the dataset documents.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus"
          }
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse": {
      "description": "Response message for the SetDefaultProcessorVersion method.",
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDocumentaiV1RawDocument": {
      "properties": {
        "mimeType": {
          "description": "An IANA MIME type (RFC6838) indicating the nature and format of the content.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the document, it supports all Unicode characters except the following: `*`, `?`, `[`, `]`, `%`, `{`, `}`,`'`, `\\\"`, `,` `~`, `=` and `:` are reserved. If not specified, a default ID is generated."
        },
        "content": {
          "format": "byte",
          "description": "Inline document content.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1RawDocument",
      "type": "object",
      "description": "Payload message of raw document content (bytes)."
    },
    "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig": {
      "id": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig",
      "description": "The configuration used when outputting documents.",
      "type": "object",
      "properties": {
        "shardingConfig": {
          "$ref": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig",
          "description": "Specifies the sharding config for the output document."
        },
        "gcsUri": {
          "type": "string",
          "description": "The Cloud Storage uri (a directory) of the output."
        },
        "fieldMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "Specifies which fields to include in the output documents. Only supports top level document and pages field so it must be in the form of `{document_field_name}` or `pages.{page_field_name}`."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus": {
      "description": "The status of each individual document in the batch delete process.",
      "type": "object",
      "properties": {
        "documentId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId",
          "description": "The document id of the document."
        },
        "status": {
          "description": "The status of deleting the document in storage.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus"
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata"
    },
    "GoogleCloudDocumentaiV1EnableProcessorRequest": {
      "id": "GoogleCloudDocumentaiV1EnableProcessorRequest",
      "type": "object",
      "description": "Request message for the EnableProcessor method.",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsResponse": {
      "properties": {},
      "id": "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsResponse",
      "description": "Response of the delete documents operation.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadata": {
      "properties": {
        "individualBatchUpdateStatuses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadataIndividualBatchUpdateStatus"
          },
          "description": "The list of response details of each document."
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadata"
    },
    "GoogleCloudDocumentaiV1DocumentPageMatrix": {
      "type": "object",
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.",
      "properties": {
        "cols": {
          "format": "int32",
          "type": "integer",
          "description": "Number of columns in the matrix."
        },
        "rows": {
          "description": "Number of rows in the matrix.",
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "The matrix data."
        },
        "type": {
          "type": "integer",
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "format": "int32"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageMatrix"
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus": {
      "properties": {
        "documentId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId",
          "description": "The document id of the auto-labeled document. This will replace the gcs_uri."
        },
        "status": {
          "description": "The status of the document auto-labeling.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus",
      "type": "object",
      "description": "The status of individual documents in the auto-labeling process."
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntity": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntity",
      "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.",
      "properties": {
        "pageAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor",
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found."
        },
        "id": {
          "type": "string",
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document."
        },
        "type": {
          "description": "Required. Entity type from a schema e.g. `Address`.",
          "type": "string"
        },
        "properties": {
          "type": "array",
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          }
        },
        "redacted": {
          "description": "Optional. Whether the entity will be redacted for de-identification purposes.",
          "type": "boolean"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "Optional. The history of this annotation."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Optional. Confidence of detected Schema entity. Range `[0, 1]`."
        },
        "normalizedValue": {
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue"
        },
        "mentionId": {
          "type": "string",
          "description": "Optional. Deprecated. Use `id` field instead."
        },
        "textAnchor": {
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        },
        "mentionText": {
          "type": "string",
          "description": "Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeProperty": {
      "description": "Defines properties that can be part of the entity type.",
      "properties": {
        "occurrenceType": {
          "enum": [
            "OCCURRENCE_TYPE_UNSPECIFIED",
            "OPTIONAL_ONCE",
            "OPTIONAL_MULTIPLE",
            "REQUIRED_ONCE",
            "REQUIRED_MULTIPLE"
          ],
          "type": "string",
          "description": "Occurrence type limits the number of instances an entity type appears in the document.",
          "enumDescriptions": [
            "Unspecified occurrence type.",
            "There will be zero or one instance of this entity type. The same entity instance may be mentioned multiple times.",
            "The entity type will appear zero or multiple times.",
            "The entity type will only appear exactly once. The same entity instance may be mentioned multiple times.",
            "The entity type will appear once or more times."
          ]
        },
        "valueType": {
          "description": "A reference to the value type of the property. This type is subject to the same conventions as the `Entity.base_types` field.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "User defined name for the property."
        },
        "name": {
          "type": "string",
          "description": "The name of the property. Follows the same guidelines as the EntityType name."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeProperty"
    },
    "GoogleCloudDocumentaiV1DocumentPageVisualElement": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageVisualElement",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for VisualElement."
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "type": {
          "description": "Type of the VisualElement.",
          "type": "string"
        }
      },
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page."
    },
    "GoogleCloudDocumentaiV1beta1GcsSource": {
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "description": "The Google Cloud Storage location where the input file will be read from.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1GcsSource"
    },
    "GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId": {
      "type": "object",
      "description": "Identifies a document uniquely within the scope of a dataset in unmanaged option.",
      "properties": {
        "docId": {
          "type": "string",
          "description": "Required. The id of the document."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDimension": {
      "properties": {
        "width": {
          "format": "float",
          "type": "number",
          "description": "Page width."
        },
        "height": {
          "format": "float",
          "type": "number",
          "description": "Page height."
        },
        "unit": {
          "description": "Dimension unit.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDimension",
      "type": "object",
      "description": "Dimension for the page."
    },
    "GoogleCloudDocumentaiV1BatchProcessRequest": {
      "id": "GoogleCloudDocumentaiV1BatchProcessRequest",
      "type": "object",
      "properties": {
        "inputDocuments": {
          "$ref": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig",
          "description": "The input documents for the BatchProcessDocuments method."
        },
        "skipHumanReview": {
          "description": "Whether human review should be skipped for this request. Default to `false`.",
          "type": "boolean"
        },
        "processOptions": {
          "description": "Inference-time options for the process API",
          "$ref": "GoogleCloudDocumentaiV1ProcessOptions"
        },
        "labels": {
          "type": "object",
          "description": "Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "documentOutputConfig": {
          "$ref": "GoogleCloudDocumentaiV1DocumentOutputConfig",
          "description": "The output configuration for the BatchProcessDocuments method."
        }
      },
      "description": "Request message for BatchProcessDocuments."
    },
    "GoogleCloudDocumentaiV1Vertex": {
      "id": "GoogleCloudDocumentaiV1Vertex",
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "properties": {
        "y": {
          "format": "int32",
          "description": "Y coordinate (starts from the top of the image).",
          "type": "integer"
        },
        "x": {
          "type": "integer",
          "format": "int32",
          "description": "X coordinate."
        }
      },
      "type": "object"
    },
    "GoogleTypeDateTime": {
      "properties": {
        "day": {
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.",
          "format": "int32",
          "type": "integer"
        },
        "nanos": {
          "format": "int32",
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
          "type": "integer"
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month."
        },
        "timeZone": {
          "$ref": "GoogleTypeTimeZone",
          "description": "Time zone."
        },
        "hours": {
          "format": "int32",
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "type": "integer"
        },
        "minutes": {
          "type": "integer",
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
          "format": "int32"
        },
        "utcOffset": {
          "format": "google-duration",
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.",
          "type": "string"
        },
        "seconds": {
          "format": "int32",
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.",
          "type": "integer"
        }
      },
      "id": "GoogleTypeDateTime",
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell": {
      "description": "A cell representation inside the table.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for TableCell."
        },
        "colSpan": {
          "format": "int32",
          "description": "How many columns this cell spans.",
          "type": "integer"
        },
        "rowSpan": {
          "format": "int32",
          "type": "integer",
          "description": "How many rows this cell spans."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak": {
      "description": "Detected break at the end of a Token.",
      "type": "object",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "description": "Detected break type.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ]
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak"
    },
    "GoogleCloudDocumentaiV1HumanReviewStatus": {
      "type": "object",
      "properties": {
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the human review state."
        },
        "state": {
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review isn't enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the state_message for details."
          ],
          "type": "string",
          "description": "The state of human review on the processing request.",
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ]
        },
        "humanReviewOperation": {
          "type": "string",
          "description": "The name of the operation triggered by the processed document. This field is populated only when the state is `HUMAN_REVIEW_IN_PROGRESS`. It has the same response type and metadata as the long-running operation returned by ReviewDocument."
        }
      },
      "description": "The status of human review on a processed document.",
      "id": "GoogleCloudDocumentaiV1HumanReviewStatus"
    },
    "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment": {
      "id": "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment",
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "properties": {
        "endIndex": {
          "format": "int64",
          "type": "string",
          "description": "TextSegment half open end UTF-8 char index in the Document.text."
        },
        "startIndex": {
          "format": "int64",
          "type": "string",
          "description": "TextSegment start UTF-8 char index in the Document.text."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTable": {
      "description": "A table representation similar to HTML table structure.",
      "properties": {
        "bodyRows": {
          "description": "Body rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "type": "array"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Table."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "provenance": {
          "deprecated": true,
          "description": "The history of this table.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "headerRows": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "description": "Header rows of the table."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTable",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3HumanReviewStatus": {
      "id": "GoogleCloudDocumentaiV1beta3HumanReviewStatus",
      "type": "object",
      "description": "The status of human review on a processed document.",
      "properties": {
        "humanReviewOperation": {
          "description": "The name of the operation triggered by the processed document. This field is populated only when the state is `HUMAN_REVIEW_IN_PROGRESS`. It has the same response type and metadata as the long-running operation returned by ReviewDocument.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ],
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review isn't enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the state_message for details."
          ],
          "description": "The state of human review on the processing request."
        },
        "stateMessage": {
          "description": "A message providing more details about the human review state.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow",
      "properties": {
        "cells": {
          "type": "array",
          "description": "Cells that make up this row.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell"
          }
        }
      },
      "description": "A row of table cells.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata": {
      "type": "object",
      "description": "The long-running operation metadata for the ReviewDocument method.",
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata",
      "properties": {
        "createTime": {
          "description": "The creation time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "questionId": {
          "description": "The Crowd Compute question ID.",
          "type": "string"
        },
        "state": {
          "description": "Used only when Operation.done is false.",
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time of the operation."
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed."
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent": {
      "type": "object",
      "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent",
      "properties": {
        "id": {
          "description": "The id of the parent provenance.",
          "format": "int32",
          "deprecated": true,
          "type": "integer"
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the index into current revision's parent_ids list."
        },
        "index": {
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3ImportProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata for the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the ImportProcessorVersion method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3ImportProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse": {
      "properties": {
        "outputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta1OutputConfig",
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects."
        },
        "inputConfig": {
          "description": "Information about the input file. This is the same as the corresponding input config in the request.",
          "$ref": "GoogleCloudDocumentaiV1beta1InputConfig"
        }
      },
      "description": "Response to a single document processing request.",
      "id": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1EvaluationConfidenceLevelMetrics": {
      "description": "Evaluations metrics, at a specific confidence level.",
      "properties": {
        "confidenceLevel": {
          "type": "number",
          "description": "The confidence level.",
          "format": "float"
        },
        "metrics": {
          "description": "The metrics at the specific confidence level.",
          "$ref": "GoogleCloudDocumentaiV1EvaluationMetrics"
        }
      },
      "id": "GoogleCloudDocumentaiV1EvaluationConfidenceLevelMetrics",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2GcsSource": {
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2GcsSource",
      "description": "The Google Cloud Storage location where the input file will be read from.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3SampleDocumentsMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3SampleDocumentsMetadata",
      "description": "Metadata of the sample documents operation.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2NormalizedVertex": {
      "id": "GoogleCloudDocumentaiV1beta2NormalizedVertex",
      "type": "object",
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "properties": {
        "x": {
          "description": "X coordinate.",
          "type": "number",
          "format": "float"
        },
        "y": {
          "description": "Y coordinate (starts from the top of the image).",
          "format": "float",
          "type": "number"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse",
      "properties": {},
      "description": "Response of the batch move documents operation."
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata",
      "properties": {
        "individualBatchMoveStatuses": {
          "description": "The list of response details of each document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus"
          }
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "destDatasetType": {
          "type": "string",
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ],
          "description": "The destination dataset split type.",
          "deprecated": true,
          "enumDescriptions": [
            "Default value if the enum is not set.",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ]
        },
        "destSplitType": {
          "description": "The destination dataset split type.",
          "enumDescriptions": [
            "Default value if the enum is not set.",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ],
          "type": "string",
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ]
        }
      }
    },
    "GoogleCloudDocumentaiV1DisableProcessorRequest": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DisableProcessorRequest",
      "description": "Request message for the DisableProcessor method."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow",
      "type": "object",
      "properties": {
        "cells": {
          "type": "array",
          "description": "Cells that make up this row.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell"
          }
        }
      },
      "description": "A row of table cells."
    },
    "GoogleCloudDocumentaiV1DeleteProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "description": "The long-running operation metadata for the DeleteProcessor method.",
      "id": "GoogleCloudDocumentaiV1DeleteProcessorMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2OutputConfig": {
      "description": "The desired output location and metadata.",
      "id": "GoogleCloudDocumentaiV1beta2OutputConfig",
      "type": "object",
      "properties": {
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output to.",
          "$ref": "GoogleCloudDocumentaiV1beta2GcsDestination"
        },
        "pagesPerShard": {
          "type": "integer",
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse": {
      "type": "object",
      "description": "Response message for the ReviewDocument method.",
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse",
      "properties": {
        "gcsDestination": {
          "description": "The Cloud Storage uri for the human reviewed document if the review is succeeded.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "The review operation is rejected by the reviewer.",
            "The review operation is succeeded."
          ],
          "description": "The state of the review operation.",
          "enum": [
            "STATE_UNSPECIFIED",
            "REJECTED",
            "SUCCEEDED"
          ],
          "type": "string"
        },
        "rejectionReason": {
          "description": "The reason why the review is rejected by reviewer.",
          "type": "string"
        }
      }
    },
    "GoogleProtobufEmpty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "id": "GoogleProtobufEmpty"
    },
    "GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse",
      "properties": {},
      "description": "Response message for the SetDefaultProcessorVersion method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeEnumValues": {
      "properties": {
        "values": {
          "items": {
            "type": "string"
          },
          "description": "The individual values that this enum values type can include.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeEnumValues",
      "description": "Defines the a list of enum values."
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus": {
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of the importing of the document."
        },
        "inputGcsSource": {
          "type": "string",
          "description": "The source Cloud Storage URI of the document."
        },
        "outputGcsDestination": {
          "description": "The output_gcs_destination of the processed document if it was successful, otherwise empty.",
          "type": "string"
        },
        "outputDocumentId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId",
          "description": "The document id of imported document if it was successful, otherwise empty."
        }
      },
      "type": "object",
      "description": "The status of each individual document in the import process."
    },
    "GoogleCloudDocumentaiV1ProcessRequest": {
      "properties": {
        "rawDocument": {
          "$ref": "GoogleCloudDocumentaiV1RawDocument",
          "description": "A raw document content (bytes)."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter."
        },
        "fieldMask": {
          "description": "Specifies which fields to include in the ProcessResponse.document output. Only supports top-level document and pages field, so it must be in the form of `{document_field_name}` or `pages.{page_field_name}`.",
          "type": "string",
          "format": "google-fieldmask"
        },
        "processOptions": {
          "$ref": "GoogleCloudDocumentaiV1ProcessOptions",
          "description": "Inference-time options for the process API"
        },
        "skipHumanReview": {
          "type": "boolean",
          "description": "Whether human review should be skipped for this request. Default to `false`."
        },
        "inlineDocument": {
          "description": "An inline document proto.",
          "$ref": "GoogleCloudDocumentaiV1Document"
        },
        "gcsDocument": {
          "$ref": "GoogleCloudDocumentaiV1GcsDocument",
          "description": "A raw document on Google Cloud Storage."
        }
      },
      "id": "GoogleCloudDocumentaiV1ProcessRequest",
      "description": "Request message for the ProcessDocument method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1EnableProcessorResponse": {
      "description": "Response message for the EnableProcessor method. Intentionally empty proto for adding fields in future.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1EnableProcessorResponse"
    },
    "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata",
      "type": "object",
      "description": "The long-running operation metadata for the EnableProcessor method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionRequestInputData": {
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionRequestInputData",
      "description": "The input data used to train a new ProcessorVersion.",
      "type": "object",
      "properties": {
        "trainingDocuments": {
          "description": "The documents used for training the new version.",
          "$ref": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig"
        },
        "testDocuments": {
          "description": "The documents used for testing the trained version.",
          "$ref": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentRevision": {
      "properties": {
        "parentIds": {
          "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "agent": {
          "type": "string",
          "description": "If the change was made by a person specify the name or id of that person."
        },
        "createTime": {
          "description": "The time that the revision was created, internally generated by doc proto storage at the time of create.",
          "type": "string",
          "format": "google-datetime"
        },
        "humanReview": {
          "description": "Human Review information of this revision.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview"
        },
        "processor": {
          "type": "string",
          "description": "If the annotation was made by processor identify the processor by its resource name."
        },
        "parent": {
          "deprecated": true,
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array"
        },
        "id": {
          "description": "Id of the revision, internally generated by doc proto storage. Unique within the context of the document.",
          "type": "string"
        }
      },
      "description": "Contains past or forward revisions of this document.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevision",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata": {
      "type": "object",
      "description": "The long-running operation metadata for the UndeployProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageBlock": {
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
      "type": "object",
      "properties": {
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "deprecated": true,
          "description": "The history of this annotation."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Block."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageBlock"
    },
    "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse": {
      "id": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse",
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete.",
      "type": "object",
      "properties": {
        "responses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse"
          },
          "description": "Responses for each individual document.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus": {
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus",
      "properties": {
        "status": {
          "description": "The status of resyncing the dataset with regards to the detected inconsistency. Empty if ResyncDatasetRequest.validate_only is `true`.",
          "$ref": "GoogleRpcStatus"
        },
        "datasetInconsistencyType": {
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "The marker file under the dataset folder is not found."
          ],
          "enum": [
            "DATASET_INCONSISTENCY_TYPE_UNSPECIFIED",
            "DATASET_INCONSISTENCY_TYPE_NO_STORAGE_MARKER"
          ],
          "description": "The type of the inconsistency of the dataset."
        }
      },
      "type": "object",
      "description": "Resync status against inconsistency types on the dataset level."
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata",
      "description": "The long-running operation metadata for the SetDefaultProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse",
      "description": "Response message for the EnableProcessor method. Intentionally empty proto for adding fields in future.",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1DocumentPageTokenStyleInfo": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageTokenStyleInfo",
      "description": "Font and other text style attributes.",
      "properties": {
        "italic": {
          "type": "boolean",
          "description": "Whether the text is italic."
        },
        "fontWeight": {
          "description": "TrueType weight on a scale `100` (thin) to `1000` (ultra-heavy). Normal is `400`, bold is `700`.",
          "format": "int32",
          "type": "integer"
        },
        "letterSpacing": {
          "type": "number",
          "description": "Letter spacing in points.",
          "format": "double"
        },
        "handwritten": {
          "description": "Whether the text is handwritten.",
          "type": "boolean"
        },
        "fontSize": {
          "description": "Font size in points (`1` point is `¹⁄₇₂` inches).",
          "format": "int32",
          "type": "integer"
        },
        "subscript": {
          "type": "boolean",
          "description": "Whether the text is a subscript."
        },
        "fontType": {
          "description": "Name or style of the font.",
          "type": "string"
        },
        "superscript": {
          "type": "boolean",
          "description": "Whether the text is a superscript."
        },
        "smallcaps": {
          "description": "Whether the text is in small caps.",
          "type": "boolean"
        },
        "underlined": {
          "type": "boolean",
          "description": "Whether the text is underlined."
        },
        "backgroundColor": {
          "$ref": "GoogleTypeColor",
          "description": "Color of the background."
        },
        "bold": {
          "type": "boolean",
          "description": "Whether the text is bold (equivalent to font_weight is at least `700`)."
        },
        "pixelFontSize": {
          "format": "double",
          "description": "Font size in pixels, equal to _unrounded font_size_ * _resolution_ ÷ `72.0`.",
          "type": "number"
        },
        "strikeout": {
          "description": "Whether the text is strikethrough.",
          "type": "boolean"
        },
        "textColor": {
          "$ref": "GoogleTypeColor",
          "description": "Color of the text."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageTableTableCell": {
      "id": "GoogleCloudDocumentaiV1DocumentPageTableTableCell",
      "description": "A cell representation inside the table.",
      "properties": {
        "colSpan": {
          "type": "integer",
          "description": "How many columns this cell spans.",
          "format": "int32"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for TableCell."
        },
        "rowSpan": {
          "description": "How many rows this cell spans.",
          "format": "int32",
          "type": "integer"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageParagraph": {
      "type": "object",
      "properties": {
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "deprecated": true,
          "description": "The history of this annotation."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "description": "Layout for Paragraph.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageParagraph",
      "description": "A collection of lines that a human would perceive as a paragraph."
    },
    "GoogleCloudDocumentaiV1GcsPrefix": {
      "type": "object",
      "description": "Specifies all documents on Cloud Storage with a common prefix.",
      "id": "GoogleCloudDocumentaiV1GcsPrefix",
      "properties": {
        "gcsUriPrefix": {
          "type": "string",
          "description": "The URI prefix."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntity": {
      "properties": {
        "confidence": {
          "type": "number",
          "description": "Optional. Confidence of detected Schema entity. Range `[0, 1]`.",
          "format": "float"
        },
        "properties": {
          "type": "array",
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          }
        },
        "mentionText": {
          "type": "string",
          "description": "Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`."
        },
        "pageAnchor": {
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor"
        },
        "id": {
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document.",
          "type": "string"
        },
        "redacted": {
          "description": "Optional. Whether the entity will be redacted for de-identification purposes.",
          "type": "boolean"
        },
        "mentionId": {
          "type": "string",
          "description": "Optional. Deprecated. Use `id` field instead."
        },
        "provenance": {
          "description": "Optional. The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "type": {
          "description": "Required. Entity type from a schema e.g. `Address`.",
          "type": "string"
        },
        "normalizedValue": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue",
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types."
        },
        "textAnchor": {
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
        }
      },
      "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntity"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageParagraph": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph",
      "type": "object",
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "layout": {
          "description": "Layout for Paragraph.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation.",
          "deprecated": true
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId",
      "properties": {
        "gcsUri": {
          "type": "string",
          "description": "Required. The Cloud Storage URI where the actual document is stored."
        },
        "cwDocId": {
          "type": "string",
          "deprecated": true,
          "description": "Id of the document (indexed) managed by Content Warehouse."
        }
      },
      "description": "Identifies a document uniquely within the scope of a dataset in the user-managed Cloud Storage option."
    },
    "GoogleCloudDocumentaiV1beta2OperationMetadata": {
      "type": "object",
      "description": "Contains metadata for the BatchProcessDocuments operation.",
      "id": "GoogleCloudDocumentaiV1beta2OperationMetadata",
      "properties": {
        "state": {
          "type": "string",
          "description": "The state of the current batch processing.",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ]
        },
        "createTime": {
          "description": "The creation time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "The last update time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        }
      }
    },
    "GoogleCloudDocumentaiV1ReviewDocumentResponse": {
      "id": "GoogleCloudDocumentaiV1ReviewDocumentResponse",
      "properties": {
        "gcsDestination": {
          "description": "The Cloud Storage uri for the human reviewed document if the review is succeeded.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "The review operation is rejected by the reviewer.",
            "The review operation is succeeded."
          ],
          "description": "The state of the review operation.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "REJECTED",
            "SUCCEEDED"
          ]
        },
        "rejectionReason": {
          "type": "string",
          "description": "The reason why the review is rejected by reviewer."
        }
      },
      "description": "Response message for the ReviewDocument method.",
      "type": "object"
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "type": "array"
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImage": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImage",
      "description": "Rendered image contents for this page.",
      "properties": {
        "content": {
          "type": "string",
          "format": "byte",
          "description": "Raw byte content of the image."
        },
        "height": {
          "description": "Height of the image in pixels.",
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Width of the image in pixels."
        },
        "mimeType": {
          "type": "string",
          "description": "Encoding [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml) for the image."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse": {
      "properties": {
        "inputConfig": {
          "description": "Information about the input file. This is the same as the corresponding input config in the request.",
          "$ref": "GoogleCloudDocumentaiV1beta2InputConfig"
        },
        "outputConfig": {
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects.",
          "$ref": "GoogleCloudDocumentaiV1beta2OutputConfig"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse",
      "description": "Response to a single document processing request."
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadata",
      "type": "object",
      "description": "The long-running operation metadata for BatchProcessDocuments.",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The creation time of the operation."
        },
        "state": {
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "description": "The state of the current batch processing.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ]
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time of the operation."
        },
        "individualProcessStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus"
          },
          "type": "array",
          "description": "The list of response details of each document."
        }
      }
    },
    "GoogleCloudDocumentaiV1Barcode": {
      "id": "GoogleCloudDocumentaiV1Barcode",
      "description": "Encodes the detailed information of a barcode.",
      "type": "object",
      "properties": {
        "format": {
          "type": "string",
          "description": "Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type."
        },
        "rawValue": {
          "type": "string",
          "description": "Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`."
        },
        "valueFormat": {
          "type": "string",
          "description": "Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license."
        }
      }
    },
    "GoogleCloudDocumentaiV1DisableProcessorMetadata": {
      "description": "The long-running operation metadata for the DisableProcessor method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DisableProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1ProcessResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1ProcessResponse",
      "properties": {
        "humanReviewStatus": {
          "$ref": "GoogleCloudDocumentaiV1HumanReviewStatus",
          "description": "The status of human review on the processed document."
        },
        "document": {
          "$ref": "GoogleCloudDocumentaiV1Document",
          "description": "The document payload, will populate fields based on the processor's behavior."
        }
      },
      "description": "Response message for the ProcessDocument method."
    },
    "GoogleCloudDocumentaiV1DisableProcessorResponse": {
      "properties": {},
      "type": "object",
      "description": "Response message for the DisableProcessor method. Intentionally empty proto for adding fields in future.",
      "id": "GoogleCloudDocumentaiV1DisableProcessorResponse"
    },
    "GoogleCloudDocumentaiV1Processor": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1Processor",
      "description": "The first-class citizen for Document AI. Each processor defines how to extract structural information from a document.",
      "properties": {
        "processEndpoint": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Immutable. The http endpoint that can be called to invoke processing."
        },
        "state": {
          "enumDescriptions": [
            "The processor is in an unspecified state.",
            "The processor is enabled, i.e., has an enabled version which can currently serve processing requests and all the feature dependencies have been successfully initialized.",
            "The processor is disabled.",
            "The processor is being enabled, will become `ENABLED` if successful.",
            "The processor is being disabled, will become `DISABLED` if successful.",
            "The processor is being created, will become either `ENABLED` (for successful creation) or `FAILED` (for failed ones). Once a processor is in this state, it can then be used for document processing, but the feature dependencies of the processor might not be fully created yet.",
            "The processor failed during creation or initialization of feature dependencies. The user should delete the processor and recreate one as all the functionalities of the processor are disabled.",
            "The processor is being deleted, will be removed if successful."
          ],
          "description": "Output only. The state of the processor.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLED",
            "DISABLED",
            "ENABLING",
            "DISABLING",
            "CREATING",
            "FAILED",
            "DELETING"
          ]
        },
        "kmsKeyName": {
          "description": "The [KMS key](https://cloud.google.com/security-key-management) used for encryption and decryption in CMEK scenarios.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time the processor was created.",
          "type": "string"
        },
        "defaultProcessorVersion": {
          "description": "The default processor version.",
          "type": "string"
        },
        "processorVersionAliases": {
          "description": "Output only. The processor version aliases.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1ProcessorVersionAlias"
          }
        },
        "displayName": {
          "description": "The display name of the processor.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Immutable. The resource name of the processor. Format: `projects/{project}/locations/{location}/processors/{processor}`"
        },
        "type": {
          "description": "The processor type, such as: `OCR_PROCESSOR`, `INVOICE_PROCESSOR`. To get a list of processor types, see FetchProcessorTypes.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadataIndividualBatchUpdateStatus": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadataIndividualBatchUpdateStatus",
      "description": "The status of each individual document in the batch update process.",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of updating the document in storage."
        },
        "documentId": {
          "description": "The document id of the document.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview": {
      "description": "Human Review information of the document.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview",
      "properties": {
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`."
        },
        "state": {
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "description": "The long-running operation metadata for the DeleteProcessor method.",
      "id": "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo",
      "description": "Font and other text style attributes.",
      "properties": {
        "strikeout": {
          "type": "boolean",
          "description": "Whether the text is strikethrough."
        },
        "smallcaps": {
          "type": "boolean",
          "description": "Whether the text is in small caps."
        },
        "bold": {
          "type": "boolean",
          "description": "Whether the text is bold (equivalent to font_weight is at least `700`)."
        },
        "fontSize": {
          "format": "int32",
          "description": "Font size in points (`1` point is `¹⁄₇₂` inches).",
          "type": "integer"
        },
        "superscript": {
          "description": "Whether the text is a superscript.",
          "type": "boolean"
        },
        "fontType": {
          "description": "Name or style of the font.",
          "type": "string"
        },
        "fontWeight": {
          "type": "integer",
          "description": "TrueType weight on a scale `100` (thin) to `1000` (ultra-heavy). Normal is `400`, bold is `700`.",
          "format": "int32"
        },
        "textColor": {
          "$ref": "GoogleTypeColor",
          "description": "Color of the text."
        },
        "pixelFontSize": {
          "description": "Font size in pixels, equal to _unrounded font_size_ * _resolution_ ÷ `72.0`.",
          "format": "double",
          "type": "number"
        },
        "italic": {
          "type": "boolean",
          "description": "Whether the text is italic."
        },
        "handwritten": {
          "description": "Whether the text is handwritten.",
          "type": "boolean"
        },
        "backgroundColor": {
          "description": "Color of the background.",
          "$ref": "GoogleTypeColor"
        },
        "subscript": {
          "type": "boolean",
          "description": "Whether the text is a subscript."
        },
        "underlined": {
          "type": "boolean",
          "description": "Whether the text is underlined."
        },
        "letterSpacing": {
          "type": "number",
          "format": "double",
          "description": "Letter spacing in points."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageBlock": {
      "id": "GoogleCloudDocumentaiV1DocumentPageBlock",
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
      "properties": {
        "provenance": {
          "deprecated": true,
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance"
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "description": "Layout for Block.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3UpdateDatasetOperationMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3UpdateDatasetOperationMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus": {
      "id": "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus",
      "description": "The status of each individual document in the batch delete process.",
      "properties": {
        "status": {
          "description": "The status of deleting the document in storage.",
          "$ref": "GoogleRpcStatus"
        },
        "documentId": {
          "description": "The document id of the document.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentId"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageMatrix": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix",
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.",
      "properties": {
        "cols": {
          "type": "integer",
          "description": "Number of columns in the matrix.",
          "format": "int32"
        },
        "type": {
          "format": "int32",
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "type": "integer"
        },
        "data": {
          "description": "The matrix data.",
          "format": "byte",
          "type": "string"
        },
        "rows": {
          "format": "int32",
          "type": "integer",
          "description": "Number of rows in the matrix."
        }
      }
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "testDatasetValidation": {
          "description": "The test dataset validation information.",
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation"
        },
        "trainingDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation",
          "description": "The training dataset validation information."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadata",
      "description": "The metadata that represents a processor version being created."
    },
    "GoogleCloudDocumentaiV1DocumentProvenance": {
      "id": "GoogleCloudDocumentaiV1DocumentProvenance",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "UPDATE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ],
          "enumDescriptions": [
            "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.",
            "Add an element.",
            "Remove an element identified by `parent`.",
            "Updates any fields within the given provenance scope of the message. It overwrites the fields rather than replacing them. Use this when you want to update a field value of an entity without also updating all the child properties.",
            "Currently unused. Replace an element identified by `parent`.",
            "Deprecated. Request human review for the element identified by `parent`.",
            "Deprecated. Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Deprecated. Element is skipped in the validation process."
          ],
          "description": "The type of provenance operation.",
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true
          ]
        },
        "parents": {
          "description": "References to the original elements that are replaced.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentProvenanceParent"
          },
          "type": "array"
        },
        "revision": {
          "type": "integer",
          "description": "The index of the revision that produced this element.",
          "format": "int32",
          "deprecated": true
        },
        "id": {
          "deprecated": true,
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "Structure to identify provenance relationships between annotations in different revisions."
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue": {
      "properties": {
        "booleanValue": {
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes.",
          "type": "boolean"
        },
        "integerValue": {
          "type": "integer",
          "description": "Integer value.",
          "format": "int32"
        },
        "addressValue": {
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto",
          "$ref": "GoogleTypePostalAddress"
        },
        "floatValue": {
          "type": "number",
          "format": "float",
          "description": "Float value."
        },
        "text": {
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.",
          "type": "string"
        },
        "moneyValue": {
          "$ref": "GoogleTypeMoney",
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto"
        },
        "datetimeValue": {
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto",
          "$ref": "GoogleTypeDateTime"
        },
        "dateValue": {
          "$ref": "GoogleTypeDate",
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto"
        }
      },
      "type": "object",
      "description": "Parsed and normalized entity value.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue"
    },
    "GoogleCloudDocumentaiV1DocumentStyle": {
      "properties": {
        "backgroundColor": {
          "$ref": "GoogleTypeColor",
          "description": "Text background color."
        },
        "fontWeight": {
          "type": "string",
          "description": "[Font weight](https://www.w3schools.com/cssref/pr_font_weight.asp). Possible values are `normal`, `bold`, `bolder`, and `lighter`."
        },
        "fontFamily": {
          "description": "Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp",
          "type": "string"
        },
        "textDecoration": {
          "type": "string",
          "description": "[Text decoration](https://www.w3schools.com/cssref/pr_text_text-decoration.asp). Follows CSS standard. "
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor"
        },
        "fontSize": {
          "$ref": "GoogleCloudDocumentaiV1DocumentStyleFontSize",
          "description": "Font size."
        },
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        },
        "textStyle": {
          "type": "string",
          "description": "[Text style](https://www.w3schools.com/cssref/pr_font_font-style.asp). Possible values are `normal`, `italic`, and `oblique`."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentStyle",
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible."
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionResponse": {
      "properties": {
        "processorVersion": {
          "description": "The resource name of the processor version produced by training.",
          "type": "string"
        }
      },
      "description": "The response for TrainProcessorVersion.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata": {
      "description": "The long-running operation metadata for the SetDefaultProcessorVersion method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1NormalizedVertex": {
      "id": "GoogleCloudDocumentaiV1beta1NormalizedVertex",
      "type": "object",
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "properties": {
        "y": {
          "description": "Y coordinate (starts from the top of the image).",
          "type": "number",
          "format": "float"
        },
        "x": {
          "type": "number",
          "description": "X coordinate.",
          "format": "float"
        }
      }
    },
    "GoogleCloudDocumentaiV1Document": {
      "id": "GoogleCloudDocumentaiV1Document",
      "properties": {
        "revisions": {
          "description": "Placeholder. Revision history of this document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentRevision"
          },
          "type": "array"
        },
        "text": {
          "description": "Optional. UTF-8 encoded text in reading order from the document.",
          "type": "string"
        },
        "mimeType": {
          "type": "string",
          "description": "An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml)."
        },
        "shardInfo": {
          "$ref": "GoogleCloudDocumentaiV1DocumentShardInfo",
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified."
        },
        "uri": {
          "type": "string",
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. For more information, refer to [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris)."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Any error that occurred while processing this document."
        },
        "entityRelations": {
          "description": "Placeholder. Relationship among Document.entities.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentEntityRelation"
          },
          "type": "array"
        },
        "content": {
          "format": "byte",
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
          "type": "string"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentEntity"
          },
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries."
        },
        "textStyles": {
          "type": "array",
          "description": "Styles for the Document.text.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentStyle"
          },
          "deprecated": true
        },
        "pages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPage"
          },
          "description": "Visual page layout for the Document.",
          "type": "array"
        },
        "textChanges": {
          "description": "Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentTextChange"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality."
    },
    "GoogleCloudDocumentaiV1CommonOperationMetadata": {
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The creation time of the operation."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The last update time of the operation.",
          "type": "string"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        },
        "resource": {
          "description": "A related resource to this operation.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "description": "The state of the operation.",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "type": "string"
        }
      },
      "description": "The common metadata for long running operations.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1CommonOperationMetadata"
    },
    "GoogleCloudDocumentaiV1DocumentTextChange": {
      "id": "GoogleCloudDocumentaiV1DocumentTextChange",
      "description": "This message is used for text changes aka. OCR corrections.",
      "type": "object",
      "properties": {
        "provenance": {
          "deprecated": true,
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentProvenance"
          },
          "description": "The history of this annotation.",
          "type": "array"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor",
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index."
        },
        "changedText": {
          "type": "string",
          "description": "The text that replaces the text identified in the `text_anchor`."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata": {
      "properties": {
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time of the operation."
        },
        "resource": {
          "description": "A related resource to this operation.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "description": "The state of the operation."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The creation time of the operation."
        }
      },
      "type": "object",
      "description": "The common metadata for long running operations.",
      "id": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
    },
    "GoogleCloudDocumentaiV1DeployProcessorVersionMetadata": {
      "description": "The long-running operation metadata for the DeployProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1DeployProcessorVersionMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPage": {
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          }
        },
        "tables": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTable"
          },
          "description": "A list of visually detected tables on the page.",
          "type": "array"
        },
        "transforms": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageMatrix"
          },
          "description": "Transformation matrices that were applied to the original document image to produce Page.image."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for the page."
        },
        "symbols": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageSymbol"
          },
          "type": "array",
          "description": "A list of visually detected symbols on the page."
        },
        "paragraphs": {
          "type": "array",
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageParagraph"
          }
        },
        "visualElements": {
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageVisualElement"
          }
        },
        "detectedBarcodes": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedBarcode"
          },
          "type": "array",
          "description": "A list of detected barcodes."
        },
        "tokens": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageToken"
          },
          "type": "array",
          "description": "A list of visually detected tokens on the page."
        },
        "pageNumber": {
          "format": "int32",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.",
          "type": "integer"
        },
        "provenance": {
          "description": "The history of this page.",
          "deprecated": true,
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance"
        },
        "imageQualityScores": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageImageQualityScores",
          "description": "Image quality scores."
        },
        "blocks": {
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageBlock"
          }
        },
        "image": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageImage",
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned."
        },
        "dimension": {
          "description": "Physical dimension of the page.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageDimension"
        },
        "lines": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageLine"
          },
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line."
        },
        "formFields": {
          "type": "array",
          "description": "A list of visually detected form fields on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageFormField"
          }
        }
      },
      "description": "A page in a Document.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPage"
    },
    "GoogleCloudDocumentaiV1beta2Barcode": {
      "properties": {
        "rawValue": {
          "description": "Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`.",
          "type": "string"
        },
        "valueFormat": {
          "type": "string",
          "description": "Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license."
        },
        "format": {
          "type": "string",
          "description": "Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type."
        }
      },
      "type": "object",
      "description": "Encodes the detailed information of a barcode.",
      "id": "GoogleCloudDocumentaiV1beta2Barcode"
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "description": "Metadata of the EvaluateProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation": {
      "properties": {
        "datasetErrors": {
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "documentErrorCount": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of document errors."
        },
        "datasetErrorCount": {
          "format": "int32",
          "description": "The total number of dataset errors.",
          "type": "integer"
        },
        "documentErrors": {
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      },
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation"
    },
    "GoogleCloudDocumentaiV1beta1Document": {
      "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.",
      "properties": {
        "pages": {
          "type": "array",
          "description": "Visual page layout for the Document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPage"
          }
        },
        "textChanges": {
          "description": "Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextChange"
          }
        },
        "mimeType": {
          "type": "string",
          "description": "An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml)."
        },
        "shardInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentShardInfo",
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified."
        },
        "uri": {
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. For more information, refer to [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris).",
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "Optional. UTF-8 encoded text in reading order from the document."
        },
        "content": {
          "format": "byte",
          "type": "string",
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Any error that occurred while processing this document."
        },
        "entities": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          },
          "type": "array",
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries."
        },
        "revisions": {
          "type": "array",
          "description": "Placeholder. Revision history of this document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevision"
          }
        },
        "textStyles": {
          "description": "Styles for the Document.text.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyle"
          },
          "deprecated": true
        },
        "entityRelations": {
          "type": "array",
          "description": "Placeholder. Relationship among Document.entities.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1Document",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "description": "The long-running operation metadata for the DeployProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta2DocumentShardInfo": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
      "properties": {
        "shardIndex": {
          "description": "The 0-based index of this shard.",
          "format": "int64",
          "type": "string"
        },
        "textOffset": {
          "format": "int64",
          "description": "The index of the first character in Document.text in the overall document global text.",
          "type": "string"
        },
        "shardCount": {
          "description": "Total number of shards.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata": {
      "description": "The long-running operation metadata for the DeleteProcessor method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of moving the document."
        },
        "documentId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId",
          "description": "The document id of the document."
        }
      },
      "description": "The status of each individual document in the batch move process."
    },
    "GoogleCloudDocumentaiV1UndeployProcessorVersionResponse": {
      "type": "object",
      "description": "Response message for the UndeployProcessorVersion method.",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextChange": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextChange",
      "properties": {
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index."
        },
        "changedText": {
          "description": "The text that replaces the text identified in the `text_anchor`.",
          "type": "string"
        },
        "provenance": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
          },
          "type": "array",
          "description": "The history of this annotation.",
          "deprecated": true
        }
      },
      "description": "This message is used for text changes aka. OCR corrections."
    },
    "GoogleCloudDocumentaiV1beta3DocumentIdUnmanagedDocumentId": {
      "properties": {
        "docId": {
          "description": "Required. The id of the document.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DocumentIdUnmanagedDocumentId",
      "type": "object",
      "description": "Identifies a document uniquely within the scope of a dataset in unmanaged option."
    },
    "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataImportConfigValidationResult": {
      "id": "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataImportConfigValidationResult",
      "description": "The validation status of each import config. Status is set to an error if there are no documents to import in the `import_config`, or `OK` if the operation will try to proceed with at least one document.",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The validation status of import config."
        },
        "inputGcsSource": {
          "description": "The source Cloud Storage URI specified in the import config.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchor": {
      "properties": {
        "content": {
          "type": "string",
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields."
        },
        "textSegments": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment"
          },
          "description": "The text segments from the Document.text.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Text reference indexing into the Document.text.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
    },
    "GoogleCloudDocumentaiV1beta2Document": {
      "type": "object",
      "properties": {
        "entities": {
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          }
        },
        "textChanges": {
          "description": "Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextChange"
          }
        },
        "labels": {
          "description": "Labels for this document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentLabel"
          },
          "type": "array"
        },
        "entityRelations": {
          "description": "Placeholder. Relationship among Document.entities.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation"
          }
        },
        "mimeType": {
          "type": "string",
          "description": "An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml)."
        },
        "revisions": {
          "type": "array",
          "description": "Placeholder. Revision history of this document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevision"
          }
        },
        "textStyles": {
          "type": "array",
          "description": "Styles for the Document.text.",
          "deprecated": true,
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyle"
          }
        },
        "shardInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified."
        },
        "pages": {
          "description": "Visual page layout for the Document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPage"
          },
          "type": "array"
        },
        "uri": {
          "type": "string",
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. For more information, refer to [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris)."
        },
        "content": {
          "format": "byte",
          "type": "string",
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64."
        },
        "text": {
          "type": "string",
          "description": "Optional. UTF-8 encoded text in reading order from the document."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Any error that occurred while processing this document."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2Document",
      "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality."
    },
    "GoogleTypeColor": {
      "id": "GoogleTypeColor",
      "description": "Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha \u003c= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red \u003c\u003c 16) | (green \u003c\u003c 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i \u003c missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...",
      "type": "object",
      "properties": {
        "alpha": {
          "format": "float",
          "type": "number",
          "description": "The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0)."
        },
        "green": {
          "type": "number",
          "format": "float",
          "description": "The amount of green in the color as a value in the interval [0, 1]."
        },
        "blue": {
          "type": "number",
          "description": "The amount of blue in the color as a value in the interval [0, 1].",
          "format": "float"
        },
        "red": {
          "description": "The amount of red in the color as a value in the interval [0, 1].",
          "format": "float",
          "type": "number"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPage": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPage",
      "description": "A page in a Document.",
      "properties": {
        "symbols": {
          "type": "array",
          "description": "A list of visually detected symbols on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageSymbol"
          }
        },
        "lines": {
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLine"
          }
        },
        "transforms": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix"
          },
          "description": "Transformation matrices that were applied to the original document image to produce Page.image.",
          "type": "array"
        },
        "tables": {
          "description": "A list of visually detected tables on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTable"
          },
          "type": "array"
        },
        "visualElements": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement"
          },
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page."
        },
        "pageNumber": {
          "format": "int32",
          "type": "integer",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "blocks": {
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageBlock"
          }
        },
        "image": {
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImage"
        },
        "tokens": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageToken"
          },
          "description": "A list of visually detected tokens on the page."
        },
        "detectedBarcodes": {
          "type": "array",
          "description": "A list of detected barcodes.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode"
          }
        },
        "provenance": {
          "deprecated": true,
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this page."
        },
        "paragraphs": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph"
          },
          "type": "array",
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph."
        },
        "imageQualityScores": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores",
          "description": "Image quality scores."
        },
        "dimension": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDimension",
          "description": "Physical dimension of the page."
        },
        "layout": {
          "description": "Layout for the page.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "formFields": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageFormField"
          },
          "type": "array",
          "description": "A list of visually detected form fields on the page."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageToken": {
      "description": "A detected token.",
      "properties": {
        "provenance": {
          "deprecated": true,
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation."
        },
        "detectedBreak": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak",
          "description": "Detected break at the end of a Token."
        },
        "styleInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo",
          "description": "Text style attributes."
        },
        "layout": {
          "description": "Layout for Token.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageToken"
    },
    "GoogleCloudDocumentaiV1beta1Vertex": {
      "type": "object",
      "properties": {
        "y": {
          "format": "int32",
          "type": "integer",
          "description": "Y coordinate (starts from the top of the image)."
        },
        "x": {
          "format": "int32",
          "description": "X coordinate.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1Vertex",
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image."
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata",
      "description": "The long-running operation metadata for UpdateLabelerPool."
    },
    "GoogleCloudDocumentaiV1DocumentEntityRelation": {
      "description": "Relationship between Entities.",
      "id": "GoogleCloudDocumentaiV1DocumentEntityRelation",
      "properties": {
        "relation": {
          "description": "Relationship description.",
          "type": "string"
        },
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        },
        "subjectId": {
          "description": "Subject entity id.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentSchemaEntityType": {
      "id": "GoogleCloudDocumentaiV1DocumentSchemaEntityType",
      "properties": {
        "name": {
          "description": "Name of the type. It must be unique within the schema file and cannot be a \"Common Type\". The following naming conventions are used: - Use `snake_casing`. - Name matching is case-sensitive. - Maximum 64 characters. - Must start with a letter. - Allowed characters: ASCII letters `[a-z0-9_-]`. (For backward compatibility internal infrastructure and tooling can handle any ascii character.) - The `/` is sometimes used to denote a property of a type. For example `line_item/amount`. This convention is deprecated, but will still be honored for backward compatibility.",
          "type": "string"
        },
        "baseTypes": {
          "description": "The entity type that this type is derived from. For now, one and only one should be set.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "User defined name for the type.",
          "type": "string"
        },
        "enumValues": {
          "description": "If specified, lists all the possible values for this entity. This should not be more than a handful of values. If the number of values is \u003e10 or could change frequently use the `EntityType.value_ontology` field and specify a list of all possible values in a value ontology file.",
          "$ref": "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeEnumValues"
        },
        "properties": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeProperty"
          },
          "description": "Description the nested structure, or composition of an entity.",
          "type": "array"
        }
      },
      "description": "EntityType is the wrapper of a label of the corresponding model with detailed attributes and limitations for entity-based processors. Multiple types can also compose a dependency tree to represent nested types.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DatasetSpannerIndexingConfig": {
      "description": "Configuration specific to spanner-based indexing.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DatasetSpannerIndexingConfig"
    },
    "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadata": {
      "type": "object",
      "properties": {
        "importConfigValidationResults": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataImportConfigValidationResult"
          },
          "description": "Validation statuses of the batch documents import config."
        },
        "individualImportStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataIndividualImportStatus"
          },
          "description": "The list of response details of each document.",
          "type": "array"
        },
        "totalDocumentCount": {
          "description": "Total number of the documents that are qualified for importing.",
          "format": "int32",
          "type": "integer"
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadata",
      "description": "Metadata of the import document operation."
    },
    "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionResponse": {
      "description": "Response of the EvaluateProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionResponse",
      "properties": {
        "evaluation": {
          "description": "The resource name of the created evaluation.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityRelation": {
      "description": "Relationship between Entities.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        },
        "subjectId": {
          "type": "string",
          "description": "Subject entity id."
        },
        "relation": {
          "description": "Relationship description.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1EvaluationMetrics": {
      "properties": {
        "truePositivesCount": {
          "format": "int32",
          "description": "The amount of true positives.",
          "type": "integer"
        },
        "predictedOccurrencesCount": {
          "description": "The amount of occurrences in predicted documents.",
          "format": "int32",
          "type": "integer"
        },
        "recall": {
          "description": "The calculated recall.",
          "type": "number",
          "format": "float"
        },
        "falsePositivesCount": {
          "type": "integer",
          "description": "The amount of false positives.",
          "format": "int32"
        },
        "predictedDocumentCount": {
          "format": "int32",
          "description": "The amount of documents with a predicted occurrence.",
          "type": "integer"
        },
        "groundTruthDocumentCount": {
          "type": "integer",
          "format": "int32",
          "description": "The amount of documents with a ground truth occurrence."
        },
        "falseNegativesCount": {
          "description": "The amount of false negatives.",
          "type": "integer",
          "format": "int32"
        },
        "totalDocumentsCount": {
          "description": "The amount of documents that had an occurrence of this label.",
          "type": "integer",
          "format": "int32"
        },
        "groundTruthOccurrencesCount": {
          "type": "integer",
          "description": "The amount of occurrences in ground truth documents.",
          "format": "int32"
        },
        "f1Score": {
          "type": "number",
          "format": "float",
          "description": "The calculated f1 score."
        },
        "precision": {
          "description": "The calculated precision.",
          "type": "number",
          "format": "float"
        }
      },
      "id": "GoogleCloudDocumentaiV1EvaluationMetrics",
      "description": "Evaluation metrics, either in aggregate or about a specific entity.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionRequestCustomDocumentExtractionOptions": {
      "properties": {
        "trainingMethod": {
          "enum": [
            "TRAINING_METHOD_UNSPECIFIED",
            "MODEL_BASED",
            "TEMPLATE_BASED"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "Training method to use for CDE training."
        }
      },
      "description": "Options to control the training of the Custom Document Extraction (CDE) Processor.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionRequestCustomDocumentExtractionOptions"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata",
      "type": "object",
      "properties": {
        "totalDocumentCount": {
          "type": "integer",
          "description": "Total number of documents deleting from dataset.",
          "format": "int32"
        },
        "errorDocumentCount": {
          "description": "Total number of documents that failed to be deleted in storage.",
          "type": "integer",
          "format": "int32"
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "individualBatchDeleteStatuses": {
          "description": "The list of response details of each document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentTextAnchor": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields."
        },
        "textSegments": {
          "description": "The text segments from the Document.text.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment"
          }
        }
      },
      "description": "Text reference indexing into the Document.text.",
      "id": "GoogleCloudDocumentaiV1DocumentTextAnchor"
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsResponse",
      "properties": {},
      "description": "The response proto of AutoLabelDocuments method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevision": {
      "description": "Contains past or forward revisions of this document.",
      "properties": {
        "id": {
          "description": "Id of the revision, internally generated by doc proto storage. Unique within the context of the document.",
          "type": "string"
        },
        "agent": {
          "type": "string",
          "description": "If the change was made by a person specify the name or id of that person."
        },
        "parentIds": {
          "items": {
            "type": "string"
          },
          "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.",
          "type": "array"
        },
        "processor": {
          "description": "If the annotation was made by processor identify the processor by its resource name.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time that the revision was created, internally generated by doc proto storage at the time of create.",
          "type": "string"
        },
        "parent": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.",
          "type": "array",
          "deprecated": true
        },
        "humanReview": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview",
          "description": "Human Review information of this revision."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevision",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DatasetUnmanagedDatasetConfig": {
      "properties": {},
      "description": "Configuration specific to an unmanaged dataset.",
      "id": "GoogleCloudDocumentaiV1beta3DatasetUnmanagedDatasetConfig",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2InputConfig": {
      "properties": {
        "mimeType": {
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format.",
          "type": "string"
        },
        "contents": {
          "description": "Content in bytes, represented as a stream of bytes. Note: As with all `bytes` fields, proto buffer messages use a pure binary representation, whereas JSON representations use base64. This field only works for synchronous ProcessDocument method.",
          "format": "byte",
          "type": "string"
        },
        "gcsSource": {
          "description": "The Google Cloud Storage location to read the input from. This must be a single file.",
          "$ref": "GoogleCloudDocumentaiV1beta2GcsSource"
        }
      },
      "description": "The desired input location and metadata.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2InputConfig"
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenance": {
      "description": "Structure to identify provenance relationships between annotations in different revisions.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
      "type": "object",
      "properties": {
        "revision": {
          "format": "int32",
          "type": "integer",
          "description": "The index of the revision that produced this element.",
          "deprecated": true
        },
        "id": {
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "format": "int32",
          "type": "integer",
          "deprecated": true
        },
        "parents": {
          "description": "References to the original elements that are replaced.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of provenance operation.",
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true
          ],
          "type": "string",
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "UPDATE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ],
          "enumDescriptions": [
            "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.",
            "Add an element.",
            "Remove an element identified by `parent`.",
            "Updates any fields within the given provenance scope of the message. It overwrites the fields rather than replacing them. Use this when you want to update a field value of an entity without also updating all the child properties.",
            "Currently unused. Replace an element identified by `parent`.",
            "Deprecated. Request human review for the element identified by `parent`.",
            "Deprecated. Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Deprecated. Element is skipped in the validation process."
          ]
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImage": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImage",
      "description": "Rendered image contents for this page.",
      "properties": {
        "content": {
          "description": "Raw byte content of the image.",
          "type": "string",
          "format": "byte"
        },
        "width": {
          "type": "integer",
          "description": "Width of the image in pixels.",
          "format": "int32"
        },
        "height": {
          "format": "int32",
          "description": "Height of the image in pixels.",
          "type": "integer"
        },
        "mimeType": {
          "type": "string",
          "description": "Encoding [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml) for the image."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue",
      "description": "Parsed and normalized entity value.",
      "properties": {
        "booleanValue": {
          "type": "boolean",
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes."
        },
        "text": {
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.",
          "type": "string"
        },
        "floatValue": {
          "description": "Float value.",
          "format": "float",
          "type": "number"
        },
        "datetimeValue": {
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto",
          "$ref": "GoogleTypeDateTime"
        },
        "moneyValue": {
          "$ref": "GoogleTypeMoney",
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto"
        },
        "integerValue": {
          "format": "int32",
          "description": "Integer value.",
          "type": "integer"
        },
        "addressValue": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto"
        },
        "dateValue": {
          "$ref": "GoogleTypeDate",
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3ImportProcessorVersionResponse": {
      "description": "The response message for the ImportProcessorVersion method.",
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The destination processor version name."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3ImportProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1ListProcessorTypesResponse": {
      "description": "Response message for the ListProcessorTypes method.",
      "id": "GoogleCloudDocumentaiV1ListProcessorTypesResponse",
      "properties": {
        "processorTypes": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1ProcessorType"
          },
          "type": "array",
          "description": "The processor types."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Points to the next page, otherwise empty."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse": {
      "description": "Response message for the UndeployProcessorVersion method.",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1BoundingPoly": {
      "type": "object",
      "description": "A bounding polygon for the detected image annotation.",
      "id": "GoogleCloudDocumentaiV1beta1BoundingPoly",
      "properties": {
        "normalizedVertices": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1NormalizedVertex"
          },
          "type": "array",
          "description": "The bounding polygon normalized vertices."
        },
        "vertices": {
          "type": "array",
          "description": "The bounding polygon vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1Vertex"
          }
        }
      }
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadata",
      "description": "The long-running operation metadata for BatchProcessDocuments.",
      "properties": {
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed."
        },
        "individualProcessStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus"
          },
          "type": "array",
          "description": "The list of response details of each document."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ],
          "description": "The state of the current batch processing.",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "type": "string"
        },
        "updateTime": {
          "description": "The last update time of the operation.",
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The creation time of the operation.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1ProcessorVersionDeprecationInfo": {
      "id": "GoogleCloudDocumentaiV1ProcessorVersionDeprecationInfo",
      "properties": {
        "replacementProcessorVersion": {
          "description": "If set, the processor version that will be used as a replacement.",
          "type": "string"
        },
        "deprecationTime": {
          "description": "The time at which this processor version will be deprecated.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Information about the upcoming deprecation of this processor version."
    },
    "GoogleLongrunningOperation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "GoogleLongrunningOperation",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      }
    },
    "GoogleTypeDate": {
      "type": "object",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "id": "GoogleTypeDate",
      "properties": {
        "month": {
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer",
          "format": "int32"
        },
        "year": {
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer"
        }
      }
    },
    "GoogleCloudDocumentaiV1BoundingPoly": {
      "properties": {
        "normalizedVertices": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1NormalizedVertex"
          },
          "description": "The bounding polygon normalized vertices.",
          "type": "array"
        },
        "vertices": {
          "description": "The bounding polygon vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1Vertex"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1BoundingPoly",
      "description": "A bounding polygon for the detected image annotation."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo": {
      "type": "object",
      "properties": {
        "italic": {
          "description": "Whether the text is italic.",
          "type": "boolean"
        },
        "textColor": {
          "$ref": "GoogleTypeColor",
          "description": "Color of the text."
        },
        "backgroundColor": {
          "$ref": "GoogleTypeColor",
          "description": "Color of the background."
        },
        "fontWeight": {
          "description": "TrueType weight on a scale `100` (thin) to `1000` (ultra-heavy). Normal is `400`, bold is `700`.",
          "format": "int32",
          "type": "integer"
        },
        "fontType": {
          "type": "string",
          "description": "Name or style of the font."
        },
        "strikeout": {
          "type": "boolean",
          "description": "Whether the text is strikethrough."
        },
        "fontSize": {
          "type": "integer",
          "description": "Font size in points (`1` point is `¹⁄₇₂` inches).",
          "format": "int32"
        },
        "superscript": {
          "type": "boolean",
          "description": "Whether the text is a superscript."
        },
        "bold": {
          "description": "Whether the text is bold (equivalent to font_weight is at least `700`).",
          "type": "boolean"
        },
        "handwritten": {
          "type": "boolean",
          "description": "Whether the text is handwritten."
        },
        "pixelFontSize": {
          "description": "Font size in pixels, equal to _unrounded font_size_ * _resolution_ ÷ `72.0`.",
          "format": "double",
          "type": "number"
        },
        "subscript": {
          "type": "boolean",
          "description": "Whether the text is a subscript."
        },
        "underlined": {
          "type": "boolean",
          "description": "Whether the text is underlined."
        },
        "letterSpacing": {
          "format": "double",
          "description": "Letter spacing in points.",
          "type": "number"
        },
        "smallcaps": {
          "type": "boolean",
          "description": "Whether the text is in small caps."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo",
      "description": "Font and other text style attributes."
    },
    "GoogleCloudDocumentaiV1GcsDocument": {
      "description": "Specifies a document stored on Cloud Storage.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1GcsDocument",
      "properties": {
        "mimeType": {
          "description": "An IANA MIME type (RFC6838) of the content.",
          "type": "string"
        },
        "gcsUri": {
          "description": "The Cloud Storage object uri.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageLine": {
      "type": "object",
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for Line."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "deprecated": true,
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageLine"
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata": {
      "description": "The long-running operation metadata for the DeleteProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse",
      "type": "object",
      "description": "Response of the delete documents operation.",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1DocumentPageLayout": {
      "description": "Visual element describing a layout unit on a page.",
      "type": "object",
      "properties": {
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1BoundingPoly",
          "description": "The bounding polygon for the Layout."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.",
          "format": "float"
        },
        "orientation": {
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ],
          "type": "string",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "description": "Detected orientation for the Layout."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageLayout"
    },
    "GoogleCloudDocumentaiV1beta3ImportDocumentsResponse": {
      "description": "Response of the import document operation.",
      "id": "GoogleCloudDocumentaiV1beta3ImportDocumentsResponse",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef": {
      "description": "Represents a weak reference to a page element within a document.",
      "properties": {
        "page": {
          "type": "string",
          "description": "Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json.",
          "format": "int64"
        },
        "boundingPoly": {
          "description": "Optional. Identifies the bounding polygon of a layout element on the page. If `layout_type` is set, the bounding polygon must be exactly the same to the layout element it's referring to.",
          "$ref": "GoogleCloudDocumentaiV1BoundingPoly"
        },
        "layoutType": {
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "type": "string",
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ]
        },
        "layoutId": {
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.",
          "type": "string",
          "deprecated": true
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Optional. Confidence of detected page element, if applicable. Range `[0, 1]`."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode": {
      "properties": {
        "barcode": {
          "$ref": "GoogleCloudDocumentaiV1beta1Barcode",
          "description": "Detailed barcode information of the DetectedBarcode."
        },
        "layout": {
          "description": "Layout for DetectedBarcode.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode",
      "description": "A detected barcode.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLine": {
      "type": "object",
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLine",
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Line."
        },
        "provenance": {
          "description": "The history of this annotation.",
          "deprecated": true,
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse",
      "properties": {
        "gcsUri": {
          "description": "The Cloud Storage URI containing the output artifacts.",
          "type": "string"
        }
      },
      "description": "Response message associated with the ExportProcessorVersion operation.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessResponse": {
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessResponse",
      "properties": {},
      "type": "object",
      "description": "Response message for BatchProcessDocuments."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef": {
      "properties": {
        "layoutId": {
          "deprecated": true,
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.",
          "type": "string"
        },
        "confidence": {
          "description": "Optional. Confidence of detected page element, if applicable. Range `[0, 1]`.",
          "type": "number",
          "format": "float"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly",
          "description": "Optional. Identifies the bounding polygon of a layout element on the page. If `layout_type` is set, the bounding polygon must be exactly the same to the layout element it's referring to."
        },
        "page": {
          "format": "int64",
          "type": "string",
          "description": "Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json."
        },
        "layoutType": {
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "type": "string",
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ]
        }
      },
      "description": "Represents a weak reference to a page element within a document.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef"
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse",
      "properties": {
        "evaluation": {
          "type": "string",
          "description": "The resource name of the created evaluation."
        }
      },
      "description": "Response of the EvaluateProcessorVersion method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTable": {
      "properties": {
        "provenance": {
          "deprecated": true,
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this table."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "headerRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          },
          "description": "Header rows of the table.",
          "type": "array"
        },
        "bodyRows": {
          "type": "array",
          "description": "Body rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          }
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Table."
        }
      },
      "description": "A table representation similar to HTML table structure.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTable",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentShardInfo": {
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentShardInfo",
      "properties": {
        "shardCount": {
          "type": "string",
          "description": "Total number of shards.",
          "format": "int64"
        },
        "shardIndex": {
          "format": "int64",
          "type": "string",
          "description": "The 0-based index of this shard."
        },
        "textOffset": {
          "type": "string",
          "format": "int64",
          "description": "The index of the first character in Document.text in the overall document global text."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenance": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
      "type": "object",
      "description": "Structure to identify provenance relationships between annotations in different revisions.",
      "properties": {
        "parents": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent"
          },
          "type": "array",
          "description": "References to the original elements that are replaced."
        },
        "id": {
          "type": "integer",
          "deprecated": true,
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "format": "int32"
        },
        "type": {
          "description": "The type of provenance operation.",
          "type": "string",
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true
          ],
          "enumDescriptions": [
            "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.",
            "Add an element.",
            "Remove an element identified by `parent`.",
            "Updates any fields within the given provenance scope of the message. It overwrites the fields rather than replacing them. Use this when you want to update a field value of an entity without also updating all the child properties.",
            "Currently unused. Replace an element identified by `parent`.",
            "Deprecated. Request human review for the element identified by `parent`.",
            "Deprecated. Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Deprecated. Element is skipped in the validation process."
          ],
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "UPDATE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ]
        },
        "revision": {
          "deprecated": true,
          "description": "The index of the revision that produced this element.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation": {
      "properties": {
        "documentErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training."
        },
        "datasetErrorCount": {
          "type": "integer",
          "description": "The total number of dataset errors.",
          "format": "int32"
        },
        "documentErrorCount": {
          "type": "integer",
          "description": "The total number of document errors.",
          "format": "int32"
        },
        "datasetErrors": {
          "type": "array",
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation",
      "type": "object",
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset."
    },
    "GoogleCloudDocumentaiV1EvaluationReference": {
      "id": "GoogleCloudDocumentaiV1EvaluationReference",
      "properties": {
        "aggregateMetrics": {
          "description": "An aggregate of the statistics for the evaluation with fuzzy matching on.",
          "$ref": "GoogleCloudDocumentaiV1EvaluationMetrics"
        },
        "aggregateMetricsExact": {
          "description": "An aggregate of the statistics for the evaluation with fuzzy matching off.",
          "$ref": "GoogleCloudDocumentaiV1EvaluationMetrics"
        },
        "evaluation": {
          "description": "The resource name of the evaluation.",
          "type": "string"
        },
        "operation": {
          "type": "string",
          "description": "The resource name of the Long Running Operation for the evaluation."
        }
      },
      "type": "object",
      "description": "Gives a short summary of an evaluation, and links to the evaluation itself."
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchor": {
      "properties": {
        "textSegments": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment"
          },
          "description": "The text segments from the Document.text.",
          "type": "array"
        },
        "content": {
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
      "description": "Text reference indexing into the Document.text.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata",
      "properties": {
        "errorDocumentCount": {
          "format": "int32",
          "description": "Total number of documents that failed to be deleted in storage.",
          "type": "integer"
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "totalDocumentCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of documents deleting from dataset."
        },
        "individualBatchDeleteStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus"
          },
          "description": "The list of response details of each document.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentProvenanceParent": {
      "id": "GoogleCloudDocumentaiV1DocumentProvenanceParent",
      "type": "object",
      "properties": {
        "index": {
          "format": "int32",
          "type": "integer",
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision."
        },
        "id": {
          "description": "The id of the parent provenance.",
          "deprecated": true,
          "type": "integer",
          "format": "int32"
        },
        "revision": {
          "format": "int32",
          "type": "integer",
          "description": "The index of the index into current revision's parent_ids list."
        }
      },
      "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations."
    },
    "GoogleCloudDocumentaiV1DocumentPageImageQualityScores": {
      "properties": {
        "qualityScore": {
          "description": "The overall quality score. Range `[0, 1]` where `1` is perfect quality.",
          "type": "number",
          "format": "float"
        },
        "detectedDefects": {
          "description": "A list of detected defects.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageImageQualityScoresDetectedDefect"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageImageQualityScores",
      "description": "Image quality scores for the page image."
    },
    "GoogleCloudDocumentaiV1DocumentPageAnchor": {
      "properties": {
        "pageRefs": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef"
          },
          "type": "array",
          "description": "One or more references to visual page elements"
        }
      },
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.",
      "id": "GoogleCloudDocumentaiV1DocumentPageAnchor",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode": {
      "type": "object",
      "properties": {
        "barcode": {
          "$ref": "GoogleCloudDocumentaiV1beta2Barcode",
          "description": "Detailed barcode information of the DetectedBarcode."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for DetectedBarcode."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode",
      "description": "A detected barcode."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageSymbol": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageSymbol",
      "description": "A detected symbol.",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Symbol."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentRevisionHumanReview": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentRevisionHumanReview",
      "description": "Human Review information of the document.",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageTableTableRow": {
      "id": "GoogleCloudDocumentaiV1DocumentPageTableTableRow",
      "description": "A row of table cells.",
      "type": "object",
      "properties": {
        "cells": {
          "type": "array",
          "description": "Cells that make up this row.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableCell"
          }
        }
      }
    },
    "GoogleCloudDocumentaiV1Evaluation": {
      "type": "object",
      "description": "An evaluation of a ProcessorVersion's performance.",
      "id": "GoogleCloudDocumentaiV1Evaluation",
      "properties": {
        "kmsKeyName": {
          "type": "string",
          "description": "The KMS key name used for encryption."
        },
        "allEntitiesMetrics": {
          "description": "Metrics for all the entities in aggregate.",
          "$ref": "GoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time that the evaluation was created.",
          "type": "string"
        },
        "entityMetrics": {
          "additionalProperties": {
            "$ref": "GoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics"
          },
          "description": "Metrics across confidence levels, for different entities.",
          "type": "object"
        },
        "kmsKeyVersionName": {
          "type": "string",
          "description": "The KMS key version with which data is encrypted."
        },
        "documentCounters": {
          "description": "Counters for the documents used in the evaluation.",
          "$ref": "GoogleCloudDocumentaiV1EvaluationCounters"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the evaluation. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}/evaluations/{evaluation}`"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata": {
      "properties": {
        "trainingDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The training dataset validation information."
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "testDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The test dataset validation information."
        }
      },
      "description": "The metadata that represents a processor version being created.",
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3EnableProcessorResponse": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3EnableProcessorResponse",
      "description": "Response message for the EnableProcessor method. Intentionally empty proto for adding fields in future."
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyle": {
      "properties": {
        "textDecoration": {
          "type": "string",
          "description": "[Text decoration](https://www.w3schools.com/cssref/pr_text_text-decoration.asp). Follows CSS standard. "
        },
        "backgroundColor": {
          "$ref": "GoogleTypeColor",
          "description": "Text background color."
        },
        "fontWeight": {
          "description": "[Font weight](https://www.w3schools.com/cssref/pr_font_weight.asp). Possible values are `normal`, `bold`, `bolder`, and `lighter`.",
          "type": "string"
        },
        "fontFamily": {
          "type": "string",
          "description": "Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp"
        },
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        },
        "textStyle": {
          "type": "string",
          "description": "[Text style](https://www.w3schools.com/cssref/pr_font_font-style.asp). Possible values are `normal`, `italic`, and `oblique`."
        },
        "fontSize": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize",
          "description": "Font size."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyle",
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible."
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionRequestFoundationModelTuningOptions": {
      "properties": {
        "learningRateMultiplier": {
          "type": "number",
          "description": "Optional. The multiplier to apply to the recommended learning rate. Valid values are between 0.1 and 10. If not provided, recommended learning rate will be used.",
          "format": "float"
        },
        "trainSteps": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. The number of steps to run for model tuning. Valid values are between 1 and 400. If not provided, recommended steps will be used."
        }
      },
      "type": "object",
      "description": "Options to control foundation model tuning of the processor.",
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionRequestFoundationModelTuningOptions"
    },
    "GoogleCloudDocumentaiV1beta3DocumentId": {
      "properties": {
        "gcsManagedDocId": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentIdGCSManagedDocumentId",
          "description": "A document id within user-managed Cloud Storage."
        },
        "revisionRef": {
          "$ref": "GoogleCloudDocumentaiV1beta3RevisionRef",
          "description": "Points to a specific revision of the document if set."
        },
        "unmanagedDocId": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentIdUnmanagedDocumentId",
          "description": "A document id within unmanaged dataset."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentId",
      "description": "Document Identifier."
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "splitExportStats": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat"
          },
          "type": "array",
          "description": "The list of statistics for each dataset split type."
        },
        "individualExportStatuses": {
          "description": "The list of response details of each document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus"
          },
          "type": "array"
        }
      },
      "description": "Metadata of the batch export documents operation.",
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPage": {
      "description": "A page in a Document.",
      "properties": {
        "layout": {
          "description": "Layout for the page.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "pageNumber": {
          "format": "int32",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.",
          "type": "integer"
        },
        "visualElements": {
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement"
          }
        },
        "tables": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTable"
          },
          "description": "A list of visually detected tables on the page.",
          "type": "array"
        },
        "image": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImage",
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned."
        },
        "symbols": {
          "description": "A list of visually detected symbols on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageSymbol"
          },
          "type": "array"
        },
        "transforms": {
          "description": "Transformation matrices that were applied to the original document image to produce Page.image.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix"
          },
          "type": "array"
        },
        "lines": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLine"
          },
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.",
          "type": "array"
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "blocks": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageBlock"
          },
          "type": "array",
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation."
        },
        "dimension": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDimension",
          "description": "Physical dimension of the page."
        },
        "detectedBarcodes": {
          "type": "array",
          "description": "A list of detected barcodes.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode"
          }
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this page.",
          "deprecated": true
        },
        "tokens": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageToken"
          },
          "type": "array",
          "description": "A list of visually detected tokens on the page."
        },
        "paragraphs": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph"
          },
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.",
          "type": "array"
        },
        "formFields": {
          "description": "A list of visually detected form fields on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageFormField"
          },
          "type": "array"
        },
        "imageQualityScores": {
          "description": "Image quality scores.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPage",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview": {
      "description": "Human Review information of the document.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview",
      "type": "object",
      "properties": {
        "state": {
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`.",
          "type": "string"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageDetectedBarcode": {
      "id": "GoogleCloudDocumentaiV1DocumentPageDetectedBarcode",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for DetectedBarcode."
        },
        "barcode": {
          "$ref": "GoogleCloudDocumentaiV1Barcode",
          "description": "Detailed barcode information of the DetectedBarcode."
        }
      },
      "description": "A detected barcode.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionResponse": {
      "description": "The response for TrainProcessorVersion.",
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionResponse",
      "properties": {
        "processorVersion": {
          "description": "The resource name of the processor version produced by training.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageSymbol": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageSymbol",
      "description": "A detected symbol.",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "description": "Layout for Symbol.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata",
      "type": "object",
      "description": "The long-running operation metadata for the UndeployProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponse": {
      "description": "Response of the sample documents operation.",
      "type": "object",
      "properties": {
        "sampleTestStatus": {
          "description": "The status of sampling documents in test split.",
          "$ref": "GoogleRpcStatus"
        },
        "selectedDocuments": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponseSelectedDocument"
          },
          "description": "The result of the sampling process.",
          "type": "array"
        },
        "sampleTrainingStatus": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of sampling documents in training split."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponse"
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata": {
      "properties": {
        "testDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The test dataset validation information."
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "trainingDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The training dataset validation information."
        }
      },
      "description": "The metadata that represents a processor version being created.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for updating the human review configuration."
    },
    "GoogleCloudDocumentaiV1ListEvaluationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "evaluations": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1Evaluation"
          },
          "description": "The evaluations requested.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1ListEvaluationsResponse",
      "description": "The response from `ListEvaluations`.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1GcsDocuments": {
      "description": "Specifies a set of documents on Cloud Storage.",
      "id": "GoogleCloudDocumentaiV1GcsDocuments",
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "The list of documents.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1GcsDocument"
          }
        }
      }
    },
    "GoogleCloudDocumentaiV1EvaluateProcessorVersionRequest": {
      "properties": {
        "evaluationDocuments": {
          "description": "Optional. The documents used in the evaluation. If unspecified, use the processor's dataset as evaluation input.",
          "$ref": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig"
        }
      },
      "description": "Evaluates the given ProcessorVersion against the supplied documents.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1EvaluateProcessorVersionRequest"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata for the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the ImportProcessorVersion method.",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1ProcessorType": {
      "properties": {
        "allowCreation": {
          "description": "Whether the processor type allows creation. If true, users can create a processor of this processor type. Otherwise, users need to request access.",
          "type": "boolean"
        },
        "type": {
          "description": "The processor type, such as: `OCR_PROCESSOR`, `INVOICE_PROCESSOR`.",
          "type": "string"
        },
        "launchStage": {
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "UNIMPLEMENTED",
            "PRELAUNCH",
            "EARLY_ACCESS",
            "ALPHA",
            "BETA",
            "GA",
            "DEPRECATED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Do not use this default value.",
            "The feature is not yet implemented. Users can not use it.",
            "Prelaunch features are hidden from users and are only visible internally.",
            "Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.",
            "Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don't have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.",
            "Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.",
            "GA features are open to all developers and are considered stable and fully qualified for production use.",
            "Deprecated features are scheduled to be shut down and removed. For more information, see the \"Deprecation Policy\" section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation."
          ],
          "description": "Launch stage of the processor type"
        },
        "availableLocations": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1ProcessorTypeLocationInfo"
          },
          "description": "The locations in which this processor is available.",
          "type": "array"
        },
        "sampleDocumentUris": {
          "type": "array",
          "description": "A set of Cloud Storage URIs of sample documents for this processor.",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "The resource name of the processor type. Format: `projects/{project}/processorTypes/{processor_type}`",
          "type": "string"
        },
        "category": {
          "description": "The processor category, used by UI to group processor types.",
          "type": "string"
        }
      },
      "description": "A processor type is responsible for performing a certain document understanding task on a certain type of document.",
      "id": "GoogleCloudDocumentaiV1ProcessorType",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect",
      "description": "Image Quality Defects",
      "properties": {
        "confidence": {
          "description": "Confidence of detected defect. Range `[0, 1]` where `1` indicates strong confidence that the defect exists.",
          "type": "number",
          "format": "float"
        },
        "type": {
          "description": "Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1ProcessOptions": {
      "id": "GoogleCloudDocumentaiV1ProcessOptions",
      "description": "Options for Process API",
      "type": "object",
      "properties": {
        "fromEnd": {
          "type": "integer",
          "description": "Only process certain pages from the end, same as above.",
          "format": "int32"
        },
        "schemaOverride": {
          "description": "Optional. Override the schema of the ProcessorVersion. Will return an Invalid Argument error if this field is set when the underlying ProcessorVersion doesn't support schema override.",
          "$ref": "GoogleCloudDocumentaiV1DocumentSchema"
        },
        "individualPageSelector": {
          "$ref": "GoogleCloudDocumentaiV1ProcessOptionsIndividualPageSelector",
          "description": "Which pages to process (1-indexed)."
        },
        "fromStart": {
          "type": "integer",
          "description": "Only process certain pages from the start. Process all if the document has fewer pages.",
          "format": "int32"
        },
        "ocrConfig": {
          "$ref": "GoogleCloudDocumentaiV1OcrConfig",
          "description": "Only applicable to `OCR_PROCESSOR` and `FORM_PARSER_PROCESSOR`. Returns error if set on other processor types."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageFormField": {
      "type": "object",
      "properties": {
        "fieldName": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc."
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "valueDetectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for value together with confidence."
        },
        "nameDetectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for name together with confidence.",
          "type": "array"
        },
        "valueType": {
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`",
          "type": "string"
        },
        "fieldValue": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for the FormField value."
        },
        "correctedValueText": {
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction.",
          "type": "string"
        },
        "correctedKeyText": {
          "type": "string",
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction."
        }
      },
      "description": "A form field detected on the page.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageFormField"
    },
    "GoogleCloudDocumentaiV1beta3DocumentIdGCSManagedDocumentId": {
      "type": "object",
      "description": "Identifies a document uniquely within the scope of a dataset in the user-managed Cloud Storage option.",
      "id": "GoogleCloudDocumentaiV1beta3DocumentIdGCSManagedDocumentId",
      "properties": {
        "gcsUri": {
          "type": "string",
          "description": "Required. The Cloud Storage URI where the actual document is stored."
        },
        "cwDocId": {
          "description": "Id of the document (indexed) managed by Content Warehouse.",
          "type": "string",
          "deprecated": true
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata",
      "type": "object",
      "properties": {
        "individualImportStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus"
          },
          "description": "The list of response details of each document.",
          "type": "array"
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "importConfigValidationResults": {
          "description": "Validation statuses of the batch documents import config.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult"
          }
        },
        "totalDocumentCount": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of the documents that are qualified for importing."
        }
      },
      "description": "Metadata of the import document operation."
    },
    "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage": {
      "description": "Detected language for a structural component.",
      "type": "object",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The [BCP-47 language code](https://www.unicode.org/reports/tr35/#Unicode_locale_identifier), such as `en-US` or `sr-Latn`."
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Confidence of detected language. Range `[0, 1]`."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
    },
    "GoogleCloudDocumentaiV1beta1GcsDestination": {
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "id": "GoogleCloudDocumentaiV1beta1GcsDestination",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores",
      "type": "object",
      "description": "Image quality scores for the page image.",
      "properties": {
        "qualityScore": {
          "format": "float",
          "description": "The overall quality score. Range `[0, 1]` where `1` is perfect quality.",
          "type": "number"
        },
        "detectedDefects": {
          "type": "array",
          "description": "A list of detected defects.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect"
          }
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentStyleFontSize": {
      "type": "object",
      "properties": {
        "size": {
          "format": "float",
          "description": "Font size for the text.",
          "type": "number"
        },
        "unit": {
          "type": "string",
          "description": "Unit for the font size. Follows CSS naming (such as `in`, `px`, and `pt`)."
        }
      },
      "description": "Font size with unit.",
      "id": "GoogleCloudDocumentaiV1DocumentStyleFontSize"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsResponse": {
      "description": "The response proto of ExportDocuments method.",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the DeleteProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "id": "GoogleCloudDocumentaiV1NormalizedVertex",
      "properties": {
        "y": {
          "type": "number",
          "description": "Y coordinate (starts from the top of the image).",
          "format": "float"
        },
        "x": {
          "format": "float",
          "type": "number",
          "description": "X coordinate."
        }
      },
      "type": "object"
    },
    "GoogleCloudLocationListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "id": "GoogleCloudLocationListLocationsResponse",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudLocationLocation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata",
      "description": "The long-running operation metadata for the SetDefaultProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics": {
      "description": "Metrics across multiple confidence levels.",
      "id": "GoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics",
      "properties": {
        "auprc": {
          "format": "float",
          "description": "The calculated area under the precision recall curve (AUPRC), computed by integrating over all confidence thresholds.",
          "type": "number"
        },
        "auprcExact": {
          "format": "float",
          "type": "number",
          "description": "The AUPRC for metrics with fuzzy matching disabled, i.e., exact matching only."
        },
        "confidenceLevelMetricsExact": {
          "type": "array",
          "description": "Metrics across confidence levels with only exact matching.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1EvaluationConfidenceLevelMetrics"
          }
        },
        "metricsType": {
          "description": "The metrics type for the label.",
          "enum": [
            "METRICS_TYPE_UNSPECIFIED",
            "AGGREGATE"
          ],
          "type": "string",
          "enumDescriptions": [
            "The metrics type is unspecified. By default, metrics without a particular specification are for leaf entity types (i.e., top-level entity types without child types, or child types which are not parent types themselves).",
            "Indicates whether metrics for this particular label type represent an aggregate of metrics for other types instead of being based on actual TP/FP/FN values for the label type. Metrics for parent (i.e., non-leaf) entity types are an aggregate of metrics for their children."
          ]
        },
        "confidenceLevelMetrics": {
          "description": "Metrics across confidence levels with fuzzy matching enabled.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1EvaluationConfidenceLevelMetrics"
          },
          "type": "array"
        },
        "estimatedCalibrationErrorExact": {
          "description": "The ECE for the predicted entities with fuzzy matching disabled, i.e., exact matching only.",
          "type": "number",
          "format": "float"
        },
        "estimatedCalibrationError": {
          "format": "float",
          "type": "number",
          "description": "The Estimated Calibration Error (ECE) of the confidence of the predicted entities."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat": {
      "properties": {
        "totalDocumentCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of documents with the given dataset split type to be exported."
        },
        "splitType": {
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ],
          "description": "The dataset split type.",
          "enumDescriptions": [
            "Default value if the enum is not set.",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ],
          "type": "string"
        }
      },
      "description": "The statistic representing a dataset split type for this export.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat"
    },
    "GoogleCloudDocumentaiV1UndeployProcessorVersionRequest": {
      "description": "Request message for the UndeployProcessorVersion method.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionRequest"
    },
    "GoogleCloudDocumentaiV1ProcessorTypeLocationInfo": {
      "id": "GoogleCloudDocumentaiV1ProcessorTypeLocationInfo",
      "properties": {
        "locationId": {
          "type": "string",
          "description": "The location ID. For supported locations, refer to [regional and multi-regional support](/document-ai/docs/regions)."
        }
      },
      "type": "object",
      "description": "The location information about where the processor is available."
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment": {
      "type": "object",
      "properties": {
        "startIndex": {
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "type": "string",
          "format": "int64"
        },
        "endIndex": {
          "format": "int64",
          "description": "TextSegment half open end UTF-8 char index in the Document.text.",
          "type": "string"
        }
      },
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment"
    },
    "GoogleCloudDocumentaiV1DocumentPageFormField": {
      "properties": {
        "correctedValueText": {
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction.",
          "type": "string"
        },
        "valueDetectedLanguages": {
          "description": "A list of detected languages for value together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          }
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "fieldName": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc."
        },
        "fieldValue": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for the FormField value."
        },
        "correctedKeyText": {
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction.",
          "type": "string"
        },
        "valueType": {
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`",
          "type": "string"
        },
        "nameDetectedLanguages": {
          "description": "A list of detected languages for name together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageFormField",
      "type": "object",
      "description": "A form field detected on the page."
    },
    "GoogleCloudDocumentaiV1DocumentPageImageQualityScoresDetectedDefect": {
      "description": "Image Quality Defects",
      "properties": {
        "confidence": {
          "description": "Confidence of detected defect. Range `[0, 1]` where `1` indicates strong confidence that the defect exists.",
          "format": "float",
          "type": "number"
        },
        "type": {
          "type": "string",
          "description": "Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageImageQualityScoresDetectedDefect"
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse": {
      "description": "Response message for the DeployProcessorVersion method.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak": {
      "id": "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak",
      "description": "Detected break at the end of a Token.",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ],
          "type": "string",
          "description": "Detected break type."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3CommonOperationMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
      "description": "The common metadata for long running operations.",
      "type": "object",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "description": "The state of the operation."
        },
        "resource": {
          "type": "string",
          "description": "A related resource to this operation."
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The creation time of the operation."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time of the operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "description": "The long-running operation metadata for the DeleteProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig": {
      "id": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig",
      "type": "object",
      "description": "The sharding config for the output document.",
      "properties": {
        "pagesPerShard": {
          "type": "integer",
          "format": "int32",
          "description": "The number of pages per shard."
        },
        "pagesOverlap": {
          "description": "The number of overlapping pages between consecutive shards.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiV1BatchDocumentsInputConfig": {
      "type": "object",
      "description": "The common config to specify a set of documents used as input.",
      "properties": {
        "gcsDocuments": {
          "description": "The set of documents individually specified on Cloud Storage.",
          "$ref": "GoogleCloudDocumentaiV1GcsDocuments"
        },
        "gcsPrefix": {
          "$ref": "GoogleCloudDocumentaiV1GcsPrefix",
          "description": "The set of documents that match the specified Cloud Storage `gcs_prefix`."
        }
      },
      "id": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig"
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize",
      "properties": {
        "unit": {
          "description": "Unit for the font size. Follows CSS naming (such as `in`, `px`, and `pt`).",
          "type": "string"
        },
        "size": {
          "description": "Font size for the text.",
          "format": "float",
          "type": "number"
        }
      },
      "description": "Font size with unit.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageToken": {
      "id": "GoogleCloudDocumentaiV1DocumentPageToken",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for Token."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "deprecated": true,
          "description": "The history of this annotation."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "detectedBreak": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak",
          "description": "Detected break at the end of a Token."
        },
        "styleInfo": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageTokenStyleInfo",
          "description": "Text style attributes."
        }
      },
      "description": "A detected token.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect": {
      "description": "Image Quality Defects",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect",
      "type": "object",
      "properties": {
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Confidence of detected defect. Range `[0, 1]` where `1` indicates strong confidence that the defect exists."
        },
        "type": {
          "description": "Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityRelation": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation",
      "type": "object",
      "description": "Relationship between Entities.",
      "properties": {
        "subjectId": {
          "type": "string",
          "description": "Subject entity id."
        },
        "relation": {
          "type": "string",
          "description": "Relationship description."
        },
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetResponse",
      "properties": {},
      "description": "The response proto of ResyncDataset method."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageFormField": {
      "type": "object",
      "description": "A form field detected on the page.",
      "properties": {
        "nameDetectedLanguages": {
          "description": "A list of detected languages for name together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "valueType": {
          "type": "string",
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`"
        },
        "fieldValue": {
          "description": "Layout for the FormField value.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "fieldName": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc."
        },
        "valueDetectedLanguages": {
          "type": "array",
          "description": "A list of detected languages for value together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "correctedKeyText": {
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction.",
          "type": "string"
        },
        "correctedValueText": {
          "type": "string",
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageFormField"
    },
    "GoogleCloudDocumentaiV1beta3GcsPrefix": {
      "properties": {
        "gcsUriPrefix": {
          "type": "string",
          "description": "The URI prefix."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3GcsPrefix",
      "type": "object",
      "description": "Specifies all documents on Cloud Storage with a common prefix."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage": {
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The [BCP-47 language code](https://www.unicode.org/reports/tr35/#Unicode_locale_identifier), such as `en-US` or `sr-Latn`."
        },
        "confidence": {
          "format": "float",
          "description": "Confidence of detected language. Range `[0, 1]`.",
          "type": "number"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage",
      "type": "object",
      "description": "Detected language for a structural component."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLayout": {
      "description": "Visual element describing a layout unit on a page.",
      "properties": {
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "boundingPoly": {
          "description": "The bounding polygon for the Layout.",
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly"
        },
        "orientation": {
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ],
          "description": "Detected orientation for the Layout.",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.",
          "format": "float"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
    },
    "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse": {
      "description": "Response message for the UndeployProcessorVersion method.",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse": {
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete.",
      "properties": {
        "responses": {
          "type": "array",
          "description": "Responses for each individual document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1OcrConfigPremiumFeatures": {
      "type": "object",
      "description": "Configurations for premium OCR features.",
      "properties": {
        "enableSelectionMarkDetection": {
          "description": "Turn on selection mark detector in OCR engine. Only available in OCR 2.0 (and later) processors.",
          "type": "boolean"
        },
        "enableMathOcr": {
          "description": "Turn on the model that can extract LaTeX math formulas.",
          "type": "boolean"
        },
        "computeStyleInfo": {
          "description": "Turn on font identification model and return font style information.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudDocumentaiV1OcrConfigPremiumFeatures"
    },
    "GoogleCloudDocumentaiV1ProcessorVersion": {
      "id": "GoogleCloudDocumentaiV1ProcessorVersion",
      "type": "object",
      "description": "A processor version is an implementation of a processor. Each processor can have multiple versions, pretrained by Google internally or uptrained by the customer. A processor can only have one default version at a time. Its document-processing behavior is defined by that version.",
      "properties": {
        "latestEvaluation": {
          "$ref": "GoogleCloudDocumentaiV1EvaluationReference",
          "description": "The most recently invoked evaluation for the processor version."
        },
        "googleManaged": {
          "readOnly": true,
          "description": "Output only. Denotes that this `ProcessorVersion` is managed by Google.",
          "type": "boolean"
        },
        "createTime": {
          "description": "The time the processor version was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "modelType": {
          "enumDescriptions": [
            "The processor version has unspecified model type.",
            "The processor version has generative model type.",
            "The processor version has custom model type."
          ],
          "readOnly": true,
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "MODEL_TYPE_GENERATIVE",
            "MODEL_TYPE_CUSTOM"
          ],
          "type": "string",
          "description": "Output only. The model type of this processor version."
        },
        "kmsKeyName": {
          "type": "string",
          "description": "The KMS key name used for encryption."
        },
        "kmsKeyVersionName": {
          "description": "The KMS key version with which data is encrypted.",
          "type": "string"
        },
        "documentSchema": {
          "$ref": "GoogleCloudDocumentaiV1DocumentSchema",
          "description": "The schema of the processor version. Describes the output."
        },
        "deprecationInfo": {
          "$ref": "GoogleCloudDocumentaiV1ProcessorVersionDeprecationInfo",
          "description": "If set, information about the eventual deprecation of this version."
        },
        "state": {
          "description": "The state of the processor version.",
          "enumDescriptions": [
            "The processor version is in an unspecified state.",
            "The processor version is deployed and can be used for processing.",
            "The processor version is being deployed.",
            "The processor version is not deployed and cannot be used for processing.",
            "The processor version is being undeployed.",
            "The processor version is being created.",
            "The processor version is being deleted.",
            "The processor version failed and is in an indeterminate state.",
            "The processor version is being imported."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "DEPLOYED",
            "DEPLOYING",
            "UNDEPLOYED",
            "UNDEPLOYING",
            "CREATING",
            "DELETING",
            "FAILED",
            "IMPORTING"
          ]
        },
        "displayName": {
          "description": "The display name of the processor version.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the processor version. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}`"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1InputConfig": {
      "id": "GoogleCloudDocumentaiV1beta1InputConfig",
      "description": "The desired input location and metadata.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudDocumentaiV1beta1GcsSource",
          "description": "The Google Cloud Storage location to read the input from. This must be a single file."
        },
        "mimeType": {
          "type": "string",
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus": {
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus",
      "description": "The status of a each individual document in the batch process.",
      "type": "object",
      "properties": {
        "humanReviewOperation": {
          "description": "The name of the operation triggered by the processed document. If the human review process isn't triggered, this field will be empty. It has the same response type and metadata as the long-running operation returned by the ReviewDocument method.",
          "deprecated": true,
          "type": "string"
        },
        "inputGcsSource": {
          "type": "string",
          "description": "The source of the document, same as the input_gcs_source field in the request when the batch process started."
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status processing the document."
        },
        "outputGcsDestination": {
          "description": "The Cloud Storage output destination (in the request as DocumentOutputConfig.GcsOutputConfig.gcs_uri) of the processed document if it was successful, otherwise empty.",
          "type": "string"
        },
        "humanReviewStatus": {
          "description": "The status of human review on the processed document.",
          "$ref": "GoogleCloudDocumentaiV1beta3HumanReviewStatus"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata",
      "type": "object",
      "properties": {
        "datasetResyncStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus"
          },
          "type": "array",
          "description": "The list of dataset resync statuses. Not checked when ResyncDatasetRequest.dataset_documents is specified."
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "individualDocumentResyncStatuses": {
          "description": "The list of document resync statuses. The same document could have multiple `individual_document_resync_statuses` if it has multiple inconsistencies.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus"
          }
        }
      },
      "description": "The metadata proto of `ResyncDataset` method."
    },
    "GoogleCloudDocumentaiV1FetchProcessorTypesResponse": {
      "properties": {
        "processorTypes": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1ProcessorType"
          },
          "type": "array",
          "description": "The list of processor types."
        }
      },
      "id": "GoogleCloudDocumentaiV1FetchProcessorTypesResponse",
      "description": "Response message for the FetchProcessorTypes method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionMetadata",
      "description": "Metadata of the EvaluateProcessorVersion method."
    },
    "GoogleTypeTimeZone": {
      "type": "object",
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "id": "GoogleTypeTimeZone",
      "properties": {
        "id": {
          "type": "string",
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\"."
        },
        "version": {
          "type": "string",
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object",
      "description": "The long-running operation metadata for the CreateLabelerPool method.",
      "id": "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata"
    },
    "GoogleCloudDocumentaiV1EvaluateProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1EvaluateProcessorVersionMetadata",
      "type": "object",
      "description": "Metadata of the EvaluateProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1ListProcessorVersionsResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1ListProcessorVersionsResponse",
      "properties": {
        "processorVersions": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1ProcessorVersion"
          },
          "description": "The list of processors."
        },
        "nextPageToken": {
          "description": "Points to the next processor, otherwise empty.",
          "type": "string"
        }
      },
      "description": "Response message for the ListProcessorVersions method."
    },
    "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse": {
      "type": "object",
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The destination processor version name."
        }
      },
      "description": "The response message for the ImportProcessorVersion method.",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsResponse",
      "description": "Response of the batch update documents operation.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata": {
      "id": "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata",
      "properties": {
        "questionId": {
          "type": "string",
          "description": "The Crowd Compute question ID."
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the ReviewDocument method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata",
      "description": "The long-running operation metadata for the UndeployProcessorVersion method."
    },
    "GoogleCloudDocumentaiUiv1beta3RevisionRef": {
      "id": "GoogleCloudDocumentaiUiv1beta3RevisionRef",
      "type": "object",
      "properties": {
        "latestProcessorVersion": {
          "type": "string",
          "description": "Reads the revision generated by the processor version. The format takes the full resource name of processor version. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`"
        },
        "revisionCase": {
          "enumDescriptions": [
            "Unspecified case, fall back to read the `LATEST_HUMAN_REVIEW`.",
            "The latest revision made by a human.",
            "The latest revision based on timestamp.",
            "The first (OCR) revision."
          ],
          "type": "string",
          "enum": [
            "REVISION_CASE_UNSPECIFIED",
            "LATEST_HUMAN_REVIEW",
            "LATEST_TIMESTAMP",
            "BASE_OCR_REVISION"
          ],
          "description": "Reads the revision by the predefined case."
        },
        "revisionId": {
          "type": "string",
          "description": "Reads the revision given by the id."
        }
      },
      "description": "The revision reference specifies which revision on the document to read."
    },
    "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object",
      "description": "The long-running operation metadata for the DisableProcessor method.",
      "id": "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata"
    },
    "GoogleCloudDocumentaiV1ProcessOptionsIndividualPageSelector": {
      "properties": {
        "pages": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "description": "Optional. Indices of the pages (starting from 1)."
        }
      },
      "id": "GoogleCloudDocumentaiV1ProcessOptionsIndividualPageSelector",
      "description": "A list of individual page numbers.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionRequest": {
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionRequest",
      "description": "Request message for the TrainProcessorVersion method.",
      "properties": {
        "customDocumentExtractionOptions": {
          "description": "Options to control Custom Document Extraction (CDE) Processor.",
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionRequestCustomDocumentExtractionOptions"
        },
        "processorVersion": {
          "description": "Required. The processor version to be created.",
          "$ref": "GoogleCloudDocumentaiV1ProcessorVersion"
        },
        "baseProcessorVersion": {
          "description": "Optional. The processor version to use as a base for training. This processor version must be a child of `parent`. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`.",
          "type": "string"
        },
        "documentSchema": {
          "$ref": "GoogleCloudDocumentaiV1DocumentSchema",
          "description": "Optional. The schema the processor version will be trained with."
        },
        "inputData": {
          "description": "Optional. The input data used to train the ProcessorVersion.",
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionRequestInputData"
        },
        "foundationModelTuningOptions": {
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionRequestFoundationModelTuningOptions",
          "description": "Options to control foundation model tuning of a processor."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3Dataset": {
      "type": "object",
      "properties": {
        "spannerIndexingConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta3DatasetSpannerIndexingConfig",
          "description": "Optional. A lightweight indexing source with low latency and high reliability, but lacking advanced features like CMEK and content-based search."
        },
        "name": {
          "description": "Dataset resource name. Format: `projects/{project}/locations/{location}/processors/{processor}/dataset`",
          "type": "string"
        },
        "gcsManagedConfig": {
          "description": "Optional. User-managed Cloud Storage dataset configuration. Use this configuration if the dataset documents are stored under a user-managed Cloud Storage location.",
          "$ref": "GoogleCloudDocumentaiV1beta3DatasetGCSManagedConfig"
        },
        "unmanagedDatasetConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta3DatasetUnmanagedDatasetConfig",
          "description": "Optional. Unmanaged dataset configuration. Use this configuration if the dataset documents are managed by the document service internally (not user-managed)."
        },
        "documentWarehouseConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta3DatasetDocumentWarehouseConfig",
          "description": "Optional. Deprecated. Warehouse-based dataset configuration is not supported.",
          "deprecated": true
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "UNINITIALIZED",
            "INITIALIZING",
            "INITIALIZED"
          ],
          "enumDescriptions": [
            "Default unspecified enum, should not be used.",
            "Dataset has not been initialized.",
            "Dataset is being initialized.",
            "Dataset has been initialized."
          ],
          "description": "Required. State of the dataset. Ignored when updating dataset.",
          "type": "string"
        }
      },
      "description": "A singleton resource under a Processor which configures a collection of documents.",
      "id": "GoogleCloudDocumentaiV1beta3Dataset"
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent": {
      "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent",
      "type": "object",
      "properties": {
        "revision": {
          "description": "The index of the index into current revision's parent_ids list.",
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "deprecated": true,
          "description": "The id of the parent provenance.",
          "format": "int32"
        },
        "index": {
          "type": "integer",
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata",
      "description": "The long-running operation metadata for DeleteLabelerPool.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata",
      "type": "object",
      "description": "The long-running operation metadata for the EnableProcessor method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleLongrunningListOperationsResponse": {
      "properties": {
        "operations": {
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudDocumentaiV1ReviewDocumentRequest": {
      "description": "Request message for the ReviewDocument method.",
      "id": "GoogleCloudDocumentaiV1ReviewDocumentRequest",
      "type": "object",
      "properties": {
        "priority": {
          "enumDescriptions": [
            "The default priority level.",
            "The urgent priority level. The labeling manager should allocate labeler resource to the urgent task queue to respect this priority level."
          ],
          "description": "The priority of the human review task.",
          "enum": [
            "DEFAULT",
            "URGENT"
          ],
          "type": "string"
        },
        "enableSchemaValidation": {
          "description": "Whether the validation should be performed on the ad-hoc review request.",
          "type": "boolean"
        },
        "documentSchema": {
          "$ref": "GoogleCloudDocumentaiV1DocumentSchema",
          "description": "The document schema of the human review task."
        },
        "inlineDocument": {
          "$ref": "GoogleCloudDocumentaiV1Document",
          "description": "An inline document proto."
        }
      }
    },
    "GoogleCloudLocationLocation": {
      "type": "object",
      "id": "GoogleCloudLocationLocation",
      "description": "A resource that represents a Google Cloud location.",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse": {
      "description": "Response message for the DeployProcessorVersion method.",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DatasetGCSManagedConfig": {
      "description": "Configuration specific to the Cloud Storage-based implementation.",
      "properties": {
        "gcsPrefix": {
          "$ref": "GoogleCloudDocumentaiV1beta3GcsPrefix",
          "description": "Required. The Cloud Storage URI (a directory) where the documents belonging to the dataset must be stored."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DatasetGCSManagedConfig"
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata",
      "type": "object",
      "description": "The long-running operation metadata for the DisableProcessor method."
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse",
      "description": "Response message for the DisableProcessor method. Intentionally empty proto for adding fields in future.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentSchemaMetadata": {
      "id": "GoogleCloudDocumentaiV1DocumentSchemaMetadata",
      "properties": {
        "documentSplitter": {
          "type": "boolean",
          "description": "If true, a `document` entity type can be applied to subdocument (splitting). Otherwise, it can only be applied to the entire document (classification)."
        },
        "skipNamingValidation": {
          "type": "boolean",
          "description": "If set, we will skip the naming format validation in the schema. So the string values in `DocumentSchema.EntityType.name` and `DocumentSchema.EntityType.Property.name` will not be checked."
        },
        "prefixedNamingOnProperties": {
          "description": "If set, all the nested entities must be prefixed with the parents.",
          "type": "boolean"
        },
        "documentAllowMultipleLabels": {
          "description": "If true, on a given page, there can be multiple `document` annotations covering it.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Metadata for global schema behavior."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageMatrix": {
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix",
      "properties": {
        "type": {
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "format": "int32",
          "type": "integer"
        },
        "data": {
          "description": "The matrix data.",
          "type": "string",
          "format": "byte"
        },
        "cols": {
          "type": "integer",
          "description": "Number of columns in the matrix.",
          "format": "int32"
        },
        "rows": {
          "description": "Number of rows in the matrix.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2GcsDestination": {
      "type": "object",
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "id": "GoogleCloudDocumentaiV1beta2GcsDestination",
      "properties": {
        "uri": {
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata",
      "description": "The long-running operation metadata for the DeployProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize": {
      "properties": {
        "unit": {
          "description": "Unit for the font size. Follows CSS naming (such as `in`, `px`, and `pt`).",
          "type": "string"
        },
        "size": {
          "description": "Font size for the text.",
          "format": "float",
          "type": "number"
        }
      },
      "description": "Font size with unit.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1EnableProcessorMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1EnableProcessorMetadata",
      "description": "The long-running operation metadata for the EnableProcessor method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleTypePostalAddress": {
      "properties": {
        "addressLines": {
          "type": "array",
          "description": "Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).",
          "items": {
            "type": "string"
          }
        },
        "postalCode": {
          "type": "string",
          "description": "Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.)."
        },
        "administrativeArea": {
          "type": "string",
          "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated."
        },
        "revision": {
          "type": "integer",
          "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.",
          "format": "int32"
        },
        "locality": {
          "type": "string",
          "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines."
        },
        "recipients": {
          "description": "Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "regionCode": {
          "type": "string",
          "description": "Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See https://cldr.unicode.org/ and https://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland."
        },
        "sublocality": {
          "type": "string",
          "description": "Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts."
        },
        "languageCode": {
          "type": "string",
          "description": "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\"."
        },
        "sortingCode": {
          "type": "string",
          "description": "Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire)."
        },
        "organization": {
          "description": "Optional. The name of the organization at the address.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleTypePostalAddress",
      "description": "Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an internationalization-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLine": {
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLine",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "description": "Layout for Line.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "deprecated": true,
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef": {
      "type": "object",
      "properties": {
        "layoutId": {
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.",
          "deprecated": true,
          "type": "string"
        },
        "page": {
          "format": "int64",
          "description": "Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json.",
          "type": "string"
        },
        "boundingPoly": {
          "description": "Optional. Identifies the bounding polygon of a layout element on the page. If `layout_type` is set, the bounding polygon must be exactly the same to the layout element it's referring to.",
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly"
        },
        "confidence": {
          "format": "float",
          "description": "Optional. Confidence of detected page element, if applicable. Range `[0, 1]`.",
          "type": "number"
        },
        "layoutType": {
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ],
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "type": "string"
        }
      },
      "description": "Represents a weak reference to a page element within a document.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef"
    },
    "GoogleCloudDocumentaiV1beta1OperationMetadata": {
      "id": "GoogleCloudDocumentaiV1beta1OperationMetadata",
      "type": "object",
      "description": "Contains metadata for the BatchProcessDocuments operation.",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "The creation time of the operation.",
          "format": "google-datetime"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ],
          "description": "The state of the current batch processing.",
          "type": "string",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ]
        },
        "updateTime": {
          "type": "string",
          "description": "The last update time of the operation.",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentLabel": {
      "description": "Label attaches schema information and/or other metadata to segments within a Document. Multiple Labels on a single field can denote either different labels, different instances of the same label created at different times, or some combination of both.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentLabel",
      "properties": {
        "confidence": {
          "type": "number",
          "description": "Confidence score between 0 and 1 for label assignment.",
          "format": "float"
        },
        "name": {
          "type": "string",
          "description": "Name of the label. When the label is generated from AutoML Text Classification model, this field represents the name of the category."
        },
        "automlModel": {
          "type": "string",
          "description": "Label is generated AutoML model. This field stores the full resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchor": {
      "type": "object",
      "properties": {
        "pageRefs": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef"
          },
          "description": "One or more references to visual page elements"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor",
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types."
    },
    "GoogleCloudDocumentaiV1beta2BoundingPoly": {
      "id": "GoogleCloudDocumentaiV1beta2BoundingPoly",
      "description": "A bounding polygon for the detected image annotation.",
      "properties": {
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2NormalizedVertex"
          }
        },
        "vertices": {
          "description": "The bounding polygon vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2Vertex"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentOutputConfig": {
      "type": "object",
      "description": "Config that controls the output of documents. All documents will be written as a JSON file.",
      "id": "GoogleCloudDocumentaiV1DocumentOutputConfig",
      "properties": {
        "gcsOutputConfig": {
          "description": "Output config to write the results to Cloud Storage.",
          "$ref": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentSchema": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentSchema",
      "description": "The schema defines the output of the processed document by a processor.",
      "properties": {
        "metadata": {
          "$ref": "GoogleCloudDocumentaiV1DocumentSchemaMetadata",
          "description": "Metadata of the schema."
        },
        "description": {
          "type": "string",
          "description": "Description of the schema."
        },
        "entityTypes": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentSchemaEntityType"
          },
          "type": "array",
          "description": "Entity types of the schema."
        },
        "displayName": {
          "type": "string",
          "description": "Display name to show to users."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageImage": {
      "id": "GoogleCloudDocumentaiV1DocumentPageImage",
      "type": "object",
      "properties": {
        "height": {
          "format": "int32",
          "type": "integer",
          "description": "Height of the image in pixels."
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Width of the image in pixels."
        },
        "content": {
          "description": "Raw byte content of the image.",
          "type": "string",
          "format": "byte"
        },
        "mimeType": {
          "description": "Encoding [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml) for the image.",
          "type": "string"
        }
      },
      "description": "Rendered image contents for this page."
    },
    "GoogleCloudDocumentaiV1SetDefaultProcessorVersionRequest": {
      "description": "Request message for the SetDefaultProcessorVersion method.",
      "properties": {
        "defaultProcessorVersion": {
          "type": "string",
          "description": "Required. The resource name of child ProcessorVersion to use as default. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{version}`"
        }
      },
      "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionRequest",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage": {
      "description": "Detected language for a structural component.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage",
      "properties": {
        "confidence": {
          "format": "float",
          "description": "Confidence of detected language. Range `[0, 1]`.",
          "type": "number"
        },
        "languageCode": {
          "type": "string",
          "description": "The [BCP-47 language code](https://www.unicode.org/reports/tr35/#Unicode_locale_identifier), such as `en-US` or `sr-Latn`."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell": {
      "properties": {
        "colSpan": {
          "type": "integer",
          "format": "int32",
          "description": "How many columns this cell spans."
        },
        "rowSpan": {
          "description": "How many rows this cell spans.",
          "format": "int32",
          "type": "integer"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for TableCell."
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        }
      },
      "description": "A cell representation inside the table.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageBlock": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageBlock",
      "properties": {
        "layout": {
          "description": "Layout for Block.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "deprecated": true
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        }
      },
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DeployProcessorVersionRequest": {
      "properties": {},
      "id": "GoogleCloudDocumentaiV1DeployProcessorVersionRequest",
      "type": "object",
      "description": "Request message for the DeployProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta3RevisionRef": {
      "description": "The revision reference specifies which revision on the document to read.",
      "properties": {
        "revisionCase": {
          "enumDescriptions": [
            "Unspecified case, fall back to read the `LATEST_HUMAN_REVIEW`.",
            "The latest revision made by a human.",
            "The latest revision based on timestamp.",
            "The first (OCR) revision."
          ],
          "description": "Reads the revision by the predefined case.",
          "enum": [
            "REVISION_CASE_UNSPECIFIED",
            "LATEST_HUMAN_REVIEW",
            "LATEST_TIMESTAMP",
            "BASE_OCR_REVISION"
          ],
          "type": "string"
        },
        "latestProcessorVersion": {
          "type": "string",
          "description": "Reads the revision generated by the processor version. The format takes the full resource name of processor version. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`"
        },
        "revisionId": {
          "description": "Reads the revision given by the id.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3RevisionRef",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue": {
      "description": "Parsed and normalized entity value.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue",
      "properties": {
        "floatValue": {
          "description": "Float value.",
          "format": "float",
          "type": "number"
        },
        "addressValue": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto"
        },
        "integerValue": {
          "type": "integer",
          "description": "Integer value.",
          "format": "int32"
        },
        "text": {
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.",
          "type": "string"
        },
        "booleanValue": {
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes.",
          "type": "boolean"
        },
        "datetimeValue": {
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto",
          "$ref": "GoogleTypeDateTime"
        },
        "dateValue": {
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto",
          "$ref": "GoogleTypeDate"
        },
        "moneyValue": {
          "$ref": "GoogleTypeMoney",
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponseSelectedDocument": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponseSelectedDocument",
      "properties": {
        "documentId": {
          "description": "An internal identifier for document.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLayout": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
      "description": "Visual element describing a layout unit on a page.",
      "properties": {
        "confidence": {
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.",
          "type": "number",
          "format": "float"
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        },
        "orientation": {
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ],
          "type": "string",
          "description": "Detected orientation for the Layout.",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ]
        },
        "boundingPoly": {
          "description": "The bounding polygon for the Layout.",
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus": {
      "properties": {
        "outputGcsDestination": {
          "description": "The output_gcs_destination of the exported document if it was successful, otherwise empty.",
          "type": "string"
        },
        "status": {
          "description": "The status of the exporting of the document.",
          "$ref": "GoogleRpcStatus"
        },
        "documentId": {
          "description": "The path to source docproto of the document.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus",
      "type": "object",
      "description": "The status of each individual document in the export process."
    },
    "GoogleTypeMoney": {
      "properties": {
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        },
        "units": {
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents an amount of money with its currency type.",
      "id": "GoogleTypeMoney"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The common metadata about the operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "description": "Metadata message associated with the ExportProcessorVersion operation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataIndividualImportStatus": {
      "type": "object",
      "description": "The status of each individual document in the import process.",
      "properties": {
        "outputDocumentId": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentId",
          "description": "The document id of imported document if it was successful, otherwise empty."
        },
        "inputGcsSource": {
          "type": "string",
          "description": "The source Cloud Storage URI of the document."
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of the importing of the document."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataIndividualImportStatus"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageParagraph": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph",
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "deprecated": true,
          "description": "The history of this annotation."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Paragraph."
        }
      },
      "description": "A collection of lines that a human would perceive as a paragraph."
    },
    "GoogleCloudDocumentaiV1DocumentEntity": {
      "properties": {
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor",
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text."
        },
        "type": {
          "type": "string",
          "description": "Required. Entity type from a schema e.g. `Address`."
        },
        "pageAnchor": {
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageAnchor"
        },
        "confidence": {
          "type": "number",
          "description": "Optional. Confidence of detected Schema entity. Range `[0, 1]`.",
          "format": "float"
        },
        "properties": {
          "type": "array",
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentEntity"
          }
        },
        "normalizedValue": {
          "$ref": "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue",
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types."
        },
        "id": {
          "type": "string",
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document."
        },
        "mentionId": {
          "description": "Optional. Deprecated. Use `id` field instead.",
          "type": "string"
        },
        "mentionText": {
          "description": "Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.",
          "type": "string"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "Optional. The history of this annotation."
        },
        "redacted": {
          "type": "boolean",
          "description": "Optional. Whether the entity will be redacted for de-identification purposes."
        }
      },
      "type": "object",
      "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.",
      "id": "GoogleCloudDocumentaiV1DocumentEntity"
    },
    "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse": {
      "properties": {},
      "description": "Response message for the SetDefaultProcessorVersion method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus": {
      "description": "Resync status for each document per inconsistency type.",
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus",
      "type": "object",
      "properties": {
        "documentId": {
          "description": "The document identifier.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of resyncing the document with regards to the detected inconsistency. Empty if ResyncDatasetRequest.validate_only is `true`."
        },
        "documentInconsistencyType": {
          "enumDescriptions": [
            "Default value.",
            "The document proto is invalid.",
            "Indexed docproto metadata is mismatched.",
            "The page image or thumbnails are missing."
          ],
          "enum": [
            "DOCUMENT_INCONSISTENCY_TYPE_UNSPECIFIED",
            "DOCUMENT_INCONSISTENCY_TYPE_INVALID_DOCPROTO",
            "DOCUMENT_INCONSISTENCY_TYPE_MISMATCHED_METADATA",
            "DOCUMENT_INCONSISTENCY_TYPE_NO_PAGE_IMAGE"
          ],
          "type": "string",
          "description": "The type of document inconsistency."
        }
      }
    },
    "GoogleCloudDocumentaiV1EvaluateProcessorVersionResponse": {
      "properties": {
        "evaluation": {
          "description": "The resource name of the created evaluation.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1EvaluateProcessorVersionResponse",
      "description": "Response of the EvaluateProcessorVersion method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1OcrConfigHints": {
      "id": "GoogleCloudDocumentaiV1OcrConfigHints",
      "type": "object",
      "description": "Hints for OCR Engine",
      "properties": {
        "languageHints": {
          "items": {
            "type": "string"
          },
          "description": "List of BCP-47 language codes to use for OCR. In most cases, not specifying it yields the best results since it enables automatic language detection. For languages based on the Latin alphabet, setting hints is not needed. In rare cases, when the language of the text in the image is known, setting a hint will help get better results (although it will be a significant hindrance if the hint is wrong).",
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1Barcode": {
      "description": "Encodes the detailed information of a barcode.",
      "type": "object",
      "properties": {
        "valueFormat": {
          "type": "string",
          "description": "Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license."
        },
        "format": {
          "type": "string",
          "description": "Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type."
        },
        "rawValue": {
          "type": "string",
          "description": "Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1Barcode"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageToken": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageToken",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Token."
        },
        "styleInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo",
          "description": "Text style attributes."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "detectedBreak": {
          "description": "Detected break at the end of a Token.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak"
        },
        "provenance": {
          "deprecated": true,
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        }
      },
      "type": "object",
      "description": "A detected token."
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyle": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyle",
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "type": "object",
      "properties": {
        "fontSize": {
          "description": "Font size.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize"
        },
        "fontWeight": {
          "type": "string",
          "description": "[Font weight](https://www.w3schools.com/cssref/pr_font_weight.asp). Possible values are `normal`, `bold`, `bolder`, and `lighter`."
        },
        "backgroundColor": {
          "description": "Text background color.",
          "$ref": "GoogleTypeColor"
        },
        "textDecoration": {
          "type": "string",
          "description": "[Text decoration](https://www.w3schools.com/cssref/pr_text_text-decoration.asp). Follows CSS standard. "
        },
        "color": {
          "description": "Text color.",
          "$ref": "GoogleTypeColor"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "fontFamily": {
          "type": "string",
          "description": "Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp"
        },
        "textStyle": {
          "type": "string",
          "description": "[Text style](https://www.w3schools.com/cssref/pr_font_font-style.asp). Possible values are `normal`, `italic`, and `oblique`."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchor": {
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.",
      "type": "object",
      "properties": {
        "pageRefs": {
          "type": "array",
          "description": "One or more references to visual page elements",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor"
    },
    "GoogleCloudDocumentaiV1BatchProcessResponse": {
      "description": "Response message for BatchProcessDocuments.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1BatchProcessResponse"
    },
    "GoogleCloudDocumentaiV1beta1DocumentShardInfo": {
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentShardInfo",
      "type": "object",
      "properties": {
        "shardIndex": {
          "format": "int64",
          "description": "The 0-based index of this shard.",
          "type": "string"
        },
        "shardCount": {
          "type": "string",
          "description": "Total number of shards.",
          "format": "int64"
        },
        "textOffset": {
          "description": "The index of the first character in Document.text in the overall document global text.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement": {
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement",
      "properties": {
        "type": {
          "description": "Type of the VisualElement.",
          "type": "string"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for VisualElement."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement": {
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement",
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "type": {
          "description": "Type of the VisualElement.",
          "type": "string"
        }
      }
    }
  },
  "basePath": "",
  "name": "documentai",
  "batchPath": "batch",
  "resources": {
    "projects": {
      "resources": {
        "operations": {
          "methods": {
            "get": {
              "flatPath": "v1/projects/{projectsId}/operations/{operationsId}",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "description": "The name of the operation resource.",
                  "location": "path",
                  "required": true
                }
              },
              "id": "documentai.projects.operations.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "httpMethod": "GET"
            }
          }
        },
        "locations": {
          "resources": {
            "processors": {
              "resources": {
                "processorVersions": {
                  "methods": {
                    "list": {
                      "id": "documentai.projects.locations.processors.processorVersions.list",
                      "path": "v1/{+parent}/processorVersions",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "description": "Required. The parent (project, location and processor) to list all versions. Format: `projects/{project}/locations/{location}/processors/{processor}`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                          "type": "string",
                          "location": "path"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "The maximum number of processor versions to return. If unspecified, at most `10` processor versions will be returned. The maximum value is `20`. Values above `20` will be coerced to `20`.",
                          "format": "int32"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "We will return the processor versions sorted by creation time. The page token will point to the next processor version."
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions",
                      "response": {
                        "$ref": "GoogleCloudDocumentaiV1ListProcessorVersionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists all versions of a processor."
                    },
                    "batchProcess": {
                      "httpMethod": "POST",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:batchProcess",
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1BatchProcessRequest"
                      },
                      "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.",
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}:batchProcess",
                      "id": "documentai.projects.locations.processors.processorVersions.batchProcess",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "process": {
                      "response": {
                        "$ref": "GoogleCloudDocumentaiV1ProcessResponse"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "POST",
                      "path": "v1/{+name}:process",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Processes a single document.",
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "location": "path",
                          "description": "Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1ProcessRequest"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:process",
                      "id": "documentai.projects.locations.processors.processorVersions.process"
                    },
                    "evaluateProcessorVersion": {
                      "parameters": {
                        "processorVersion": {
                          "description": "Required. The resource name of the ProcessorVersion to evaluate. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:evaluateProcessorVersion",
                      "parameterOrder": [
                        "processorVersion"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "httpMethod": "POST",
                      "description": "Evaluates a ProcessorVersion against annotated documents, producing an Evaluation.",
                      "id": "documentai.projects.locations.processors.processorVersions.evaluateProcessorVersion",
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1EvaluateProcessorVersionRequest"
                      },
                      "path": "v1/{+processorVersion}:evaluateProcessorVersion"
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "required": true,
                          "description": "Required. The processor version resource name to be deleted."
                        }
                      },
                      "id": "documentai.projects.locations.processors.processorVersions.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "description": "Deletes the processor version, all artifacts under the processor version will be deleted."
                    },
                    "get": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}",
                      "response": {
                        "$ref": "GoogleCloudDocumentaiV1ProcessorVersion"
                      },
                      "id": "documentai.projects.locations.processors.processorVersions.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. The processor resource name.",
                          "location": "path"
                        }
                      },
                      "description": "Gets a processor version detail.",
                      "httpMethod": "GET"
                    },
                    "train": {
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions:train",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                          "type": "string",
                          "description": "Required. The parent (project, location and processor) to create the new version for. Format: `projects/{project}/locations/{location}/processors/{processor}`."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Trains a new processor version. Operation metadata is returned as TrainProcessorVersionMetadata.",
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionRequest"
                      },
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/processorVersions:train",
                      "id": "documentai.projects.locations.processors.processorVersions.train"
                    },
                    "undeploy": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:undeploy",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The processor version resource name to be undeployed.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$"
                        }
                      },
                      "httpMethod": "POST",
                      "path": "v1/{+name}:undeploy",
                      "id": "documentai.projects.locations.processors.processorVersions.undeploy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1UndeployProcessorVersionRequest"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Undeploys the processor version.",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "deploy": {
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "description": "Deploys the processor version.",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. The processor version resource name to be deployed."
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:deploy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}:deploy",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1DeployProcessorVersionRequest"
                      },
                      "id": "documentai.projects.locations.processors.processorVersions.deploy"
                    }
                  },
                  "resources": {
                    "evaluations": {
                      "methods": {
                        "get": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}/evaluations/{evaluationsId}",
                          "response": {
                            "$ref": "GoogleCloudDocumentaiV1Evaluation"
                          },
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "description": "Required. The resource name of the Evaluation to get. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}/evaluations/{evaluation}`",
                              "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+/evaluations/[^/]+$"
                            }
                          },
                          "path": "v1/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Retrieves a specific evaluation.",
                          "id": "documentai.projects.locations.processors.processorVersions.evaluations.get",
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "list": {
                          "httpMethod": "GET",
                          "path": "v1/{+parent}/evaluations",
                          "description": "Retrieves a set of evaluations for a given processor version.",
                          "response": {
                            "$ref": "GoogleCloudDocumentaiV1ListEvaluationsResponse"
                          },
                          "parameters": {
                            "pageSize": {
                              "format": "int32",
                              "location": "query",
                              "type": "integer",
                              "description": "The standard list page size. If unspecified, at most `5` evaluations are returned. The maximum value is `100`. Values above `100` are coerced to `100`."
                            },
                            "parent": {
                              "description": "Required. The resource name of the ProcessorVersion to list evaluations for. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$"
                            },
                            "pageToken": {
                              "location": "query",
                              "description": "A page token, received from a previous `ListEvaluations` call. Provide this to retrieve the subsequent page.",
                              "type": "string"
                            }
                          },
                          "id": "documentai.projects.locations.processors.processorVersions.evaluations.list",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}/evaluations",
                          "parameterOrder": [
                            "parent"
                          ]
                        }
                      }
                    }
                  }
                },
                "humanReviewConfig": {
                  "methods": {
                    "reviewDocument": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/humanReviewConfig:reviewDocument",
                      "description": "Send a document for Human Review. The input document should be processed by the specified processor.",
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1ReviewDocumentRequest"
                      },
                      "id": "documentai.projects.locations.processors.humanReviewConfig.reviewDocument",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameters": {
                        "humanReviewConfig": {
                          "required": true,
                          "description": "Required. The resource name of the HumanReviewConfig that the document will be reviewed with.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/humanReviewConfig$",
                          "type": "string"
                        }
                      },
                      "httpMethod": "POST",
                      "path": "v1/{+humanReviewConfig}:reviewDocument",
                      "parameterOrder": [
                        "humanReviewConfig"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "enable": {
                  "description": "Enables a processor",
                  "path": "v1/{+name}:enable",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "description": "Required. The processor resource name to be enabled.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1EnableProcessorRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:enable",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "id": "documentai.projects.locations.processors.enable"
                },
                "disable": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "description": "Required. The processor resource name to be disabled.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:disable",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1DisableProcessorRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Disables a processor",
                  "id": "documentai.projects.locations.processors.disable",
                  "httpMethod": "POST",
                  "path": "v1/{+name}:disable",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setDefaultProcessorVersion": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:setDefaultProcessorVersion",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionRequest"
                  },
                  "id": "documentai.projects.locations.processors.setDefaultProcessorVersion",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "processor": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The resource name of the Processor to change default version.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Set the default (active) version of a Processor that will be used in ProcessDocument and BatchProcessDocuments.",
                  "path": "v1/{+processor}:setDefaultProcessorVersion",
                  "parameterOrder": [
                    "processor"
                  ]
                },
                "process": {
                  "path": "v1/{+name}:process",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1ProcessRequest"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "description": "Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`"
                    }
                  },
                  "description": "Processes a single document.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:process",
                  "id": "documentai.projects.locations.processors.process",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1ProcessResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "description": "Deletes the processor, unloads all deployed model artifacts if it was enabled and then deletes all artifacts associated with this processor.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The processor resource name to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}",
                  "path": "v1/{+name}",
                  "id": "documentai.projects.locations.processors.delete"
                },
                "batchProcess": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "description": "Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:batchProcess",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1BatchProcessRequest"
                  },
                  "path": "v1/{+name}:batchProcess",
                  "id": "documentai.projects.locations.processors.batchProcess"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a processor from the ProcessorType provided. The processor will be at `ENABLED` state by default after its creation.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The parent (project and location) under which to create the processor. Format: `projects/{project}/locations/{location}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1Processor"
                  },
                  "path": "v1/{+parent}/processors",
                  "httpMethod": "POST",
                  "id": "documentai.projects.locations.processors.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1Processor"
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all processors which belong to this project.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent (project and location) which owns this collection of Processors. Format: `projects/{project}/locations/{location}`",
                      "type": "string",
                      "required": true
                    },
                    "pageToken": {
                      "description": "We will return the processors sorted by creation time. The page token will point to the next processor.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of processors to return. If unspecified, at most `50` processors will be returned. The maximum value is `100`. Values above `100` will be coerced to `100`.",
                      "format": "int32"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1ListProcessorsResponse"
                  },
                  "path": "v1/{+parent}/processors",
                  "id": "documentai.projects.locations.processors.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors"
                },
                "get": {
                  "httpMethod": "GET",
                  "id": "documentai.projects.locations.processors.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "description": "Required. The processor resource name."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets a processor detail.",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1Processor"
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "id": "documentai.projects.locations.operations.get",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "cancel": {
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "documentai.projects.locations.operations.cancel",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}:cancel"
                },
                "list": {
                  "id": "documentai.projects.locations.operations.list",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations$",
                      "required": true
                    },
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "The standard list page size."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations"
                }
              }
            },
            "processorTypes": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processorTypes",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1ListProcessorTypesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "documentai.projects.locations.processorTypes.list",
                  "description": "Lists the processor types that exist.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/processorTypes",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The location of processor types to list. Format: `projects/{project}/locations/{location}`.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of processor types to return. If unspecified, at most `100` processor types will be returned. The maximum value is `500`. Values above `500` will be coerced to `500`.",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "Used to retrieve the next page of results, empty if at the end of the list.",
                      "location": "query",
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "id": "documentai.projects.locations.processorTypes.get",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The processor type resource name.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/processorTypes/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processorTypes/{processorTypesId}",
                  "description": "Gets a processor type detail.",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1ProcessorType"
                  }
                }
              }
            }
          },
          "methods": {
            "list": {
              "path": "v1/{+name}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/locations",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                }
              },
              "response": {
                "$ref": "GoogleCloudLocationListLocationsResponse"
              },
              "httpMethod": "GET",
              "id": "documentai.projects.locations.list",
              "description": "Lists information about the supported locations for this service.",
              "parameterOrder": [
                "name"
              ]
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "id": "documentai.projects.locations.get",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "response": {
                "$ref": "GoogleCloudLocationLocation"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location."
                }
              },
              "description": "Gets information about a location."
            },
            "fetchProcessorTypes": {
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:fetchProcessorTypes",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}:fetchProcessorTypes",
              "id": "documentai.projects.locations.fetchProcessorTypes",
              "response": {
                "$ref": "GoogleCloudDocumentaiV1FetchProcessorTypesResponse"
              },
              "description": "Fetches processor types. Note that we don't use ListProcessorTypes here, because it isn't paginated.",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The location of processor types to list. Format: `projects/{project}/locations/{location}`.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              }
            }
          }
        }
      }
    },
    "operations": {
      "methods": {
        "delete": {
          "parameters": {
            "name": {
              "type": "string",
              "pattern": "^operations/.*$",
              "required": true,
              "location": "path",
              "description": "The name of the operation resource to be deleted."
            }
          },
          "flatPath": "v1/operations/{operationsId}",
          "id": "documentai.operations.delete",
          "httpMethod": "DELETE",
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}",
          "response": {
            "$ref": "GoogleProtobufEmpty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
        }
      }
    }
  },
  "title": "Cloud Document AI API",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "kind": "discovery#restDescription",
  "mtlsRootUrl": "https://documentai.mtls.googleapis.com/",
  "description": "Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.",
  "canonicalName": "Document",
  "ownerName": "Google",
  "discoveryVersion": "v1",
  "id": "documentai:v1",
  "baseUrl": "https://documentai.googleapis.com/",
  "ownerDomain": "google.com",
  "documentationLink": "https://cloud.google.com/document-ai/docs/",
  "rootUrl": "https://documentai.googleapis.com/",
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  }
}

{
  "basePath": "",
  "mtlsRootUrl": "https://documentai.mtls.googleapis.com/",
  "documentationLink": "https://cloud.google.com/document-ai/docs/",
  "rootUrl": "https://documentai.googleapis.com/",
  "resources": {
    "operations": {
      "methods": {
        "delete": {
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}",
          "response": {
            "$ref": "GoogleProtobufEmpty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "DELETE",
          "parameters": {
            "name": {
              "pattern": "^operations/.*$",
              "description": "The name of the operation resource to be deleted.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "flatPath": "v1/operations/{operationsId}",
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
          "id": "documentai.operations.delete"
        }
      }
    },
    "projects": {
      "resources": {
        "operations": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "id": "documentai.projects.operations.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "flatPath": "v1/projects/{projectsId}/operations/{operationsId}",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "description": "The name of the operation resource."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}"
            }
          }
        },
        "locations": {
          "methods": {
            "get": {
              "description": "Gets information about a location.",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location.",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "GoogleCloudLocationLocation"
              },
              "httpMethod": "GET",
              "id": "documentai.projects.locations.get",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}"
            },
            "fetchProcessorTypes": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}:fetchProcessorTypes",
              "id": "documentai.projects.locations.fetchProcessorTypes",
              "response": {
                "$ref": "GoogleCloudDocumentaiV1FetchProcessorTypesResponse"
              },
              "description": "Fetches processor types. Note that we don't use ListProcessorTypes here, because it isn't paginated.",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "Required. The project of processor type to list. The available processor types may depend on the allow-listing on projects. Format: `projects/{project}/locations/{location}`",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:fetchProcessorTypes"
            },
            "list": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query"
                },
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                }
              },
              "path": "v1/{+name}/locations",
              "id": "documentai.projects.locations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/locations",
              "description": "Lists information about the supported locations for this service.",
              "response": {
                "$ref": "GoogleCloudLocationListLocationsResponse"
              }
            }
          },
          "resources": {
            "processorTypes": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "description": "Gets a processor type detail.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processorTypes/{processorTypesId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processorTypes/[^/]+$",
                      "description": "Required. The processor type resource name.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "documentai.projects.locations.processorTypes.get",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1ProcessorType"
                  }
                },
                "list": {
                  "description": "Lists the processor types that exist.",
                  "id": "documentai.projects.locations.processorTypes.list",
                  "path": "v1/{+parent}/processorTypes",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The location of processor type to list. The available processor types may depend on the allow-listing on projects. Format: `projects/{project}/locations/{location}`",
                      "type": "string",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of processor types to return. If unspecified, at most 100 processor types will be returned. The maximum value is 500; values above 500 will be coerced to 500.",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "Used to retrieve the next page of results, empty if at the end of the list.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processorTypes",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1ListProcessorTypesResponse"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "processors": {
              "methods": {
                "batchProcess": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:batchProcess",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1BatchProcessRequest"
                  },
                  "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.",
                  "id": "documentai.projects.locations.processors.batchProcess",
                  "path": "v1/{+name}:batchProcess"
                },
                "disable": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:disable",
                  "path": "v1/{+name}:disable",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1DisableProcessorRequest"
                  },
                  "description": "Disables a processor",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The processor resource name to be disabled."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "documentai.projects.locations.processors.disable"
                },
                "delete": {
                  "path": "v1/{+name}",
                  "description": "Deletes the processor, unloads all deployed model artifacts if it was enabled and then deletes all artifacts associated with this processor.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "documentai.projects.locations.processors.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "description": "Required. The processor resource name to be deleted.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "DELETE"
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1Processor"
                  },
                  "id": "documentai.projects.locations.processors.get",
                  "description": "Gets a processor detail.",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "type": "string",
                      "description": "Required. The processor resource name.",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setDefaultProcessorVersion": {
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionRequest"
                  },
                  "id": "documentai.projects.locations.processors.setDefaultProcessorVersion",
                  "parameterOrder": [
                    "processor"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:setDefaultProcessorVersion",
                  "description": "Set the default (active) version of a Processor that will be used in ProcessDocument and BatchProcessDocuments.",
                  "path": "v1/{+processor}:setDefaultProcessorVersion",
                  "parameters": {
                    "processor": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The resource name of the Processor to change default version."
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "create": {
                  "path": "v1/{+parent}/processors",
                  "description": "Creates a processor from the type processor that the user chose. The processor will be at \"ENABLED\" state by default after its creation.",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1Processor"
                  },
                  "id": "documentai.projects.locations.processors.create",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1Processor"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent (project and location) under which to create the processor. Format: `projects/{project}/locations/{location}`",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "enable": {
                  "id": "documentai.projects.locations.processors.enable",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1EnableProcessorRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:enable",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "location": "path",
                      "description": "Required. The processor resource name to be enabled.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Enables a processor",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:enable"
                },
                "list": {
                  "id": "documentai.projects.locations.processors.list",
                  "parameters": {
                    "pageToken": {
                      "description": "We will return the processors sorted by creation time. The page token will point to the next processor.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of processors to return. If unspecified, at most 50 processors will be returned. The maximum value is 100; values above 100 will be coerced to 100."
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent (project and location) which owns this collection of Processors. Format: `projects/{project}/locations/{location}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1ListProcessorsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors",
                  "description": "Lists all processors which belong to this project.",
                  "path": "v1/{+parent}/processors",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "process": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:process",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:process",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1ProcessResponse"
                  },
                  "id": "documentai.projects.locations.processors.process",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1ProcessRequest"
                  },
                  "description": "Processes a single document."
                }
              },
              "resources": {
                "humanReviewConfig": {
                  "methods": {
                    "reviewDocument": {
                      "description": "Send a document for Human Review. The input document should be processed by the specified processor.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/humanReviewConfig:reviewDocument",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "id": "documentai.projects.locations.processors.humanReviewConfig.reviewDocument",
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1ReviewDocumentRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "humanReviewConfig": {
                          "type": "string",
                          "description": "Required. The resource name of the HumanReviewConfig that the document will be reviewed with.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/humanReviewConfig$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "humanReviewConfig"
                      ],
                      "httpMethod": "POST",
                      "path": "v1/{+humanReviewConfig}:reviewDocument"
                    }
                  }
                },
                "processorVersions": {
                  "methods": {
                    "undeploy": {
                      "path": "v1/{+name}:undeploy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. The processor version resource name to be undeployed.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:undeploy",
                      "httpMethod": "POST",
                      "id": "documentai.projects.locations.processors.processorVersions.undeploy",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Undeploys the processor version.",
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1UndeployProcessorVersionRequest"
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "delete": {
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "description": "Required. The processor version resource name to be deleted."
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "documentai.projects.locations.processors.processorVersions.delete",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes the processor version, all artifacts under the processor version will be deleted.",
                      "httpMethod": "DELETE"
                    },
                    "train": {
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionRequest"
                      },
                      "path": "v1/{+parent}/processorVersions:train",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                          "required": true,
                          "description": "Required. The parent (project, location and processor) to create the new version for. Format: `projects/{project}/locations/{location}/processors/{processor}`.",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "id": "documentai.projects.locations.processors.processorVersions.train",
                      "description": "Trains a new processor version. Operation metadata is returned as cloud_documentai_core.TrainProcessorVersionMetadata.",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions:train",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST"
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "description": "Required. The processor resource name."
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDocumentaiV1ProcessorVersion"
                      },
                      "id": "documentai.projects.locations.processors.processorVersions.get",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}",
                      "path": "v1/{+name}",
                      "description": "Gets a processor version detail."
                    },
                    "batchProcess": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:batchProcess",
                      "httpMethod": "POST",
                      "id": "documentai.projects.locations.processors.processorVersions.batchProcess",
                      "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1BatchProcessRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}:batchProcess",
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$"
                        }
                      }
                    },
                    "process": {
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "type": "string"
                        }
                      },
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1ProcessRequest"
                      },
                      "path": "v1/{+name}:process",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:process",
                      "description": "Processes a single document.",
                      "id": "documentai.projects.locations.processors.processorVersions.process",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDocumentaiV1ProcessResponse"
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "location": "query",
                          "description": "The maximum number of processor versions to return. If unspecified, at most 10 processor versions will be returned. The maximum value is 20; values above 20 will be coerced to 20."
                        },
                        "parent": {
                          "description": "Required. The parent (project, location and processor) to list all versions. Format: `projects/{project}/locations/{location}/processors/{processor}`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "pageToken": {
                          "description": "We will return the processor versions sorted by creation time. The page token will point to the next processor version.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "id": "documentai.projects.locations.processors.processorVersions.list",
                      "path": "v1/{+parent}/processorVersions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDocumentaiV1ListProcessorVersionsResponse"
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions",
                      "description": "Lists all versions of a processor."
                    },
                    "deploy": {
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1DeployProcessorVersionRequest"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The processor version resource name to be deployed.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deploys the processor version.",
                      "httpMethod": "POST",
                      "path": "v1/{+name}:deploy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:deploy",
                      "id": "documentai.projects.locations.processors.processorVersions.deploy"
                    },
                    "evaluateProcessorVersion": {
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1EvaluateProcessorVersionRequest"
                      },
                      "parameterOrder": [
                        "processorVersion"
                      ],
                      "description": "Evaluates a ProcessorVersion against annotated documents, producing an Evaluation.",
                      "path": "v1/{+processorVersion}:evaluateProcessorVersion",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:evaluateProcessorVersion",
                      "parameters": {
                        "processorVersion": {
                          "description": "Required. The resource name of the ProcessorVersion to evaluate. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "required": true
                        }
                      },
                      "id": "documentai.projects.locations.processors.processorVersions.evaluateProcessorVersion"
                    }
                  },
                  "resources": {
                    "evaluations": {
                      "methods": {
                        "get": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}/evaluations/{evaluationsId}",
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1/{+name}",
                          "id": "documentai.projects.locations.processors.processorVersions.evaluations.get",
                          "description": "Retrieves a specific evaluation.",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "type": "string",
                              "description": "Required. The resource name of the Evaluation to get. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}/evaluations/{evaluation}`",
                              "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+/evaluations/[^/]+$",
                              "required": true
                            }
                          },
                          "response": {
                            "$ref": "GoogleCloudDocumentaiV1Evaluation"
                          },
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "list": {
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "Retrieves a set of evaluations for a given processor version.",
                          "id": "documentai.projects.locations.processors.processorVersions.evaluations.list",
                          "path": "v1/{+parent}/evaluations",
                          "response": {
                            "$ref": "GoogleCloudDocumentaiV1ListEvaluationsResponse"
                          },
                          "parameters": {
                            "pageSize": {
                              "format": "int32",
                              "description": "The standard list page size. If unspecified, at most `5` evaluations will be returned. The maximum value is `100`; values above `100` will be coerced to `100`.",
                              "location": "query",
                              "type": "integer"
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "A page token, received from a previous `ListEvaluations` call. Provide this to retrieve the subsequent page."
                            },
                            "parent": {
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                              "description": "Required. The resource name of the ProcessorVersion to list evaluations for. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                              "required": true
                            }
                          },
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}/evaluations"
                        }
                      }
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "id": "documentai.projects.locations.operations.get",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "cancel": {
                  "id": "documentai.projects.locations.operations.cancel",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "path": "v1/{+name}:cancel",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  }
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "The standard list page token.",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list filter."
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "httpMethod": "GET",
                  "id": "documentai.projects.locations.operations.list"
                }
              }
            }
          }
        }
      }
    }
  },
  "id": "documentai:v1",
  "servicePath": "",
  "parameters": {
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "type": "string",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    }
  },
  "kind": "discovery#restDescription",
  "baseUrl": "https://documentai.googleapis.com/",
  "title": "Cloud Document AI API",
  "version_module": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "description": "Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.",
  "version": "v1",
  "protocol": "rest",
  "ownerDomain": "google.com",
  "schemas": {
    "GoogleCloudLocationLocation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        }
      },
      "description": "A resource that represents a Google Cloud location.",
      "id": "GoogleCloudLocationLocation"
    },
    "GoogleCloudDocumentaiV1EvaluationReference": {
      "description": "Gives a short summary of an evaluation, and links to the evaluation itself.",
      "id": "GoogleCloudDocumentaiV1EvaluationReference",
      "properties": {
        "aggregateMetricsExact": {
          "description": "An aggregate of the statistics for the evaluation with fuzzy matching off.",
          "$ref": "GoogleCloudDocumentaiV1EvaluationMetrics"
        },
        "operation": {
          "description": "The resource name of the Long Running Operation for the evaluation.",
          "type": "string"
        },
        "aggregateMetrics": {
          "$ref": "GoogleCloudDocumentaiV1EvaluationMetrics",
          "description": "An aggregate of the statistics for the evaluation with fuzzy matching on."
        },
        "evaluation": {
          "type": "string",
          "description": "The resource name of the evaluation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2GcsSource": {
      "id": "GoogleCloudDocumentaiV1beta2GcsSource",
      "description": "The Google Cloud Storage location where the input file will be read from.",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionResponse": {
      "description": "The response for TrainProcessorVersion.",
      "properties": {
        "processorVersion": {
          "description": "The resource name of the processor version produced by training.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentShardInfo": {
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
      "id": "GoogleCloudDocumentaiV1DocumentShardInfo",
      "type": "object",
      "properties": {
        "shardCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of shards."
        },
        "textOffset": {
          "description": "The index of the first character in Document.text in the overall document global text.",
          "type": "string",
          "format": "int64"
        },
        "shardIndex": {
          "type": "string",
          "format": "int64",
          "description": "The 0-based index of this shard."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentProvenance": {
      "description": "Structure to identify provenance relationships between annotations in different revisions.",
      "id": "GoogleCloudDocumentaiV1DocumentProvenance",
      "type": "object",
      "properties": {
        "parents": {
          "description": "References to the original elements that are replaced.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentProvenanceParent"
          },
          "type": "array"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.",
            "Add an element.",
            "Remove an element identified by `parent`.",
            "Updates any fields within the given provenance scope of the message. It overwrites the fields rather than replacing them. Use this when you want to update a field value of an entity without also updating all the child properties.",
            "Currently unused. Replace an element identified by `parent`.",
            "Deprecated. Request human review for the element identified by `parent`.",
            "Deprecated. Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Deprecated. Element is skipped in the validation process."
          ],
          "description": "The type of provenance operation.",
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "UPDATE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ]
        },
        "id": {
          "type": "integer",
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "format": "int32"
        },
        "revision": {
          "format": "int32",
          "type": "integer",
          "description": "The index of the revision that produced this element."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus": {
      "type": "object",
      "description": "The status of each individual document in the batch delete process.",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of deleting the document in storage."
        },
        "documentId": {
          "description": "The document id of the document.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPage": {
      "description": "A page in a Document.",
      "properties": {
        "formFields": {
          "description": "A list of visually detected form fields on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageFormField"
          },
          "type": "array"
        },
        "imageQualityScores": {
          "description": "Image Quality Scores.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores"
        },
        "blocks": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageBlock"
          },
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation."
        },
        "image": {
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImage"
        },
        "tables": {
          "description": "A list of visually detected tables on the page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTable"
          }
        },
        "dimension": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDimension",
          "description": "Physical dimension of the page."
        },
        "pageNumber": {
          "format": "int32",
          "type": "integer",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for the page."
        },
        "symbols": {
          "type": "array",
          "description": "A list of visually detected symbols on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageSymbol"
          }
        },
        "transforms": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix"
          },
          "description": "Transformation matrices that were applied to the original document image to produce Page.image."
        },
        "lines": {
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLine"
          }
        },
        "tokens": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageToken"
          },
          "description": "A list of visually detected tokens on the page.",
          "type": "array"
        },
        "visualElements": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement"
          },
          "type": "array",
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page."
        },
        "detectedBarcodes": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode"
          },
          "description": "A list of detected barcodes.",
          "type": "array"
        },
        "paragraphs": {
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph"
          },
          "type": "array"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "provenance": {
          "description": "The history of this page.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPage",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics": {
      "id": "GoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics",
      "description": "Metrics across multiple confidence levels.",
      "type": "object",
      "properties": {
        "metricsType": {
          "enumDescriptions": [
            "The metrics type is unspecified. By default, metrics without a particular specification are for leaf entity types (i.e., top-level entity types without child types, or child types which are not parent types themselves).",
            "Indicates whether metrics for this particular label type represent an aggregate of metrics for other types instead of being based on actual TP/FP/FN values for the label type. Metrics for parent (i.e., non-leaf) entity types are an aggregate of metrics for their children."
          ],
          "type": "string",
          "description": "The metrics type for the label.",
          "enum": [
            "METRICS_TYPE_UNSPECIFIED",
            "AGGREGATE"
          ]
        },
        "estimatedCalibrationErrorExact": {
          "description": "The ECE for the predicted entities with fuzzy matching disabled, i.e., exact matching only.",
          "type": "number",
          "format": "float"
        },
        "auprc": {
          "type": "number",
          "description": "The calculated area under the precision recall curve (AUPRC), computed by integrating over all confidence thresholds.",
          "format": "float"
        },
        "confidenceLevelMetrics": {
          "description": "Metrics across confidence levels with fuzzy matching enabled.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1EvaluationConfidenceLevelMetrics"
          },
          "type": "array"
        },
        "auprcExact": {
          "format": "float",
          "type": "number",
          "description": "The AUPRC for metrics with fuzzy matching disabled, i.e., exact matching only."
        },
        "estimatedCalibrationError": {
          "format": "float",
          "description": "The Estimated Calibration Error (ECE) of the confidence of the predicted entities.",
          "type": "number"
        },
        "confidenceLevelMetricsExact": {
          "description": "Metrics across confidence levels with only exact matching.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1EvaluationConfidenceLevelMetrics"
          }
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata",
      "type": "object",
      "description": "The long-running operation metadata for CreateLabelerPool."
    },
    "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse",
      "properties": {},
      "description": "Response message for set default processor version method."
    },
    "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview",
      "description": "Human Review information of the document.",
      "properties": {
        "state": {
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`.",
          "type": "string"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleTypeMoney": {
      "properties": {
        "nanos": {
          "format": "int32",
          "type": "integer",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        },
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        },
        "units": {
          "type": "string",
          "format": "int64",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
        }
      },
      "description": "Represents an amount of money with its currency type.",
      "id": "GoogleTypeMoney",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus": {
      "properties": {
        "humanReviewStatus": {
          "description": "The status of human review on the processed document.",
          "$ref": "GoogleCloudDocumentaiV1beta3HumanReviewStatus"
        },
        "outputGcsDestination": {
          "description": "The output_gcs_destination (in the request as `output_gcs_destination`) of the processed document if it was successful, otherwise empty.",
          "type": "string"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status processing the document."
        },
        "humanReviewOperation": {
          "type": "string",
          "description": "The name of the operation triggered by the processed document. If the human review process isn't triggered, this field will be empty. It has the same response type and metadata as the long-running operation returned by ReviewDocument method."
        },
        "inputGcsSource": {
          "type": "string",
          "description": "The source of the document, same as the [input_gcs_source] field in the request when the batch process started. The batch process is started by take snapshot of that document, since a user can move or change that document during the process."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus",
      "type": "object",
      "description": "The status of a each individual document in the batch process."
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata": {
      "description": "The metadata proto of ResyncDataset method.",
      "properties": {
        "datasetResyncStatuses": {
          "description": "The list of dataset resync statuses. Not checked when `dataset_documents` is specified in ResyncRequest.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus"
          }
        },
        "individualDocumentResyncStatuses": {
          "type": "array",
          "description": "The list of document resync statuses. The same document could have multiple `individual_document_resync_statuses` if it has multiple inconsistencies.",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus"
          }
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata"
    },
    "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage": {
      "properties": {
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of detected language. Range `[0, 1]`."
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        }
      },
      "description": "Detected language for a structural component.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
    },
    "GoogleTypeColor": {
      "id": "GoogleTypeColor",
      "description": "Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to/from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't carry information about the absolute color space that should be used to interpret the RGB value (e.g. sRGB, Adobe RGB, DCI-P3, BT.2020, etc.). By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most 1e-5. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha \u003c= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red \u003c\u003c 16) | (green \u003c\u003c 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i \u003c missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...",
      "properties": {
        "alpha": {
          "description": "The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).",
          "type": "number",
          "format": "float"
        },
        "blue": {
          "type": "number",
          "description": "The amount of blue in the color as a value in the interval [0, 1].",
          "format": "float"
        },
        "red": {
          "format": "float",
          "type": "number",
          "description": "The amount of red in the color as a value in the interval [0, 1]."
        },
        "green": {
          "type": "number",
          "description": "The amount of green in the color as a value in the interval [0, 1].",
          "format": "float"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentSchemaEntityType": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User defined name for the type."
        },
        "enumValues": {
          "$ref": "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeEnumValues",
          "description": "If specified, lists all the possible values for this entity. This should not be more than a handful of values. If the number of values is \u003e10 or could change frequently use the `EntityType.value_ontology` field and specify a list of all possible values in a value ontology file."
        },
        "properties": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeProperty"
          },
          "type": "array",
          "description": "Description the nested structure, or composition of an entity."
        },
        "name": {
          "description": "Name of the type. It must be unique within the schema file and cannot be a 'Common Type'. Besides that we use the following naming conventions: - *use `snake_casing`* - name matching is case-sensitive - Maximum 64 characters. - Must start with a letter. - Allowed characters: ASCII letters `[a-z0-9_-]`. (For backward compatibility internal infrastructure and tooling can handle any ascii character) - The `/` is sometimes used to denote a property of a type. For example `line_item/amount`. This convention is deprecated, but will still be honored for backward compatibility.",
          "type": "string"
        },
        "baseTypes": {
          "description": "The entity type that this type is derived from. For now, one and only one should be set.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentSchemaEntityType",
      "description": "EntityType is the wrapper of a label of the corresponding model with detailed attributes and limitations for entity-based processors. Multiple types can also compose a dependency tree to represent nested types."
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata": {
      "description": "The long-running operation metadata for review document method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The creation time of the operation."
        },
        "questionId": {
          "type": "string",
          "description": "The Crowd Compute question ID."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time of the operation."
        },
        "state": {
          "description": "Used only when Operation.done is false.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ]
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentEntity": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentEntity",
      "properties": {
        "confidence": {
          "description": "Optional. Confidence of detected Schema entity. Range `[0, 1]`.",
          "type": "number",
          "format": "float"
        },
        "textAnchor": {
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor"
        },
        "type": {
          "description": "Required. Entity type from a schema e.g. `Address`.",
          "type": "string"
        },
        "id": {
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document.",
          "type": "string"
        },
        "mentionText": {
          "type": "string",
          "description": "Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`."
        },
        "mentionId": {
          "description": "Optional. Deprecated. Use `id` field instead.",
          "type": "string"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "Optional. The history of this annotation."
        },
        "pageAnchor": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageAnchor",
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found."
        },
        "redacted": {
          "type": "boolean",
          "description": "Optional. Whether the entity will be redacted for de-identification purposes."
        },
        "properties": {
          "type": "array",
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentEntity"
          }
        },
        "normalizedValue": {
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types.",
          "$ref": "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue"
        }
      },
      "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location."
    },
    "GoogleTypeTimeZone": {
      "type": "object",
      "properties": {
        "id": {
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
          "type": "string"
        },
        "version": {
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
          "type": "string"
        }
      },
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "id": "GoogleTypeTimeZone"
    },
    "GoogleCloudDocumentaiV1BoundingPoly": {
      "id": "GoogleCloudDocumentaiV1BoundingPoly",
      "type": "object",
      "description": "A bounding polygon for the detected image annotation.",
      "properties": {
        "vertices": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1Vertex"
          },
          "description": "The bounding polygon vertices.",
          "type": "array"
        },
        "normalizedVertices": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1NormalizedVertex"
          },
          "type": "array",
          "description": "The bounding polygon normalized vertices."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentProvenanceParent": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentProvenanceParent",
      "properties": {
        "revision": {
          "format": "int32",
          "description": "The index of the index into current revision's parent_ids list.",
          "type": "integer"
        },
        "index": {
          "type": "integer",
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision.",
          "format": "int32"
        },
        "id": {
          "description": "The id of the parent provenance.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations."
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse": {
      "description": "Response message for the undeploy processor version method.",
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageToken": {
      "description": "A detected token.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageToken",
      "type": "object",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Token."
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "detectedBreak": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak",
          "description": "Detected break at the end of a Token."
        },
        "styleInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo",
          "description": "Text style attributes."
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLine": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLine",
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Line."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntity": {
      "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntity",
      "properties": {
        "mentionId": {
          "type": "string",
          "description": "Optional. Deprecated. Use `id` field instead."
        },
        "normalizedValue": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue",
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "Optional. The history of this annotation."
        },
        "properties": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          },
          "type": "array",
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document."
        },
        "type": {
          "type": "string",
          "description": "Required. Entity type from a schema e.g. `Address`."
        },
        "pageAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor",
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text."
        },
        "id": {
          "type": "string",
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document."
        },
        "confidence": {
          "type": "number",
          "description": "Optional. Confidence of detected Schema entity. Range `[0, 1]`.",
          "format": "float"
        },
        "mentionText": {
          "type": "string",
          "description": "Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`."
        },
        "redacted": {
          "type": "boolean",
          "description": "Optional. Whether the entity will be redacted for de-identification purposes."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset.",
      "properties": {
        "documentErrorCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of document errors."
        },
        "documentErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training."
        },
        "datasetErrors": {
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "datasetErrorCount": {
          "type": "integer",
          "description": "The total number of dataset errors.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus": {
      "type": "object",
      "description": "The status of each individual document in the batch move process.",
      "properties": {
        "status": {
          "description": "The status of moving the document.",
          "$ref": "GoogleRpcStatus"
        },
        "documentId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId",
          "description": "The document id of the document."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell": {
      "description": "A cell representation inside the table.",
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "colSpan": {
          "description": "How many columns this cell spans.",
          "type": "integer",
          "format": "int32"
        },
        "layout": {
          "description": "Layout for TableCell.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "rowSpan": {
          "description": "How many rows this cell spans.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImage": {
      "type": "object",
      "description": "Rendered image contents for this page.",
      "properties": {
        "content": {
          "description": "Raw byte content of the image.",
          "type": "string",
          "format": "byte"
        },
        "height": {
          "description": "Height of the image in pixels.",
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "description": "Width of the image in pixels.",
          "format": "int32",
          "type": "integer"
        },
        "mimeType": {
          "type": "string",
          "description": "Encoding mime type for the image."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImage"
    },
    "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse": {
      "type": "object",
      "properties": {},
      "description": "Response message for the undeploy processor version method.",
      "id": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionRequestInputData": {
      "type": "object",
      "description": "The input data used to train a new `ProcessorVersion`.",
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionRequestInputData",
      "properties": {
        "trainingDocuments": {
          "$ref": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig",
          "description": "The documents used for training the new version."
        },
        "testDocuments": {
          "$ref": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig",
          "description": "The documents used for testing the trained version."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchor": {
      "properties": {
        "textSegments": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment"
          },
          "type": "array",
          "description": "The text segments from the Document.text."
        },
        "content": {
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields.",
          "type": "string"
        }
      },
      "description": "Text reference indexing into the Document.text.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsResponse": {
      "description": "The response proto of AutoLabelDocuments method.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsResponse"
    },
    "GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata",
      "description": "The long-running operation metadata for deploy processor version method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata": {
      "description": "The common metadata for long running operations.",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "resource": {
          "type": "string",
          "description": "A related resource to this operation."
        },
        "createTime": {
          "description": "The creation time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time of the operation."
        },
        "state": {
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "type": "string",
          "description": "The state of the operation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse": {
      "description": "Response message for set default processor version method.",
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageFormField": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageFormField",
      "properties": {
        "fieldName": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc."
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "nameDetectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for name together with confidence.",
          "type": "array"
        },
        "correctedValueText": {
          "type": "string",
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction."
        },
        "fieldValue": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for the FormField value."
        },
        "correctedKeyText": {
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction.",
          "type": "string"
        },
        "valueType": {
          "type": "string",
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`"
        },
        "valueDetectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages for value together with confidence."
        }
      },
      "description": "A form field detected on the page."
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyle": {
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyle",
      "properties": {
        "backgroundColor": {
          "description": "Text background color.",
          "$ref": "GoogleTypeColor"
        },
        "textDecoration": {
          "type": "string",
          "description": "Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp"
        },
        "color": {
          "description": "Text color.",
          "$ref": "GoogleTypeColor"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "fontWeight": {
          "description": "Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp",
          "type": "string"
        },
        "textStyle": {
          "description": "Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp",
          "type": "string"
        },
        "fontFamily": {
          "description": "Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp",
          "type": "string"
        },
        "fontSize": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize",
          "description": "Font size."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3RevisionRef": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3RevisionRef",
      "description": "The revision reference specifies which revision on the document to read.",
      "properties": {
        "latestProcessorVersion": {
          "description": "Reads the revision generated by the processor version. The format takes the full resource name of processor version. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
          "type": "string"
        },
        "revisionId": {
          "description": "Reads the revision given by the id.",
          "type": "string"
        },
        "revisionCase": {
          "enum": [
            "REVISION_CASE_UNSPECIFIED",
            "LATEST_HUMAN_REVIEW",
            "LATEST_TIMESTAMP",
            "BASE_OCR_REVISION"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified case, fallback to read the LATEST_HUMAN_REVIEW.",
            "The latest revision made by a human.",
            "The latest revision based on timestamp.",
            "The first (OCR) revision."
          ],
          "description": "Reads the revision by the predefined case."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata",
      "description": "The long-running operation metadata for enable processor method."
    },
    "GoogleCloudDocumentaiV1ListProcessorTypesResponse": {
      "id": "GoogleCloudDocumentaiV1ListProcessorTypesResponse",
      "type": "object",
      "description": "Response message for list processor types.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Points to the next page, otherwise empty."
        },
        "processorTypes": {
          "description": "The processor types.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1ProcessorType"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentStyleFontSize": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentStyleFontSize",
      "properties": {
        "size": {
          "format": "float",
          "type": "number",
          "description": "Font size for the text."
        },
        "unit": {
          "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.).",
          "type": "string"
        }
      },
      "description": "Font size with unit."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageMatrix": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix",
      "properties": {
        "cols": {
          "description": "Number of columns in the matrix.",
          "type": "integer",
          "format": "int32"
        },
        "rows": {
          "description": "Number of rows in the matrix.",
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "description": "The matrix data.",
          "format": "byte",
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int32",
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html"
        }
      },
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchor": {
      "properties": {
        "content": {
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields.",
          "type": "string"
        },
        "textSegments": {
          "description": "The text segments from the Document.text.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment"
          }
        }
      },
      "description": "Text reference indexing into the Document.text.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageImageQualityScoresDetectedDefect": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageImageQualityScoresDetectedDefect",
      "properties": {
        "type": {
          "type": "string",
          "description": "Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`"
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of detected defect. Range `[0, 1]` where 1 indicates strong confidence of that the defect exists.",
          "format": "float"
        }
      },
      "description": "Image Quality Defects"
    },
    "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse": {
      "id": "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse",
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse"
          },
          "description": "Responses for each individual document."
        }
      },
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete."
    },
    "GoogleCloudDocumentaiV1GcsPrefix": {
      "type": "object",
      "properties": {
        "gcsUriPrefix": {
          "description": "The URI prefix.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1GcsPrefix",
      "description": "Specifies all documents on Cloud Storage with a common prefix."
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata": {
      "type": "object",
      "properties": {
        "individualBatchMoveStatuses": {
          "description": "The list of response details of each document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus"
          },
          "type": "array"
        },
        "destSplitType": {
          "type": "string",
          "description": "The destination dataset split type.",
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ],
          "enumDescriptions": [
            "Default value if the enum is not set. go/protodosdonts#do-include-an-unspecified-value-in-an-enum",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ]
        },
        "destDatasetType": {
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ],
          "description": "The destination dataset split type.",
          "enumDescriptions": [
            "Default value if the enum is not set. go/protodosdonts#do-include-an-unspecified-value-in-an-enum",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ],
          "type": "string"
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata"
    },
    "GoogleCloudDocumentaiV1DeployProcessorVersionMetadata": {
      "description": "The long-running operation metadata for deploy processor version method.",
      "id": "GoogleCloudDocumentaiV1DeployProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1Document": {
      "type": "object",
      "properties": {
        "entityRelations": {
          "description": "Placeholder. Relationship among Document.entities.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentEntityRelation"
          },
          "type": "array"
        },
        "shardInfo": {
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified.",
          "$ref": "GoogleCloudDocumentaiV1DocumentShardInfo"
        },
        "textChanges": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentTextChange"
          },
          "type": "array",
          "description": "Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other."
        },
        "content": {
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
          "type": "string",
          "format": "byte"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentEntity"
          },
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries."
        },
        "uri": {
          "type": "string",
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info."
        },
        "textStyles": {
          "type": "array",
          "description": "Styles for the Document.text.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentStyle"
          }
        },
        "text": {
          "description": "Optional. UTF-8 encoded text in reading order from the document.",
          "type": "string"
        },
        "mimeType": {
          "description": "An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml.",
          "type": "string"
        },
        "error": {
          "description": "Any error that occurred while processing this document.",
          "$ref": "GoogleRpcStatus"
        },
        "revisions": {
          "description": "Placeholder. Revision history of this document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentRevision"
          }
        },
        "pages": {
          "type": "array",
          "description": "Visual page layout for the Document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPage"
          }
        }
      },
      "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.",
      "id": "GoogleCloudDocumentaiV1Document"
    },
    "GoogleCloudDocumentaiV1HumanReviewStatus": {
      "id": "GoogleCloudDocumentaiV1HumanReviewStatus",
      "type": "object",
      "description": "The status of human review on a processed document.",
      "properties": {
        "humanReviewOperation": {
          "description": "The name of the operation triggered by the processed document. This field is populated only when the state is `HUMAN_REVIEW_IN_PROGRESS`. It has the same response type and metadata as the long-running operation returned by ReviewDocument.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review isn't enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the state_message for details."
          ],
          "description": "The state of human review on the processing request.",
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ],
          "type": "string"
        },
        "stateMessage": {
          "description": "A message providing more details about the human review state.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1Barcode": {
      "type": "object",
      "properties": {
        "rawValue": {
          "type": "string",
          "description": "Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`."
        },
        "format": {
          "description": "Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type.",
          "type": "string"
        },
        "valueFormat": {
          "type": "string",
          "description": "Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license."
        }
      },
      "description": "Encodes the detailed information of a barcode.",
      "id": "GoogleCloudDocumentaiV1beta1Barcode"
    },
    "GoogleCloudDocumentaiV1EvaluateProcessorVersionRequest": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1EvaluateProcessorVersionRequest",
      "description": "Evaluates the given ProcessorVersion against the supplied documents.",
      "properties": {
        "evaluationDocuments": {
          "description": "Optional. The documents used in the evaluation. If unspecified, use the processor's dataset as evaluation input.",
          "$ref": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus": {
      "properties": {
        "status": {
          "description": "The status of resyncing the document with regards to the detected inconsistency. Empty if `validate_only` is true in the request.",
          "$ref": "GoogleRpcStatus"
        },
        "documentInconsistencyType": {
          "description": "The type of document inconsistency.",
          "enumDescriptions": [
            "Default value.",
            "The document proto is invalid.",
            "Indexed docproto metadata is mismatched.",
            "The page image or thumbnails are missing."
          ],
          "enum": [
            "DOCUMENT_INCONSISTENCY_TYPE_UNSPECIFIED",
            "DOCUMENT_INCONSISTENCY_TYPE_INVALID_DOCPROTO",
            "DOCUMENT_INCONSISTENCY_TYPE_MISMATCHED_METADATA",
            "DOCUMENT_INCONSISTENCY_TYPE_NO_PAGE_IMAGE"
          ],
          "type": "string"
        },
        "documentId": {
          "description": "The document identifier.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        }
      },
      "type": "object",
      "description": "Resync status for each document per inconsistency type.",
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus"
    },
    "GoogleCloudDocumentaiV1beta1NormalizedVertex": {
      "type": "object",
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "id": "GoogleCloudDocumentaiV1beta1NormalizedVertex",
      "properties": {
        "x": {
          "description": "X coordinate.",
          "type": "number",
          "format": "float"
        },
        "y": {
          "type": "number",
          "format": "float",
          "description": "Y coordinate (starts from the top of the image)."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageToken": {
      "id": "GoogleCloudDocumentaiV1DocumentPageToken",
      "type": "object",
      "properties": {
        "detectedBreak": {
          "description": "Detected break at the end of a Token.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak"
        },
        "styleInfo": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageTokenStyleInfo",
          "description": "Text style attributes."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for Token."
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance"
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          }
        }
      },
      "description": "A detected token."
    },
    "GoogleCloudDocumentaiV1BatchProcessResponse": {
      "type": "object",
      "properties": {},
      "description": "Response message for BatchProcessDocuments.",
      "id": "GoogleCloudDocumentaiV1BatchProcessResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata",
      "properties": {
        "totalDocumentCount": {
          "description": "Total number of documents deleting from dataset.",
          "format": "int32",
          "type": "integer"
        },
        "individualBatchDeleteStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus"
          },
          "type": "array",
          "description": "The list of response details of each document."
        },
        "errorDocumentCount": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of documents that failed to be deleted in storage."
        },
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "individualExportStatuses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus"
          },
          "description": "The list of response details of each document."
        },
        "splitExportStats": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat"
          },
          "description": "The list of statistics for each dataset split type."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata",
      "description": "Metadata of the batch export documents operation."
    },
    "GoogleCloudDocumentaiV1beta2OutputConfig": {
      "id": "GoogleCloudDocumentaiV1beta2OutputConfig",
      "properties": {
        "gcsDestination": {
          "$ref": "GoogleCloudDocumentaiV1beta2GcsDestination",
          "description": "The Google Cloud Storage location to write the output to."
        },
        "pagesPerShard": {
          "type": "integer",
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json",
          "format": "int32"
        }
      },
      "description": "The desired output location and metadata.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentTextAnchor": {
      "id": "GoogleCloudDocumentaiV1DocumentTextAnchor",
      "properties": {
        "content": {
          "type": "string",
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields."
        },
        "textSegments": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment"
          },
          "description": "The text segments from the Document.text.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Text reference indexing into the Document.text."
    },
    "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeEnumValues": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeEnumValues",
      "description": "Defines the a list of enum values.",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The individual values that this enum values type can include."
        }
      }
    },
    "GoogleCloudDocumentaiV1EvaluationConfidenceLevelMetrics": {
      "id": "GoogleCloudDocumentaiV1EvaluationConfidenceLevelMetrics",
      "type": "object",
      "properties": {
        "metrics": {
          "$ref": "GoogleCloudDocumentaiV1EvaluationMetrics",
          "description": "The metrics at the specific confidence level."
        },
        "confidenceLevel": {
          "type": "number",
          "format": "float",
          "description": "The confidence level."
        }
      },
      "description": "Evaluations metrics, at a specific confidence level."
    },
    "GoogleCloudDocumentaiV1beta2BoundingPoly": {
      "description": "A bounding polygon for the detected image annotation.",
      "id": "GoogleCloudDocumentaiV1beta2BoundingPoly",
      "properties": {
        "vertices": {
          "type": "array",
          "description": "The bounding polygon vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2Vertex"
          }
        },
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2NormalizedVertex"
          }
        }
      },
      "type": "object"
    },
    "GoogleLongrunningListOperationsResponse": {
      "id": "GoogleLongrunningListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageImageQualityScores": {
      "properties": {
        "qualityScore": {
          "format": "float",
          "description": "The overall quality score. Range `[0, 1]` where 1 is perfect quality.",
          "type": "number"
        },
        "detectedDefects": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageImageQualityScoresDetectedDefect"
          },
          "description": "A list of detected defects."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageImageQualityScores",
      "description": "Image Quality Scores for the page image",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3ImportProcessorVersionResponse": {
      "description": "The response message for the ImportProcessorVersion method.",
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The destination processor version name."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3ImportProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata",
      "description": "Metadata of the EvaluateProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1DocumentPageParagraph": {
      "id": "GoogleCloudDocumentaiV1DocumentPageParagraph",
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for Paragraph."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "The history of this annotation."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata",
      "description": "The long-running operation metadata for delete processor method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentRevisionHumanReview": {
      "id": "GoogleCloudDocumentaiV1DocumentRevisionHumanReview",
      "properties": {
        "state": {
          "type": "string",
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`."
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`."
        }
      },
      "type": "object",
      "description": "Human Review information of the document."
    },
    "GoogleCloudDocumentaiV1beta2Barcode": {
      "description": "Encodes the detailed information of a barcode.",
      "type": "object",
      "properties": {
        "rawValue": {
          "description": "Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`.",
          "type": "string"
        },
        "format": {
          "description": "Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type.",
          "type": "string"
        },
        "valueFormat": {
          "description": "Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2Barcode"
    },
    "GoogleProtobufEmpty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "GoogleProtobufEmpty",
      "properties": {}
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse",
      "description": "Response message for the enable processor method. Intentionally empty proto for adding fields in future.",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment": {
      "id": "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment",
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "type": "object",
      "properties": {
        "endIndex": {
          "type": "string",
          "format": "int64",
          "description": "TextSegment half open end UTF-8 char index in the Document.text."
        },
        "startIndex": {
          "type": "string",
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "format": "int64"
        }
      }
    },
    "GoogleCloudDocumentaiV1ProcessorType": {
      "id": "GoogleCloudDocumentaiV1ProcessorType",
      "properties": {
        "type": {
          "type": "string",
          "description": "The processor type, such as: `OCR_PROCESSOR`, `INVOICE_PROCESSOR`."
        },
        "name": {
          "description": "The resource name of the processor type. Format: `projects/{project}/processorTypes/{processor_type}`",
          "type": "string"
        },
        "launchStage": {
          "enumDescriptions": [
            "Do not use this default value.",
            "The feature is not yet implemented. Users can not use it.",
            "Prelaunch features are hidden from users and are only visible internally.",
            "Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.",
            "Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don't have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.",
            "Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.",
            "GA features are open to all developers and are considered stable and fully qualified for production use.",
            "Deprecated features are scheduled to be shut down and removed. For more information, see the \"Deprecation Policy\" section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation."
          ],
          "description": "Launch stage of the processor type",
          "type": "string",
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "UNIMPLEMENTED",
            "PRELAUNCH",
            "EARLY_ACCESS",
            "ALPHA",
            "BETA",
            "GA",
            "DEPRECATED"
          ]
        },
        "allowCreation": {
          "description": "Whether the processor type allows creation. If true, users can create a processor of this processor type. Otherwise, users need to request access.",
          "type": "boolean"
        },
        "category": {
          "description": "The processor category, used by UI to group processor types.",
          "type": "string"
        },
        "availableLocations": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1ProcessorTypeLocationInfo"
          },
          "type": "array",
          "description": "The locations in which this processor is available."
        },
        "sampleDocumentUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of Cloud Storage URIs of sample documents for this processor."
        }
      },
      "description": "A processor type is responsible for performing a certain document understanding task on a certain type of document.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata": {
      "description": "The long-running operation metadata for set default processor version method.",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta2InputConfig": {
      "properties": {
        "contents": {
          "format": "byte",
          "description": "Content in bytes, represented as a stream of bytes. Note: As with all `bytes` fields, proto buffer messages use a pure binary representation, whereas JSON representations use base64. This field only works for synchronous ProcessDocument method.",
          "type": "string"
        },
        "mimeType": {
          "type": "string",
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format."
        },
        "gcsSource": {
          "description": "The Google Cloud Storage location to read the input from. This must be a single file.",
          "$ref": "GoogleCloudDocumentaiV1beta2GcsSource"
        }
      },
      "type": "object",
      "description": "The desired input location and metadata.",
      "id": "GoogleCloudDocumentaiV1beta2InputConfig"
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The id of the parent provenance."
        },
        "index": {
          "format": "int32",
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision.",
          "type": "integer"
        },
        "revision": {
          "format": "int32",
          "type": "integer",
          "description": "The index of the index into current revision's parent_ids list."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent",
      "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations."
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview",
      "description": "Human Review information of the document.",
      "properties": {
        "state": {
          "type": "string",
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`."
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1Vertex": {
      "id": "GoogleCloudDocumentaiV1Vertex",
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "y": {
          "type": "integer",
          "format": "int32",
          "description": "Y coordinate (starts from the top of the image)."
        },
        "x": {
          "description": "X coordinate.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageFormField": {
      "properties": {
        "fieldValue": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the FormField value."
        },
        "valueType": {
          "type": "string",
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`"
        },
        "valueDetectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for value together with confidence.",
          "type": "array"
        },
        "correctedKeyText": {
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction.",
          "type": "string"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "correctedValueText": {
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction.",
          "type": "string"
        },
        "fieldName": {
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "nameDetectedLanguages": {
          "description": "A list of detected languages for name together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        }
      },
      "description": "A form field detected on the page.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageFormField"
    },
    "GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for delete processor version method.",
      "id": "GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1FetchProcessorTypesResponse": {
      "type": "object",
      "properties": {
        "processorTypes": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1ProcessorType"
          },
          "type": "array",
          "description": "The list of processor types."
        }
      },
      "description": "Response message for fetch processor types.",
      "id": "GoogleCloudDocumentaiV1FetchProcessorTypesResponse"
    },
    "GoogleCloudDocumentaiV1beta3DisableProcessorResponse": {
      "type": "object",
      "description": "Response message for the disable processor method. Intentionally empty proto for adding fields in future.",
      "id": "GoogleCloudDocumentaiV1beta3DisableProcessorResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1Processor": {
      "properties": {
        "name": {
          "description": "Output only. Immutable. The resource name of the processor. Format: `projects/{project}/locations/{location}/processors/{processor}`",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "description": "The time the processor was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the processor."
        },
        "kmsKeyName": {
          "description": "The KMS key used for encryption/decryption in CMEK scenarios. See https://cloud.google.com/security-key-management.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLED",
            "DISABLED",
            "ENABLING",
            "DISABLING",
            "CREATING",
            "FAILED",
            "DELETING"
          ],
          "description": "Output only. The state of the processor.",
          "enumDescriptions": [
            "The processor is in an unspecified state.",
            "The processor is enabled, i.e., has an enabled version which can currently serve processing requests and all the feature dependencies have been successfully initialized.",
            "The processor is disabled.",
            "The processor is being enabled, will become `ENABLED` if successful.",
            "The processor is being disabled, will become `DISABLED` if successful.",
            "The processor is being created, will become either `ENABLED` (for successful creation) or `FAILED` (for failed ones). Once a processor is in this state, it can then be used for document processing, but the feature dependencies of the processor might not be fully created yet.",
            "The processor failed during creation or initialization of feature dependencies. The user should delete the processor and recreate one as all the functionalities of the processor are disabled.",
            "The processor is being deleted, will be removed if successful."
          ],
          "readOnly": true,
          "type": "string"
        },
        "processEndpoint": {
          "description": "Output only. Immutable. The http endpoint that can be called to invoke processing.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The processor type, such as: `OCR_PROCESSOR`, `INVOICE_PROCESSOR`. To get a list of processor types, see FetchProcessorTypes."
        },
        "defaultProcessorVersion": {
          "type": "string",
          "description": "The default processor version."
        }
      },
      "description": "The first-class citizen for Document AI. Each processor defines how to extract structural information from a document.",
      "id": "GoogleCloudDocumentaiV1Processor",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DeleteProcessorMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DeleteProcessorMetadata",
      "description": "The long-running operation metadata for delete processor method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1GcsDestination": {
      "id": "GoogleCloudDocumentaiV1beta1GcsDestination",
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse": {
      "properties": {
        "outputConfig": {
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects.",
          "$ref": "GoogleCloudDocumentaiV1beta2OutputConfig"
        },
        "inputConfig": {
          "description": "Information about the input file. This is the same as the corresponding input config in the request.",
          "$ref": "GoogleCloudDocumentaiV1beta2InputConfig"
        }
      },
      "type": "object",
      "description": "Response to a single document processing request.",
      "id": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow": {
      "properties": {
        "cells": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell"
          },
          "description": "Cells that make up this row.",
          "type": "array"
        }
      },
      "description": "A row of table cells.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef": {
      "id": "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef",
      "description": "Represents a weak reference to a page element within a document.",
      "type": "object",
      "properties": {
        "layoutId": {
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.",
          "type": "string"
        },
        "layoutType": {
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ],
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "type": "string"
        },
        "page": {
          "description": "Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json.",
          "type": "string",
          "format": "int64"
        },
        "boundingPoly": {
          "description": "Optional. Identifies the bounding polygon of a layout element on the page.",
          "$ref": "GoogleCloudDocumentaiV1BoundingPoly"
        },
        "confidence": {
          "type": "number",
          "description": "Optional. Confidence of detected page element, if applicable. Range `[0, 1]`.",
          "format": "float"
        }
      }
    },
    "GoogleCloudLocationListLocationsResponse": {
      "properties": {
        "locations": {
          "items": {
            "$ref": "GoogleCloudLocationLocation"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "GoogleCloudLocationListLocationsResponse",
      "type": "object",
      "description": "The response message for Locations.ListLocations."
    },
    "GoogleCloudDocumentaiV1GcsDocument": {
      "id": "GoogleCloudDocumentaiV1GcsDocument",
      "description": "Specifies a document stored on Cloud Storage.",
      "properties": {
        "mimeType": {
          "description": "An IANA MIME type (RFC6838) of the content.",
          "type": "string"
        },
        "gcsUri": {
          "type": "string",
          "description": "The Cloud Storage object uri."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DeployProcessorVersionRequest": {
      "id": "GoogleCloudDocumentaiV1DeployProcessorVersionRequest",
      "type": "object",
      "description": "Request message for the deploy processor version method.",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLayout": {
      "description": "Visual element describing a layout unit on a page.",
      "properties": {
        "orientation": {
          "description": "Detected orientation for the Layout.",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ]
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.",
          "format": "float"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly",
          "description": "The bounding polygon for the Layout."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata",
      "description": "The long-running operation metadata for disable processor method.",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageSymbol": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageSymbol",
      "description": "A detected symbol.",
      "type": "object",
      "properties": {
        "layout": {
          "description": "Layout for Symbol.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow": {
      "type": "object",
      "properties": {
        "cells": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell"
          },
          "description": "Cells that make up this row.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow",
      "description": "A row of table cells."
    },
    "GoogleCloudDocumentaiV1beta2NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "id": "GoogleCloudDocumentaiV1beta2NormalizedVertex",
      "properties": {
        "y": {
          "type": "number",
          "format": "float",
          "description": "Y coordinate (starts from the top of the image)."
        },
        "x": {
          "type": "number",
          "format": "float",
          "description": "X coordinate."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3EnableProcessorResponse": {
      "description": "Response message for the enable processor method. Intentionally empty proto for adding fields in future.",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1beta3EnableProcessorResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTable": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTable",
      "type": "object",
      "description": "A table representation similar to HTML table structure.",
      "properties": {
        "provenance": {
          "description": "The history of this table.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "headerRows": {
          "description": "Header rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          },
          "type": "array"
        },
        "layout": {
          "description": "Layout for Table.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "bodyRows": {
          "type": "array",
          "description": "Body rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          }
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessResponse": {
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessResponse",
      "description": "Response message for BatchProcessDocuments.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1BoundingPoly": {
      "description": "A bounding polygon for the detected image annotation.",
      "id": "GoogleCloudDocumentaiV1beta1BoundingPoly",
      "properties": {
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1NormalizedVertex"
          },
          "type": "array"
        },
        "vertices": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1Vertex"
          },
          "description": "The bounding polygon vertices."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageBlock": {
      "type": "object",
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageBlock",
      "properties": {
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Block."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus": {
      "description": "Resync status against inconsistency types on the dataset level.",
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus",
      "properties": {
        "status": {
          "description": "The status of resyncing the dataset with regards to the detected inconsistency. Empty if `validate_only` is true in the request.",
          "$ref": "GoogleRpcStatus"
        },
        "datasetInconsistencyType": {
          "enum": [
            "DATASET_INCONSISTENCY_TYPE_UNSPECIFIED",
            "DATASET_INCONSISTENCY_TYPE_NO_STORAGE_MARKER"
          ],
          "description": "The type of the inconsistency of the dataset.",
          "enumDescriptions": [
            "Default value.",
            "The marker file under the dataset folder is not found."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionMetadata": {
      "type": "object",
      "description": "The metadata that represents a processor version being created.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "trainingDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation",
          "description": "The training dataset validation information."
        },
        "testDatasetValidation": {
          "description": "The test dataset validation information.",
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation"
        }
      },
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageToken": {
      "type": "object",
      "description": "A detected token.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageToken",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "description": "Layout for Token.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "styleInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo",
          "description": "Text style attributes."
        },
        "detectedBreak": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak",
          "description": "Detected break at the end of a Token."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores": {
      "properties": {
        "detectedDefects": {
          "type": "array",
          "description": "A list of detected defects.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect"
          }
        },
        "qualityScore": {
          "description": "The overall quality score. Range `[0, 1]` where 1 is perfect quality.",
          "type": "number",
          "format": "float"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores",
      "description": "Image Quality Scores for the page image",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect": {
      "type": "object",
      "description": "Image Quality Defects",
      "properties": {
        "type": {
          "type": "string",
          "description": "Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of detected defect. Range `[0, 1]` where 1 indicates strong confidence of that the defect exists."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "totalDocumentCount": {
          "description": "Total number of the documents that are qualified for importing.",
          "format": "int32",
          "type": "integer"
        },
        "importConfigValidationResults": {
          "description": "Validation statuses of the batch documents import config.",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult"
          },
          "type": "array"
        },
        "individualImportStatuses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus"
          },
          "description": "The list of response details of each document."
        }
      },
      "type": "object",
      "description": "Metadata of the import document operation.",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement": {
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.",
      "properties": {
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "type": {
          "description": "Type of the VisualElement.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat": {
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat",
      "description": "The statistic representing a dataset split type for this export.",
      "type": "object",
      "properties": {
        "totalDocumentCount": {
          "description": "Total number of documents with the given dataset split type to be exported.",
          "format": "int32",
          "type": "integer"
        },
        "splitType": {
          "enumDescriptions": [
            "Default value if the enum is not set. go/protodosdonts#do-include-an-unspecified-value-in-an-enum",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ],
          "type": "string",
          "description": "The dataset split type.",
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ]
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevision": {
      "description": "Contains past or forward revisions of this document.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevision",
      "properties": {
        "createTime": {
          "description": "The time that the revision was created, internally generated by doc proto storage at the time of create.",
          "format": "google-datetime",
          "type": "string"
        },
        "agent": {
          "description": "If the change was made by a person specify the name or id of that person.",
          "type": "string"
        },
        "humanReview": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview",
          "description": "Human Review information of this revision."
        },
        "processor": {
          "description": "If the annotation was made by processor identify the processor by its resource name.",
          "type": "string"
        },
        "parentIds": {
          "items": {
            "type": "string"
          },
          "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.",
          "type": "array"
        },
        "id": {
          "type": "string",
          "description": "Id of the revision, internally generated by doc proto storage. Unique within the context of the document."
        },
        "parent": {
          "type": "array",
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1OutputConfig": {
      "properties": {
        "pagesPerShard": {
          "format": "int32",
          "type": "integer",
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json"
        },
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output to.",
          "$ref": "GoogleCloudDocumentaiV1beta1GcsDestination"
        }
      },
      "description": "The desired output location and metadata.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1OutputConfig"
    },
    "GoogleCloudDocumentaiUiv1beta3DocumentId": {
      "id": "GoogleCloudDocumentaiUiv1beta3DocumentId",
      "properties": {
        "gcsManagedDocId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId"
        },
        "revisionRef": {
          "description": "Points to a specific revision of the document if set.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3RevisionRef"
        }
      },
      "type": "object",
      "description": "Document Identifier."
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsResponse": {
      "type": "object",
      "description": "The response proto of ExportDocuments method.",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetResponse": {
      "type": "object",
      "description": "The response proto of ResyncDataset method.",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetResponse"
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextChange": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextChange",
      "type": "object",
      "properties": {
        "changedText": {
          "type": "string",
          "description": "The text that replaces the text identified in the `text_anchor`."
        },
        "provenance": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
          },
          "description": "The history of this annotation.",
          "type": "array"
        },
        "textAnchor": {
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        }
      },
      "description": "This message is used for text changes aka. OCR corrections."
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize": {
      "properties": {
        "size": {
          "format": "float",
          "type": "number",
          "description": "Font size for the text."
        },
        "unit": {
          "type": "string",
          "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.)."
        }
      },
      "type": "object",
      "description": "Font size with unit.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize"
    },
    "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata",
      "description": "The long-running operation metadata for delete processor method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2GcsDestination": {
      "type": "object",
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "id": "GoogleCloudDocumentaiV1beta2GcsDestination",
      "properties": {
        "uri": {
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1EvaluateProcessorVersionResponse": {
      "properties": {
        "evaluation": {
          "description": "The resource name of the created evaluation.",
          "type": "string"
        }
      },
      "description": "Response of the EvaluateProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1EvaluateProcessorVersionResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentRevision": {
      "type": "object",
      "description": "Contains past or forward revisions of this document.",
      "properties": {
        "processor": {
          "description": "If the annotation was made by processor identify the processor by its resource name.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "The time that the revision was created, internally generated by doc proto storage at the time of create.",
          "format": "google-datetime"
        },
        "agent": {
          "description": "If the change was made by a person specify the name or id of that person.",
          "type": "string"
        },
        "parent": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.",
          "type": "array"
        },
        "parentIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field."
        },
        "id": {
          "description": "Id of the revision, internally generated by doc proto storage. Unique within the context of the document.",
          "type": "string"
        },
        "humanReview": {
          "description": "Human Review information of this revision.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevision"
    },
    "GoogleTypeDate": {
      "properties": {
        "year": {
          "type": "integer",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "format": "int32"
        },
        "month": {
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer"
        },
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "id": "GoogleTypeDate"
    },
    "GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse": {
      "properties": {},
      "type": "object",
      "description": "Response message for the deploy processor version method.",
      "id": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1Evaluation": {
      "description": "An evaluation of a ProcessorVersion's performance.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1Evaluation",
      "properties": {
        "createTime": {
          "description": "The time that the evaluation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "documentCounters": {
          "$ref": "GoogleCloudDocumentaiV1EvaluationCounters",
          "description": "Counters for the documents used in the evaluation."
        },
        "name": {
          "description": "The resource name of the evaluation. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}/evaluations/{evaluation}`",
          "type": "string"
        },
        "allEntitiesMetrics": {
          "$ref": "GoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics",
          "description": "Metrics for all the entities in aggregate."
        },
        "kmsKeyName": {
          "description": "The KMS key name used for encryption.",
          "type": "string"
        },
        "entityMetrics": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics"
          },
          "description": "Metrics across confidence levels, for different entities."
        },
        "kmsKeyVersionName": {
          "type": "string",
          "description": "The KMS key version with which data is encrypted."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3CommonOperationMetadata": {
      "type": "object",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "description": "The state of the operation."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The last update time of the operation.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The creation time of the operation.",
          "type": "string"
        },
        "resource": {
          "type": "string",
          "description": "A related resource to this operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
      "description": "The common metadata for long running operations."
    },
    "GoogleCloudDocumentaiV1DocumentTextChange": {
      "properties": {
        "textAnchor": {
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index.",
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor"
        },
        "changedText": {
          "type": "string",
          "description": "The text that replaces the text identified in the `text_anchor`."
        },
        "provenance": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentProvenance"
          },
          "description": "The history of this annotation.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentTextChange",
      "type": "object",
      "description": "This message is used for text changes aka. OCR corrections."
    },
    "GoogleCloudDocumentaiV1EnableProcessorMetadata": {
      "type": "object",
      "description": "The long-running operation metadata for enable processor method.",
      "id": "GoogleCloudDocumentaiV1EnableProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1EnableProcessorResponse": {
      "description": "Response message for the enable processor method. Intentionally empty proto for adding fields in future.",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1EnableProcessorResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityRelation": {
      "properties": {
        "relation": {
          "type": "string",
          "description": "Relationship description."
        },
        "subjectId": {
          "type": "string",
          "description": "Subject entity id."
        },
        "objectId": {
          "description": "Object entity id.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation",
      "description": "Relationship between Entities."
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextChange": {
      "properties": {
        "provenance": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
          },
          "description": "The history of this annotation.",
          "type": "array"
        },
        "textAnchor": {
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
        },
        "changedText": {
          "type": "string",
          "description": "The text that replaces the text identified in the `text_anchor`."
        }
      },
      "type": "object",
      "description": "This message is used for text changes aka. OCR corrections.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextChange"
    },
    "GoogleCloudDocumentaiV1EvaluationMetrics": {
      "description": "Evaluation metrics, either in aggregate or about a specific entity.",
      "type": "object",
      "properties": {
        "f1Score": {
          "type": "number",
          "format": "float",
          "description": "The calculated f1 score."
        },
        "precision": {
          "format": "float",
          "type": "number",
          "description": "The calculated precision."
        },
        "groundTruthOccurrencesCount": {
          "description": "The amount of occurrences in ground truth documents.",
          "type": "integer",
          "format": "int32"
        },
        "truePositivesCount": {
          "description": "The amount of true positives.",
          "format": "int32",
          "type": "integer"
        },
        "predictedOccurrencesCount": {
          "format": "int32",
          "description": "The amount of occurrences in predicted documents.",
          "type": "integer"
        },
        "recall": {
          "format": "float",
          "type": "number",
          "description": "The calculated recall."
        },
        "predictedDocumentCount": {
          "format": "int32",
          "description": "The amount of documents with a predicted occurrence.",
          "type": "integer"
        },
        "totalDocumentsCount": {
          "type": "integer",
          "description": "The amount of documents that had an occurrence of this label.",
          "format": "int32"
        },
        "falsePositivesCount": {
          "format": "int32",
          "type": "integer",
          "description": "The amount of false positives."
        },
        "groundTruthDocumentCount": {
          "type": "integer",
          "description": "The amount of documents with a ground truth occurrence.",
          "format": "int32"
        },
        "falseNegativesCount": {
          "format": "int32",
          "description": "The amount of false negatives.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDocumentaiV1EvaluationMetrics"
    },
    "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig": {
      "id": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig",
      "properties": {
        "pagesOverlap": {
          "type": "integer",
          "description": "The number of overlapping pages between consecutive shards.",
          "format": "int32"
        },
        "pagesPerShard": {
          "format": "int32",
          "type": "integer",
          "description": "The number of pages per shard."
        }
      },
      "type": "object",
      "description": "The sharding config for the output document."
    },
    "GoogleCloudDocumentaiV1BatchProcessRequest": {
      "properties": {
        "inputDocuments": {
          "$ref": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig",
          "description": "The input documents for batch process."
        },
        "skipHumanReview": {
          "type": "boolean",
          "description": "Whether Human Review feature should be skipped for this request. Default to false."
        },
        "documentOutputConfig": {
          "$ref": "GoogleCloudDocumentaiV1DocumentOutputConfig",
          "description": "The overall output config for batch process."
        }
      },
      "description": "Request message for BatchProcessDocuments.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1BatchProcessRequest"
    },
    "GoogleCloudDocumentaiV1DocumentPageImage": {
      "properties": {
        "content": {
          "format": "byte",
          "type": "string",
          "description": "Raw byte content of the image."
        },
        "width": {
          "type": "integer",
          "description": "Width of the image in pixels.",
          "format": "int32"
        },
        "mimeType": {
          "description": "Encoding mime type for the image.",
          "type": "string"
        },
        "height": {
          "description": "Height of the image in pixels.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "Rendered image contents for this page.",
      "id": "GoogleCloudDocumentaiV1DocumentPageImage"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse": {
      "description": "Response message associated with the ExportProcessorVersion operation.",
      "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse",
      "type": "object",
      "properties": {
        "gcsUri": {
          "description": "The Cloud Storage URI containing the output artifacts.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionMetadata": {
      "description": "The long-running operation metadata for the ImportProcessorVersion method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata for the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageLayout": {
      "description": "Visual element describing a layout unit on a page.",
      "properties": {
        "confidence": {
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.",
          "format": "float",
          "type": "number"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "boundingPoly": {
          "description": "The bounding polygon for the Layout.",
          "$ref": "GoogleCloudDocumentaiV1BoundingPoly"
        },
        "orientation": {
          "type": "string",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "description": "Detected orientation for the Layout.",
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ]
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageLayout",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentShardInfo": {
      "type": "object",
      "properties": {
        "shardCount": {
          "type": "string",
          "description": "Total number of shards.",
          "format": "int64"
        },
        "textOffset": {
          "type": "string",
          "description": "The index of the first character in Document.text in the overall document global text.",
          "format": "int64"
        },
        "shardIndex": {
          "format": "int64",
          "description": "The 0-based index of this shard.",
          "type": "string"
        }
      },
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentShardInfo"
    },
    "GoogleCloudDocumentaiV1DocumentPageBlock": {
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for Block."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "The history of this annotation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageBlock",
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation."
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation": {
      "properties": {
        "datasetErrors": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training."
        },
        "documentErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training."
        },
        "datasetErrorCount": {
          "description": "The total number of dataset errors.",
          "type": "integer",
          "format": "int32"
        },
        "documentErrorCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of document errors."
        }
      },
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation",
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset.",
      "type": "object"
    },
    "GoogleLongrunningOperation": {
      "id": "GoogleLongrunningOperation",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation": {
      "type": "object",
      "properties": {
        "datasetErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.",
          "type": "array"
        },
        "documentErrorCount": {
          "description": "The total number of document errors.",
          "format": "int32",
          "type": "integer"
        },
        "documentErrors": {
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "datasetErrorCount": {
          "format": "int32",
          "description": "The total number of dataset errors.",
          "type": "integer"
        }
      },
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset.",
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation"
    },
    "GoogleRpcStatus": {
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "GoogleRpcStatus"
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata": {
      "properties": {
        "trainingDatasetValidation": {
          "description": "The training dataset validation information.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation"
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "testDatasetValidation": {
          "description": "The test dataset validation information.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata",
      "type": "object",
      "description": "The metadata that represents a processor version being created."
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment",
      "type": "object",
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "properties": {
        "endIndex": {
          "description": "TextSegment half open end UTF-8 char index in the Document.text.",
          "type": "string",
          "format": "int64"
        },
        "startIndex": {
          "format": "int64",
          "type": "string",
          "description": "TextSegment start UTF-8 char index in the Document.text."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        },
        "totalDocumentCount": {
          "description": "Total number of the auto-labeling documents.",
          "type": "integer",
          "format": "int32"
        },
        "individualAutoLabelStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus"
          },
          "type": "array",
          "description": "The list of individual auto-labeling statuses of the dataset documents."
        }
      },
      "description": "Metadata of the auto-labeling documents operation."
    },
    "GoogleCloudDocumentaiV1DocumentPageLine": {
      "id": "GoogleCloudDocumentaiV1DocumentPageLine",
      "properties": {
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance"
        },
        "layout": {
          "description": "Layout for Line.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        }
      },
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse",
      "type": "object",
      "properties": {},
      "description": "Response message for the disable processor method. Intentionally empty proto for adding fields in future."
    },
    "GoogleCloudDocumentaiV1ProcessorVersion": {
      "type": "object",
      "description": "A processor version is an implementation of a processor. Each processor can have multiple versions, pre-trained by Google internally or up-trained by the customer. At a time, a processor can only have one default version version. So the processor's behavior (when processing documents) is defined by a default version",
      "properties": {
        "kmsKeyVersionName": {
          "description": "The KMS key version with which data is encrypted.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the processor version was created."
        },
        "deprecationInfo": {
          "description": "If set, information about the eventual deprecation of this version.",
          "$ref": "GoogleCloudDocumentaiV1ProcessorVersionDeprecationInfo"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the processor version."
        },
        "googleManaged": {
          "type": "boolean",
          "description": "Denotes that this ProcessorVersion is managed by google."
        },
        "name": {
          "type": "string",
          "description": "The resource name of the processor version. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}`"
        },
        "kmsKeyName": {
          "description": "The KMS key name used for encryption.",
          "type": "string"
        },
        "latestEvaluation": {
          "$ref": "GoogleCloudDocumentaiV1EvaluationReference",
          "description": "The most recently invoked evaluation for the processor version."
        },
        "state": {
          "description": "The state of the processor version.",
          "enum": [
            "STATE_UNSPECIFIED",
            "DEPLOYED",
            "DEPLOYING",
            "UNDEPLOYED",
            "UNDEPLOYING",
            "CREATING",
            "DELETING",
            "FAILED",
            "IMPORTING"
          ],
          "enumDescriptions": [
            "The processor version is in an unspecified state.",
            "The processor version is deployed and can be used for processing.",
            "The processor version is being deployed.",
            "The processor version is not deployed and cannot be used for processing.",
            "The processor version is being undeployed.",
            "The processor version is being created.",
            "The processor version is being deleted.",
            "The processor version failed and is in an indeterminate state.",
            "The processor version is being imported."
          ],
          "type": "string"
        },
        "documentSchema": {
          "description": "The schema of the processor version. Describes the output.",
          "$ref": "GoogleCloudDocumentaiV1DocumentSchema"
        }
      },
      "id": "GoogleCloudDocumentaiV1ProcessorVersion"
    },
    "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "description": "The long-running operation metadata for set default processor version method.",
      "id": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPage": {
      "type": "object",
      "properties": {
        "formFields": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageFormField"
          },
          "description": "A list of visually detected form fields on the page."
        },
        "pageNumber": {
          "format": "int32",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.",
          "type": "integer"
        },
        "lines": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLine"
          },
          "type": "array",
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line."
        },
        "tokens": {
          "description": "A list of visually detected tokens on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageToken"
          },
          "type": "array"
        },
        "transforms": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix"
          },
          "description": "Transformation matrices that were applied to the original document image to produce Page.image."
        },
        "tables": {
          "type": "array",
          "description": "A list of visually detected tables on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTable"
          }
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the page."
        },
        "imageQualityScores": {
          "description": "Image Quality Scores.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores"
        },
        "dimension": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDimension",
          "description": "Physical dimension of the page."
        },
        "image": {
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImage"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "visualElements": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement"
          },
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page."
        },
        "detectedBarcodes": {
          "description": "A list of detected barcodes.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode"
          },
          "type": "array"
        },
        "symbols": {
          "description": "A list of visually detected symbols on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageSymbol"
          },
          "type": "array"
        },
        "paragraphs": {
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph"
          }
        },
        "blocks": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageBlock"
          },
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this page."
        }
      },
      "description": "A page in a Document.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPage"
    },
    "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object",
      "description": "The long-running operation metadata for enable processor method.",
      "id": "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata"
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadata": {
      "description": "The long-running operation metadata for BatchProcessDocuments.",
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadata",
      "type": "object",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time of the operation."
        },
        "state": {
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "type": "string",
          "description": "The state of the current batch processing.",
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ]
        },
        "individualProcessStatuses": {
          "type": "array",
          "description": "The list of response details of each document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus"
          }
        },
        "createTime": {
          "type": "string",
          "description": "The creation time of the operation.",
          "format": "google-datetime"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLine": {
      "type": "object",
      "properties": {
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "layout": {
          "description": "Layout for Line.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLine",
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc."
    },
    "GoogleCloudDocumentaiV1EvaluateProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1EvaluateProcessorVersionMetadata",
      "description": "Metadata of the EvaluateProcessorVersion method.",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageTokenStyleInfo": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageTokenStyleInfo",
      "properties": {
        "fontSize": {
          "type": "integer",
          "format": "int32",
          "description": "Font size in points (1 point is 1/72\")."
        },
        "handwritten": {
          "description": "Whether the text is handwritten.",
          "type": "boolean"
        },
        "underlined": {
          "description": "Whether the text is underlined.",
          "type": "boolean"
        },
        "backgroundColor": {
          "description": "Color of the background.",
          "$ref": "GoogleTypeColor"
        },
        "fontWeight": {
          "description": "TrueType weight on a scale 100 (Thin) to 1000 (Ultra-heavy). Normal is 400, Bold is 700.",
          "type": "integer",
          "format": "int32"
        },
        "strikeout": {
          "description": "Whether the text is strikethrough.",
          "type": "boolean"
        },
        "subscript": {
          "type": "boolean",
          "description": "Whether the text is a subscript."
        },
        "italic": {
          "type": "boolean",
          "description": "Whether the text is italic."
        },
        "pixelFontSize": {
          "type": "number",
          "format": "double",
          "description": "Font size in pixels, equal to unrounded_fontsize * resolution / 72.0."
        },
        "bold": {
          "description": "Whether the text is bold (equivalent to font weight \u003e= 700).",
          "type": "boolean"
        },
        "superscript": {
          "type": "boolean",
          "description": "Whether the text is a superscript."
        },
        "smallcaps": {
          "description": "Whether the text are small caps.",
          "type": "boolean"
        },
        "letterSpacing": {
          "format": "double",
          "description": "Letter spacing in points.",
          "type": "number"
        },
        "textColor": {
          "description": "Color of the text.",
          "$ref": "GoogleTypeColor"
        },
        "fontType": {
          "description": "Name or style of the font.",
          "type": "string"
        }
      },
      "description": "Font and other text style attributes."
    },
    "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata": {
      "description": "The long-running operation metadata for disable processor method.",
      "id": "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeProperty": {
      "description": "Defines properties that can be part of the entity type.",
      "type": "object",
      "properties": {
        "occurrenceType": {
          "enumDescriptions": [
            "Unspecified occurrence type.",
            "There will be zero or one instance of this entity type. The same entity instance may be mentioned multiple times.",
            "The entity type will appear zero or multiple times.",
            "The entity type will only appear exactly once. The same entity instance may be mentioned multiple times.",
            "The entity type will appear once or more times."
          ],
          "description": "Occurrence type limits the number of instances an entity type appears in the document.",
          "type": "string",
          "enum": [
            "OCCURRENCE_TYPE_UNSPECIFIED",
            "OPTIONAL_ONCE",
            "OPTIONAL_MULTIPLE",
            "REQUIRED_ONCE",
            "REQUIRED_MULTIPLE"
          ]
        },
        "name": {
          "description": "The name of the property. Follows the same guidelines as the EntityType name.",
          "type": "string"
        },
        "valueType": {
          "type": "string",
          "description": "A reference to the value type of the property. This type is subject to the same conventions as the `Entity.base_types` field."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeProperty"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchor": {
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.",
      "properties": {
        "pageRefs": {
          "description": "One or more references to visual page elements",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak": {
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "description": "Detected break type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak",
      "description": "Detected break at the end of a Token."
    },
    "GoogleCloudDocumentaiV1GcsDocuments": {
      "description": "Specifies a set of documents on Cloud Storage.",
      "id": "GoogleCloudDocumentaiV1GcsDocuments",
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1GcsDocument"
          },
          "description": "The list of documents."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue",
      "properties": {
        "floatValue": {
          "description": "Float value.",
          "type": "number",
          "format": "float"
        },
        "moneyValue": {
          "$ref": "GoogleTypeMoney",
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto"
        },
        "text": {
          "type": "string",
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format."
        },
        "datetimeValue": {
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto",
          "$ref": "GoogleTypeDateTime"
        },
        "dateValue": {
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto",
          "$ref": "GoogleTypeDate"
        },
        "booleanValue": {
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes.",
          "type": "boolean"
        },
        "addressValue": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto"
        },
        "integerValue": {
          "type": "integer",
          "format": "int32",
          "description": "Integer value."
        }
      },
      "description": "Parsed and normalized entity value.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement": {
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "type": {
          "type": "string",
          "description": "Type of the VisualElement."
        }
      },
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement"
    },
    "GoogleCloudDocumentaiV1BatchDocumentsInputConfig": {
      "properties": {
        "gcsPrefix": {
          "$ref": "GoogleCloudDocumentaiV1GcsPrefix",
          "description": "The set of documents that match the specified Cloud Storage `gcs_prefix`."
        },
        "gcsDocuments": {
          "description": "The set of documents individually specified on Cloud Storage.",
          "$ref": "GoogleCloudDocumentaiV1GcsDocuments"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig",
      "description": "The common config to specify a set of documents used as input."
    },
    "GoogleCloudDocumentaiV1DocumentPageTable": {
      "description": "A table representation similar to HTML table structure.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageTable",
      "properties": {
        "bodyRows": {
          "type": "array",
          "description": "Body rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableRow"
          }
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "The history of this table."
        },
        "layout": {
          "description": "Layout for Table.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        },
        "headerRows": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableRow"
          },
          "description": "Header rows of the table."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageParagraph": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph",
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "properties": {
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Paragraph."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult",
      "properties": {
        "inputGcsSource": {
          "type": "string",
          "description": "The source Cloud Storage URI specified in the import config."
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The validation status of import config."
        }
      },
      "description": "The validation status of each import config. Status is set to errors if there is no documents to import in the import_config, or OK if the operation will try to proceed at least one document."
    },
    "GoogleCloudDocumentaiV1SetDefaultProcessorVersionRequest": {
      "description": "Request message for the set default processor version method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionRequest",
      "properties": {
        "defaultProcessorVersion": {
          "type": "string",
          "description": "Required. The resource name of child ProcessorVersion to use as default. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{version}`"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue": {
      "description": "Parsed and normalized entity value.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue",
      "properties": {
        "text": {
          "type": "string",
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format."
        },
        "datetimeValue": {
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto",
          "$ref": "GoogleTypeDateTime"
        },
        "dateValue": {
          "$ref": "GoogleTypeDate",
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto"
        },
        "integerValue": {
          "format": "int32",
          "description": "Integer value.",
          "type": "integer"
        },
        "floatValue": {
          "format": "float",
          "type": "number",
          "description": "Float value."
        },
        "addressValue": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto"
        },
        "booleanValue": {
          "type": "boolean",
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes."
        },
        "moneyValue": {
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto",
          "$ref": "GoogleTypeMoney"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPage": {
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "detectedBarcodes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedBarcode"
          },
          "description": "A list of detected barcodes."
        },
        "tables": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTable"
          },
          "description": "A list of visually detected tables on the page.",
          "type": "array"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "The history of this page."
        },
        "image": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageImage",
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned."
        },
        "formFields": {
          "description": "A list of visually detected form fields on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageFormField"
          },
          "type": "array"
        },
        "pageNumber": {
          "format": "int32",
          "type": "integer",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing."
        },
        "paragraphs": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageParagraph"
          },
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph."
        },
        "tokens": {
          "type": "array",
          "description": "A list of visually detected tokens on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageToken"
          }
        },
        "blocks": {
          "type": "array",
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageBlock"
          }
        },
        "symbols": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageSymbol"
          },
          "type": "array",
          "description": "A list of visually detected symbols on the page."
        },
        "dimension": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageDimension",
          "description": "Physical dimension of the page."
        },
        "lines": {
          "type": "array",
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageLine"
          }
        },
        "visualElements": {
          "type": "array",
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageVisualElement"
          }
        },
        "layout": {
          "description": "Layout for the page.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        },
        "transforms": {
          "type": "array",
          "description": "Transformation matrices that were applied to the original document image to produce Page.image.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageMatrix"
          }
        },
        "imageQualityScores": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageImageQualityScores",
          "description": "Image Quality Scores."
        }
      },
      "type": "object",
      "description": "A page in a Document.",
      "id": "GoogleCloudDocumentaiV1DocumentPage"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTable": {
      "type": "object",
      "description": "A table representation similar to HTML table structure.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTable",
      "properties": {
        "headerRows": {
          "description": "Header rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "type": "array"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Table."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "bodyRows": {
          "description": "Body rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "type": "array"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this table."
        }
      }
    },
    "GoogleCloudDocumentaiV1EvaluationCounters": {
      "id": "GoogleCloudDocumentaiV1EvaluationCounters",
      "type": "object",
      "properties": {
        "inputDocumentsCount": {
          "description": "How many documents were sent for evaluation.",
          "format": "int32",
          "type": "integer"
        },
        "invalidDocumentsCount": {
          "format": "int32",
          "description": "How many documents were not included in the evaluation as they didn't pass validation.",
          "type": "integer"
        },
        "failedDocumentsCount": {
          "description": "How many documents were not included in the evaluation as Document AI failed to process them.",
          "type": "integer",
          "format": "int32"
        },
        "evaluatedDocumentsCount": {
          "description": "How many documents were used in the evaluation.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Evaluation counters for the documents that were used."
    },
    "GoogleCloudDocumentaiV1DocumentOutputConfig": {
      "id": "GoogleCloudDocumentaiV1DocumentOutputConfig",
      "description": "Config that controls the output of documents. All documents will be written as a JSON file.",
      "properties": {
        "gcsOutputConfig": {
          "description": "Output config to write the results to Cloud Storage.",
          "$ref": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus": {
      "description": "The status of each individual document in the import process.",
      "properties": {
        "outputGcsDestination": {
          "type": "string",
          "description": "The output_gcs_destination of the processed document if it was successful, otherwise empty."
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of the importing of the document."
        },
        "inputGcsSource": {
          "type": "string",
          "description": "The source Cloud Storage URI of the document."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores": {
      "type": "object",
      "properties": {
        "detectedDefects": {
          "type": "array",
          "description": "A list of detected defects.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect"
          }
        },
        "qualityScore": {
          "description": "The overall quality score. Range `[0, 1]` where 1 is perfect quality.",
          "type": "number",
          "format": "float"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores",
      "description": "Image Quality Scores for the page image"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell": {
      "description": "A cell representation inside the table.",
      "properties": {
        "rowSpan": {
          "type": "integer",
          "description": "How many rows this cell spans.",
          "format": "int32"
        },
        "colSpan": {
          "description": "How many columns this cell spans.",
          "type": "integer",
          "format": "int32"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for TableCell."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentLabel": {
      "description": "Label attaches schema information and/or other metadata to segments within a Document. Multiple Labels on a single field can denote either different labels, different instances of the same label created at different times, or some combination of both.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the label. When the label is generated from AutoML Text Classification model, this field represents the name of the category."
        },
        "automlModel": {
          "description": "Label is generated AutoML model. This field stores the full resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`",
          "type": "string"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Confidence score between 0 and 1 for label assignment."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentLabel",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1ListProcessorVersionsResponse": {
      "description": "Response message for list processors.",
      "properties": {
        "nextPageToken": {
          "description": "Points to the next processor, otherwise empty.",
          "type": "string"
        },
        "processorVersions": {
          "description": "The list of processors.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1ProcessorVersion"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1ListProcessorVersionsResponse"
    },
    "GoogleCloudDocumentaiV1beta1OperationMetadata": {
      "type": "object",
      "properties": {
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time of the operation."
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ],
          "type": "string",
          "description": "The state of the current batch processing.",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ]
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The creation time of the operation.",
          "type": "string"
        }
      },
      "description": "Contains metadata for the BatchProcessDocuments operation.",
      "id": "GoogleCloudDocumentaiV1beta1OperationMetadata"
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityRelation": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation",
      "description": "Relationship between Entities.",
      "properties": {
        "relation": {
          "type": "string",
          "description": "Relationship description."
        },
        "subjectId": {
          "type": "string",
          "description": "Subject entity id."
        },
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageTableTableCell": {
      "description": "A cell representation inside the table.",
      "id": "GoogleCloudDocumentaiV1DocumentPageTableTableCell",
      "properties": {
        "rowSpan": {
          "type": "integer",
          "format": "int32",
          "description": "How many rows this cell spans."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "colSpan": {
          "type": "integer",
          "format": "int32",
          "description": "How many columns this cell spans."
        },
        "layout": {
          "description": "Layout for TableCell.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadata": {
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadata",
      "properties": {
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed."
        },
        "individualProcessStatuses": {
          "description": "The list of response details of each document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus"
          }
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The creation time of the operation.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "type": "string",
          "description": "The state of the current batch processing."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time of the operation."
        }
      },
      "description": "The long-running operation metadata for BatchProcessDocuments.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageDimension": {
      "properties": {
        "width": {
          "format": "float",
          "type": "number",
          "description": "Page width."
        },
        "unit": {
          "description": "Dimension unit.",
          "type": "string"
        },
        "height": {
          "format": "float",
          "description": "Page height.",
          "type": "number"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageDimension",
      "type": "object",
      "description": "Dimension for the page."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef",
      "type": "object",
      "properties": {
        "layoutType": {
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ],
          "type": "string"
        },
        "page": {
          "description": "Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json.",
          "format": "int64",
          "type": "string"
        },
        "confidence": {
          "description": "Optional. Confidence of detected page element, if applicable. Range `[0, 1]`.",
          "type": "number",
          "format": "float"
        },
        "layoutId": {
          "type": "string",
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead."
        },
        "boundingPoly": {
          "description": "Optional. Identifies the bounding polygon of a layout element on the page.",
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly"
        }
      },
      "description": "Represents a weak reference to a page element within a document."
    },
    "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig": {
      "properties": {
        "gcsUri": {
          "description": "The Cloud Storage uri (a directory) of the output.",
          "type": "string"
        },
        "fieldMask": {
          "format": "google-fieldmask",
          "description": "Specifies which fields to include in the output documents. Only supports top level document and pages field so it must be in the form of `{document_field_name}` or `pages.{page_field_name}`.",
          "type": "string"
        },
        "shardingConfig": {
          "description": "Specifies the sharding config for the output document.",
          "$ref": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig",
      "description": "The configuration used when outputting documents.",
      "type": "object"
    },
    "GoogleTypeDateTime": {
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
      "type": "object",
      "properties": {
        "utcOffset": {
          "type": "string",
          "format": "google-duration",
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }."
        },
        "month": {
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.",
          "format": "int32",
          "type": "integer"
        },
        "day": {
          "type": "integer",
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.",
          "format": "int32"
        },
        "year": {
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
          "format": "int32",
          "type": "integer"
        },
        "minutes": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0."
        },
        "timeZone": {
          "description": "Time zone.",
          "$ref": "GoogleTypeTimeZone"
        },
        "nanos": {
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
          "type": "integer",
          "format": "int32"
        },
        "seconds": {
          "format": "int32",
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.",
          "type": "integer"
        },
        "hours": {
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleTypeDateTime"
    },
    "GoogleCloudDocumentaiV1beta3HumanReviewStatus": {
      "type": "object",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ],
          "type": "string",
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review isn't enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the state_message for details."
          ],
          "description": "The state of human review on the processing request."
        },
        "stateMessage": {
          "description": "A message providing more details about the human review state.",
          "type": "string"
        },
        "humanReviewOperation": {
          "description": "The name of the operation triggered by the processed document. This field is populated only when the state is `HUMAN_REVIEW_IN_PROGRESS`. It has the same response type and metadata as the long-running operation returned by ReviewDocument.",
          "type": "string"
        }
      },
      "description": "The status of human review on a processed document.",
      "id": "GoogleCloudDocumentaiV1beta3HumanReviewStatus"
    },
    "GoogleCloudDocumentaiV1DisableProcessorResponse": {
      "type": "object",
      "description": "Response message for the disable processor method. Intentionally empty proto for adding fields in future.",
      "id": "GoogleCloudDocumentaiV1DisableProcessorResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1RawDocument": {
      "properties": {
        "mimeType": {
          "description": "An IANA MIME type (RFC6838) indicating the nature and format of the content.",
          "type": "string"
        },
        "content": {
          "description": "Inline document content.",
          "format": "byte",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1RawDocument",
      "type": "object",
      "description": "Payload message of raw document content (bytes)."
    },
    "GoogleCloudDocumentaiV1DeployProcessorVersionResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DeployProcessorVersionResponse",
      "properties": {},
      "description": "Response message for the deploy processor version method."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDimension": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDimension",
      "description": "Dimension for the page.",
      "properties": {
        "height": {
          "description": "Page height.",
          "type": "number",
          "format": "float"
        },
        "width": {
          "type": "number",
          "format": "float",
          "description": "Page width."
        },
        "unit": {
          "type": "string",
          "description": "Dimension unit."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3ImportProcessorVersionMetadata": {
      "type": "object",
      "description": "The long-running operation metadata for the ImportProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata for the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3ImportProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLayout": {
      "description": "Visual element describing a layout unit on a page.",
      "properties": {
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly",
          "description": "The bounding polygon for the Layout."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`."
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        },
        "orientation": {
          "description": "Detected orientation for the Layout.",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
    },
    "GoogleCloudDocumentaiV1EnableProcessorRequest": {
      "description": "Request message for the enable processor method.",
      "id": "GoogleCloudDocumentaiV1EnableProcessorRequest",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1Vertex": {
      "type": "object",
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "id": "GoogleCloudDocumentaiV1beta1Vertex",
      "properties": {
        "y": {
          "format": "int32",
          "type": "integer",
          "description": "Y coordinate (starts from the top of the image)."
        },
        "x": {
          "format": "int32",
          "description": "X coordinate.",
          "type": "integer"
        }
      }
    },
    "GoogleCloudDocumentaiV1CommonOperationMetadata": {
      "id": "GoogleCloudDocumentaiV1CommonOperationMetadata",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The creation time of the operation."
        },
        "resource": {
          "description": "A related resource to this operation.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "The last update time of the operation.",
          "format": "google-datetime"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "description": "The state of the operation.",
          "type": "string"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        }
      },
      "description": "The common metadata for long running operations.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "description": "The long-running operation metadata for the undeploy processor version method."
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for delete processor version method.",
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "description": "The long-running operation metadata for deploy processor version method."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImage": {
      "description": "Rendered image contents for this page.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImage",
      "type": "object",
      "properties": {
        "content": {
          "description": "Raw byte content of the image.",
          "type": "string",
          "format": "byte"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "description": "Height of the image in pixels."
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Width of the image in pixels."
        },
        "mimeType": {
          "type": "string",
          "description": "Encoding mime type for the image."
        }
      }
    },
    "GoogleCloudDocumentaiV1ReviewDocumentResponse": {
      "properties": {
        "gcsDestination": {
          "type": "string",
          "description": "The Cloud Storage uri for the human reviewed document if the review is succeeded."
        },
        "state": {
          "type": "string",
          "description": "The state of the review operation.",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "The review operation is rejected by the reviewer.",
            "The review operation is succeeded."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "REJECTED",
            "SUCCEEDED"
          ]
        },
        "rejectionReason": {
          "description": "The reason why the review is rejected by reviewer.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1ReviewDocumentResponse",
      "description": "Response message for review document method."
    },
    "GoogleCloudDocumentaiV1ProcessorVersionDeprecationInfo": {
      "type": "object",
      "properties": {
        "deprecationTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which this processor version will be deprecated."
        },
        "replacementProcessorVersion": {
          "type": "string",
          "description": "If set, the processor version that will be used as a replacement."
        }
      },
      "id": "GoogleCloudDocumentaiV1ProcessorVersionDeprecationInfo",
      "description": "Information about the upcoming deprecation of this processor version."
    },
    "GoogleCloudDocumentaiV1ListEvaluationsResponse": {
      "properties": {
        "evaluations": {
          "description": "The evaluations requested.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1Evaluation"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "type": "object",
      "description": "The response from `ListEvaluations`.",
      "id": "GoogleCloudDocumentaiV1ListEvaluationsResponse"
    },
    "GoogleCloudDocumentaiV1DocumentEntityRelation": {
      "type": "object",
      "description": "Relationship between Entities.",
      "id": "GoogleCloudDocumentaiV1DocumentEntityRelation",
      "properties": {
        "relation": {
          "type": "string",
          "description": "Relationship description."
        },
        "subjectId": {
          "description": "Subject entity id.",
          "type": "string"
        },
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        }
      }
    },
    "GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for delete processor version method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDimension": {
      "description": "Dimension for the page.",
      "type": "object",
      "properties": {
        "height": {
          "format": "float",
          "description": "Page height.",
          "type": "number"
        },
        "unit": {
          "type": "string",
          "description": "Dimension unit."
        },
        "width": {
          "description": "Page width.",
          "type": "number",
          "format": "float"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDimension"
    },
    "GoogleCloudDocumentaiV1UndeployProcessorVersionRequest": {
      "description": "Request message for the undeploy processor version method.",
      "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionRequest",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata": {
      "description": "The long-running operation metadata for the undeploy processor version method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode",
      "properties": {
        "barcode": {
          "description": "Detailed barcode information of the DetectedBarcode.",
          "$ref": "GoogleCloudDocumentaiV1beta1Barcode"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for DetectedBarcode."
        }
      },
      "type": "object",
      "description": "A detected barcode."
    },
    "GoogleCloudDocumentaiV1DocumentPageSymbol": {
      "id": "GoogleCloudDocumentaiV1DocumentPageSymbol",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "description": "Layout for Symbol.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        }
      },
      "description": "A detected symbol.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata": {
      "description": "The metadata that represents a processor version being created.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata",
      "properties": {
        "testDatasetValidation": {
          "description": "The test dataset validation information.",
          "$ref": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation"
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "trainingDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The training dataset validation information."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse",
      "description": "The response message for the ImportProcessorVersion method.",
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The destination processor version name."
        }
      }
    },
    "GoogleTypePostalAddress": {
      "description": "Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an internationalization-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478",
      "type": "object",
      "properties": {
        "administrativeArea": {
          "type": "string",
          "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated."
        },
        "postalCode": {
          "description": "Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).",
          "type": "string"
        },
        "regionCode": {
          "description": "Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See https://cldr.unicode.org/ and https://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland.",
          "type": "string"
        },
        "locality": {
          "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines.",
          "type": "string"
        },
        "revision": {
          "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.",
          "format": "int32",
          "type": "integer"
        },
        "languageCode": {
          "type": "string",
          "description": "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\"."
        },
        "sublocality": {
          "description": "Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.",
          "type": "string"
        },
        "organization": {
          "description": "Optional. The name of the organization at the address.",
          "type": "string"
        },
        "addressLines": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas)."
        },
        "sortingCode": {
          "description": "Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire).",
          "type": "string"
        },
        "recipients": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information."
        }
      },
      "id": "GoogleTypePostalAddress"
    },
    "GoogleCloudDocumentaiV1ProcessRequest": {
      "id": "GoogleCloudDocumentaiV1ProcessRequest",
      "type": "object",
      "description": "Request message for the process document method.",
      "properties": {
        "skipHumanReview": {
          "description": "Whether Human Review feature should be skipped for this request. Default to false.",
          "type": "boolean"
        },
        "inlineDocument": {
          "$ref": "GoogleCloudDocumentaiV1Document",
          "description": "An inline document proto."
        },
        "fieldMask": {
          "type": "string",
          "description": "Specifies which fields to include in the `ProcessResponse` Document. Only supports top level document and pages field so it must be in the form of `{document_field_name}` or `pages.{page_field_name}`.",
          "format": "google-fieldmask"
        },
        "rawDocument": {
          "description": "A raw document content (bytes).",
          "$ref": "GoogleCloudDocumentaiV1RawDocument"
        }
      }
    },
    "GoogleCloudDocumentaiV1ProcessResponse": {
      "properties": {
        "humanReviewStatus": {
          "description": "The status of human review on the processed document.",
          "$ref": "GoogleCloudDocumentaiV1HumanReviewStatus"
        },
        "document": {
          "$ref": "GoogleCloudDocumentaiV1Document",
          "description": "The document payload, will populate fields based on the processor's behavior."
        }
      },
      "description": "Response message for the process document method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1ProcessResponse"
    },
    "GoogleCloudDocumentaiV1beta2DocumentShardInfo": {
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
      "properties": {
        "textOffset": {
          "description": "The index of the first character in Document.text in the overall document global text.",
          "format": "int64",
          "type": "string"
        },
        "shardIndex": {
          "description": "The 0-based index of this shard.",
          "format": "int64",
          "type": "string"
        },
        "shardCount": {
          "format": "int64",
          "description": "Total number of shards.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2OperationMetadata": {
      "description": "Contains metadata for the BatchProcessDocuments operation.",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "createTime": {
          "description": "The creation time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "type": "string",
          "description": "The state of the current batch processing.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ]
        },
        "updateTime": {
          "description": "The last update time of the operation.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2OperationMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus": {
      "description": "The status of each individual document in the export process.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus",
      "properties": {
        "outputGcsDestination": {
          "description": "The output_gcs_destination of the exported document if it was successful, otherwise empty.",
          "type": "string"
        },
        "documentId": {
          "description": "The path to source docproto of the document.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        },
        "status": {
          "description": "The status of the exporting of the document.",
          "$ref": "GoogleRpcStatus"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize": {
      "description": "Font size with unit.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize",
      "type": "object",
      "properties": {
        "size": {
          "description": "Font size for the text.",
          "type": "number",
          "format": "float"
        },
        "unit": {
          "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.).",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue": {
      "id": "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue",
      "type": "object",
      "description": "Parsed and normalized entity value.",
      "properties": {
        "text": {
          "type": "string",
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format."
        },
        "moneyValue": {
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto",
          "$ref": "GoogleTypeMoney"
        },
        "addressValue": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto"
        },
        "booleanValue": {
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes.",
          "type": "boolean"
        },
        "datetimeValue": {
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto",
          "$ref": "GoogleTypeDateTime"
        },
        "dateValue": {
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto",
          "$ref": "GoogleTypeDate"
        },
        "integerValue": {
          "description": "Integer value.",
          "type": "integer",
          "format": "int32"
        },
        "floatValue": {
          "description": "Float value.",
          "format": "float",
          "type": "number"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageBlock": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageBlock",
      "properties": {
        "layout": {
          "description": "Layout for Block.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        }
      },
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage",
      "description": "Detected language for a structural component.",
      "type": "object",
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of detected language. Range `[0, 1]`.",
          "format": "float"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata",
      "description": "The long-running operation metadata for the undeploy processor version method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenance": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
      "type": "object",
      "description": "Structure to identify provenance relationships between annotations in different revisions.",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "format": "int32"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.",
            "Add an element.",
            "Remove an element identified by `parent`.",
            "Updates any fields within the given provenance scope of the message. It overwrites the fields rather than replacing them. Use this when you want to update a field value of an entity without also updating all the child properties.",
            "Currently unused. Replace an element identified by `parent`.",
            "Deprecated. Request human review for the element identified by `parent`.",
            "Deprecated. Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Deprecated. Element is skipped in the validation process."
          ],
          "description": "The type of provenance operation.",
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "UPDATE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ]
        },
        "parents": {
          "description": "References to the original elements that are replaced.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent"
          },
          "type": "array"
        },
        "revision": {
          "format": "int32",
          "description": "The index of the revision that produced this element.",
          "type": "integer"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageDetectedBarcode": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageDetectedBarcode",
      "description": "A detected barcode.",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for DetectedBarcode."
        },
        "barcode": {
          "$ref": "GoogleCloudDocumentaiV1Barcode",
          "description": "Detailed barcode information of the DetectedBarcode."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageVisualElement": {
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          }
        },
        "type": {
          "type": "string",
          "description": "Type of the VisualElement."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for VisualElement."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageVisualElement",
      "type": "object",
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page."
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for updating the human review configuration."
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionRequest": {
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionRequest",
      "properties": {
        "baseProcessorVersion": {
          "type": "string",
          "description": "Optional. The processor version to use as a base for training. This processor version must be a child of `parent`. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`."
        },
        "inputData": {
          "description": "Optional. The input data used to train the `ProcessorVersion`.",
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionRequestInputData"
        },
        "documentSchema": {
          "$ref": "GoogleCloudDocumentaiV1DocumentSchema",
          "description": "Optional. The schema the processor version will be trained with."
        },
        "processorVersion": {
          "description": "Required. The processor version to be created.",
          "$ref": "GoogleCloudDocumentaiV1ProcessorVersion"
        }
      },
      "type": "object",
      "description": "Request message for the create processor version method."
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus": {
      "description": "The status of a each individual document in the batch process.",
      "type": "object",
      "properties": {
        "inputGcsSource": {
          "description": "The source of the document, same as the [input_gcs_source] field in the request when the batch process started. The batch process is started by take snapshot of that document, since a user can move or change that document during the process.",
          "type": "string"
        },
        "outputGcsDestination": {
          "description": "The output_gcs_destination (in the request as `output_gcs_destination`) of the processed document if it was successful, otherwise empty.",
          "type": "string"
        },
        "status": {
          "description": "The status processing the document.",
          "$ref": "GoogleRpcStatus"
        },
        "humanReviewStatus": {
          "$ref": "GoogleCloudDocumentaiV1HumanReviewStatus",
          "description": "The status of human review on the processed document."
        }
      },
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse": {
      "description": "Response of the delete documents operation.",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenance": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
      "properties": {
        "type": {
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "UPDATE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ],
          "enumDescriptions": [
            "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.",
            "Add an element.",
            "Remove an element identified by `parent`.",
            "Updates any fields within the given provenance scope of the message. It overwrites the fields rather than replacing them. Use this when you want to update a field value of an entity without also updating all the child properties.",
            "Currently unused. Replace an element identified by `parent`.",
            "Deprecated. Request human review for the element identified by `parent`.",
            "Deprecated. Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Deprecated. Element is skipped in the validation process."
          ],
          "description": "The type of provenance operation.",
          "type": "string"
        },
        "revision": {
          "description": "The index of the revision that produced this element.",
          "type": "integer",
          "format": "int32"
        },
        "parents": {
          "type": "array",
          "description": "References to the original elements that are replaced.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The Id of this operation. Needs to be unique within the scope of the revision."
        }
      },
      "type": "object",
      "description": "Structure to identify provenance relationships between annotations in different revisions."
    },
    "GoogleCloudDocumentaiV1DisableProcessorMetadata": {
      "id": "GoogleCloudDocumentaiV1DisableProcessorMetadata",
      "description": "The long-running operation metadata for disable processor method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionResponse": {
      "description": "Response of the EvaluateProcessorVersion method.",
      "properties": {
        "evaluation": {
          "description": "The resource name of the created evaluation.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2Vertex": {
      "type": "object",
      "properties": {
        "y": {
          "description": "Y coordinate (starts from the top of the image).",
          "type": "integer",
          "format": "int32"
        },
        "x": {
          "type": "integer",
          "format": "int32",
          "description": "X coordinate."
        }
      },
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "id": "GoogleCloudDocumentaiV1beta2Vertex"
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment": {
      "properties": {
        "endIndex": {
          "type": "string",
          "format": "int64",
          "description": "TextSegment half open end UTF-8 char index in the Document.text."
        },
        "startIndex": {
          "format": "int64",
          "type": "string",
          "description": "TextSegment start UTF-8 char index in the Document.text."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment",
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1Document": {
      "properties": {
        "pages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPage"
          },
          "description": "Visual page layout for the Document."
        },
        "revisions": {
          "description": "Placeholder. Revision history of this document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevision"
          },
          "type": "array"
        },
        "uri": {
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.",
          "type": "string"
        },
        "mimeType": {
          "description": "An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml.",
          "type": "string"
        },
        "content": {
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
          "type": "string",
          "format": "byte"
        },
        "textChanges": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextChange"
          },
          "type": "array",
          "description": "Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other."
        },
        "entityRelations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation"
          },
          "description": "Placeholder. Relationship among Document.entities."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Any error that occurred while processing this document."
        },
        "textStyles": {
          "type": "array",
          "description": "Styles for the Document.text.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyle"
          }
        },
        "entities": {
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          }
        },
        "shardInfo": {
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentShardInfo"
        },
        "text": {
          "description": "Optional. UTF-8 encoded text in reading order from the document.",
          "type": "string"
        }
      },
      "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1Document"
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse": {
      "properties": {
        "rejectionReason": {
          "description": "The reason why the review is rejected by reviewer.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "The review operation is rejected by the reviewer.",
            "The review operation is succeeded."
          ],
          "description": "The state of the review operation.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "REJECTED",
            "SUCCEEDED"
          ]
        },
        "gcsDestination": {
          "description": "The Cloud Storage uri for the human reviewed document if the review is succeeded.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse",
      "type": "object",
      "description": "Response message for review document method."
    },
    "GoogleCloudDocumentaiV1DocumentPageFormField": {
      "properties": {
        "fieldName": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc."
        },
        "correctedValueText": {
          "type": "string",
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction."
        },
        "correctedKeyText": {
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction.",
          "type": "string"
        },
        "valueType": {
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`",
          "type": "string"
        },
        "fieldValue": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for the FormField value."
        },
        "valueDetectedLanguages": {
          "description": "A list of detected languages for value together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          }
        },
        "nameDetectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for name together with confidence."
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageFormField",
      "description": "A form field detected on the page."
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for set default processor version method.",
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak": {
      "description": "Detected break at the end of a Token.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ],
          "description": "Detected break type.",
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageTableTableRow": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageTableTableRow",
      "description": "A row of table cells.",
      "properties": {
        "cells": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableCell"
          },
          "type": "array",
          "description": "Cells that make up this row."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentSchemaMetadata": {
      "id": "GoogleCloudDocumentaiV1DocumentSchemaMetadata",
      "description": "Metadata for global schema behavior.",
      "type": "object",
      "properties": {
        "prefixedNamingOnProperties": {
          "description": "If set, all the nested entities must be prefixed with the parents.",
          "type": "boolean"
        },
        "documentAllowMultipleLabels": {
          "type": "boolean",
          "description": "If true, on a given page, there can be multiple `document` annotations covering it."
        },
        "skipNamingValidation": {
          "description": "If set, we will skip the naming format validation in the schema. So the string values in `DocumentSchema.EntityType.name` and `DocumentSchema.EntityType.Property.name` will not be checked.",
          "type": "boolean"
        },
        "documentSplitter": {
          "description": "If true, a `document` entity type can be applied to subdocument ( splitting). Otherwise, it can only be applied to the entire document (classification).",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyle": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyle",
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "properties": {
        "textStyle": {
          "type": "string",
          "description": "Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp"
        },
        "backgroundColor": {
          "$ref": "GoogleTypeColor",
          "description": "Text background color."
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        },
        "textDecoration": {
          "description": "Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp",
          "type": "string"
        },
        "fontFamily": {
          "type": "string",
          "description": "Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp"
        },
        "fontWeight": {
          "type": "string",
          "description": "Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp"
        },
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        },
        "fontSize": {
          "description": "Font size.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse": {
      "properties": {
        "responses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse"
          },
          "description": "Responses for each individual document.",
          "type": "array"
        }
      },
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete.",
      "id": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata": {
      "type": "object",
      "description": "The long-running operation metadata for review document method.",
      "properties": {
        "questionId": {
          "description": "The Crowd Compute question ID.",
          "type": "string"
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata"
    },
    "GoogleCloudDocumentaiV1ReviewDocumentRequest": {
      "description": "Request message for review document method.",
      "type": "object",
      "properties": {
        "inlineDocument": {
          "description": "An inline document proto.",
          "$ref": "GoogleCloudDocumentaiV1Document"
        },
        "documentSchema": {
          "description": "The document schema of the human review task.",
          "$ref": "GoogleCloudDocumentaiV1DocumentSchema"
        },
        "enableSchemaValidation": {
          "description": "Whether the validation should be performed on the ad-hoc review request.",
          "type": "boolean"
        },
        "priority": {
          "type": "string",
          "description": "The priority of the human review task.",
          "enum": [
            "DEFAULT",
            "URGENT"
          ],
          "enumDescriptions": [
            "The default priority level.",
            "The urgent priority level. The labeling manager should allocate labeler resource to the urgent task queue to respect this priority level."
          ]
        }
      },
      "id": "GoogleCloudDocumentaiV1ReviewDocumentRequest"
    },
    "GoogleCloudDocumentaiV1DocumentStyle": {
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "type": "object",
      "properties": {
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        },
        "textStyle": {
          "description": "Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp",
          "type": "string"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "backgroundColor": {
          "description": "Text background color.",
          "$ref": "GoogleTypeColor"
        },
        "fontSize": {
          "description": "Font size.",
          "$ref": "GoogleCloudDocumentaiV1DocumentStyleFontSize"
        },
        "textDecoration": {
          "type": "string",
          "description": "Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp"
        },
        "fontFamily": {
          "description": "Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp",
          "type": "string"
        },
        "fontWeight": {
          "type": "string",
          "description": "Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentStyle"
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse",
      "description": "Response message for the deploy processor version method."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`"
        },
        "confidence": {
          "description": "Confidence of detected defect. Range `[0, 1]` where 1 indicates strong confidence of that the defect exists.",
          "type": "number",
          "format": "float"
        }
      },
      "description": "Image Quality Defects",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse": {
      "description": "Response of the batch move documents operation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1DisableProcessorRequest": {
      "description": "Request message for the disable processor method.",
      "id": "GoogleCloudDocumentaiV1DisableProcessorRequest",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageSymbol": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageSymbol",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Symbol."
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        }
      },
      "type": "object",
      "description": "A detected symbol."
    },
    "GoogleCloudDocumentaiV1ListProcessorsResponse": {
      "description": "Response message for list processors.",
      "id": "GoogleCloudDocumentaiV1ListProcessorsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Points to the next processor, otherwise empty."
        },
        "processors": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1Processor"
          },
          "description": "The list of processors.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1GcsSource": {
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "type": "object",
      "description": "The Google Cloud Storage location where the input file will be read from.",
      "id": "GoogleCloudDocumentaiV1beta1GcsSource"
    },
    "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak": {
      "id": "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak",
      "properties": {
        "type": {
          "description": "Detected break type.",
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ]
        }
      },
      "type": "object",
      "description": "Detected break at the end of a Token."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode",
      "type": "object",
      "properties": {
        "barcode": {
          "description": "Detailed barcode information of the DetectedBarcode.",
          "$ref": "GoogleCloudDocumentaiV1beta2Barcode"
        },
        "layout": {
          "description": "Layout for DetectedBarcode.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        }
      },
      "description": "A detected barcode."
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse": {
      "type": "object",
      "description": "The response for TrainProcessorVersion.",
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The resource name of the processor version produced by training."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1DocumentPageMatrix": {
      "properties": {
        "data": {
          "type": "string",
          "description": "The matrix data.",
          "format": "byte"
        },
        "cols": {
          "type": "integer",
          "description": "Number of columns in the matrix.",
          "format": "int32"
        },
        "type": {
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "format": "int32",
          "type": "integer"
        },
        "rows": {
          "type": "integer",
          "description": "Number of rows in the matrix.",
          "format": "int32"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageMatrix",
      "type": "object",
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation."
    },
    "GoogleCloudDocumentaiV1beta2Document": {
      "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.",
      "id": "GoogleCloudDocumentaiV1beta2Document",
      "type": "object",
      "properties": {
        "textStyles": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyle"
          },
          "description": "Styles for the Document.text.",
          "type": "array"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          },
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries."
        },
        "labels": {
          "description": "Labels for this document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentLabel"
          },
          "type": "array"
        },
        "pages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPage"
          },
          "description": "Visual page layout for the Document."
        },
        "revisions": {
          "description": "Placeholder. Revision history of this document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevision"
          }
        },
        "uri": {
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.",
          "type": "string"
        },
        "shardInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified."
        },
        "entityRelations": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation"
          },
          "description": "Placeholder. Relationship among Document.entities.",
          "type": "array"
        },
        "content": {
          "type": "string",
          "format": "byte",
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64."
        },
        "textChanges": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextChange"
          },
          "description": "Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.",
          "type": "array"
        },
        "mimeType": {
          "description": "An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml.",
          "type": "string"
        },
        "text": {
          "description": "Optional. UTF-8 encoded text in reading order from the document.",
          "type": "string"
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Any error that occurred while processing this document."
        }
      }
    },
    "GoogleCloudDocumentaiV1ProcessorTypeLocationInfo": {
      "type": "object",
      "description": "The location information about where the processor is available.",
      "properties": {
        "locationId": {
          "description": "The location id, currently must be one of [us, eu].",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1ProcessorTypeLocationInfo"
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntity": {
      "type": "object",
      "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.",
      "properties": {
        "redacted": {
          "description": "Optional. Whether the entity will be redacted for de-identification purposes.",
          "type": "boolean"
        },
        "mentionId": {
          "type": "string",
          "description": "Optional. Deprecated. Use `id` field instead."
        },
        "type": {
          "description": "Required. Entity type from a schema e.g. `Address`.",
          "type": "string"
        },
        "mentionText": {
          "type": "string",
          "description": "Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`."
        },
        "id": {
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document.",
          "type": "string"
        },
        "provenance": {
          "description": "Optional. The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "normalizedValue": {
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue"
        },
        "pageAnchor": {
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor"
        },
        "properties": {
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          },
          "type": "array"
        },
        "confidence": {
          "type": "number",
          "description": "Optional. Confidence of detected Schema entity. Range `[0, 1]`.",
          "format": "float"
        },
        "textAnchor": {
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntity"
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata",
      "description": "The long-running operation metadata for UpdateLabelerPool.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageMatrix": {
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix",
      "type": "object",
      "properties": {
        "cols": {
          "description": "Number of columns in the matrix.",
          "format": "int32",
          "type": "integer"
        },
        "rows": {
          "description": "Number of rows in the matrix.",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "type": "integer",
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html"
        },
        "data": {
          "description": "The matrix data.",
          "format": "byte",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse": {
      "type": "object",
      "description": "Response message for set default processor version method.",
      "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent": {
      "properties": {
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the index into current revision's parent_ids list."
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "description": "The id of the parent provenance."
        },
        "index": {
          "type": "integer",
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision.",
          "format": "int32"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent",
      "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1InputConfig": {
      "properties": {
        "gcsSource": {
          "description": "The Google Cloud Storage location to read the input from. This must be a single file.",
          "$ref": "GoogleCloudDocumentaiV1beta1GcsSource"
        },
        "mimeType": {
          "type": "string",
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format."
        }
      },
      "description": "The desired input location and metadata.",
      "id": "GoogleCloudDocumentaiV1beta1InputConfig",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId": {
      "id": "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId",
      "description": "Identifies a document uniquely within the scope of a dataset in the Cloud Storage option.",
      "properties": {
        "cwDocId": {
          "description": "Id of the document (indexed) managed by Content Warehouse.",
          "type": "string"
        },
        "gcsUri": {
          "description": "Required. The Cloud Storage uri where the actual document is stored.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo": {
      "type": "object",
      "properties": {
        "superscript": {
          "description": "Whether the text is a superscript.",
          "type": "boolean"
        },
        "letterSpacing": {
          "format": "double",
          "description": "Letter spacing in points.",
          "type": "number"
        },
        "bold": {
          "type": "boolean",
          "description": "Whether the text is bold (equivalent to font weight \u003e= 700)."
        },
        "fontType": {
          "description": "Name or style of the font.",
          "type": "string"
        },
        "smallcaps": {
          "description": "Whether the text are small caps.",
          "type": "boolean"
        },
        "textColor": {
          "description": "Color of the text.",
          "$ref": "GoogleTypeColor"
        },
        "fontSize": {
          "format": "int32",
          "type": "integer",
          "description": "Font size in points (1 point is 1/72\")."
        },
        "backgroundColor": {
          "$ref": "GoogleTypeColor",
          "description": "Color of the background."
        },
        "strikeout": {
          "description": "Whether the text is strikethrough.",
          "type": "boolean"
        },
        "underlined": {
          "description": "Whether the text is underlined.",
          "type": "boolean"
        },
        "subscript": {
          "description": "Whether the text is a subscript.",
          "type": "boolean"
        },
        "handwritten": {
          "description": "Whether the text is handwritten.",
          "type": "boolean"
        },
        "fontWeight": {
          "description": "TrueType weight on a scale 100 (Thin) to 1000 (Ultra-heavy). Normal is 400, Bold is 700.",
          "type": "integer",
          "format": "int32"
        },
        "italic": {
          "description": "Whether the text is italic.",
          "type": "boolean"
        },
        "pixelFontSize": {
          "type": "number",
          "description": "Font size in pixels, equal to unrounded_fontsize * resolution / 72.0.",
          "format": "double"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo",
      "description": "Font and other text style attributes."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo": {
      "properties": {
        "backgroundColor": {
          "description": "Color of the background.",
          "$ref": "GoogleTypeColor"
        },
        "smallcaps": {
          "type": "boolean",
          "description": "Whether the text are small caps."
        },
        "letterSpacing": {
          "type": "number",
          "description": "Letter spacing in points.",
          "format": "double"
        },
        "underlined": {
          "description": "Whether the text is underlined.",
          "type": "boolean"
        },
        "fontType": {
          "description": "Name or style of the font.",
          "type": "string"
        },
        "italic": {
          "description": "Whether the text is italic.",
          "type": "boolean"
        },
        "bold": {
          "description": "Whether the text is bold (equivalent to font weight \u003e= 700).",
          "type": "boolean"
        },
        "textColor": {
          "description": "Color of the text.",
          "$ref": "GoogleTypeColor"
        },
        "subscript": {
          "type": "boolean",
          "description": "Whether the text is a subscript."
        },
        "strikeout": {
          "description": "Whether the text is strikethrough.",
          "type": "boolean"
        },
        "fontSize": {
          "type": "integer",
          "format": "int32",
          "description": "Font size in points (1 point is 1/72\")."
        },
        "handwritten": {
          "type": "boolean",
          "description": "Whether the text is handwritten."
        },
        "superscript": {
          "description": "Whether the text is a superscript.",
          "type": "boolean"
        },
        "fontWeight": {
          "type": "integer",
          "description": "TrueType weight on a scale 100 (Thin) to 1000 (Ultra-heavy). Normal is 400, Bold is 700.",
          "format": "int32"
        },
        "pixelFontSize": {
          "type": "number",
          "description": "Font size in pixels, equal to unrounded_fontsize * resolution / 72.0.",
          "format": "double"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo",
      "type": "object",
      "description": "Font and other text style attributes."
    },
    "GoogleCloudDocumentaiV1NormalizedVertex": {
      "properties": {
        "x": {
          "format": "float",
          "description": "X coordinate.",
          "type": "number"
        },
        "y": {
          "description": "Y coordinate (starts from the top of the image).",
          "type": "number",
          "format": "float"
        }
      },
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1NormalizedVertex"
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus": {
      "properties": {
        "status": {
          "description": "The status of the document auto-labeling.",
          "$ref": "GoogleRpcStatus"
        },
        "gcsUri": {
          "type": "string",
          "description": "The gcs_uri of the auto-labeling document, which uniquely identifies a dataset document."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus",
      "type": "object",
      "description": "The status of individual documents in the auto-labeling process."
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionResponse": {
      "description": "The response for TrainProcessorVersion.",
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionResponse",
      "type": "object",
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The resource name of the processor version produced by training."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse": {
      "type": "object",
      "description": "Response of the import document operation.",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageParagraph": {
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Paragraph."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation."
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata": {
      "description": "The long-running operation metadata for DeleteLabelerPool.",
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentRevision": {
      "id": "GoogleCloudDocumentaiV1DocumentRevision",
      "properties": {
        "createTime": {
          "description": "The time that the revision was created, internally generated by doc proto storage at the time of create.",
          "format": "google-datetime",
          "type": "string"
        },
        "processor": {
          "description": "If the annotation was made by processor identify the processor by its resource name.",
          "type": "string"
        },
        "parentIds": {
          "type": "array",
          "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.",
          "items": {
            "type": "string"
          }
        },
        "humanReview": {
          "description": "Human Review information of this revision.",
          "$ref": "GoogleCloudDocumentaiV1DocumentRevisionHumanReview"
        },
        "agent": {
          "description": "If the change was made by a person specify the name or id of that person.",
          "type": "string"
        },
        "id": {
          "description": "Id of the revision, internally generated by doc proto storage. Unique within the context of the document.",
          "type": "string"
        },
        "parent": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array",
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field."
        }
      },
      "description": "Contains past or forward revisions of this document.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageAnchor": {
      "properties": {
        "pageRefs": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef"
          },
          "description": "One or more references to visual page elements",
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageAnchor",
      "type": "object",
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types."
    },
    "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse": {
      "id": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse",
      "type": "object",
      "description": "Response to a single document processing request.",
      "properties": {
        "inputConfig": {
          "description": "Information about the input file. This is the same as the corresponding input config in the request.",
          "$ref": "GoogleCloudDocumentaiV1beta1InputConfig"
        },
        "outputConfig": {
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects.",
          "$ref": "GoogleCloudDocumentaiV1beta1OutputConfig"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionMetadata": {
      "description": "Metadata of the EvaluateProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchor": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor",
      "properties": {
        "pageRefs": {
          "type": "array",
          "description": "One or more references to visual page elements",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef"
          }
        }
      },
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse": {
      "properties": {
        "evaluation": {
          "description": "The resource name of the created evaluation.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse",
      "description": "Response of the EvaluateProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1DocumentSchema": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name to show to users.",
          "type": "string"
        },
        "entityTypes": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentSchemaEntityType"
          },
          "description": "Entity types of the schema.",
          "type": "array"
        },
        "description": {
          "description": "Description of the schema.",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata of the schema.",
          "$ref": "GoogleCloudDocumentaiV1DocumentSchemaMetadata"
        }
      },
      "description": "The schema defines the output of the processed document by a processor.",
      "id": "GoogleCloudDocumentaiV1DocumentSchema"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef": {
      "description": "Represents a weak reference to a page element within a document.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef",
      "properties": {
        "layoutType": {
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ],
          "type": "string",
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "description": "Optional. The type of the layout element that is being referenced if any."
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly",
          "description": "Optional. Identifies the bounding polygon of a layout element on the page."
        },
        "layoutId": {
          "type": "string",
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead."
        },
        "confidence": {
          "format": "float",
          "description": "Optional. Confidence of detected page element, if applicable. Range `[0, 1]`.",
          "type": "number"
        },
        "page": {
          "description": "Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The common metadata about the operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "description": "Metadata message associated with the ExportProcessorVersion operation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1UndeployProcessorVersionResponse": {
      "properties": {},
      "description": "Response message for the undeploy processor version method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage": {
      "type": "object",
      "description": "Detected language for a structural component.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage",
      "properties": {
        "confidence": {
          "description": "Confidence of detected language. Range `[0, 1]`.",
          "type": "number",
          "format": "float"
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        }
      }
    },
    "GoogleCloudDocumentaiV1Barcode": {
      "properties": {
        "valueFormat": {
          "type": "string",
          "description": "Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license."
        },
        "format": {
          "type": "string",
          "description": "Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type."
        },
        "rawValue": {
          "description": "Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`.",
          "type": "string"
        }
      },
      "description": "Encodes the detailed information of a barcode.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1Barcode"
    }
  },
  "ownerName": "Google",
  "revision": "20230420",
  "batchPath": "batch",
  "name": "documentai",
  "fullyEncodeReservedExpansion": true,
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "Document",
  "discoveryVersion": "v1"
}

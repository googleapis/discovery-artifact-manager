{
  "canonicalName": "Document",
  "ownerDomain": "google.com",
  "version": "v1",
  "discoveryVersion": "v1",
  "version_module": true,
  "parameters": {
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "alt": {
      "default": "json",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    }
  },
  "documentationLink": "https://cloud.google.com/document-ai/docs/",
  "basePath": "",
  "baseUrl": "https://documentai.googleapis.com/",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "fullyEncodeReservedExpansion": true,
  "batchPath": "batch",
  "resources": {
    "projects": {
      "resources": {
        "operations": {
          "methods": {
            "get": {
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "httpMethod": "GET",
              "id": "documentai.projects.operations.get",
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "The name of the operation resource.",
                  "required": true,
                  "pattern": "^projects/[^/]+/operations/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/operations/{operationsId}"
            }
          }
        },
        "locations": {
          "methods": {
            "get": {
              "id": "documentai.projects.locations.get",
              "description": "Gets information about a location.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "response": {
                "$ref": "GoogleCloudLocationLocation"
              }
            },
            "list": {
              "id": "documentai.projects.locations.list",
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+$"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudLocationListLocationsResponse"
              },
              "path": "v1/{+name}/locations",
              "flatPath": "v1/projects/{projectsId}/locations",
              "httpMethod": "GET"
            },
            "fetchProcessorTypes": {
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The location of processor types to list. Format: `projects/{project}/locations/{location}`.",
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}:fetchProcessorTypes",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:fetchProcessorTypes",
              "response": {
                "$ref": "GoogleCloudDocumentaiV1FetchProcessorTypesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "description": "Fetches processor types. Note that we don't use ListProcessorTypes here, because it isn't paginated.",
              "id": "documentai.projects.locations.fetchProcessorTypes"
            }
          },
          "resources": {
            "processorTypes": {
              "methods": {
                "get": {
                  "description": "Gets a processor type detail.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processorTypes/{processorTypesId}",
                  "id": "documentai.projects.locations.processorTypes.get",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1ProcessorType"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/processorTypes/[^/]+$",
                      "description": "Required. The processor type resource name.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  }
                },
                "list": {
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The location of processor types to list. Format: `projects/{project}/locations/{location}`.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "pageSize": {
                      "description": "The maximum number of processor types to return. If unspecified, at most `100` processor types will be returned. The maximum value is `500`. Values above `500` will be coerced to `500`.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Used to retrieve the next page of results, empty if at the end of the list."
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1ListProcessorTypesResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processorTypes",
                  "id": "documentai.projects.locations.processorTypes.list",
                  "path": "v1/{+parent}/processorTypes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists the processor types that exist.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "processors": {
              "resources": {
                "processorVersions": {
                  "resources": {
                    "evaluations": {
                      "methods": {
                        "list": {
                          "parameters": {
                            "pageToken": {
                              "location": "query",
                              "description": "A page token, received from a previous `ListEvaluations` call. Provide this to retrieve the subsequent page.",
                              "type": "string"
                            },
                            "parent": {
                              "type": "string",
                              "location": "path",
                              "description": "Required. The resource name of the ProcessorVersion to list evaluations for. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$"
                            },
                            "pageSize": {
                              "type": "integer",
                              "location": "query",
                              "format": "int32",
                              "description": "The standard list page size. If unspecified, at most `5` evaluations are returned. The maximum value is `100`. Values above `100` are coerced to `100`."
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDocumentaiV1ListEvaluationsResponse"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}/evaluations",
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+parent}/evaluations",
                          "id": "documentai.projects.locations.processors.processorVersions.evaluations.list",
                          "description": "Retrieves a set of evaluations for a given processor version."
                        },
                        "get": {
                          "id": "documentai.projects.locations.processors.processorVersions.evaluations.get",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+name}",
                          "parameters": {
                            "name": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+/evaluations/[^/]+$",
                              "location": "path",
                              "description": "Required. The resource name of the Evaluation to get. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}/evaluations/{evaluation}`",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDocumentaiV1Evaluation"
                          },
                          "httpMethod": "GET",
                          "description": "Retrieves a specific evaluation.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}/evaluations/{evaluationsId}"
                        }
                      }
                    }
                  },
                  "methods": {
                    "undeploy": {
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:undeploy",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1UndeployProcessorVersionRequest"
                      },
                      "description": "Undeploys the processor version.",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The processor version resource name to be undeployed.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "id": "documentai.projects.locations.processors.processorVersions.undeploy",
                      "path": "v1/{+name}:undeploy"
                    },
                    "train": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent (project, location and processor) to create the new version for. Format: `projects/{project}/locations/{location}/processors/{processor}`.",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$"
                        }
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Trains a new processor version. Operation metadata is returned as TrainProcessorVersionMetadata.",
                      "path": "v1/{+parent}/processorVersions:train",
                      "id": "documentai.projects.locations.processors.processorVersions.train",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions:train",
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionRequest"
                      }
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "documentai.projects.locations.processors.processorVersions.list",
                      "path": "v1/{+parent}/processorVersions",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "We will return the processor versions sorted by creation time. The page token will point to the next processor version.",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "The maximum number of processor versions to return. If unspecified, at most `10` processor versions will be returned. The maximum value is `20`. Values above `20` will be coerced to `20`.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. The parent (project, location and processor) to list all versions. Format: `projects/{project}/locations/{location}/processors/{processor}`",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$"
                        }
                      },
                      "description": "Lists all versions of a processor.",
                      "response": {
                        "$ref": "GoogleCloudDocumentaiV1ListProcessorVersionsResponse"
                      }
                    },
                    "batchProcess": {
                      "id": "documentai.projects.locations.processors.processorVersions.batchProcess",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:batchProcess",
                      "path": "v1/{+name}:batchProcess",
                      "httpMethod": "POST",
                      "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.",
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1BatchProcessRequest"
                      }
                    },
                    "get": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "id": "documentai.projects.locations.processors.processorVersions.get",
                      "description": "Gets a processor version detail.",
                      "parameters": {
                        "name": {
                          "description": "Required. The processor resource name.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDocumentaiV1ProcessorVersion"
                      },
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "description": "Required. The processor version resource name to be deleted.",
                          "required": true
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}",
                      "httpMethod": "DELETE",
                      "description": "Deletes the processor version, all artifacts under the processor version will be deleted.",
                      "id": "documentai.projects.locations.processors.processorVersions.delete",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "deploy": {
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deploys the processor version.",
                      "path": "v1/{+name}:deploy",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The processor version resource name to be deployed.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1DeployProcessorVersionRequest"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:deploy",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "documentai.projects.locations.processors.processorVersions.deploy"
                    },
                    "process": {
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}:process",
                      "httpMethod": "POST",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:process",
                      "response": {
                        "$ref": "GoogleCloudDocumentaiV1ProcessResponse"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1ProcessRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "documentai.projects.locations.processors.processorVersions.process",
                      "description": "Processes a single document."
                    },
                    "evaluateProcessorVersion": {
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1EvaluateProcessorVersionRequest"
                      },
                      "parameterOrder": [
                        "processorVersion"
                      ],
                      "path": "v1/{+processorVersion}:evaluateProcessorVersion",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "id": "documentai.projects.locations.processors.processorVersions.evaluateProcessorVersion",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:evaluateProcessorVersion",
                      "httpMethod": "POST",
                      "description": "Evaluates a ProcessorVersion against annotated documents, producing an Evaluation.",
                      "parameters": {
                        "processorVersion": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "description": "Required. The resource name of the ProcessorVersion to evaluate. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      }
                    }
                  }
                },
                "humanReviewConfig": {
                  "methods": {
                    "reviewDocument": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/humanReviewConfig:reviewDocument",
                      "parameterOrder": [
                        "humanReviewConfig"
                      ],
                      "description": "Send a document for Human Review. The input document should be processed by the specified processor.",
                      "path": "v1/{+humanReviewConfig}:reviewDocument",
                      "id": "documentai.projects.locations.processors.humanReviewConfig.reviewDocument",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "humanReviewConfig": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/humanReviewConfig$",
                          "description": "Required. The resource name of the HumanReviewConfig that the document will be reviewed with.",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1ReviewDocumentRequest"
                      },
                      "httpMethod": "POST"
                    }
                  }
                }
              },
              "methods": {
                "create": {
                  "id": "documentai.projects.locations.processors.create",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1Processor"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent (project and location) under which to create the processor. Format: `projects/{project}/locations/{location}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v1/{+parent}/processors",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a processor from the ProcessorType provided. The processor will be at `ENABLED` state by default after its creation.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1Processor"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "process": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1ProcessRequest"
                  },
                  "httpMethod": "POST",
                  "id": "documentai.projects.locations.processors.process",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`"
                    }
                  },
                  "path": "v1/{+name}:process",
                  "description": "Processes a single document.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:process",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1ProcessResponse"
                  }
                },
                "get": {
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1Processor"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The processor resource name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets a processor detail.",
                  "id": "documentai.projects.locations.processors.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "disable": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1DisableProcessorRequest"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The processor resource name to be disabled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$"
                    }
                  },
                  "id": "documentai.projects.locations.processors.disable",
                  "description": "Disables a processor",
                  "path": "v1/{+name}:disable",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:disable",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "description": "Required. The processor resource name to be deleted.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "description": "Deletes the processor, unloads all deployed model artifacts if it was enabled and then deletes all artifacts associated with this processor.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "documentai.projects.locations.processors.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}"
                },
                "batchProcess": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1BatchProcessRequest"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The resource name of Processor or ProcessorVersion. Format: `projects/{project}/locations/{location}/processors/{processor}`, or `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "documentai.projects.locations.processors.batchProcess",
                  "path": "v1/{+name}:batchProcess",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:batchProcess",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "setDefaultProcessorVersion": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:setDefaultProcessorVersion",
                  "id": "documentai.projects.locations.processors.setDefaultProcessorVersion",
                  "path": "v1/{+processor}:setDefaultProcessorVersion",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "processor"
                  ],
                  "parameters": {
                    "processor": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The resource name of the Processor to change default version."
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionRequest"
                  },
                  "description": "Set the default (active) version of a Processor that will be used in ProcessDocument and BatchProcessDocuments.",
                  "httpMethod": "POST"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "We will return the processors sorted by creation time. The page token will point to the next processor.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "The maximum number of processors to return. If unspecified, at most `50` processors will be returned. The maximum value is `100`. Values above `100` will be coerced to `100`.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent (project and location) which owns this collection of Processors. Format: `projects/{project}/locations/{location}`",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v1/{+parent}/processors",
                  "id": "documentai.projects.locations.processors.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors",
                  "description": "Lists all processors which belong to this project.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1ListProcessorsResponse"
                  }
                },
                "enable": {
                  "httpMethod": "POST",
                  "path": "v1/{+name}:enable",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:enable",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1EnableProcessorRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "description": "Required. The processor resource name to be enabled.",
                      "location": "path"
                    }
                  },
                  "id": "documentai.projects.locations.processors.enable",
                  "description": "Enables a processor"
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "documentai.projects.locations.operations.cancel",
                  "path": "v1/{+name}:cancel",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                },
                "list": {
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "The standard list page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations$",
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "documentai.projects.locations.operations.list",
                  "httpMethod": "GET"
                },
                "get": {
                  "path": "v1/{+name}",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "id": "documentai.projects.locations.operations.get",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "operations": {
      "methods": {
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "documentai.operations.delete",
          "flatPath": "v1/operations/{operationsId}",
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
          "response": {
            "$ref": "GoogleProtobufEmpty"
          },
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^operations/.*$",
              "type": "string",
              "description": "The name of the operation resource to be deleted.",
              "required": true
            }
          },
          "httpMethod": "DELETE",
          "path": "v1/{+name}",
          "parameterOrder": [
            "name"
          ]
        }
      }
    }
  },
  "protocol": "rest",
  "description": "Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.",
  "title": "Cloud Document AI API",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "rootUrl": "https://documentai.googleapis.com/",
  "name": "documentai",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "servicePath": "",
  "id": "documentai:v1",
  "schemas": {
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus": {
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus",
      "description": "The status of each individual document in the import process.",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of the importing of the document."
        },
        "outputGcsDestination": {
          "description": "The output_gcs_destination of the processed document if it was successful, otherwise empty.",
          "type": "string"
        },
        "inputGcsSource": {
          "type": "string",
          "description": "The source Cloud Storage URI of the document."
        },
        "outputDocumentId": {
          "description": "The document id of imported document if it was successful, otherwise empty.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse": {
      "description": "Response message for the SetDefaultProcessorVersion method.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyle": {
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "type": "object",
      "properties": {
        "textDecoration": {
          "type": "string",
          "description": "[Text decoration](https://www.w3schools.com/cssref/pr_text_text-decoration.asp). Follows CSS standard. "
        },
        "color": {
          "description": "Text color.",
          "$ref": "GoogleTypeColor"
        },
        "backgroundColor": {
          "$ref": "GoogleTypeColor",
          "description": "Text background color."
        },
        "fontFamily": {
          "type": "string",
          "description": "Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp"
        },
        "fontWeight": {
          "type": "string",
          "description": "[Font weight](https://www.w3schools.com/cssref/pr_font_weight.asp). Possible values are `normal`, `bold`, `bolder`, and `lighter`."
        },
        "textStyle": {
          "description": "[Text style](https://www.w3schools.com/cssref/pr_font_font-style.asp). Possible values are `normal`, `italic`, and `oblique`.",
          "type": "string"
        },
        "fontSize": {
          "description": "Font size.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize"
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyle"
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadata": {
      "type": "object",
      "properties": {
        "individualProcessStatuses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus"
          },
          "description": "The list of response details of each document."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time of the operation."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "description": "The state of the current batch processing.",
          "type": "string"
        },
        "createTime": {
          "description": "The creation time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadata",
      "description": "The long-running operation metadata for BatchProcessDocuments."
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata": {
      "properties": {
        "destSplitType": {
          "type": "string",
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ],
          "description": "The destination dataset split type.",
          "enumDescriptions": [
            "Default value if the enum is not set.",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ]
        },
        "destDatasetType": {
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ],
          "deprecated": true,
          "type": "string",
          "enumDescriptions": [
            "Default value if the enum is not set.",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ],
          "description": "The destination dataset split type."
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "individualBatchMoveStatuses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus"
          },
          "description": "The list of response details of each document."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata": {
      "properties": {
        "splitExportStats": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat"
          },
          "description": "The list of statistics for each dataset split type.",
          "type": "array"
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "individualExportStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus"
          },
          "type": "array",
          "description": "The list of response details of each document."
        }
      },
      "description": "Metadata of the batch export documents operation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadata"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImage": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImage",
      "description": "Rendered image contents for this page.",
      "type": "object",
      "properties": {
        "height": {
          "format": "int32",
          "type": "integer",
          "description": "Height of the image in pixels."
        },
        "width": {
          "type": "integer",
          "description": "Width of the image in pixels.",
          "format": "int32"
        },
        "content": {
          "type": "string",
          "description": "Raw byte content of the image.",
          "format": "byte"
        },
        "mimeType": {
          "description": "Encoding [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml) for the image.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1EvaluationConfidenceLevelMetrics": {
      "id": "GoogleCloudDocumentaiV1EvaluationConfidenceLevelMetrics",
      "description": "Evaluations metrics, at a specific confidence level.",
      "properties": {
        "metrics": {
          "description": "The metrics at the specific confidence level.",
          "$ref": "GoogleCloudDocumentaiV1EvaluationMetrics"
        },
        "confidenceLevel": {
          "format": "float",
          "type": "number",
          "description": "The confidence level."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo",
      "properties": {
        "subscript": {
          "type": "boolean",
          "description": "Whether the text is a subscript. This feature is not supported yet."
        },
        "fontSize": {
          "type": "integer",
          "description": "Font size in points (`1` point is `¹⁄₇₂` inches).",
          "format": "int32"
        },
        "fontType": {
          "description": "Name or style of the font.",
          "type": "string"
        },
        "backgroundColor": {
          "description": "Color of the background.",
          "$ref": "GoogleTypeColor"
        },
        "superscript": {
          "description": "Whether the text is a superscript. This feature is not supported yet.",
          "type": "boolean"
        },
        "fontWeight": {
          "format": "int32",
          "type": "integer",
          "description": "TrueType weight on a scale `100` (thin) to `1000` (ultra-heavy). Normal is `400`, bold is `700`."
        },
        "smallcaps": {
          "description": "Whether the text is in small caps. This feature is not supported yet.",
          "type": "boolean"
        },
        "italic": {
          "description": "Whether the text is italic.",
          "type": "boolean"
        },
        "pixelFontSize": {
          "type": "number",
          "description": "Font size in pixels, equal to _unrounded font_size_ * _resolution_ ÷ `72.0`.",
          "format": "double"
        },
        "strikeout": {
          "type": "boolean",
          "description": "Whether the text is strikethrough. This feature is not supported yet."
        },
        "underlined": {
          "description": "Whether the text is underlined.",
          "type": "boolean"
        },
        "bold": {
          "type": "boolean",
          "description": "Whether the text is bold (equivalent to font_weight is at least `700`)."
        },
        "textColor": {
          "$ref": "GoogleTypeColor",
          "description": "Color of the text."
        },
        "letterSpacing": {
          "description": "Letter spacing in points.",
          "type": "number",
          "format": "double"
        },
        "handwritten": {
          "type": "boolean",
          "description": "Whether the text is handwritten."
        }
      },
      "description": "Font and other text style attributes.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionResponse",
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The resource name of the processor version produced by training."
        }
      },
      "description": "The response for TrainProcessorVersion.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1BatchProcessRequest": {
      "id": "GoogleCloudDocumentaiV1BatchProcessRequest",
      "description": "Request message for BatchProcessDocuments.",
      "properties": {
        "processOptions": {
          "$ref": "GoogleCloudDocumentaiV1ProcessOptions",
          "description": "Inference-time options for the process API"
        },
        "skipHumanReview": {
          "type": "boolean",
          "description": "Whether human review should be skipped for this request. Default to `false`."
        },
        "inputDocuments": {
          "$ref": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig",
          "description": "The input documents for the BatchProcessDocuments method."
        },
        "labels": {
          "description": "Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "documentOutputConfig": {
          "description": "The output configuration for the BatchProcessDocuments method.",
          "$ref": "GoogleCloudDocumentaiV1DocumentOutputConfig"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect": {
      "properties": {
        "confidence": {
          "description": "Confidence of detected defect. Range `[0, 1]` where `1` indicates strong confidence that the defect exists.",
          "format": "float",
          "type": "number"
        },
        "type": {
          "type": "string",
          "description": "Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect",
      "type": "object",
      "description": "Image Quality Defects"
    },
    "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment": {
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "id": "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment",
      "properties": {
        "startIndex": {
          "format": "int64",
          "type": "string",
          "description": "TextSegment start UTF-8 char index in the Document.text."
        },
        "endIndex": {
          "type": "string",
          "format": "int64",
          "description": "TextSegment half open end UTF-8 char index in the Document.text."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata": {
      "description": "The long-running operation metadata for the DeployProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef": {
      "properties": {
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly",
          "description": "Optional. Identifies the bounding polygon of a layout element on the page. If `layout_type` is set, the bounding polygon must be exactly the same to the layout element it's referring to."
        },
        "layoutType": {
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ],
          "type": "string",
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "description": "Optional. The type of the layout element that is being referenced if any."
        },
        "page": {
          "description": "Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json.",
          "type": "string",
          "format": "int64"
        },
        "confidence": {
          "description": "Optional. Confidence of detected page element, if applicable. Range `[0, 1]`.",
          "type": "number",
          "format": "float"
        },
        "layoutId": {
          "deprecated": true,
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef",
      "description": "Represents a weak reference to a page element within a document."
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation": {
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset.",
      "properties": {
        "datasetErrors": {
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "datasetErrorCount": {
          "description": "The total number of dataset errors.",
          "format": "int32",
          "type": "integer"
        },
        "documentErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training."
        },
        "documentErrorCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of document errors."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLayout": {
      "properties": {
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly",
          "description": "The bounding polygon for the Layout."
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.",
          "format": "float"
        },
        "orientation": {
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ],
          "description": "Detected orientation for the Layout.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Visual element describing a layout unit on a page.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
    },
    "GoogleCloudDocumentaiV1DocumentPageLine": {
      "type": "object",
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for Line."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "deprecated": true,
          "description": "The history of this annotation."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageLine"
    },
    "GoogleTypeMoney": {
      "description": "Represents an amount of money with its currency type.",
      "id": "GoogleTypeMoney",
      "properties": {
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "type": "integer",
          "format": "int32"
        },
        "units": {
          "format": "int64",
          "type": "string",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
        },
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell",
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "rowSpan": {
          "type": "integer",
          "description": "How many rows this cell spans.",
          "format": "int32"
        },
        "layout": {
          "description": "Layout for TableCell.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "colSpan": {
          "type": "integer",
          "format": "int32",
          "description": "How many columns this cell spans."
        }
      },
      "type": "object",
      "description": "A cell representation inside the table."
    },
    "GoogleProtobufEmpty": {
      "type": "object",
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1DocumentPageTokenStyleInfo": {
      "properties": {
        "letterSpacing": {
          "format": "double",
          "type": "number",
          "description": "Letter spacing in points."
        },
        "fontWeight": {
          "type": "integer",
          "description": "TrueType weight on a scale `100` (thin) to `1000` (ultra-heavy). Normal is `400`, bold is `700`.",
          "format": "int32"
        },
        "strikeout": {
          "description": "Whether the text is strikethrough. This feature is not supported yet.",
          "type": "boolean"
        },
        "bold": {
          "type": "boolean",
          "description": "Whether the text is bold (equivalent to font_weight is at least `700`)."
        },
        "fontType": {
          "type": "string",
          "description": "Name or style of the font."
        },
        "textColor": {
          "$ref": "GoogleTypeColor",
          "description": "Color of the text."
        },
        "backgroundColor": {
          "description": "Color of the background.",
          "$ref": "GoogleTypeColor"
        },
        "subscript": {
          "description": "Whether the text is a subscript. This feature is not supported yet.",
          "type": "boolean"
        },
        "underlined": {
          "type": "boolean",
          "description": "Whether the text is underlined."
        },
        "pixelFontSize": {
          "format": "double",
          "type": "number",
          "description": "Font size in pixels, equal to _unrounded font_size_ * _resolution_ ÷ `72.0`."
        },
        "fontSize": {
          "format": "int32",
          "type": "integer",
          "description": "Font size in points (`1` point is `¹⁄₇₂` inches)."
        },
        "handwritten": {
          "type": "boolean",
          "description": "Whether the text is handwritten."
        },
        "italic": {
          "type": "boolean",
          "description": "Whether the text is italic."
        },
        "superscript": {
          "description": "Whether the text is a superscript. This feature is not supported yet.",
          "type": "boolean"
        },
        "smallcaps": {
          "type": "boolean",
          "description": "Whether the text is in small caps. This feature is not supported yet."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageTokenStyleInfo",
      "type": "object",
      "description": "Font and other text style attributes."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell": {
      "description": "A cell representation inside the table.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell",
      "properties": {
        "colSpan": {
          "format": "int32",
          "description": "How many columns this cell spans.",
          "type": "integer"
        },
        "rowSpan": {
          "format": "int32",
          "description": "How many rows this cell spans.",
          "type": "integer"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "layout": {
          "description": "Layout for TableCell.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata": {
      "type": "object",
      "description": "The common metadata for long running operations.",
      "properties": {
        "state": {
          "description": "The state of the operation.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ]
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The last update time of the operation.",
          "type": "string"
        },
        "resource": {
          "description": "A related resource to this operation.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "The creation time of the operation.",
          "format": "google-datetime"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
    },
    "GoogleCloudDocumentaiV1GcsDocuments": {
      "properties": {
        "documents": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1GcsDocument"
          },
          "type": "array",
          "description": "The list of documents."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1GcsDocuments",
      "description": "Specifies a set of documents on Cloud Storage."
    },
    "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus",
      "properties": {
        "status": {
          "description": "The status of deleting the document in storage.",
          "$ref": "GoogleRpcStatus"
        },
        "documentId": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentId",
          "description": "The document id of the document."
        }
      },
      "description": "The status of each individual document in the batch delete process."
    },
    "GoogleCloudDocumentaiV1Vertex": {
      "properties": {
        "x": {
          "type": "integer",
          "description": "X coordinate.",
          "format": "int32"
        },
        "y": {
          "format": "int32",
          "type": "integer",
          "description": "Y coordinate (starts from the top of the image)."
        }
      },
      "id": "GoogleCloudDocumentaiV1Vertex",
      "type": "object",
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageMatrix": {
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix",
      "properties": {
        "type": {
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "format": "int32",
          "type": "integer"
        },
        "cols": {
          "description": "Number of columns in the matrix.",
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "description": "The matrix data.",
          "format": "byte",
          "type": "string"
        },
        "rows": {
          "format": "int32",
          "type": "integer",
          "description": "Number of rows in the matrix."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus": {
      "description": "Resync status against inconsistency types on the dataset level.",
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus",
      "properties": {
        "status": {
          "description": "The status of resyncing the dataset with regards to the detected inconsistency. Empty if ResyncDatasetRequest.validate_only is `true`.",
          "$ref": "GoogleRpcStatus"
        },
        "datasetInconsistencyType": {
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "The marker file under the dataset folder is not found."
          ],
          "enum": [
            "DATASET_INCONSISTENCY_TYPE_UNSPECIFIED",
            "DATASET_INCONSISTENCY_TYPE_NO_STORAGE_MARKER"
          ],
          "description": "The type of the inconsistency of the dataset."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3Dataset": {
      "id": "GoogleCloudDocumentaiV1beta3Dataset",
      "description": "A singleton resource under a Processor which configures a collection of documents.",
      "type": "object",
      "properties": {
        "unmanagedDatasetConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta3DatasetUnmanagedDatasetConfig",
          "description": "Optional. Unmanaged dataset configuration. Use this configuration if the dataset documents are managed by the document service internally (not user-managed)."
        },
        "documentWarehouseConfig": {
          "deprecated": true,
          "description": "Optional. Deprecated. Warehouse-based dataset configuration is not supported.",
          "$ref": "GoogleCloudDocumentaiV1beta3DatasetDocumentWarehouseConfig"
        },
        "name": {
          "type": "string",
          "description": "Dataset resource name. Format: `projects/{project}/locations/{location}/processors/{processor}/dataset`"
        },
        "gcsManagedConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta3DatasetGCSManagedConfig",
          "description": "Optional. User-managed Cloud Storage dataset configuration. Use this configuration if the dataset documents are stored under a user-managed Cloud Storage location."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "UNINITIALIZED",
            "INITIALIZING",
            "INITIALIZED"
          ],
          "description": "Required. State of the dataset. Ignored when updating dataset.",
          "enumDescriptions": [
            "Default unspecified enum, should not be used.",
            "Dataset has not been initialized.",
            "Dataset is being initialized.",
            "Dataset has been initialized."
          ],
          "type": "string"
        },
        "spannerIndexingConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta3DatasetSpannerIndexingConfig",
          "description": "Optional. A lightweight indexing source with low latency and high reliability, but lacking advanced features like CMEK and content-based search."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores",
      "properties": {
        "qualityScore": {
          "type": "number",
          "description": "The overall quality score. Range `[0, 1]` where `1` is perfect quality.",
          "format": "float"
        },
        "detectedDefects": {
          "type": "array",
          "description": "A list of detected defects.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect"
          }
        }
      },
      "description": "Image quality scores for the page image."
    },
    "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue": {
      "properties": {
        "booleanValue": {
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes.",
          "type": "boolean"
        },
        "addressValue": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto"
        },
        "moneyValue": {
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto",
          "$ref": "GoogleTypeMoney"
        },
        "text": {
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.",
          "type": "string"
        },
        "dateValue": {
          "$ref": "GoogleTypeDate",
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto"
        },
        "integerValue": {
          "format": "int32",
          "description": "Integer value.",
          "type": "integer"
        },
        "datetimeValue": {
          "$ref": "GoogleTypeDateTime",
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto"
        },
        "floatValue": {
          "format": "float",
          "description": "Float value.",
          "type": "number"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue",
      "type": "object",
      "description": "Parsed and normalized entity value."
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize",
      "description": "Font size with unit.",
      "properties": {
        "size": {
          "type": "number",
          "format": "float",
          "description": "Font size for the text."
        },
        "unit": {
          "type": "string",
          "description": "Unit for the font size. Follows CSS naming (such as `in`, `px`, and `pt`)."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId": {
      "type": "object",
      "properties": {
        "docId": {
          "type": "string",
          "description": "Required. The id of the document."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId",
      "description": "Identifies a document uniquely within the scope of a dataset in unmanaged option."
    },
    "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponse": {
      "type": "object",
      "properties": {
        "sampleTestStatus": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of sampling documents in test split."
        },
        "sampleTrainingStatus": {
          "description": "The status of sampling documents in training split.",
          "$ref": "GoogleRpcStatus"
        },
        "selectedDocuments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponseSelectedDocument"
          },
          "description": "The result of the sampling process."
        }
      },
      "description": "Response of the sample documents operation.",
      "id": "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponse"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the VisualElement."
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        }
      },
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement"
    },
    "GoogleCloudDocumentaiV1beta2OperationMetadata": {
      "description": "Contains metadata for the BatchProcessDocuments operation.",
      "id": "GoogleCloudDocumentaiV1beta2OperationMetadata",
      "type": "object",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "description": "The state of the current batch processing.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time of the operation."
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        },
        "createTime": {
          "description": "The creation time of the operation.",
          "format": "google-datetime",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentRevisionHumanReview": {
      "properties": {
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`."
        },
        "state": {
          "type": "string",
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentRevisionHumanReview",
      "description": "Human Review information of the document."
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the SetDefaultProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1BatchProcessResponse": {
      "id": "GoogleCloudDocumentaiV1BatchProcessResponse",
      "description": "Response message for BatchProcessDocuments.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLine": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLine",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Line."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "provenance": {
          "deprecated": true,
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation."
        }
      },
      "type": "object",
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc."
    },
    "GoogleCloudDocumentaiV1EnableProcessorRequest": {
      "description": "Request message for the EnableProcessor method.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1EnableProcessorRequest"
    },
    "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "description": "The long-running operation metadata for the DeleteProcessor method.",
      "id": "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata"
    },
    "GoogleCloudDocumentaiV1DocumentProvenance": {
      "id": "GoogleCloudDocumentaiV1DocumentProvenance",
      "type": "object",
      "properties": {
        "revision": {
          "description": "The index of the revision that produced this element.",
          "deprecated": true,
          "format": "int32",
          "type": "integer"
        },
        "parents": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentProvenanceParent"
          },
          "description": "References to the original elements that are replaced."
        },
        "type": {
          "enumDescriptions": [
            "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.",
            "Add an element.",
            "Remove an element identified by `parent`.",
            "Updates any fields within the given provenance scope of the message. It overwrites the fields rather than replacing them. Use this when you want to update a field value of an entity without also updating all the child properties.",
            "Currently unused. Replace an element identified by `parent`.",
            "Deprecated. Request human review for the element identified by `parent`.",
            "Deprecated. Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Deprecated. Element is skipped in the validation process."
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true
          ],
          "type": "string",
          "description": "The type of provenance operation.",
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "UPDATE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ]
        },
        "id": {
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "deprecated": true,
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Structure to identify provenance relationships between annotations in different revisions."
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult": {
      "type": "object",
      "description": "The validation status of each import config. Status is set to an error if there are no documents to import in the `import_config`, or `OK` if the operation will try to proceed with at least one document.",
      "properties": {
        "inputGcsSource": {
          "description": "The source Cloud Storage URI specified in the import config.",
          "type": "string"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The validation status of import config."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult"
    },
    "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse": {
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete.",
      "properties": {
        "responses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse"
          },
          "type": "array",
          "description": "Responses for each individual document."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1CommonOperationMetadata": {
      "id": "GoogleCloudDocumentaiV1CommonOperationMetadata",
      "type": "object",
      "description": "The common metadata for long running operations.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "The creation time of the operation.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time of the operation."
        },
        "resource": {
          "description": "A related resource to this operation.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "description": "The state of the operation.",
          "type": "string"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the DeleteProcessor method.",
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTable": {
      "type": "object",
      "description": "A table representation similar to HTML table structure.",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "description": "Layout for Table.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "bodyRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "type": "array",
          "description": "Body rows of the table."
        },
        "headerRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "type": "array",
          "description": "Header rows of the table."
        },
        "provenance": {
          "description": "The history of this table.",
          "deprecated": true,
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTable"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect": {
      "properties": {
        "confidence": {
          "format": "float",
          "description": "Confidence of detected defect. Range `[0, 1]` where `1` indicates strong confidence that the defect exists.",
          "type": "number"
        },
        "type": {
          "type": "string",
          "description": "Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScoresDetectedDefect",
      "description": "Image Quality Defects"
    },
    "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "description": "The long-running operation metadata for the UndeployProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1SetDefaultProcessorVersionRequest": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionRequest",
      "properties": {
        "defaultProcessorVersion": {
          "description": "Required. The resource name of child ProcessorVersion to use as default. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{version}`",
          "type": "string"
        }
      },
      "description": "Request message for the SetDefaultProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta3ImportDocumentsResponse": {
      "id": "GoogleCloudDocumentaiV1beta3ImportDocumentsResponse",
      "type": "object",
      "properties": {},
      "description": "Response of the import document operation."
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityRelation": {
      "properties": {
        "subjectId": {
          "description": "Subject entity id.",
          "type": "string"
        },
        "relation": {
          "description": "Relationship description.",
          "type": "string"
        },
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        }
      },
      "description": "Relationship between Entities.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation"
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadata": {
      "properties": {
        "individualAutoLabelStatuses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus"
          },
          "description": "The list of individual auto-labeling statuses of the dataset documents."
        },
        "totalDocumentCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of the auto-labeling documents."
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadata",
      "type": "object",
      "description": "Metadata of the auto-labeling documents operation."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchor": {
      "properties": {
        "pageRefs": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef"
          },
          "description": "One or more references to visual page elements",
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor",
      "type": "object",
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types."
    },
    "GoogleCloudDocumentaiV1beta3UpdateDatasetOperationMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3UpdateDatasetOperationMetadata"
    },
    "GoogleCloudDocumentaiV1EvaluateProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1EvaluateProcessorVersionMetadata",
      "type": "object",
      "description": "Metadata of the EvaluateProcessorVersion method."
    },
    "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse": {
      "properties": {
        "gcsUri": {
          "description": "The Cloud Storage URI containing the output artifacts.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse",
      "description": "Response message associated with the ExportProcessorVersion operation.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3SampleDocumentsMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "Metadata of the sample documents operation.",
      "id": "GoogleCloudDocumentaiUiv1beta3SampleDocumentsMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevision": {
      "type": "object",
      "description": "Contains past or forward revisions of this document.",
      "properties": {
        "parent": {
          "deprecated": true,
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field."
        },
        "createTime": {
          "description": "The time that the revision was created, internally generated by doc proto storage at the time of create.",
          "format": "google-datetime",
          "type": "string"
        },
        "processor": {
          "type": "string",
          "description": "If the annotation was made by processor identify the processor by its resource name."
        },
        "humanReview": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview",
          "description": "Human Review information of this revision."
        },
        "parentIds": {
          "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "agent": {
          "description": "If the change was made by a person specify the name or id of that person.",
          "type": "string"
        },
        "id": {
          "description": "Id of the revision, internally generated by doc proto storage. Unique within the context of the document.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevision"
    },
    "GoogleCloudDocumentaiV1DocumentPageBlock": {
      "properties": {
        "provenance": {
          "deprecated": true,
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance"
        },
        "layout": {
          "description": "Layout for Block.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "type": "array"
        }
      },
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
      "id": "GoogleCloudDocumentaiV1DocumentPageBlock",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1ProcessOptionsIndividualPageSelector": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1ProcessOptionsIndividualPageSelector",
      "properties": {
        "pages": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array",
          "description": "Optional. Indices of the pages (starting from 1)."
        }
      },
      "description": "A list of individual page numbers."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for DetectedBarcode."
        },
        "barcode": {
          "$ref": "GoogleCloudDocumentaiV1beta1Barcode",
          "description": "Detailed barcode information of the DetectedBarcode."
        }
      },
      "description": "A detected barcode.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DatasetDocumentWarehouseConfig": {
      "type": "object",
      "description": "Configuration specific to the Document AI Warehouse-based implementation.",
      "properties": {
        "collection": {
          "description": "Output only. The collection in Document AI Warehouse associated with the dataset.",
          "type": "string",
          "readOnly": true
        },
        "schema": {
          "description": "Output only. The schema in Document AI Warehouse associated with the dataset.",
          "type": "string",
          "readOnly": true
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DatasetDocumentWarehouseConfig"
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsResponse": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsResponse",
      "description": "The response proto of AutoLabelDocuments method."
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextChange": {
      "type": "object",
      "properties": {
        "changedText": {
          "type": "string",
          "description": "The text that replaces the text identified in the `text_anchor`."
        },
        "provenance": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
          },
          "deprecated": true,
          "description": "The history of this annotation."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index."
        }
      },
      "description": "This message is used for text changes aka. OCR corrections.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextChange"
    },
    "GoogleCloudDocumentaiV1ProcessOptions": {
      "properties": {
        "fromStart": {
          "type": "integer",
          "description": "Only process certain pages from the start. Process all if the document has fewer pages.",
          "format": "int32"
        },
        "fromEnd": {
          "description": "Only process certain pages from the end, same as above.",
          "format": "int32",
          "type": "integer"
        },
        "schemaOverride": {
          "$ref": "GoogleCloudDocumentaiV1DocumentSchema",
          "description": "Optional. Override the schema of the ProcessorVersion. Will return an Invalid Argument error if this field is set when the underlying ProcessorVersion doesn't support schema override."
        },
        "ocrConfig": {
          "description": "Only applicable to `OCR_PROCESSOR` and `FORM_PARSER_PROCESSOR`. Returns error if set on other processor types.",
          "$ref": "GoogleCloudDocumentaiV1OcrConfig"
        },
        "individualPageSelector": {
          "$ref": "GoogleCloudDocumentaiV1ProcessOptionsIndividualPageSelector",
          "description": "Which pages to process (1-indexed)."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1ProcessOptions",
      "description": "Options for Process API"
    },
    "GoogleCloudDocumentaiV1GcsPrefix": {
      "type": "object",
      "description": "Specifies all documents on Cloud Storage with a common prefix.",
      "properties": {
        "gcsUriPrefix": {
          "type": "string",
          "description": "The URI prefix."
        }
      },
      "id": "GoogleCloudDocumentaiV1GcsPrefix"
    },
    "GoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics",
      "properties": {
        "confidenceLevelMetrics": {
          "description": "Metrics across confidence levels with fuzzy matching enabled.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1EvaluationConfidenceLevelMetrics"
          }
        },
        "metricsType": {
          "type": "string",
          "description": "The metrics type for the label.",
          "enumDescriptions": [
            "The metrics type is unspecified. By default, metrics without a particular specification are for leaf entity types (i.e., top-level entity types without child types, or child types which are not parent types themselves).",
            "Indicates whether metrics for this particular label type represent an aggregate of metrics for other types instead of being based on actual TP/FP/FN values for the label type. Metrics for parent (i.e., non-leaf) entity types are an aggregate of metrics for their children."
          ],
          "enum": [
            "METRICS_TYPE_UNSPECIFIED",
            "AGGREGATE"
          ]
        },
        "estimatedCalibrationError": {
          "type": "number",
          "description": "The Estimated Calibration Error (ECE) of the confidence of the predicted entities.",
          "format": "float"
        },
        "confidenceLevelMetricsExact": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1EvaluationConfidenceLevelMetrics"
          },
          "description": "Metrics across confidence levels with only exact matching.",
          "type": "array"
        },
        "auprcExact": {
          "format": "float",
          "description": "The AUPRC for metrics with fuzzy matching disabled, i.e., exact matching only.",
          "type": "number"
        },
        "estimatedCalibrationErrorExact": {
          "format": "float",
          "type": "number",
          "description": "The ECE for the predicted entities with fuzzy matching disabled, i.e., exact matching only."
        },
        "auprc": {
          "type": "number",
          "description": "The calculated area under the precision recall curve (AUPRC), computed by integrating over all confidence thresholds.",
          "format": "float"
        }
      },
      "description": "Metrics across multiple confidence levels."
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize",
      "properties": {
        "size": {
          "description": "Font size for the text.",
          "type": "number",
          "format": "float"
        },
        "unit": {
          "type": "string",
          "description": "Unit for the font size. Follows CSS naming (such as `in`, `px`, and `pt`)."
        }
      },
      "description": "Font size with unit."
    },
    "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionResponse",
      "description": "Response message for the SetDefaultProcessorVersion method.",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1ListEvaluationsResponse": {
      "type": "object",
      "description": "The response from `ListEvaluations`.",
      "id": "GoogleCloudDocumentaiV1ListEvaluationsResponse",
      "properties": {
        "evaluations": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1Evaluation"
          },
          "description": "The evaluations requested.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DocumentId": {
      "description": "Document Identifier.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DocumentId",
      "properties": {
        "unmanagedDocId": {
          "description": "A document id within unmanaged dataset.",
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentIdUnmanagedDocumentId"
        },
        "revisionRef": {
          "description": "Points to a specific revision of the document if set.",
          "$ref": "GoogleCloudDocumentaiV1beta3RevisionRef"
        },
        "gcsManagedDocId": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentIdGCSManagedDocumentId",
          "description": "A document id within user-managed Cloud Storage."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DatasetGCSManagedConfig": {
      "type": "object",
      "properties": {
        "gcsPrefix": {
          "$ref": "GoogleCloudDocumentaiV1beta3GcsPrefix",
          "description": "Required. The Cloud Storage URI (a directory) where the documents belonging to the dataset must be stored."
        }
      },
      "description": "Configuration specific to the Cloud Storage-based implementation.",
      "id": "GoogleCloudDocumentaiV1beta3DatasetGCSManagedConfig"
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionRequestInputData": {
      "properties": {
        "trainingDocuments": {
          "description": "The documents used for training the new version.",
          "$ref": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig"
        },
        "testDocuments": {
          "$ref": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig",
          "description": "The documents used for testing the trained version."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionRequestInputData",
      "description": "The input data used to train a new ProcessorVersion."
    },
    "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse": {
      "description": "Response message for the UndeployProcessorVersion method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3UndeployProcessorVersionResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object",
      "description": "The long-running operation metadata for the DeleteProcessorVersion method."
    },
    "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3AutoLabelDocumentsMetadataIndividualAutoLabelStatus",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of the document auto-labeling."
        },
        "documentId": {
          "description": "The document id of the auto-labeled document. This will replace the gcs_uri.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        }
      },
      "description": "The status of individual documents in the auto-labeling process."
    },
    "GoogleCloudDocumentaiV1beta3EnableProcessorResponse": {
      "type": "object",
      "properties": {},
      "description": "Response message for the EnableProcessor method. Intentionally empty proto for adding fields in future.",
      "id": "GoogleCloudDocumentaiV1beta3EnableProcessorResponse"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow",
      "properties": {
        "cells": {
          "type": "array",
          "description": "Cells that make up this row.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell"
          }
        }
      },
      "description": "A row of table cells."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDimension": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDimension",
      "properties": {
        "unit": {
          "type": "string",
          "description": "Dimension unit."
        },
        "width": {
          "format": "float",
          "type": "number",
          "description": "Page width."
        },
        "height": {
          "type": "number",
          "description": "Page height.",
          "format": "float"
        }
      },
      "type": "object",
      "description": "Dimension for the page."
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse": {
      "description": "Response message for the DeployProcessorVersion method.",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse",
      "type": "object"
    },
    "GoogleCloudLocationListLocationsResponse": {
      "id": "GoogleCloudLocationListLocationsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudLocationLocation"
          },
          "description": "A list of locations that matches the specified filter in the request."
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentTextAnchor": {
      "description": "Text reference indexing into the Document.text.",
      "type": "object",
      "properties": {
        "textSegments": {
          "description": "The text segments from the Document.text.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment"
          },
          "type": "array"
        },
        "content": {
          "type": "string",
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentTextAnchor"
    },
    "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata": {
      "type": "object",
      "properties": {
        "individualBatchDeleteStatuses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus"
          },
          "description": "The list of response details of each document."
        },
        "errorDocumentCount": {
          "format": "int32",
          "description": "Total number of documents that failed to be deleted in storage.",
          "type": "integer"
        },
        "totalDocumentCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of documents deleting from dataset."
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus": {
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus",
      "description": "The status of each individual document in the batch delete process.",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of deleting the document in storage."
        },
        "documentId": {
          "description": "The document id of the document.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "description": "The long-running operation metadata for the SetDefaultProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1BatchDocumentsInputConfig": {
      "id": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig",
      "type": "object",
      "description": "The common config to specify a set of documents used as input.",
      "properties": {
        "gcsDocuments": {
          "description": "The set of documents individually specified on Cloud Storage.",
          "$ref": "GoogleCloudDocumentaiV1GcsDocuments"
        },
        "gcsPrefix": {
          "$ref": "GoogleCloudDocumentaiV1GcsPrefix",
          "description": "The set of documents that match the specified Cloud Storage `gcs_prefix`."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntity": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntity",
      "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.",
      "type": "object",
      "properties": {
        "redacted": {
          "type": "boolean",
          "description": "Optional. Whether the entity will be redacted for de-identification purposes."
        },
        "mentionId": {
          "description": "Optional. Deprecated. Use `id` field instead.",
          "type": "string"
        },
        "confidence": {
          "description": "Optional. Confidence of detected Schema entity. Range `[0, 1]`.",
          "type": "number",
          "format": "float"
        },
        "type": {
          "description": "Required. Entity type from a schema e.g. `Address`.",
          "type": "string"
        },
        "mentionText": {
          "description": "Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.",
          "type": "string"
        },
        "pageAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor",
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text."
        },
        "normalizedValue": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue",
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types."
        },
        "properties": {
          "type": "array",
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          }
        },
        "id": {
          "type": "string",
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document."
        },
        "provenance": {
          "description": "Optional. The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        }
      }
    },
    "GoogleCloudDocumentaiV1EvaluationMetrics": {
      "description": "Evaluation metrics, either in aggregate or about a specific entity.",
      "type": "object",
      "properties": {
        "falsePositivesCount": {
          "format": "int32",
          "description": "The amount of false positives.",
          "type": "integer"
        },
        "recall": {
          "description": "The calculated recall.",
          "format": "float",
          "type": "number"
        },
        "totalDocumentsCount": {
          "type": "integer",
          "description": "The amount of documents that had an occurrence of this label.",
          "format": "int32"
        },
        "f1Score": {
          "format": "float",
          "description": "The calculated f1 score.",
          "type": "number"
        },
        "groundTruthOccurrencesCount": {
          "type": "integer",
          "format": "int32",
          "description": "The amount of occurrences in ground truth documents."
        },
        "predictedDocumentCount": {
          "format": "int32",
          "type": "integer",
          "description": "The amount of documents with a predicted occurrence."
        },
        "truePositivesCount": {
          "description": "The amount of true positives.",
          "format": "int32",
          "type": "integer"
        },
        "falseNegativesCount": {
          "format": "int32",
          "type": "integer",
          "description": "The amount of false negatives."
        },
        "groundTruthDocumentCount": {
          "description": "The amount of documents with a ground truth occurrence.",
          "format": "int32",
          "type": "integer"
        },
        "precision": {
          "type": "number",
          "format": "float",
          "description": "The calculated precision."
        },
        "predictedOccurrencesCount": {
          "description": "The amount of occurrences in predicted documents.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDocumentaiV1EvaluationMetrics"
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata",
      "description": "The long-running operation metadata for the DisableProcessor method."
    },
    "GoogleCloudDocumentaiV1ProcessorType": {
      "description": "A processor type is responsible for performing a certain document understanding task on a certain type of document.",
      "id": "GoogleCloudDocumentaiV1ProcessorType",
      "type": "object",
      "properties": {
        "availableLocations": {
          "type": "array",
          "description": "The locations in which this processor is available.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1ProcessorTypeLocationInfo"
          }
        },
        "launchStage": {
          "description": "Launch stage of the processor type",
          "type": "string",
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "UNIMPLEMENTED",
            "PRELAUNCH",
            "EARLY_ACCESS",
            "ALPHA",
            "BETA",
            "GA",
            "DEPRECATED"
          ],
          "enumDescriptions": [
            "Do not use this default value.",
            "The feature is not yet implemented. Users can not use it.",
            "Prelaunch features are hidden from users and are only visible internally.",
            "Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.",
            "Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don't have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.",
            "Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.",
            "GA features are open to all developers and are considered stable and fully qualified for production use.",
            "Deprecated features are scheduled to be shut down and removed. For more information, see the \"Deprecation Policy\" section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation."
          ]
        },
        "type": {
          "description": "The processor type, such as: `OCR_PROCESSOR`, `INVOICE_PROCESSOR`.",
          "type": "string"
        },
        "sampleDocumentUris": {
          "description": "A set of Cloud Storage URIs of sample documents for this processor.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "category": {
          "type": "string",
          "description": "The processor category, used by UI to group processor types."
        },
        "allowCreation": {
          "type": "boolean",
          "description": "Whether the processor type allows creation. If true, users can create a processor of this processor type. Otherwise, users need to request access."
        },
        "name": {
          "description": "The resource name of the processor type. Format: `projects/{project}/processorTypes/{processor_type}`",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1ReviewDocumentRequest": {
      "id": "GoogleCloudDocumentaiV1ReviewDocumentRequest",
      "properties": {
        "documentSchema": {
          "$ref": "GoogleCloudDocumentaiV1DocumentSchema",
          "description": "The document schema of the human review task."
        },
        "enableSchemaValidation": {
          "description": "Whether the validation should be performed on the ad-hoc review request.",
          "type": "boolean"
        },
        "priority": {
          "enum": [
            "DEFAULT",
            "URGENT"
          ],
          "enumDescriptions": [
            "The default priority level.",
            "The urgent priority level. The labeling manager should allocate labeler resource to the urgent task queue to respect this priority level."
          ],
          "type": "string",
          "description": "The priority of the human review task."
        },
        "inlineDocument": {
          "$ref": "GoogleCloudDocumentaiV1Document",
          "description": "An inline document proto."
        }
      },
      "type": "object",
      "description": "Request message for the ReviewDocument method."
    },
    "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadata",
      "properties": {
        "individualBatchUpdateStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadataIndividualBatchUpdateStatus"
          },
          "type": "array",
          "description": "The list of response details of each document."
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3HumanReviewStatus": {
      "id": "GoogleCloudDocumentaiV1beta3HumanReviewStatus",
      "description": "The status of human review on a processed document.",
      "properties": {
        "state": {
          "description": "The state of human review on the processing request.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ],
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review isn't enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the state_message for details."
          ]
        },
        "stateMessage": {
          "description": "A message providing more details about the human review state.",
          "type": "string"
        },
        "humanReviewOperation": {
          "description": "The name of the operation triggered by the processed document. This field is populated only when the state is `HUMAN_REVIEW_IN_PROGRESS`. It has the same response type and metadata as the long-running operation returned by ReviewDocument.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentTextChange": {
      "description": "This message is used for text changes aka. OCR corrections.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentTextChange",
      "properties": {
        "provenance": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentProvenance"
          },
          "deprecated": true,
          "description": "The history of this annotation."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor",
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index."
        },
        "changedText": {
          "description": "The text that replaces the text identified in the `text_anchor`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment": {
      "properties": {
        "endIndex": {
          "format": "int64",
          "type": "string",
          "description": "TextSegment half open end UTF-8 char index in the Document.text."
        },
        "startIndex": {
          "type": "string",
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment",
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset"
    },
    "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionMetadata": {
      "description": "Metadata of the EvaluateProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageToken": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageToken",
      "properties": {
        "detectedBreak": {
          "description": "Detected break at the end of a Token.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "provenance": {
          "deprecated": true,
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation."
        },
        "styleInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTokenStyleInfo",
          "description": "Text style attributes."
        },
        "layout": {
          "description": "Layout for Token.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        }
      },
      "description": "A detected token."
    },
    "GoogleCloudDocumentaiV1Barcode": {
      "properties": {
        "valueFormat": {
          "type": "string",
          "description": "Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license."
        },
        "format": {
          "description": "Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type.",
          "type": "string"
        },
        "rawValue": {
          "description": "Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1Barcode",
      "description": "Encodes the detailed information of a barcode.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse": {
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsResponse",
      "type": "object",
      "description": "Response of the batch move documents operation."
    },
    "GoogleCloudDocumentaiV1beta1NormalizedVertex": {
      "id": "GoogleCloudDocumentaiV1beta1NormalizedVertex",
      "type": "object",
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "properties": {
        "x": {
          "format": "float",
          "type": "number",
          "description": "X coordinate."
        },
        "y": {
          "format": "float",
          "type": "number",
          "description": "Y coordinate (starts from the top of the image)."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsResponse",
      "type": "object",
      "description": "Response of the delete documents operation.",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta3DatasetSpannerIndexingConfig": {
      "type": "object",
      "properties": {},
      "description": "Configuration specific to spanner-based indexing.",
      "id": "GoogleCloudDocumentaiV1beta3DatasetSpannerIndexingConfig"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata for the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the ImportProcessorVersion method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsResponse": {
      "type": "object",
      "description": "Response of the batch update documents operation.",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1ProcessorVersion": {
      "properties": {
        "name": {
          "description": "Identifier. The resource name of the processor version. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}`",
          "type": "string"
        },
        "documentSchema": {
          "$ref": "GoogleCloudDocumentaiV1DocumentSchema",
          "description": "The schema of the processor version. Describes the output."
        },
        "modelType": {
          "type": "string",
          "description": "Output only. The model type of this processor version.",
          "enumDescriptions": [
            "The processor version has unspecified model type.",
            "The processor version has generative model type.",
            "The processor version has custom model type."
          ],
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "MODEL_TYPE_GENERATIVE",
            "MODEL_TYPE_CUSTOM"
          ],
          "readOnly": true
        },
        "kmsKeyVersionName": {
          "type": "string",
          "description": "The KMS key version with which data is encrypted."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the processor version was created."
        },
        "kmsKeyName": {
          "description": "The KMS key name used for encryption.",
          "type": "string"
        },
        "latestEvaluation": {
          "description": "The most recently invoked evaluation for the processor version.",
          "$ref": "GoogleCloudDocumentaiV1EvaluationReference"
        },
        "state": {
          "enumDescriptions": [
            "The processor version is in an unspecified state.",
            "The processor version is deployed and can be used for processing.",
            "The processor version is being deployed.",
            "The processor version is not deployed and cannot be used for processing.",
            "The processor version is being undeployed.",
            "The processor version is being created.",
            "The processor version is being deleted.",
            "The processor version failed and is in an indeterminate state.",
            "The processor version is being imported."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "DEPLOYED",
            "DEPLOYING",
            "UNDEPLOYED",
            "UNDEPLOYING",
            "CREATING",
            "DELETING",
            "FAILED",
            "IMPORTING"
          ],
          "description": "Output only. The state of the processor version.",
          "readOnly": true,
          "type": "string"
        },
        "googleManaged": {
          "readOnly": true,
          "description": "Output only. Denotes that this `ProcessorVersion` is managed by Google.",
          "type": "boolean"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the processor version."
        },
        "deprecationInfo": {
          "$ref": "GoogleCloudDocumentaiV1ProcessorVersionDeprecationInfo",
          "description": "If set, information about the eventual deprecation of this version."
        }
      },
      "description": "A processor version is an implementation of a processor. Each processor can have multiple versions, pretrained by Google internally or uptrained by the customer. A processor can only have one default version at a time. Its document-processing behavior is defined by that version.",
      "id": "GoogleCloudDocumentaiV1ProcessorVersion",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse": {
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsResponse",
      "description": "Response of the import document operation.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1UndeployProcessorVersionResponse": {
      "type": "object",
      "description": "Response message for the UndeployProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1NormalizedVertex": {
      "type": "object",
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "properties": {
        "y": {
          "description": "Y coordinate (starts from the top of the image).",
          "type": "number",
          "format": "float"
        },
        "x": {
          "format": "float",
          "type": "number",
          "description": "X coordinate."
        }
      },
      "id": "GoogleCloudDocumentaiV1NormalizedVertex"
    },
    "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the CreateLabelerPool method."
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse": {
      "type": "object",
      "description": "Response message for the ReviewDocument method.",
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse",
      "properties": {
        "rejectionReason": {
          "type": "string",
          "description": "The reason why the review is rejected by reviewer."
        },
        "state": {
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "The review operation is rejected by the reviewer.",
            "The review operation is succeeded."
          ],
          "description": "The state of the review operation.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "REJECTED",
            "SUCCEEDED"
          ]
        },
        "gcsDestination": {
          "type": "string",
          "description": "The Cloud Storage uri for the human reviewed document if the review is succeeded."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageFormField": {
      "description": "A form field detected on the page.",
      "id": "GoogleCloudDocumentaiV1DocumentPageFormField",
      "type": "object",
      "properties": {
        "fieldValue": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for the FormField value."
        },
        "correctedKeyText": {
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction.",
          "type": "string"
        },
        "nameDetectedLanguages": {
          "description": "A list of detected languages for name together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          }
        },
        "fieldName": {
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "valueType": {
          "type": "string",
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`"
        },
        "correctedValueText": {
          "type": "string",
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction."
        },
        "valueDetectedLanguages": {
          "type": "array",
          "description": "A list of detected languages for value together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          }
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata": {
      "properties": {
        "importConfigValidationResults": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataImportConfigValidationResult"
          },
          "type": "array",
          "description": "Validation statuses of the batch documents import config."
        },
        "individualImportStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadataIndividualImportStatus"
          },
          "description": "The list of response details of each document.",
          "type": "array"
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        },
        "totalDocumentCount": {
          "description": "Total number of the documents that are qualified for importing.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Metadata of the import document operation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ImportDocumentsMetadata"
    },
    "GoogleCloudDocumentaiV1beta1InputConfig": {
      "id": "GoogleCloudDocumentaiV1beta1InputConfig",
      "description": "The desired input location and metadata.",
      "properties": {
        "mimeType": {
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format.",
          "type": "string"
        },
        "gcsSource": {
          "$ref": "GoogleCloudDocumentaiV1beta1GcsSource",
          "description": "The Google Cloud Storage location to read the input from. This must be a single file."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageTable": {
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "headerRows": {
          "type": "array",
          "description": "Header rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableRow"
          }
        },
        "bodyRows": {
          "description": "Body rows of the table.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableRow"
          }
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for Table."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "The history of this table.",
          "deprecated": true
        }
      },
      "description": "A table representation similar to HTML table structure.",
      "id": "GoogleCloudDocumentaiV1DocumentPageTable"
    },
    "GoogleCloudDocumentaiV1beta2DocumentRevision": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time that the revision was created, internally generated by doc proto storage at the time of create."
        },
        "parent": {
          "type": "array",
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "deprecated": true
        },
        "processor": {
          "type": "string",
          "description": "If the annotation was made by processor identify the processor by its resource name."
        },
        "agent": {
          "description": "If the change was made by a person specify the name or id of that person.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Id of the revision, internally generated by doc proto storage. Unique within the context of the document."
        },
        "parentIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field."
        },
        "humanReview": {
          "description": "Human Review information of this revision.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview"
        }
      },
      "description": "Contains past or forward revisions of this document.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevision"
    },
    "GoogleTypePostalAddress": {
      "type": "object",
      "description": "Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an internationalization-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478",
      "id": "GoogleTypePostalAddress",
      "properties": {
        "locality": {
          "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines.",
          "type": "string"
        },
        "sublocality": {
          "description": "Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.",
          "type": "string"
        },
        "organization": {
          "type": "string",
          "description": "Optional. The name of the organization at the address."
        },
        "recipients": {
          "description": "Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "administrativeArea": {
          "type": "string",
          "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated."
        },
        "regionCode": {
          "type": "string",
          "description": "Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See https://cldr.unicode.org/ and https://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland."
        },
        "sortingCode": {
          "type": "string",
          "description": "Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire)."
        },
        "languageCode": {
          "type": "string",
          "description": "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\"."
        },
        "postalCode": {
          "description": "Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).",
          "type": "string"
        },
        "addressLines": {
          "type": "array",
          "description": "Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).",
          "items": {
            "type": "string"
          }
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityRelation": {
      "description": "Relationship between Entities.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation",
      "properties": {
        "subjectId": {
          "description": "Subject entity id.",
          "type": "string"
        },
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        },
        "relation": {
          "type": "string",
          "description": "Relationship description."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig": {
      "id": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig",
      "description": "The sharding config for the output document.",
      "properties": {
        "pagesOverlap": {
          "type": "integer",
          "format": "int32",
          "description": "The number of overlapping pages between consecutive shards."
        },
        "pagesPerShard": {
          "type": "integer",
          "description": "The number of pages per shard.",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1BoundingPoly": {
      "id": "GoogleCloudDocumentaiV1beta1BoundingPoly",
      "description": "A bounding polygon for the detected image annotation.",
      "type": "object",
      "properties": {
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1NormalizedVertex"
          },
          "type": "array"
        },
        "vertices": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1Vertex"
          },
          "description": "The bounding polygon vertices."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentEntityRelation": {
      "properties": {
        "subjectId": {
          "description": "Subject entity id.",
          "type": "string"
        },
        "relation": {
          "type": "string",
          "description": "Relationship description."
        },
        "objectId": {
          "description": "Object entity id.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Relationship between Entities.",
      "id": "GoogleCloudDocumentaiV1DocumentEntityRelation"
    },
    "GoogleCloudDocumentaiV1beta1OperationMetadata": {
      "id": "GoogleCloudDocumentaiV1beta1OperationMetadata",
      "description": "Contains metadata for the BatchProcessDocuments operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "The creation time of the operation.",
          "format": "google-datetime"
        },
        "state": {
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "description": "The state of the current batch processing.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ],
          "type": "string"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time of the operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentShardInfo": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
      "properties": {
        "shardIndex": {
          "description": "The 0-based index of this shard.",
          "format": "int64",
          "type": "string"
        },
        "shardCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of shards."
        },
        "textOffset": {
          "format": "int64",
          "description": "The index of the first character in Document.text in the overall document global text.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse": {
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete.",
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "description": "Responses for each individual document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPage": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPage",
      "description": "A page in a Document.",
      "properties": {
        "formFields": {
          "description": "A list of visually detected form fields on the page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageFormField"
          }
        },
        "image": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImage",
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned."
        },
        "symbols": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageSymbol"
          },
          "type": "array",
          "description": "A list of visually detected symbols on the page."
        },
        "blocks": {
          "type": "array",
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageBlock"
          }
        },
        "transforms": {
          "description": "Transformation matrices that were applied to the original document image to produce Page.image.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix"
          },
          "type": "array"
        },
        "layout": {
          "description": "Layout for the page.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "lines": {
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLine"
          }
        },
        "visualElements": {
          "type": "array",
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement"
          }
        },
        "tokens": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageToken"
          },
          "type": "array",
          "description": "A list of visually detected tokens on the page."
        },
        "tables": {
          "description": "A list of visually detected tables on the page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTable"
          }
        },
        "dimension": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDimension",
          "description": "Physical dimension of the page."
        },
        "paragraphs": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph"
          },
          "type": "array",
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph."
        },
        "detectedBarcodes": {
          "description": "A list of detected barcodes.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedBarcode"
          }
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "imageQualityScores": {
          "description": "Image quality scores.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores"
        },
        "provenance": {
          "deprecated": true,
          "description": "The history of this page.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "pageNumber": {
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent": {
      "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent",
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the parent provenance.",
          "format": "int32",
          "type": "integer",
          "deprecated": true
        },
        "revision": {
          "format": "int32",
          "type": "integer",
          "description": "The index of the index into current revision's parent_ids list."
        },
        "index": {
          "format": "int32",
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision.",
          "type": "integer"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextChange": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextChange",
      "type": "object",
      "description": "This message is used for text changes aka. OCR corrections.",
      "properties": {
        "changedText": {
          "type": "string",
          "description": "The text that replaces the text identified in the `text_anchor`."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index."
        },
        "provenance": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
          },
          "type": "array",
          "deprecated": true,
          "description": "The history of this annotation."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadata",
      "type": "object",
      "description": "The metadata proto of `ResyncDataset` method.",
      "properties": {
        "individualDocumentResyncStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus"
          },
          "description": "The list of document resync statuses. The same document could have multiple `individual_document_resync_statuses` if it has multiple inconsistencies.",
          "type": "array"
        },
        "datasetResyncStatuses": {
          "type": "array",
          "description": "The list of dataset resync statuses. Not checked when ResyncDatasetRequest.dataset_documents is specified.",
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataDatasetResyncStatus"
          }
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageParagraph": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph",
      "properties": {
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "deprecated": true,
          "description": "The history of this annotation."
        },
        "layout": {
          "description": "Layout for Paragraph.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        }
      },
      "description": "A collection of lines that a human would perceive as a paragraph."
    },
    "GoogleCloudDocumentaiV1DocumentPageAnchor": {
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.",
      "id": "GoogleCloudDocumentaiV1DocumentPageAnchor",
      "type": "object",
      "properties": {
        "pageRefs": {
          "description": "One or more references to visual page elements",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef"
          }
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentLabel": {
      "description": "Label attaches schema information and/or other metadata to segments within a Document. Multiple Labels on a single field can denote either different labels, different instances of the same label created at different times, or some combination of both.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentLabel",
      "properties": {
        "automlModel": {
          "type": "string",
          "description": "Label is generated AutoML model. This field stores the full resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`"
        },
        "confidence": {
          "description": "Confidence score between 0 and 1 for label assignment.",
          "format": "float",
          "type": "number"
        },
        "name": {
          "type": "string",
          "description": "Name of the label. When the label is generated from AutoML Text Classification model, this field represents the name of the category."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse",
      "description": "The response for TrainProcessorVersion.",
      "type": "object",
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The resource name of the processor version produced by training."
        }
      }
    },
    "GoogleCloudDocumentaiV1DisableProcessorMetadata": {
      "description": "The long-running operation metadata for the DisableProcessor method.",
      "id": "GoogleCloudDocumentaiV1DisableProcessorMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadataIndividualBatchUpdateStatus": {
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of updating the document in storage."
        },
        "documentId": {
          "description": "The document id of the document.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        }
      },
      "type": "object",
      "description": "The status of each individual document in the batch update process.",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchUpdateDocumentsMetadataIndividualBatchUpdateStatus"
    },
    "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadata",
      "description": "Metadata of the import document operation.",
      "properties": {
        "totalDocumentCount": {
          "format": "int32",
          "description": "Total number of the documents that are qualified for importing.",
          "type": "integer"
        },
        "importConfigValidationResults": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataImportConfigValidationResult"
          },
          "description": "Validation statuses of the batch documents import config.",
          "type": "array"
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        },
        "individualImportStatuses": {
          "description": "The list of response details of each document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataIndividualImportStatus"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageBlock": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageBlock",
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
      "properties": {
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "deprecated": true,
          "description": "The history of this annotation."
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "description": "Layout for Block.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageFormField": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageFormField",
      "description": "A form field detected on the page.",
      "properties": {
        "valueDetectedLanguages": {
          "type": "array",
          "description": "A list of detected languages for value together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "fieldName": {
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "fieldValue": {
          "description": "Layout for the FormField value.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation."
        },
        "nameDetectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for name together with confidence.",
          "type": "array"
        },
        "valueType": {
          "type": "string",
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`"
        },
        "correctedKeyText": {
          "type": "string",
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction."
        },
        "correctedValueText": {
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata",
      "type": "object",
      "description": "The long-running operation metadata for DeleteLabelerPool."
    },
    "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId": {
      "properties": {
        "gcsUri": {
          "description": "Required. The Cloud Storage URI where the actual document is stored.",
          "type": "string"
        },
        "cwDocId": {
          "type": "string",
          "deprecated": true,
          "description": "Id of the document (indexed) managed by Content Warehouse."
        }
      },
      "description": "Identifies a document uniquely within the scope of a dataset in the user-managed Cloud Storage option.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId"
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateDatasetOperationMetadata"
    },
    "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3SetDefaultProcessorVersionMetadata",
      "description": "The long-running operation metadata for the SetDefaultProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1EvaluationReference": {
      "properties": {
        "aggregateMetrics": {
          "$ref": "GoogleCloudDocumentaiV1EvaluationMetrics",
          "description": "An aggregate of the statistics for the evaluation with fuzzy matching on."
        },
        "operation": {
          "type": "string",
          "description": "The resource name of the Long Running Operation for the evaluation."
        },
        "aggregateMetricsExact": {
          "description": "An aggregate of the statistics for the evaluation with fuzzy matching off.",
          "$ref": "GoogleCloudDocumentaiV1EvaluationMetrics"
        },
        "evaluation": {
          "description": "The resource name of the evaluation.",
          "type": "string"
        }
      },
      "description": "Gives a short summary of an evaluation, and links to the evaluation itself.",
      "id": "GoogleCloudDocumentaiV1EvaluationReference",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1OcrConfig": {
      "id": "GoogleCloudDocumentaiV1OcrConfig",
      "type": "object",
      "description": "Config for Document OCR.",
      "properties": {
        "hints": {
          "$ref": "GoogleCloudDocumentaiV1OcrConfigHints",
          "description": "Hints for the OCR model."
        },
        "premiumFeatures": {
          "description": "Configurations for premium OCR features.",
          "$ref": "GoogleCloudDocumentaiV1OcrConfigPremiumFeatures"
        },
        "disableCharacterBoxesDetection": {
          "description": "Turn off character box detector in OCR engine. Character box detection is enabled by default in OCR 2.0 (and later) processors.",
          "type": "boolean"
        },
        "advancedOcrOptions": {
          "description": "A list of advanced OCR options to further fine-tune OCR behavior. Current valid values are: - `legacy_layout`: a heuristics layout detection algorithm, which serves as an alternative to the current ML-based layout detection algorithm. Customers can choose the best suitable layout algorithm based on their situation.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "computeStyleInfo": {
          "description": "Turn on font identification model and return font style information. Deprecated, use PremiumFeatures.compute_style_info instead.",
          "deprecated": true,
          "type": "boolean"
        },
        "enableNativePdfParsing": {
          "type": "boolean",
          "description": "Enables special handling for PDFs with existing text information. Results in better text extraction quality in such PDF inputs."
        },
        "enableSymbol": {
          "type": "boolean",
          "description": "Includes symbol level OCR information if set to true."
        },
        "enableImageQualityScores": {
          "type": "boolean",
          "description": "Enables intelligent document quality scores after OCR. Can help with diagnosing why OCR responses are of poor quality for a given input. Adds additional latency comparable to regular OCR to the process call."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1GcsDestination": {
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1GcsDestination"
    },
    "GoogleCloudDocumentaiV1DocumentPageVisualElement": {
      "type": "object",
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.",
      "properties": {
        "type": {
          "description": "Type of the VisualElement.",
          "type": "string"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for VisualElement."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageVisualElement"
    },
    "GoogleCloudDocumentaiV1ListProcessorsResponse": {
      "type": "object",
      "description": "Response message for the ListProcessors method.",
      "properties": {
        "nextPageToken": {
          "description": "Points to the next processor, otherwise empty.",
          "type": "string"
        },
        "processors": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1Processor"
          },
          "description": "The list of processors."
        }
      },
      "id": "GoogleCloudDocumentaiV1ListProcessorsResponse"
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadata",
      "description": "The long-running operation metadata for BatchProcessDocuments.",
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "The creation time of the operation.",
          "format": "google-datetime"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed.",
          "type": "string"
        },
        "updateTime": {
          "description": "The last update time of the operation.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ],
          "type": "string",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "description": "The state of the current batch processing."
        },
        "individualProcessStatuses": {
          "type": "array",
          "description": "The list of response details of each document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus"
          }
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DisableProcessorResponse": {
      "id": "GoogleCloudDocumentaiV1beta3DisableProcessorResponse",
      "properties": {},
      "description": "Response message for the DisableProcessor method. Intentionally empty proto for adding fields in future.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata",
      "type": "object",
      "description": "The long-running operation metadata for the UndeployProcessorVersion method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig": {
      "description": "The configuration used when outputting documents.",
      "type": "object",
      "properties": {
        "gcsUri": {
          "description": "The Cloud Storage uri (a directory) of the output.",
          "type": "string"
        },
        "shardingConfig": {
          "$ref": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfigShardingConfig",
          "description": "Specifies the sharding config for the output document."
        },
        "fieldMask": {
          "format": "google-fieldmask",
          "type": "string",
          "description": "Specifies which fields to include in the output documents. Only supports top level document and pages field so it must be in the form of `{document_field_name}` or `pages.{page_field_name}`."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig"
    },
    "GoogleCloudDocumentaiV1DocumentPageSymbol": {
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "description": "Layout for Symbol.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        }
      },
      "description": "A detected symbol.",
      "id": "GoogleCloudDocumentaiV1DocumentPageSymbol"
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue": {
      "description": "Parsed and normalized entity value.",
      "properties": {
        "dateValue": {
          "$ref": "GoogleTypeDate",
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto"
        },
        "datetimeValue": {
          "$ref": "GoogleTypeDateTime",
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto"
        },
        "floatValue": {
          "format": "float",
          "description": "Float value.",
          "type": "number"
        },
        "moneyValue": {
          "$ref": "GoogleTypeMoney",
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto"
        },
        "integerValue": {
          "format": "int32",
          "description": "Integer value.",
          "type": "integer"
        },
        "text": {
          "type": "string",
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format."
        },
        "booleanValue": {
          "type": "boolean",
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes."
        },
        "addressValue": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue"
    },
    "GoogleCloudDocumentaiUiv1beta3DocumentId": {
      "description": "Document Identifier.",
      "type": "object",
      "properties": {
        "gcsManagedDocId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentIdGCSManagedDocumentId",
          "description": "A document id within user-managed Cloud Storage."
        },
        "revisionRef": {
          "description": "Points to a specific revision of the document if set.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3RevisionRef"
        },
        "unmanagedDocId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentIdUnmanagedDocumentId",
          "description": "A document id within unmanaged dataset."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3DocumentId"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo",
      "description": "Font and other text style attributes.",
      "properties": {
        "underlined": {
          "type": "boolean",
          "description": "Whether the text is underlined."
        },
        "backgroundColor": {
          "description": "Color of the background.",
          "$ref": "GoogleTypeColor"
        },
        "italic": {
          "type": "boolean",
          "description": "Whether the text is italic."
        },
        "handwritten": {
          "type": "boolean",
          "description": "Whether the text is handwritten."
        },
        "letterSpacing": {
          "description": "Letter spacing in points.",
          "type": "number",
          "format": "double"
        },
        "subscript": {
          "type": "boolean",
          "description": "Whether the text is a subscript. This feature is not supported yet."
        },
        "smallcaps": {
          "type": "boolean",
          "description": "Whether the text is in small caps. This feature is not supported yet."
        },
        "bold": {
          "description": "Whether the text is bold (equivalent to font_weight is at least `700`).",
          "type": "boolean"
        },
        "fontWeight": {
          "type": "integer",
          "description": "TrueType weight on a scale `100` (thin) to `1000` (ultra-heavy). Normal is `400`, bold is `700`.",
          "format": "int32"
        },
        "strikeout": {
          "description": "Whether the text is strikethrough. This feature is not supported yet.",
          "type": "boolean"
        },
        "fontSize": {
          "type": "integer",
          "format": "int32",
          "description": "Font size in points (`1` point is `¹⁄₇₂` inches)."
        },
        "superscript": {
          "type": "boolean",
          "description": "Whether the text is a superscript. This feature is not supported yet."
        },
        "pixelFontSize": {
          "type": "number",
          "format": "double",
          "description": "Font size in pixels, equal to _unrounded font_size_ * _resolution_ ÷ `72.0`."
        },
        "textColor": {
          "$ref": "GoogleTypeColor",
          "description": "Color of the text."
        },
        "fontType": {
          "description": "Name or style of the font.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1ReviewDocumentResponse": {
      "description": "Response message for the ReviewDocument method.",
      "type": "object",
      "properties": {
        "state": {
          "description": "The state of the review operation.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "REJECTED",
            "SUCCEEDED"
          ],
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "The review operation is rejected by the reviewer.",
            "The review operation is succeeded."
          ]
        },
        "gcsDestination": {
          "type": "string",
          "description": "The Cloud Storage uri for the human reviewed document if the review is succeeded."
        },
        "rejectionReason": {
          "type": "string",
          "description": "The reason why the review is rejected by reviewer."
        }
      },
      "id": "GoogleCloudDocumentaiV1ReviewDocumentResponse"
    },
    "GoogleTypeDate": {
      "id": "GoogleTypeDate",
      "properties": {
        "year": {
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer"
        },
        "day": {
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer"
        },
        "month": {
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
    },
    "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata": {
      "properties": {
        "totalDocumentCount": {
          "format": "int32",
          "description": "Total number of documents deleting from dataset.",
          "type": "integer"
        },
        "individualBatchDeleteStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadataIndividualBatchDeleteStatus"
          },
          "type": "array",
          "description": "The list of response details of each document."
        },
        "errorDocumentCount": {
          "description": "Total number of documents that failed to be deleted in storage.",
          "type": "integer",
          "format": "int32"
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3BatchDeleteDocumentsMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DeployProcessorVersionResponse": {
      "description": "Response message for the DeployProcessorVersion method.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DeployProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchor": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor",
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.",
      "type": "object",
      "properties": {
        "pageRefs": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef"
          },
          "type": "array",
          "description": "One or more references to visual page elements"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageImageQualityScores": {
      "id": "GoogleCloudDocumentaiV1DocumentPageImageQualityScores",
      "type": "object",
      "properties": {
        "detectedDefects": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageImageQualityScoresDetectedDefect"
          },
          "type": "array",
          "description": "A list of detected defects."
        },
        "qualityScore": {
          "type": "number",
          "description": "The overall quality score. Range `[0, 1]` where `1` is perfect quality.",
          "format": "float"
        }
      },
      "description": "Image quality scores for the page image."
    },
    "GoogleCloudDocumentaiV1beta3DatasetUnmanagedDatasetConfig": {
      "properties": {},
      "type": "object",
      "description": "Configuration specific to an unmanaged dataset.",
      "id": "GoogleCloudDocumentaiV1beta3DatasetUnmanagedDatasetConfig"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageToken": {
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Token."
        },
        "detectedBreak": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak",
          "description": "Detected break at the end of a Token."
        },
        "styleInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTokenStyleInfo",
          "description": "Text style attributes."
        },
        "provenance": {
          "deprecated": true,
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        }
      },
      "description": "A detected token.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageToken",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1BoundingPoly": {
      "id": "GoogleCloudDocumentaiV1BoundingPoly",
      "properties": {
        "normalizedVertices": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1NormalizedVertex"
          },
          "description": "The bounding polygon normalized vertices."
        },
        "vertices": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1Vertex"
          },
          "type": "array",
          "description": "The bounding polygon vertices."
        }
      },
      "type": "object",
      "description": "A bounding polygon for the detected image annotation."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode",
      "description": "A detected barcode.",
      "properties": {
        "barcode": {
          "$ref": "GoogleCloudDocumentaiV1beta2Barcode",
          "description": "Detailed barcode information of the DetectedBarcode."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for DetectedBarcode."
        }
      },
      "type": "object"
    },
    "GoogleLongrunningListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "id": "GoogleLongrunningListOperationsResponse",
      "type": "object",
      "description": "The response message for Operations.ListOperations."
    },
    "GoogleCloudDocumentaiV1beta2Vertex": {
      "type": "object",
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "id": "GoogleCloudDocumentaiV1beta2Vertex",
      "properties": {
        "x": {
          "format": "int32",
          "description": "X coordinate.",
          "type": "integer"
        },
        "y": {
          "type": "integer",
          "description": "Y coordinate (starts from the top of the image).",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1Barcode": {
      "description": "Encodes the detailed information of a barcode.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1Barcode",
      "properties": {
        "valueFormat": {
          "description": "Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license.",
          "type": "string"
        },
        "rawValue": {
          "type": "string",
          "description": "Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`."
        },
        "format": {
          "type": "string",
          "description": "Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageDetectedBarcode": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageDetectedBarcode",
      "description": "A detected barcode.",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for DetectedBarcode."
        },
        "barcode": {
          "$ref": "GoogleCloudDocumentaiV1Barcode",
          "description": "Detailed barcode information of the DetectedBarcode."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageTableTableCell": {
      "description": "A cell representation inside the table.",
      "type": "object",
      "properties": {
        "colSpan": {
          "type": "integer",
          "format": "int32",
          "description": "How many columns this cell spans."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for TableCell."
        },
        "rowSpan": {
          "type": "integer",
          "description": "How many rows this cell spans.",
          "format": "int32"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageTableTableCell"
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionRequestCustomDocumentExtractionOptions": {
      "properties": {
        "trainingMethod": {
          "description": "Training method to use for CDE training.",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "TRAINING_METHOD_UNSPECIFIED",
            "MODEL_BASED",
            "TEMPLATE_BASED"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionRequestCustomDocumentExtractionOptions",
      "description": "Options to control the training of the Custom Document Extraction (CDE) Processor."
    },
    "GoogleCloudDocumentaiV1beta1DocumentShardInfo": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentShardInfo",
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
      "type": "object",
      "properties": {
        "shardIndex": {
          "format": "int64",
          "type": "string",
          "description": "The 0-based index of this shard."
        },
        "shardCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of shards."
        },
        "textOffset": {
          "type": "string",
          "description": "The index of the first character in Document.text in the overall document global text.",
          "format": "int64"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDimension": {
      "properties": {
        "height": {
          "format": "float",
          "type": "number",
          "description": "Page height."
        },
        "width": {
          "format": "float",
          "type": "number",
          "description": "Page width."
        },
        "unit": {
          "description": "Dimension unit.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDimension",
      "type": "object",
      "description": "Dimension for the page."
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata": {
      "description": "The long-running operation metadata for updating the human review configuration.",
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageImageQualityScoresDetectedDefect": {
      "properties": {
        "confidence": {
          "description": "Confidence of detected defect. Range `[0, 1]` where `1` indicates strong confidence that the defect exists.",
          "format": "float",
          "type": "number"
        },
        "type": {
          "description": "Name of the defect type. Supported values are: - `quality/defect_blurry` - `quality/defect_noisy` - `quality/defect_dark` - `quality/defect_faint` - `quality/defect_text_too_small` - `quality/defect_document_cutoff` - `quality/defect_text_cutoff` - `quality/defect_glare`",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageImageQualityScoresDetectedDefect",
      "type": "object",
      "description": "Image Quality Defects"
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionRequestFoundationModelTuningOptions": {
      "description": "Options to control foundation model tuning of the processor.",
      "type": "object",
      "properties": {
        "learningRateMultiplier": {
          "format": "float",
          "type": "number",
          "description": "Optional. The multiplier to apply to the recommended learning rate. Valid values are between 0.1 and 10. If not provided, recommended learning rate will be used."
        },
        "trainSteps": {
          "format": "int32",
          "description": "Optional. The number of steps to run for model tuning. Valid values are between 1 and 400. If not provided, recommended steps will be used.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionRequestFoundationModelTuningOptions"
    },
    "GoogleCloudDocumentaiV1DocumentPageTableTableRow": {
      "description": "A row of table cells.",
      "properties": {
        "cells": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableCell"
          },
          "description": "Cells that make up this row."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageTableTableRow"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage": {
      "properties": {
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of detected language. Range `[0, 1]`."
        },
        "languageCode": {
          "description": "The [BCP-47 language code](https://www.unicode.org/reports/tr35/#Unicode_locale_identifier), such as `en-US` or `sr-Latn`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage",
      "description": "Detected language for a structural component.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement": {
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.",
      "properties": {
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "type": {
          "description": "Type of the VisualElement.",
          "type": "string"
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement"
    },
    "GoogleCloudDocumentaiV1EvaluationCounters": {
      "type": "object",
      "description": "Evaluation counters for the documents that were used.",
      "id": "GoogleCloudDocumentaiV1EvaluationCounters",
      "properties": {
        "failedDocumentsCount": {
          "format": "int32",
          "type": "integer",
          "description": "How many documents were not included in the evaluation as Document AI failed to process them."
        },
        "inputDocumentsCount": {
          "format": "int32",
          "description": "How many documents were sent for evaluation.",
          "type": "integer"
        },
        "invalidDocumentsCount": {
          "format": "int32",
          "description": "How many documents were not included in the evaluation as they didn't pass validation.",
          "type": "integer"
        },
        "evaluatedDocumentsCount": {
          "format": "int32",
          "type": "integer",
          "description": "How many documents were used in the evaluation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTable": {
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Table."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this table.",
          "deprecated": true
        },
        "bodyRows": {
          "type": "array",
          "description": "Body rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          }
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "headerRows": {
          "type": "array",
          "description": "Header rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTable",
      "description": "A table representation similar to HTML table structure.",
      "type": "object"
    },
    "GoogleTypeColor": {
      "properties": {
        "blue": {
          "format": "float",
          "type": "number",
          "description": "The amount of blue in the color as a value in the interval [0, 1]."
        },
        "green": {
          "format": "float",
          "description": "The amount of green in the color as a value in the interval [0, 1].",
          "type": "number"
        },
        "red": {
          "description": "The amount of red in the color as a value in the interval [0, 1].",
          "format": "float",
          "type": "number"
        },
        "alpha": {
          "description": "The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).",
          "type": "number",
          "format": "float"
        }
      },
      "description": "Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha \u003c= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red \u003c\u003c 16) | (green \u003c\u003c 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i \u003c missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...",
      "id": "GoogleTypeColor",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentStyle": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentStyle",
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "properties": {
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "fontSize": {
          "$ref": "GoogleCloudDocumentaiV1DocumentStyleFontSize",
          "description": "Font size."
        },
        "textStyle": {
          "description": "[Text style](https://www.w3schools.com/cssref/pr_font_font-style.asp). Possible values are `normal`, `italic`, and `oblique`.",
          "type": "string"
        },
        "fontFamily": {
          "type": "string",
          "description": "Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp"
        },
        "fontWeight": {
          "description": "[Font weight](https://www.w3schools.com/cssref/pr_font_weight.asp). Possible values are `normal`, `bold`, `bolder`, and `lighter`.",
          "type": "string"
        },
        "color": {
          "description": "Text color.",
          "$ref": "GoogleTypeColor"
        },
        "textDecoration": {
          "description": "[Text decoration](https://www.w3schools.com/cssref/pr_text_text-decoration.asp). Follows CSS standard. ",
          "type": "string"
        },
        "backgroundColor": {
          "$ref": "GoogleTypeColor",
          "description": "Text background color."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageSymbol": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageSymbol",
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "layout": {
          "description": "Layout for Symbol.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        }
      },
      "type": "object",
      "description": "A detected symbol."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef": {
      "description": "Represents a weak reference to a page element within a document.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef",
      "type": "object",
      "properties": {
        "confidence": {
          "format": "float",
          "description": "Optional. Confidence of detected page element, if applicable. Range `[0, 1]`.",
          "type": "number"
        },
        "layoutType": {
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ],
          "type": "string"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly",
          "description": "Optional. Identifies the bounding polygon of a layout element on the page. If `layout_type` is set, the bounding polygon must be exactly the same to the layout element it's referring to."
        },
        "layoutId": {
          "deprecated": true,
          "type": "string",
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead."
        },
        "page": {
          "description": "Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntity": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntity",
      "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.",
      "properties": {
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text."
        },
        "mentionId": {
          "description": "Optional. Deprecated. Use `id` field instead.",
          "type": "string"
        },
        "properties": {
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          },
          "type": "array"
        },
        "type": {
          "type": "string",
          "description": "Required. Entity type from a schema e.g. `Address`."
        },
        "normalizedValue": {
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue"
        },
        "mentionText": {
          "type": "string",
          "description": "Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`."
        },
        "id": {
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document.",
          "type": "string"
        },
        "redacted": {
          "type": "boolean",
          "description": "Optional. Whether the entity will be redacted for de-identification purposes."
        },
        "pageAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor",
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found."
        },
        "confidence": {
          "type": "number",
          "description": "Optional. Confidence of detected Schema entity. Range `[0, 1]`.",
          "format": "float"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "Optional. The history of this annotation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1Document": {
      "id": "GoogleCloudDocumentaiV1beta1Document",
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          },
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries."
        },
        "content": {
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
          "type": "string",
          "format": "byte"
        },
        "text": {
          "type": "string",
          "description": "Optional. UTF-8 encoded text in reading order from the document."
        },
        "entityRelations": {
          "description": "Placeholder. Relationship among Document.entities.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation"
          }
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Any error that occurred while processing this document."
        },
        "shardInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentShardInfo",
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified."
        },
        "uri": {
          "type": "string",
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. For more information, refer to [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris)."
        },
        "textStyles": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyle"
          },
          "type": "array",
          "deprecated": true,
          "description": "Styles for the Document.text."
        },
        "revisions": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevision"
          },
          "description": "Placeholder. Revision history of this document.",
          "type": "array"
        },
        "pages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPage"
          },
          "description": "Visual page layout for the Document."
        },
        "textChanges": {
          "description": "Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextChange"
          },
          "type": "array"
        },
        "mimeType": {
          "type": "string",
          "description": "An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml)."
        }
      },
      "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality."
    },
    "GoogleCloudDocumentaiV1Evaluation": {
      "properties": {
        "kmsKeyVersionName": {
          "description": "The KMS key version with which data is encrypted.",
          "type": "string"
        },
        "documentCounters": {
          "description": "Counters for the documents used in the evaluation.",
          "$ref": "GoogleCloudDocumentaiV1EvaluationCounters"
        },
        "kmsKeyName": {
          "type": "string",
          "description": "The KMS key name used for encryption."
        },
        "createTime": {
          "type": "string",
          "description": "The time that the evaluation was created.",
          "format": "google-datetime"
        },
        "name": {
          "description": "The resource name of the evaluation. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}/evaluations/{evaluation}`",
          "type": "string"
        },
        "allEntitiesMetrics": {
          "description": "Metrics for all the entities in aggregate.",
          "$ref": "GoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics"
        },
        "entityMetrics": {
          "description": "Metrics across confidence levels, for different entities.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics"
          }
        }
      },
      "description": "An evaluation of a ProcessorVersion's performance.",
      "id": "GoogleCloudDocumentaiV1Evaluation",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1EvaluateProcessorVersionResponse": {
      "properties": {
        "evaluation": {
          "type": "string",
          "description": "The resource name of the created evaluation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1EvaluateProcessorVersionResponse",
      "description": "Response of the EvaluateProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeProperty": {
      "properties": {
        "valueType": {
          "type": "string",
          "description": "A reference to the value type of the property. This type is subject to the same conventions as the `Entity.base_types` field."
        },
        "occurrenceType": {
          "enum": [
            "OCCURRENCE_TYPE_UNSPECIFIED",
            "OPTIONAL_ONCE",
            "OPTIONAL_MULTIPLE",
            "REQUIRED_ONCE",
            "REQUIRED_MULTIPLE"
          ],
          "description": "Occurrence type limits the number of instances an entity type appears in the document.",
          "enumDescriptions": [
            "Unspecified occurrence type.",
            "There will be zero or one instance of this entity type. The same entity instance may be mentioned multiple times.",
            "The entity type will appear zero or multiple times.",
            "The entity type will only appear exactly once. The same entity instance may be mentioned multiple times.",
            "The entity type will appear once or more times."
          ],
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the property. Follows the same guidelines as the EntityType name."
        },
        "displayName": {
          "type": "string",
          "description": "User defined name for the property."
        }
      },
      "type": "object",
      "description": "Defines properties that can be part of the entity type.",
      "id": "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeProperty"
    },
    "GoogleCloudDocumentaiV1beta2GcsSource": {
      "id": "GoogleCloudDocumentaiV1beta2GcsSource",
      "description": "The Google Cloud Storage location where the input file will be read from.",
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1ProcessRequest": {
      "description": "Request message for the ProcessDocument method.",
      "id": "GoogleCloudDocumentaiV1ProcessRequest",
      "properties": {
        "rawDocument": {
          "$ref": "GoogleCloudDocumentaiV1RawDocument",
          "description": "A raw document content (bytes)."
        },
        "skipHumanReview": {
          "description": "Whether human review should be skipped for this request. Default to `false`.",
          "type": "boolean"
        },
        "processOptions": {
          "$ref": "GoogleCloudDocumentaiV1ProcessOptions",
          "description": "Inference-time options for the process API"
        },
        "inlineDocument": {
          "$ref": "GoogleCloudDocumentaiV1Document",
          "description": "An inline document proto."
        },
        "fieldMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "Specifies which fields to include in the ProcessResponse.document output. Only supports top-level document and pages field, so it must be in the form of `{document_field_name}` or `pages.{page_field_name}`."
        },
        "gcsDocument": {
          "$ref": "GoogleCloudDocumentaiV1GcsDocument",
          "description": "A raw document on Google Cloud Storage."
        },
        "labels": {
          "type": "object",
          "description": "Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints) and can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "GoogleLongrunningOperation": {
      "id": "GoogleLongrunningOperation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "type": "string",
          "description": "Detected break type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ]
        }
      },
      "description": "Detected break at the end of a Token."
    },
    "GoogleCloudDocumentaiV1ProcessorVersionAlias": {
      "properties": {
        "alias": {
          "type": "string",
          "description": "The alias in the form of `processor_version` resource name."
        },
        "processorVersion": {
          "description": "The resource name of aliased processor version.",
          "type": "string"
        }
      },
      "description": "Contains the alias and the aliased resource name of processor version.",
      "id": "GoogleCloudDocumentaiV1ProcessorVersionAlias",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLayout": {
      "type": "object",
      "properties": {
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`."
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly",
          "description": "The bounding polygon for the Layout."
        },
        "orientation": {
          "type": "string",
          "description": "Detected orientation for the Layout.",
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ],
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ]
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
      "description": "Visual element describing a layout unit on a page."
    },
    "GoogleCloudDocumentaiV1beta1OutputConfig": {
      "description": "The desired output location and metadata.",
      "id": "GoogleCloudDocumentaiV1beta1OutputConfig",
      "properties": {
        "pagesPerShard": {
          "type": "integer",
          "format": "int32",
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json"
        },
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output to.",
          "$ref": "GoogleCloudDocumentaiV1beta1GcsDestination"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2BoundingPoly": {
      "id": "GoogleCloudDocumentaiV1beta2BoundingPoly",
      "description": "A bounding polygon for the detected image annotation.",
      "properties": {
        "vertices": {
          "description": "The bounding polygon vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2Vertex"
          }
        },
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2NormalizedVertex"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue": {
      "type": "object",
      "properties": {
        "addressValue": {
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto",
          "$ref": "GoogleTypePostalAddress"
        },
        "moneyValue": {
          "$ref": "GoogleTypeMoney",
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto"
        },
        "booleanValue": {
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes.",
          "type": "boolean"
        },
        "dateValue": {
          "$ref": "GoogleTypeDate",
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto"
        },
        "integerValue": {
          "type": "integer",
          "format": "int32",
          "description": "Integer value."
        },
        "text": {
          "type": "string",
          "description": "Optional. An optional field to store a normalized string. For some entity types, one of respective `structured_value` fields may also be populated. Also not all the types of `structured_value` will be normalized. For example, some processors may not generate `float` or `integer` normalized text by default. Below are sample formats mapped to structured values. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format."
        },
        "floatValue": {
          "format": "float",
          "description": "Float value.",
          "type": "number"
        },
        "datetimeValue": {
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto",
          "$ref": "GoogleTypeDateTime"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue",
      "description": "Parsed and normalized entity value."
    },
    "GoogleCloudDocumentaiV1DocumentOutputConfig": {
      "description": "Config that controls the output of documents. All documents will be written as a JSON file.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentOutputConfig",
      "properties": {
        "gcsOutputConfig": {
          "$ref": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig",
          "description": "Output config to write the results to Cloud Storage."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentRevision": {
      "id": "GoogleCloudDocumentaiV1DocumentRevision",
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time that the revision was created, internally generated by doc proto storage at the time of create."
        },
        "processor": {
          "type": "string",
          "description": "If the annotation was made by processor identify the processor by its resource name."
        },
        "parent": {
          "deprecated": true,
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.",
          "type": "array"
        },
        "humanReview": {
          "$ref": "GoogleCloudDocumentaiV1DocumentRevisionHumanReview",
          "description": "Human Review information of this revision."
        },
        "agent": {
          "type": "string",
          "description": "If the change was made by a person specify the name or id of that person."
        },
        "parentIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field."
        },
        "id": {
          "type": "string",
          "description": "Id of the revision, internally generated by doc proto storage. Unique within the context of the document."
        }
      },
      "description": "Contains past or forward revisions of this document."
    },
    "GoogleCloudDocumentaiV1beta3GcsPrefix": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3GcsPrefix",
      "properties": {
        "gcsUriPrefix": {
          "type": "string",
          "description": "The URI prefix."
        }
      },
      "description": "Specifies all documents on Cloud Storage with a common prefix."
    },
    "GoogleCloudDocumentaiV1DocumentEntity": {
      "properties": {
        "properties": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentEntity"
          },
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.",
          "type": "array"
        },
        "mentionId": {
          "type": "string",
          "description": "Optional. Deprecated. Use `id` field instead."
        },
        "confidence": {
          "description": "Optional. Confidence of detected Schema entity. Range `[0, 1]`.",
          "format": "float",
          "type": "number"
        },
        "redacted": {
          "type": "boolean",
          "description": "Optional. Whether the entity will be redacted for de-identification purposes."
        },
        "normalizedValue": {
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types.",
          "$ref": "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue"
        },
        "pageAnchor": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageAnchor",
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found."
        },
        "mentionText": {
          "type": "string",
          "description": "Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`."
        },
        "id": {
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document.",
          "type": "string"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "Optional. The history of this annotation."
        },
        "type": {
          "type": "string",
          "description": "Required. Entity type from a schema e.g. `Address`."
        },
        "textAnchor": {
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentEntity",
      "type": "object",
      "description": "An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageSymbol": {
      "description": "A detected symbol.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageSymbol",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Symbol."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage": {
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The [BCP-47 language code](https://www.unicode.org/reports/tr35/#Unicode_locale_identifier), such as `en-US` or `sr-Latn`."
        },
        "confidence": {
          "description": "Confidence of detected language. Range `[0, 1]`.",
          "type": "number",
          "format": "float"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage",
      "description": "Detected language for a structural component.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageDimension": {
      "description": "Dimension for the page.",
      "properties": {
        "height": {
          "description": "Page height.",
          "type": "number",
          "format": "float"
        },
        "unit": {
          "type": "string",
          "description": "Dimension unit."
        },
        "width": {
          "type": "number",
          "description": "Page width.",
          "format": "float"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageDimension"
    },
    "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview": {
      "type": "object",
      "description": "Human Review information of the document.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview",
      "properties": {
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`."
        },
        "state": {
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The common metadata about the operation."
        }
      },
      "description": "Metadata message associated with the ExportProcessorVersion operation."
    },
    "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse": {
      "properties": {
        "outputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta1OutputConfig",
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects."
        },
        "inputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta1InputConfig",
          "description": "Information about the input file. This is the same as the corresponding input config in the request."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse",
      "type": "object",
      "description": "Response to a single document processing request."
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchor": {
      "properties": {
        "content": {
          "type": "string",
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields."
        },
        "textSegments": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment"
          },
          "type": "array",
          "description": "The text segments from the Document.text."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
      "description": "Text reference indexing into the Document.text.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataImportConfigValidationResult": {
      "id": "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataImportConfigValidationResult",
      "description": "The validation status of each import config. Status is set to an error if there are no documents to import in the `import_config`, or `OK` if the operation will try to proceed with at least one document.",
      "properties": {
        "inputGcsSource": {
          "description": "The source Cloud Storage URI specified in the import config.",
          "type": "string"
        },
        "status": {
          "description": "The validation status of import config.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DeployProcessorVersionRequest": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DeployProcessorVersionRequest",
      "description": "Request message for the DeployProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1RawDocument": {
      "id": "GoogleCloudDocumentaiV1RawDocument",
      "type": "object",
      "properties": {
        "mimeType": {
          "type": "string",
          "description": "An IANA MIME type (RFC6838) indicating the nature and format of the content."
        },
        "content": {
          "format": "byte",
          "type": "string",
          "description": "Inline document content."
        },
        "displayName": {
          "description": "The display name of the document, it supports all Unicode characters except the following: `*`, `?`, `[`, `]`, `%`, `{`, `}`,`'`, `\\\"`, `,` `~`, `=` and `:` are reserved. If not specified, a default ID is generated.",
          "type": "string"
        }
      },
      "description": "Payload message of raw document content (bytes)."
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "description": "Metadata of the EvaluateProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1EnableProcessorResponse": {
      "id": "GoogleCloudDocumentaiV1EnableProcessorResponse",
      "description": "Response message for the EnableProcessor method. Intentionally empty proto for adding fields in future.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponseSelectedDocument": {
      "type": "object",
      "properties": {
        "documentId": {
          "description": "An internal identifier for document.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3SampleDocumentsResponseSelectedDocument"
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata": {
      "description": "The metadata that represents a processor version being created.",
      "properties": {
        "trainingDatasetValidation": {
          "description": "The training dataset validation information.",
          "$ref": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation"
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        },
        "testDatasetValidation": {
          "description": "The test dataset validation information.",
          "$ref": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadataDatasetValidation"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object",
      "description": "The long-running operation metadata for the DisableProcessor method.",
      "id": "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata"
    },
    "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata": {
      "id": "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata",
      "properties": {
        "questionId": {
          "description": "The Crowd Compute question ID.",
          "type": "string"
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "description": "The long-running operation metadata for the ReviewDocument method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageParagraph": {
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation.",
          "deprecated": true
        },
        "layout": {
          "description": "Layout for Paragraph.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsResponse": {
      "type": "object",
      "description": "Response of the delete documents operation.",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1beta3BatchDeleteDocumentsResponse"
    },
    "GoogleCloudDocumentaiV1ProcessorVersionDeprecationInfo": {
      "properties": {
        "replacementProcessorVersion": {
          "description": "If set, the processor version that will be used as a replacement.",
          "type": "string"
        },
        "deprecationTime": {
          "description": "The time at which this processor version will be deprecated.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1ProcessorVersionDeprecationInfo",
      "description": "Information about the upcoming deprecation of this processor version."
    },
    "GoogleCloudDocumentaiV1UndeployProcessorVersionRequest": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionRequest",
      "description": "Request message for the UndeployProcessorVersion method."
    },
    "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus": {
      "type": "object",
      "description": "The status of each individual document in the batch move process.",
      "id": "GoogleCloudDocumentaiUiv1beta3BatchMoveDocumentsMetadataIndividualBatchMoveStatus",
      "properties": {
        "status": {
          "description": "The status of moving the document.",
          "$ref": "GoogleRpcStatus"
        },
        "documentId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId",
          "description": "The document id of the document."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenance": {
      "description": "Structure to identify provenance relationships between annotations in different revisions.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "deprecated": true,
          "type": "integer",
          "format": "int32"
        },
        "parents": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent"
          },
          "description": "References to the original elements that are replaced."
        },
        "type": {
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "UPDATE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ],
          "type": "string",
          "description": "The type of provenance operation.",
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true
          ],
          "enumDescriptions": [
            "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.",
            "Add an element.",
            "Remove an element identified by `parent`.",
            "Updates any fields within the given provenance scope of the message. It overwrites the fields rather than replacing them. Use this when you want to update a field value of an entity without also updating all the child properties.",
            "Currently unused. Replace an element identified by `parent`.",
            "Deprecated. Request human review for the element identified by `parent`.",
            "Deprecated. Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Deprecated. Element is skipped in the validation process."
          ]
        },
        "revision": {
          "deprecated": true,
          "description": "The index of the revision that produced this element.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
    },
    "GoogleCloudDocumentaiV1DocumentStyleFontSize": {
      "id": "GoogleCloudDocumentaiV1DocumentStyleFontSize",
      "type": "object",
      "description": "Font size with unit.",
      "properties": {
        "unit": {
          "description": "Unit for the font size. Follows CSS naming (such as `in`, `px`, and `pt`).",
          "type": "string"
        },
        "size": {
          "type": "number",
          "description": "Font size for the text.",
          "format": "float"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat": {
      "description": "The statistic representing a dataset split type for this export.",
      "properties": {
        "splitType": {
          "description": "The dataset split type.",
          "enumDescriptions": [
            "Default value if the enum is not set.",
            "Identifies the train documents.",
            "Identifies the test documents.",
            "Identifies the unassigned documents."
          ],
          "enum": [
            "DATASET_SPLIT_TYPE_UNSPECIFIED",
            "DATASET_SPLIT_TRAIN",
            "DATASET_SPLIT_TEST",
            "DATASET_SPLIT_UNASSIGNED"
          ],
          "type": "string"
        },
        "totalDocumentCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of documents with the given dataset split type to be exported."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataSplitExportStat",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview",
      "description": "Human Review information of the document.",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3RevisionRef": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3RevisionRef",
      "description": "The revision reference specifies which revision on the document to read.",
      "properties": {
        "revisionId": {
          "type": "string",
          "description": "Reads the revision given by the id."
        },
        "revisionCase": {
          "type": "string",
          "description": "Reads the revision by the predefined case.",
          "enumDescriptions": [
            "Unspecified case, fall back to read the `LATEST_HUMAN_REVIEW`.",
            "The latest revision made by a human.",
            "The latest revision based on timestamp.",
            "The first (OCR) revision."
          ],
          "enum": [
            "REVISION_CASE_UNSPECIFIED",
            "LATEST_HUMAN_REVIEW",
            "LATEST_TIMESTAMP",
            "BASE_OCR_REVISION"
          ]
        },
        "latestProcessorVersion": {
          "type": "string",
          "description": "Reads the revision generated by the processor version. The format takes the full resource name of processor version. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse": {
      "properties": {
        "evaluation": {
          "description": "The resource name of the created evaluation.",
          "type": "string"
        }
      },
      "description": "Response of the EvaluateProcessorVersion method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyle": {
      "type": "object",
      "properties": {
        "fontWeight": {
          "type": "string",
          "description": "[Font weight](https://www.w3schools.com/cssref/pr_font_weight.asp). Possible values are `normal`, `bold`, `bolder`, and `lighter`."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "backgroundColor": {
          "description": "Text background color.",
          "$ref": "GoogleTypeColor"
        },
        "fontFamily": {
          "description": "Font family such as `Arial`, `Times New Roman`. https://www.w3schools.com/cssref/pr_font_font-family.asp",
          "type": "string"
        },
        "fontSize": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize",
          "description": "Font size."
        },
        "textStyle": {
          "description": "[Text style](https://www.w3schools.com/cssref/pr_font_font-style.asp). Possible values are `normal`, `italic`, and `oblique`.",
          "type": "string"
        },
        "textDecoration": {
          "type": "string",
          "description": "[Text decoration](https://www.w3schools.com/cssref/pr_text_text-decoration.asp). Follows CSS standard. "
        },
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyle",
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible."
    },
    "GoogleCloudDocumentaiV1beta3ImportProcessorVersionResponse": {
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The destination processor version name."
        }
      },
      "description": "The response message for the ImportProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1beta3ImportProcessorVersionResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse",
      "properties": {},
      "type": "object",
      "description": "Response message for the DisableProcessor method. Intentionally empty proto for adding fields in future."
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessResponse": {
      "description": "Response message for BatchProcessDocuments.",
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessResponse",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2GcsDestination": {
      "id": "GoogleCloudDocumentaiV1beta2GcsDestination",
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DeleteProcessorMetadata": {
      "id": "GoogleCloudDocumentaiV1DeleteProcessorMetadata",
      "description": "The long-running operation metadata for the DeleteProcessor method.",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1EnableProcessorMetadata": {
      "description": "The long-running operation metadata for the EnableProcessor method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1EnableProcessorMetadata"
    },
    "GoogleCloudDocumentaiV1DocumentShardInfo": {
      "id": "GoogleCloudDocumentaiV1DocumentShardInfo",
      "type": "object",
      "properties": {
        "shardIndex": {
          "description": "The 0-based index of this shard.",
          "type": "string",
          "format": "int64"
        },
        "shardCount": {
          "type": "string",
          "description": "Total number of shards.",
          "format": "int64"
        },
        "textOffset": {
          "type": "string",
          "format": "int64",
          "description": "The index of the first character in Document.text in the overall document global text."
        }
      },
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is."
    },
    "GoogleCloudDocumentaiV1ProcessorTypeLocationInfo": {
      "description": "The location information about where the processor is available.",
      "id": "GoogleCloudDocumentaiV1ProcessorTypeLocationInfo",
      "type": "object",
      "properties": {
        "locationId": {
          "description": "The location ID. For supported locations, refer to [regional and multi-regional support](/document-ai/docs/regions).",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentProvenanceParent": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The id of the parent provenance.",
          "type": "integer",
          "deprecated": true
        },
        "index": {
          "format": "int32",
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision.",
          "type": "integer"
        },
        "revision": {
          "description": "The index of the index into current revision's parent_ids list.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentProvenanceParent",
      "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations."
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionRequest": {
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionRequest",
      "type": "object",
      "properties": {
        "documentSchema": {
          "$ref": "GoogleCloudDocumentaiV1DocumentSchema",
          "description": "Optional. The schema the processor version will be trained with."
        },
        "foundationModelTuningOptions": {
          "description": "Options to control foundation model tuning of a processor.",
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionRequestFoundationModelTuningOptions"
        },
        "customDocumentExtractionOptions": {
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionRequestCustomDocumentExtractionOptions",
          "description": "Options to control Custom Document Extraction (CDE) Processor."
        },
        "processorVersion": {
          "$ref": "GoogleCloudDocumentaiV1ProcessorVersion",
          "description": "Required. The processor version to be created."
        },
        "inputData": {
          "description": "Optional. The input data used to train the ProcessorVersion.",
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionRequestInputData"
        },
        "baseProcessorVersion": {
          "description": "Optional. The processor version to use as a base for training. This processor version must be a child of `parent`. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`.",
          "type": "string"
        }
      },
      "description": "Request message for the TrainProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageMatrix": {
      "properties": {
        "rows": {
          "description": "Number of rows in the matrix.",
          "format": "int32",
          "type": "integer"
        },
        "cols": {
          "type": "integer",
          "description": "Number of columns in the matrix.",
          "format": "int32"
        },
        "data": {
          "type": "string",
          "description": "The matrix data.",
          "format": "byte"
        },
        "type": {
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix",
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation."
    },
    "GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata": {
      "description": "The long-running operation metadata for the DeleteProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1beta3DeleteProcessorVersionMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2Barcode": {
      "type": "object",
      "properties": {
        "format": {
          "type": "string",
          "description": "Format of a barcode. The supported formats are: - `CODE_128`: Code 128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. - `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. - `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. - `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. - `DATABAR`: GS1 DataBar code type."
        },
        "rawValue": {
          "type": "string",
          "description": "Raw value encoded in the barcode. For example: `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`."
        },
        "valueFormat": {
          "description": "Value format describes the format of the value that a barcode encodes. The supported formats are: - `CONTACT_INFO`: Contact information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. - `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. - `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar event. - `DRIVER_LICENSE`: Driver's license.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2Barcode",
      "description": "Encodes the detailed information of a barcode."
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetResponse": {
      "description": "The response proto of ResyncDataset method.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetResponse"
    },
    "GoogleCloudDocumentaiV1Processor": {
      "description": "The first-class citizen for Document AI. Each processor defines how to extract structural information from a document.",
      "properties": {
        "kmsKeyName": {
          "description": "The [KMS key](https://cloud.google.com/security-key-management) used for encryption and decryption in CMEK scenarios.",
          "type": "string"
        },
        "processorVersionAliases": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1ProcessorVersionAlias"
          },
          "description": "Output only. The processor version aliases.",
          "readOnly": true,
          "type": "array"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Immutable. The resource name of the processor. Format: `projects/{project}/locations/{location}/processors/{processor}`",
          "type": "string"
        },
        "createTime": {
          "description": "The time the processor was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "displayName": {
          "description": "The display name of the processor.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The processor type, such as: `OCR_PROCESSOR`, `INVOICE_PROCESSOR`. To get a list of processor types, see FetchProcessorTypes."
        },
        "defaultProcessorVersion": {
          "description": "The default processor version.",
          "type": "string"
        },
        "state": {
          "description": "Output only. The state of the processor.",
          "enumDescriptions": [
            "The processor is in an unspecified state.",
            "The processor is enabled, i.e., has an enabled version which can currently serve processing requests and all the feature dependencies have been successfully initialized.",
            "The processor is disabled.",
            "The processor is being enabled, will become `ENABLED` if successful.",
            "The processor is being disabled, will become `DISABLED` if successful.",
            "The processor is being created, will become either `ENABLED` (for successful creation) or `FAILED` (for failed ones). Once a processor is in this state, it can then be used for document processing, but the feature dependencies of the processor might not be fully created yet.",
            "The processor failed during creation or initialization of feature dependencies. The user should delete the processor and recreate one as all the functionalities of the processor are disabled.",
            "The processor is being deleted, will be removed if successful."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLED",
            "DISABLED",
            "ENABLING",
            "DISABLING",
            "CREATING",
            "FAILED",
            "DELETING"
          ],
          "readOnly": true
        },
        "processEndpoint": {
          "readOnly": true,
          "description": "Output only. Immutable. The http endpoint that can be called to invoke processing.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1Processor"
    },
    "GoogleCloudDocumentaiV1ListProcessorVersionsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Points to the next processor, otherwise empty."
        },
        "processorVersions": {
          "type": "array",
          "description": "The list of processors.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1ProcessorVersion"
          }
        }
      },
      "description": "Response message for the ListProcessorVersions method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1ListProcessorVersionsResponse"
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent": {
      "type": "object",
      "properties": {
        "revision": {
          "description": "The index of the index into current revision's parent_ids list.",
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "description": "The id of the parent provenance.",
          "format": "int32",
          "deprecated": true,
          "type": "integer"
        },
        "index": {
          "format": "int32",
          "description": "The index of the parent item in the corresponding item list (eg. list of entities, properties within entities, etc.) in the parent revision.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent",
      "description": "The parent element the current element is based on. Used for referencing/aligning, removal and replacement operations."
    },
    "GoogleCloudDocumentaiV1FetchProcessorTypesResponse": {
      "id": "GoogleCloudDocumentaiV1FetchProcessorTypesResponse",
      "properties": {
        "processorTypes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1ProcessorType"
          },
          "description": "The list of processor types."
        }
      },
      "description": "Response message for the FetchProcessorTypes method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchor": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
      "properties": {
        "content": {
          "type": "string",
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments. It is always populated for formFields."
        },
        "textSegments": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment"
          },
          "type": "array",
          "description": "The text segments from the Document.text."
        }
      },
      "description": "Text reference indexing into the Document.text.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1OcrConfigPremiumFeatures": {
      "properties": {
        "enableMathOcr": {
          "description": "Turn on the model that can extract LaTeX math formulas.",
          "type": "boolean"
        },
        "computeStyleInfo": {
          "description": "Turn on font identification model and return font style information.",
          "type": "boolean"
        },
        "enableSelectionMarkDetection": {
          "type": "boolean",
          "description": "Turn on selection mark detector in OCR engine. Only available in OCR 2.0 (and later) processors."
        }
      },
      "description": "Configurations for premium OCR features.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1OcrConfigPremiumFeatures"
    },
    "GoogleCloudLocationLocation": {
      "description": "A resource that represents a Google Cloud location.",
      "id": "GoogleCloudLocationLocation",
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        }
      }
    },
    "GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiV1SetDefaultProcessorVersionResponse",
      "type": "object",
      "properties": {},
      "description": "Response message for the SetDefaultProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1ListProcessorTypesResponse": {
      "id": "GoogleCloudDocumentaiV1ListProcessorTypesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Points to the next page, otherwise empty."
        },
        "processorTypes": {
          "type": "array",
          "description": "The processor types.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1ProcessorType"
          }
        }
      },
      "description": "Response message for the ListProcessorTypes method."
    },
    "GoogleCloudDocumentaiV1beta3RevisionRef": {
      "description": "The revision reference specifies which revision on the document to read.",
      "properties": {
        "revisionId": {
          "type": "string",
          "description": "Reads the revision given by the id."
        },
        "latestProcessorVersion": {
          "description": "Reads the revision generated by the processor version. The format takes the full resource name of processor version. `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`",
          "type": "string"
        },
        "revisionCase": {
          "enum": [
            "REVISION_CASE_UNSPECIFIED",
            "LATEST_HUMAN_REVIEW",
            "LATEST_TIMESTAMP",
            "BASE_OCR_REVISION"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified case, fall back to read the `LATEST_HUMAN_REVIEW`.",
            "The latest revision made by a human.",
            "The latest revision based on timestamp.",
            "The first (OCR) revision."
          ],
          "description": "Reads the revision by the predefined case."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3RevisionRef",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeEnumValues": {
      "properties": {
        "values": {
          "description": "The individual values that this enum values type can include.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Defines the a list of enum values.",
      "id": "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeEnumValues",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageToken": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageToken",
      "description": "A detected token.",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          }
        },
        "styleInfo": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageTokenStyleInfo",
          "description": "Text style attributes."
        },
        "provenance": {
          "deprecated": true,
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "layout": {
          "description": "Layout for Token.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        },
        "detectedBreak": {
          "description": "Detected break at the end of a Token.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment": {
      "properties": {
        "startIndex": {
          "format": "int64",
          "type": "string",
          "description": "TextSegment start UTF-8 char index in the Document.text."
        },
        "endIndex": {
          "description": "TextSegment half open end UTF-8 char index in the Document.text.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment",
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageBlock": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageBlock",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Block."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "deprecated": true,
          "description": "The history of this annotation."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        }
      },
      "type": "object",
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation."
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse",
      "properties": {},
      "type": "object",
      "description": "Response message for the EnableProcessor method. Intentionally empty proto for adding fields in future."
    },
    "GoogleCloudDocumentaiV1DisableProcessorResponse": {
      "id": "GoogleCloudDocumentaiV1DisableProcessorResponse",
      "description": "Response message for the DisableProcessor method. Intentionally empty proto for adding fields in future.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores": {
      "properties": {
        "qualityScore": {
          "format": "float",
          "type": "number",
          "description": "The overall quality score. Range `[0, 1]` where `1` is perfect quality."
        },
        "detectedDefects": {
          "description": "A list of detected defects.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScoresDetectedDefect"
          },
          "type": "array"
        }
      },
      "description": "Image quality scores for the page image.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImageQualityScores"
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata": {
      "type": "object",
      "description": "The long-running operation metadata for the ReviewDocument method.",
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata",
      "properties": {
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed."
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "description": "Used only when Operation.done is false.",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ]
        },
        "questionId": {
          "type": "string",
          "description": "The Crowd Compute question ID."
        },
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The creation time of the operation."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time of the operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow",
      "properties": {
        "cells": {
          "description": "Cells that make up this row.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell"
          }
        }
      },
      "type": "object",
      "description": "A row of table cells."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak": {
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "description": "Detected break type.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ]
        }
      },
      "type": "object",
      "description": "Detected break at the end of a Token.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak"
    },
    "GoogleCloudDocumentaiV1DocumentPageParagraph": {
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageParagraph",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "The history of this annotation.",
          "deprecated": true
        },
        "layout": {
          "description": "Layout for Paragraph.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        }
      }
    },
    "GoogleCloudDocumentaiV1DisableProcessorRequest": {
      "properties": {},
      "id": "GoogleCloudDocumentaiV1DisableProcessorRequest",
      "description": "Request message for the DisableProcessor method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DocumentIdGCSManagedDocumentId": {
      "id": "GoogleCloudDocumentaiV1beta3DocumentIdGCSManagedDocumentId",
      "description": "Identifies a document uniquely within the scope of a dataset in the user-managed Cloud Storage option.",
      "type": "object",
      "properties": {
        "cwDocId": {
          "description": "Id of the document (indexed) managed by Content Warehouse.",
          "type": "string",
          "deprecated": true
        },
        "gcsUri": {
          "type": "string",
          "description": "Required. The Cloud Storage URI where the actual document is stored."
        }
      }
    },
    "GoogleCloudDocumentaiV1Document": {
      "type": "object",
      "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. For more information, refer to [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris)."
        },
        "error": {
          "description": "Any error that occurred while processing this document.",
          "$ref": "GoogleRpcStatus"
        },
        "content": {
          "format": "byte",
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
          "type": "string"
        },
        "pages": {
          "description": "Visual page layout for the Document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPage"
          }
        },
        "entityRelations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentEntityRelation"
          },
          "description": "Placeholder. Relationship among Document.entities."
        },
        "mimeType": {
          "description": "An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml).",
          "type": "string"
        },
        "shardInfo": {
          "$ref": "GoogleCloudDocumentaiV1DocumentShardInfo",
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified."
        },
        "textChanges": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentTextChange"
          },
          "type": "array",
          "description": "Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other."
        },
        "text": {
          "description": "Optional. UTF-8 encoded text in reading order from the document.",
          "type": "string"
        },
        "revisions": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentRevision"
          },
          "description": "Placeholder. Revision history of this document.",
          "type": "array"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentEntity"
          },
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries."
        },
        "textStyles": {
          "description": "Styles for the Document.text.",
          "deprecated": true,
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentStyle"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1Document"
    },
    "GoogleTypeTimeZone": {
      "properties": {
        "version": {
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\"."
        }
      },
      "type": "object",
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "id": "GoogleTypeTimeZone"
    },
    "GoogleCloudDocumentaiV1DocumentPageMatrix": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageMatrix",
      "properties": {
        "type": {
          "format": "int32",
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "type": "integer"
        },
        "rows": {
          "type": "integer",
          "format": "int32",
          "description": "Number of rows in the matrix."
        },
        "cols": {
          "format": "int32",
          "description": "Number of columns in the matrix.",
          "type": "integer"
        },
        "data": {
          "format": "byte",
          "type": "string",
          "description": "The matrix data."
        }
      },
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation."
    },
    "GoogleCloudDocumentaiV1beta3DocumentIdUnmanagedDocumentId": {
      "properties": {
        "docId": {
          "type": "string",
          "description": "Required. The id of the document."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DocumentIdUnmanagedDocumentId",
      "description": "Identifies a document uniquely within the scope of a dataset in unmanaged option.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the DeployProcessorVersion method.",
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta1GcsSource": {
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "description": "The Google Cloud Storage location where the input file will be read from.",
      "id": "GoogleCloudDocumentaiV1beta1GcsSource",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2NormalizedVertex": {
      "type": "object",
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "id": "GoogleCloudDocumentaiV1beta2NormalizedVertex",
      "properties": {
        "y": {
          "type": "number",
          "format": "float",
          "description": "Y coordinate (starts from the top of the image)."
        },
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        }
      }
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "type": "array"
        }
      },
      "id": "GoogleRpcStatus",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2InputConfig": {
      "type": "object",
      "description": "The desired input location and metadata.",
      "id": "GoogleCloudDocumentaiV1beta2InputConfig",
      "properties": {
        "gcsSource": {
          "description": "The Google Cloud Storage location to read the input from. This must be a single file.",
          "$ref": "GoogleCloudDocumentaiV1beta2GcsSource"
        },
        "contents": {
          "type": "string",
          "description": "Content in bytes, represented as a stream of bytes. Note: As with all `bytes` fields, proto buffer messages use a pure binary representation, whereas JSON representations use base64. This field only works for synchronous ProcessDocument method.",
          "format": "byte"
        },
        "mimeType": {
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1GcsDocument": {
      "type": "object",
      "properties": {
        "mimeType": {
          "description": "An IANA MIME type (RFC6838) of the content.",
          "type": "string"
        },
        "gcsUri": {
          "description": "The Cloud Storage object uri.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1GcsDocument",
      "description": "Specifies a document stored on Cloud Storage."
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation": {
      "type": "object",
      "properties": {
        "documentErrorCount": {
          "type": "integer",
          "description": "The total number of document errors.",
          "format": "int32"
        },
        "datasetErrorCount": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of dataset errors."
        },
        "datasetErrors": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training."
        },
        "documentErrors": {
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        }
      },
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset.",
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation"
    },
    "GoogleCloudDocumentaiV1beta3TrainProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiV1beta3TrainProcessorVersionResponse",
      "type": "object",
      "description": "The response for TrainProcessorVersion.",
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The resource name of the processor version produced by training."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata": {
      "description": "The long-running operation metadata for the EnableProcessor method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3EvaluateProcessorVersionResponse",
      "description": "Response of the EvaluateProcessorVersion method.",
      "properties": {
        "evaluation": {
          "description": "The resource name of the created evaluation.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus": {
      "id": "GoogleCloudDocumentaiUiv1beta3ResyncDatasetMetadataIndividualDocumentResyncStatus",
      "properties": {
        "documentId": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId",
          "description": "The document identifier."
        },
        "documentInconsistencyType": {
          "description": "The type of document inconsistency.",
          "enum": [
            "DOCUMENT_INCONSISTENCY_TYPE_UNSPECIFIED",
            "DOCUMENT_INCONSISTENCY_TYPE_INVALID_DOCPROTO",
            "DOCUMENT_INCONSISTENCY_TYPE_MISMATCHED_METADATA",
            "DOCUMENT_INCONSISTENCY_TYPE_NO_PAGE_IMAGE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "The document proto is invalid.",
            "Indexed docproto metadata is mismatched.",
            "The page image or thumbnails are missing."
          ]
        },
        "status": {
          "description": "The status of resyncing the document with regards to the detected inconsistency. Empty if ResyncDatasetRequest.validate_only is `true`.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "description": "Resync status for each document per inconsistency type.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DeployProcessorVersionMetadata": {
      "type": "object",
      "description": "The long-running operation metadata for the DeployProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1DeployProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageFormField": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageFormField",
      "description": "A form field detected on the page.",
      "properties": {
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "fieldValue": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the FormField value."
        },
        "correctedKeyText": {
          "type": "string",
          "description": "Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction."
        },
        "fieldName": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc."
        },
        "valueType": {
          "type": "string",
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`"
        },
        "valueDetectedLanguages": {
          "description": "A list of detected languages for value together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "correctedValueText": {
          "type": "string",
          "description": "Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction."
        },
        "nameDetectedLanguages": {
          "type": "array",
          "description": "A list of detected languages for name together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        }
      }
    },
    "GoogleCloudDocumentaiV1HumanReviewStatus": {
      "description": "The status of human review on a processed document.",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the human review state.",
          "type": "string"
        },
        "humanReviewOperation": {
          "type": "string",
          "description": "The name of the operation triggered by the processed document. This field is populated only when the state is `HUMAN_REVIEW_IN_PROGRESS`. It has the same response type and metadata as the long-running operation returned by ReviewDocument."
        },
        "state": {
          "description": "The state of human review on the processing request.",
          "type": "string",
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review isn't enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the state_message for details."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1HumanReviewStatus"
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus": {
      "properties": {
        "outputGcsDestination": {
          "type": "string",
          "description": "The Cloud Storage output destination (in the request as DocumentOutputConfig.GcsOutputConfig.gcs_uri) of the processed document if it was successful, otherwise empty."
        },
        "humanReviewStatus": {
          "$ref": "GoogleCloudDocumentaiV1beta3HumanReviewStatus",
          "description": "The status of human review on the processed document."
        },
        "inputGcsSource": {
          "description": "The source of the document, same as the input_gcs_source field in the request when the batch process started.",
          "type": "string"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status processing the document."
        },
        "humanReviewOperation": {
          "deprecated": true,
          "type": "string",
          "description": "The name of the operation triggered by the processed document. If the human review process isn't triggered, this field will be empty. It has the same response type and metadata as the long-running operation returned by the ReviewDocument method."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus",
      "description": "The status of a each individual document in the batch process."
    },
    "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse": {
      "id": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse",
      "properties": {
        "outputConfig": {
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects.",
          "$ref": "GoogleCloudDocumentaiV1beta2OutputConfig"
        },
        "inputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta2InputConfig",
          "description": "Information about the input file. This is the same as the corresponding input config in the request."
        }
      },
      "type": "object",
      "description": "Response to a single document processing request."
    },
    "GoogleCloudDocumentaiV1DocumentSchemaMetadata": {
      "properties": {
        "prefixedNamingOnProperties": {
          "type": "boolean",
          "description": "If set, all the nested entities must be prefixed with the parents."
        },
        "skipNamingValidation": {
          "type": "boolean",
          "description": "If set, we will skip the naming format validation in the schema. So the string values in `DocumentSchema.EntityType.name` and `DocumentSchema.EntityType.Property.name` will not be checked."
        },
        "documentAllowMultipleLabels": {
          "description": "If true, on a given page, there can be multiple `document` annotations covering it.",
          "type": "boolean"
        },
        "documentSplitter": {
          "type": "boolean",
          "description": "If true, a `document` entity type can be applied to subdocument (splitting). Otherwise, it can only be applied to the entire document (classification)."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentSchemaMetadata",
      "description": "Metadata for global schema behavior."
    },
    "GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3DeployProcessorVersionResponse",
      "description": "Response message for the DeployProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "description": "The long-running operation metadata for the DeleteProcessorVersion method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DeleteProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1ProcessResponse": {
      "type": "object",
      "description": "Response message for the ProcessDocument method.",
      "properties": {
        "document": {
          "description": "The document payload, will populate fields based on the processor's behavior.",
          "$ref": "GoogleCloudDocumentaiV1Document"
        },
        "humanReviewStatus": {
          "$ref": "GoogleCloudDocumentaiV1HumanReviewStatus",
          "description": "The status of human review on the processed document."
        }
      },
      "id": "GoogleCloudDocumentaiV1ProcessResponse"
    },
    "GoogleCloudDocumentaiV1beta1Vertex": {
      "id": "GoogleCloudDocumentaiV1beta1Vertex",
      "type": "object",
      "properties": {
        "x": {
          "format": "int32",
          "type": "integer",
          "description": "X coordinate."
        },
        "y": {
          "description": "Y coordinate (starts from the top of the image).",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image."
    },
    "GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata": {
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      },
      "description": "The long-running operation metadata for the UndeployProcessorVersion method.",
      "id": "GoogleCloudDocumentaiV1UndeployProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef",
      "properties": {
        "page": {
          "description": "Required. Index into the Document.pages element, for example using `Document.pages` to locate the related page element. This field is skipped when its value is the default `0`. See https://developers.google.com/protocol-buffers/docs/proto3#json.",
          "type": "string",
          "format": "int64"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1BoundingPoly",
          "description": "Optional. Identifies the bounding polygon of a layout element on the page. If `layout_type` is set, the bounding polygon must be exactly the same to the layout element it's referring to."
        },
        "layoutId": {
          "type": "string",
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.",
          "deprecated": true
        },
        "layoutType": {
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "type": "string",
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ]
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Optional. Confidence of detected page element, if applicable. Range `[0, 1]`."
        }
      },
      "description": "Represents a weak reference to a page element within a document."
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus": {
      "type": "object",
      "description": "The status of each individual document in the export process.",
      "properties": {
        "status": {
          "description": "The status of the exporting of the document.",
          "$ref": "GoogleRpcStatus"
        },
        "documentId": {
          "description": "The path to source docproto of the document.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3DocumentId"
        },
        "outputGcsDestination": {
          "type": "string",
          "description": "The output_gcs_destination of the exported document if it was successful, otherwise empty."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsMetadataIndividualExportStatus"
    },
    "GoogleCloudDocumentaiV1DocumentPage": {
      "description": "A page in a Document.",
      "properties": {
        "imageQualityScores": {
          "description": "Image quality scores.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageImageQualityScores"
        },
        "formFields": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageFormField"
          },
          "description": "A list of visually detected form fields on the page.",
          "type": "array"
        },
        "tables": {
          "description": "A list of visually detected tables on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTable"
          },
          "type": "array"
        },
        "provenance": {
          "description": "The history of this page.",
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "deprecated": true
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for the page."
        },
        "blocks": {
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageBlock"
          },
          "type": "array"
        },
        "symbols": {
          "description": "A list of visually detected symbols on the page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageSymbol"
          }
        },
        "pageNumber": {
          "type": "integer",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.",
          "format": "int32"
        },
        "tokens": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageToken"
          },
          "type": "array",
          "description": "A list of visually detected tokens on the page."
        },
        "paragraphs": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageParagraph"
          },
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.",
          "type": "array"
        },
        "image": {
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageImage"
        },
        "dimension": {
          "description": "Physical dimension of the page.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageDimension"
        },
        "visualElements": {
          "type": "array",
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageVisualElement"
          }
        },
        "lines": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageLine"
          },
          "type": "array",
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          }
        },
        "transforms": {
          "type": "array",
          "description": "Transformation matrices that were applied to the original document image to produce Page.image.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageMatrix"
          }
        },
        "detectedBarcodes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedBarcode"
          },
          "description": "A list of detected barcodes."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPage",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportDocumentsResponse": {
      "type": "object",
      "description": "The response proto of ExportDocuments method.",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3ExportDocumentsResponse"
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenance": {
      "description": "Structure to identify provenance relationships between annotations in different revisions.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
      "properties": {
        "id": {
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "type": "integer",
          "deprecated": true,
          "format": "int32"
        },
        "parents": {
          "description": "References to the original elements that are replaced.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent"
          }
        },
        "revision": {
          "deprecated": true,
          "description": "The index of the revision that produced this element.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "UPDATE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ],
          "type": "string",
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            true,
            true,
            true
          ],
          "enumDescriptions": [
            "Operation type unspecified. If no operation is specified a provenance entry is simply used to match against a `parent`.",
            "Add an element.",
            "Remove an element identified by `parent`.",
            "Updates any fields within the given provenance scope of the message. It overwrites the fields rather than replacing them. Use this when you want to update a field value of an entity without also updating all the child properties.",
            "Currently unused. Replace an element identified by `parent`.",
            "Deprecated. Request human review for the element identified by `parent`.",
            "Deprecated. Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Deprecated. Element is skipped in the validation process."
          ],
          "description": "The type of provenance operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus": {
      "properties": {
        "outputGcsDestination": {
          "type": "string",
          "description": "The Cloud Storage output destination (in the request as DocumentOutputConfig.GcsOutputConfig.gcs_uri) of the processed document if it was successful, otherwise empty."
        },
        "humanReviewStatus": {
          "$ref": "GoogleCloudDocumentaiV1HumanReviewStatus",
          "description": "The status of human review on the processed document."
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status processing the document."
        },
        "inputGcsSource": {
          "type": "string",
          "description": "The source of the document, same as the input_gcs_source field in the request when the batch process started."
        }
      },
      "description": "The status of a each individual document in the batch process.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus"
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata",
      "type": "object",
      "description": "The long-running operation metadata for UpdateLabelerPool."
    },
    "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage": {
      "type": "object",
      "description": "Detected language for a structural component.",
      "id": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage",
      "properties": {
        "confidence": {
          "format": "float",
          "description": "Confidence of detected language. Range `[0, 1]`.",
          "type": "number"
        },
        "languageCode": {
          "description": "The [BCP-47 language code](https://www.unicode.org/reports/tr35/#Unicode_locale_identifier), such as `en-US` or `sr-Latn`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentSchemaEntityType": {
      "properties": {
        "enumValues": {
          "description": "If specified, lists all the possible values for this entity. This should not be more than a handful of values. If the number of values is \u003e10 or could change frequently use the `EntityType.value_ontology` field and specify a list of all possible values in a value ontology file.",
          "$ref": "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeEnumValues"
        },
        "name": {
          "type": "string",
          "description": "Name of the type. It must be unique within the schema file and cannot be a \"Common Type\". The following naming conventions are used: - Use `snake_casing`. - Name matching is case-sensitive. - Maximum 64 characters. - Must start with a letter. - Allowed characters: ASCII letters `[a-z0-9_-]`. (For backward compatibility internal infrastructure and tooling can handle any ascii character.) - The `/` is sometimes used to denote a property of a type. For example `line_item/amount`. This convention is deprecated, but will still be honored for backward compatibility."
        },
        "baseTypes": {
          "description": "The entity type that this type is derived from. For now, one and only one should be set.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string",
          "description": "User defined name for the type."
        },
        "properties": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentSchemaEntityTypeProperty"
          },
          "description": "Description the nested structure, or composition of an entity.",
          "type": "array"
        }
      },
      "description": "EntityType is the wrapper of a label of the corresponding model with detailed attributes and limitations for entity-based processors. Multiple types can also compose a dependency tree to represent nested types.",
      "id": "GoogleCloudDocumentaiV1DocumentSchemaEntityType",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3ImportProcessorVersionMetadata": {
      "description": "The long-running operation metadata for the ImportProcessorVersion method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3ImportProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata for the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPage": {
      "properties": {
        "detectedBarcodes": {
          "description": "A list of detected barcodes.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedBarcode"
          },
          "type": "array"
        },
        "image": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImage",
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for the page."
        },
        "dimension": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDimension",
          "description": "Physical dimension of the page."
        },
        "blocks": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageBlock"
          },
          "type": "array",
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation."
        },
        "tokens": {
          "type": "array",
          "description": "A list of visually detected tokens on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageToken"
          }
        },
        "lines": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLine"
          },
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line."
        },
        "formFields": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageFormField"
          },
          "type": "array",
          "description": "A list of visually detected form fields on the page."
        },
        "paragraphs": {
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph"
          },
          "type": "array"
        },
        "imageQualityScores": {
          "description": "Image quality scores.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImageQualityScores"
        },
        "symbols": {
          "description": "A list of visually detected symbols on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageSymbol"
          },
          "type": "array"
        },
        "visualElements": {
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement"
          },
          "type": "array"
        },
        "provenance": {
          "description": "The history of this page.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "deprecated": true
        },
        "transforms": {
          "description": "Transformation matrices that were applied to the original document image to produce Page.image.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix"
          },
          "type": "array"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "tables": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTable"
          },
          "description": "A list of visually detected tables on the page."
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPage",
      "description": "A page in a Document."
    },
    "GoogleTypeDateTime": {
      "properties": {
        "day": {
          "type": "integer",
          "description": "Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.",
          "format": "int32"
        },
        "utcOffset": {
          "type": "string",
          "format": "google-duration",
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }."
        },
        "timeZone": {
          "$ref": "GoogleTypeTimeZone",
          "description": "Time zone."
        },
        "nanos": {
          "type": "integer",
          "description": "Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.",
          "format": "int32"
        },
        "year": {
          "type": "integer",
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
          "format": "int32"
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month."
        },
        "minutes": {
          "description": "Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.",
          "type": "integer",
          "format": "int32"
        },
        "seconds": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds."
        },
        "hours": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
        }
      },
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
      "id": "GoogleTypeDateTime",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak": {
      "id": "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak",
      "type": "object",
      "description": "Detected break at the end of a Token.",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ],
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "description": "Detected break type."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse",
      "properties": {},
      "type": "object",
      "description": "Response message for the UndeployProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1EvaluateProcessorVersionRequest": {
      "description": "Evaluates the given ProcessorVersion against the supplied documents.",
      "id": "GoogleCloudDocumentaiV1EvaluateProcessorVersionRequest",
      "properties": {
        "evaluationDocuments": {
          "description": "Optional. The documents used in the evaluation. If unspecified, use the processor's dataset as evaluation input.",
          "$ref": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3ImportProcessorVersionResponse",
      "type": "object",
      "description": "The response message for the ImportProcessorVersion method.",
      "properties": {
        "processorVersion": {
          "description": "The destination processor version name.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageLayout": {
      "id": "GoogleCloudDocumentaiV1DocumentPageLayout",
      "type": "object",
      "properties": {
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1BoundingPoly",
          "description": "The bounding polygon for the Layout."
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor"
        },
        "confidence": {
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range `[0, 1]`.",
          "type": "number",
          "format": "float"
        },
        "orientation": {
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ],
          "type": "string",
          "description": "Detected orientation for the Layout.",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ]
        }
      },
      "description": "Visual element describing a layout unit on a page."
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata",
      "type": "object",
      "description": "The long-running operation metadata for the EnableProcessor method."
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation": {
      "type": "object",
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset.",
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation",
      "properties": {
        "documentErrorCount": {
          "description": "The total number of document errors.",
          "format": "int32",
          "type": "integer"
        },
        "documentErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training.",
          "type": "array"
        },
        "datasetErrors": {
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "datasetErrorCount": {
          "type": "integer",
          "description": "The total number of dataset errors.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentSchema": {
      "description": "The schema defines the output of the processed document by a processor.",
      "id": "GoogleCloudDocumentaiV1DocumentSchema",
      "type": "object",
      "properties": {
        "entityTypes": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentSchemaEntityType"
          },
          "description": "Entity types of the schema.",
          "type": "array"
        },
        "description": {
          "description": "Description of the schema.",
          "type": "string"
        },
        "metadata": {
          "$ref": "GoogleCloudDocumentaiV1DocumentSchemaMetadata",
          "description": "Metadata of the schema."
        },
        "displayName": {
          "description": "Display name to show to users.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3CommonOperationMetadata": {
      "description": "The common metadata for long running operations.",
      "properties": {
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        },
        "resource": {
          "type": "string",
          "description": "A related resource to this operation."
        },
        "updateTime": {
          "description": "The last update time of the operation.",
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "The creation time of the operation.",
          "format": "google-datetime"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "description": "The state of the operation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata": {
      "type": "object",
      "description": "The metadata that represents a processor version being created.",
      "properties": {
        "trainingDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The training dataset validation information."
        },
        "testDatasetValidation": {
          "description": "The test dataset validation information.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation"
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long-running operation."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1DocumentPageImage": {
      "id": "GoogleCloudDocumentaiV1DocumentPageImage",
      "properties": {
        "height": {
          "description": "Height of the image in pixels.",
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Width of the image in pixels."
        },
        "mimeType": {
          "description": "Encoding [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml) for the image.",
          "type": "string"
        },
        "content": {
          "type": "string",
          "description": "Raw byte content of the image.",
          "format": "byte"
        }
      },
      "type": "object",
      "description": "Rendered image contents for this page."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLine": {
      "type": "object",
      "properties": {
        "provenance": {
          "deprecated": true,
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "description": "Layout for Line.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        }
      },
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLine"
    },
    "GoogleCloudDocumentaiV1TrainProcessorVersionMetadata": {
      "description": "The metadata that represents a processor version being created.",
      "id": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long-running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        },
        "testDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation",
          "description": "The test dataset validation information."
        },
        "trainingDatasetValidation": {
          "description": "The training dataset validation information.",
          "$ref": "GoogleCloudDocumentaiV1TrainProcessorVersionMetadataDatasetValidation"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2OutputConfig": {
      "description": "The desired output location and metadata.",
      "properties": {
        "gcsDestination": {
          "$ref": "GoogleCloudDocumentaiV1beta2GcsDestination",
          "description": "The Google Cloud Storage location to write the output to."
        },
        "pagesPerShard": {
          "type": "integer",
          "format": "int32",
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2OutputConfig"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImage": {
      "description": "Rendered image contents for this page.",
      "type": "object",
      "properties": {
        "height": {
          "format": "int32",
          "type": "integer",
          "description": "Height of the image in pixels."
        },
        "mimeType": {
          "type": "string",
          "description": "Encoding [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml) for the image."
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Width of the image in pixels."
        },
        "content": {
          "description": "Raw byte content of the image.",
          "type": "string",
          "format": "byte"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImage"
    },
    "GoogleCloudDocumentaiV1beta2Document": {
      "properties": {
        "pages": {
          "description": "Visual page layout for the Document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPage"
          }
        },
        "revisions": {
          "type": "array",
          "description": "Placeholder. Revision history of this document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevision"
          }
        },
        "mimeType": {
          "type": "string",
          "description": "An IANA published [media type (MIME type)](https://www.iana.org/assignments/media-types/media-types.xhtml)."
        },
        "text": {
          "type": "string",
          "description": "Optional. UTF-8 encoded text in reading order from the document."
        },
        "error": {
          "description": "Any error that occurred while processing this document.",
          "$ref": "GoogleRpcStatus"
        },
        "entityRelations": {
          "description": "Placeholder. Relationship among Document.entities.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation"
          },
          "type": "array"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          },
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries."
        },
        "textChanges": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextChange"
          },
          "description": "Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other."
        },
        "textStyles": {
          "description": "Styles for the Document.text.",
          "deprecated": true,
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyle"
          },
          "type": "array"
        },
        "shardInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified."
        },
        "uri": {
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. For more information, refer to [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris).",
          "type": "string"
        },
        "labels": {
          "description": "Labels for this document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentLabel"
          },
          "type": "array"
        },
        "content": {
          "format": "byte",
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2Document",
      "type": "object",
      "description": "Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality."
    },
    "GoogleCloudDocumentaiV1OcrConfigHints": {
      "type": "object",
      "properties": {
        "languageHints": {
          "items": {
            "type": "string"
          },
          "description": "List of BCP-47 language codes to use for OCR. In most cases, not specifying it yields the best results since it enables automatic language detection. For languages based on the Latin alphabet, setting hints is not needed. In rare cases, when the language of the text in the image is known, setting a hint will help get better results (although it will be a significant hindrance if the hint is wrong).",
          "type": "array"
        }
      },
      "description": "Hints for OCR Engine",
      "id": "GoogleCloudDocumentaiV1OcrConfigHints"
    },
    "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataIndividualImportStatus": {
      "type": "object",
      "properties": {
        "outputDocumentId": {
          "$ref": "GoogleCloudDocumentaiV1beta3DocumentId",
          "description": "The document id of imported document if it was successful, otherwise empty."
        },
        "status": {
          "description": "The status of the importing of the document.",
          "$ref": "GoogleRpcStatus"
        },
        "inputGcsSource": {
          "description": "The source Cloud Storage URI of the document.",
          "type": "string"
        }
      },
      "description": "The status of each individual document in the import process.",
      "id": "GoogleCloudDocumentaiV1beta3ImportDocumentsMetadataIndividualImportStatus"
    }
  },
  "revision": "20240417",
  "mtlsRootUrl": "https://documentai.mtls.googleapis.com/"
}

{
  "ownerDomain": "google.com",
  "version": "v1",
  "title": "Cloud Document AI API",
  "description": "Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.",
  "mtlsRootUrl": "https://documentai.mtls.googleapis.com/",
  "version_module": true,
  "servicePath": "",
  "name": "documentai",
  "documentationLink": "https://cloud.google.com/document-ai/docs/",
  "protocol": "rest",
  "id": "documentai:v1",
  "schemas": {
    "GoogleCloudDocumentaiV1DocumentPageLayout": {
      "type": "object",
      "description": "Visual element describing a layout unit on a page.",
      "properties": {
        "orientation": {
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ],
          "description": "Detected orientation for the Layout.",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "type": "string"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1BoundingPoly",
          "description": "The bounding polygon for the Layout."
        },
        "confidence": {
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range [0, 1].",
          "type": "number",
          "format": "float"
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageLayout"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell": {
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "layout": {
          "description": "Layout for TableCell.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "colSpan": {
          "format": "int32",
          "type": "integer",
          "description": "How many columns this cell spans."
        },
        "rowSpan": {
          "format": "int32",
          "type": "integer",
          "description": "How many rows this cell spans."
        }
      },
      "description": "A cell representation inside the table.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell"
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata",
      "type": "object",
      "description": "The long running operation metadata for delete processor version method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageToken": {
      "description": "A detected token.",
      "type": "object",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for Token."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "detectedBreak": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak",
          "description": "Detected break at the end of a Token."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageToken"
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview",
      "type": "object",
      "description": "Human Review information of the document.",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`.",
          "type": "string"
        },
        "state": {
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageFormField": {
      "type": "object",
      "description": "A form field detected on the page.",
      "properties": {
        "valueType": {
          "type": "string",
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the field_value is normal text) - \"unfilled_checkbox\" - \"filled_checkbox\""
        },
        "nameDetectedLanguages": {
          "description": "A list of detected languages for name together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "fieldValue": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the FormField value."
        },
        "valueDetectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages for value together with confidence."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "fieldName": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageFormField"
    },
    "GoogleCloudDocumentaiV1CommonOperationMetadata": {
      "id": "GoogleCloudDocumentaiV1CommonOperationMetadata",
      "type": "object",
      "description": "The common metadata for long running operations.",
      "properties": {
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "type": "string",
          "description": "The state of the operation."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The creation time of the operation."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time of the operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse": {
      "id": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse",
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete.",
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse"
          },
          "description": "Responses for each individual document."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata": {
      "description": "The metadata that represents a processor version being created.",
      "properties": {
        "trainingDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The training dataset validation information."
        },
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        },
        "testDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The test dataset validation information."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchor": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
      "type": "object",
      "properties": {
        "content": {
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments.",
          "type": "string"
        },
        "textSegments": {
          "description": "The text segments from the Document.text.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment"
          }
        }
      },
      "description": "Text reference indexing into the Document.text."
    },
    "GoogleCloudDocumentaiV1beta1OperationMetadata": {
      "id": "GoogleCloudDocumentaiV1beta1OperationMetadata",
      "type": "object",
      "description": "Contains metadata for the BatchProcessDocuments operation.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The creation time of the operation."
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "description": "The state of the current batch processing.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time of the operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak": {
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ],
          "description": "Detected break type."
        }
      },
      "description": "Detected break at the end of a Token.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak"
    },
    "GoogleCloudDocumentaiV1beta2InputConfig": {
      "properties": {
        "gcsSource": {
          "description": "The Google Cloud Storage location to read the input from. This must be a single file.",
          "$ref": "GoogleCloudDocumentaiV1beta2GcsSource"
        },
        "contents": {
          "format": "byte",
          "description": "Content in bytes, represented as a stream of bytes. Note: As with all `bytes` fields, proto buffer messages use a pure binary representation, whereas JSON representations use base64. This field only works for synchronous ProcessDocument method.",
          "type": "string"
        },
        "mimeType": {
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2InputConfig",
      "description": "The desired input location and metadata."
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation": {
      "properties": {
        "documentErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training."
        },
        "datasetErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training.",
          "type": "array"
        },
        "documentErrorCount": {
          "format": "int32",
          "description": "The total number of document errors.",
          "type": "integer"
        },
        "datasetErrorCount": {
          "description": "The total number of dataset errors.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
      "type": "object",
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak": {
      "description": "Detected break at the end of a Token.",
      "properties": {
        "type": {
          "description": "Detected break type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak"
    },
    "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef": {
      "id": "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef",
      "type": "object",
      "description": "Represents a weak reference to a page element within a document.",
      "properties": {
        "confidence": {
          "type": "number",
          "description": "Optional. Confidence of detected page element, if applicable. Range [0, 1].",
          "format": "float"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1BoundingPoly",
          "description": "Optional. Identifies the bounding polygon of a layout element on the page."
        },
        "layoutType": {
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ],
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "type": "string",
          "description": "Optional. The type of the layout element that is being referenced if any."
        },
        "layoutId": {
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.",
          "type": "string"
        },
        "page": {
          "format": "int64",
          "description": "Required. Index into the Document.pages element, for example using Document.pages to locate the related page element. This field is skipped when its value is the default 0. See https://developers.google.com/protocol-buffers/docs/proto3#json.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageBlock": {
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageBlock",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Block."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDimension": {
      "description": "Dimension for the page.",
      "properties": {
        "width": {
          "type": "number",
          "description": "Page width.",
          "format": "float"
        },
        "unit": {
          "type": "string",
          "description": "Dimension unit."
        },
        "height": {
          "description": "Page height.",
          "type": "number",
          "format": "float"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDimension"
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityRelation": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation",
      "properties": {
        "relation": {
          "description": "Relationship description.",
          "type": "string"
        },
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        },
        "subjectId": {
          "description": "Subject entity id.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Relationship between Entities."
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityRelation": {
      "type": "object",
      "description": "Relationship between Entities.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation",
      "properties": {
        "objectId": {
          "description": "Object entity id.",
          "type": "string"
        },
        "relation": {
          "description": "Relationship description.",
          "type": "string"
        },
        "subjectId": {
          "description": "Subject entity id.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1BoundingPoly": {
      "description": "A bounding polygon for the detected image annotation.",
      "id": "GoogleCloudDocumentaiV1BoundingPoly",
      "properties": {
        "vertices": {
          "type": "array",
          "description": "The bounding polygon vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1Vertex"
          }
        },
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1NormalizedVertex"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse": {
      "properties": {
        "evaluation": {
          "type": "string",
          "description": "The resource name of the created evaluation."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse",
      "type": "object",
      "description": "Metadata of the EvaluateProcessorVersion method."
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment": {
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "properties": {
        "startIndex": {
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "type": "string",
          "format": "int64"
        },
        "endIndex": {
          "type": "string",
          "description": "TextSegment half open end UTF-8 char index in the Document.text.",
          "format": "int64"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata",
      "description": "The long running operation metadata for deploy processor version method."
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntity": {
      "properties": {
        "mentionId": {
          "type": "string",
          "description": "Optional. Deprecated. Use `id` field instead."
        },
        "type": {
          "type": "string",
          "description": "Entity type from a schema e.g. `Address`."
        },
        "id": {
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document.",
          "type": "string"
        },
        "mentionText": {
          "description": "Optional. Text value in the document e.g. `1600 Amphitheatre Pkwy`.",
          "type": "string"
        },
        "provenance": {
          "description": "Optional. The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "properties": {
          "type": "array",
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          }
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text."
        },
        "pageAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor",
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found."
        },
        "redacted": {
          "description": "Optional. Whether the entity will be redacted for de-identification purposes.",
          "type": "boolean"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Optional. Confidence of detected Schema entity. Range [0, 1]."
        },
        "normalizedValue": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue",
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types."
        }
      },
      "type": "object",
      "description": "A phrase in the text that is a known entity type, such as a person, an organization, or location.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntity"
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata": {
      "type": "object",
      "description": "The long running operation metadata for DeleteLabelerPool.",
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow": {
      "properties": {
        "cells": {
          "type": "array",
          "description": "Cells that make up this row.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell"
          }
        }
      },
      "description": "A row of table cells.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse": {
      "type": "object",
      "description": "Response to a single document processing request.",
      "id": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse",
      "properties": {
        "outputConfig": {
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects.",
          "$ref": "GoogleCloudDocumentaiV1beta1OutputConfig"
        },
        "inputConfig": {
          "description": "Information about the input file. This is the same as the corresponding input config in the request.",
          "$ref": "GoogleCloudDocumentaiV1beta1InputConfig"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata",
      "description": "The long running operation metadata for delete processor method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageParagraph": {
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "properties": {
        "layout": {
          "description": "Layout for Paragraph.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageParagraph",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentTextAnchor": {
      "properties": {
        "content": {
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments.",
          "type": "string"
        },
        "textSegments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment"
          },
          "description": "The text segments from the Document.text."
        }
      },
      "description": "Text reference indexing into the Document.text.",
      "id": "GoogleCloudDocumentaiV1DocumentTextAnchor",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow": {
      "type": "object",
      "description": "A row of table cells.",
      "properties": {
        "cells": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell"
          },
          "description": "Cells that make up this row.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
    },
    "GoogleCloudDocumentaiV1ProcessRequest": {
      "properties": {
        "inlineDocument": {
          "description": "An inline document proto.",
          "$ref": "GoogleCloudDocumentaiV1Document"
        },
        "skipHumanReview": {
          "type": "boolean",
          "description": "Whether Human Review feature should be skipped for this request. Default to false."
        },
        "rawDocument": {
          "$ref": "GoogleCloudDocumentaiV1RawDocument",
          "description": "A raw document content (bytes)."
        }
      },
      "id": "GoogleCloudDocumentaiV1ProcessRequest",
      "type": "object",
      "description": "Request message for the process document method."
    },
    "GoogleCloudDocumentaiV1BatchDocumentsInputConfig": {
      "id": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig",
      "properties": {
        "gcsDocuments": {
          "description": "The set of documents individually specified on Cloud Storage.",
          "$ref": "GoogleCloudDocumentaiV1GcsDocuments"
        },
        "gcsPrefix": {
          "description": "The set of documents that match the specified Cloud Storage [gcs_prefix].",
          "$ref": "GoogleCloudDocumentaiV1GcsPrefix"
        }
      },
      "description": "The common config to specify a set of documents used as input.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageBlock": {
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
      "type": "object",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Block."
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageBlock"
    },
    "GoogleCloudDocumentaiV1DocumentStyleFontSize": {
      "properties": {
        "size": {
          "description": "Font size for the text.",
          "type": "number",
          "format": "float"
        },
        "unit": {
          "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.).",
          "type": "string"
        }
      },
      "description": "Font size with unit.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentStyleFontSize"
    },
    "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse",
      "properties": {
        "responses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse"
          },
          "type": "array",
          "description": "Responses for each individual document."
        }
      },
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete."
    },
    "GoogleTypeMoney": {
      "id": "GoogleTypeMoney",
      "type": "object",
      "description": "Represents an amount of money with its currency type.",
      "properties": {
        "units": {
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        },
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1HumanReviewStatus": {
      "id": "GoogleCloudDocumentaiV1HumanReviewStatus",
      "description": "The status of human review on a processed document.",
      "properties": {
        "humanReviewOperation": {
          "description": "The name of the operation triggered by the processed document. This field is populated only when the [state] is [HUMAN_REVIEW_IN_PROGRESS]. It has the same response type and metadata as the long running operation returned by [ReviewDocument] method.",
          "type": "string"
        },
        "stateMessage": {
          "description": "A message providing more details about the human review state.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ],
          "type": "string",
          "description": "The state of human review on the processing request.",
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review is not enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the [state_message] for details."
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3EnableProcessorMetadata",
      "description": "The long running operation metadata for enable processor method.",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageFormField": {
      "description": "A form field detected on the page.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageFormField",
      "properties": {
        "nameDetectedLanguages": {
          "description": "A list of detected languages for name together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "fieldValue": {
          "description": "Layout for the FormField value.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "valueDetectedLanguages": {
          "description": "A list of detected languages for value together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "fieldName": {
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "valueType": {
          "type": "string",
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the field_value is normal text) - \"unfilled_checkbox\" - \"filled_checkbox\""
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2NormalizedVertex": {
      "properties": {
        "x": {
          "type": "number",
          "description": "X coordinate.",
          "format": "float"
        },
        "y": {
          "type": "number",
          "format": "float",
          "description": "Y coordinate (starts from the top of the image)."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2NormalizedVertex",
      "type": "object",
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1."
    },
    "GoogleCloudDocumentaiV1beta2OutputConfig": {
      "properties": {
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output to.",
          "$ref": "GoogleCloudDocumentaiV1beta2GcsDestination"
        },
        "pagesPerShard": {
          "format": "int32",
          "type": "integer",
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2OutputConfig",
      "type": "object",
      "description": "The desired output location and metadata."
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevision": {
      "description": "Contains past or forward revisions of this document.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevision",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the revision. Unique within the context of the document."
        },
        "humanReview": {
          "description": "Human Review information of this revision.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview"
        },
        "createTime": {
          "type": "string",
          "description": "The time that the revision was created.",
          "format": "google-datetime"
        },
        "processor": {
          "description": "If the annotation was made by processor identify the processor by its resource name.",
          "type": "string"
        },
        "parent": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array",
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field."
        },
        "agent": {
          "description": "If the change was made by a person specify the name or id of that person.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1Document": {
      "id": "GoogleCloudDocumentaiV1beta1Document",
      "type": "object",
      "properties": {
        "textStyles": {
          "description": "Styles for the Document.text.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyle"
          },
          "type": "array"
        },
        "revisions": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevision"
          },
          "description": "Revision history of this document.",
          "type": "array"
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Any error that occurred while processing this document."
        },
        "shardInfo": {
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentShardInfo"
        },
        "text": {
          "description": "Optional. UTF-8 encoded text in reading order from the document.",
          "type": "string"
        },
        "entities": {
          "type": "array",
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          }
        },
        "uri": {
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.",
          "type": "string"
        },
        "mimeType": {
          "description": "An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml.",
          "type": "string"
        },
        "textChanges": {
          "type": "array",
          "description": "A list of text corrections made to [Document.text]. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextChange"
          }
        },
        "entityRelations": {
          "description": "Relationship among Document.entities.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation"
          },
          "type": "array"
        },
        "content": {
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
          "type": "string",
          "format": "byte"
        },
        "pages": {
          "description": "Visual page layout for the Document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPage"
          }
        }
      },
      "description": "Document represents the canonical document resource in Document Understanding AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document Understanding AI to iterate and optimize for quality."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTable": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTable",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "layout": {
          "description": "Layout for Table.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "bodyRows": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          },
          "description": "Body rows of the table."
        },
        "headerRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          },
          "description": "Header rows of the table.",
          "type": "array"
        }
      },
      "description": "A table representation similar to HTML table structure.",
      "type": "object"
    },
    "GoogleTypeDateTime": {
      "type": "object",
      "properties": {
        "month": {
          "type": "integer",
          "description": "Required. Month of year. Must be from 1 to 12.",
          "format": "int32"
        },
        "day": {
          "description": "Required. Day of month. Must be from 1 to 31 and valid for the year and month.",
          "format": "int32",
          "type": "integer"
        },
        "timeZone": {
          "description": "Time zone.",
          "$ref": "GoogleTypeTimeZone"
        },
        "utcOffset": {
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.",
          "type": "string",
          "format": "google-duration"
        },
        "hours": {
          "format": "int32",
          "type": "integer",
          "description": "Required. Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
        },
        "seconds": {
          "type": "integer",
          "format": "int32",
          "description": "Required. Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
        },
        "year": {
          "type": "integer",
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
          "format": "int32"
        },
        "minutes": {
          "format": "int32",
          "type": "integer",
          "description": "Required. Minutes of hour of day. Must be from 0 to 59."
        },
        "nanos": {
          "type": "integer",
          "description": "Required. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
          "format": "int32"
        }
      },
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year is 0, the DateTime is considered not to have a specific year. month and day must have valid, non-zero values. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.",
      "id": "GoogleTypeDateTime"
    },
    "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse": {
      "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionResponse",
      "properties": {
        "gcsUri": {
          "description": "The Cloud Storage URI containing the output artifacts.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response message associated with the ExportProcessorVersion operation."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLayout": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
      "description": "Visual element describing a layout unit on a page.",
      "properties": {
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly",
          "description": "The bounding polygon for the Layout."
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        },
        "confidence": {
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range [0, 1].",
          "type": "number",
          "format": "float"
        },
        "orientation": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ],
          "description": "Detected orientation for the Layout.",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue": {
      "description": "Parsed and normalized entity value.",
      "properties": {
        "text": {
          "description": "Required. Normalized entity value stored as a string. This field is populated for supported document type (e.g. Invoice). For some entity types, one of respective 'structured_value' fields may also be populated. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.",
          "type": "string"
        },
        "datetimeValue": {
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto",
          "$ref": "GoogleTypeDateTime"
        },
        "booleanValue": {
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes.",
          "type": "boolean"
        },
        "dateValue": {
          "$ref": "GoogleTypeDate",
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto"
        },
        "addressValue": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto"
        },
        "moneyValue": {
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto",
          "$ref": "GoogleTypeMoney"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPage": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPage",
      "type": "object",
      "properties": {
        "layout": {
          "description": "Layout for the page.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "formFields": {
          "description": "A list of visually detected form fields on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageFormField"
          },
          "type": "array"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this page."
        },
        "dimension": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDimension",
          "description": "Physical dimension of the page."
        },
        "transforms": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix"
          },
          "description": "Transformation matrices that were applied to the original document image to produce Page.image."
        },
        "image": {
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImage"
        },
        "tables": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTable"
          },
          "type": "array",
          "description": "A list of visually detected tables on the page."
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "paragraphs": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph"
          },
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph."
        },
        "visualElements": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement"
          },
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page."
        },
        "lines": {
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLine"
          },
          "type": "array"
        },
        "pageNumber": {
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.",
          "type": "integer",
          "format": "int32"
        },
        "tokens": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageToken"
          },
          "description": "A list of visually detected tokens on the page.",
          "type": "array"
        },
        "blocks": {
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageBlock"
          },
          "type": "array"
        }
      },
      "description": "A page in a Document."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageParagraph": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph",
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "properties": {
        "layout": {
          "description": "Layout for Paragraph.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageToken": {
      "properties": {
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Token."
        },
        "detectedBreak": {
          "description": "Detected break at the end of a Token.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageToken",
      "description": "A detected token.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent": {
      "description": "Structure for referencing parent provenances. When an element replaces one of more other elements parent references identify the elements that are replaced.",
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the parent revisions corresponding collection of items (eg. list of entities, properties within entities, etc.)"
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the [Document.revisions] identifying the parent revision."
        },
        "id": {
          "format": "int32",
          "description": "The id of the parent provenance.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1GcsPrefix": {
      "description": "Specifies all documents on Cloud Storage with a common prefix.",
      "properties": {
        "gcsUriPrefix": {
          "description": "The URI prefix.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1GcsPrefix",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata": {
      "type": "object",
      "description": "The long running operation metadata for enable processor method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage": {
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "confidence": {
          "type": "number",
          "description": "Confidence of detected language. Range [0, 1].",
          "format": "float"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage",
      "type": "object",
      "description": "Detected language for a structural component."
    },
    "GoogleCloudDocumentaiV1DocumentPageTableTableCell": {
      "properties": {
        "rowSpan": {
          "description": "How many rows this cell spans.",
          "format": "int32",
          "type": "integer"
        },
        "colSpan": {
          "format": "int32",
          "type": "integer",
          "description": "How many columns this cell spans."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for TableCell."
        }
      },
      "description": "A cell representation inside the table.",
      "id": "GoogleCloudDocumentaiV1DocumentPageTableTableCell",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage": {
      "description": "Detected language for a structural component.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage",
      "properties": {
        "languageCode": {
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of detected language. Range [0, 1]."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageImage": {
      "type": "object",
      "properties": {
        "content": {
          "format": "byte",
          "description": "Raw byte content of the image.",
          "type": "string"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "description": "Height of the image in pixels."
        },
        "mimeType": {
          "type": "string",
          "description": "Encoding mime type for the image."
        },
        "width": {
          "format": "int32",
          "type": "integer",
          "description": "Width of the image in pixels."
        }
      },
      "description": "Rendered image contents for this page.",
      "id": "GoogleCloudDocumentaiV1DocumentPageImage"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLine": {
      "type": "object",
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLine",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Line."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1InputConfig": {
      "description": "The desired input location and metadata.",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudDocumentaiV1beta1GcsSource",
          "description": "The Google Cloud Storage location to read the input from. This must be a single file."
        },
        "mimeType": {
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1InputConfig"
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize": {
      "properties": {
        "unit": {
          "type": "string",
          "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.)."
        },
        "size": {
          "type": "number",
          "format": "float",
          "description": "Font size for the text."
        }
      },
      "description": "Font size with unit.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1BatchProcessRequest": {
      "properties": {
        "skipHumanReview": {
          "type": "boolean",
          "description": "Whether Human Review feature should be skipped for this request. Default to false."
        },
        "documentOutputConfig": {
          "description": "The overall output config for batch process.",
          "$ref": "GoogleCloudDocumentaiV1DocumentOutputConfig"
        },
        "inputDocuments": {
          "$ref": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig",
          "description": "The input documents for batch process."
        }
      },
      "type": "object",
      "description": "Request message for batch process document method.",
      "id": "GoogleCloudDocumentaiV1BatchProcessRequest"
    },
    "GoogleCloudDocumentaiV1DocumentEntityRelation": {
      "id": "GoogleCloudDocumentaiV1DocumentEntityRelation",
      "type": "object",
      "properties": {
        "relation": {
          "type": "string",
          "description": "Relationship description."
        },
        "subjectId": {
          "type": "string",
          "description": "Subject entity id."
        },
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        }
      },
      "description": "Relationship between Entities."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchor": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor",
      "type": "object",
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.",
      "properties": {
        "pageRefs": {
          "description": "One or more references to visual page elements",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageLine": {
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "properties": {
        "layout": {
          "description": "Layout for Line.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "The history of this annotation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageLine"
    },
    "GoogleProtobufEmpty": {
      "properties": {},
      "id": "GoogleProtobufEmpty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPage": {
      "type": "object",
      "description": "A page in a Document.",
      "properties": {
        "provenance": {
          "description": "The history of this page.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "lines": {
          "type": "array",
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLine"
          }
        },
        "tables": {
          "description": "A list of visually detected tables on the page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTable"
          }
        },
        "visualElements": {
          "type": "array",
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement"
          }
        },
        "transforms": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix"
          },
          "type": "array",
          "description": "Transformation matrices that were applied to the original document image to produce Page.image."
        },
        "formFields": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageFormField"
          },
          "description": "A list of visually detected form fields on the page."
        },
        "blocks": {
          "type": "array",
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageBlock"
          }
        },
        "pageNumber": {
          "format": "int32",
          "type": "integer",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the page."
        },
        "image": {
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImage"
        },
        "dimension": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDimension",
          "description": "Physical dimension of the page."
        },
        "tokens": {
          "description": "A list of visually detected tokens on the page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageToken"
          }
        },
        "paragraphs": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph"
          },
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPage"
    },
    "GoogleCloudDocumentaiV1NormalizedVertex": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1NormalizedVertex",
      "properties": {
        "x": {
          "format": "float",
          "type": "number",
          "description": "X coordinate."
        },
        "y": {
          "format": "float",
          "type": "number",
          "description": "Y coordinate (starts from the top of the image)."
        }
      },
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1."
    },
    "GoogleCloudDocumentaiV1DocumentRevision": {
      "properties": {
        "processor": {
          "type": "string",
          "description": "If the annotation was made by processor identify the processor by its resource name."
        },
        "agent": {
          "description": "If the change was made by a person specify the name or id of that person.",
          "type": "string"
        },
        "parent": {
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "humanReview": {
          "description": "Human Review information of this revision.",
          "$ref": "GoogleCloudDocumentaiV1DocumentRevisionHumanReview"
        },
        "createTime": {
          "description": "The time that the revision was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Id of the revision. Unique within the context of the document."
        }
      },
      "description": "Contains past or forward revisions of this document.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentRevision"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchor": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor",
      "properties": {
        "pageRefs": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef"
          },
          "description": "One or more references to visual page elements"
        }
      },
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageToken": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageToken",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Token."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "detectedBreak": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak",
          "description": "Detected break at the end of a Token."
        }
      },
      "description": "A detected token.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata",
      "type": "object",
      "description": "The long running operation metadata for set default processor version method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2GcsSource": {
      "id": "GoogleCloudDocumentaiV1beta2GcsSource",
      "description": "The Google Cloud Storage location where the input file will be read from.",
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "type": "object",
      "description": "The long running operation metadata for UpdateLabelerPool."
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse": {
      "properties": {},
      "description": "Response message for set default processor version method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata": {
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The creation time of the operation."
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed."
        },
        "updateTime": {
          "type": "string",
          "description": "The last update time of the operation.",
          "format": "google-datetime"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "description": "Used only when Operation.done is false."
        },
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata",
      "description": "The long running operation metadata for review document method."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLine": {
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Line."
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLine"
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenance": {
      "properties": {
        "revision": {
          "type": "integer",
          "description": "The index of the revision that produced this element.",
          "format": "int32"
        },
        "parents": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent"
          },
          "description": "References to the original elements that are replaced."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Operation type unspecified.",
            "Add an element. Implicit if no `parents` are set for the provenance.",
            "The element is removed. No `parents` should be set.",
            "Explicitly replaces the element(s) identified by `parents`.",
            "Element is requested for human review.",
            "Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Element is skipped in the validation process."
          ],
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ],
          "description": "The type of provenance operation."
        },
        "id": {
          "format": "int32",
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "type": "integer"
        }
      },
      "description": "Structure to identify provenance relationships between annotations in different revisions.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue": {
      "type": "object",
      "properties": {
        "text": {
          "description": "Required. Normalized entity value stored as a string. This field is populated for supported document type (e.g. Invoice). For some entity types, one of respective 'structured_value' fields may also be populated. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.",
          "type": "string"
        },
        "dateValue": {
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto",
          "$ref": "GoogleTypeDate"
        },
        "moneyValue": {
          "$ref": "GoogleTypeMoney",
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto"
        },
        "datetimeValue": {
          "$ref": "GoogleTypeDateTime",
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto"
        },
        "addressValue": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto"
        },
        "booleanValue": {
          "type": "boolean",
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes."
        }
      },
      "description": "Parsed and normalized entity value.",
      "id": "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue"
    },
    "GoogleTypeColor": {
      "properties": {
        "blue": {
          "description": "The amount of blue in the color as a value in the interval [0, 1].",
          "type": "number",
          "format": "float"
        },
        "alpha": {
          "format": "float",
          "type": "number",
          "description": "The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0)."
        },
        "green": {
          "type": "number",
          "format": "float",
          "description": "The amount of green in the color as a value in the interval [0, 1]."
        },
        "red": {
          "format": "float",
          "type": "number",
          "description": "The amount of red in the color as a value in the interval [0, 1]."
        }
      },
      "id": "GoogleTypeColor",
      "type": "object",
      "description": "Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to/from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't carry information about the absolute color space that should be used to interpret the RGB value (e.g. sRGB, Adobe RGB, DCI-P3, BT.2020, etc.). By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most 1e-5. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha \u003c= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red \u003c\u003c 16) | (green \u003c\u003c 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i \u003c missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ..."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef": {
      "type": "object",
      "description": "Represents a weak reference to a page element within a document.",
      "properties": {
        "layoutType": {
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ],
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "type": "string"
        },
        "page": {
          "description": "Required. Index into the Document.pages element, for example using Document.pages to locate the related page element. This field is skipped when its value is the default 0. See https://developers.google.com/protocol-buffers/docs/proto3#json.",
          "type": "string",
          "format": "int64"
        },
        "confidence": {
          "description": "Optional. Confidence of detected page element, if applicable. Range [0, 1].",
          "type": "number",
          "format": "float"
        },
        "layoutId": {
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.",
          "type": "string"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly",
          "description": "Optional. Identifies the bounding polygon of a layout element on the page."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef"
    },
    "GoogleCloudDocumentaiV1beta3CommonOperationMetadata": {
      "description": "The common metadata for long running operations.",
      "id": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
      "type": "object",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "The creation time of the operation.",
          "type": "string"
        },
        "state": {
          "description": "The state of the operation.",
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ]
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time of the operation."
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        }
      }
    },
    "GoogleCloudDocumentaiV1ReviewDocumentResponse": {
      "id": "GoogleCloudDocumentaiV1ReviewDocumentResponse",
      "description": "Response message for review document method.",
      "type": "object",
      "properties": {
        "gcsDestination": {
          "type": "string",
          "description": "The Cloud Storage uri for the human reviewed document."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse": {
      "properties": {},
      "type": "object",
      "description": "Response message for the undeploy processor version method.",
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyle": {
      "properties": {
        "fontWeight": {
          "description": "Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp",
          "type": "string"
        },
        "textStyle": {
          "description": "Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp",
          "type": "string"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "fontSize": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize",
          "description": "Font size."
        },
        "backgroundColor": {
          "description": "Text background color.",
          "$ref": "GoogleTypeColor"
        },
        "textDecoration": {
          "type": "string",
          "description": "Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp"
        },
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyle",
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell",
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "rowSpan": {
          "description": "How many rows this cell spans.",
          "type": "integer",
          "format": "int32"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for TableCell."
        },
        "colSpan": {
          "type": "integer",
          "format": "int32",
          "description": "How many columns this cell spans."
        }
      },
      "description": "A cell representation inside the table.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageMatrix": {
      "properties": {
        "rows": {
          "description": "Number of rows in the matrix.",
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "The matrix data."
        },
        "cols": {
          "format": "int32",
          "type": "integer",
          "description": "Number of columns in the matrix."
        },
        "type": {
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentStyle": {
      "type": "object",
      "properties": {
        "backgroundColor": {
          "description": "Text background color.",
          "$ref": "GoogleTypeColor"
        },
        "textDecoration": {
          "type": "string",
          "description": "Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp"
        },
        "textStyle": {
          "description": "Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp",
          "type": "string"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "fontWeight": {
          "description": "Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp",
          "type": "string"
        },
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        },
        "fontSize": {
          "description": "Font size.",
          "$ref": "GoogleCloudDocumentaiV1DocumentStyleFontSize"
        }
      },
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "id": "GoogleCloudDocumentaiV1DocumentStyle"
    },
    "GoogleCloudDocumentaiV1ProcessResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1ProcessResponse",
      "description": "Response message for the process document method.",
      "properties": {
        "humanReviewStatus": {
          "description": "The status of human review on the processed document.",
          "$ref": "GoogleCloudDocumentaiV1HumanReviewStatus"
        },
        "document": {
          "description": "The document payload, will populate fields based on the processor's behavior.",
          "$ref": "GoogleCloudDocumentaiV1Document"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessResponse": {
      "properties": {},
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessResponse",
      "type": "object",
      "description": "Response message for batch process document method."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageParagraph": {
      "properties": {
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "description": "Layout for Paragraph.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        }
      },
      "type": "object",
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph"
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse": {
      "type": "object",
      "description": "Response message for review document method.",
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse",
      "properties": {
        "gcsDestination": {
          "description": "The Cloud Storage uri for the human reviewed document.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyle": {
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyle",
      "type": "object",
      "properties": {
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "fontSize": {
          "description": "Font size.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize"
        },
        "textStyle": {
          "type": "string",
          "description": "Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp"
        },
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        },
        "backgroundColor": {
          "description": "Text background color.",
          "$ref": "GoogleTypeColor"
        },
        "fontWeight": {
          "description": "Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp",
          "type": "string"
        },
        "textDecoration": {
          "description": "Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1OutputConfig": {
      "id": "GoogleCloudDocumentaiV1beta1OutputConfig",
      "type": "object",
      "properties": {
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output to.",
          "$ref": "GoogleCloudDocumentaiV1beta1GcsDestination"
        },
        "pagesPerShard": {
          "type": "integer",
          "format": "int32",
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json"
        }
      },
      "description": "The desired output location and metadata."
    },
    "GoogleCloudDocumentaiV1GcsDocument": {
      "type": "object",
      "description": "Specifies a document stored on Cloud Storage.",
      "id": "GoogleCloudDocumentaiV1GcsDocument",
      "properties": {
        "gcsUri": {
          "type": "string",
          "description": "The Cloud Storage object uri."
        },
        "mimeType": {
          "description": "An IANA MIME type (RFC6838) of the content.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "description": "The long running operation metadata for disable processor method.",
      "type": "object"
    },
    "GoogleTypePostalAddress": {
      "description": "Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an i18n-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478",
      "id": "GoogleTypePostalAddress",
      "properties": {
        "administrativeArea": {
          "type": "string",
          "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated."
        },
        "regionCode": {
          "type": "string",
          "description": "Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland."
        },
        "languageCode": {
          "type": "string",
          "description": "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\"."
        },
        "locality": {
          "type": "string",
          "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines."
        },
        "postalCode": {
          "description": "Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).",
          "type": "string"
        },
        "recipients": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information."
        },
        "revision": {
          "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.",
          "format": "int32",
          "type": "integer"
        },
        "addressLines": {
          "description": "Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sublocality": {
          "type": "string",
          "description": "Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts."
        },
        "sortingCode": {
          "type": "string",
          "description": "Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire)."
        },
        "organization": {
          "type": "string",
          "description": "Optional. The name of the organization at the address."
        }
      },
      "type": "object"
    },
    "GoogleTypeTimeZone": {
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "id": "GoogleTypeTimeZone",
      "type": "object",
      "properties": {
        "version": {
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
          "type": "string"
        },
        "id": {
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\".",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1GcsDestination": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1GcsDestination",
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "properties": {
        "uri": {
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef",
      "type": "object",
      "description": "Represents a weak reference to a page element within a document.",
      "properties": {
        "page": {
          "description": "Required. Index into the Document.pages element, for example using Document.pages to locate the related page element. This field is skipped when its value is the default 0. See https://developers.google.com/protocol-buffers/docs/proto3#json.",
          "format": "int64",
          "type": "string"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Optional. Confidence of detected page element, if applicable. Range [0, 1]."
        },
        "layoutType": {
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ],
          "type": "string",
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "description": "Optional. The type of the layout element that is being referenced if any."
        },
        "boundingPoly": {
          "description": "Optional. Identifies the bounding polygon of a layout element on the page.",
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly"
        },
        "layoutId": {
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageMatrix": {
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.",
      "properties": {
        "type": {
          "type": "integer",
          "format": "int32",
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html"
        },
        "rows": {
          "type": "integer",
          "format": "int32",
          "description": "Number of rows in the matrix."
        },
        "data": {
          "format": "byte",
          "type": "string",
          "description": "The matrix data."
        },
        "cols": {
          "format": "int32",
          "description": "Number of columns in the matrix.",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix"
    },
    "GoogleCloudDocumentaiV1DocumentPageDimension": {
      "id": "GoogleCloudDocumentaiV1DocumentPageDimension",
      "description": "Dimension for the page.",
      "properties": {
        "unit": {
          "type": "string",
          "description": "Dimension unit."
        },
        "height": {
          "type": "number",
          "format": "float",
          "description": "Page height."
        },
        "width": {
          "description": "Page width.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1GcsSource": {
      "type": "object",
      "description": "The Google Cloud Storage location where the input file will be read from.",
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1GcsSource"
    },
    "GoogleCloudDocumentaiV1beta2DocumentShardInfo": {
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
      "properties": {
        "textOffset": {
          "type": "string",
          "format": "int64",
          "description": "The index of the first character in Document.text in the overall document global text."
        },
        "shardIndex": {
          "type": "string",
          "description": "The 0-based index of this shard.",
          "format": "int64"
        },
        "shardCount": {
          "type": "string",
          "description": "Total number of shards.",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadata": {
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed.",
          "type": "string"
        },
        "individualProcessStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus"
          },
          "description": "The list of response details of each document.",
          "type": "array"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time of the operation."
        },
        "state": {
          "description": "The state of the current batch processing.",
          "type": "string",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ]
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The creation time of the operation."
        }
      },
      "description": "The long running operation metadata for batch process method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadata"
    },
    "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview",
      "type": "object",
      "description": "Human Review information of the document.",
      "properties": {
        "state": {
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`.",
          "type": "string"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus": {
      "properties": {
        "outputGcsDestination": {
          "type": "string",
          "description": "The output_gcs_destination (in the request as 'output_gcs_destination') of the processed document if it was successful, otherwise empty."
        },
        "inputGcsSource": {
          "type": "string",
          "description": "The source of the document, same as the [input_gcs_source] field in the request when the batch process started. The batch process is started by take snapshot of that document, since a user can move or change that document during the process."
        },
        "humanReviewOperation": {
          "type": "string",
          "description": "The name of the operation triggered by the processed document. If the human review process is not triggered, this field will be empty. It has the same response type and metadata as the long running operation returned by ReviewDocument method."
        },
        "humanReviewStatus": {
          "description": "The status of human review on the processed document.",
          "$ref": "GoogleCloudDocumentaiV1beta3HumanReviewStatus"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of the processing of the document."
        }
      },
      "description": "The status of a each individual document in the batch process.",
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3DisableProcessorResponse": {
      "properties": {},
      "id": "GoogleCloudDocumentaiV1beta3DisableProcessorResponse",
      "type": "object",
      "description": "Response message for the disable processor method. Intentionally empty proto for adding fields in future."
    },
    "GoogleCloudDocumentaiV1beta2DocumentLabel": {
      "type": "object",
      "properties": {
        "automlModel": {
          "type": "string",
          "description": "Label is generated AutoML model. This field stores the full resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`"
        },
        "confidence": {
          "format": "float",
          "description": "Confidence score between 0 and 1 for label assignment.",
          "type": "number"
        },
        "name": {
          "type": "string",
          "description": "Name of the label. When the label is generated from AutoML Text Classification model, this field represents the name of the category."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentLabel",
      "description": "Label attaches schema information and/or other metadata to segments within a Document. Multiple Labels on a single field can denote either different labels, different instances of the same label created at different times, or some combination of both."
    },
    "GoogleCloudDocumentaiV1DocumentPageMatrix": {
      "type": "object",
      "properties": {
        "cols": {
          "type": "integer",
          "description": "Number of columns in the matrix.",
          "format": "int32"
        },
        "rows": {
          "description": "Number of rows in the matrix.",
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "format": "byte",
          "type": "string",
          "description": "The matrix data."
        },
        "type": {
          "type": "integer",
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "format": "int32"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageMatrix",
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation."
    },
    "GoogleCloudDocumentaiV1DocumentPageTable": {
      "id": "GoogleCloudDocumentaiV1DocumentPageTable",
      "type": "object",
      "description": "A table representation similar to HTML table structure.",
      "properties": {
        "bodyRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableRow"
          },
          "description": "Body rows of the table.",
          "type": "array"
        },
        "layout": {
          "description": "Layout for Table.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "headerRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableRow"
          },
          "type": "array",
          "description": "Header rows of the table."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentShardInfo": {
      "properties": {
        "shardCount": {
          "type": "string",
          "description": "Total number of shards.",
          "format": "int64"
        },
        "shardIndex": {
          "format": "int64",
          "description": "The 0-based index of this shard.",
          "type": "string"
        },
        "textOffset": {
          "description": "The index of the first character in Document.text in the overall document global text.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentShardInfo",
      "type": "object",
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is."
    },
    "GoogleCloudDocumentaiV1beta3HumanReviewStatus": {
      "properties": {
        "humanReviewOperation": {
          "type": "string",
          "description": "The name of the operation triggered by the processed document. This field is populated only when the [state] is [HUMAN_REVIEW_IN_PROGRESS]. It has the same response type and metadata as the long running operation returned by [ReviewDocument] method."
        },
        "state": {
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review is not enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the [state_message] for details."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ],
          "description": "The state of human review on the processing request."
        },
        "stateMessage": {
          "description": "A message providing more details about the human review state.",
          "type": "string"
        }
      },
      "description": "The status of human review on a processed document.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3HumanReviewStatus"
    },
    "GoogleCloudDocumentaiV1DocumentPageBlock": {
      "id": "GoogleCloudDocumentaiV1DocumentPageBlock",
      "properties": {
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "layout": {
          "description": "Layout for Block.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        }
      },
      "type": "object",
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation."
    },
    "GoogleCloudDocumentaiV1beta1Vertex": {
      "id": "GoogleCloudDocumentaiV1beta1Vertex",
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "type": "object",
      "properties": {
        "x": {
          "description": "X coordinate.",
          "type": "integer",
          "format": "int32"
        },
        "y": {
          "type": "integer",
          "format": "int32",
          "description": "Y coordinate (starts from the top of the image)."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPage": {
      "description": "A page in a Document.",
      "properties": {
        "provenance": {
          "description": "The history of this page.",
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance"
        },
        "formFields": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageFormField"
          },
          "type": "array",
          "description": "A list of visually detected form fields on the page."
        },
        "tables": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTable"
          },
          "type": "array",
          "description": "A list of visually detected tables on the page."
        },
        "blocks": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageBlock"
          },
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "type": "array"
        },
        "pageNumber": {
          "type": "integer",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.",
          "format": "int32"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "visualElements": {
          "type": "array",
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageVisualElement"
          }
        },
        "image": {
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageImage"
        },
        "layout": {
          "description": "Layout for the page.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        },
        "paragraphs": {
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageParagraph"
          }
        },
        "dimension": {
          "description": "Physical dimension of the page.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageDimension"
        },
        "tokens": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageToken"
          },
          "description": "A list of visually detected tokens on the page.",
          "type": "array"
        },
        "lines": {
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageLine"
          },
          "type": "array"
        },
        "transforms": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageMatrix"
          },
          "description": "Transformation matrices that were applied to the original document image to produce Page.image."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPage"
    },
    "GoogleCloudDocumentaiV1GcsDocuments": {
      "id": "GoogleCloudDocumentaiV1GcsDocuments",
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1GcsDocument"
          },
          "description": "The list of documents."
        }
      },
      "description": "Specifies a set of documents on Cloud Storage."
    },
    "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata": {
      "description": "The long running operation metadata for disable processor method.",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta3DisableProcessorMetadata"
    },
    "GoogleCloudDocumentaiV1beta1NormalizedVertex": {
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "id": "GoogleCloudDocumentaiV1beta1NormalizedVertex",
      "type": "object",
      "properties": {
        "y": {
          "format": "float",
          "description": "Y coordinate (starts from the top of the image).",
          "type": "number"
        },
        "x": {
          "type": "number",
          "description": "X coordinate.",
          "format": "float"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig": {
      "description": "The configuration used when outputting documents.",
      "properties": {
        "gcsUri": {
          "description": "The Cloud Storage uri (a directory) of the output.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig"
    },
    "GoogleLongrunningOperation": {
      "id": "GoogleLongrunningOperation",
      "type": "object",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "GoogleCloudDocumentaiV1beta2DocumentRevision": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevision",
      "type": "object",
      "properties": {
        "humanReview": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview",
          "description": "Human Review information of this revision."
        },
        "id": {
          "type": "string",
          "description": "Id of the revision. Unique within the context of the document."
        },
        "processor": {
          "type": "string",
          "description": "If the annotation was made by processor identify the processor by its resource name."
        },
        "agent": {
          "description": "If the change was made by a person specify the name or id of that person.",
          "type": "string"
        },
        "createTime": {
          "description": "The time that the revision was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "parent": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array",
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field."
        }
      },
      "description": "Contains past or forward revisions of this document."
    },
    "GoogleCloudDocumentaiV1DocumentEntity": {
      "properties": {
        "type": {
          "description": "Entity type from a schema e.g. `Address`.",
          "type": "string"
        },
        "normalizedValue": {
          "$ref": "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue",
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types."
        },
        "mentionId": {
          "type": "string",
          "description": "Optional. Deprecated. Use `id` field instead."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "Optional. The history of this annotation."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor",
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text."
        },
        "confidence": {
          "type": "number",
          "description": "Optional. Confidence of detected Schema entity. Range [0, 1].",
          "format": "float"
        },
        "mentionText": {
          "type": "string",
          "description": "Optional. Text value in the document e.g. `1600 Amphitheatre Pkwy`."
        },
        "properties": {
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentEntity"
          }
        },
        "pageAnchor": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageAnchor",
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found."
        },
        "id": {
          "type": "string",
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document."
        },
        "redacted": {
          "type": "boolean",
          "description": "Optional. Whether the entity will be redacted for de-identification purposes."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentEntity",
      "type": "object",
      "description": "A phrase in the text that is a known entity type, such as a person, an organization, or location."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTable": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTable",
      "description": "A table representation similar to HTML table structure.",
      "type": "object",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Table."
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "headerRows": {
          "description": "Header rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "type": "array"
        },
        "bodyRows": {
          "description": "Body rows of the table.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          }
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse": {
      "properties": {},
      "description": "Response message for the disable processor method. Intentionally empty proto for adding fields in future.",
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1BoundingPoly": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1BoundingPoly",
      "description": "A bounding polygon for the detected image annotation.",
      "properties": {
        "normalizedVertices": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1NormalizedVertex"
          },
          "description": "The bounding polygon normalized vertices.",
          "type": "array"
        },
        "vertices": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1Vertex"
          },
          "description": "The bounding polygon vertices."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2OperationMetadata": {
      "properties": {
        "state": {
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "description": "The state of the current batch processing.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ],
          "type": "string"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "updateTime": {
          "description": "The last update time of the operation.",
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The creation time of the operation.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2OperationMetadata",
      "type": "object",
      "description": "Contains metadata for the BatchProcessDocuments operation."
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntity": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntity",
      "type": "object",
      "properties": {
        "redacted": {
          "description": "Optional. Whether the entity will be redacted for de-identification purposes.",
          "type": "boolean"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "Optional. The history of this annotation."
        },
        "normalizedValue": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue",
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types."
        },
        "id": {
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document.",
          "type": "string"
        },
        "confidence": {
          "format": "float",
          "description": "Optional. Confidence of detected Schema entity. Range [0, 1].",
          "type": "number"
        },
        "mentionId": {
          "description": "Optional. Deprecated. Use `id` field instead.",
          "type": "string"
        },
        "properties": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          },
          "type": "array",
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document."
        },
        "type": {
          "description": "Entity type from a schema e.g. `Address`.",
          "type": "string"
        },
        "pageAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor",
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found."
        },
        "mentionText": {
          "description": "Optional. Text value in the document e.g. `1600 Amphitheatre Pkwy`.",
          "type": "string"
        },
        "textAnchor": {
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        }
      },
      "description": "A phrase in the text that is a known entity type, such as a person, an organization, or location."
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchor": {
      "description": "Text reference indexing into the Document.text.",
      "properties": {
        "content": {
          "type": "string",
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments."
        },
        "textSegments": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment"
          },
          "type": "array",
          "description": "The text segments from the Document.text."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage": {
      "description": "Detected language for a structural component.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage",
      "type": "object",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Confidence of detected language. Range [0, 1]."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImage": {
      "properties": {
        "height": {
          "format": "int32",
          "type": "integer",
          "description": "Height of the image in pixels."
        },
        "mimeType": {
          "description": "Encoding mime type for the image.",
          "type": "string"
        },
        "content": {
          "type": "string",
          "description": "Raw byte content of the image.",
          "format": "byte"
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Width of the image in pixels."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImage",
      "type": "object",
      "description": "Rendered image contents for this page."
    },
    "GoogleCloudDocumentaiV1DocumentPageAnchor": {
      "id": "GoogleCloudDocumentaiV1DocumentPageAnchor",
      "type": "object",
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.",
      "properties": {
        "pageRefs": {
          "description": "One or more references to visual page elements",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDimension": {
      "properties": {
        "height": {
          "description": "Page height.",
          "format": "float",
          "type": "number"
        },
        "width": {
          "description": "Page width.",
          "type": "number",
          "format": "float"
        },
        "unit": {
          "type": "string",
          "description": "Dimension unit."
        }
      },
      "description": "Dimension for the page.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDimension"
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextChange": {
      "properties": {
        "textAnchor": {
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
        },
        "provenance": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
          },
          "description": "The history of this annotation."
        },
        "changedText": {
          "type": "string",
          "description": "The text that replaces the text identified in the `text_anchor`."
        }
      },
      "description": "This message is used for text changes aka. OCR corrections.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextChange"
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse": {
      "description": "The response for the TrainProcessorVersion method.",
      "properties": {
        "processorVersion": {
          "type": "string",
          "description": "The resource name of the processor version produced by training."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse",
      "type": "object"
    },
    "GoogleCloudLocationListLocationsResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudLocationLocation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "GoogleCloudLocationListLocationsResponse",
      "description": "The response message for Locations.ListLocations."
    },
    "GoogleCloudDocumentaiV1DocumentRevisionHumanReview": {
      "type": "object",
      "description": "Human Review information of the document.",
      "id": "GoogleCloudDocumentaiV1DocumentRevisionHumanReview",
      "properties": {
        "state": {
          "type": "string",
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`."
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentOutputConfig": {
      "id": "GoogleCloudDocumentaiV1DocumentOutputConfig",
      "description": "Config that controls the output of documents. All documents will be written as a JSON file.",
      "properties": {
        "gcsOutputConfig": {
          "$ref": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig",
          "description": "Output config to write the results to Cloud Storage."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImage": {
      "description": "Rendered image contents for this page.",
      "properties": {
        "mimeType": {
          "type": "string",
          "description": "Encoding mime type for the image."
        },
        "content": {
          "type": "string",
          "description": "Raw byte content of the image.",
          "format": "byte"
        },
        "width": {
          "format": "int32",
          "description": "Width of the image in pixels.",
          "type": "integer"
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Height of the image in pixels."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImage"
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata": {
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "description": "The long running operation metadata for updating the human review configuration.",
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata"
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata": {
      "description": "Metadata of the EvaluateProcessorVersion method.",
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment": {
      "properties": {
        "endIndex": {
          "description": "TextSegment half open end UTF-8 char index in the Document.text.",
          "format": "int64",
          "type": "string"
        },
        "startIndex": {
          "type": "string",
          "format": "int64",
          "description": "TextSegment start UTF-8 char index in the Document.text."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment",
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse": {
      "properties": {
        "outputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta2OutputConfig",
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects."
        },
        "inputConfig": {
          "description": "Information about the input file. This is the same as the corresponding input config in the request.",
          "$ref": "GoogleCloudDocumentaiV1beta2InputConfig"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse",
      "type": "object",
      "description": "Response to a single document processing request."
    },
    "GoogleCloudDocumentaiV1DocumentProvenance": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "description": "The Id of this operation. Needs to be unique within the scope of the revision."
        },
        "parents": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentProvenanceParent"
          },
          "description": "References to the original elements that are replaced."
        },
        "type": {
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ],
          "enumDescriptions": [
            "Operation type unspecified.",
            "Add an element. Implicit if no `parents` are set for the provenance.",
            "The element is removed. No `parents` should be set.",
            "Explicitly replaces the element(s) identified by `parents`.",
            "Element is requested for human review.",
            "Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Element is skipped in the validation process."
          ],
          "type": "string",
          "description": "The type of provenance operation."
        },
        "revision": {
          "type": "integer",
          "description": "The index of the revision that produced this element.",
          "format": "int32"
        }
      },
      "description": "Structure to identify provenance relationships between annotations in different revisions.",
      "id": "GoogleCloudDocumentaiV1DocumentProvenance"
    },
    "GoogleCloudDocumentaiV1DocumentShardInfo": {
      "properties": {
        "shardCount": {
          "description": "Total number of shards.",
          "type": "string",
          "format": "int64"
        },
        "textOffset": {
          "type": "string",
          "format": "int64",
          "description": "The index of the first character in Document.text in the overall document global text."
        },
        "shardIndex": {
          "description": "The 0-based index of this shard.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentShardInfo",
      "type": "object",
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is."
    },
    "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata",
      "description": "The long running operation metadata for review document method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse",
      "description": "Response message for the deploy processor version method.",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1DocumentPageTableTableRow": {
      "properties": {
        "cells": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableCell"
          },
          "description": "Cells that make up this row."
        }
      },
      "type": "object",
      "description": "A row of table cells.",
      "id": "GoogleCloudDocumentaiV1DocumentPageTableTableRow"
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadata": {
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The creation time of the operation."
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "description": "The state of the current batch processing."
        },
        "individualProcessStatuses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus"
          },
          "type": "array",
          "description": "The list of response details of each document."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last update time of the operation."
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed.",
          "type": "string"
        }
      },
      "description": "The long running operation metadata for batch process method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadata"
    },
    "GoogleCloudDocumentaiV1BatchProcessResponse": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1BatchProcessResponse",
      "description": "Response message for batch process document method.",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2BoundingPoly": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2BoundingPoly",
      "description": "A bounding polygon for the detected image annotation.",
      "properties": {
        "vertices": {
          "description": "The bounding polygon vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2Vertex"
          }
        },
        "normalizedVertices": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2NormalizedVertex"
          },
          "type": "array",
          "description": "The bounding polygon normalized vertices."
        }
      }
    },
    "GoogleLongrunningListOperationsResponse": {
      "type": "object",
      "id": "GoogleLongrunningListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "GoogleTypeDate": {
      "properties": {
        "month": {
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "format": "int32"
        },
        "year": {
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "format": "int32",
          "type": "integer"
        },
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "GoogleTypeDate",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`."
    },
    "GoogleCloudDocumentaiV1DocumentPageFormField": {
      "id": "GoogleCloudDocumentaiV1DocumentPageFormField",
      "type": "object",
      "properties": {
        "nameDetectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for name together with confidence."
        },
        "valueDetectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for value together with confidence.",
          "type": "array"
        },
        "valueType": {
          "type": "string",
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the field_value is normal text) - \"unfilled_checkbox\" - \"filled_checkbox\""
        },
        "fieldValue": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for the FormField value."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "The history of this annotation."
        },
        "fieldName": {
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        }
      },
      "description": "A form field detected on the page."
    },
    "GoogleCloudDocumentaiV1DocumentPageVisualElement": {
      "id": "GoogleCloudDocumentaiV1DocumentPageVisualElement",
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        },
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        },
        "type": {
          "type": "string",
          "description": "Type of the VisualElement."
        }
      },
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page."
    },
    "GoogleRpcStatus": {
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "GoogleRpcStatus"
    },
    "GoogleCloudDocumentaiV1RawDocument": {
      "id": "GoogleCloudDocumentaiV1RawDocument",
      "description": "Payload message of raw document content (bytes).",
      "properties": {
        "content": {
          "format": "byte",
          "description": "Inline document content.",
          "type": "string"
        },
        "mimeType": {
          "type": "string",
          "description": "An IANA MIME type (RFC6838) indicating the nature and format of the [content]."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata",
      "description": "The long running operation metadata for the undeploy processor version method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement",
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "type": {
          "description": "Type of the VisualElement.",
          "type": "string"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for VisualElement."
        }
      },
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page."
    },
    "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata": {
      "description": "The common metadata for long running operations.",
      "id": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
      "type": "object",
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "state": {
          "description": "The state of the operation.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ]
        },
        "createTime": {
          "description": "The creation time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last update time of the operation."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3ExportProcessorVersionMetadata",
      "type": "object",
      "description": "Metadata message associated with the ExportProcessorVersion operation.",
      "properties": {
        "commonMetadata": {
          "description": "The common metadata about the operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1ReviewDocumentRequest": {
      "id": "GoogleCloudDocumentaiV1ReviewDocumentRequest",
      "properties": {
        "priority": {
          "enum": [
            "DEFAULT",
            "URGENT"
          ],
          "description": "The priority of the human review task.",
          "enumDescriptions": [
            "The default priority level.",
            "The urgent priority level. The labeling manager should allocate labeler resource to the urgent task queue to respect this priority level."
          ],
          "type": "string"
        },
        "enableSchemaValidation": {
          "type": "boolean",
          "description": "Whether the validation should be performed on the ad-hoc review request."
        },
        "inlineDocument": {
          "$ref": "GoogleCloudDocumentaiV1Document",
          "description": "An inline document proto."
        }
      },
      "description": "Request message for review document method. Next Id: 6.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize": {
      "description": "Font size with unit.",
      "properties": {
        "size": {
          "format": "float",
          "type": "number",
          "description": "Font size for the text."
        },
        "unit": {
          "type": "string",
          "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.)."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3EnableProcessorResponse": {
      "description": "Response message for the enable processor method. Intentionally empty proto for adding fields in future.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1beta3EnableProcessorResponse"
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenance": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
      "description": "Structure to identify provenance relationships between annotations in different revisions.",
      "properties": {
        "revision": {
          "description": "The index of the revision that produced this element.",
          "format": "int32",
          "type": "integer"
        },
        "parents": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent"
          },
          "description": "References to the original elements that are replaced."
        },
        "id": {
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "The type of provenance operation.",
          "type": "string",
          "enumDescriptions": [
            "Operation type unspecified.",
            "Add an element. Implicit if no `parents` are set for the provenance.",
            "The element is removed. No `parents` should be set.",
            "Explicitly replaces the element(s) identified by `parents`.",
            "Element is requested for human review.",
            "Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Element is skipped in the validation process."
          ],
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ]
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3DeleteProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "type": "object",
      "description": "The long running operation metadata for delete processor method."
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus": {
      "properties": {
        "inputGcsSource": {
          "type": "string",
          "description": "The source of the document, same as the [input_gcs_source] field in the request when the batch process started. The batch process is started by take snapshot of that document, since a user can move or change that document during the process."
        },
        "humanReviewStatus": {
          "description": "The status of human review on the processed document.",
          "$ref": "GoogleCloudDocumentaiV1HumanReviewStatus"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of the processing of the document."
        },
        "outputGcsDestination": {
          "type": "string",
          "description": "The output_gcs_destination (in the request as 'output_gcs_destination') of the processed document if it was successful, otherwise empty."
        }
      },
      "description": "The status of a each individual document in the batch process.",
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextChange": {
      "description": "This message is used for text changes aka. OCR corrections.",
      "properties": {
        "textAnchor": {
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        },
        "provenance": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
          },
          "description": "The history of this annotation.",
          "type": "array"
        },
        "changedText": {
          "type": "string",
          "description": "The text that replaces the text identified in the `text_anchor`."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextChange",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse": {
      "properties": {},
      "description": "Response message for the enable processor method. Intentionally empty proto for adding fields in future.",
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse",
      "type": "object"
    },
    "GoogleCloudLocationLocation": {
      "type": "object",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        }
      },
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "GoogleCloudLocationLocation"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLayout": {
      "properties": {
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
        },
        "orientation": {
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ],
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "description": "Detected orientation for the Layout.",
          "type": "string"
        },
        "boundingPoly": {
          "description": "The bounding polygon for the Layout.",
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range [0, 1]."
        }
      },
      "description": "Visual element describing a layout unit on a page.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentProvenanceParent": {
      "description": "Structure for referencing parent provenances. When an element replaces one of more other elements parent references identify the elements that are replaced.",
      "id": "GoogleCloudDocumentaiV1DocumentProvenanceParent",
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the parent provenance.",
          "format": "int32",
          "type": "integer"
        },
        "revision": {
          "type": "integer",
          "description": "The index of the [Document.revisions] identifying the parent revision.",
          "format": "int32"
        },
        "index": {
          "format": "int32",
          "type": "integer",
          "description": "The index of the parent revisions corresponding collection of items (eg. list of entities, properties within entities, etc.)"
        }
      }
    },
    "GoogleCloudDocumentaiV1Vertex": {
      "id": "GoogleCloudDocumentaiV1Vertex",
      "type": "object",
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "properties": {
        "y": {
          "format": "int32",
          "description": "Y coordinate (starts from the top of the image).",
          "type": "integer"
        },
        "x": {
          "type": "integer",
          "description": "X coordinate.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiV1Document": {
      "id": "GoogleCloudDocumentaiV1Document",
      "properties": {
        "content": {
          "type": "string",
          "format": "byte",
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64."
        },
        "mimeType": {
          "type": "string",
          "description": "An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml."
        },
        "entityRelations": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentEntityRelation"
          },
          "description": "Relationship among Document.entities.",
          "type": "array"
        },
        "error": {
          "description": "Any error that occurred while processing this document.",
          "$ref": "GoogleRpcStatus"
        },
        "textChanges": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentTextChange"
          },
          "description": "A list of text corrections made to [Document.text]. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other."
        },
        "revisions": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentRevision"
          },
          "description": "Revision history of this document."
        },
        "textStyles": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentStyle"
          },
          "type": "array",
          "description": "Styles for the Document.text."
        },
        "entities": {
          "type": "array",
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentEntity"
          }
        },
        "pages": {
          "description": "Visual page layout for the Document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPage"
          },
          "type": "array"
        },
        "shardInfo": {
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified.",
          "$ref": "GoogleCloudDocumentaiV1DocumentShardInfo"
        },
        "uri": {
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.",
          "type": "string"
        },
        "text": {
          "description": "Optional. UTF-8 encoded text in reading order from the document.",
          "type": "string"
        }
      },
      "description": "Document represents the canonical document resource in Document Understanding AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document Understanding AI to iterate and optimize for quality.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak": {
      "description": "Detected break at the end of a Token.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ],
          "type": "string",
          "description": "Detected break type.",
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2Vertex": {
      "id": "GoogleCloudDocumentaiV1beta2Vertex",
      "type": "object",
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "properties": {
        "x": {
          "type": "integer",
          "description": "X coordinate.",
          "format": "int32"
        },
        "y": {
          "description": "Y coordinate (starts from the top of the image).",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue": {
      "properties": {
        "addressValue": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto"
        },
        "text": {
          "type": "string",
          "description": "Required. Normalized entity value stored as a string. This field is populated for supported document type (e.g. Invoice). For some entity types, one of respective 'structured_value' fields may also be populated. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format."
        },
        "booleanValue": {
          "type": "boolean",
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes."
        },
        "datetimeValue": {
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto",
          "$ref": "GoogleTypeDateTime"
        },
        "dateValue": {
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto",
          "$ref": "GoogleTypeDate"
        },
        "moneyValue": {
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto",
          "$ref": "GoogleTypeMoney"
        }
      },
      "description": "Parsed and normalized entity value.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "description": "The long running operation metadata for CreateLabelerPool.",
      "id": "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentTextChange": {
      "properties": {
        "textAnchor": {
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index.",
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentProvenance"
          },
          "type": "array"
        },
        "changedText": {
          "type": "string",
          "description": "The text that replaces the text identified in the `text_anchor`."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentTextChange",
      "type": "object",
      "description": "This message is used for text changes aka. OCR corrections."
    },
    "GoogleCloudDocumentaiV1beta2Document": {
      "properties": {
        "entities": {
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          }
        },
        "text": {
          "type": "string",
          "description": "Optional. UTF-8 encoded text in reading order from the document."
        },
        "mimeType": {
          "description": "An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml.",
          "type": "string"
        },
        "revisions": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevision"
          },
          "type": "array",
          "description": "Revision history of this document."
        },
        "content": {
          "format": "byte",
          "type": "string",
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64."
        },
        "entityRelations": {
          "description": "Relationship among Document.entities.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation"
          }
        },
        "labels": {
          "description": "Labels for this document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentLabel"
          },
          "type": "array"
        },
        "pages": {
          "description": "Visual page layout for the Document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPage"
          }
        },
        "error": {
          "description": "Any error that occurred while processing this document.",
          "$ref": "GoogleRpcStatus"
        },
        "textStyles": {
          "type": "array",
          "description": "Styles for the Document.text.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyle"
          }
        },
        "shardInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified."
        },
        "textChanges": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextChange"
          },
          "type": "array",
          "description": "A list of text corrections made to [Document.text]. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other."
        },
        "uri": {
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2Document",
      "description": "Document represents the canonical document resource in Document Understanding AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document Understanding AI to iterate and optimize for quality."
    },
    "GoogleCloudDocumentaiV1beta2GcsDestination": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2GcsDestination",
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "properties": {
        "uri": {
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent": {
      "type": "object",
      "description": "Structure for referencing parent provenances. When an element replaces one of more other elements parent references identify the elements that are replaced.",
      "properties": {
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the [Document.revisions] identifying the parent revision."
        },
        "id": {
          "type": "integer",
          "description": "The id of the parent provenance.",
          "format": "int32"
        },
        "index": {
          "type": "integer",
          "description": "The index of the parent revisions corresponding collection of items (eg. list of entities, properties within entities, etc.)",
          "format": "int32"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement": {
      "type": "object",
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement",
      "properties": {
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "type": {
          "description": "Type of the VisualElement.",
          "type": "string"
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment": {
      "id": "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment",
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "properties": {
        "endIndex": {
          "format": "int64",
          "description": "TextSegment half open end UTF-8 char index in the Document.text.",
          "type": "string"
        },
        "startIndex": {
          "format": "int64",
          "type": "string",
          "description": "TextSegment start UTF-8 char index in the Document.text."
        }
      },
      "type": "object"
    }
  },
  "fullyEncodeReservedExpansion": true,
  "ownerName": "Google",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        }
      }
    }
  },
  "rootUrl": "https://documentai.googleapis.com/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "Document",
  "discoveryVersion": "v1",
  "batchPath": "batch",
  "parameters": {
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "default": "json"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    }
  },
  "baseUrl": "https://documentai.googleapis.com/",
  "revision": "20210728",
  "kind": "discovery#restDescription",
  "basePath": "",
  "resources": {
    "projects": {
      "resources": {
        "operations": {
          "methods": {
            "get": {
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "flatPath": "v1/projects/{projectsId}/operations/{operationsId}",
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "description": "The name of the operation resource.",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "id": "documentai.projects.operations.get",
              "parameterOrder": [
                "name"
              ]
            }
          }
        },
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "cancelOperation": {
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "id": "documentai.projects.locations.operations.cancelOperation",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                },
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "parameters": {
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations$",
                      "location": "path"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "The standard list page size."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    }
                  },
                  "id": "documentai.projects.locations.operations.list",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "path": "v1/{+name}"
                },
                "get": {
                  "id": "documentai.projects.locations.operations.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                }
              }
            },
            "processors": {
              "resources": {
                "processorVersions": {
                  "methods": {
                    "batchProcess": {
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "documentai.projects.locations.processors.processorVersions.batchProcess",
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1BatchProcessRequest"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. The resource name of Processor or ProcessorVersion. Format: projects/{project}/locations/{location}/processors/{processor}, or projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:batchProcess",
                      "httpMethod": "POST",
                      "path": "v1/{+name}:batchProcess",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "process": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:process",
                      "path": "v1/{+name}:process",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: projects/{project}/locations/{location}/processors/{processor}, or projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}",
                          "location": "path"
                        }
                      },
                      "description": "Processes a single document.",
                      "response": {
                        "$ref": "GoogleCloudDocumentaiV1ProcessResponse"
                      },
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1ProcessRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "documentai.projects.locations.processors.processorVersions.process",
                      "parameterOrder": [
                        "name"
                      ]
                    }
                  }
                },
                "humanReviewConfig": {
                  "methods": {
                    "reviewDocument": {
                      "parameterOrder": [
                        "humanReviewConfig"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/humanReviewConfig:reviewDocument",
                      "parameters": {
                        "humanReviewConfig": {
                          "required": true,
                          "description": "Required. The resource name of the HumanReviewConfig that the document will be reviewed with.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/humanReviewConfig$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "httpMethod": "POST",
                      "id": "documentai.projects.locations.processors.humanReviewConfig.reviewDocument",
                      "path": "v1/{+humanReviewConfig}:reviewDocument",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "description": "Send a document for Human Review. The input document should be processed by the specified processor.",
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1ReviewDocumentRequest"
                      }
                    }
                  }
                }
              },
              "methods": {
                "process": {
                  "description": "Processes a single document.",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: projects/{project}/locations/{location}/processors/{processor}, or projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "documentai.projects.locations.processors.process",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:process",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1ProcessRequest"
                  },
                  "path": "v1/{+name}:process",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1ProcessResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "batchProcess": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1BatchProcessRequest"
                  },
                  "httpMethod": "POST",
                  "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "description": "Required. The resource name of Processor or ProcessorVersion. Format: projects/{project}/locations/{location}/processors/{processor}, or projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "documentai.projects.locations.processors.batchProcess",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:batchProcess",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:batchProcess"
                }
              }
            }
          },
          "methods": {
            "list": {
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudLocationListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "documentai.projects.locations.list",
              "description": "Lists information about the supported locations for this service.",
              "parameters": {
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query"
                }
              },
              "path": "v1/{+name}/locations"
            },
            "get": {
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "description": "Resource name for the location."
                }
              },
              "id": "documentai.projects.locations.get",
              "description": "Gets information about a location.",
              "response": {
                "$ref": "GoogleCloudLocationLocation"
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}"
            }
          }
        }
      }
    },
    "uiv1beta3": {
      "resources": {
        "projects": {
          "resources": {
            "locations": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "GoogleCloudLocationListLocationsResponse"
                  },
                  "description": "Lists information about the supported locations for this service.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of results to return. If not set, the service selects a default."
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+$",
                      "description": "The resource that owns the locations collection, if applicable."
                    }
                  },
                  "id": "documentai.uiv1beta3.projects.locations.list",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "uiv1beta3/projects/{projectsId}/locations",
                  "path": "uiv1beta3/{+name}/locations",
                  "httpMethod": "GET"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Resource name for the location.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Gets information about a location.",
                  "path": "uiv1beta3/{+name}",
                  "flatPath": "uiv1beta3/projects/{projectsId}/locations/{locationsId}",
                  "id": "documentai.uiv1beta3.projects.locations.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudLocationLocation"
                  }
                }
              },
              "resources": {
                "operations": {
                  "methods": {
                    "cancelOperation": {
                      "id": "documentai.uiv1beta3.projects.locations.operations.cancelOperation",
                      "path": "uiv1beta3/{+name}",
                      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                          "required": true,
                          "description": "The name of the operation resource to be cancelled.",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "uiv1beta3/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                    },
                    "list": {
                      "flatPath": "uiv1beta3/projects/{projectsId}/locations/{locationsId}/operations",
                      "id": "documentai.uiv1beta3.projects.locations.operations.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningListOperationsResponse"
                      },
                      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                      "httpMethod": "GET",
                      "parameters": {
                        "pageSize": {
                          "description": "The standard list page size.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "pageToken": {
                          "description": "The standard list page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "location": "query",
                          "description": "The standard list filter.",
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the operation's parent resource.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/operations$",
                          "required": true
                        }
                      },
                      "path": "uiv1beta3/{+name}"
                    },
                    "get": {
                      "path": "uiv1beta3/{+name}",
                      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "id": "documentai.uiv1beta3.projects.locations.operations.get",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "The name of the operation resource.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "uiv1beta3/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "operations": {
      "methods": {
        "delete": {
          "httpMethod": "DELETE",
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "GoogleProtobufEmpty"
          },
          "path": "v1/{+name}",
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
          "parameters": {
            "name": {
              "required": true,
              "location": "path",
              "pattern": "^operations/.*$",
              "type": "string",
              "description": "The name of the operation resource to be deleted."
            }
          },
          "flatPath": "v1/operations/{operationsId}",
          "id": "documentai.operations.delete"
        }
      }
    }
  }
}

{
  "basePath": "",
  "documentationLink": "https://cloud.google.com/run/",
  "baseUrl": "https://run.googleapis.com/",
  "parameters": {
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query",
      "default": "true"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "$.xgafv": {
      "type": "string",
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "type": "string",
      "default": "json"
    }
  },
  "name": "run",
  "version": "v2",
  "rootUrl": "https://run.googleapis.com/",
  "id": "run:v2",
  "canonicalName": "Cloud Run",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "protocol": "rest",
  "ownerDomain": "google.com",
  "description": "Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https://google.aip.dev/.",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "version_module": true,
  "servicePath": "",
  "mtlsRootUrl": "https://run.mtls.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "ownerName": "Google",
  "revision": "20230129",
  "kind": "discovery#restDescription",
  "title": "Cloud Run Admin API",
  "discoveryVersion": "v1",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "jobs": {
              "methods": {
                "delete": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "run.projects.locations.jobs.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The full name of the Job. Format: projects/{project}/locations/{location}/jobs/{job}, where {project} can be project id or number.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Indicates that the request should be validated without actually deleting any resources."
                    },
                    "etag": {
                      "description": "A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "path": "v2/{+name}",
                  "httpMethod": "DELETE",
                  "description": "Deletes a Job.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "description": "Creates a Job.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/jobs",
                  "request": {
                    "$ref": "GoogleCloudRunV2Job"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "run.projects.locations.jobs.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/jobs",
                  "parameters": {
                    "jobId": {
                      "location": "query",
                      "description": "Required. The unique identifier for the Job. The name of the job becomes {parent}/jobs/{job_id}.",
                      "type": "string"
                    },
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Indicates that the request should be validated and default values populated, without persisting the request or creating any resources."
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The location and project in which this Job should be created. Format: projects/{project}/locations/{location}, where {project} can be project id or number.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "httpMethod": "POST"
                },
                "testIamPermissions": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "run.projects.locations.jobs.testIamPermissions",
                  "httpMethod": "POST",
                  "description": "Returns permissions that a caller has on the specified Project. There are no permissions required for making this API call.",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "path": "v2/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  }
                },
                "patch": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The fully qualified name of this Job. Format: projects/{project}/locations/{location}/jobs/{job}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$",
                      "type": "string"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Indicates that the request should be validated and default values populated, without persisting the request or updating any resources."
                    },
                    "allowMissing": {
                      "description": "If set to true, and if the Job does not exist, it will create a new one. Caller must have both create and update permissions for this call if this is set to true.",
                      "type": "boolean",
                      "location": "query"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}",
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a Job.",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "run.projects.locations.jobs.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudRunV2Job"
                  }
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudRunV2ListJobsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Jobs.",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "Maximum number of Jobs to return in this call.",
                      "format": "int32"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A page token received from a previous call to ListJobs. All other parameters must match."
                    },
                    "showDeleted": {
                      "type": "boolean",
                      "location": "query",
                      "description": "If true, returns deleted (but unexpired) resources along with active ones."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The location and project to list resources on. Format: projects/{project}/locations/{location}, where {project} can be project id or number."
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/jobs",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/jobs",
                  "id": "run.projects.locations.jobs.list"
                },
                "get": {
                  "description": "Gets information about a Job.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudRunV2Job"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The full name of the Job. Format: projects/{project}/locations/{location}/jobs/{job}, where {project} can be project id or number.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "run.projects.locations.jobs.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getIamPolicy": {
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "path": "v2/{+resource}:getIamPolicy",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "run.projects.locations.jobs.getIamPolicy",
                  "description": "Gets the IAM Access Control policy currently in effect for the given Job. This result does not include any inherited policies.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "location": "path"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  }
                },
                "setIamPolicy": {
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+resource}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}:setIamPolicy",
                  "id": "run.projects.locations.jobs.setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "description": "Sets the IAM Access control policy for the specified Job. Overwrites any existing policy."
                },
                "run": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "run.projects.locations.jobs.run",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The full name of the Job. Format: projects/{project}/locations/{location}/jobs/{job}, where {project} can be project id or number.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Triggers creation of a new Execution of this Job.",
                  "request": {
                    "$ref": "GoogleCloudRunV2RunJobRequest"
                  },
                  "path": "v2/{+name}:run",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}:run",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                }
              },
              "resources": {
                "executions": {
                  "resources": {
                    "tasks": {
                      "methods": {
                        "get": {
                          "path": "v2/{+name}",
                          "httpMethod": "GET",
                          "id": "run.projects.locations.jobs.executions.tasks.get",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "description": "Required. The full name of the Task. Format: projects/{project}/locations/{location}/jobs/{job}/executions/{execution}/tasks/{task}",
                              "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+/executions/[^/]+/tasks/[^/]+$"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "GoogleCloudRunV2Task"
                          },
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}/executions/{executionsId}/tasks/{tasksId}",
                          "description": "Gets information about a Task."
                        },
                        "list": {
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "GoogleCloudRunV2ListTasksResponse"
                          },
                          "path": "v2/{+parent}/tasks",
                          "description": "Lists Tasks from an Execution of a Job.",
                          "id": "run.projects.locations.jobs.executions.tasks.list",
                          "parameters": {
                            "parent": {
                              "required": true,
                              "description": "Required. The Execution from which the Tasks should be listed. To list all Tasks across Executions of a Job, use \"-\" instead of Execution name. To list all Tasks across Jobs, use \"-\" instead of Job name. Format: projects/{project}/locations/{location}/jobs/{job}/executions/{execution}",
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+/executions/[^/]+$"
                            },
                            "pageToken": {
                              "description": "A page token received from a previous call to ListTasks. All other parameters must match.",
                              "location": "query",
                              "type": "string"
                            },
                            "showDeleted": {
                              "type": "boolean",
                              "description": "If true, returns deleted (but unexpired) resources along with active ones.",
                              "location": "query"
                            },
                            "pageSize": {
                              "location": "query",
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of Tasks to return in this call."
                            }
                          },
                          "httpMethod": "GET",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}/executions/{executionsId}/tasks"
                        }
                      }
                    }
                  },
                  "methods": {
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}/executions/{executionsId}",
                      "path": "v2/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "etag": {
                          "location": "query",
                          "description": "A system-generated fingerprint for this version of the resource. This may be used to detect modification conflict during updates.",
                          "type": "string"
                        },
                        "validateOnly": {
                          "type": "boolean",
                          "location": "query",
                          "description": "Indicates that the request should be validated without actually deleting any resources."
                        },
                        "name": {
                          "description": "Required. The name of the Execution to delete. Format: projects/{project}/locations/{location}/jobs/{job}/executions/{execution}, where {project} can be project id or number.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+/executions/[^/]+$",
                          "location": "path"
                        }
                      },
                      "description": "Deletes an Execution.",
                      "id": "run.projects.locations.jobs.executions.delete",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "list": {
                      "httpMethod": "GET",
                      "path": "v2/{+parent}/executions",
                      "description": "Lists Executions from a Job.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}/executions",
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Maximum number of Executions to return in this call.",
                          "location": "query"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "A page token received from a previous call to ListExecutions. All other parameters must match.",
                          "location": "query"
                        },
                        "showDeleted": {
                          "type": "boolean",
                          "location": "query",
                          "description": "If true, returns deleted (but unexpired) resources along with active ones."
                        },
                        "parent": {
                          "description": "Required. The Execution from which the Executions should be listed. To list all Executions across Jobs, use \"-\" instead of Job name. Format: projects/{project}/locations/{location}/jobs/{job}, where {project} can be project id or number.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudRunV2ListExecutionsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "run.projects.locations.jobs.executions.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v2/{+name}",
                      "description": "Gets information about an Execution.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}/executions/{executionsId}",
                      "response": {
                        "$ref": "GoogleCloudRunV2Execution"
                      },
                      "id": "run.projects.locations.jobs.executions.get",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. The full name of the Execution. Format: projects/{project}/locations/{location}/jobs/{job}/executions/{execution}, where {project} can be project id or number.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+/executions/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              }
            },
            "services": {
              "methods": {
                "patch": {
                  "request": {
                    "$ref": "GoogleCloudRunV2Service"
                  },
                  "description": "Updates a Service.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "id": "run.projects.locations.services.patch",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/services/{servicesId}",
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "description": "The fully qualified name of this Service. In CreateServiceRequest, this field is ignored, and instead composed from CreateServiceRequest.parent and CreateServiceRequest.service_id. Format: projects/{project}/locations/{location}/services/{service_id}",
                      "required": true,
                      "location": "path"
                    },
                    "allowMissing": {
                      "type": "boolean",
                      "description": "If set to true, and if the Service does not exist, it will create a new one. Caller must have both create and update permissions for this call if this is set to true.",
                      "location": "query"
                    },
                    "validateOnly": {
                      "description": "Indicates that the request should be validated and default values populated, without persisting the request or updating any resources.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "delete": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/services/{servicesId}",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "description": "Deletes a Service. This will cause the Service to stop serving traffic and will delete all revisions.",
                  "parameters": {
                    "etag": {
                      "description": "A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "Required. The full name of the Service. Format: projects/{project}/locations/{location}/services/{service}, where {project} can be project id or number.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "validateOnly": {
                      "description": "Indicates that the request should be validated without actually deleting any resources.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "id": "run.projects.locations.services.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "list": {
                  "id": "run.projects.locations.services.list",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/services",
                  "response": {
                    "$ref": "GoogleCloudRunV2ListServicesResponse"
                  },
                  "path": "v2/{+parent}/services",
                  "description": "Lists Services.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A page token received from a previous call to ListServices. All other parameters must match."
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Maximum number of Services to return in this call."
                    },
                    "showDeleted": {
                      "type": "boolean",
                      "location": "query",
                      "description": "If true, returns deleted (but unexpired) resources along with active ones."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The location and project to list resources on. Location must be a valid Google Cloud region, and cannot be the \"-\" wildcard. Format: projects/{project}/locations/{location}, where {project} can be project id or number.",
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "description": "Gets information about a Service.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "description": "Required. The full name of the Service. Format: projects/{project}/locations/{location}/services/{service}, where {project} can be project id or number.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/services/{servicesId}",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "GoogleCloudRunV2Service"
                  },
                  "id": "run.projects.locations.services.get"
                },
                "testIamPermissions": {
                  "request": {
                    "$ref": "GoogleIamV1TestIamPermissionsRequest"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "id": "run.projects.locations.services.testIamPermissions",
                  "path": "v2/{+resource}:testIamPermissions",
                  "response": {
                    "$ref": "GoogleIamV1TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified Project. There are no permissions required for making this API call."
                },
                "getIamPolicy": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "run.projects.locations.services.getIamPolicy",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:getIamPolicy",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    },
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "description": "Gets the IAM Access Control policy currently in effect for the given Cloud Run Service. This result does not include any inherited policies.",
                  "path": "v2/{+resource}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "create": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "GoogleCloudRunV2Service"
                  },
                  "id": "run.projects.locations.services.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/services",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/services",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The location and project in which this service should be created. Format: projects/{project}/locations/{location}, where {project} can be project id or number. Only lowercase characters, digits, and hyphens.",
                      "required": true,
                      "location": "path"
                    },
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Indicates that the request should be validated and default values populated, without persisting the request or creating any resources."
                    },
                    "serviceId": {
                      "location": "query",
                      "description": "Required. The unique identifier for the Service. It must begin with letter, and cannot end with hyphen; must contain fewer than 50 characters. The name of the service becomes {parent}/services/{service_id}.",
                      "type": "string"
                    }
                  },
                  "description": "Creates a new Service in a given project and location."
                },
                "setIamPolicy": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleIamV1SetIamPolicyRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "GoogleIamV1Policy"
                  },
                  "description": "Sets the IAM Access control policy for the specified Service. Overwrites any existing policy.",
                  "id": "run.projects.locations.services.setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:setIamPolicy",
                  "path": "v2/{+resource}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "required": true
                    }
                  }
                }
              },
              "resources": {
                "revisions": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "GoogleCloudRunV2ListRevisionsResponse"
                      },
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "Maximum number of revisions to return in this call.",
                          "format": "int32"
                        },
                        "showDeleted": {
                          "description": "If true, returns deleted (but unexpired) resources along with active ones.",
                          "type": "boolean",
                          "location": "query"
                        },
                        "pageToken": {
                          "description": "A page token received from a previous call to ListRevisions. All other parameters must match.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. The Service from which the Revisions should be listed. To list all Revisions across Services, use \"-\" instead of Service name. Format: projects/{project}/locations/{location}/services/{service}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "description": "Lists Revisions from a given Service, or from a given location.",
                      "httpMethod": "GET",
                      "path": "v2/{+parent}/revisions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/services/{servicesId}/revisions",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "run.projects.locations.services.revisions.list"
                    },
                    "get": {
                      "description": "Gets information about a Revision.",
                      "path": "v2/{+name}",
                      "id": "run.projects.locations.services.revisions.get",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/services/{servicesId}/revisions/{revisionsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRunV2Revision"
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+/revisions/[^/]+$",
                          "description": "Required. The full name of the Revision. Format: projects/{project}/locations/{location}/services/{service}/revisions/{revision}"
                        }
                      }
                    },
                    "delete": {
                      "parameters": {
                        "etag": {
                          "description": "A system-generated fingerprint for this version of the resource. This may be used to detect modification conflict during updates.",
                          "type": "string",
                          "location": "query"
                        },
                        "name": {
                          "description": "Required. The name of the Revision to delete. Format: projects/{project}/locations/{location}/services/{service}/revisions/{revision}",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+/revisions/[^/]+$"
                        },
                        "validateOnly": {
                          "type": "boolean",
                          "description": "Indicates that the request should be validated without actually deleting any resources.",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v2/{+name}",
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "description": "Deletes a Revision.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/services/{servicesId}/revisions/{revisionsId}",
                      "id": "run.projects.locations.services.revisions.delete"
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "path": "v2/{+name}",
                  "id": "run.projects.locations.operations.delete",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the operation resource to be deleted.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path"
                    }
                  }
                },
                "wait": {
                  "path": "v2/{+name}:wait",
                  "id": "run.projects.locations.operations.wait",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:wait",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the operation resource to wait on.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleLongrunningWaitOperationRequest"
                  }
                },
                "list": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "id": "run.projects.locations.operations.list",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations",
                  "path": "v2/{+name}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of records that should be returned. Requested page size cannot exceed 100. If not set or set to less than or equal to 0, the default page size is 100. .",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "name": {
                      "description": "Required. To query for all of the operations for a project.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Optional. A filter for matching the completed or in-progress operations. The supported formats of *filter* are: To query for only completed operations: done:true To query for only ongoing operations: done:false Must be empty to query for all of the latest operations for the given parent project.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Token identifying which result to start with, which is returned by a previous list call."
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "httpMethod": "GET"
                },
                "get": {
                  "id": "run.projects.locations.operations.get",
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "schemas": {
    "GoogleCloudRunV2Revision": {
      "description": "A Revision is an immutable snapshot of code and configuration. A Revision references a container image. Revisions are only created by updates to its parent Service.",
      "properties": {
        "executionEnvironment": {
          "type": "string",
          "description": "The execution environment being used to host this Revision.",
          "enumDescriptions": [
            "Unspecified",
            "Uses the First Generation environment.",
            "Uses Second Generation environment."
          ],
          "enum": [
            "EXECUTION_ENVIRONMENT_UNSPECIFIED",
            "EXECUTION_ENVIRONMENT_GEN1",
            "EXECUTION_ENVIRONMENT_GEN2"
          ]
        },
        "reconciling": {
          "description": "Output only. Indicates whether the resource's reconciliation is still in progress. See comments in `Service.reconciling` for additional information on reconciliation process in Cloud Run.",
          "type": "boolean",
          "readOnly": true
        },
        "maxInstanceRequestConcurrency": {
          "format": "int32",
          "description": "Sets the maximum number of requests that each serving instance can receive.",
          "type": "integer"
        },
        "encryptionKey": {
          "description": "A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek",
          "type": "string"
        },
        "timeout": {
          "format": "google-duration",
          "type": "string",
          "description": "Max allowed time for an instance to respond to a request."
        },
        "name": {
          "description": "Output only. The unique name of this Revision.",
          "type": "string",
          "readOnly": true
        },
        "service": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the parent service."
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The last-modified time."
        },
        "generation": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. A number that monotonically increases every time the user modifies the desired state.",
          "format": "int64"
        },
        "containers": {
          "items": {
            "$ref": "GoogleCloudRunV2Container"
          },
          "description": "Holds the single container that defines the unit of execution for this Revision.",
          "type": "array"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "KRM-style labels for the resource. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels",
          "type": "object"
        },
        "expireTime": {
          "format": "google-datetime",
          "description": "Output only. For a deleted resource, the time after which it will be permamently deleted. It is only populated as a response to a Delete request.",
          "readOnly": true,
          "type": "string"
        },
        "uid": {
          "type": "string",
          "description": "Output only. Server assigned unique identifier for the Revision. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.",
          "readOnly": true
        },
        "encryptionKeyRevocationAction": {
          "enum": [
            "ENCRYPTION_KEY_REVOCATION_ACTION_UNSPECIFIED",
            "PREVENT_NEW",
            "SHUTDOWN"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified",
            "Prevents the creation of new instances.",
            "Shuts down existing instances, and prevents creation of new ones."
          ],
          "description": "The action to take if the encryption key is revoked."
        },
        "logUri": {
          "description": "Output only. The Google Console URI to obtain logs for the Revision.",
          "type": "string",
          "readOnly": true
        },
        "launchStage": {
          "enumDescriptions": [
            "Do not use this default value.",
            "The feature is not yet implemented. Users can not use it.",
            "Prelaunch features are hidden from users and are only visible internally.",
            "Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.",
            "Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don't have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.",
            "Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.",
            "GA features are open to all developers and are considered stable and fully qualified for production use.",
            "Deprecated features are scheduled to be shut down and removed. For more information, see the \"Deprecation Policy\" section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation."
          ],
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "UNIMPLEMENTED",
            "PRELAUNCH",
            "EARLY_ACCESS",
            "ALPHA",
            "BETA",
            "GA",
            "DEPRECATED"
          ],
          "description": "Set the launch stage to a preview stage on write to allow use of preview features in that stage. On read, describes whether the resource uses preview features. Launch Stages are defined at [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages).",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The creation time."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "KRM-style annotations for the resource."
        },
        "volumes": {
          "description": "A list of Volumes to make available to containers.",
          "items": {
            "$ref": "GoogleCloudRunV2Volume"
          },
          "type": "array"
        },
        "serviceAccount": {
          "description": "Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has.",
          "type": "string"
        },
        "encryptionKeyShutdownDuration": {
          "format": "google-duration",
          "type": "string",
          "description": "If encryption_key_revocation_action is SHUTDOWN, the duration before shutting down all instances. The minimum increment is 1 hour."
        },
        "deleteTime": {
          "format": "google-datetime",
          "description": "Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.",
          "type": "string",
          "readOnly": true
        },
        "vpcAccess": {
          "description": "VPC Access configuration for this Revision. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.",
          "$ref": "GoogleCloudRunV2VpcAccess"
        },
        "etag": {
          "type": "string",
          "description": "Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.",
          "readOnly": true
        },
        "observedGeneration": {
          "readOnly": true,
          "format": "int64",
          "description": "Output only. The generation of this Revision currently serving traffic. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.",
          "type": "string"
        },
        "scaling": {
          "description": "Scaling settings for this revision.",
          "$ref": "GoogleCloudRunV2RevisionScaling"
        },
        "conditions": {
          "description": "Output only. The Condition of this Revision, containing its readiness status, and detailed error information in case it did not reach a serving state.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudRunV2Condition"
          }
        }
      },
      "id": "GoogleCloudRunV2Revision",
      "type": "object"
    },
    "GoogleCloudRunV2Probe": {
      "id": "GoogleCloudRunV2Probe",
      "properties": {
        "httpGet": {
          "$ref": "GoogleCloudRunV2HTTPGetAction",
          "description": "HTTPGet specifies the http request to perform. Exactly one of httpGet, tcpSocket, or grpc must be specified."
        },
        "tcpSocket": {
          "$ref": "GoogleCloudRunV2TCPSocketAction",
          "description": "TCPSocket specifies an action involving a TCP port. Exactly one of httpGet, tcpSocket, or grpc must be specified."
        },
        "periodSeconds": {
          "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeout_seconds.",
          "format": "int32",
          "type": "integer"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than period_seconds. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        },
        "grpc": {
          "description": "GRPC specifies an action involving a gRPC port. Exactly one of httpGet, tcpSocket, or grpc must be specified.",
          "$ref": "GoogleCloudRunV2GRPCAction"
        },
        "initialDelaySeconds": {
          "format": "int32",
          "type": "integer",
          "description": "Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        },
        "failureThreshold": {
          "format": "int32",
          "type": "integer",
          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1."
        }
      },
      "type": "object",
      "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic."
    },
    "GoogleCloudRunV2ExecutionReference": {
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Creation timestamp of the execution."
        },
        "name": {
          "description": "Name of the execution.",
          "type": "string"
        },
        "completionTime": {
          "description": "Creation timestamp of the execution.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudRunV2ExecutionReference",
      "description": "Reference to an Execution. Use /Executions.GetExecution with the given name to get full execution including the latest status.",
      "type": "object"
    },
    "GoogleIamV1Binding": {
      "properties": {
        "members": {
          "items": {
            "type": "string"
          },
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "type": "array"
        },
        "condition": {
          "$ref": "GoogleTypeExpr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        }
      },
      "id": "GoogleIamV1Binding",
      "type": "object",
      "description": "Associates `members`, or principals, with a `role`."
    },
    "GoogleCloudRunV2Service": {
      "description": "Service acts as a top-level container that manages a set of configurations and revision templates which implement a network service. Service exists to provide a singular abstraction which can be access controlled, reasoned about, and which encapsulates software lifecycle decisions such as rollout policy and team resource ownership.",
      "id": "GoogleCloudRunV2Service",
      "type": "object",
      "properties": {
        "creator": {
          "description": "Output only. Email address of the authenticated creator.",
          "type": "string",
          "readOnly": true
        },
        "lastModifier": {
          "description": "Output only. Email address of the last authenticated modifier.",
          "type": "string",
          "readOnly": true
        },
        "clientVersion": {
          "type": "string",
          "description": "Arbitrary version identifier for the API client."
        },
        "client": {
          "type": "string",
          "description": "Arbitrary identifier for the API client."
        },
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system annotations in v1 now have a corresponding field in v2 Service. This field follows Kubernetes annotations' namespacing, limits, and rules. More info: https://kubernetes.io/docs/user-guide/annotations"
        },
        "ingress": {
          "type": "string",
          "enum": [
            "INGRESS_TRAFFIC_UNSPECIFIED",
            "INGRESS_TRAFFIC_ALL",
            "INGRESS_TRAFFIC_INTERNAL_ONLY",
            "INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER"
          ],
          "enumDescriptions": [
            "Unspecified",
            "All inbound traffic is allowed.",
            "Only internal traffic is allowed.",
            "Both internal and Google Cloud Load Balancer traffic is allowed."
          ],
          "description": "Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or INGRESS_TRAFFIC_UNSPECIFIED if no revision is active."
        },
        "conditions": {
          "description": "Output only. The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Service does not reach its Serving state. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.",
          "items": {
            "$ref": "GoogleCloudRunV2Condition"
          },
          "readOnly": true,
          "type": "array"
        },
        "deleteTime": {
          "format": "google-datetime",
          "description": "Output only. The deletion time.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The creation time.",
          "format": "google-datetime",
          "type": "string"
        },
        "observedGeneration": {
          "format": "int64",
          "type": "string",
          "description": "Output only. The generation of this Service currently serving traffic. See comments in `reconciling` for additional information on reconciliation process in Cloud Run. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a `string` instead of an `integer`.",
          "readOnly": true
        },
        "launchStage": {
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "UNIMPLEMENTED",
            "PRELAUNCH",
            "EARLY_ACCESS",
            "ALPHA",
            "BETA",
            "GA",
            "DEPRECATED"
          ],
          "description": "The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed.",
          "enumDescriptions": [
            "Do not use this default value.",
            "The feature is not yet implemented. Users can not use it.",
            "Prelaunch features are hidden from users and are only visible internally.",
            "Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.",
            "Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don't have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.",
            "Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.",
            "GA features are open to all developers and are considered stable and fully qualified for production use.",
            "Deprecated features are scheduled to be shut down and removed. For more information, see the \"Deprecation Policy\" section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation."
          ],
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.",
          "readOnly": true
        },
        "expireTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. For a deleted resource, the time after which it will be permamently deleted."
        },
        "traffic": {
          "items": {
            "$ref": "GoogleCloudRunV2TrafficTarget"
          },
          "type": "array",
          "description": "Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not provided, defaults to 100% traffic to the latest `Ready` Revision."
        },
        "name": {
          "type": "string",
          "description": "The fully qualified name of this Service. In CreateServiceRequest, this field is ignored, and instead composed from CreateServiceRequest.parent and CreateServiceRequest.service_id. Format: projects/{project}/locations/{location}/services/{service_id}"
        },
        "reconciling": {
          "description": "Output only. Returns true if the Service is currently being acted upon by the system to bring it into the desired state. When a new Service is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Service to the desired serving state. This process is called reconciliation. While reconciliation is in process, `observed_generation`, `latest_ready_revison`, `traffic_statuses`, and `uri` will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the serving state matches the Service, or there was an error, and reconciliation failed. This state can be found in `terminal_condition.state`. If reconciliation succeeded, the following fields will match: `traffic` and `traffic_statuses`, `observed_generation` and `generation`, `latest_ready_revision` and `latest_created_revision`. If reconciliation failed, `traffic_statuses`, `observed_generation`, and `latest_ready_revision` will have the state of the last serving revision, or empty for newly created Services. Additional information on the failure can be found in `terminal_condition` and `conditions`.",
          "readOnly": true,
          "type": "boolean"
        },
        "terminalCondition": {
          "description": "Output only. The Condition of this Service, containing its readiness status, and detailed error information in case it did not reach a serving state. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.",
          "readOnly": true,
          "$ref": "GoogleCloudRunV2Condition"
        },
        "trafficStatuses": {
          "type": "array",
          "description": "Output only. Detailed status information for corresponding traffic targets. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudRunV2TrafficTargetStatus"
          }
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The last-modified time.",
          "format": "google-datetime",
          "type": "string"
        },
        "latestReadyRevision": {
          "description": "Output only. Name of the latest revision that is serving traffic. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.",
          "type": "string",
          "readOnly": true
        },
        "generation": {
          "type": "string",
          "description": "Output only. A number that monotonically increases every time the user modifies the desired state. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a `string` instead of an `integer`.",
          "format": "int64",
          "readOnly": true
        },
        "uri": {
          "description": "Output only. The main URI in which this Service is serving traffic.",
          "type": "string",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 Service.",
          "type": "object"
        },
        "latestCreatedRevision": {
          "readOnly": true,
          "description": "Output only. Name of the last created revision. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.",
          "type": "string"
        },
        "uid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted."
        },
        "template": {
          "$ref": "GoogleCloudRunV2RevisionTemplate",
          "description": "Required. The template used to create revisions for this Service."
        },
        "description": {
          "description": "User-provided description of the Service. This field currently has a 512-character limit.",
          "type": "string"
        },
        "binaryAuthorization": {
          "$ref": "GoogleCloudRunV2BinaryAuthorization",
          "description": "Settings for the Binary Authorization feature."
        }
      }
    },
    "GoogleCloudRunV2ListExecutionsResponse": {
      "properties": {
        "executions": {
          "items": {
            "$ref": "GoogleCloudRunV2Execution"
          },
          "type": "array",
          "description": "The resulting list of Executions."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token indicating there are more items than page_size. Use it in the next ListExecutions request to continue."
        }
      },
      "id": "GoogleCloudRunV2ListExecutionsResponse",
      "type": "object",
      "description": "Response message containing a list of Executions."
    },
    "GoogleIamV1TestIamPermissionsResponse": {
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Response message for `TestIamPermissions` method.",
      "id": "GoogleIamV1TestIamPermissionsResponse"
    },
    "GoogleCloudRunV2SecretKeySelector": {
      "description": "SecretEnvVarSource represents a source for the value of an EnvVar.",
      "id": "GoogleCloudRunV2SecretKeySelector",
      "properties": {
        "secret": {
          "type": "string",
          "description": "Required. The name of the secret in Cloud Secret Manager. Format: {secret_name} if the secret is in the same project. projects/{project}/secrets/{secret_name} if the secret is in a different project."
        },
        "version": {
          "type": "string",
          "description": "The Cloud Secret Manager secret version. Can be 'latest' for the latest version, an integer for a specific version, or a version alias."
        }
      },
      "type": "object"
    },
    "GoogleCloudRunV2Execution": {
      "id": "GoogleCloudRunV2Execution",
      "description": "Execution represents the configuration of a single execution. A execution an immutable resource that references a container image which is run to completion.",
      "type": "object",
      "properties": {
        "failedCount": {
          "description": "Output only. The number of tasks which reached phase Failed.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "deleteTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.",
          "format": "google-datetime"
        },
        "annotations": {
          "description": "KRM-style annotations for the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "template": {
          "description": "Output only. The template used to create tasks for this execution.",
          "$ref": "GoogleCloudRunV2TaskTemplate",
          "readOnly": true
        },
        "expireTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. For a deleted resource, the time after which it will be permamently deleted. It is only populated as a response to a Delete request.",
          "readOnly": true
        },
        "cancelledCount": {
          "readOnly": true,
          "format": "int32",
          "type": "integer",
          "description": "Output only. The number of tasks which reached phase Cancelled."
        },
        "uid": {
          "description": "Output only. Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.",
          "type": "string",
          "readOnly": true
        },
        "conditions": {
          "description": "Output only. The Condition of this Execution, containing its readiness status, and detailed error information in case it did not reach the desired state.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRunV2Condition"
          },
          "readOnly": true
        },
        "launchStage": {
          "enumDescriptions": [
            "Do not use this default value.",
            "The feature is not yet implemented. Users can not use it.",
            "Prelaunch features are hidden from users and are only visible internally.",
            "Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.",
            "Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don't have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.",
            "Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.",
            "GA features are open to all developers and are considered stable and fully qualified for production use.",
            "Deprecated features are scheduled to be shut down and removed. For more information, see the \"Deprecation Policy\" section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation."
          ],
          "description": "Set the launch stage to a preview stage on write to allow use of preview features in that stage. On read, describes whether the resource uses preview features. Launch Stages are defined at [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages).",
          "type": "string",
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "UNIMPLEMENTED",
            "PRELAUNCH",
            "EARLY_ACCESS",
            "ALPHA",
            "BETA",
            "GA",
            "DEPRECATED"
          ]
        },
        "job": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the parent Job."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The unique name of this Execution."
        },
        "reconciling": {
          "description": "Output only. Indicates whether the resource's reconciliation is still in progress. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run.",
          "type": "boolean",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The last-modified time."
        },
        "logUri": {
          "description": "Output only. URI where logs for this execution can be found in Cloud Console.",
          "readOnly": true,
          "type": "string"
        },
        "parallelism": {
          "readOnly": true,
          "format": "int32",
          "type": "integer",
          "description": "Output only. Specifies the maximum desired number of tasks the execution should run at any given time. Must be \u003c= task_count. The actual number of tasks running in steady state will be less than this number when ((.spec.task_count - .status.successful) \u003c .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/"
        },
        "generation": {
          "type": "string",
          "description": "Output only. A number that monotonically increases every time the user modifies the desired state.",
          "format": "int64",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "KRM-style labels for the resource. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels"
        },
        "runningCount": {
          "format": "int32",
          "description": "Output only. The number of actively running tasks.",
          "type": "integer",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Represents time when the execution was acknowledged by the execution controller. It is not guaranteed to be set in happens-before order across separate operations.",
          "readOnly": true
        },
        "observedGeneration": {
          "readOnly": true,
          "type": "string",
          "format": "int64",
          "description": "Output only. The generation of this Execution. See comments in `reconciling` for additional information on reconciliation process in Cloud Run."
        },
        "succeededCount": {
          "description": "Output only. The number of tasks which reached phase Succeeded.",
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "completionTime": {
          "description": "Output only. Represents time when the execution was completed. It is not guaranteed to be set in happens-before order across separate operations.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "taskCount": {
          "format": "int32",
          "description": "Output only. Specifies the desired number of tasks the execution should run. Setting to 1 means that parallelism is limited to 1 and the success of that task signals the success of the execution. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
          "type": "integer",
          "readOnly": true
        },
        "retriedCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Output only. The number of tasks which have retried at least once."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates."
        },
        "startTime": {
          "description": "Output only. Represents time when the execution started to run. It is not guaranteed to be set in happens-before order across separate operations.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GoogleIamV1SetIamPolicyRequest": {
      "type": "object",
      "id": "GoogleIamV1SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "updateMask": {
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string"
        },
        "policy": {
          "$ref": "GoogleIamV1Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        }
      }
    },
    "GoogleCloudRunV2ListRevisionsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token indicating there are more items than page_size. Use it in the next ListRevisions request to continue.",
          "type": "string"
        },
        "revisions": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRunV2Revision"
          },
          "description": "The resulting list of Revisions."
        }
      },
      "id": "GoogleCloudRunV2ListRevisionsResponse",
      "description": "Response message containing a list of Revisions."
    },
    "GoogleCloudRunV2TrafficTarget": {
      "type": "object",
      "id": "GoogleCloudRunV2TrafficTarget",
      "description": "Holds a single traffic routing entry for the Service. Allocations can be done to a specific Revision name, or pointing to the latest Ready Revision.",
      "properties": {
        "type": {
          "enum": [
            "TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED",
            "TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST",
            "TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified instance allocation type.",
            "Allocates instances to the Service's latest ready Revision.",
            "Allocates instances to a Revision by name."
          ],
          "description": "The allocation type for this traffic target."
        },
        "revision": {
          "type": "string",
          "description": "Revision to which to send this portion of traffic, if traffic allocation is by revision."
        },
        "tag": {
          "type": "string",
          "description": "Indicates a string to be part of the URI to exclusively reference this target."
        },
        "percent": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies percent of the traffic to this Revision. This defaults to zero if unspecified."
        }
      }
    },
    "GoogleCloudRunV2GRPCAction": {
      "id": "GoogleCloudRunV2GRPCAction",
      "properties": {
        "service": {
          "type": "string",
          "description": "Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). If this is not specified, the default behavior is defined by gRPC."
        },
        "port": {
          "format": "int32",
          "type": "integer",
          "description": "Port number of the gRPC service. Number must be in the range 1 to 65535. If not specified, defaults to 8080."
        }
      },
      "description": "GRPCAction describes an action involving a GRPC port.",
      "type": "object"
    },
    "GoogleCloudRunV2RevisionScaling": {
      "id": "GoogleCloudRunV2RevisionScaling",
      "description": "Settings for revision-level scaling settings.",
      "properties": {
        "minInstanceCount": {
          "description": "Minimum number of serving instances that this resource should have.",
          "type": "integer",
          "format": "int32"
        },
        "maxInstanceCount": {
          "type": "integer",
          "description": "Maximum number of serving instances that this resource should have.",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        }
      },
      "id": "GoogleRpcStatus",
      "type": "object"
    },
    "GoogleCloudRunV2RevisionTemplate": {
      "properties": {
        "scaling": {
          "$ref": "GoogleCloudRunV2RevisionScaling",
          "description": "Scaling settings for this Revision."
        },
        "executionEnvironment": {
          "enumDescriptions": [
            "Unspecified",
            "Uses the First Generation environment.",
            "Uses Second Generation environment."
          ],
          "description": "The sandbox environment to host this Revision.",
          "type": "string",
          "enum": [
            "EXECUTION_ENVIRONMENT_UNSPECIFIED",
            "EXECUTION_ENVIRONMENT_GEN1",
            "EXECUTION_ENVIRONMENT_GEN2"
          ]
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "KRM-style labels for the resource. Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 RevisionTemplate."
        },
        "vpcAccess": {
          "$ref": "GoogleCloudRunV2VpcAccess",
          "description": "VPC Access configuration to use for this Revision. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc."
        },
        "maxInstanceRequestConcurrency": {
          "format": "int32",
          "description": "Sets the maximum number of requests that each serving instance can receive.",
          "type": "integer"
        },
        "serviceAccount": {
          "type": "string",
          "description": "Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account."
        },
        "revision": {
          "description": "The unique name for the revision. If this field is omitted, it will be automatically generated based on the Service name.",
          "type": "string"
        },
        "volumes": {
          "description": "A list of Volumes to make available to containers.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRunV2Volume"
          }
        },
        "timeout": {
          "description": "Max allowed time for an instance to respond to a request.",
          "format": "google-duration",
          "type": "string"
        },
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "KRM-style annotations for the resource. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system annotations in v1 now have a corresponding field in v2 RevisionTemplate.",
          "type": "object"
        },
        "encryptionKey": {
          "type": "string",
          "description": "A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek"
        },
        "containers": {
          "items": {
            "$ref": "GoogleCloudRunV2Container"
          },
          "description": "Holds the single container that defines the unit of execution for this Revision.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "RevisionTemplate describes the data a revision should have when created from a template.",
      "id": "GoogleCloudRunV2RevisionTemplate"
    },
    "GoogleCloudRunV2BinaryAuthorization": {
      "type": "object",
      "description": "Settings for Binary Authorization feature.",
      "id": "GoogleCloudRunV2BinaryAuthorization",
      "properties": {
        "useDefault": {
          "type": "boolean",
          "description": "If True, indicates to use the default project's binary authorization policy. If False, binary authorization will be disabled."
        },
        "breakglassJustification": {
          "type": "string",
          "description": "If present, indicates to use Breakglass using this justification. If use_default is False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass"
        }
      }
    },
    "GoogleTypeExpr": {
      "type": "object",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        }
      },
      "id": "GoogleTypeExpr"
    },
    "GoogleIamV1TestIamPermissionsRequest": {
      "id": "GoogleIamV1TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      },
      "type": "object"
    },
    "GoogleCloudRunV2ExecutionTemplate": {
      "type": "object",
      "description": "ExecutionTemplate describes the data an execution should have when created from a template.",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "KRM-style labels for the resource. Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 ExecutionTemplate.",
          "type": "object"
        },
        "template": {
          "$ref": "GoogleCloudRunV2TaskTemplate",
          "description": "Required. Describes the task(s) that will be created when executing an execution."
        },
        "annotations": {
          "description": "KRM-style annotations for the resource. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system annotations in v1 now have a corresponding field in v2 ExecutionTemplate.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "taskCount": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the desired number of tasks the execution should run. Setting to 1 means that parallelism is limited to 1 and the success of that task signals the success of the execution. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/"
        },
        "parallelism": {
          "format": "int32",
          "description": "Specifies the maximum desired number of tasks the execution should run at given time. Must be \u003c= task_count. When the job is run, if this field is 0 or unset, the maximum possible value will be used for that execution. The actual number of tasks running in steady state will be less than this number when there are fewer tasks waiting to be completed remaining, i.e. when the work left to do is less than max parallelism.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudRunV2ExecutionTemplate"
    },
    "GoogleCloudRunV2Condition": {
      "type": "object",
      "id": "GoogleCloudRunV2Condition",
      "properties": {
        "message": {
          "type": "string",
          "description": "Human readable message indicating details about the current status."
        },
        "executionReason": {
          "enum": [
            "EXECUTION_REASON_UNDEFINED",
            "JOB_STATUS_SERVICE_POLLING_ERROR",
            "NON_ZERO_EXIT_CODE",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "Default value.",
            "Internal system error getting execution status. System will retry.",
            "A task reached its retry limit and the last attempt failed due to the user container exiting with a non-zero exit code.",
            "The execution was cancelled by users."
          ],
          "type": "string",
          "description": "A reason for the execution condition."
        },
        "revisionReason": {
          "description": "A reason for the revision condition.",
          "type": "string",
          "enum": [
            "REVISION_REASON_UNDEFINED",
            "PENDING",
            "RESERVE",
            "RETIRED",
            "RETIRING",
            "RECREATING",
            "HEALTH_CHECK_CONTAINER_ERROR",
            "CUSTOMIZED_PATH_RESPONSE_PENDING",
            "MIN_INSTANCES_NOT_PROVISIONED",
            "ACTIVE_REVISION_LIMIT_REACHED",
            "NO_DEPLOYMENT",
            "HEALTH_CHECK_SKIPPED",
            "MIN_INSTANCES_WARMING"
          ],
          "enumDescriptions": [
            "Default value.",
            "Revision in Pending state.",
            "Revision is in Reserve state.",
            "Revision is Retired.",
            "Revision is being retired.",
            "Revision is being recreated.",
            "There was a health check error.",
            "Health check failed due to user error from customized path of the container. System will retry.",
            "A revision with min_instance_count \u003e 0 was created and is reserved, but it was not configured to serve traffic, so it's not live. This can also happen momentarily during traffic migration.",
            "The maximum allowed number of active revisions has been reached.",
            "There was no deployment defined. This value is no longer used, but Services created in older versions of the API might contain this value.",
            "A revision's container has no port specified since the revision is of a manually scaled service with 0 instance count",
            "A revision with min_instance_count \u003e 0 was created and is waiting for enough instances to begin a traffic migration."
          ]
        },
        "severity": {
          "enumDescriptions": [
            "Unspecified severity",
            "Error severity.",
            "Warning severity.",
            "Info severity."
          ],
          "description": "How to interpret failures of this condition, one of Error, Warning, Info",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ],
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Transient state: Reconciliation has not started yet.",
            "Transient state: reconciliation is still in progress.",
            "Terminal state: Reconciliation did not succeed.",
            "Terminal state: Reconciliation completed successfully."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CONDITION_PENDING",
            "CONDITION_RECONCILING",
            "CONDITION_FAILED",
            "CONDITION_SUCCEEDED"
          ],
          "description": "State of the condition.",
          "type": "string"
        },
        "lastTransitionTime": {
          "type": "string",
          "description": "Last time the condition transitioned from one status to another.",
          "format": "google-datetime"
        },
        "reason": {
          "type": "string",
          "enum": [
            "COMMON_REASON_UNDEFINED",
            "UNKNOWN",
            "REVISION_FAILED",
            "PROGRESS_DEADLINE_EXCEEDED",
            "CONTAINER_MISSING",
            "CONTAINER_PERMISSION_DENIED",
            "CONTAINER_IMAGE_UNAUTHORIZED",
            "CONTAINER_IMAGE_AUTHORIZATION_CHECK_FAILED",
            "ENCRYPTION_KEY_PERMISSION_DENIED",
            "ENCRYPTION_KEY_CHECK_FAILED",
            "SECRETS_ACCESS_CHECK_FAILED",
            "WAITING_FOR_OPERATION",
            "IMMEDIATE_RETRY",
            "POSTPONED_RETRY",
            "INTERNAL"
          ],
          "description": "A common (service-level) reason for this condition.",
          "enumDescriptions": [
            "Default value.",
            "Reason unknown. Further details will be in message.",
            "Revision creation process failed.",
            "Timed out waiting for completion.",
            "The container image path is incorrect.",
            "Insufficient permissions on the container image.",
            "Container image is not authorized by policy.",
            "Container image policy authorization check failed.",
            "Insufficient permissions on encryption key.",
            "Permission check on encryption key failed.",
            "At least one Access check on secrets failed.",
            "Waiting for operation to complete.",
            "System will retry immediately.",
            "System will retry later; current attempt failed.",
            "An internal error occurred. Further information may be in the message."
          ]
        },
        "type": {
          "type": "string",
          "description": "type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * \"Ready\": True when the Resource is ready."
        }
      },
      "description": "Defines a status condition for a resource."
    },
    "GoogleCloudRunV2CloudSqlInstance": {
      "description": "Represents a set of Cloud SQL instances. Each one will be available under /cloudsql/[instance]. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.",
      "id": "GoogleCloudRunV2CloudSqlInstance",
      "properties": {
        "instances": {
          "description": "The Cloud SQL instance connection names, as can be found in https://console.cloud.google.com/sql/instances. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run. Format: {project}:{location}:{instance}",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudRunV2Container": {
      "properties": {
        "env": {
          "items": {
            "$ref": "GoogleCloudRunV2EnvVar"
          },
          "type": "array",
          "description": "List of environment variables to set in the container."
        },
        "image": {
          "description": "Required. Name of the container image in Dockerhub, Google Artifact Registry, or Google Container Registry. If the host is not provided, Dockerhub is assumed. More info: https://kubernetes.io/docs/concepts/containers/images",
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRunV2ContainerPort"
          },
          "description": "List of ports to expose from the container. Only a single port can be specified. The specified ports must be listening on all interfaces (0.0.0.0) within the container to be accessible. If omitted, a port number will be chosen and passed to the container through the PORT environment variable for the container to listen on."
        },
        "startupProbe": {
          "description": "Startup probe of application within the container. All other probes are disabled if a startup probe is provided, until it succeeds. Container will not be added to service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "GoogleCloudRunV2Probe"
        },
        "livenessProbe": {
          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "GoogleCloudRunV2Probe"
        },
        "resources": {
          "$ref": "GoogleCloudRunV2ResourceRequirements",
          "description": "Compute Resource requirements by this container. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
        },
        "workingDir": {
          "type": "string",
          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image."
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRunV2VolumeMount"
          },
          "description": "Volume to mount into the container's filesystem."
        },
        "name": {
          "description": "Name of the container specified as a DNS_LABEL (RFC 1123).",
          "type": "string"
        },
        "command": {
          "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "args": {
          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudRunV2Container",
      "type": "object",
      "description": "A single application container. This specifies both the container to run, the command to run in the container and the arguments to supply to it. Note that additional arguments may be supplied by the system to the container at runtime."
    },
    "GoogleCloudRunV2SecretVolumeSource": {
      "description": "The secret's value will be presented as the content of a file whose name is defined in the item path. If no items are defined, the name of the file is the secret.",
      "properties": {
        "defaultMode": {
          "description": "Integer representation of mode bits to use on created files by default. Must be a value between 0000 and 0777 (octal), defaulting to 0444. Directories within the path are not affected by this setting. Notes * Internally, a umask of 0222 will be applied to any non-zero value. * This is an integer representation of the mode bits. So, the octal integer value should look exactly as the chmod numeric notation with a leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. This might be in conflict with other options that affect the file mode, like fsGroup, and as a result, other mode bits could be set.",
          "format": "int32",
          "type": "integer"
        },
        "secret": {
          "type": "string",
          "description": "Required. The name of the secret in Cloud Secret Manager. Format: {secret} if the secret is in the same project. projects/{project}/secrets/{secret} if the secret is in a different project."
        },
        "items": {
          "type": "array",
          "description": "If unspecified, the volume will expose a file whose name is the secret, relative to VolumeMount.mount_path. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a path and a version.",
          "items": {
            "$ref": "GoogleCloudRunV2VersionToPath"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudRunV2SecretVolumeSource"
    },
    "GoogleIamV1Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "id": "GoogleIamV1Policy",
      "properties": {
        "auditConfigs": {
          "items": {
            "$ref": "GoogleIamV1AuditConfig"
          },
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array"
        },
        "version": {
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer"
        },
        "etag": {
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "format": "byte"
        },
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1Binding"
          },
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        }
      }
    },
    "GoogleCloudRunV2TaskTemplate": {
      "properties": {
        "maxRetries": {
          "type": "integer",
          "format": "int32",
          "description": "Number of retries allowed per Task, before marking this Task failed."
        },
        "executionEnvironment": {
          "enum": [
            "EXECUTION_ENVIRONMENT_UNSPECIFIED",
            "EXECUTION_ENVIRONMENT_GEN1",
            "EXECUTION_ENVIRONMENT_GEN2"
          ],
          "enumDescriptions": [
            "Unspecified",
            "Uses the First Generation environment.",
            "Uses Second Generation environment."
          ],
          "description": "The execution environment being used to host this Task.",
          "type": "string"
        },
        "vpcAccess": {
          "$ref": "GoogleCloudRunV2VpcAccess",
          "description": "VPC Access configuration to use for this Task. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc."
        },
        "timeout": {
          "description": "Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout.",
          "type": "string",
          "format": "google-duration"
        },
        "encryptionKey": {
          "type": "string",
          "description": "A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek"
        },
        "containers": {
          "items": {
            "$ref": "GoogleCloudRunV2Container"
          },
          "description": "Holds the single container that defines the unit of execution for this task.",
          "type": "array"
        },
        "serviceAccount": {
          "type": "string",
          "description": "Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project's default service account."
        },
        "volumes": {
          "type": "array",
          "description": "A list of Volumes to make available to containers.",
          "items": {
            "$ref": "GoogleCloudRunV2Volume"
          }
        }
      },
      "description": "TaskTemplate describes the data a task should have when created from a template.",
      "id": "GoogleCloudRunV2TaskTemplate",
      "type": "object"
    },
    "GoogleLongrunningWaitOperationRequest": {
      "type": "object",
      "id": "GoogleLongrunningWaitOperationRequest",
      "properties": {
        "timeout": {
          "type": "string",
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "format": "google-duration"
        }
      },
      "description": "The request message for Operations.WaitOperation."
    },
    "GoogleProtobufEmpty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "type": "object",
      "id": "GoogleProtobufEmpty"
    },
    "GoogleCloudRunV2TCPSocketAction": {
      "id": "GoogleCloudRunV2TCPSocketAction",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to 8080."
        }
      },
      "description": "TCPSocketAction describes an action based on opening a socket",
      "type": "object"
    },
    "GoogleCloudRunV2ListTasksResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token indicating there are more items than page_size. Use it in the next ListTasks request to continue.",
          "type": "string"
        },
        "tasks": {
          "type": "array",
          "description": "The resulting list of Tasks.",
          "items": {
            "$ref": "GoogleCloudRunV2Task"
          }
        }
      },
      "description": "Response message containing a list of Tasks.",
      "id": "GoogleCloudRunV2ListTasksResponse"
    },
    "GoogleCloudRunV2Task": {
      "description": "Task represents a single run of a container to completion.",
      "id": "GoogleCloudRunV2Task",
      "properties": {
        "encryptionKey": {
          "type": "string",
          "description": "Output only. A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek",
          "readOnly": true
        },
        "lastAttemptResult": {
          "$ref": "GoogleCloudRunV2TaskAttemptResult",
          "description": "Output only. Result of the last attempt of this Task.",
          "readOnly": true
        },
        "etag": {
          "description": "Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.",
          "readOnly": true,
          "type": "string"
        },
        "startTime": {
          "description": "Output only. Represents time when the task started to run. It is not guaranteed to be set in happens-before order across separate operations.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "logUri": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. URI where logs for this execution can be found in Cloud Console."
        },
        "executionEnvironment": {
          "description": "The execution environment being used to host this Task.",
          "type": "string",
          "enum": [
            "EXECUTION_ENVIRONMENT_UNSPECIFIED",
            "EXECUTION_ENVIRONMENT_GEN1",
            "EXECUTION_ENVIRONMENT_GEN2"
          ],
          "enumDescriptions": [
            "Unspecified",
            "Uses the First Generation environment.",
            "Uses Second Generation environment."
          ]
        },
        "generation": {
          "readOnly": true,
          "format": "int64",
          "description": "Output only. A number that monotonically increases every time the user modifies the desired state.",
          "type": "string"
        },
        "vpcAccess": {
          "description": "Output only. VPC Access configuration to use for this Task. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.",
          "$ref": "GoogleCloudRunV2VpcAccess",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "description": "Output only. Represents time when the task was created by the job controller. It is not guaranteed to be set in happens-before order across separate operations.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "execution": {
          "description": "Output only. The name of the parent Execution.",
          "readOnly": true,
          "type": "string"
        },
        "deleteTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.",
          "format": "google-datetime"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRunV2Volume"
          },
          "description": "A list of Volumes to make available to containers."
        },
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "KRM-style annotations for the resource."
        },
        "maxRetries": {
          "description": "Number of retries allowed per Task, before marking this Task failed.",
          "format": "int32",
          "type": "integer"
        },
        "retried": {
          "format": "int32",
          "readOnly": true,
          "description": "Output only. The number of times this Task was retried. Tasks are retried when they fail up to the maxRetries limit.",
          "type": "integer"
        },
        "conditions": {
          "description": "Output only. The Condition of this Task, containing its readiness status, and detailed error information in case it did not reach the desired state.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudRunV2Condition"
          },
          "type": "array"
        },
        "serviceAccount": {
          "type": "string",
          "description": "Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project's default service account."
        },
        "observedGeneration": {
          "readOnly": true,
          "format": "int64",
          "type": "string",
          "description": "Output only. The generation of this Task. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run."
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The last-modified time."
        },
        "reconciling": {
          "readOnly": true,
          "description": "Output only. Indicates whether the resource's reconciliation is still in progress. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run.",
          "type": "boolean"
        },
        "containers": {
          "items": {
            "$ref": "GoogleCloudRunV2Container"
          },
          "description": "Holds the single container that defines the unit of execution for this task.",
          "type": "array"
        },
        "job": {
          "readOnly": true,
          "description": "Output only. The name of the parent Job.",
          "type": "string"
        },
        "uid": {
          "description": "Output only. Server assigned unique identifier for the Task. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.",
          "readOnly": true,
          "type": "string"
        },
        "timeout": {
          "format": "google-duration",
          "description": "Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout.",
          "type": "string"
        },
        "completionTime": {
          "description": "Output only. Represents time when the Task was completed. It is not guaranteed to be set in happens-before order across separate operations.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "index": {
          "format": "int32",
          "description": "Output only. Index of the Task, unique per execution, and beginning at 0.",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The unique name of this Task."
        },
        "expireTime": {
          "description": "Output only. For a deleted resource, the time after which it will be permamently deleted. It is only populated as a response to a Delete request.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "labels": {
          "description": "KRM-style labels for the resource. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GoogleLongrunningOperation": {
      "id": "GoogleLongrunningOperation",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "GoogleCloudRunV2ContainerPort": {
      "properties": {
        "containerPort": {
          "type": "integer",
          "format": "int32",
          "description": "Port number the container listens on. This must be a valid TCP port number, 0 \u003c container_port \u003c 65536."
        },
        "name": {
          "description": "If specified, used to specify which protocol to use. Allowed values are \"http1\" and \"h2c\".",
          "type": "string"
        }
      },
      "id": "GoogleCloudRunV2ContainerPort",
      "description": "ContainerPort represents a network port in a single container.",
      "type": "object"
    },
    "GoogleCloudRunV2VersionToPath": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "The Cloud Secret Manager secret version. Can be 'latest' for the latest value, or an integer or a secret alias for a specific version."
        },
        "mode": {
          "description": "Integer octal mode bits to use on this file, must be a value between 01 and 0777 (octal). If 0 or not set, the Volume's default mode will be used. Notes * Internally, a umask of 0222 will be applied to any non-zero value. * This is an integer representation of the mode bits. So, the octal integer value should look exactly as the chmod numeric notation with a leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "type": "string",
          "description": "Required. The relative path of the secret in the container."
        }
      },
      "id": "GoogleCloudRunV2VersionToPath",
      "description": "VersionToPath maps a specific version of a secret to a relative file to mount to, relative to VolumeMount's mount_path."
    },
    "GoogleCloudRunV2ListJobsResponse": {
      "properties": {
        "jobs": {
          "items": {
            "$ref": "GoogleCloudRunV2Job"
          },
          "description": "The resulting list of Jobs.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token indicating there are more items than page_size. Use it in the next ListJobs request to continue.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response message containing a list of Jobs.",
      "id": "GoogleCloudRunV2ListJobsResponse"
    },
    "GoogleIamV1AuditConfig": {
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "id": "GoogleIamV1AuditConfig",
      "properties": {
        "auditLogConfigs": {
          "type": "array",
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "GoogleIamV1AuditLogConfig"
          }
        },
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudRunV2TrafficTargetStatus": {
      "properties": {
        "tag": {
          "description": "Indicates the string used in the URI to exclusively reference this target.",
          "type": "string"
        },
        "type": {
          "description": "The allocation type for this traffic target.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified instance allocation type.",
            "Allocates instances to the Service's latest ready Revision.",
            "Allocates instances to a Revision by name."
          ],
          "enum": [
            "TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED",
            "TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST",
            "TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION"
          ]
        },
        "uri": {
          "type": "string",
          "description": "Displays the target URI."
        },
        "percent": {
          "description": "Specifies percent of the traffic to this Revision.",
          "type": "integer",
          "format": "int32"
        },
        "revision": {
          "description": "Revision to which this traffic is sent.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudRunV2TrafficTargetStatus",
      "description": "Represents the observed state of a single `TrafficTarget` entry."
    },
    "GoogleCloudRunV2ListServicesResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token indicating there are more items than page_size. Use it in the next ListServices request to continue."
        },
        "services": {
          "items": {
            "$ref": "GoogleCloudRunV2Service"
          },
          "description": "The resulting list of Services.",
          "type": "array"
        }
      },
      "description": "Response message containing a list of Services.",
      "id": "GoogleCloudRunV2ListServicesResponse"
    },
    "GoogleCloudRunV2RunJobRequest": {
      "id": "GoogleCloudRunV2RunJobRequest",
      "properties": {
        "validateOnly": {
          "type": "boolean",
          "description": "Indicates that the request should be validated without actually deleting any resources."
        },
        "etag": {
          "description": "A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Request message to create a new Execution of a Job."
    },
    "GoogleIamV1AuditLogConfig": {
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "id": "GoogleIamV1AuditLogConfig",
      "properties": {
        "logType": {
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "description": "The log type that this config enables."
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
        }
      },
      "type": "object"
    },
    "GoogleCloudRunV2TaskAttemptResult": {
      "description": "Result of a task attempt.",
      "id": "GoogleCloudRunV2TaskAttemptResult",
      "type": "object",
      "properties": {
        "status": {
          "readOnly": true,
          "$ref": "GoogleRpcStatus",
          "description": "Output only. The status of this attempt. If the status code is OK, then the attempt succeeded."
        },
        "exitCode": {
          "description": "Output only. The exit code of this attempt. This may be unset if the container was unable to exit cleanly with a code due to some other failure. See status field for possible failure details.",
          "readOnly": true,
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GoogleCloudRunV2VpcAccess": {
      "id": "GoogleCloudRunV2VpcAccess",
      "properties": {
        "egress": {
          "type": "string",
          "description": "Traffic VPC egress settings.",
          "enum": [
            "VPC_EGRESS_UNSPECIFIED",
            "ALL_TRAFFIC",
            "PRIVATE_RANGES_ONLY"
          ],
          "enumDescriptions": [
            "Unspecified",
            "All outbound traffic is routed through the VPC connector.",
            "Only private IP ranges are routed through the VPC connector."
          ]
        },
        "connector": {
          "description": "VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}, where {project} can be project id or number.",
          "type": "string"
        }
      },
      "description": "VPC Access settings. For more information on creating a VPC Connector, visit https://cloud.google.com/vpc/docs/configure-serverless-vpc-access For information on how to configure Cloud Run with an existing VPC Connector, visit https://cloud.google.com/run/docs/configuring/connecting-vpc",
      "type": "object"
    },
    "GoogleLongrunningListOperationsResponse": {
      "id": "GoogleLongrunningListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      }
    },
    "GoogleCloudRunV2HTTPGetAction": {
      "id": "GoogleCloudRunV2HTTPGetAction",
      "type": "object",
      "description": "HTTPGetAction describes an action based on HTTP Get requests.",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path to access on the HTTP server. Defaults to '/'."
        },
        "httpHeaders": {
          "items": {
            "$ref": "GoogleCloudRunV2HTTPHeader"
          },
          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
          "type": "array"
        }
      }
    },
    "GoogleCloudRunV2VolumeMount": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. This must match the Name of a Volume."
        },
        "mountPath": {
          "type": "string",
          "description": "Required. Path within the container at which the volume should be mounted. Must not contain ':'. For Cloud SQL volumes, it can be left empty, or must otherwise be `/cloudsql`. All instances defined in the Volume will be available as `/cloudsql/[instance]`. For more information on Cloud SQL volumes, visit https://cloud.google.com/sql/docs/mysql/connect-run"
        }
      },
      "type": "object",
      "description": "VolumeMount describes a mounting of a Volume within a container.",
      "id": "GoogleCloudRunV2VolumeMount"
    },
    "GoogleCloudRunV2Job": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Output only. The creation time.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "lastModifier": {
          "readOnly": true,
          "description": "Output only. Email address of the last authenticated modifier.",
          "type": "string"
        },
        "annotations": {
          "type": "object",
          "description": "KRM-style annotations for the resource. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system annotations in v1 now have a corresponding field in v2 Job. This field follows Kubernetes annotations' namespacing, limits, and rules. More info: https://kubernetes.io/docs/user-guide/annotations",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clientVersion": {
          "description": "Arbitrary version identifier for the API client.",
          "type": "string"
        },
        "creator": {
          "readOnly": true,
          "description": "Output only. Email address of the authenticated creator.",
          "type": "string"
        },
        "client": {
          "type": "string",
          "description": "Arbitrary identifier for the API client."
        },
        "uid": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted."
        },
        "etag": {
          "readOnly": true,
          "description": "Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.",
          "type": "string"
        },
        "latestCreatedExecution": {
          "description": "Output only. Name of the last created execution.",
          "$ref": "GoogleCloudRunV2ExecutionReference",
          "readOnly": true
        },
        "template": {
          "$ref": "GoogleCloudRunV2ExecutionTemplate",
          "description": "Required. The template used to create executions for this Job."
        },
        "executionCount": {
          "type": "integer",
          "description": "Output only. Number of executions created for this job.",
          "readOnly": true,
          "format": "int32"
        },
        "binaryAuthorization": {
          "$ref": "GoogleCloudRunV2BinaryAuthorization",
          "description": "Settings for the Binary Authorization feature."
        },
        "deleteTime": {
          "type": "string",
          "description": "Output only. The deletion time.",
          "format": "google-datetime",
          "readOnly": true
        },
        "expireTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. For a deleted resource, the time after which it will be permamently deleted."
        },
        "generation": {
          "format": "int64",
          "readOnly": true,
          "type": "string",
          "description": "Output only. A number that monotonically increases every time the user modifies the desired state."
        },
        "terminalCondition": {
          "$ref": "GoogleCloudRunV2Condition",
          "description": "Output only. The Condition of this Job, containing its readiness status, and detailed error information in case it did not reach the desired state.",
          "readOnly": true
        },
        "name": {
          "description": "The fully qualified name of this Job. Format: projects/{project}/locations/{location}/jobs/{job}",
          "type": "string"
        },
        "observedGeneration": {
          "format": "int64",
          "description": "Output only. The generation of this Job. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.",
          "type": "string",
          "readOnly": true
        },
        "labels": {
          "description": "KRM-style labels for the resource. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 Job.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "launchStage": {
          "type": "string",
          "description": "The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed.",
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "UNIMPLEMENTED",
            "PRELAUNCH",
            "EARLY_ACCESS",
            "ALPHA",
            "BETA",
            "GA",
            "DEPRECATED"
          ],
          "enumDescriptions": [
            "Do not use this default value.",
            "The feature is not yet implemented. Users can not use it.",
            "Prelaunch features are hidden from users and are only visible internally.",
            "Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.",
            "Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don't have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.",
            "Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.",
            "GA features are open to all developers and are considered stable and fully qualified for production use.",
            "Deprecated features are scheduled to be shut down and removed. For more information, see the \"Deprecation Policy\" section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation."
          ]
        },
        "reconciling": {
          "type": "boolean",
          "description": "Output only. Returns true if the Job is currently being acted upon by the system to bring it into the desired state. When a new Job is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Job to the desired state. This process is called reconciliation. While reconciliation is in process, `observed_generation` and `latest_succeeded_execution`, will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the state matches the Job, or there was an error, and reconciliation failed. This state can be found in `terminal_condition.state`. If reconciliation succeeded, the following fields will match: `observed_generation` and `generation`, `latest_succeeded_execution` and `latest_created_execution`. If reconciliation failed, `observed_generation` and `latest_succeeded_execution` will have the state of the last succeeded execution or empty for newly created Job. Additional information on the failure can be found in `terminal_condition` and `conditions`.",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The last-modified time."
        },
        "conditions": {
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudRunV2Condition"
          },
          "type": "array",
          "description": "Output only. The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Job does not reach its desired state. See comments in `reconciling` for additional information on reconciliation process in Cloud Run."
        }
      },
      "id": "GoogleCloudRunV2Job",
      "description": "Job represents the configuration of a single job, which references a container image that is run to completion."
    },
    "GoogleCloudRunV2ResourceRequirements": {
      "id": "GoogleCloudRunV2ResourceRequirements",
      "type": "object",
      "description": "ResourceRequirements describes the compute resource requirements.",
      "properties": {
        "cpuIdle": {
          "description": "Determines whether CPU should be throttled or not outside of requests.",
          "type": "boolean"
        },
        "limits": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Only memory and CPU are supported. Note: The only supported values for CPU are '1', '2', '4', and '8'. Setting 4 CPU requires at least 2Gi of memory. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go"
        }
      }
    },
    "GoogleCloudRunV2EnvVar": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\", and the maximum length is 32768 bytes."
        },
        "valueSource": {
          "description": "Source for the environment variable's value.",
          "$ref": "GoogleCloudRunV2EnvVarSource"
        },
        "name": {
          "type": "string",
          "description": "Required. Name of the environment variable. Must be a C_IDENTIFIER, and mnay not exceed 32768 characters."
        }
      },
      "description": "EnvVar represents an environment variable present in a Container.",
      "id": "GoogleCloudRunV2EnvVar",
      "type": "object"
    },
    "GoogleCloudRunV2Volume": {
      "type": "object",
      "description": "Volume represents a named volume in a container.",
      "properties": {
        "name": {
          "description": "Required. Volume's name.",
          "type": "string"
        },
        "cloudSqlInstance": {
          "description": "For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.",
          "$ref": "GoogleCloudRunV2CloudSqlInstance"
        },
        "secret": {
          "$ref": "GoogleCloudRunV2SecretVolumeSource",
          "description": "Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
        }
      },
      "id": "GoogleCloudRunV2Volume"
    },
    "GoogleCloudRunV2EnvVarSource": {
      "properties": {
        "secretKeyRef": {
          "description": "Selects a secret and a specific version from Cloud Secret Manager.",
          "$ref": "GoogleCloudRunV2SecretKeySelector"
        }
      },
      "id": "GoogleCloudRunV2EnvVarSource",
      "description": "EnvVarSource represents a source for the value of an EnvVar.",
      "type": "object"
    },
    "GoogleCloudRunV2HTTPHeader": {
      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
      "properties": {
        "value": {
          "type": "string",
          "description": "The header field value"
        },
        "name": {
          "type": "string",
          "description": "Required. The header field name"
        }
      },
      "type": "object",
      "id": "GoogleCloudRunV2HTTPHeader"
    }
  },
  "batchPath": "batch"
}

{
  "baseUrl": "https://prod-tt-sasportal.googleapis.com/",
  "servicePath": "",
  "resources": {
    "nodes": {
      "methods": {
        "get": {
          "path": "v1alpha1/{+name}",
          "httpMethod": "GET",
          "id": "prod_tt_sasportal.nodes.get",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "type": "string",
              "pattern": "^nodes/[^/]+$",
              "description": "Required. The name of the node.",
              "required": true,
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "description": "Returns a requested node.",
          "flatPath": "v1alpha1/nodes/{nodesId}",
          "response": {
            "$ref": "SasPortalNode"
          }
        }
      },
      "resources": {
        "deployments": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Returns a requested deployment.",
              "id": "prod_tt_sasportal.nodes.deployments.get",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "description": "Required. The name of the deployment.",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}"
            },
            "patch": {
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}",
              "description": "Updates an existing deployment.",
              "id": "prod_tt_sasportal.nodes.deployments.patch",
              "path": "v1alpha1/{+name}",
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "description": "Fields to be updated.",
                  "location": "query",
                  "format": "google-fieldmask"
                },
                "name": {
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "location": "path",
                  "description": "Output only. Resource name.",
                  "type": "string",
                  "required": true
                }
              },
              "request": {
                "$ref": "SasPortalDeployment"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "move": {
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}:move",
              "id": "prod_tt_sasportal.nodes.deployments.move",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "description": "Required. The name of the deployment to move.",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}:move",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "request": {
                "$ref": "SasPortalMoveDeploymentRequest"
              },
              "description": "Moves a deployment under another node or customer.",
              "httpMethod": "POST"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalListDeploymentsResponse"
              },
              "path": "v1alpha1/{+parent}/deployments",
              "parameters": {
                "parent": {
                  "description": "Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2.",
                  "type": "string",
                  "pattern": "^nodes/[^/]+$",
                  "location": "path",
                  "required": true
                },
                "filter": {
                  "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered.",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of deployments to return in the response.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "id": "prod_tt_sasportal.nodes.deployments.list",
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments",
              "description": "Lists deployments."
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "id": "prod_tt_sasportal.nodes.deployments.delete",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the deployment.",
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "description": "Deletes a deployment.",
              "httpMethod": "DELETE",
              "path": "v1alpha1/{+name}"
            }
          },
          "resources": {
            "devices": {
              "methods": {
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices",
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/devices",
                  "description": "Creates a device under a node or customer.",
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "id": "prod_tt_sasportal.nodes.deployments.devices.create",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the parent resource."
                    }
                  }
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "description": "Lists devices under a node or customer.",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the parent resource."
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "id": "prod_tt_sasportal.nodes.deployments.devices.list",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices",
                  "path": "v1alpha1/{+parent}/devices"
                },
                "createSigned": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The name of the parent resource.",
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "id": "prod_tt_sasportal.nodes.deployments.devices.createSigned",
                  "description": "Creates a signed device under a node or customer.",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices:createSigned"
                }
              }
            }
          }
        },
        "devices": {
          "methods": {
            "patch": {
              "description": "Updates a device.",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "id": "prod_tt_sasportal.nodes.devices.patch",
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "format": "google-fieldmask",
                  "description": "Fields to be updated.",
                  "location": "query"
                },
                "name": {
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Output only. The resource path name.",
                  "required": true
                }
              },
              "response": {
                "$ref": "SasPortalDevice"
              }
            },
            "delete": {
              "httpMethod": "DELETE",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "description": "Deletes a device.",
              "id": "prod_tt_sasportal.nodes.devices.delete",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the device.",
                  "required": true,
                  "type": "string"
                }
              }
            },
            "signDevice": {
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.nodes.devices.signDevice",
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "description": "Output only. The resource path name.",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$"
                }
              },
              "description": "Signs a device.",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:signDevice",
              "path": "v1alpha1/{+name}:signDevice"
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the device.",
                  "type": "string",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true
                }
              },
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "description": "Gets details about a device.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.nodes.devices.get"
            },
            "list": {
              "path": "v1alpha1/{+parent}/devices",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageSize": {
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                },
                "parent": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the parent resource.",
                  "location": "path",
                  "pattern": "^nodes/[^/]+$"
                },
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Lists devices under a node or customer.",
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "id": "prod_tt_sasportal.nodes.devices.list",
              "httpMethod": "GET"
            },
            "updateSigned": {
              "httpMethod": "PATCH",
              "description": "Updates a signed device.",
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.nodes.devices.updateSigned",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the device to update.",
                  "type": "string",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$"
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:updateSigned",
              "path": "v1alpha1/{+name}:updateSigned"
            },
            "move": {
              "httpMethod": "POST",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:move",
              "id": "prod_tt_sasportal.nodes.devices.move",
              "description": "Moves a device under another node or customer.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the device to move."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalOperation"
              },
              "path": "v1alpha1/{+name}:move"
            },
            "createSigned": {
              "parameters": {
                "parent": {
                  "required": true,
                  "pattern": "^nodes/[^/]+$",
                  "description": "Required. The name of the parent resource.",
                  "location": "path",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:createSigned",
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "httpMethod": "POST",
              "description": "Creates a signed device under a node or customer.",
              "id": "prod_tt_sasportal.nodes.devices.createSigned",
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              }
            },
            "create": {
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.nodes.devices.create",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "path": "v1alpha1/{+parent}/devices",
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^nodes/[^/]+$"
                }
              },
              "description": "Creates a device under a node or customer.",
              "response": {
                "$ref": "SasPortalDevice"
              }
            }
          }
        },
        "nodes": {
          "methods": {
            "patch": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Output only. Resource name.",
                  "required": true
                },
                "updateMask": {
                  "location": "query",
                  "description": "Fields to be updated.",
                  "format": "google-fieldmask",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "SasPortalNode"
              },
              "id": "prod_tt_sasportal.nodes.nodes.patch",
              "httpMethod": "PATCH",
              "description": "Updates an existing node.",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "request": {
                "$ref": "SasPortalNode"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "get": {
              "id": "prod_tt_sasportal.nodes.nodes.get",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the node.",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "required": true
                }
              },
              "httpMethod": "GET",
              "response": {
                "$ref": "SasPortalNode"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Returns a requested node.",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}"
            },
            "create": {
              "path": "v1alpha1/{+parent}/nodes",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "request": {
                "$ref": "SasPortalNode"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^nodes/[^/]+$",
                  "description": "Required. The parent resource name where the node is to be created.",
                  "required": true
                }
              },
              "description": "Creates a new node.",
              "parameterOrder": [
                "parent"
              ],
              "id": "prod_tt_sasportal.nodes.nodes.create",
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalNode"
              }
            },
            "delete": {
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "description": "Deletes a node.",
              "id": "prod_tt_sasportal.nodes.nodes.delete",
              "parameters": {
                "name": {
                  "description": "Required. The name of the node.",
                  "required": true,
                  "type": "string",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE"
            },
            "list": {
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "httpMethod": "GET",
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+parent}/nodes",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from.",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered."
                },
                "parent": {
                  "required": true,
                  "pattern": "^nodes/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The parent resource name, for example, \"nodes/1\"."
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of nodes to return in the response."
                }
              },
              "id": "prod_tt_sasportal.nodes.nodes.list",
              "parameterOrder": [
                "parent"
              ],
              "description": "Lists nodes."
            },
            "move": {
              "id": "prod_tt_sasportal.nodes.nodes.move",
              "path": "v1alpha1/{+name}:move",
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalOperation"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the node to move.",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "location": "path"
                }
              },
              "httpMethod": "POST",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}:move",
              "description": "Moves a node under another node or customer.",
              "parameterOrder": [
                "name"
              ]
            }
          },
          "resources": {
            "nodes": {
              "methods": {
                "list": {
                  "path": "v1alpha1/{+parent}/nodes",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "parameters": {
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of nodes to return in the response.",
                      "format": "int32"
                    },
                    "parent": {
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource name, for example, \"nodes/1\".",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered.",
                      "type": "string"
                    }
                  },
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.list",
                  "description": "Lists nodes.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ]
                },
                "create": {
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.create",
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "description": "Required. The parent resource name where the node is to be created.",
                      "type": "string"
                    }
                  },
                  "description": "Creates a new node.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SasPortalNode"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "path": "v1alpha1/{+parent}/nodes"
                }
              }
            },
            "deployments": {
              "methods": {
                "create": {
                  "path": "v1alpha1/{+parent}/deployments",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent resource name where the deployment is to be created.",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Creates a new deployment.",
                  "request": {
                    "$ref": "SasPortalDeployment"
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/deployments",
                  "response": {
                    "$ref": "SasPortalDeployment"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "prod_tt_sasportal.nodes.nodes.deployments.create"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SasPortalListDeploymentsResponse"
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/deployments",
                  "id": "prod_tt_sasportal.nodes.nodes.deployments.list",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from."
                    },
                    "parent": {
                      "description": "Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered."
                    },
                    "pageSize": {
                      "description": "The maximum number of deployments to return in the response.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "path": "v1alpha1/{+parent}/deployments",
                  "description": "Lists deployments."
                }
              }
            },
            "devices": {
              "methods": {
                "list": {
                  "path": "v1alpha1/{+parent}/devices",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "description": "Lists devices under a node or customer.",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]."
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "description": "Required. The name of the parent resource."
                    },
                    "filter": {
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "httpMethod": "GET"
                },
                "createSigned": {
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:createSigned",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "type": "string",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "prod_tt_sasportal.nodes.nodes.devices.createSigned",
                  "description": "Creates a signed device under a node or customer."
                },
                "create": {
                  "description": "Creates a device under a node or customer.",
                  "parameters": {
                    "parent": {
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "prod_tt_sasportal.nodes.nodes.devices.create",
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/devices",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "httpMethod": "POST"
                }
              }
            }
          }
        }
      }
    },
    "installer": {
      "methods": {
        "generateSecret": {
          "response": {
            "$ref": "SasPortalGenerateSecretResponse"
          },
          "description": "Generates a secret to be used with the ValidateInstaller.",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameters": {},
          "path": "v1alpha1/installer:generateSecret",
          "flatPath": "v1alpha1/installer:generateSecret",
          "httpMethod": "POST",
          "request": {
            "$ref": "SasPortalGenerateSecretRequest"
          },
          "id": "prod_tt_sasportal.installer.generateSecret",
          "parameterOrder": []
        },
        "validate": {
          "parameters": {},
          "path": "v1alpha1/installer:validate",
          "id": "prod_tt_sasportal.installer.validate",
          "response": {
            "$ref": "SasPortalValidateInstallerResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "description": "Validates the identity of a Certified Professional Installer (CPI).",
          "httpMethod": "POST",
          "flatPath": "v1alpha1/installer:validate",
          "parameterOrder": [],
          "request": {
            "$ref": "SasPortalValidateInstallerRequest"
          }
        }
      }
    },
    "policies": {
      "methods": {
        "test": {
          "response": {
            "$ref": "SasPortalTestPermissionsResponse"
          },
          "request": {
            "$ref": "SasPortalTestPermissionsRequest"
          },
          "description": "Returns permissions that a caller has on the specified resource.",
          "httpMethod": "POST",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "flatPath": "v1alpha1/policies:test",
          "parameterOrder": [],
          "id": "prod_tt_sasportal.policies.test",
          "path": "v1alpha1/policies:test"
        },
        "set": {
          "flatPath": "v1alpha1/policies:set",
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
          "httpMethod": "POST",
          "parameters": {},
          "path": "v1alpha1/policies:set",
          "request": {
            "$ref": "SasPortalSetPolicyRequest"
          },
          "id": "prod_tt_sasportal.policies.set",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameterOrder": []
        },
        "get": {
          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
          "httpMethod": "POST",
          "flatPath": "v1alpha1/policies:get",
          "id": "prod_tt_sasportal.policies.get",
          "parameters": {},
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "path": "v1alpha1/policies:get",
          "parameterOrder": [],
          "request": {
            "$ref": "SasPortalGetPolicyRequest"
          }
        }
      }
    },
    "customers": {
      "resources": {
        "nodes": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "path": "v1alpha1/{+parent}/nodes",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "description": "Lists nodes.",
              "parameters": {
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of nodes to return in the response.",
                  "type": "integer",
                  "location": "query"
                },
                "parent": {
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "description": "Required. The parent resource name, for example, \"nodes/1\"."
                },
                "filter": {
                  "location": "query",
                  "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered.",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "id": "prod_tt_sasportal.customers.nodes.list",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Deletes a node.",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "id": "prod_tt_sasportal.customers.nodes.delete",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the node.",
                  "required": true,
                  "type": "string"
                }
              },
              "httpMethod": "DELETE"
            },
            "create": {
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "description": "Required. The parent resource name where the node is to be created."
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "SasPortalNode"
              },
              "description": "Creates a new node.",
              "id": "prod_tt_sasportal.customers.nodes.create",
              "response": {
                "$ref": "SasPortalNode"
              },
              "path": "v1alpha1/{+parent}/nodes"
            },
            "patch": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalNode"
              },
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "Output only. Resource name.",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "location": "path"
                },
                "updateMask": {
                  "description": "Fields to be updated.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "description": "Updates an existing node.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.nodes.patch",
              "request": {
                "$ref": "SasPortalNode"
              }
            },
            "get": {
              "description": "Returns a requested node.",
              "httpMethod": "GET",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "id": "prod_tt_sasportal.customers.nodes.get",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalNode"
              },
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the node.",
                  "location": "path"
                }
              }
            },
            "move": {
              "id": "prod_tt_sasportal.customers.nodes.move",
              "description": "Moves a node under another node or customer.",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalOperation"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the node to move.",
                  "required": true,
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "location": "path"
                }
              },
              "path": "v1alpha1/{+name}:move",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "httpMethod": "POST",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}:move"
            }
          },
          "resources": {
            "deployments": {
              "methods": {
                "create": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource name where the deployment is to be created."
                    }
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/deployments",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "SasPortalDeployment"
                  },
                  "response": {
                    "$ref": "SasPortalDeployment"
                  },
                  "description": "Creates a new deployment.",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "prod_tt_sasportal.customers.nodes.deployments.create",
                  "path": "v1alpha1/{+parent}/deployments",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from."
                    },
                    "filter": {
                      "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2.",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of deployments to return in the response.",
                      "format": "int32"
                    }
                  },
                  "description": "Lists deployments.",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/deployments",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SasPortalListDeploymentsResponse"
                  },
                  "path": "v1alpha1/{+parent}/deployments",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "prod_tt_sasportal.customers.nodes.deployments.list",
                  "httpMethod": "GET"
                }
              }
            },
            "nodes": {
              "methods": {
                "create": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "description": "Required. The parent resource name where the node is to be created.",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "httpMethod": "POST",
                  "description": "Creates a new node.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "path": "v1alpha1/{+parent}/nodes",
                  "id": "prod_tt_sasportal.customers.nodes.nodes.create",
                  "response": {
                    "$ref": "SasPortalNode"
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "description": "Lists nodes.",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/nodes",
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "id": "prod_tt_sasportal.customers.nodes.nodes.list",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered."
                    },
                    "parent": {
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent resource name, for example, \"nodes/1\".",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of nodes to return in the response.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "devices": {
              "methods": {
                "list": {
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive.",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "prod_tt_sasportal.customers.nodes.devices.list",
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "description": "Lists devices under a node or customer.",
                  "path": "v1alpha1/{+parent}/devices"
                },
                "createSigned": {
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "id": "prod_tt_sasportal.customers.nodes.devices.createSigned",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices:createSigned",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the parent resource.",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "description": "Creates a signed device under a node or customer."
                },
                "create": {
                  "httpMethod": "POST",
                  "description": "Creates a device under a node or customer.",
                  "path": "v1alpha1/{+parent}/devices",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "description": "Required. The name of the parent resource."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "prod_tt_sasportal.customers.nodes.devices.create",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices",
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ]
                }
              }
            }
          }
        },
        "deployments": {
          "resources": {
            "devices": {
              "methods": {
                "create": {
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "description": "Creates a device under a node or customer.",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "pattern": "^customers/[^/]+/deployments/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices",
                  "path": "v1alpha1/{+parent}/devices",
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "id": "prod_tt_sasportal.customers.deployments.devices.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "path": "v1alpha1/{+parent}/devices",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive."
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^customers/[^/]+/deployments/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the parent resource."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices",
                  "description": "Lists devices under a node or customer.",
                  "id": "prod_tt_sasportal.customers.deployments.devices.list"
                },
                "createSigned": {
                  "description": "Creates a signed device under a node or customer.",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices:createSigned",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "pattern": "^customers/[^/]+/deployments/[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "prod_tt_sasportal.customers.deployments.devices.createSigned"
                }
              }
            }
          },
          "methods": {
            "create": {
              "path": "v1alpha1/{+parent}/deployments",
              "request": {
                "$ref": "SasPortalDeployment"
              },
              "id": "prod_tt_sasportal.customers.deployments.create",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Creates a new deployment.",
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/deployments",
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The parent resource name where the deployment is to be created."
                }
              },
              "httpMethod": "POST"
            },
            "move": {
              "response": {
                "$ref": "SasPortalOperation"
              },
              "path": "v1alpha1/{+name}:move",
              "description": "Moves a deployment under another node or customer.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "POST",
              "request": {
                "$ref": "SasPortalMoveDeploymentRequest"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the deployment to move.",
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "id": "prod_tt_sasportal.customers.deployments.move",
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}:move",
              "parameterOrder": [
                "name"
              ]
            },
            "patch": {
              "description": "Updates an existing deployment.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "PATCH",
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Fields to be updated."
                },
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "Output only. Resource name.",
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "required": true
                }
              },
              "path": "v1alpha1/{+name}",
              "request": {
                "$ref": "SasPortalDeployment"
              },
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.customers.deployments.patch",
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}",
              "response": {
                "$ref": "SasPortalDeployment"
              }
            },
            "list": {
              "parameters": {
                "pageSize": {
                  "description": "The maximum number of deployments to return in the response.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered."
                },
                "parent": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2.",
                  "pattern": "^customers/[^/]+$"
                }
              },
              "httpMethod": "GET",
              "id": "prod_tt_sasportal.customers.deployments.list",
              "response": {
                "$ref": "SasPortalListDeploymentsResponse"
              },
              "flatPath": "v1alpha1/customers/{customersId}/deployments",
              "parameterOrder": [
                "parent"
              ],
              "description": "Lists deployments.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+parent}/deployments"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "description": "Returns a requested deployment.",
              "parameters": {
                "name": {
                  "description": "Required. The name of the deployment.",
                  "required": true,
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "id": "prod_tt_sasportal.customers.deployments.get",
              "path": "v1alpha1/{+name}",
              "httpMethod": "GET",
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}",
              "parameterOrder": [
                "name"
              ]
            },
            "delete": {
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "description": "Deletes a deployment.",
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.customers.deployments.delete",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "description": "Required. The name of the deployment.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}"
            }
          }
        },
        "devices": {
          "methods": {
            "create": {
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "Required. The name of the parent resource.",
                  "location": "path",
                  "required": true,
                  "pattern": "^customers/[^/]+$"
                }
              },
              "request": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+parent}/devices",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.devices.create",
              "description": "Creates a device under a node or customer.",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ]
            },
            "delete": {
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "id": "prod_tt_sasportal.customers.devices.delete",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Deletes a device.",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the device.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "path": "v1alpha1/{+name}",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ]
            },
            "move": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the device to move.",
                  "location": "path"
                }
              },
              "id": "prod_tt_sasportal.customers.devices.move",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:move",
              "httpMethod": "POST",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "path": "v1alpha1/{+name}:move",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Moves a device under another node or customer."
            },
            "createSigned": {
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The name of the parent resource.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^customers/[^/]+$"
                }
              },
              "id": "prod_tt_sasportal.customers.devices.createSigned",
              "description": "Creates a signed device under a node or customer.",
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices:createSigned",
              "httpMethod": "POST",
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "parent"
              ]
            },
            "signDevice": {
              "description": "Signs a device.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:signDevice",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.devices.signDevice",
              "path": "v1alpha1/{+name}:signDevice",
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "Output only. The resource path name.",
                  "location": "path",
                  "pattern": "^customers/[^/]+/devices/[^/]+$"
                }
              },
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              }
            },
            "patch": {
              "description": "Updates a device.",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.customers.devices.patch",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "Fields to be updated.",
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "description": "Output only. The resource path name.",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "request": {
                "$ref": "SasPortalDevice"
              }
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.customers.devices.get",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the device.",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "httpMethod": "GET",
              "path": "v1alpha1/{+name}",
              "description": "Gets details about a device."
            },
            "updateSigned": {
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:updateSigned",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Updates a signed device.",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the device to update.",
                  "location": "path",
                  "pattern": "^customers/[^/]+/devices/[^/]+$"
                }
              },
              "id": "prod_tt_sasportal.customers.devices.updateSigned",
              "path": "v1alpha1/{+name}:updateSigned"
            },
            "list": {
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "parent"
              ],
              "path": "v1alpha1/{+parent}/devices",
              "id": "prod_tt_sasportal.customers.devices.list",
              "httpMethod": "GET",
              "parameters": {
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                  "type": "string",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive."
                },
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the parent resource."
                },
                "pageSize": {
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "description": "Lists devices under a node or customer."
            }
          }
        }
      },
      "methods": {
        "patch": {
          "flatPath": "v1alpha1/customers/{customersId}",
          "request": {
            "$ref": "SasPortalCustomer"
          },
          "parameterOrder": [
            "name"
          ],
          "path": "v1alpha1/{+name}",
          "description": "Updates an existing customer.",
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "parameters": {
            "updateMask": {
              "location": "query",
              "description": "Fields to be updated.",
              "type": "string",
              "format": "google-fieldmask"
            },
            "name": {
              "required": true,
              "description": "Output only. Resource name of the customer.",
              "type": "string",
              "location": "path",
              "pattern": "^customers/[^/]+$"
            }
          },
          "httpMethod": "PATCH",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "id": "prod_tt_sasportal.customers.patch"
        },
        "list": {
          "parameters": {
            "pageSize": {
              "description": "The maximum number of customers to return in the response.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A pagination token returned from a previous call to ListCustomers that indicates where this listing should continue from."
            }
          },
          "httpMethod": "GET",
          "path": "v1alpha1/customers",
          "response": {
            "$ref": "SasPortalListCustomersResponse"
          },
          "flatPath": "v1alpha1/customers",
          "description": "Returns a list of requested customers.",
          "id": "prod_tt_sasportal.customers.list",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameterOrder": []
        },
        "get": {
          "parameters": {
            "name": {
              "location": "path",
              "description": "Required. The name of the customer.",
              "pattern": "^customers/[^/]+$",
              "type": "string",
              "required": true
            }
          },
          "description": "Returns a requested customer.",
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "id": "prod_tt_sasportal.customers.get",
          "flatPath": "v1alpha1/customers/{customersId}",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "path": "v1alpha1/{+name}",
          "response": {
            "$ref": "SasPortalCustomer"
          }
        }
      }
    },
    "deployments": {
      "resources": {
        "devices": {
          "methods": {
            "signDevice": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Output only. The resource path name.",
                  "location": "path",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "required": true
                }
              },
              "description": "Signs a device.",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:signDevice",
              "path": "v1alpha1/{+name}:signDevice",
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.deployments.devices.signDevice"
            },
            "patch": {
              "request": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}",
              "id": "prod_tt_sasportal.deployments.devices.patch",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "description": "Output only. The resource path name.",
                  "location": "path",
                  "type": "string"
                },
                "updateMask": {
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask",
                  "description": "Fields to be updated."
                }
              },
              "description": "Updates a device.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "response": {
                "$ref": "SasPortalDevice"
              }
            },
            "get": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.deployments.devices.get",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the device.",
                  "type": "string",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Gets details about a device.",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+name}"
            },
            "updateSigned": {
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:updateSigned",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Updates a signed device.",
              "id": "prod_tt_sasportal.deployments.devices.updateSigned",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "httpMethod": "PATCH",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+name}:updateSigned",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the device to update.",
                  "location": "path",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "type": "string"
                }
              }
            },
            "move": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Moves a device under another node or customer.",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:move",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "httpMethod": "POST",
              "id": "prod_tt_sasportal.deployments.devices.move",
              "path": "v1alpha1/{+name}:move",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the device to move.",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$"
                }
              }
            },
            "delete": {
              "parameters": {
                "name": {
                  "description": "Required. The name of the device.",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.deployments.devices.delete",
              "description": "Deletes a device.",
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}"
            }
          }
        }
      },
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameters": {
            "name": {
              "pattern": "^deployments/[^/]+$",
              "type": "string",
              "location": "path",
              "description": "Required. The name of the deployment.",
              "required": true
            }
          },
          "path": "v1alpha1/{+name}",
          "id": "prod_tt_sasportal.deployments.get",
          "flatPath": "v1alpha1/deployments/{deploymentsId}",
          "response": {
            "$ref": "SasPortalDeployment"
          },
          "httpMethod": "GET",
          "description": "Returns a requested deployment.",
          "parameterOrder": [
            "name"
          ]
        }
      }
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/userinfo.email": {
          "description": "See your primary Google Account email address"
        }
      }
    }
  },
  "title": "SAS Portal API (Testing)",
  "mtlsRootUrl": "https://prod-tt-sasportal.mtls.googleapis.com/",
  "ownerName": "Google",
  "discoveryVersion": "v1",
  "rootUrl": "https://prod-tt-sasportal.googleapis.com/",
  "canonicalName": "SAS Portal Testing",
  "kind": "discovery#restDescription",
  "fullyEncodeReservedExpansion": true,
  "ownerDomain": "google.com",
  "id": "prod_tt_sasportal:v1alpha1",
  "basePath": "",
  "protocol": "rest",
  "revision": "20210526",
  "documentationLink": "https://developers.google.com/spectrum-access-system/",
  "name": "prod_tt_sasportal",
  "schemas": {
    "SasPortalGenerateSecretRequest": {
      "description": "Request for GenerateSecret.",
      "properties": {},
      "type": "object",
      "id": "SasPortalGenerateSecretRequest"
    },
    "SasPortalDevice": {
      "properties": {
        "serialNumber": {
          "description": "A serial number assigned to the device by the device manufacturer.",
          "type": "string"
        },
        "state": {
          "description": "Output only. Device state.",
          "enum": [
            "DEVICE_STATE_UNSPECIFIED",
            "RESERVED",
            "REGISTERED",
            "DEREGISTERED"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Device created in the SAS Portal, however, not yet registered with SAS.",
            "Device registered with SAS.",
            "Device de-registered with SAS."
          ],
          "type": "string"
        },
        "activeConfig": {
          "$ref": "SasPortalDeviceConfig",
          "description": "Output only. Current configuration of the device as registered to the SAS."
        },
        "fccId": {
          "description": "The FCC identifier of the device.",
          "type": "string"
        },
        "grantRangeAllowlists": {
          "items": {
            "$ref": "SasPortalFrequencyRange"
          },
          "description": "Only ranges within the allowlists are available for new grants.",
          "type": "array"
        },
        "grants": {
          "description": "Output only. Grants held by the device.",
          "type": "array",
          "items": {
            "$ref": "SasPortalDeviceGrant"
          }
        },
        "displayName": {
          "type": "string",
          "description": "Device display name."
        },
        "preloadedConfig": {
          "description": "Configuration of the device, as specified via SAS Portal API.",
          "$ref": "SasPortalDeviceConfig"
        },
        "deviceMetadata": {
          "$ref": "SasPortalDeviceMetadata",
          "description": "Device parameters that can be overridden by both SAS Portal and SAS registration requests."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource path name."
        },
        "currentChannels": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. Current channels with scores.",
          "items": {
            "$ref": "SasPortalChannelWithScore"
          }
        }
      },
      "type": "object",
      "id": "SasPortalDevice"
    },
    "SasPortalDeviceMetadata": {
      "id": "SasPortalDeviceMetadata",
      "properties": {},
      "description": "Device data overridable by both SAS Portal and registration requests.",
      "type": "object"
    },
    "SasPortalUpdateSignedDeviceRequest": {
      "id": "SasPortalUpdateSignedDeviceRequest",
      "description": "Request for UpdateSignedDevice.",
      "properties": {
        "encodedDevice": {
          "description": "Required. The JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set.",
          "type": "string",
          "format": "byte"
        },
        "installerId": {
          "description": "Required. Unique installer ID (CPI ID) from the Certified Professional Installers database.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SasPortalTestPermissionsRequest": {
      "id": "SasPortalTestPermissionsRequest",
      "properties": {
        "resource": {
          "description": "Required. The resource for which the permissions are being requested.",
          "type": "string"
        },
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Request message for `TestPermissions` method."
    },
    "SasPortalListNodesResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "description": "The nodes that match the request.",
          "type": "array",
          "items": {
            "$ref": "SasPortalNode"
          }
        },
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListNodes that indicates from where listing should continue. If the field is missing or empty, it means there is no more nodes.",
          "type": "string"
        }
      },
      "description": "Response for ListNodes.",
      "id": "SasPortalListNodesResponse"
    },
    "SasPortalDeviceConfig": {
      "type": "object",
      "description": "Information about the device configuration.",
      "properties": {
        "installationParams": {
          "$ref": "SasPortalInstallationParams",
          "description": "Installation parameters for the device."
        },
        "state": {
          "enum": [
            "DEVICE_CONFIG_STATE_UNSPECIFIED",
            "DRAFT",
            "FINAL"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "State of the configuration."
        },
        "airInterface": {
          "$ref": "SasPortalDeviceAirInterface",
          "description": "Information about this device's air interface."
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The last time the device configuration was edited.",
          "format": "google-datetime"
        },
        "isSigned": {
          "description": "Output only. Whether the configuration has been signed by a CPI.",
          "type": "boolean"
        },
        "measurementCapabilities": {
          "description": "Measurement reporting capabilities of the device.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "",
              "",
              ""
            ],
            "enum": [
              "MEASUREMENT_CAPABILITY_UNSPECIFIED",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT"
            ]
          }
        },
        "model": {
          "$ref": "SasPortalDeviceModel",
          "description": "Information about this device model."
        },
        "callSign": {
          "description": "The call sign of the device operator.",
          "type": "string"
        },
        "category": {
          "description": "FCC category of the device.",
          "type": "string",
          "enum": [
            "DEVICE_CATEGORY_UNSPECIFIED",
            "DEVICE_CATEGORY_A",
            "DEVICE_CATEGORY_B"
          ],
          "enumDescriptions": [
            "Unspecified device category.",
            "Category A.",
            "Category B."
          ]
        },
        "userId": {
          "type": "string",
          "description": "The identifier of a device user."
        }
      },
      "id": "SasPortalDeviceConfig"
    },
    "SasPortalNode": {
      "id": "SasPortalNode",
      "properties": {
        "name": {
          "description": "Output only. Resource name.",
          "type": "string"
        },
        "sasUserIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "User ids used by the devices belonging to this node."
        },
        "displayName": {
          "type": "string",
          "description": "The node's display name."
        }
      },
      "description": "The Node.",
      "type": "object"
    },
    "SasPortalEmpty": {
      "id": "SasPortalEmpty",
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "SasPortalInstallationParams": {
      "type": "object",
      "description": "Information about the device installation parameters.",
      "properties": {
        "antennaBeamwidth": {
          "description": "3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices.",
          "type": "integer",
          "format": "int32"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator."
        },
        "horizontalAccuracy": {
          "format": "double",
          "description": "A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters.",
          "type": "number"
        },
        "eirpCapability": {
          "description": "This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category.",
          "type": "integer",
          "format": "int32"
        },
        "antennaGain": {
          "type": "integer",
          "format": "int32",
          "description": "Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive."
        },
        "longitude": {
          "format": "double",
          "description": "Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian.",
          "type": "number"
        },
        "verticalAccuracy": {
          "description": "A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters.",
          "type": "number",
          "format": "double"
        },
        "antennaAzimuth": {
          "description": "Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices.",
          "format": "int32",
          "type": "integer"
        },
        "height": {
          "type": "number",
          "description": "Device antenna height in meters. When the `heightType` parameter value is \"AGL\", the antenna height should be given relative to ground level. When the `heightType` parameter value is \"AMSL\", it is given with respect to WGS84 datum.",
          "format": "double"
        },
        "cpeCbsdIndication": {
          "description": "If present, this parameter specifies whether the CBSD is a CPE-CBSD or not.",
          "type": "boolean"
        },
        "antennaDowntilt": {
          "type": "integer",
          "description": "Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices.",
          "format": "int32"
        },
        "indoorDeployment": {
          "description": "Whether the device antenna is indoor or not. `true`: indoor. `false`: outdoor.",
          "type": "boolean"
        },
        "heightType": {
          "enumDescriptions": [
            "Unspecified height type.",
            "AGL height is measured relative to the ground level.",
            "AMSL height is measured relative to the mean sea level."
          ],
          "description": "Specifies how the height is measured.",
          "enum": [
            "HEIGHT_TYPE_UNSPECIFIED",
            "HEIGHT_TYPE_AGL",
            "HEIGHT_TYPE_AMSL"
          ],
          "type": "string"
        },
        "antennaModel": {
          "description": "If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets.",
          "type": "string"
        }
      },
      "id": "SasPortalInstallationParams"
    },
    "SasPortalMoveNodeRequest": {
      "description": "Request for MoveNode.",
      "type": "object",
      "id": "SasPortalMoveNodeRequest",
      "properties": {
        "destination": {
          "type": "string",
          "description": "Required. The name of the new parent resource node or customer to reparent the node under."
        }
      }
    },
    "SasPortalGenerateSecretResponse": {
      "properties": {
        "secret": {
          "type": "string",
          "description": "The secret generated by the string and used by ValidateInstaller."
        }
      },
      "type": "object",
      "description": "Response for GenerateSecret.",
      "id": "SasPortalGenerateSecretResponse"
    },
    "SasPortalSetPolicyRequest": {
      "properties": {
        "resource": {
          "description": "Required. The resource for which the policy is being specified. This policy replaces any existing policy.",
          "type": "string"
        },
        "policy": {
          "description": "Required. The policy to be applied to the `resource`.",
          "$ref": "SasPortalPolicy"
        },
        "disableNotification": {
          "description": "Optional. Set the field as true when we would like to disable the onboarding notification.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Request message for `SetPolicy` method.",
      "id": "SasPortalSetPolicyRequest"
    },
    "SasPortalCreateSignedDeviceRequest": {
      "id": "SasPortalCreateSignedDeviceRequest",
      "properties": {
        "encodedDevice": {
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set.",
          "type": "string",
          "format": "byte"
        },
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer id (CPI ID) from the Certified Professional Installers database."
        }
      },
      "description": "Request for CreateSignedDevice.",
      "type": "object"
    },
    "SasPortalListDevicesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListDevices that indicates from where listing should continue. If the field is missing or empty, it means there is no more devices.",
          "type": "string"
        },
        "devices": {
          "description": "The devices that match the request.",
          "type": "array",
          "items": {
            "$ref": "SasPortalDevice"
          }
        }
      },
      "type": "object",
      "description": "Response for ListDevices.",
      "id": "SasPortalListDevicesResponse"
    },
    "SasPortalDeployment": {
      "id": "SasPortalDeployment",
      "type": "object",
      "properties": {
        "sasUserIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "User ID used by the devices belonging to this deployment. Each deployment should be associated with one unique user ID."
        },
        "frns": {
          "description": "Output only. The FRNs copied from its direct parent.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultBillingMode": {
          "type": "string",
          "description": "Default billing mode for the deployment and devices under it.",
          "enumDescriptions": [
            "Billing mode has not been specified.",
            "Price is based on category of CBSD: Category A, Category B registered with SAS.",
            "Price is based on type of CBSD: Base station or CPE."
          ],
          "enum": [
            "BILLING_MODE_UNSPECIFIED",
            "MOBILE",
            "FIXED_WIRELESS"
          ]
        },
        "allowedBillingModes": {
          "items": {
            "enumDescriptions": [
              "Billing mode has not been specified.",
              "Price is based on category of CBSD: Category A, Category B registered with SAS.",
              "Price is based on type of CBSD: Base station or CPE."
            ],
            "enum": [
              "BILLING_MODE_UNSPECIFIED",
              "MOBILE",
              "FIXED_WIRELESS"
            ],
            "type": "string"
          },
          "type": "array",
          "description": "The allowed billing modes under this deployment."
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The deployment's display name."
        }
      },
      "description": "The Deployment."
    },
    "SasPortalChannelWithScore": {
      "description": "The channel with score.",
      "id": "SasPortalChannelWithScore",
      "type": "object",
      "properties": {
        "frequencyRange": {
          "description": "The frequency range of the channel.",
          "$ref": "SasPortalFrequencyRange"
        },
        "score": {
          "description": "The channel score, normalized to be in [0,100].",
          "type": "number",
          "format": "double"
        }
      }
    },
    "SasPortalDeviceAirInterface": {
      "id": "SasPortalDeviceAirInterface",
      "type": "object",
      "description": "Information about the device's air interface.",
      "properties": {
        "supportedSpec": {
          "description": "Optional. This field is related to the `radioTechnology` and provides the air interface specification that the CBSD is compliant with at the time of registration.",
          "type": "string"
        },
        "radioTechnology": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "Conditional. This field specifies the radio access technology that is used for the CBSD.",
          "enum": [
            "RADIO_TECHNOLOGY_UNSPECIFIED",
            "E_UTRA",
            "CAMBIUM_NETWORKS",
            "FOUR_G_BBW_SAA_1",
            "NR",
            "DOODLE_CBRS",
            "CW",
            "REDLINE",
            "TARANA_WIRELESS"
          ],
          "type": "string"
        }
      }
    },
    "SasPortalPolicy": {
      "type": "object",
      "properties": {
        "assignments": {
          "items": {
            "$ref": "SasPortalAssignment"
          },
          "description": "List of assignments",
          "type": "array"
        },
        "etag": {
          "description": "The etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to GetPolicy, and systems are expected to put that etag in the request to SetPolicy to ensure that their change will be applied to the same version of the policy. If no etag is provided in the call to GetPolicy, then the existing policy is overwritten blindly.",
          "format": "byte",
          "type": "string"
        }
      },
      "id": "SasPortalPolicy",
      "description": "Defines an access control policy to the resources."
    },
    "SasPortalDeviceGrant": {
      "description": "Device grant. It is an authorization provided by the Spectrum Access System to a device to transmit using specified operating parameters after a successful heartbeat by the device.",
      "id": "SasPortalDeviceGrant",
      "type": "object",
      "properties": {
        "grantId": {
          "description": "Grant Id.",
          "type": "string"
        },
        "suspensionReason": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If the grant is suspended, the reason(s) for suspension."
        },
        "moveList": {
          "description": "The DPA move lists on which this grant appears.",
          "type": "array",
          "items": {
            "$ref": "SasPortalDpaMoveList"
          }
        },
        "maxEirp": {
          "format": "double",
          "type": "number",
          "description": "Maximum Equivalent Isotropically Radiated Power (EIRP) permitted by the grant. The maximum EIRP is in units of dBm/MHz. The value of `maxEirp` represents the average (RMS) EIRP that would be measured by the procedure defined in FCC part 96.41(e)(3)."
        },
        "frequencyRange": {
          "$ref": "SasPortalFrequencyRange",
          "description": "The transmission frequency range."
        },
        "channelType": {
          "description": "Type of channel used.",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "CHANNEL_TYPE_UNSPECIFIED",
            "CHANNEL_TYPE_GAA",
            "CHANNEL_TYPE_PAL"
          ]
        },
        "state": {
          "description": "State of the grant.",
          "enum": [
            "GRANT_STATE_UNSPECIFIED",
            "GRANT_STATE_GRANTED",
            "GRANT_STATE_TERMINATED",
            "GRANT_STATE_SUSPENDED",
            "GRANT_STATE_AUTHORIZED",
            "GRANT_STATE_EXPIRED"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "The grant has been granted but the device is not heartbeating on it.",
            "The grant has been terminated by the SAS.",
            "The grant has been suspended by the SAS.",
            "The device is currently transmitting.",
            "The grant has expired."
          ]
        },
        "expireTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The expiration time of the grant."
        }
      }
    },
    "SasPortalFrequencyRange": {
      "description": "Frequency range from `low_frequency` to `high_frequency`.",
      "type": "object",
      "properties": {
        "highFrequencyMhz": {
          "type": "number",
          "format": "double",
          "description": "The highest frequency of the frequency range in MHz."
        },
        "lowFrequencyMhz": {
          "format": "double",
          "type": "number",
          "description": "The lowest frequency of the frequency range in MHz."
        }
      },
      "id": "SasPortalFrequencyRange"
    },
    "SasPortalDpaMoveList": {
      "properties": {
        "dpaId": {
          "type": "string",
          "description": "The ID of the DPA."
        },
        "frequencyRange": {
          "description": "The frequency range that the move list affects.",
          "$ref": "SasPortalFrequencyRange"
        }
      },
      "description": "An entry in a DPA's move list.",
      "id": "SasPortalDpaMoveList",
      "type": "object"
    },
    "SasPortalMoveDeploymentRequest": {
      "description": "Request for MoveDeployment.",
      "type": "object",
      "properties": {
        "destination": {
          "description": "Required. The name of the new parent resource node or customer to reparent the deployment under.",
          "type": "string"
        }
      },
      "id": "SasPortalMoveDeploymentRequest"
    },
    "SasPortalValidateInstallerResponse": {
      "id": "SasPortalValidateInstallerResponse",
      "properties": {},
      "type": "object",
      "description": "Response for ValidateInstaller."
    },
    "SasPortalAssignment": {
      "type": "object",
      "description": "Associates `members` with a `role`.",
      "properties": {
        "role": {
          "description": "Required. Role that is assigned to `members`.",
          "type": "string"
        },
        "members": {
          "items": {
            "type": "string"
          },
          "description": "The identities the role is assigned to. It can have the following values: * `{user_email}`: An email address that represents a specific Google account. For example: `alice@gmail.com`. * `{group_email}`: An email address that represents a Google group. For example, `viewers@gmail.com`.",
          "type": "array"
        }
      },
      "id": "SasPortalAssignment"
    },
    "SasPortalStatus": {
      "type": "object",
      "id": "SasPortalStatus",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "SasPortalTestPermissionsResponse": {
      "id": "SasPortalTestPermissionsResponse",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A set of permissions that the caller is allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Response message for `TestPermissions` method."
    },
    "SasPortalListDeploymentsResponse": {
      "id": "SasPortalListDeploymentsResponse",
      "type": "object",
      "description": "Response for ListDeployments.",
      "properties": {
        "deployments": {
          "description": "The deployments that match the request.",
          "type": "array",
          "items": {
            "$ref": "SasPortalDeployment"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token returned from a previous call to ListDeployments that indicates from where listing should continue. If the field is missing or empty, it means there are no more deployments."
        }
      }
    },
    "SasPortalListCustomersResponse": {
      "id": "SasPortalListCustomersResponse",
      "properties": {
        "customers": {
          "description": "The list of customers that match the request.",
          "items": {
            "$ref": "SasPortalCustomer"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListCustomers that indicates from where listing should continue. If the field is missing or empty, it means there are no more customers.",
          "type": "string"
        }
      },
      "description": "Response for `ListCustomers`.",
      "type": "object"
    },
    "SasPortalCustomer": {
      "description": "Entity representing a SAS customer.",
      "type": "object",
      "properties": {
        "sasUserIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "User IDs used by the devices belonging to this customer."
        },
        "displayName": {
          "description": "Required. Name of the organization that the customer entity represents.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name of the customer."
        }
      },
      "id": "SasPortalCustomer"
    },
    "SasPortalValidateInstallerRequest": {
      "type": "object",
      "description": "Request for ValidateInstaller.",
      "properties": {
        "secret": {
          "description": "Required. Secret returned by the GenerateSecret.",
          "type": "string"
        },
        "encodedSecret": {
          "type": "string",
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must include a \"secret\" claim whose value is the secret."
        },
        "installerId": {
          "description": "Required. Unique installer id (CPI ID) from the Certified Professional Installers database.",
          "type": "string"
        }
      },
      "id": "SasPortalValidateInstallerRequest"
    },
    "SasPortalMoveDeviceRequest": {
      "id": "SasPortalMoveDeviceRequest",
      "properties": {
        "destination": {
          "type": "string",
          "description": "Required. The name of the new parent resource node or customer to reparent the device under."
        }
      },
      "type": "object",
      "description": "Request for MoveDevice."
    },
    "SasPortalOperation": {
      "type": "object",
      "id": "SasPortalOperation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "$ref": "SasPortalStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        }
      }
    },
    "SasPortalGetPolicyRequest": {
      "description": "Request message for `GetPolicy` method.",
      "type": "object",
      "id": "SasPortalGetPolicyRequest",
      "properties": {
        "resource": {
          "description": "Required. The resource for which the policy is being requested.",
          "type": "string"
        }
      }
    },
    "SasPortalDeviceModel": {
      "description": "Information about the model of the device.",
      "properties": {
        "hardwareVersion": {
          "description": "The hardware version of the device.",
          "type": "string"
        },
        "vendor": {
          "description": "The name of the device vendor.",
          "type": "string"
        },
        "firmwareVersion": {
          "type": "string",
          "description": "The firmware version of the device."
        },
        "softwareVersion": {
          "type": "string",
          "description": "The software version of the device."
        },
        "name": {
          "type": "string",
          "description": "The name of the device model."
        }
      },
      "id": "SasPortalDeviceModel",
      "type": "object"
    },
    "SasPortalSignDeviceRequest": {
      "description": "Request for SignDevice.",
      "id": "SasPortalSignDeviceRequest",
      "properties": {
        "device": {
          "description": "Required. The device to sign. The device fields name, fcc_id and serial_number must be set. The user_id field must be set.",
          "$ref": "SasPortalDevice"
        }
      },
      "type": "object"
    }
  },
  "description": "",
  "parameters": {
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "alt": {
      "location": "query",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response."
    }
  },
  "version": "v1alpha1",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "batchPath": "batch",
  "version_module": true
}

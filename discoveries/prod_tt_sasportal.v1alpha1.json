{
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "resources": {
    "nodes": {
      "methods": {
        "get": {
          "response": {
            "$ref": "SasPortalNode"
          },
          "description": "Returns a requested node.",
          "flatPath": "v1alpha1/nodes/{nodesId}",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "required": true,
              "pattern": "^nodes/[^/]+$",
              "location": "path",
              "description": "Required. The name of the node.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "parameterOrder": [
            "name"
          ],
          "id": "prod_tt_sasportal.nodes.get",
          "path": "v1alpha1/{+name}"
        }
      },
      "resources": {
        "devices": {
          "methods": {
            "move": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the device to move.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$"
                }
              },
              "path": "v1alpha1/{+name}:move",
              "httpMethod": "POST",
              "description": "Moves a device under another node or customer.",
              "id": "prod_tt_sasportal.nodes.devices.move",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:move",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalOperation"
              }
            },
            "signDevice": {
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:signDevice",
              "id": "prod_tt_sasportal.nodes.devices.signDevice",
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "description": "Signs a device.",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "Output only. The resource path name.",
                  "required": true,
                  "pattern": "^nodes/[^/]+/devices/[^/]+$"
                }
              },
              "path": "v1alpha1/{+name}:signDevice"
            },
            "patch": {
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Fields to be updated."
                },
                "name": {
                  "type": "string",
                  "description": "Output only. The resource path name.",
                  "required": true,
                  "location": "path",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$"
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "description": "Updates a device.",
              "id": "prod_tt_sasportal.nodes.devices.patch",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+name}",
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              }
            },
            "delete": {
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.nodes.devices.delete",
              "description": "Deletes a device.",
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. The name of the device.",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$"
                }
              },
              "httpMethod": "DELETE",
              "response": {
                "$ref": "SasPortalEmpty"
              }
            },
            "get": {
              "description": "Gets details about a device.",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "id": "prod_tt_sasportal.nodes.devices.get",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "description": "Required. The name of the device."
                }
              },
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "httpMethod": "GET"
            },
            "createSigned": {
              "response": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:createSigned",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the parent resource.",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^nodes/[^/]+$"
                }
              },
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "description": "Creates a signed device under a node or customer.",
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "id": "prod_tt_sasportal.nodes.devices.createSigned"
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "description": "Lists devices under a node or customer.",
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^nodes/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the parent resource."
                },
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                  "type": "integer",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                  "type": "string",
                  "location": "query"
                },
                "filter": {
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive.",
                  "type": "string",
                  "location": "query"
                }
              },
              "httpMethod": "GET",
              "path": "v1alpha1/{+parent}/devices",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "id": "prod_tt_sasportal.nodes.devices.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              }
            },
            "create": {
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "description": "Creates a device under a node or customer.",
              "path": "v1alpha1/{+parent}/devices",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^nodes/[^/]+$",
                  "required": true
                }
              },
              "id": "prod_tt_sasportal.nodes.devices.create",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "request": {
                "$ref": "SasPortalDevice"
              }
            },
            "updateSigned": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the device to update.",
                  "type": "string",
                  "location": "path"
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:updateSigned",
              "httpMethod": "PATCH",
              "description": "Updates a signed device.",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+name}:updateSigned",
              "id": "prod_tt_sasportal.nodes.devices.updateSigned",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              }
            }
          }
        },
        "nodes": {
          "resources": {
            "devices": {
              "methods": {
                "create": {
                  "path": "v1alpha1/{+parent}/devices",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "description": "Creates a device under a node or customer.",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.create"
                },
                "list": {
                  "id": "prod_tt_sasportal.nodes.nodes.devices.list",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/devices",
                  "description": "Lists devices under a node or customer.",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ]
                },
                "createSigned": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the parent resource."
                    }
                  },
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "httpMethod": "POST",
                  "description": "Creates a signed device under a node or customer.",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.createSigned",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:createSigned"
                }
              }
            },
            "deployments": {
              "methods": {
                "list": {
                  "description": "Lists deployments.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of deployments to return in the response.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2.",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                    },
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "SasPortalListDeploymentsResponse"
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/deployments",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "id": "prod_tt_sasportal.nodes.nodes.deployments.list",
                  "path": "v1alpha1/{+parent}/deployments",
                  "httpMethod": "GET"
                },
                "create": {
                  "request": {
                    "$ref": "SasPortalDeployment"
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/deployments",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "path": "v1alpha1/{+parent}/deployments",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource name where the deployment is to be created.",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "prod_tt_sasportal.nodes.nodes.deployments.create",
                  "response": {
                    "$ref": "SasPortalDeployment"
                  },
                  "description": "Creates a new deployment."
                }
              }
            },
            "nodes": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "path": "v1alpha1/{+parent}/nodes",
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.list",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of nodes to return in the response."
                    },
                    "parent": {
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "description": "Required. The parent resource name, for example, \"nodes/1\".",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "description": "Lists nodes.",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes"
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.create",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent resource name where the node is to be created.",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "description": "Creates a new node.",
                  "path": "v1alpha1/{+parent}/nodes",
                  "response": {
                    "$ref": "SasPortalNode"
                  }
                }
              }
            }
          },
          "methods": {
            "patch": {
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "request": {
                "$ref": "SasPortalNode"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "id": "prod_tt_sasportal.nodes.nodes.patch",
              "httpMethod": "PATCH",
              "parameters": {
                "updateMask": {
                  "description": "Fields to be updated.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                },
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Output only. Resource name.",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                }
              },
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalNode"
              },
              "description": "Updates an existing node."
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the node.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.nodes.nodes.get",
              "httpMethod": "GET",
              "response": {
                "$ref": "SasPortalNode"
              },
              "description": "Returns a requested node."
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "id": "prod_tt_sasportal.nodes.nodes.list",
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of nodes to return in the response."
                },
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "required": true,
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "location": "path",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from.",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered."
                }
              },
              "path": "v1alpha1/{+parent}/nodes",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "description": "Lists nodes."
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "path": "v1alpha1/{+name}",
              "description": "Deletes a node.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "id": "prod_tt_sasportal.nodes.nodes.delete",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the node.",
                  "location": "path"
                }
              }
            },
            "move": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "id": "prod_tt_sasportal.nodes.nodes.move",
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "response": {
                "$ref": "SasPortalOperation"
              },
              "description": "Moves a node under another node or customer.",
              "httpMethod": "POST",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}:move",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "description": "Required. The name of the node to move.",
                  "type": "string"
                }
              },
              "path": "v1alpha1/{+name}:move"
            },
            "create": {
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "id": "prod_tt_sasportal.nodes.nodes.create",
              "request": {
                "$ref": "SasPortalNode"
              },
              "path": "v1alpha1/{+parent}/nodes",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The parent resource name where the node is to be created.",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "SasPortalNode"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "description": "Creates a new node."
            }
          }
        },
        "deployments": {
          "methods": {
            "patch": {
              "request": {
                "$ref": "SasPortalDeployment"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "id": "prod_tt_sasportal.nodes.deployments.patch",
              "description": "Updates an existing deployment.",
              "parameters": {
                "updateMask": {
                  "description": "Fields to be updated.",
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "type": "string",
                  "description": "Output only. Resource name."
                }
              },
              "httpMethod": "PATCH",
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}",
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalDeployment"
              }
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "description": "Returns a requested deployment.",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the deployment.",
                  "location": "path",
                  "type": "string"
                }
              },
              "id": "prod_tt_sasportal.nodes.deployments.get",
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "description": "Lists deployments.",
              "id": "prod_tt_sasportal.nodes.deployments.list",
              "httpMethod": "GET",
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments",
              "response": {
                "$ref": "SasPortalListDeploymentsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "path": "v1alpha1/{+parent}/deployments",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from."
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of deployments to return in the response.",
                  "type": "integer"
                },
                "parent": {
                  "type": "string",
                  "pattern": "^nodes/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2."
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered."
                }
              }
            },
            "delete": {
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "type": "string",
                  "description": "Required. The name of the deployment.",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "description": "Deletes a deployment.",
              "id": "prod_tt_sasportal.nodes.deployments.delete"
            },
            "move": {
              "request": {
                "$ref": "SasPortalMoveDeploymentRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "path": "v1alpha1/{+name}:move",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the deployment to move.",
                  "location": "path",
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$"
                }
              },
              "description": "Moves a deployment under another node or customer.",
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}:move",
              "id": "prod_tt_sasportal.nodes.deployments.move",
              "response": {
                "$ref": "SasPortalOperation"
              }
            }
          },
          "resources": {
            "devices": {
              "methods": {
                "list": {
                  "id": "prod_tt_sasportal.nodes.deployments.devices.list",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "path": "v1alpha1/{+parent}/devices",
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "description": "Lists devices under a node or customer.",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "type": "integer",
                      "format": "int32"
                    },
                    "parent": {
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "createSigned": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "id": "prod_tt_sasportal.nodes.deployments.devices.createSigned",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "description": "Creates a signed device under a node or customer.",
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices:createSigned"
                },
                "create": {
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "description": "Creates a device under a node or customer.",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "location": "path",
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$"
                    }
                  },
                  "id": "prod_tt_sasportal.nodes.deployments.devices.create",
                  "path": "v1alpha1/{+parent}/devices",
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices"
                }
              }
            }
          }
        }
      }
    },
    "deployments": {
      "resources": {
        "devices": {
          "methods": {
            "patch": {
              "request": {
                "$ref": "SasPortalDevice"
              },
              "description": "Updates a device.",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}",
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query",
                  "description": "Fields to be updated."
                },
                "name": {
                  "location": "path",
                  "description": "Output only. The resource path name.",
                  "type": "string",
                  "required": true,
                  "pattern": "^deployments/[^/]+/devices/[^/]+$"
                }
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.deployments.devices.patch",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "path": "v1alpha1/{+name}",
              "httpMethod": "PATCH"
            },
            "move": {
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device to move."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "description": "Moves a device under another node or customer.",
              "id": "prod_tt_sasportal.deployments.devices.move",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:move",
              "path": "v1alpha1/{+name}:move",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST"
            },
            "signDevice": {
              "httpMethod": "POST",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:signDevice",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}:signDevice",
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "parameters": {
                "name": {
                  "description": "Output only. The resource path name.",
                  "required": true,
                  "location": "path",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "type": "string"
                }
              },
              "id": "prod_tt_sasportal.deployments.devices.signDevice",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "description": "Signs a device."
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "description": "Gets details about a device.",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the device.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$"
                }
              },
              "httpMethod": "GET",
              "id": "prod_tt_sasportal.deployments.devices.get",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              }
            },
            "updateSigned": {
              "path": "v1alpha1/{+name}:updateSigned",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device to update.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Updates a signed device.",
              "id": "prod_tt_sasportal.deployments.devices.updateSigned",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:updateSigned",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              }
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device.",
                  "type": "string",
                  "location": "path"
                }
              },
              "httpMethod": "DELETE",
              "path": "v1alpha1/{+name}",
              "description": "Deletes a device.",
              "id": "prod_tt_sasportal.deployments.devices.delete",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              }
            }
          }
        }
      },
      "methods": {
        "get": {
          "response": {
            "$ref": "SasPortalDeployment"
          },
          "httpMethod": "GET",
          "description": "Returns a requested deployment.",
          "path": "v1alpha1/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "flatPath": "v1alpha1/deployments/{deploymentsId}",
          "parameters": {
            "name": {
              "pattern": "^deployments/[^/]+$",
              "description": "Required. The name of the deployment.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "id": "prod_tt_sasportal.deployments.get",
          "parameterOrder": [
            "name"
          ]
        }
      }
    },
    "customers": {
      "methods": {
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "path": "v1alpha1/customers",
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "A pagination token returned from a previous call to ListCustomers that indicates where this listing should continue from."
            },
            "pageSize": {
              "location": "query",
              "type": "integer",
              "description": "The maximum number of customers to return in the response.",
              "format": "int32"
            }
          },
          "id": "prod_tt_sasportal.customers.list",
          "httpMethod": "GET",
          "parameterOrder": [],
          "flatPath": "v1alpha1/customers",
          "response": {
            "$ref": "SasPortalListCustomersResponse"
          },
          "description": "Returns a list of requested customers."
        },
        "setupSasAnalytics": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "parameters": {},
          "request": {
            "$ref": "SasPortalSetupSasAnalyticsRequest"
          },
          "httpMethod": "POST",
          "path": "v1alpha1/customers:setupSasAnalytics",
          "flatPath": "v1alpha1/customers:setupSasAnalytics",
          "id": "prod_tt_sasportal.customers.setupSasAnalytics",
          "description": "Setups the a GCP Project to receive SAS Analytics messages via GCP Pub/Sub with a subscription to BigQuery. All the Pub/Sub topics and BigQuery tables are created automatically as part of this service.",
          "response": {
            "$ref": "SasPortalOperation"
          },
          "parameterOrder": []
        },
        "get": {
          "flatPath": "v1alpha1/customers/{customersId}",
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "parameterOrder": [
            "name"
          ],
          "description": "Returns a requested customer.",
          "id": "prod_tt_sasportal.customers.get",
          "httpMethod": "GET",
          "path": "v1alpha1/{+name}",
          "parameters": {
            "name": {
              "required": true,
              "description": "Required. The name of the customer.",
              "pattern": "^customers/[^/]+$",
              "location": "path",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ]
        },
        "checkHasProvisionedDeployment": {
          "description": "Checks whether a SAS deployment for the authentication context exists.",
          "parameterOrder": [],
          "path": "v1alpha1/customers:checkHasProvisionedDeployment",
          "parameters": {},
          "response": {
            "$ref": "SasPortalCheckHasProvisionedDeploymentResponse"
          },
          "id": "prod_tt_sasportal.customers.checkHasProvisionedDeployment",
          "flatPath": "v1alpha1/customers:checkHasProvisionedDeployment",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "httpMethod": "GET"
        },
        "listLegacyOrganizations": {
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "parameters": {},
          "parameterOrder": [],
          "id": "prod_tt_sasportal.customers.listLegacyOrganizations",
          "response": {
            "$ref": "SasPortalListLegacyOrganizationsResponse"
          },
          "description": "Checks whether account is legacy.",
          "path": "v1alpha1/customers:listLegacyOrganizations",
          "flatPath": "v1alpha1/customers:listLegacyOrganizations"
        },
        "patch": {
          "flatPath": "v1alpha1/customers/{customersId}",
          "request": {
            "$ref": "SasPortalCustomer"
          },
          "description": "Updates an existing customer.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "path": "v1alpha1/{+name}",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "httpMethod": "PATCH",
          "parameters": {
            "updateMask": {
              "format": "google-fieldmask",
              "description": "Fields to be updated.",
              "location": "query",
              "type": "string"
            },
            "name": {
              "pattern": "^customers/[^/]+$",
              "required": true,
              "location": "path",
              "description": "Output only. Resource name of the customer.",
              "type": "string"
            }
          },
          "id": "prod_tt_sasportal.customers.patch"
        },
        "provisionDeployment": {
          "request": {
            "$ref": "SasPortalProvisionDeploymentRequest"
          },
          "id": "prod_tt_sasportal.customers.provisionDeployment",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "description": "Creates a new SAS deployment through the GCP workflow. Creates a SAS organization if an organization match is not found.",
          "httpMethod": "POST",
          "parameterOrder": [],
          "flatPath": "v1alpha1/customers:provisionDeployment",
          "parameters": {},
          "path": "v1alpha1/customers:provisionDeployment",
          "response": {
            "$ref": "SasPortalProvisionDeploymentResponse"
          }
        },
        "migrateOrganization": {
          "id": "prod_tt_sasportal.customers.migrateOrganization",
          "request": {
            "$ref": "SasPortalMigrateOrganizationRequest"
          },
          "flatPath": "v1alpha1/customers:migrateOrganization",
          "httpMethod": "POST",
          "parameterOrder": [],
          "path": "v1alpha1/customers:migrateOrganization",
          "response": {
            "$ref": "SasPortalOperation"
          },
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "description": "Migrates a SAS organization to the cloud. This will create GCP projects for each deployment and associate them. The SAS Organization is linked to the gcp project that called the command. go/sas-legacy-customer-migration"
        }
      },
      "resources": {
        "devices": {
          "methods": {
            "patch": {
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.customers.devices.patch",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "description": "Updates a device.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "format": "google-fieldmask",
                  "description": "Fields to be updated.",
                  "location": "query"
                },
                "name": {
                  "type": "string",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Output only. The resource path name."
                }
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH"
            },
            "updateSigned": {
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the device to update."
                }
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:updateSigned",
              "path": "v1alpha1/{+name}:updateSigned",
              "description": "Updates a signed device.",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "id": "prod_tt_sasportal.customers.devices.updateSigned",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ]
            },
            "createSigned": {
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the parent resource."
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "id": "prod_tt_sasportal.customers.devices.createSigned",
              "flatPath": "v1alpha1/customers/{customersId}/devices:createSigned",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "description": "Creates a signed device under a node or customer."
            },
            "move": {
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the device to move.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^customers/[^/]+/devices/[^/]+$"
                }
              },
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "path": "v1alpha1/{+name}:move",
              "httpMethod": "POST",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:move",
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.customers.devices.move",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "description": "Moves a device under another node or customer."
            },
            "create": {
              "path": "v1alpha1/{+parent}/devices",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "request": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "location": "path",
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "description": "Required. The name of the parent resource.",
                  "required": true
                }
              },
              "description": "Creates a device under a node or customer.",
              "id": "prod_tt_sasportal.customers.devices.create"
            },
            "list": {
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]."
                },
                "filter": {
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive.",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "httpMethod": "GET",
              "path": "v1alpha1/{+parent}/devices",
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "description": "Lists devices under a node or customer.",
              "id": "prod_tt_sasportal.customers.devices.list"
            },
            "delete": {
              "description": "Deletes a device.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the device.",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path"
                }
              },
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.customers.devices.delete",
              "httpMethod": "DELETE",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ]
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameters": {
                "name": {
                  "description": "Required. The name of the device.",
                  "required": true,
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "description": "Gets details about a device.",
              "httpMethod": "GET",
              "id": "prod_tt_sasportal.customers.devices.get",
              "path": "v1alpha1/{+name}"
            },
            "signDevice": {
              "id": "prod_tt_sasportal.customers.devices.signDevice",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:signDevice",
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameters": {
                "name": {
                  "description": "Output only. The resource path name.",
                  "location": "path",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "description": "Signs a device.",
              "path": "v1alpha1/{+name}:signDevice",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ]
            }
          }
        },
        "deployments": {
          "resources": {
            "devices": {
              "methods": {
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^customers/[^/]+/deployments/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the parent resource.",
                      "required": true
                    }
                  },
                  "description": "Creates a device under a node or customer.",
                  "path": "v1alpha1/{+parent}/devices",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "id": "prod_tt_sasportal.customers.deployments.devices.create",
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices",
                  "response": {
                    "$ref": "SasPortalDevice"
                  }
                },
                "list": {
                  "path": "v1alpha1/{+parent}/devices",
                  "description": "Lists devices under a node or customer.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices",
                  "id": "prod_tt_sasportal.customers.deployments.devices.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^customers/[^/]+/deployments/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from."
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]."
                    },
                    "filter": {
                      "type": "string",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET"
                },
                "createSigned": {
                  "id": "prod_tt_sasportal.customers.deployments.devices.createSigned",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "description": "Creates a signed device under a node or customer.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices:createSigned",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^customers/[^/]+/deployments/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the parent resource."
                    }
                  },
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  }
                }
              }
            }
          },
          "methods": {
            "list": {
              "httpMethod": "GET",
              "response": {
                "$ref": "SasPortalListDeploymentsResponse"
              },
              "description": "Lists deployments.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "id": "prod_tt_sasportal.customers.deployments.list",
              "flatPath": "v1alpha1/customers/{customersId}/deployments",
              "path": "v1alpha1/{+parent}/deployments",
              "parameters": {
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered."
                },
                "pageSize": {
                  "description": "The maximum number of deployments to return in the response.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                },
                "parent": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2.",
                  "pattern": "^customers/[^/]+$"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from."
                }
              },
              "parameterOrder": [
                "parent"
              ]
            },
            "create": {
              "path": "v1alpha1/{+parent}/deployments",
              "flatPath": "v1alpha1/customers/{customersId}/deployments",
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "description": "Creates a new deployment.",
              "id": "prod_tt_sasportal.customers.deployments.create",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. The parent resource name where the deployment is to be created."
                }
              },
              "request": {
                "$ref": "SasPortalDeployment"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ]
            },
            "move": {
              "description": "Moves a deployment under another node or customer.",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "path": "v1alpha1/{+name}:move",
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the deployment to move."
                }
              },
              "httpMethod": "POST",
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}:move",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "id": "prod_tt_sasportal.customers.deployments.move",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalMoveDeploymentRequest"
              }
            },
            "patch": {
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.customers.deployments.patch",
              "httpMethod": "PATCH",
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "format": "google-fieldmask",
                  "description": "Fields to be updated.",
                  "location": "query"
                },
                "name": {
                  "description": "Output only. Resource name.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "required": true
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}",
              "description": "Updates an existing deployment.",
              "request": {
                "$ref": "SasPortalDeployment"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ]
            },
            "get": {
              "description": "Returns a requested deployment.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "httpMethod": "GET",
              "id": "prod_tt_sasportal.customers.deployments.get",
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the deployment.",
                  "required": true,
                  "type": "string",
                  "pattern": "^customers/[^/]+/deployments/[^/]+$"
                }
              },
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the deployment.",
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "description": "Deletes a deployment.",
              "id": "prod_tt_sasportal.customers.deployments.delete",
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}",
              "httpMethod": "DELETE",
              "response": {
                "$ref": "SasPortalEmpty"
              }
            }
          }
        },
        "nodes": {
          "resources": {
            "devices": {
              "methods": {
                "createSigned": {
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "id": "prod_tt_sasportal.customers.nodes.devices.createSigned",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "httpMethod": "POST",
                  "description": "Creates a signed device under a node or customer.",
                  "parameters": {
                    "parent": {
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices:createSigned"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "description": "Lists devices under a node or customer.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from."
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$"
                    },
                    "filter": {
                      "location": "query",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "id": "prod_tt_sasportal.customers.nodes.devices.list",
                  "path": "v1alpha1/{+parent}/devices",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "description": "Required. The name of the parent resource.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "id": "prod_tt_sasportal.customers.nodes.devices.create",
                  "httpMethod": "POST",
                  "description": "Creates a device under a node or customer.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/devices"
                }
              }
            },
            "deployments": {
              "methods": {
                "list": {
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from."
                    },
                    "filter": {
                      "location": "query",
                      "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of deployments to return in the response.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "parent": {
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "description": "Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "prod_tt_sasportal.customers.nodes.deployments.list",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/deployments",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists deployments.",
                  "response": {
                    "$ref": "SasPortalListDeploymentsResponse"
                  },
                  "path": "v1alpha1/{+parent}/deployments",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ]
                },
                "create": {
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "SasPortalDeployment"
                  },
                  "id": "prod_tt_sasportal.customers.nodes.deployments.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "description": "Required. The parent resource name where the deployment is to be created."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "SasPortalDeployment"
                  },
                  "description": "Creates a new deployment.",
                  "path": "v1alpha1/{+parent}/deployments",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/deployments"
                }
              }
            },
            "nodes": {
              "methods": {
                "create": {
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource name where the node is to be created.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^customers/[^/]+/nodes/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "path": "v1alpha1/{+parent}/nodes",
                  "httpMethod": "POST",
                  "id": "prod_tt_sasportal.customers.nodes.nodes.create",
                  "description": "Creates a new node.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "response": {
                    "$ref": "SasPortalNode"
                  }
                },
                "list": {
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "path": "v1alpha1/{+parent}/nodes",
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "description": "Lists nodes.",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "description": "Required. The parent resource name, for example, \"nodes/1\"."
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of nodes to return in the response.",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from.",
                      "type": "string"
                    },
                    "filter": {
                      "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "id": "prod_tt_sasportal.customers.nodes.nodes.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ]
                }
              }
            }
          },
          "methods": {
            "move": {
              "response": {
                "$ref": "SasPortalOperation"
              },
              "id": "prod_tt_sasportal.customers.nodes.move",
              "httpMethod": "POST",
              "path": "v1alpha1/{+name}:move",
              "parameterOrder": [
                "name"
              ],
              "description": "Moves a node under another node or customer.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}:move",
              "parameters": {
                "name": {
                  "description": "Required. The name of the node to move.",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$"
                }
              },
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              }
            },
            "get": {
              "response": {
                "$ref": "SasPortalNode"
              },
              "id": "prod_tt_sasportal.customers.nodes.get",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "description": "Returns a requested node.",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the node.",
                  "location": "path"
                }
              }
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "path": "v1alpha1/{+parent}/nodes",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "id": "prod_tt_sasportal.customers.nodes.list",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from.",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered.",
                  "location": "query"
                },
                "parent": {
                  "required": true,
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "location": "path"
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of nodes to return in the response.",
                  "format": "int32"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "httpMethod": "GET",
              "description": "Lists nodes."
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "httpMethod": "DELETE",
              "description": "Deletes a node.",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the node."
                }
              },
              "id": "prod_tt_sasportal.customers.nodes.delete",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "path": "v1alpha1/{+name}"
            },
            "patch": {
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "httpMethod": "PATCH",
              "description": "Updates an existing node.",
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalNode"
              },
              "request": {
                "$ref": "SasPortalNode"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "type": "string",
                  "description": "Output only. Resource name."
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "type": "string",
                  "description": "Fields to be updated.",
                  "location": "query"
                }
              },
              "id": "prod_tt_sasportal.customers.nodes.patch",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}"
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "response": {
                "$ref": "SasPortalNode"
              },
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "id": "prod_tt_sasportal.customers.nodes.create",
              "parameters": {
                "parent": {
                  "description": "Required. The parent resource name where the node is to be created.",
                  "required": true,
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "location": "path"
                }
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "SasPortalNode"
              },
              "description": "Creates a new node.",
              "path": "v1alpha1/{+parent}/nodes"
            }
          }
        }
      }
    },
    "policies": {
      "methods": {
        "set": {
          "parameters": {},
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "id": "prod_tt_sasportal.policies.set",
          "path": "v1alpha1/policies:set",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "request": {
            "$ref": "SasPortalSetPolicyRequest"
          },
          "flatPath": "v1alpha1/policies:set",
          "httpMethod": "POST",
          "parameterOrder": [],
          "description": "Sets the access control policy on the specified resource. Replaces any existing policy."
        },
        "get": {
          "request": {
            "$ref": "SasPortalGetPolicyRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "path": "v1alpha1/policies:get",
          "parameterOrder": [],
          "id": "prod_tt_sasportal.policies.get",
          "parameters": {},
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "httpMethod": "POST",
          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
          "flatPath": "v1alpha1/policies:get"
        },
        "test": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "request": {
            "$ref": "SasPortalTestPermissionsRequest"
          },
          "description": "Returns permissions that a caller has on the specified resource.",
          "id": "prod_tt_sasportal.policies.test",
          "path": "v1alpha1/policies:test",
          "parameters": {},
          "flatPath": "v1alpha1/policies:test",
          "response": {
            "$ref": "SasPortalTestPermissionsResponse"
          },
          "parameterOrder": [],
          "httpMethod": "POST"
        }
      }
    },
    "installer": {
      "methods": {
        "validate": {
          "parameters": {},
          "description": "Validates the identity of a Certified Professional Installer (CPI).",
          "response": {
            "$ref": "SasPortalValidateInstallerResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "flatPath": "v1alpha1/installer:validate",
          "parameterOrder": [],
          "request": {
            "$ref": "SasPortalValidateInstallerRequest"
          },
          "path": "v1alpha1/installer:validate",
          "httpMethod": "POST",
          "id": "prod_tt_sasportal.installer.validate"
        },
        "generateSecret": {
          "httpMethod": "POST",
          "parameters": {},
          "response": {
            "$ref": "SasPortalGenerateSecretResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "request": {
            "$ref": "SasPortalGenerateSecretRequest"
          },
          "parameterOrder": [],
          "path": "v1alpha1/installer:generateSecret",
          "description": "Generates a secret to be used with the ValidateInstaller.",
          "id": "prod_tt_sasportal.installer.generateSecret",
          "flatPath": "v1alpha1/installer:generateSecret"
        }
      }
    }
  },
  "description": "",
  "schemas": {
    "SasPortalDeviceGrant": {
      "type": "object",
      "properties": {
        "frequencyRange": {
          "description": "The transmission frequency range.",
          "$ref": "SasPortalFrequencyRange"
        },
        "expireTime": {
          "description": "The expiration time of the grant.",
          "type": "string",
          "format": "google-datetime"
        },
        "suspensionReason": {
          "type": "array",
          "description": "If the grant is suspended, the reason(s) for suspension.",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "string",
          "enum": [
            "GRANT_STATE_UNSPECIFIED",
            "GRANT_STATE_GRANTED",
            "GRANT_STATE_TERMINATED",
            "GRANT_STATE_SUSPENDED",
            "GRANT_STATE_AUTHORIZED",
            "GRANT_STATE_EXPIRED"
          ],
          "enumDescriptions": [
            "",
            "The grant has been granted but the device is not heartbeating on it.",
            "The grant has been terminated by the SAS.",
            "The grant has been suspended by the SAS.",
            "The device is currently transmitting.",
            "The grant has expired."
          ],
          "description": "State of the grant."
        },
        "moveList": {
          "description": "The DPA move lists on which this grant appears.",
          "items": {
            "$ref": "SasPortalDpaMoveList"
          },
          "type": "array"
        },
        "maxEirp": {
          "format": "double",
          "type": "number",
          "description": "Maximum Equivalent Isotropically Radiated Power (EIRP) permitted by the grant. The maximum EIRP is in units of dBm/MHz. The value of `maxEirp` represents the average (RMS) EIRP that would be measured by the procedure defined in FCC part 96.41(e)(3)."
        },
        "grantId": {
          "type": "string",
          "description": "Grant Id."
        },
        "channelType": {
          "type": "string",
          "enum": [
            "CHANNEL_TYPE_UNSPECIFIED",
            "CHANNEL_TYPE_GAA",
            "CHANNEL_TYPE_PAL"
          ],
          "description": "Type of channel used.",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        },
        "lastHeartbeatTransmitExpireTime": {
          "description": "The transmit expiration time of the last heartbeat.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "SasPortalDeviceGrant",
      "description": "Device grant. It is an authorization provided by the Spectrum Access System to a device to transmit using specified operating parameters after a successful heartbeat by the device."
    },
    "SasPortalSignDeviceRequest": {
      "type": "object",
      "description": "Request for SignDevice.",
      "properties": {
        "device": {
          "description": "Required. The device to sign. The device fields name, fcc_id and serial_number must be set. The user_id field must be set.",
          "$ref": "SasPortalDevice"
        }
      },
      "id": "SasPortalSignDeviceRequest"
    },
    "SasPortalListCustomersResponse": {
      "id": "SasPortalListCustomersResponse",
      "description": "Response for `ListCustomers`.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token returned from a previous call to ListCustomers that indicates from where listing should continue. If the field is missing or empty, it means there are no more customers."
        },
        "customers": {
          "type": "array",
          "items": {
            "$ref": "SasPortalCustomer"
          },
          "description": "The list of customers that match the request."
        }
      }
    },
    "SasPortalCustomer": {
      "properties": {
        "sasUserIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "User IDs used by the devices belonging to this customer."
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name of the customer."
        },
        "displayName": {
          "type": "string",
          "description": "Required. Name of the organization that the customer entity represents."
        }
      },
      "id": "SasPortalCustomer",
      "type": "object",
      "description": "Entity representing a SAS customer."
    },
    "SasPortalUpdateSignedDeviceRequest": {
      "description": "Request for UpdateSignedDevice.",
      "properties": {
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer ID (CPI ID) from the Certified Professional Installers database."
        },
        "encodedDevice": {
          "type": "string",
          "description": "Required. The JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set.",
          "format": "byte"
        }
      },
      "type": "object",
      "id": "SasPortalUpdateSignedDeviceRequest"
    },
    "SasPortalProvisionDeploymentResponse": {
      "description": "Response for [ProvisionDeployment]. [spectrum.sas.portal.v1alpha1.Provisioning.ProvisionDeployment].",
      "properties": {
        "errorMessage": {
          "type": "string",
          "description": "Optional. Optional error message if the provisioning request is not successful."
        }
      },
      "id": "SasPortalProvisionDeploymentResponse",
      "type": "object"
    },
    "SasPortalListLegacyOrganizationsResponse": {
      "id": "SasPortalListLegacyOrganizationsResponse",
      "description": "Response for [ListLegacyOrganizations]. [spectrum.sas.portal.v1alpha1.Provisioning.ListLegacyOrganizations].",
      "type": "object",
      "properties": {
        "organizationIds": {
          "type": "array",
          "description": "Optional. IDs of legacy SAS organizations.",
          "items": {
            "format": "int64",
            "type": "string"
          }
        }
      }
    },
    "SasPortalNrqzValidation": {
      "id": "SasPortalNrqzValidation",
      "type": "object",
      "description": "Information about National Radio Quiet Zone validation.",
      "properties": {
        "state": {
          "type": "string",
          "description": "State of the NRQZ validation info.",
          "enumDescriptions": [
            "Unspecified state.",
            "Draft state.",
            "Final state."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "FINAL"
          ]
        },
        "longitude": {
          "description": "Device longitude that's associated with the validation.",
          "type": "number",
          "format": "double"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Device latitude that's associated with the validation."
        },
        "cpiId": {
          "type": "string",
          "description": "CPI who signed the validation."
        },
        "caseId": {
          "type": "string",
          "description": "Validation case ID."
        }
      }
    },
    "SasPortalMigrateOrganizationResponse": {
      "properties": {
        "deploymentAssociation": {
          "description": "Optional. A list of deployment association that were created for the migration, or current associations if they already exist.",
          "type": "array",
          "items": {
            "$ref": "SasPortalDeploymentAssociation"
          }
        }
      },
      "id": "SasPortalMigrateOrganizationResponse",
      "description": "Response for [MigrateOrganization]. [spectrum.sas.portal.v1alpha1.Provisioning.MigrateOrganization].",
      "type": "object"
    },
    "SasPortalPolicy": {
      "properties": {
        "assignments": {
          "type": "array",
          "description": "List of assignments",
          "items": {
            "$ref": "SasPortalAssignment"
          }
        },
        "etag": {
          "type": "string",
          "description": "The etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to GetPolicy, and systems are expected to put that etag in the request to SetPolicy to ensure that their change will be applied to the same version of the policy. If no etag is provided in the call to GetPolicy, then the existing policy is overwritten blindly.",
          "format": "byte"
        }
      },
      "id": "SasPortalPolicy",
      "type": "object",
      "description": "Defines an access control policy to the resources."
    },
    "SasPortalDpaMoveList": {
      "properties": {
        "frequencyRange": {
          "description": "The frequency range that the move list affects.",
          "$ref": "SasPortalFrequencyRange"
        },
        "dpaId": {
          "type": "string",
          "description": "The ID of the DPA."
        }
      },
      "type": "object",
      "description": "An entry in a DPA's move list.",
      "id": "SasPortalDpaMoveList"
    },
    "SasPortalSetupSasAnalyticsRequest": {
      "type": "object",
      "id": "SasPortalSetupSasAnalyticsRequest",
      "description": "Request for the SetupSasAnalytics rpc.",
      "properties": {
        "userId": {
          "description": "Optional. User id to setup analytics for, if not provided the user id associated with the project is used. optional",
          "type": "string"
        }
      }
    },
    "SasPortalDeploymentAssociation": {
      "properties": {
        "gcpProjectId": {
          "description": "GCP project id of the associated project.",
          "type": "string"
        },
        "userId": {
          "type": "string",
          "description": "User id of the deployment."
        }
      },
      "id": "SasPortalDeploymentAssociation",
      "type": "object",
      "description": "Association between a gcp project and a SAS user id."
    },
    "SasPortalTestPermissionsResponse": {
      "properties": {
        "permissions": {
          "description": "A set of permissions that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "SasPortalTestPermissionsResponse",
      "description": "Response message for `TestPermissions` method.",
      "type": "object"
    },
    "SasPortalNode": {
      "type": "object",
      "properties": {
        "sasUserIds": {
          "items": {
            "type": "string"
          },
          "description": "User ids used by the devices belonging to this node.",
          "type": "array"
        },
        "name": {
          "description": "Output only. Resource name.",
          "type": "string"
        },
        "displayName": {
          "description": "The node's display name.",
          "type": "string"
        }
      },
      "id": "SasPortalNode",
      "description": "The Node."
    },
    "SasPortalCheckHasProvisionedDeploymentResponse": {
      "id": "SasPortalCheckHasProvisionedDeploymentResponse",
      "properties": {
        "hasProvisionedDeployment": {
          "type": "boolean",
          "description": "Whether a SAS deployment for the authentication context exists."
        }
      },
      "description": "Response for [CheckHasProvisionedDeployment]. [spectrum.sas.portal.v1alpha1.Provisioning.CheckHasProvisionedDeployment].",
      "type": "object"
    },
    "SasPortalFrequencyRange": {
      "properties": {
        "lowFrequencyMhz": {
          "type": "number",
          "format": "double",
          "description": "The lowest frequency of the frequency range in MHz."
        },
        "highFrequencyMhz": {
          "description": "The highest frequency of the frequency range in MHz.",
          "type": "number",
          "format": "double"
        }
      },
      "id": "SasPortalFrequencyRange",
      "type": "object",
      "description": "Frequency range from `low_frequency` to `high_frequency`."
    },
    "SasPortalDeviceModel": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the device model."
        },
        "vendor": {
          "description": "The name of the device vendor.",
          "type": "string"
        },
        "firmwareVersion": {
          "type": "string",
          "description": "The firmware version of the device."
        },
        "softwareVersion": {
          "type": "string",
          "description": "The software version of the device."
        },
        "hardwareVersion": {
          "description": "The hardware version of the device.",
          "type": "string"
        }
      },
      "id": "SasPortalDeviceModel",
      "type": "object",
      "description": "Information about the model of the device."
    },
    "SasPortalValidateInstallerResponse": {
      "type": "object",
      "id": "SasPortalValidateInstallerResponse",
      "properties": {},
      "description": "Response for ValidateInstaller."
    },
    "SasPortalDevice": {
      "type": "object",
      "properties": {
        "state": {
          "enumDescriptions": [
            "Unspecified state.",
            "Device created in the SAS Portal, however, not yet registered with SAS.",
            "Device registered with SAS.",
            "Device de-registered with SAS."
          ],
          "description": "Output only. Device state.",
          "enum": [
            "DEVICE_STATE_UNSPECIFIED",
            "RESERVED",
            "REGISTERED",
            "DEREGISTERED"
          ],
          "type": "string"
        },
        "currentChannels": {
          "items": {
            "$ref": "SasPortalChannelWithScore"
          },
          "description": "Output only. Current channels with scores.",
          "readOnly": true,
          "type": "array",
          "deprecated": true
        },
        "grantRangeAllowlists": {
          "items": {
            "$ref": "SasPortalFrequencyRange"
          },
          "type": "array",
          "description": "Only ranges that are within the allowlists are available for new grants."
        },
        "serialNumber": {
          "type": "string",
          "description": "A serial number assigned to the device by the device manufacturer."
        },
        "activeConfig": {
          "$ref": "SasPortalDeviceConfig",
          "description": "Output only. Current configuration of the device as registered to the SAS."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource path name."
        },
        "fccId": {
          "description": "The FCC identifier of the device. Refer to https://www.fcc.gov/oet/ea/fccid for FccID format.",
          "type": "string"
        },
        "preloadedConfig": {
          "description": "Configuration of the device, as specified via SAS Portal API.",
          "$ref": "SasPortalDeviceConfig"
        },
        "deviceMetadata": {
          "$ref": "SasPortalDeviceMetadata",
          "description": "Device parameters that can be overridden by both SAS Portal and SAS registration requests."
        },
        "displayName": {
          "description": "Device display name.",
          "type": "string"
        },
        "grants": {
          "items": {
            "$ref": "SasPortalDeviceGrant"
          },
          "description": "Output only. Grants held by the device.",
          "type": "array"
        }
      },
      "id": "SasPortalDevice"
    },
    "SasPortalGenerateSecretRequest": {
      "description": "Request for GenerateSecret.",
      "properties": {},
      "id": "SasPortalGenerateSecretRequest",
      "type": "object"
    },
    "SasPortalMoveDeploymentRequest": {
      "type": "object",
      "id": "SasPortalMoveDeploymentRequest",
      "properties": {
        "destination": {
          "description": "Required. The name of the new parent resource node or customer to reparent the deployment under.",
          "type": "string"
        }
      },
      "description": "Request for MoveDeployment."
    },
    "SasPortalTestPermissionsRequest": {
      "type": "object",
      "id": "SasPortalTestPermissionsRequest",
      "description": "Request message for `TestPermissions` method.",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resource": {
          "description": "Required. The resource for which the permissions are being requested.",
          "type": "string"
        }
      }
    },
    "SasPortalMigrateOrganizationRequest": {
      "description": "Request for [MigrateOrganization]. [spectrum.sas.portal.v1alpha1.Provisioning.MigrateOrganization]. GCP Project, Organization Info, and caller's GAIA ID should be retrieved from the RPC handler, and used to check authorization on SAS Portal organization and to create GCP Projects.",
      "type": "object",
      "properties": {
        "organizationId": {
          "format": "int64",
          "type": "string",
          "description": "Required. Id of the SAS organization to be migrated."
        }
      },
      "id": "SasPortalMigrateOrganizationRequest"
    },
    "SasPortalMoveNodeRequest": {
      "type": "object",
      "id": "SasPortalMoveNodeRequest",
      "description": "Request for MoveNode.",
      "properties": {
        "destination": {
          "description": "Required. The name of the new parent resource node or customer to reparent the node under.",
          "type": "string"
        }
      }
    },
    "SasPortalCreateSignedDeviceRequest": {
      "description": "Request for CreateSignedDevice.",
      "properties": {
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer id (CPI ID) from the Certified Professional Installers database."
        },
        "encodedDevice": {
          "format": "byte",
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SasPortalCreateSignedDeviceRequest"
    },
    "SasPortalGetPolicyRequest": {
      "type": "object",
      "description": "Request message for `GetPolicy` method.",
      "id": "SasPortalGetPolicyRequest",
      "properties": {
        "resource": {
          "type": "string",
          "description": "Required. The resource for which the policy is being requested."
        }
      }
    },
    "SasPortalDeviceMetadata": {
      "type": "object",
      "properties": {
        "interferenceCoordinationGroup": {
          "type": "string",
          "description": "Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see [CBRSA-TS-2001 V3.0.0](https://ongoalliance.org/wp-content/uploads/2020/02/CBRSA-TS-2001-V3.0.0_Approved-for-publication.pdf)."
        },
        "nrqzValidated": {
          "deprecated": true,
          "description": "Output only. Set to `true` if a CPI has validated that they have coordinated with the National Quiet Zone office.",
          "type": "boolean",
          "readOnly": true
        },
        "commonChannelGroup": {
          "type": "string",
          "description": "Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see [CBRSA-TS-2001 V3.0.0](https://ongoalliance.org/wp-content/uploads/2020/02/CBRSA-TS-2001-V3.0.0_Approved-for-publication.pdf)."
        },
        "nrqzValidation": {
          "description": "Output only. National Radio Quiet Zone validation info.",
          "readOnly": true,
          "$ref": "SasPortalNrqzValidation"
        },
        "antennaModel": {
          "description": "If populated, the Antenna Model Pattern to use. Format is: `RecordCreatorId:PatternId`",
          "type": "string"
        }
      },
      "id": "SasPortalDeviceMetadata",
      "description": "Device data overridable by both SAS Portal and registration requests."
    },
    "SasPortalSetPolicyRequest": {
      "properties": {
        "resource": {
          "description": "Required. The resource for which the policy is being specified. This policy replaces any existing policy.",
          "type": "string"
        },
        "disableNotification": {
          "description": "Optional. Set the field as `true` to disable the onboarding notification.",
          "type": "boolean"
        },
        "policy": {
          "description": "Required. The policy to be applied to the `resource`.",
          "$ref": "SasPortalPolicy"
        }
      },
      "description": "Request message for `SetPolicy` method.",
      "type": "object",
      "id": "SasPortalSetPolicyRequest"
    },
    "SasPortalListDeploymentsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListDeployments that indicates from where listing should continue. If the field is missing or empty, it means there are no more deployments.",
          "type": "string"
        },
        "deployments": {
          "type": "array",
          "items": {
            "$ref": "SasPortalDeployment"
          },
          "description": "The deployments that match the request."
        }
      },
      "description": "Response for ListDeployments.",
      "id": "SasPortalListDeploymentsResponse"
    },
    "SasPortalOperation": {
      "id": "SasPortalOperation",
      "type": "object",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "response": {
          "type": "object",
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "error": {
          "$ref": "SasPortalStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "SasPortalProvisionDeploymentRequest": {
      "description": "Request for [ProvisionDeployment]. [spectrum.sas.portal.v1alpha1.Provisioning.ProvisionDeployment]. GCP Project, Organization Info, and caller’s GAIA ID should be retrieved from the RPC handler, and used as inputs to create a new SAS organization (if not exists) and a new SAS deployment.",
      "id": "SasPortalProvisionDeploymentRequest",
      "type": "object",
      "properties": {
        "newDeploymentDisplayName": {
          "type": "string",
          "description": "Optional. If this field is set, and a new SAS Portal Deployment needs to be created, its display name will be set to the value of this field."
        },
        "organizationId": {
          "type": "string",
          "description": "Optional. If this field is set then a new deployment will be created under the organization specified by this id.",
          "format": "int64"
        },
        "newOrganizationDisplayName": {
          "type": "string",
          "description": "Optional. If this field is set, and a new SAS Portal Organization needs to be created, its display name will be set to the value of this field."
        }
      }
    },
    "SasPortalMigrateOrganizationMetadata": {
      "description": "Long-running operation metadata message returned by the MigrateOrganization.",
      "properties": {
        "operationState": {
          "enum": [
            "OPERATION_STATE_UNSPECIFIED",
            "OPERATION_STATE_PENDING",
            "OPERATION_STATE_RUNNING",
            "OPERATION_STATE_SUCCEEDED",
            "OPERATION_STATE_FAILED"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Pending (Not started).",
            "In-progress.",
            "Done successfully.",
            "Done with errors."
          ],
          "description": "Output only. Current operation state",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "SasPortalMigrateOrganizationMetadata"
    },
    "SasPortalChannelWithScore": {
      "type": "object",
      "properties": {
        "frequencyRange": {
          "$ref": "SasPortalFrequencyRange",
          "description": "The frequency range of the channel."
        },
        "score": {
          "type": "number",
          "description": "The channel score, normalized to be in the range [0,100].",
          "format": "double"
        }
      },
      "id": "SasPortalChannelWithScore",
      "description": "The channel with score."
    },
    "SasPortalInstallationParams": {
      "type": "object",
      "properties": {
        "antennaDowntilt": {
          "type": "integer",
          "description": "Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices.",
          "format": "int32"
        },
        "indoorDeployment": {
          "type": "boolean",
          "description": "Whether the device antenna is indoor or not. `true`: indoor. `false`: outdoor."
        },
        "verticalAccuracy": {
          "description": "A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters.",
          "format": "double",
          "type": "number"
        },
        "antennaGain": {
          "description": "Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive.",
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "description": "Device antenna height in meters. When the `heightType` parameter value is \"AGL\", the antenna height should be given relative to ground level. When the `heightType` parameter value is \"AMSL\", it is given with respect to WGS84 datum.",
          "type": "number",
          "format": "double"
        },
        "cpeCbsdIndication": {
          "description": "If present, this parameter specifies whether the CBSD is a CPE-CBSD or not.",
          "type": "boolean"
        },
        "heightType": {
          "enumDescriptions": [
            "Unspecified height type.",
            "AGL height is measured relative to the ground level.",
            "AMSL height is measured relative to the mean sea level."
          ],
          "type": "string",
          "description": "Specifies how the height is measured.",
          "enum": [
            "HEIGHT_TYPE_UNSPECIFIED",
            "HEIGHT_TYPE_AGL",
            "HEIGHT_TYPE_AMSL"
          ]
        },
        "latitude": {
          "type": "number",
          "description": "Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator.",
          "format": "double"
        },
        "antennaAzimuth": {
          "type": "integer",
          "format": "int32",
          "description": "Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices."
        },
        "antennaModel": {
          "description": "If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets.",
          "type": "string"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian."
        },
        "eirpCapability": {
          "type": "integer",
          "format": "int32",
          "description": "This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category."
        },
        "horizontalAccuracy": {
          "format": "double",
          "type": "number",
          "description": "A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters."
        },
        "antennaBeamwidth": {
          "format": "int32",
          "description": "3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices.",
          "type": "integer"
        }
      },
      "id": "SasPortalInstallationParams",
      "description": "Information about the device installation parameters."
    },
    "SasPortalGenerateSecretResponse": {
      "type": "object",
      "description": "Response for GenerateSecret.",
      "id": "SasPortalGenerateSecretResponse",
      "properties": {
        "secret": {
          "description": "The secret generated by the string and used by ValidateInstaller.",
          "type": "string"
        }
      }
    },
    "SasPortalSetupSasAnalyticsMetadata": {
      "properties": {},
      "type": "object",
      "id": "SasPortalSetupSasAnalyticsMetadata",
      "description": "Metadata returned by the long running operation for the SetupSasAnalytics rpc."
    },
    "SasPortalListNodesResponse": {
      "id": "SasPortalListNodesResponse",
      "type": "object",
      "description": "Response for ListNodes.",
      "properties": {
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListNodes that indicates from where listing should continue. If the field is missing or empty, it means there is no more nodes.",
          "type": "string"
        },
        "nodes": {
          "description": "The nodes that match the request.",
          "type": "array",
          "items": {
            "$ref": "SasPortalNode"
          }
        }
      }
    },
    "SasPortalDeviceConfig": {
      "properties": {
        "state": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "DEVICE_CONFIG_STATE_UNSPECIFIED",
            "DRAFT",
            "FINAL"
          ],
          "description": "State of the configuration."
        },
        "installationParams": {
          "$ref": "SasPortalInstallationParams",
          "description": "Installation parameters for the device."
        },
        "isSigned": {
          "description": "Output only. Whether the configuration has been signed by a CPI.",
          "type": "boolean"
        },
        "model": {
          "$ref": "SasPortalDeviceModel",
          "description": "Information about this device model."
        },
        "airInterface": {
          "$ref": "SasPortalDeviceAirInterface",
          "description": "Information about this device's air interface."
        },
        "userId": {
          "description": "The identifier of a device user.",
          "type": "string"
        },
        "measurementCapabilities": {
          "type": "array",
          "description": "Measurement reporting capabilities of the device.",
          "items": {
            "type": "string",
            "enum": [
              "MEASUREMENT_CAPABILITY_UNSPECIFIED",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT"
            ],
            "enumDescriptions": [
              "",
              "",
              ""
            ]
          }
        },
        "callSign": {
          "description": "The call sign of the device operator.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The last time the device configuration was edited.",
          "type": "string",
          "format": "google-datetime"
        },
        "category": {
          "enum": [
            "DEVICE_CATEGORY_UNSPECIFIED",
            "DEVICE_CATEGORY_A",
            "DEVICE_CATEGORY_B"
          ],
          "description": "FCC category of the device.",
          "enumDescriptions": [
            "Unspecified device category.",
            "Category A.",
            "Category B."
          ],
          "type": "string"
        }
      },
      "description": "Information about the device configuration.",
      "type": "object",
      "id": "SasPortalDeviceConfig"
    },
    "SasPortalDeviceAirInterface": {
      "type": "object",
      "description": "Information about the device's air interface.",
      "properties": {
        "radioTechnology": {
          "enum": [
            "RADIO_TECHNOLOGY_UNSPECIFIED",
            "E_UTRA",
            "CAMBIUM_NETWORKS",
            "FOUR_G_BBW_SAA_1",
            "NR",
            "DOODLE_CBRS",
            "CW",
            "REDLINE",
            "TARANA_WIRELESS"
          ],
          "description": "Conditional. This field specifies the radio access technology that is used for the CBSD.",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "supportedSpec": {
          "type": "string",
          "description": "Optional. This field is related to the `radioTechnology` and provides the air interface specification that the CBSD is compliant with at the time of registration."
        }
      },
      "id": "SasPortalDeviceAirInterface"
    },
    "SasPortalEmpty": {
      "id": "SasPortalEmpty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object"
    },
    "SasPortalDeployment": {
      "properties": {
        "frns": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. The FCC Registration Numbers (FRNs) copied from its direct parent."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Resource name."
        },
        "displayName": {
          "type": "string",
          "description": "The deployment's display name."
        },
        "sasUserIds": {
          "items": {
            "type": "string"
          },
          "description": "User ID used by the devices belonging to this deployment. Each deployment should be associated with one unique user ID.",
          "type": "array"
        }
      },
      "description": "The Deployment.",
      "type": "object",
      "id": "SasPortalDeployment"
    },
    "SasPortalAssignment": {
      "properties": {
        "members": {
          "description": "The identities the role is assigned to. It can have the following values: * `{user_email}`: An email address that represents a specific Google account. For example: `alice@gmail.com`. * `{group_email}`: An email address that represents a Google group. For example, `viewers@gmail.com`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "type": "string",
          "description": "Required. Role that is assigned to `members`."
        }
      },
      "type": "object",
      "id": "SasPortalAssignment",
      "description": "Associates `members` with a `role`."
    },
    "SasPortalStatus": {
      "id": "SasPortalStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SasPortalMoveDeviceRequest": {
      "type": "object",
      "properties": {
        "destination": {
          "description": "Required. The name of the new parent resource node or customer to reparent the device under.",
          "type": "string"
        }
      },
      "description": "Request for MoveDevice.",
      "id": "SasPortalMoveDeviceRequest"
    },
    "SasPortalSetupSasAnalyticsResponse": {
      "type": "object",
      "properties": {},
      "id": "SasPortalSetupSasAnalyticsResponse",
      "description": "Response returned by the long running operation for the SetupSasAnalytics rpc."
    },
    "SasPortalValidateInstallerRequest": {
      "id": "SasPortalValidateInstallerRequest",
      "properties": {
        "secret": {
          "type": "string",
          "description": "Required. Secret returned by the GenerateSecret."
        },
        "encodedSecret": {
          "type": "string",
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must include a \"secret\" claim whose value is the secret."
        },
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer id (CPI ID) from the Certified Professional Installers database."
        }
      },
      "type": "object",
      "description": "Request for ValidateInstaller."
    },
    "SasPortalListDevicesResponse": {
      "type": "object",
      "id": "SasPortalListDevicesResponse",
      "properties": {
        "devices": {
          "description": "The devices that match the request.",
          "items": {
            "$ref": "SasPortalDevice"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token returned from a previous call to ListDevices that indicates from where listing should continue. If the field is missing or empty, it means there is no more devices."
        }
      },
      "description": "Response for ListDevices."
    }
  },
  "discoveryVersion": "v1",
  "ownerDomain": "google.com",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        },
        "https://www.googleapis.com/auth/sasportal": {
          "description": "Read, create, update, and delete your SAS Portal data."
        }
      }
    }
  },
  "id": "prod_tt_sasportal:v1alpha1",
  "revision": "20240109",
  "documentationLink": "https://developers.google.com/spectrum-access-system/",
  "protocol": "rest",
  "servicePath": "",
  "batchPath": "batch",
  "canonicalName": "SAS Portal Testing",
  "baseUrl": "https://prod-tt-sasportal.googleapis.com/",
  "version_module": true,
  "kind": "discovery#restDescription",
  "fullyEncodeReservedExpansion": true,
  "ownerName": "Google",
  "basePath": "",
  "title": "SAS Portal API (Testing)",
  "version": "v1alpha1",
  "mtlsRootUrl": "https://prod-tt-sasportal.mtls.googleapis.com/",
  "parameters": {
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "alt": {
      "description": "Data format for response.",
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    }
  },
  "name": "prod_tt_sasportal",
  "rootUrl": "https://prod-tt-sasportal.googleapis.com/"
}

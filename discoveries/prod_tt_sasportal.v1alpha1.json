{
  "ownerName": "Google",
  "canonicalName": "SAS Portal Testing",
  "id": "prod_tt_sasportal:v1alpha1",
  "rootUrl": "https://prod-tt-sasportal.googleapis.com/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "version_module": true,
  "description": "",
  "ownerDomain": "google.com",
  "batchPath": "batch",
  "basePath": "",
  "kind": "discovery#restDescription",
  "documentationLink": "https://developers.google.com/spectrum-access-system/",
  "fullyEncodeReservedExpansion": true,
  "mtlsRootUrl": "https://prod-tt-sasportal.mtls.googleapis.com/",
  "servicePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        },
        "https://www.googleapis.com/auth/sasportal": {
          "description": "Read, create, update, and delete your SAS Portal data."
        }
      }
    }
  },
  "revision": "20230816",
  "name": "prod_tt_sasportal",
  "schemas": {
    "SasPortalMoveNodeRequest": {
      "properties": {
        "destination": {
          "description": "Required. The name of the new parent resource node or customer to reparent the node under.",
          "type": "string"
        }
      },
      "id": "SasPortalMoveNodeRequest",
      "description": "Request for MoveNode.",
      "type": "object"
    },
    "SasPortalSetupSasAnalyticsMetadata": {
      "description": "Metadata returned by the long running operation for the SetupSasAnalytics rpc.",
      "type": "object",
      "properties": {},
      "id": "SasPortalSetupSasAnalyticsMetadata"
    },
    "SasPortalProvisionDeploymentRequest": {
      "id": "SasPortalProvisionDeploymentRequest",
      "properties": {
        "organizationId": {
          "type": "string",
          "description": "Optional. If this field is set then a new deployment will be created under the organization specified by this id.",
          "format": "int64"
        },
        "newDeploymentDisplayName": {
          "type": "string",
          "description": "Optional. If this field is set, and a new SAS Portal Deployment needs to be created, its display name will be set to the value of this field."
        },
        "newOrganizationDisplayName": {
          "type": "string",
          "description": "Optional. If this field is set, and a new SAS Portal Organization needs to be created, its display name will be set to the value of this field."
        }
      },
      "type": "object",
      "description": "Request for [ProvisionDeployment]. [spectrum.sas.portal.v1alpha1.Provisioning.ProvisionDeployment]. GCP Project, Organization Info, and callerâ€™s GAIA ID should be retrieved from the RPC handler, and used as inputs to create a new SAS organization (if not exists) and a new SAS deployment."
    },
    "SasPortalSetPolicyRequest": {
      "id": "SasPortalSetPolicyRequest",
      "type": "object",
      "properties": {
        "disableNotification": {
          "type": "boolean",
          "description": "Optional. Set the field as `true` to disable the onboarding notification."
        },
        "resource": {
          "description": "Required. The resource for which the policy is being specified. This policy replaces any existing policy.",
          "type": "string"
        },
        "policy": {
          "$ref": "SasPortalPolicy",
          "description": "Required. The policy to be applied to the `resource`."
        }
      },
      "description": "Request message for `SetPolicy` method."
    },
    "SasPortalDeviceGrant": {
      "type": "object",
      "id": "SasPortalDeviceGrant",
      "description": "Device grant. It is an authorization provided by the Spectrum Access System to a device to transmit using specified operating parameters after a successful heartbeat by the device.",
      "properties": {
        "grantId": {
          "type": "string",
          "description": "Grant Id."
        },
        "moveList": {
          "description": "The DPA move lists on which this grant appears.",
          "type": "array",
          "items": {
            "$ref": "SasPortalDpaMoveList"
          }
        },
        "expireTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The expiration time of the grant."
        },
        "maxEirp": {
          "format": "double",
          "description": "Maximum Equivalent Isotropically Radiated Power (EIRP) permitted by the grant. The maximum EIRP is in units of dBm/MHz. The value of `maxEirp` represents the average (RMS) EIRP that would be measured by the procedure defined in FCC part 96.41(e)(3).",
          "type": "number"
        },
        "frequencyRange": {
          "description": "The transmission frequency range.",
          "$ref": "SasPortalFrequencyRange"
        },
        "suspensionReason": {
          "items": {
            "type": "string"
          },
          "description": "If the grant is suspended, the reason(s) for suspension.",
          "type": "array"
        },
        "lastHeartbeatTransmitExpireTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The transmit expiration time of the last heartbeat."
        },
        "channelType": {
          "description": "Type of channel used.",
          "enum": [
            "CHANNEL_TYPE_UNSPECIFIED",
            "CHANNEL_TYPE_GAA",
            "CHANNEL_TYPE_PAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        },
        "state": {
          "type": "string",
          "enum": [
            "GRANT_STATE_UNSPECIFIED",
            "GRANT_STATE_GRANTED",
            "GRANT_STATE_TERMINATED",
            "GRANT_STATE_SUSPENDED",
            "GRANT_STATE_AUTHORIZED",
            "GRANT_STATE_EXPIRED"
          ],
          "description": "State of the grant.",
          "enumDescriptions": [
            "",
            "The grant has been granted but the device is not heartbeating on it.",
            "The grant has been terminated by the SAS.",
            "The grant has been suspended by the SAS.",
            "The device is currently transmitting.",
            "The grant has expired."
          ]
        }
      }
    },
    "SasPortalValidateInstallerResponse": {
      "properties": {},
      "id": "SasPortalValidateInstallerResponse",
      "type": "object",
      "description": "Response for ValidateInstaller."
    },
    "SasPortalNode": {
      "type": "object",
      "description": "The Node.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The node's display name."
        },
        "sasUserIds": {
          "description": "User ids used by the devices belonging to this node.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name."
        }
      },
      "id": "SasPortalNode"
    },
    "SasPortalCreateSignedDeviceRequest": {
      "id": "SasPortalCreateSignedDeviceRequest",
      "properties": {
        "encodedDevice": {
          "type": "string",
          "format": "byte",
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set."
        },
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer id (CPI ID) from the Certified Professional Installers database."
        }
      },
      "description": "Request for CreateSignedDevice.",
      "type": "object"
    },
    "SasPortalSetupSasAnalyticsResponse": {
      "description": "Response returned by the long running operation for the SetupSasAnalytics rpc.",
      "properties": {},
      "type": "object",
      "id": "SasPortalSetupSasAnalyticsResponse"
    },
    "SasPortalMoveDeploymentRequest": {
      "id": "SasPortalMoveDeploymentRequest",
      "type": "object",
      "description": "Request for MoveDeployment.",
      "properties": {
        "destination": {
          "description": "Required. The name of the new parent resource node or customer to reparent the deployment under.",
          "type": "string"
        }
      }
    },
    "SasPortalSignDeviceRequest": {
      "type": "object",
      "description": "Request for SignDevice.",
      "id": "SasPortalSignDeviceRequest",
      "properties": {
        "device": {
          "$ref": "SasPortalDevice",
          "description": "Required. The device to sign. The device fields name, fcc_id and serial_number must be set. The user_id field must be set."
        }
      }
    },
    "SasPortalInstallationParams": {
      "description": "Information about the device installation parameters.",
      "id": "SasPortalInstallationParams",
      "properties": {
        "antennaAzimuth": {
          "format": "int32",
          "type": "integer",
          "description": "Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices."
        },
        "antennaBeamwidth": {
          "format": "int32",
          "description": "3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices.",
          "type": "integer"
        },
        "antennaModel": {
          "type": "string",
          "description": "If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets."
        },
        "eirpCapability": {
          "format": "int32",
          "type": "integer",
          "description": "This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category."
        },
        "antennaGain": {
          "description": "Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive.",
          "format": "int32",
          "type": "integer"
        },
        "cpeCbsdIndication": {
          "description": "If present, this parameter specifies whether the CBSD is a CPE-CBSD or not.",
          "type": "boolean"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian."
        },
        "indoorDeployment": {
          "description": "Whether the device antenna is indoor or not. `true`: indoor. `false`: outdoor.",
          "type": "boolean"
        },
        "verticalAccuracy": {
          "format": "double",
          "type": "number",
          "description": "A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters."
        },
        "horizontalAccuracy": {
          "type": "number",
          "format": "double",
          "description": "A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters."
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator."
        },
        "eirpCapabilityNewField": {
          "description": "As above, but as a DoubleValue.",
          "format": "double",
          "type": "number"
        },
        "heightType": {
          "enumDescriptions": [
            "Unspecified height type.",
            "AGL height is measured relative to the ground level.",
            "AMSL height is measured relative to the mean sea level."
          ],
          "description": "Specifies how the height is measured.",
          "type": "string",
          "enum": [
            "HEIGHT_TYPE_UNSPECIFIED",
            "HEIGHT_TYPE_AGL",
            "HEIGHT_TYPE_AMSL"
          ]
        },
        "antennaDowntilt": {
          "description": "Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices.",
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "type": "number",
          "description": "Device antenna height in meters. When the `heightType` parameter value is \"AGL\", the antenna height should be given relative to ground level. When the `heightType` parameter value is \"AMSL\", it is given with respect to WGS84 datum.",
          "format": "double"
        },
        "antennaGainNewField": {
          "type": "number",
          "description": "As above, but as a DoubleValue.",
          "format": "double"
        }
      },
      "type": "object"
    },
    "SasPortalProvisionDeploymentResponse": {
      "id": "SasPortalProvisionDeploymentResponse",
      "description": "Response for [ProvisionDeployment]. [spectrum.sas.portal.v1alpha1.Provisioning.ProvisionDeployment].",
      "type": "object",
      "properties": {
        "errorMessage": {
          "description": "Optional. Optional error message if the provisioning request is not successful.",
          "type": "string"
        }
      }
    },
    "SasPortalMigrateOrganizationRequest": {
      "description": "Request for [MigrateOrganization]. [spectrum.sas.portal.v1alpha1.Provisioning.MigrateOrganization]. GCP Project, Organization Info, and caller's GAIA ID should be retrieved from the RPC handler, and used to check authorization on SAS Portal organization and to create GCP Projects.",
      "properties": {
        "organizationId": {
          "description": "Required. Id of the SAS organization to be migrated.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "SasPortalMigrateOrganizationRequest",
      "type": "object"
    },
    "SasPortalListCustomersResponse": {
      "properties": {
        "customers": {
          "description": "The list of customers that match the request.",
          "items": {
            "$ref": "SasPortalCustomer"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListCustomers that indicates from where listing should continue. If the field is missing or empty, it means there are no more customers.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SasPortalListCustomersResponse",
      "description": "Response for `ListCustomers`."
    },
    "SasPortalDpaMoveList": {
      "type": "object",
      "properties": {
        "dpaId": {
          "type": "string",
          "description": "The ID of the DPA."
        },
        "frequencyRange": {
          "description": "The frequency range that the move list affects.",
          "$ref": "SasPortalFrequencyRange"
        }
      },
      "description": "An entry in a DPA's move list.",
      "id": "SasPortalDpaMoveList"
    },
    "SasPortalChannelWithScore": {
      "description": "The channel with score.",
      "id": "SasPortalChannelWithScore",
      "type": "object",
      "properties": {
        "score": {
          "description": "The channel score, normalized to be in the range [0,100].",
          "format": "double",
          "type": "number"
        },
        "frequencyRange": {
          "$ref": "SasPortalFrequencyRange",
          "description": "The frequency range of the channel."
        }
      }
    },
    "SasPortalGenerateSecretResponse": {
      "properties": {
        "secret": {
          "type": "string",
          "description": "The secret generated by the string and used by ValidateInstaller."
        }
      },
      "id": "SasPortalGenerateSecretResponse",
      "type": "object",
      "description": "Response for GenerateSecret."
    },
    "SasPortalSetupSasAnalyticsRequest": {
      "id": "SasPortalSetupSasAnalyticsRequest",
      "description": "Request for the SetupSasAnalytics rpc.",
      "properties": {},
      "type": "object"
    },
    "SasPortalDeviceModel": {
      "properties": {
        "vendor": {
          "description": "The name of the device vendor.",
          "type": "string"
        },
        "hardwareVersion": {
          "description": "The hardware version of the device.",
          "type": "string"
        },
        "firmwareVersion": {
          "description": "The firmware version of the device.",
          "type": "string"
        },
        "softwareVersion": {
          "description": "The software version of the device.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the device model."
        }
      },
      "type": "object",
      "id": "SasPortalDeviceModel",
      "description": "Information about the model of the device."
    },
    "SasPortalCustomer": {
      "id": "SasPortalCustomer",
      "properties": {
        "name": {
          "description": "Output only. Resource name of the customer.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Name of the organization that the customer entity represents."
        },
        "sasUserIds": {
          "description": "User IDs used by the devices belonging to this customer.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Entity representing a SAS customer.",
      "type": "object"
    },
    "SasPortalMoveDeviceRequest": {
      "properties": {
        "destination": {
          "description": "Required. The name of the new parent resource node or customer to reparent the device under.",
          "type": "string"
        }
      },
      "id": "SasPortalMoveDeviceRequest",
      "description": "Request for MoveDevice.",
      "type": "object"
    },
    "SasPortalFrequencyRange": {
      "properties": {
        "lowFrequencyMhz": {
          "type": "number",
          "format": "double",
          "description": "The lowest frequency of the frequency range in MHz."
        },
        "highFrequencyMhz": {
          "format": "double",
          "type": "number",
          "description": "The highest frequency of the frequency range in MHz."
        }
      },
      "type": "object",
      "id": "SasPortalFrequencyRange",
      "description": "Frequency range from `low_frequency` to `high_frequency`."
    },
    "SasPortalValidateInstallerRequest": {
      "description": "Request for ValidateInstaller.",
      "type": "object",
      "id": "SasPortalValidateInstallerRequest",
      "properties": {
        "encodedSecret": {
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must include a \"secret\" claim whose value is the secret.",
          "type": "string"
        },
        "installerId": {
          "description": "Required. Unique installer id (CPI ID) from the Certified Professional Installers database.",
          "type": "string"
        },
        "secret": {
          "description": "Required. Secret returned by the GenerateSecret.",
          "type": "string"
        }
      }
    },
    "SasPortalListNodesResponse": {
      "description": "Response for ListNodes.",
      "type": "object",
      "id": "SasPortalListNodesResponse",
      "properties": {
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListNodes that indicates from where listing should continue. If the field is missing or empty, it means there is no more nodes.",
          "type": "string"
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "SasPortalNode"
          },
          "description": "The nodes that match the request."
        }
      }
    },
    "SasPortalDeviceConfig": {
      "properties": {
        "state": {
          "description": "State of the configuration.",
          "enum": [
            "DEVICE_CONFIG_STATE_UNSPECIFIED",
            "DRAFT",
            "FINAL"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "model": {
          "description": "Information about this device model.",
          "$ref": "SasPortalDeviceModel"
        },
        "userId": {
          "description": "The identifier of a device user.",
          "type": "string"
        },
        "installationParams": {
          "description": "Installation parameters for the device.",
          "$ref": "SasPortalInstallationParams"
        },
        "airInterface": {
          "description": "Information about this device's air interface.",
          "$ref": "SasPortalDeviceAirInterface"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The last time the device configuration was edited."
        },
        "isSigned": {
          "type": "boolean",
          "description": "Output only. Whether the configuration has been signed by a CPI."
        },
        "callSign": {
          "description": "The call sign of the device operator.",
          "type": "string"
        },
        "measurementCapabilities": {
          "items": {
            "enumDescriptions": [
              "",
              "",
              ""
            ],
            "enum": [
              "MEASUREMENT_CAPABILITY_UNSPECIFIED",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT"
            ],
            "type": "string"
          },
          "description": "Measurement reporting capabilities of the device.",
          "type": "array"
        },
        "category": {
          "enumDescriptions": [
            "Unspecified device category.",
            "Category A.",
            "Category B."
          ],
          "type": "string",
          "enum": [
            "DEVICE_CATEGORY_UNSPECIFIED",
            "DEVICE_CATEGORY_A",
            "DEVICE_CATEGORY_B"
          ],
          "description": "FCC category of the device."
        }
      },
      "description": "Information about the device configuration.",
      "id": "SasPortalDeviceConfig",
      "type": "object"
    },
    "SasPortalDeploymentAssociation": {
      "type": "object",
      "properties": {
        "gcpProjectId": {
          "description": "GCP project id of the associated project.",
          "type": "string"
        },
        "userId": {
          "type": "string",
          "description": "User id of the deployment."
        }
      },
      "id": "SasPortalDeploymentAssociation",
      "description": "Association between a gcp project and a SAS user id."
    },
    "SasPortalAssignment": {
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "members": {
          "description": "The identities the role is assigned to. It can have the following values: * `{user_email}`: An email address that represents a specific Google account. For example: `alice@gmail.com`. * `{group_email}`: An email address that represents a Google group. For example, `viewers@gmail.com`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "description": "Required. Role that is assigned to `members`.",
          "type": "string"
        }
      },
      "id": "SasPortalAssignment"
    },
    "SasPortalStatus": {
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "SasPortalStatus"
    },
    "SasPortalDeviceAirInterface": {
      "type": "object",
      "id": "SasPortalDeviceAirInterface",
      "description": "Information about the device's air interface.",
      "properties": {
        "supportedSpec": {
          "description": "Optional. This field is related to the `radioTechnology` and provides the air interface specification that the CBSD is compliant with at the time of registration.",
          "type": "string"
        },
        "radioTechnology": {
          "description": "Conditional. This field specifies the radio access technology that is used for the CBSD.",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "RADIO_TECHNOLOGY_UNSPECIFIED",
            "E_UTRA",
            "CAMBIUM_NETWORKS",
            "FOUR_G_BBW_SAA_1",
            "NR",
            "DOODLE_CBRS",
            "CW",
            "REDLINE",
            "TARANA_WIRELESS"
          ],
          "type": "string"
        }
      }
    },
    "SasPortalTestPermissionsRequest": {
      "type": "object",
      "description": "Request message for `TestPermissions` method.",
      "properties": {
        "resource": {
          "type": "string",
          "description": "Required. The resource for which the permissions are being requested."
        },
        "permissions": {
          "description": "The set of permissions to check for the `resource`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "SasPortalTestPermissionsRequest"
    },
    "SasPortalListDeploymentsResponse": {
      "id": "SasPortalListDeploymentsResponse",
      "properties": {
        "deployments": {
          "description": "The deployments that match the request.",
          "items": {
            "$ref": "SasPortalDeployment"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListDeployments that indicates from where listing should continue. If the field is missing or empty, it means there are no more deployments.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response for ListDeployments."
    },
    "SasPortalTestPermissionsResponse": {
      "properties": {
        "permissions": {
          "type": "array",
          "description": "A set of permissions that the caller is allowed.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "SasPortalTestPermissionsResponse",
      "description": "Response message for `TestPermissions` method."
    },
    "SasPortalPolicy": {
      "description": "Defines an access control policy to the resources.",
      "properties": {
        "etag": {
          "description": "The etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to GetPolicy, and systems are expected to put that etag in the request to SetPolicy to ensure that their change will be applied to the same version of the policy. If no etag is provided in the call to GetPolicy, then the existing policy is overwritten blindly.",
          "type": "string",
          "format": "byte"
        },
        "assignments": {
          "description": "List of assignments",
          "type": "array",
          "items": {
            "$ref": "SasPortalAssignment"
          }
        }
      },
      "type": "object",
      "id": "SasPortalPolicy"
    },
    "SasPortalUpdateSignedDeviceRequest": {
      "description": "Request for UpdateSignedDevice.",
      "id": "SasPortalUpdateSignedDeviceRequest",
      "properties": {
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer ID (CPI ID) from the Certified Professional Installers database."
        },
        "encodedDevice": {
          "format": "byte",
          "type": "string",
          "description": "Required. The JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set."
        }
      },
      "type": "object"
    },
    "SasPortalDeviceMetadata": {
      "description": "Device data overridable by both SAS Portal and registration requests.",
      "type": "object",
      "properties": {
        "antennaModel": {
          "description": "If populated, the Antenna Model Pattern to use. Format is: `RecordCreatorId:PatternId`",
          "type": "string"
        },
        "nrqzValidation": {
          "$ref": "SasPortalNrqzValidation",
          "readOnly": true,
          "description": "Output only. National Radio Quiet Zone validation info."
        },
        "commonChannelGroup": {
          "type": "string",
          "description": "Common Channel Group (CCG). A group of CBSDs in the same ICG requesting a common primary channel assignment. For more details, see [CBRSA-TS-2001 V3.0.0](https://ongoalliance.org/wp-content/uploads/2020/02/CBRSA-TS-2001-V3.0.0_Approved-for-publication.pdf)."
        },
        "nrqzValidated": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Set to `true` if a CPI has validated that they have coordinated with the National Quiet Zone office.",
          "deprecated": true
        },
        "interferenceCoordinationGroup": {
          "type": "string",
          "description": "Interference Coordination Group (ICG). A group of CBSDs that manage their own interference with the group. For more details, see [CBRSA-TS-2001 V3.0.0](https://ongoalliance.org/wp-content/uploads/2020/02/CBRSA-TS-2001-V3.0.0_Approved-for-publication.pdf)."
        }
      },
      "id": "SasPortalDeviceMetadata"
    },
    "SasPortalGenerateSecretRequest": {
      "properties": {},
      "type": "object",
      "description": "Request for GenerateSecret.",
      "id": "SasPortalGenerateSecretRequest"
    },
    "SasPortalNrqzValidation": {
      "id": "SasPortalNrqzValidation",
      "type": "object",
      "properties": {
        "cpiId": {
          "description": "CPI who signed the validation.",
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Device latitude that's associated with the validation."
        },
        "caseId": {
          "type": "string",
          "description": "Validation case ID."
        },
        "longitude": {
          "format": "double",
          "type": "number",
          "description": "Device longitude that's associated with the validation."
        },
        "state": {
          "enumDescriptions": [
            "Unspecified state.",
            "Draft state.",
            "Final state."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "FINAL"
          ],
          "type": "string",
          "description": "State of the NRQZ validation info."
        }
      },
      "description": "Information about National Radio Quiet Zone validation."
    },
    "SasPortalDevice": {
      "type": "object",
      "properties": {
        "activeConfig": {
          "description": "Output only. Current configuration of the device as registered to the SAS.",
          "$ref": "SasPortalDeviceConfig"
        },
        "fccId": {
          "type": "string",
          "description": "The FCC identifier of the device."
        },
        "currentChannels": {
          "items": {
            "$ref": "SasPortalChannelWithScore"
          },
          "readOnly": true,
          "type": "array",
          "deprecated": true,
          "description": "Output only. Current channels with scores."
        },
        "preloadedConfig": {
          "$ref": "SasPortalDeviceConfig",
          "description": "Configuration of the device, as specified via SAS Portal API."
        },
        "state": {
          "enum": [
            "DEVICE_STATE_UNSPECIFIED",
            "RESERVED",
            "REGISTERED",
            "DEREGISTERED"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Device created in the SAS Portal, however, not yet registered with SAS.",
            "Device registered with SAS.",
            "Device de-registered with SAS."
          ],
          "description": "Output only. Device state.",
          "type": "string"
        },
        "serialNumber": {
          "description": "A serial number assigned to the device by the device manufacturer.",
          "type": "string"
        },
        "displayName": {
          "description": "Device display name.",
          "type": "string"
        },
        "deviceMetadata": {
          "description": "Device parameters that can be overridden by both SAS Portal and SAS registration requests.",
          "$ref": "SasPortalDeviceMetadata"
        },
        "grants": {
          "type": "array",
          "description": "Output only. Grants held by the device.",
          "items": {
            "$ref": "SasPortalDeviceGrant"
          }
        },
        "grantRangeAllowlists": {
          "description": "Only ranges that are within the allowlists are available for new grants.",
          "items": {
            "$ref": "SasPortalFrequencyRange"
          },
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource path name."
        }
      },
      "id": "SasPortalDevice"
    },
    "SasPortalGetPolicyRequest": {
      "properties": {
        "resource": {
          "type": "string",
          "description": "Required. The resource for which the policy is being requested."
        }
      },
      "description": "Request message for `GetPolicy` method.",
      "id": "SasPortalGetPolicyRequest",
      "type": "object"
    },
    "SasPortalMigrateOrganizationMetadata": {
      "description": "Long-running operation metadata message returned by the MigrateOrganization.",
      "id": "SasPortalMigrateOrganizationMetadata",
      "type": "object",
      "properties": {
        "operationState": {
          "readOnly": true,
          "description": "Output only. Current operation state",
          "type": "string",
          "enum": [
            "OPERATION_STATE_UNSPECIFIED",
            "OPERATION_STATE_PENDING",
            "OPERATION_STATE_RUNNING",
            "OPERATION_STATE_SUCCEEDED",
            "OPERATION_STATE_FAILED"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Pending (Not started).",
            "In-progress.",
            "Done successfully.",
            "Done with errors."
          ]
        }
      }
    },
    "SasPortalCheckHasProvisionedDeploymentResponse": {
      "id": "SasPortalCheckHasProvisionedDeploymentResponse",
      "description": "Response for [CheckHasProvisionedDeployment]. [spectrum.sas.portal.v1alpha1.Provisioning.CheckHasProvisionedDeployment].",
      "type": "object",
      "properties": {
        "hasProvisionedDeployment": {
          "type": "boolean",
          "description": "Whether a SAS deployment for the authentication context exists."
        }
      }
    },
    "SasPortalOperation": {
      "id": "SasPortalOperation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "$ref": "SasPortalStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "type": "object",
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      }
    },
    "SasPortalMigrateOrganizationResponse": {
      "properties": {
        "deploymentAssociation": {
          "type": "array",
          "items": {
            "$ref": "SasPortalDeploymentAssociation"
          },
          "description": "Optional. A list of deployment association that were created for the migration, or current associations if they already exist."
        }
      },
      "type": "object",
      "id": "SasPortalMigrateOrganizationResponse",
      "description": "Response for [MigrateOrganization]. [spectrum.sas.portal.v1alpha1.Provisioning.MigrateOrganization]."
    },
    "SasPortalListDevicesResponse": {
      "description": "Response for ListDevices.",
      "type": "object",
      "properties": {
        "devices": {
          "description": "The devices that match the request.",
          "items": {
            "$ref": "SasPortalDevice"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token returned from a previous call to ListDevices that indicates from where listing should continue. If the field is missing or empty, it means there is no more devices."
        }
      },
      "id": "SasPortalListDevicesResponse"
    },
    "SasPortalDeployment": {
      "properties": {
        "frns": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Output only. The FCC Registration Numbers (FRNs) copied from its direct parent.",
          "type": "array"
        },
        "sasUserIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "User ID used by the devices belonging to this deployment. Each deployment should be associated with one unique user ID."
        },
        "displayName": {
          "description": "The deployment's display name.",
          "type": "string"
        },
        "name": {
          "description": "Output only. Resource name.",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "SasPortalDeployment",
      "description": "The Deployment.",
      "type": "object"
    },
    "SasPortalEmpty": {
      "id": "SasPortalEmpty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object"
    }
  },
  "parameters": {
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query",
      "type": "boolean"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "location": "query"
    }
  },
  "version": "v1alpha1",
  "baseUrl": "https://prod-tt-sasportal.googleapis.com/",
  "discoveryVersion": "v1",
  "title": "SAS Portal API (Testing)",
  "resources": {
    "customers": {
      "resources": {
        "deployments": {
          "resources": {
            "devices": {
              "methods": {
                "createSigned": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the parent resource.",
                      "type": "string",
                      "pattern": "^customers/[^/]+/deployments/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "prod_tt_sasportal.customers.deployments.devices.createSigned",
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices:createSigned",
                  "description": "Creates a signed device under a node or customer.",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "SasPortalDevice"
                  }
                },
                "list": {
                  "description": "Lists devices under a node or customer.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^customers/[^/]+/deployments/[^/]+$",
                      "description": "Required. The name of the parent resource."
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive."
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "httpMethod": "GET",
                  "id": "prod_tt_sasportal.customers.deployments.devices.list",
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices",
                  "path": "v1alpha1/{+parent}/devices"
                },
                "create": {
                  "path": "v1alpha1/{+parent}/devices",
                  "id": "prod_tt_sasportal.customers.deployments.devices.create",
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource.",
                      "location": "path",
                      "pattern": "^customers/[^/]+/deployments/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a device under a node or customer."
                }
              }
            }
          },
          "methods": {
            "create": {
              "parameters": {
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "description": "Required. The parent resource name where the deployment is to be created.",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "path": "v1alpha1/{+parent}/deployments",
              "id": "prod_tt_sasportal.customers.deployments.create",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "flatPath": "v1alpha1/customers/{customersId}/deployments",
              "request": {
                "$ref": "SasPortalDeployment"
              },
              "description": "Creates a new deployment.",
              "response": {
                "$ref": "SasPortalDeployment"
              }
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}",
              "id": "prod_tt_sasportal.customers.deployments.get",
              "description": "Returns a requested deployment.",
              "parameters": {
                "name": {
                  "description": "Required. The name of the deployment.",
                  "required": true,
                  "location": "path",
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "httpMethod": "GET",
              "path": "v1alpha1/{+name}"
            },
            "list": {
              "description": "Lists deployments.",
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of deployments to return in the response.",
                  "format": "int32"
                },
                "parent": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2.",
                  "required": true
                },
                "filter": {
                  "location": "query",
                  "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered.",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from."
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/deployments",
              "response": {
                "$ref": "SasPortalListDeploymentsResponse"
              },
              "path": "v1alpha1/{+parent}/deployments",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "id": "prod_tt_sasportal.customers.deployments.list",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ]
            },
            "move": {
              "id": "prod_tt_sasportal.customers.deployments.move",
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the deployment to move."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}:move",
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "description": "Moves a deployment under another node or customer.",
              "request": {
                "$ref": "SasPortalMoveDeploymentRequest"
              },
              "path": "v1alpha1/{+name}:move",
              "response": {
                "$ref": "SasPortalOperation"
              }
            },
            "delete": {
              "description": "Deletes a deployment.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}",
              "id": "prod_tt_sasportal.customers.deployments.delete",
              "httpMethod": "DELETE",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the deployment.",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ]
            },
            "patch": {
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "path": "v1alpha1/{+name}",
              "description": "Updates an existing deployment.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalDeployment"
              },
              "id": "prod_tt_sasportal.customers.deployments.patch",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "description": "Output only. Resource name.",
                  "type": "string"
                },
                "updateMask": {
                  "location": "query",
                  "description": "Fields to be updated.",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}"
            }
          }
        },
        "devices": {
          "methods": {
            "patch": {
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+name}",
              "description": "Updates a device.",
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query",
                  "description": "Fields to be updated."
                },
                "name": {
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Output only. The resource path name."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "request": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.customers.devices.patch"
            },
            "list": {
              "httpMethod": "GET",
              "id": "prod_tt_sasportal.customers.devices.list",
              "parameters": {
                "filter": {
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive.",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from."
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                  "location": "query"
                },
                "parent": {
                  "description": "Required. The name of the parent resource.",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^customers/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "path": "v1alpha1/{+parent}/devices",
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "description": "Lists devices under a node or customer."
            },
            "delete": {
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the device.",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "id": "prod_tt_sasportal.customers.devices.delete",
              "description": "Deletes a device.",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "path": "v1alpha1/{+name}"
            },
            "move": {
              "parameterOrder": [
                "name"
              ],
              "description": "Moves a device under another node or customer.",
              "path": "v1alpha1/{+name}:move",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:move",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalOperation"
              },
              "id": "prod_tt_sasportal.customers.devices.move",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the device to move.",
                  "type": "string",
                  "pattern": "^customers/[^/]+/devices/[^/]+$"
                }
              }
            },
            "updateSigned": {
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the device to update.",
                  "location": "path"
                }
              },
              "id": "prod_tt_sasportal.customers.devices.updateSigned",
              "parameterOrder": [
                "name"
              ],
              "description": "Updates a signed device.",
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:updateSigned",
              "path": "v1alpha1/{+name}:updateSigned",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              }
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. The name of the parent resource.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "httpMethod": "POST",
              "id": "prod_tt_sasportal.customers.devices.create",
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "path": "v1alpha1/{+parent}/devices",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "description": "Creates a device under a node or customer."
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "description": "Gets details about a device.",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "httpMethod": "GET",
              "id": "prod_tt_sasportal.customers.devices.get",
              "parameters": {
                "name": {
                  "description": "Required. The name of the device.",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "response": {
                "$ref": "SasPortalDevice"
              }
            },
            "signDevice": {
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "id": "prod_tt_sasportal.customers.devices.signDevice",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "httpMethod": "POST",
              "description": "Signs a device.",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "description": "Output only. The resource path name."
                }
              },
              "path": "v1alpha1/{+name}:signDevice",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:signDevice",
              "parameterOrder": [
                "name"
              ]
            },
            "createSigned": {
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "id": "prod_tt_sasportal.customers.devices.createSigned",
              "flatPath": "v1alpha1/customers/{customersId}/devices:createSigned",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^customers/[^/]+$"
                }
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "description": "Creates a signed device under a node or customer.",
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ]
            }
          }
        },
        "nodes": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "path": "v1alpha1/{+parent}/nodes",
              "id": "prod_tt_sasportal.customers.nodes.list",
              "description": "Lists nodes.",
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "pattern": "^customers/[^/]+$",
                  "location": "path"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of nodes to return in the response.",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered."
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from."
                }
              },
              "httpMethod": "GET"
            },
            "delete": {
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "httpMethod": "DELETE",
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.customers.nodes.delete",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "description": "Required. The name of the node.",
                  "location": "path",
                  "type": "string"
                }
              },
              "description": "Deletes a node.",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}"
            },
            "create": {
              "parameterOrder": [
                "parent"
              ],
              "description": "Creates a new node.",
              "id": "prod_tt_sasportal.customers.nodes.create",
              "response": {
                "$ref": "SasPortalNode"
              },
              "request": {
                "$ref": "SasPortalNode"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "httpMethod": "POST",
              "path": "v1alpha1/{+parent}/nodes",
              "parameters": {
                "parent": {
                  "description": "Required. The parent resource name where the node is to be created.",
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/nodes"
            },
            "move": {
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "parameters": {
                "name": {
                  "description": "Required. The name of the node to move.",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "id": "prod_tt_sasportal.customers.nodes.move",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}:move",
              "description": "Moves a node under another node or customer.",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}:move",
              "httpMethod": "POST"
            },
            "patch": {
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Output only. Resource name.",
                  "type": "string"
                },
                "updateMask": {
                  "type": "string",
                  "description": "Fields to be updated.",
                  "format": "google-fieldmask",
                  "location": "query"
                }
              },
              "id": "prod_tt_sasportal.customers.nodes.patch",
              "httpMethod": "PATCH",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "request": {
                "$ref": "SasPortalNode"
              },
              "description": "Updates an existing node.",
              "response": {
                "$ref": "SasPortalNode"
              }
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalNode"
              },
              "path": "v1alpha1/{+name}",
              "httpMethod": "GET",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "description": "Returns a requested node.",
              "id": "prod_tt_sasportal.customers.nodes.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "description": "Required. The name of the node.",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              }
            }
          },
          "resources": {
            "deployments": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "description": "Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2.",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "The maximum number of deployments to return in the response.",
                      "format": "int32",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from."
                    }
                  },
                  "description": "Lists deployments.",
                  "path": "v1alpha1/{+parent}/deployments",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/deployments",
                  "response": {
                    "$ref": "SasPortalListDeploymentsResponse"
                  },
                  "id": "prod_tt_sasportal.customers.nodes.deployments.list"
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "description": "Required. The parent resource name where the deployment is to be created.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Creates a new deployment.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "id": "prod_tt_sasportal.customers.nodes.deployments.create",
                  "request": {
                    "$ref": "SasPortalDeployment"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/deployments",
                  "path": "v1alpha1/{+parent}/deployments",
                  "response": {
                    "$ref": "SasPortalDeployment"
                  }
                }
              }
            },
            "nodes": {
              "methods": {
                "list": {
                  "description": "Lists nodes.",
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/nodes",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered."
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent resource name, for example, \"nodes/1\".",
                      "type": "string",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of nodes to return in the response."
                    },
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "id": "prod_tt_sasportal.customers.nodes.nodes.list",
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  }
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent resource name where the node is to be created."
                    }
                  },
                  "id": "prod_tt_sasportal.customers.nodes.nodes.create",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/nodes",
                  "description": "Creates a new node.",
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "response": {
                    "$ref": "SasPortalNode"
                  }
                }
              }
            },
            "devices": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "description": "Lists devices under a node or customer.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/devices",
                  "id": "prod_tt_sasportal.customers.nodes.devices.list",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]."
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "location": "path"
                    },
                    "filter": {
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from."
                    }
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices"
                },
                "create": {
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "id": "prod_tt_sasportal.customers.nodes.devices.create",
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "description": "Creates a device under a node or customer.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "path": "v1alpha1/{+parent}/devices"
                },
                "createSigned": {
                  "id": "prod_tt_sasportal.customers.nodes.devices.createSigned",
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$"
                    }
                  },
                  "description": "Creates a signed device under a node or customer.",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices:createSigned",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            }
          }
        }
      },
      "methods": {
        "provisionDeployment": {
          "path": "v1alpha1/customers:provisionDeployment",
          "httpMethod": "POST",
          "response": {
            "$ref": "SasPortalProvisionDeploymentResponse"
          },
          "parameterOrder": [],
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "request": {
            "$ref": "SasPortalProvisionDeploymentRequest"
          },
          "id": "prod_tt_sasportal.customers.provisionDeployment",
          "description": "Creates a new SAS deployment through the GCP workflow. Creates a SAS organization if an organization match is not found.",
          "flatPath": "v1alpha1/customers:provisionDeployment"
        },
        "patch": {
          "flatPath": "v1alpha1/customers/{customersId}",
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "httpMethod": "PATCH",
          "id": "prod_tt_sasportal.customers.patch",
          "path": "v1alpha1/{+name}",
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "SasPortalCustomer"
          },
          "description": "Updates an existing customer.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "parameters": {
            "updateMask": {
              "location": "query",
              "type": "string",
              "format": "google-fieldmask",
              "description": "Fields to be updated."
            },
            "name": {
              "type": "string",
              "location": "path",
              "pattern": "^customers/[^/]+$",
              "required": true,
              "description": "Output only. Resource name of the customer."
            }
          }
        },
        "migrateOrganization": {
          "httpMethod": "POST",
          "path": "v1alpha1/customers:migrateOrganization",
          "request": {
            "$ref": "SasPortalMigrateOrganizationRequest"
          },
          "parameters": {},
          "response": {
            "$ref": "SasPortalOperation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "parameterOrder": [],
          "flatPath": "v1alpha1/customers:migrateOrganization",
          "id": "prod_tt_sasportal.customers.migrateOrganization",
          "description": "Migrates a SAS organization to the cloud. This will create GCP projects for each deployment and associate them. The SAS Organization is linked to the gcp project that called the command. go/sas-legacy-customer-migration"
        },
        "setupSasAnalytics": {
          "httpMethod": "POST",
          "flatPath": "v1alpha1/customers:setupSasAnalytics",
          "path": "v1alpha1/customers:setupSasAnalytics",
          "parameterOrder": [],
          "request": {
            "$ref": "SasPortalSetupSasAnalyticsRequest"
          },
          "response": {
            "$ref": "SasPortalOperation"
          },
          "parameters": {},
          "description": "Setups the a GCP Project to receive SAS Analytics messages via GCP Pub/Sub with a subscription to BigQuery. All the Pub/Sub topics and BigQuery tables are created automatically as part of this service.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "id": "prod_tt_sasportal.customers.setupSasAnalytics"
        },
        "list": {
          "path": "v1alpha1/customers",
          "flatPath": "v1alpha1/customers",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "SasPortalListCustomersResponse"
          },
          "description": "Returns a list of requested customers.",
          "id": "prod_tt_sasportal.customers.list",
          "parameters": {
            "pageSize": {
              "type": "integer",
              "description": "The maximum number of customers to return in the response.",
              "location": "query",
              "format": "int32"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A pagination token returned from a previous call to ListCustomers that indicates where this listing should continue from."
            }
          },
          "parameterOrder": []
        },
        "checkHasProvisionedDeployment": {
          "description": "Checks whether a SAS deployment for the authentication context exists.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "flatPath": "v1alpha1/customers:checkHasProvisionedDeployment",
          "httpMethod": "GET",
          "id": "prod_tt_sasportal.customers.checkHasProvisionedDeployment",
          "parameters": {},
          "response": {
            "$ref": "SasPortalCheckHasProvisionedDeploymentResponse"
          },
          "path": "v1alpha1/customers:checkHasProvisionedDeployment",
          "parameterOrder": []
        },
        "get": {
          "id": "prod_tt_sasportal.customers.get",
          "path": "v1alpha1/{+name}",
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "description": "Required. The name of the customer.",
              "type": "string",
              "location": "path",
              "required": true,
              "pattern": "^customers/[^/]+$"
            }
          },
          "description": "Returns a requested customer.",
          "flatPath": "v1alpha1/customers/{customersId}",
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ]
        }
      }
    },
    "installer": {
      "methods": {
        "validate": {
          "response": {
            "$ref": "SasPortalValidateInstallerResponse"
          },
          "request": {
            "$ref": "SasPortalValidateInstallerRequest"
          },
          "httpMethod": "POST",
          "flatPath": "v1alpha1/installer:validate",
          "path": "v1alpha1/installer:validate",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "description": "Validates the identity of a Certified Professional Installer (CPI).",
          "parameters": {},
          "id": "prod_tt_sasportal.installer.validate"
        },
        "generateSecret": {
          "flatPath": "v1alpha1/installer:generateSecret",
          "httpMethod": "POST",
          "path": "v1alpha1/installer:generateSecret",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "id": "prod_tt_sasportal.installer.generateSecret",
          "parameterOrder": [],
          "response": {
            "$ref": "SasPortalGenerateSecretResponse"
          },
          "parameters": {},
          "description": "Generates a secret to be used with the ValidateInstaller.",
          "request": {
            "$ref": "SasPortalGenerateSecretRequest"
          }
        }
      }
    },
    "deployments": {
      "resources": {
        "devices": {
          "methods": {
            "delete": {
              "path": "v1alpha1/{+name}",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.deployments.devices.delete",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}",
              "parameters": {
                "name": {
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the device."
                }
              },
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "description": "Deletes a device."
            },
            "updateSigned": {
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "id": "prod_tt_sasportal.deployments.devices.updateSigned",
              "description": "Updates a signed device.",
              "parameters": {
                "name": {
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device to update.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:updateSigned",
              "httpMethod": "PATCH",
              "path": "v1alpha1/{+name}:updateSigned"
            },
            "move": {
              "path": "v1alpha1/{+name}:move",
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.deployments.devices.move",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:move",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "description": "Moves a device under another node or customer.",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the device to move.",
                  "required": true,
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ]
            },
            "patch": {
              "id": "prod_tt_sasportal.deployments.devices.patch",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+name}",
              "description": "Updates a device.",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "description": "Output only. The resource path name.",
                  "required": true
                },
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "type": "string",
                  "description": "Fields to be updated."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "httpMethod": "PATCH"
            },
            "signDevice": {
              "id": "prod_tt_sasportal.deployments.devices.signDevice",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "description": "Signs a device.",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:signDevice",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Output only. The resource path name.",
                  "required": true
                }
              },
              "path": "v1alpha1/{+name}:signDevice"
            },
            "get": {
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "description": "Gets details about a device.",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device.",
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "id": "prod_tt_sasportal.deployments.devices.get",
              "parameterOrder": [
                "name"
              ]
            }
          }
        }
      },
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1alpha1/deployments/{deploymentsId}",
          "parameters": {
            "name": {
              "type": "string",
              "pattern": "^deployments/[^/]+$",
              "location": "path",
              "required": true,
              "description": "Required. The name of the deployment."
            }
          },
          "httpMethod": "GET",
          "description": "Returns a requested deployment.",
          "id": "prod_tt_sasportal.deployments.get",
          "path": "v1alpha1/{+name}",
          "response": {
            "$ref": "SasPortalDeployment"
          }
        }
      }
    },
    "policies": {
      "methods": {
        "set": {
          "id": "prod_tt_sasportal.policies.set",
          "parameters": {},
          "flatPath": "v1alpha1/policies:set",
          "httpMethod": "POST",
          "path": "v1alpha1/policies:set",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "parameterOrder": [],
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "request": {
            "$ref": "SasPortalSetPolicyRequest"
          },
          "description": "Sets the access control policy on the specified resource. Replaces any existing policy."
        },
        "get": {
          "flatPath": "v1alpha1/policies:get",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "httpMethod": "POST",
          "request": {
            "$ref": "SasPortalGetPolicyRequest"
          },
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
          "path": "v1alpha1/policies:get",
          "parameterOrder": [],
          "id": "prod_tt_sasportal.policies.get",
          "parameters": {}
        },
        "test": {
          "parameters": {},
          "path": "v1alpha1/policies:test",
          "response": {
            "$ref": "SasPortalTestPermissionsResponse"
          },
          "flatPath": "v1alpha1/policies:test",
          "id": "prod_tt_sasportal.policies.test",
          "description": "Returns permissions that a caller has on the specified resource.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "httpMethod": "POST",
          "parameterOrder": [],
          "request": {
            "$ref": "SasPortalTestPermissionsRequest"
          }
        }
      }
    },
    "nodes": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "response": {
            "$ref": "SasPortalNode"
          },
          "parameters": {
            "name": {
              "type": "string",
              "description": "Required. The name of the node.",
              "location": "path",
              "required": true,
              "pattern": "^nodes/[^/]+$"
            }
          },
          "description": "Returns a requested node.",
          "path": "v1alpha1/{+name}",
          "parameterOrder": [
            "name"
          ],
          "id": "prod_tt_sasportal.nodes.get",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sasportal"
          ],
          "flatPath": "v1alpha1/nodes/{nodesId}"
        }
      },
      "resources": {
        "deployments": {
          "methods": {
            "list": {
              "path": "v1alpha1/{+parent}/deployments",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "description": "Lists deployments.",
              "parameterOrder": [
                "parent"
              ],
              "id": "prod_tt_sasportal.nodes.deployments.list",
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments",
              "parameters": {
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of deployments to return in the response.",
                  "location": "query"
                },
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2.",
                  "location": "path"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered."
                }
              },
              "response": {
                "$ref": "SasPortalListDeploymentsResponse"
              }
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the deployment."
                }
              },
              "httpMethod": "DELETE",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "description": "Deletes a deployment.",
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}",
              "id": "prod_tt_sasportal.nodes.deployments.delete"
            },
            "patch": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "id": "prod_tt_sasportal.nodes.deployments.patch",
              "request": {
                "$ref": "SasPortalDeployment"
              },
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "description": "Output only. Resource name.",
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "location": "query",
                  "type": "string",
                  "description": "Fields to be updated.",
                  "format": "google-fieldmask"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Updates an existing deployment.",
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}",
              "path": "v1alpha1/{+name}"
            },
            "get": {
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the deployment.",
                  "type": "string",
                  "required": true,
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$"
                }
              },
              "description": "Returns a requested deployment.",
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.nodes.deployments.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "SasPortalDeployment"
              }
            },
            "move": {
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalMoveDeploymentRequest"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the deployment to move.",
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "response": {
                "$ref": "SasPortalOperation"
              },
              "description": "Moves a deployment under another node or customer.",
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}:move",
              "id": "prod_tt_sasportal.nodes.deployments.move",
              "path": "v1alpha1/{+name}:move",
              "httpMethod": "POST"
            }
          },
          "resources": {
            "devices": {
              "methods": {
                "createSigned": {
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "description": "Creates a signed device under a node or customer.",
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices:createSigned",
                  "id": "prod_tt_sasportal.nodes.deployments.devices.createSigned",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "location": "path",
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ]
                },
                "create": {
                  "description": "Creates a device under a node or customer.",
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "prod_tt_sasportal.nodes.deployments.devices.create",
                  "path": "v1alpha1/{+parent}/devices",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "SasPortalDevice"
                  }
                },
                "list": {
                  "id": "prod_tt_sasportal.nodes.deployments.devices.list",
                  "parameters": {
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive."
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "path": "v1alpha1/{+parent}/devices",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "description": "Lists devices under a node or customer.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices"
                }
              }
            }
          }
        },
        "nodes": {
          "resources": {
            "deployments": {
              "methods": {
                "list": {
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/deployments",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of deployments to return in the response.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "parent": {
                      "description": "Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                    }
                  },
                  "path": "v1alpha1/{+parent}/deployments",
                  "httpMethod": "GET",
                  "id": "prod_tt_sasportal.nodes.nodes.deployments.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists deployments.",
                  "response": {
                    "$ref": "SasPortalListDeploymentsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ]
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "description": "Required. The parent resource name where the deployment is to be created.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "httpMethod": "POST",
                  "description": "Creates a new deployment.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/deployments",
                  "id": "prod_tt_sasportal.nodes.nodes.deployments.create",
                  "request": {
                    "$ref": "SasPortalDeployment"
                  },
                  "response": {
                    "$ref": "SasPortalDeployment"
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/deployments"
                }
              }
            },
            "nodes": {
              "methods": {
                "create": {
                  "response": {
                    "$ref": "SasPortalNode"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/nodes",
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "description": "Required. The parent resource name where the node is to be created."
                    }
                  },
                  "description": "Creates a new node.",
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ]
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "filter": {
                      "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "description": "Required. The parent resource name, for example, \"nodes/1\".",
                      "location": "path",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from.",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "The maximum number of nodes to return in the response.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.list",
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "description": "Lists nodes.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "path": "v1alpha1/{+parent}/nodes",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes"
                }
              }
            },
            "devices": {
              "methods": {
                "createSigned": {
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:createSigned",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "location": "path"
                    }
                  },
                  "id": "prod_tt_sasportal.nodes.nodes.devices.createSigned",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "description": "Creates a signed device under a node or customer.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "list": {
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive."
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "type": "integer"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists devices under a node or customer.",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.list",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "path": "v1alpha1/{+parent}/devices",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "httpMethod": "GET"
                },
                "create": {
                  "description": "Creates a device under a node or customer.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/sasportal"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "prod_tt_sasportal.nodes.nodes.devices.create",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "path": "v1alpha1/{+parent}/devices",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            }
          },
          "methods": {
            "delete": {
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the node.",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "id": "prod_tt_sasportal.nodes.nodes.delete",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "description": "Deletes a node.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE"
            },
            "list": {
              "id": "prod_tt_sasportal.nodes.nodes.list",
              "description": "Lists nodes.",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "pattern": "^nodes/[^/]+$",
                  "type": "string",
                  "location": "path"
                },
                "filter": {
                  "location": "query",
                  "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of nodes to return in the response.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "httpMethod": "GET",
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "path": "v1alpha1/{+parent}/nodes"
            },
            "create": {
              "response": {
                "$ref": "SasPortalNode"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "id": "prod_tt_sasportal.nodes.nodes.create",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "description": "Creates a new node.",
              "request": {
                "$ref": "SasPortalNode"
              },
              "path": "v1alpha1/{+parent}/nodes",
              "parameters": {
                "parent": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^nodes/[^/]+$",
                  "description": "Required. The parent resource name where the node is to be created."
                }
              },
              "parameterOrder": [
                "parent"
              ]
            },
            "move": {
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalOperation"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}:move",
              "id": "prod_tt_sasportal.nodes.nodes.move",
              "description": "Moves a node under another node or customer.",
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "description": "Required. The name of the node to move."
                }
              },
              "path": "v1alpha1/{+name}:move",
              "httpMethod": "POST"
            },
            "patch": {
              "httpMethod": "PATCH",
              "response": {
                "$ref": "SasPortalNode"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "description": "Output only. Resource name.",
                  "type": "string"
                },
                "updateMask": {
                  "location": "query",
                  "type": "string",
                  "description": "Fields to be updated.",
                  "format": "google-fieldmask"
                }
              },
              "description": "Updates an existing node.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.nodes.nodes.patch",
              "request": {
                "$ref": "SasPortalNode"
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}"
            },
            "get": {
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "httpMethod": "GET",
              "id": "prod_tt_sasportal.nodes.nodes.get",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the node.",
                  "type": "string",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalNode"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "path": "v1alpha1/{+name}",
              "description": "Returns a requested node."
            }
          }
        },
        "devices": {
          "methods": {
            "delete": {
              "description": "Deletes a device.",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the device.",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true
                }
              },
              "id": "prod_tt_sasportal.nodes.devices.delete",
              "path": "v1alpha1/{+name}"
            },
            "updateSigned": {
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "httpMethod": "PATCH",
              "path": "v1alpha1/{+name}:updateSigned",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:updateSigned",
              "id": "prod_tt_sasportal.nodes.devices.updateSigned",
              "description": "Updates a signed device.",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the device to update.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$"
                }
              }
            },
            "patch": {
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+name}",
              "httpMethod": "PATCH",
              "parameters": {
                "updateMask": {
                  "description": "Fields to be updated.",
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "description": "Output only. The resource path name.",
                  "required": true,
                  "location": "path"
                }
              },
              "id": "prod_tt_sasportal.nodes.devices.patch",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "description": "Updates a device.",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ]
            },
            "create": {
              "path": "v1alpha1/{+parent}/devices",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The name of the parent resource.",
                  "type": "string",
                  "pattern": "^nodes/[^/]+$",
                  "location": "path"
                }
              },
              "httpMethod": "POST",
              "description": "Creates a device under a node or customer.",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "id": "prod_tt_sasportal.nodes.devices.create",
              "response": {
                "$ref": "SasPortalDevice"
              }
            },
            "createSigned": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameters": {
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "description": "Required. The name of the parent resource.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "id": "prod_tt_sasportal.nodes.devices.createSigned",
              "description": "Creates a signed device under a node or customer.",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:createSigned"
            },
            "get": {
              "httpMethod": "GET",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "description": "Gets details about a device.",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the device.",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "id": "prod_tt_sasportal.nodes.devices.get"
            },
            "move": {
              "response": {
                "$ref": "SasPortalOperation"
              },
              "path": "v1alpha1/{+name}:move",
              "httpMethod": "POST",
              "id": "prod_tt_sasportal.nodes.devices.move",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:move",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "description": "Moves a device under another node or customer.",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the device to move.",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ]
            },
            "signDevice": {
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:signDevice",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Output only. The resource path name."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "id": "prod_tt_sasportal.nodes.devices.signDevice",
              "path": "v1alpha1/{+name}:signDevice",
              "description": "Signs a device.",
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalEmpty"
              }
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sasportal"
              ],
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "path": "v1alpha1/{+parent}/devices",
              "parameterOrder": [
                "parent"
              ],
              "id": "prod_tt_sasportal.nodes.devices.list",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the parent resource."
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]."
                },
                "filter": {
                  "type": "string",
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive.",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                  "type": "string",
                  "location": "query"
                }
              },
              "description": "Lists devices under a node or customer."
            }
          }
        }
      }
    }
  },
  "protocol": "rest"
}

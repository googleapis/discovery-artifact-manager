{
  "parameters": {
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "$.xgafv": {
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "type": "string",
      "default": "json",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true",
      "type": "boolean"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    }
  },
  "discoveryVersion": "v1",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/userinfo.email": {
          "description": "See your primary Google Account email address"
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "name": "prod_tt_sasportal",
  "protocol": "rest",
  "version_module": true,
  "servicePath": "",
  "revision": "20220215",
  "resources": {
    "installer": {
      "methods": {
        "generateSecret": {
          "flatPath": "v1alpha1/installer:generateSecret",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameterOrder": [],
          "id": "prod_tt_sasportal.installer.generateSecret",
          "description": "Generates a secret to be used with the ValidateInstaller.",
          "httpMethod": "POST",
          "path": "v1alpha1/installer:generateSecret",
          "request": {
            "$ref": "SasPortalGenerateSecretRequest"
          },
          "parameters": {},
          "response": {
            "$ref": "SasPortalGenerateSecretResponse"
          }
        },
        "validate": {
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "flatPath": "v1alpha1/installer:validate",
          "id": "prod_tt_sasportal.installer.validate",
          "response": {
            "$ref": "SasPortalValidateInstallerResponse"
          },
          "request": {
            "$ref": "SasPortalValidateInstallerRequest"
          },
          "parameterOrder": [],
          "parameters": {},
          "httpMethod": "POST",
          "description": "Validates the identity of a Certified Professional Installer (CPI).",
          "path": "v1alpha1/installer:validate"
        }
      }
    },
    "deployments": {
      "methods": {
        "get": {
          "path": "v1alpha1/{+name}",
          "httpMethod": "GET",
          "response": {
            "$ref": "SasPortalDeployment"
          },
          "id": "prod_tt_sasportal.deployments.get",
          "description": "Returns a requested deployment.",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "flatPath": "v1alpha1/deployments/{deploymentsId}",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^deployments/[^/]+$",
              "description": "Required. The name of the deployment.",
              "type": "string",
              "required": true
            }
          }
        }
      },
      "resources": {
        "devices": {
          "methods": {
            "delete": {
              "description": "Deletes a device.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the device.",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.deployments.devices.delete",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "httpMethod": "DELETE"
            },
            "move": {
              "response": {
                "$ref": "SasPortalOperation"
              },
              "parameters": {
                "name": {
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device to move.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "description": "Moves a device under another node or customer.",
              "httpMethod": "POST",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:move",
              "id": "prod_tt_sasportal.deployments.devices.move",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}:move",
              "parameterOrder": [
                "name"
              ]
            },
            "signDevice": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "httpMethod": "POST",
              "path": "v1alpha1/{+name}:signDevice",
              "parameters": {
                "name": {
                  "description": "Output only. The resource path name.",
                  "required": true,
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:signDevice",
              "id": "prod_tt_sasportal.deployments.devices.signDevice",
              "parameterOrder": [
                "name"
              ],
              "description": "Signs a device.",
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              }
            },
            "get": {
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.deployments.devices.get",
              "description": "Gets details about a device.",
              "path": "v1alpha1/{+name}",
              "httpMethod": "GET",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}",
              "parameters": {
                "name": {
                  "description": "Required. The name of the device.",
                  "type": "string",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "updateSigned": {
              "description": "Updates a signed device.",
              "httpMethod": "PATCH",
              "path": "v1alpha1/{+name}:updateSigned",
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.deployments.devices.updateSigned",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "parameters": {
                "name": {
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device to update.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:updateSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              }
            },
            "patch": {
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalDevice"
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "description": "Updates a device.",
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.deployments.devices.patch",
              "parameters": {
                "name": {
                  "description": "Output only. The resource path name.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "required": true
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string",
                  "description": "Fields to be updated."
                }
              },
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}"
            }
          }
        }
      }
    },
    "customers": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "path": "v1alpha1/{+name}",
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "parameters": {
            "name": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Required. The name of the customer.",
              "pattern": "^customers/[^/]+$"
            }
          },
          "id": "prod_tt_sasportal.customers.get",
          "httpMethod": "GET",
          "description": "Returns a requested customer.",
          "flatPath": "v1alpha1/customers/{customersId}",
          "parameterOrder": [
            "name"
          ]
        },
        "patch": {
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "parameters": {
            "updateMask": {
              "description": "Fields to be updated.",
              "type": "string",
              "format": "google-fieldmask",
              "location": "query"
            },
            "name": {
              "location": "path",
              "description": "Output only. Resource name of the customer.",
              "pattern": "^customers/[^/]+$",
              "type": "string",
              "required": true
            }
          },
          "httpMethod": "PATCH",
          "description": "Updates an existing customer.",
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "SasPortalCustomer"
          },
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "id": "prod_tt_sasportal.customers.patch",
          "flatPath": "v1alpha1/customers/{customersId}",
          "path": "v1alpha1/{+name}"
        },
        "list": {
          "parameterOrder": [],
          "path": "v1alpha1/customers",
          "flatPath": "v1alpha1/customers",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "httpMethod": "GET",
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A pagination token returned from a previous call to ListCustomers that indicates where this listing should continue from."
            },
            "pageSize": {
              "format": "int32",
              "type": "integer",
              "location": "query",
              "description": "The maximum number of customers to return in the response."
            }
          },
          "description": "Returns a list of requested customers.",
          "response": {
            "$ref": "SasPortalListCustomersResponse"
          },
          "id": "prod_tt_sasportal.customers.list"
        },
        "delete": {
          "id": "prod_tt_sasportal.customers.delete",
          "path": "v1alpha1/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Required. The name of the customer.",
              "pattern": "^customers/[^/]+$"
            }
          },
          "flatPath": "v1alpha1/customers/{customersId}",
          "description": "Deletes a customer.",
          "httpMethod": "DELETE",
          "response": {
            "$ref": "SasPortalEmpty"
          }
        },
        "create": {
          "id": "prod_tt_sasportal.customers.create",
          "parameterOrder": [],
          "httpMethod": "POST",
          "parameters": {},
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "request": {
            "$ref": "SasPortalCustomer"
          },
          "path": "v1alpha1/customers",
          "flatPath": "v1alpha1/customers",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "description": "Creates a new SAS customer."
        }
      },
      "resources": {
        "devices": {
          "methods": {
            "delete": {
              "id": "prod_tt_sasportal.customers.devices.delete",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device.",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "path": "v1alpha1/{+name}",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "description": "Deletes a device."
            },
            "create": {
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the parent resource."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "httpMethod": "POST",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+parent}/devices",
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "parameterOrder": [
                "parent"
              ],
              "id": "prod_tt_sasportal.customers.devices.create",
              "description": "Creates a device under a node or customer."
            },
            "move": {
              "id": "prod_tt_sasportal.customers.devices.move",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "path": "v1alpha1/{+name}:move",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:move",
              "description": "Moves a device under another node or customer.",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the device to move.",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalOperation"
              }
            },
            "updateSigned": {
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "path": "v1alpha1/{+name}:updateSigned",
              "description": "Updates a signed device.",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "httpMethod": "PATCH",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:updateSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.devices.updateSigned",
              "parameters": {
                "name": {
                  "description": "Required. The name of the device to update.",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                  "format": "int32",
                  "type": "integer"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive."
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from."
                },
                "parent": {
                  "description": "Required. The name of the parent resource.",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "prod_tt_sasportal.customers.devices.list",
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "path": "v1alpha1/{+parent}/devices",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Lists devices under a node or customer.",
              "httpMethod": "GET"
            },
            "createSigned": {
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices:createSigned",
              "id": "prod_tt_sasportal.customers.devices.createSigned",
              "httpMethod": "POST",
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the parent resource."
                }
              },
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "description": "Creates a signed device under a node or customer."
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "description": "Gets details about a device.",
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device.",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.devices.get",
              "httpMethod": "GET",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}"
            },
            "patch": {
              "path": "v1alpha1/{+name}",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.customers.devices.patch",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "description": "Updates a device.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "httpMethod": "PATCH",
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Fields to be updated.",
                  "type": "string"
                },
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "Output only. The resource path name.",
                  "location": "path",
                  "pattern": "^customers/[^/]+/devices/[^/]+$"
                }
              },
              "parameterOrder": [
                "name"
              ]
            },
            "signDevice": {
              "httpMethod": "POST",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:signDevice",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "description": "Signs a device.",
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "Output only. The resource path name.",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}:signDevice",
              "id": "prod_tt_sasportal.customers.devices.signDevice"
            }
          }
        },
        "deployments": {
          "resources": {
            "devices": {
              "methods": {
                "list": {
                  "parameters": {
                    "filter": {
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "location": "query",
                      "type": "integer"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the parent resource.",
                      "pattern": "^customers/[^/]+/deployments/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices",
                  "path": "v1alpha1/{+parent}/devices",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "httpMethod": "GET",
                  "id": "prod_tt_sasportal.customers.deployments.devices.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists devices under a node or customer.",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  }
                },
                "createSigned": {
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices:createSigned",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "prod_tt_sasportal.customers.deployments.devices.createSigned",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "location": "path",
                      "pattern": "^customers/[^/]+/deployments/[^/]+$"
                    }
                  },
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "description": "Creates a signed device under a node or customer.",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "SasPortalDevice"
                  }
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^customers/[^/]+/deployments/[^/]+$",
                      "description": "Required. The name of the parent resource.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v1alpha1/{+parent}/devices",
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices",
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "description": "Creates a device under a node or customer.",
                  "id": "prod_tt_sasportal.customers.deployments.devices.create",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SasPortalDevice"
                  }
                }
              }
            }
          },
          "methods": {
            "patch": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.deployments.patch",
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "description": "Updates an existing deployment.",
              "path": "v1alpha1/{+name}",
              "request": {
                "$ref": "SasPortalDeployment"
              },
              "httpMethod": "PATCH",
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "required": true,
                  "description": "Output only. Resource name."
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "description": "Fields to be updated.",
                  "type": "string",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "name"
              ]
            },
            "move": {
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}:move",
              "httpMethod": "POST",
              "path": "v1alpha1/{+name}:move",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the deployment to move.",
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+/deployments/[^/]+$"
                }
              },
              "description": "Moves a deployment under another node or customer.",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalMoveDeploymentRequest"
              },
              "id": "prod_tt_sasportal.customers.deployments.move"
            },
            "delete": {
              "httpMethod": "DELETE",
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}",
              "description": "Deletes a deployment.",
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.customers.deployments.delete",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "description": "Required. The name of the deployment.",
                  "type": "string"
                }
              }
            },
            "get": {
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the deployment."
                }
              },
              "id": "prod_tt_sasportal.customers.deployments.get",
              "parameterOrder": [
                "name"
              ],
              "description": "Returns a requested deployment.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "GET",
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}"
            },
            "create": {
              "id": "prod_tt_sasportal.customers.deployments.create",
              "httpMethod": "POST",
              "request": {
                "$ref": "SasPortalDeployment"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The parent resource name where the deployment is to be created.",
                  "location": "path",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/deployments",
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "description": "Creates a new deployment.",
              "path": "v1alpha1/{+parent}/deployments"
            },
            "list": {
              "description": "Lists deployments.",
              "flatPath": "v1alpha1/customers/{customersId}/deployments",
              "path": "v1alpha1/{+parent}/deployments",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2.",
                  "location": "path",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of deployments to return in the response.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered."
                },
                "pageToken": {
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.deployments.list",
              "response": {
                "$ref": "SasPortalListDeploymentsResponse"
              },
              "httpMethod": "GET"
            }
          }
        },
        "nodes": {
          "methods": {
            "move": {
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the node to move."
                }
              },
              "id": "prod_tt_sasportal.customers.nodes.move",
              "path": "v1alpha1/{+name}:move",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}:move",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Moves a node under another node or customer.",
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalOperation"
              }
            },
            "list": {
              "parameters": {
                "filter": {
                  "location": "query",
                  "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of nodes to return in the response."
                },
                "parent": {
                  "type": "string",
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "required": true,
                  "location": "path",
                  "pattern": "^customers/[^/]+$"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "path": "v1alpha1/{+parent}/nodes",
              "id": "prod_tt_sasportal.customers.nodes.list",
              "parameterOrder": [
                "parent"
              ],
              "description": "Lists nodes.",
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "GET"
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "DELETE",
              "description": "Deletes a node.",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the node.",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "id": "prod_tt_sasportal.customers.nodes.delete",
              "response": {
                "$ref": "SasPortalEmpty"
              }
            },
            "get": {
              "description": "Returns a requested node.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.customers.nodes.get",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "response": {
                "$ref": "SasPortalNode"
              },
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. The name of the node.",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "httpMethod": "GET"
            },
            "patch": {
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "id": "prod_tt_sasportal.customers.nodes.patch",
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalNode"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "PATCH",
              "request": {
                "$ref": "SasPortalNode"
              },
              "description": "Updates an existing node.",
              "parameters": {
                "updateMask": {
                  "description": "Fields to be updated.",
                  "type": "string",
                  "format": "google-fieldmask",
                  "location": "query"
                },
                "name": {
                  "location": "path",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "required": true,
                  "description": "Output only. Resource name.",
                  "type": "string"
                }
              }
            },
            "create": {
              "description": "Creates a new node.",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "SasPortalNode"
              },
              "id": "prod_tt_sasportal.customers.nodes.create",
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "Required. The parent resource name where the node is to be created.",
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "request": {
                "$ref": "SasPortalNode"
              },
              "path": "v1alpha1/{+parent}/nodes",
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            }
          },
          "resources": {
            "deployments": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "SasPortalListDeploymentsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists deployments.",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/deployments",
                  "id": "prod_tt_sasportal.customers.nodes.deployments.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "The maximum number of deployments to return in the response.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2."
                    },
                    "filter": {
                      "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+parent}/deployments"
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "description": "Required. The parent resource name where the deployment is to be created.",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+parent}/deployments",
                  "description": "Creates a new deployment.",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/deployments",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "response": {
                    "$ref": "SasPortalDeployment"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "prod_tt_sasportal.customers.nodes.deployments.create",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "SasPortalDeployment"
                  }
                }
              }
            },
            "devices": {
              "methods": {
                "create": {
                  "path": "v1alpha1/{+parent}/devices",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "prod_tt_sasportal.customers.nodes.devices.create",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices",
                  "description": "Creates a device under a node or customer.",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the parent resource.",
                      "type": "string",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "SasPortalDevice"
                  }
                },
                "createSigned": {
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices:createSigned",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "description": "Required. The name of the parent resource.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "prod_tt_sasportal.customers.nodes.devices.createSigned",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "description": "Creates a signed device under a node or customer."
                },
                "list": {
                  "description": "Lists devices under a node or customer.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the parent resource."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive."
                    }
                  },
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "path": "v1alpha1/{+parent}/devices",
                  "id": "prod_tt_sasportal.customers.nodes.devices.list"
                }
              }
            },
            "nodes": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists nodes.",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered."
                    },
                    "parent": {
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent resource name, for example, \"nodes/1\".",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of nodes to return in the response.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/nodes",
                  "id": "prod_tt_sasportal.customers.nodes.nodes.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ]
                },
                "create": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "prod_tt_sasportal.customers.nodes.nodes.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "path": "v1alpha1/{+parent}/nodes",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "response": {
                    "$ref": "SasPortalNode"
                  },
                  "description": "Creates a new node.",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource name where the node is to be created.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "policies": {
      "methods": {
        "test": {
          "description": "Returns permissions that a caller has on the specified resource.",
          "response": {
            "$ref": "SasPortalTestPermissionsResponse"
          },
          "httpMethod": "POST",
          "path": "v1alpha1/policies:test",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameterOrder": [],
          "id": "prod_tt_sasportal.policies.test",
          "flatPath": "v1alpha1/policies:test",
          "parameters": {},
          "request": {
            "$ref": "SasPortalTestPermissionsRequest"
          }
        },
        "get": {
          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
          "id": "prod_tt_sasportal.policies.get",
          "flatPath": "v1alpha1/policies:get",
          "request": {
            "$ref": "SasPortalGetPolicyRequest"
          },
          "httpMethod": "POST",
          "path": "v1alpha1/policies:get",
          "parameters": {},
          "parameterOrder": [],
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ]
        },
        "set": {
          "path": "v1alpha1/policies:set",
          "description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "request": {
            "$ref": "SasPortalSetPolicyRequest"
          },
          "parameters": {},
          "httpMethod": "POST",
          "parameterOrder": [],
          "id": "prod_tt_sasportal.policies.set",
          "flatPath": "v1alpha1/policies:set",
          "response": {
            "$ref": "SasPortalPolicy"
          }
        }
      }
    },
    "nodes": {
      "resources": {
        "devices": {
          "methods": {
            "patch": {
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.nodes.devices.patch",
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Output only. The resource path name.",
                  "location": "path"
                },
                "updateMask": {
                  "type": "string",
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Fields to be updated."
                }
              },
              "description": "Updates a device.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "request": {
                "$ref": "SasPortalDevice"
              }
            },
            "signDevice": {
              "path": "v1alpha1/{+name}:signDevice",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:signDevice",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "description": "Output only. The resource path name.",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "id": "prod_tt_sasportal.nodes.devices.signDevice",
              "description": "Signs a device.",
              "parameterOrder": [
                "name"
              ]
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+parent}/devices",
              "httpMethod": "POST",
              "description": "Creates a device under a node or customer.",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "request": {
                "$ref": "SasPortalDevice"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^nodes/[^/]+$",
                  "description": "Required. The name of the parent resource."
                }
              },
              "id": "prod_tt_sasportal.nodes.devices.create",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices"
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "filter": {
                  "type": "string",
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive.",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]."
                },
                "pageToken": {
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                  "type": "string"
                },
                "parent": {
                  "required": true,
                  "type": "string",
                  "pattern": "^nodes/[^/]+$",
                  "description": "Required. The name of the parent resource.",
                  "location": "path"
                }
              },
              "path": "v1alpha1/{+parent}/devices",
              "id": "prod_tt_sasportal.nodes.devices.list",
              "description": "Lists devices under a node or customer.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "httpMethod": "GET"
            },
            "delete": {
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Deletes a device.",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.nodes.devices.delete",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "response": {
                "$ref": "SasPortalEmpty"
              }
            },
            "get": {
              "description": "Gets details about a device.",
              "httpMethod": "GET",
              "id": "prod_tt_sasportal.nodes.devices.get",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the device.",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "parameterOrder": [
                "name"
              ]
            },
            "updateSigned": {
              "httpMethod": "PATCH",
              "path": "v1alpha1/{+name}:updateSigned",
              "parameterOrder": [
                "name"
              ],
              "description": "Updates a signed device.",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:updateSigned",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "description": "Required. The name of the device to update.",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$"
                }
              },
              "id": "prod_tt_sasportal.nodes.devices.updateSigned"
            },
            "createSigned": {
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:createSigned",
              "description": "Creates a signed device under a node or customer.",
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "Required. The name of the parent resource.",
                  "type": "string",
                  "required": true,
                  "pattern": "^nodes/[^/]+$"
                }
              },
              "id": "prod_tt_sasportal.nodes.devices.createSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "httpMethod": "POST"
            },
            "move": {
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:move",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Moves a device under another node or customer.",
              "id": "prod_tt_sasportal.nodes.devices.move",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device to move."
                }
              },
              "path": "v1alpha1/{+name}:move",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              }
            }
          }
        },
        "nodes": {
          "resources": {
            "deployments": {
              "methods": {
                "create": {
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The parent resource name where the deployment is to be created.",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "SasPortalDeployment"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "httpMethod": "POST",
                  "id": "prod_tt_sasportal.nodes.nodes.deployments.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/deployments",
                  "description": "Creates a new deployment.",
                  "path": "v1alpha1/{+parent}/deployments",
                  "response": {
                    "$ref": "SasPortalDeployment"
                  }
                },
                "list": {
                  "description": "Lists deployments.",
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/deployments",
                  "id": "prod_tt_sasportal.nodes.nodes.deployments.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/deployments",
                  "response": {
                    "$ref": "SasPortalListDeploymentsResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from."
                    },
                    "parent": {
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2.",
                      "location": "path",
                      "required": true
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered."
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of deployments to return in the response.",
                      "location": "query"
                    }
                  }
                }
              }
            },
            "devices": {
              "methods": {
                "create": {
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The name of the parent resource.",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "path": "v1alpha1/{+parent}/devices",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a device under a node or customer.",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.create"
                },
                "list": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "location": "path"
                    },
                    "filter": {
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/devices",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.list",
                  "description": "Lists devices under a node or customer.",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices"
                },
                "createSigned": {
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "prod_tt_sasportal.nodes.nodes.devices.createSigned",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:createSigned",
                  "description": "Creates a signed device under a node or customer.",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource.",
                      "type": "string",
                      "required": true,
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "location": "path"
                    }
                  }
                }
              }
            },
            "nodes": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/nodes",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of nodes to return in the response.",
                      "type": "integer",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered.",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. The parent resource name, for example, \"nodes/1\".",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "description": "Lists nodes.",
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.list"
                },
                "create": {
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent resource name where the node is to be created.",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "location": "path"
                    }
                  },
                  "description": "Creates a new node.",
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.create",
                  "path": "v1alpha1/{+parent}/nodes",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "response": {
                    "$ref": "SasPortalNode"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            }
          },
          "methods": {
            "list": {
              "parameters": {
                "parent": {
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^nodes/[^/]+$"
                },
                "pageSize": {
                  "description": "The maximum number of nodes to return in the response.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no nodes are filtered."
                },
                "pageToken": {
                  "type": "string",
                  "description": "A pagination token returned from a previous call to ListNodes that indicates where this listing should continue from.",
                  "location": "query"
                }
              },
              "id": "prod_tt_sasportal.nodes.nodes.list",
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "description": "Lists nodes.",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "path": "v1alpha1/{+parent}/nodes",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "parent"
              ]
            },
            "get": {
              "response": {
                "$ref": "SasPortalNode"
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Returns a requested node.",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "description": "Required. The name of the node."
                }
              },
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.nodes.nodes.get",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "move": {
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "response": {
                "$ref": "SasPortalOperation"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}:move",
              "description": "Moves a node under another node or customer.",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}:move",
              "id": "prod_tt_sasportal.nodes.nodes.move",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "description": "Required. The name of the node to move."
                }
              }
            },
            "delete": {
              "description": "Deletes a node.",
              "httpMethod": "DELETE",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "id": "prod_tt_sasportal.nodes.nodes.delete",
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "type": "string",
                  "description": "Required. The name of the node.",
                  "required": true,
                  "location": "path"
                }
              }
            },
            "patch": {
              "description": "Updates an existing node.",
              "id": "prod_tt_sasportal.nodes.nodes.patch",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Output only. Resource name."
                },
                "updateMask": {
                  "location": "query",
                  "description": "Fields to be updated.",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "request": {
                "$ref": "SasPortalNode"
              },
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "response": {
                "$ref": "SasPortalNode"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "create": {
              "path": "v1alpha1/{+parent}/nodes",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "response": {
                "$ref": "SasPortalNode"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Creates a new node.",
              "id": "prod_tt_sasportal.nodes.nodes.create",
              "request": {
                "$ref": "SasPortalNode"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The parent resource name where the node is to be created.",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^nodes/[^/]+$"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST"
            }
          }
        },
        "deployments": {
          "methods": {
            "move": {
              "description": "Moves a deployment under another node or customer.",
              "request": {
                "$ref": "SasPortalMoveDeploymentRequest"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalOperation"
              },
              "path": "v1alpha1/{+name}:move",
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}:move",
              "parameters": {
                "name": {
                  "description": "Required. The name of the deployment to move.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "required": true
                }
              },
              "id": "prod_tt_sasportal.nodes.deployments.move",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.nodes.deployments.list",
              "parameters": {
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The parent resource name, for example, \"nodes/1\", customer/1/nodes/2."
                },
                "filter": {
                  "location": "query",
                  "description": "The filter expression. The filter should have the following format: \"DIRECT_CHILDREN\" or format: \"direct_children\". The filter is case insensitive. If empty, then no deployments are filtered.",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A pagination token returned from a previous call to ListDeployments that indicates where this listing should continue from.",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of deployments to return in the response."
                }
              },
              "description": "Lists deployments.",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "SasPortalListDeploymentsResponse"
              },
              "httpMethod": "GET",
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments",
              "path": "v1alpha1/{+parent}/deployments"
            },
            "get": {
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the deployment.",
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "type": "string"
                }
              },
              "path": "v1alpha1/{+name}",
              "description": "Returns a requested deployment.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "id": "prod_tt_sasportal.nodes.deployments.get"
            },
            "patch": {
              "request": {
                "$ref": "SasPortalDeployment"
              },
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "type": "string",
                  "description": "Fields to be updated.",
                  "format": "google-fieldmask"
                },
                "name": {
                  "type": "string",
                  "description": "Output only. Resource name.",
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "description": "Updates an existing deployment.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.nodes.deployments.patch",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}"
            },
            "delete": {
              "httpMethod": "DELETE",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the deployment."
                }
              },
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.nodes.deployments.delete",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Deletes a deployment.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}"
            }
          },
          "resources": {
            "devices": {
              "methods": {
                "create": {
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices",
                  "description": "Creates a device under a node or customer.",
                  "path": "v1alpha1/{+parent}/devices",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The name of the parent resource.",
                      "type": "string",
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                      "required": true
                    }
                  },
                  "id": "prod_tt_sasportal.nodes.deployments.devices.create",
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "list": {
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial number of the device. The filter is case insensitive."
                    },
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "location": "path",
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/devices",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "description": "Lists devices under a node or customer.",
                  "id": "prod_tt_sasportal.nodes.deployments.devices.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  }
                },
                "createSigned": {
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices:createSigned",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "prod_tt_sasportal.nodes.deployments.devices.createSigned",
                  "description": "Creates a signed device under a node or customer.",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the parent resource."
                    }
                  },
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "httpMethod": "POST"
                }
              }
            }
          }
        }
      },
      "methods": {
        "get": {
          "httpMethod": "GET",
          "description": "Returns a requested node.",
          "flatPath": "v1alpha1/nodes/{nodesId}",
          "id": "prod_tt_sasportal.nodes.get",
          "path": "v1alpha1/{+name}",
          "parameters": {
            "name": {
              "required": true,
              "location": "path",
              "description": "Required. The name of the node.",
              "pattern": "^nodes/[^/]+$",
              "type": "string"
            }
          },
          "response": {
            "$ref": "SasPortalNode"
          },
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameterOrder": [
            "name"
          ]
        }
      }
    }
  },
  "batchPath": "batch",
  "schemas": {
    "SasPortalDevice": {
      "id": "SasPortalDevice",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Device display name.",
          "type": "string"
        },
        "state": {
          "enum": [
            "DEVICE_STATE_UNSPECIFIED",
            "RESERVED",
            "REGISTERED",
            "DEREGISTERED"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Device created in the SAS Portal, however, not yet registered with SAS.",
            "Device registered with SAS.",
            "Device de-registered with SAS."
          ],
          "description": "Output only. Device state.",
          "type": "string"
        },
        "fccId": {
          "type": "string",
          "description": "The FCC identifier of the device."
        },
        "activeConfig": {
          "description": "Output only. Current configuration of the device as registered to the SAS.",
          "$ref": "SasPortalDeviceConfig"
        },
        "name": {
          "description": "Output only. The resource path name.",
          "type": "string"
        },
        "serialNumber": {
          "description": "A serial number assigned to the device by the device manufacturer.",
          "type": "string"
        },
        "preloadedConfig": {
          "description": "Configuration of the device, as specified via SAS Portal API.",
          "$ref": "SasPortalDeviceConfig"
        },
        "deviceMetadata": {
          "$ref": "SasPortalDeviceMetadata",
          "description": "Device parameters that can be overridden by both SAS Portal and SAS registration requests."
        },
        "grants": {
          "items": {
            "$ref": "SasPortalDeviceGrant"
          },
          "description": "Output only. Grants held by the device.",
          "type": "array"
        },
        "currentChannels": {
          "type": "array",
          "items": {
            "$ref": "SasPortalChannelWithScore"
          },
          "description": "Output only. Current channels with scores.",
          "readOnly": true
        },
        "grantRangeAllowlists": {
          "items": {
            "$ref": "SasPortalFrequencyRange"
          },
          "description": "Only ranges within the allowlists are available for new grants.",
          "type": "array"
        }
      }
    },
    "SasPortalGetPolicyRequest": {
      "type": "object",
      "id": "SasPortalGetPolicyRequest",
      "description": "Request message for `GetPolicy` method.",
      "properties": {
        "resource": {
          "type": "string",
          "description": "Required. The resource for which the policy is being requested."
        }
      }
    },
    "SasPortalMoveDeploymentRequest": {
      "id": "SasPortalMoveDeploymentRequest",
      "description": "Request for MoveDeployment.",
      "type": "object",
      "properties": {
        "destination": {
          "description": "Required. The name of the new parent resource node or customer to reparent the deployment under.",
          "type": "string"
        }
      }
    },
    "SasPortalNode": {
      "type": "object",
      "description": "The Node.",
      "id": "SasPortalNode",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. Resource name."
        },
        "sasUserIds": {
          "description": "User ids used by the devices belonging to this node.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "displayName": {
          "type": "string",
          "description": "The node's display name."
        }
      }
    },
    "SasPortalListNodesResponse": {
      "type": "object",
      "id": "SasPortalListNodesResponse",
      "properties": {
        "nodes": {
          "type": "array",
          "description": "The nodes that match the request.",
          "items": {
            "$ref": "SasPortalNode"
          }
        },
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListNodes that indicates from where listing should continue. If the field is missing or empty, it means there is no more nodes.",
          "type": "string"
        }
      },
      "description": "Response for ListNodes."
    },
    "SasPortalDpaMoveList": {
      "description": "An entry in a DPA's move list.",
      "id": "SasPortalDpaMoveList",
      "type": "object",
      "properties": {
        "dpaId": {
          "description": "The ID of the DPA.",
          "type": "string"
        },
        "frequencyRange": {
          "description": "The frequency range that the move list affects.",
          "$ref": "SasPortalFrequencyRange"
        }
      }
    },
    "SasPortalChannelWithScore": {
      "type": "object",
      "id": "SasPortalChannelWithScore",
      "properties": {
        "frequencyRange": {
          "description": "The frequency range of the channel.",
          "$ref": "SasPortalFrequencyRange"
        },
        "score": {
          "format": "double",
          "type": "number",
          "description": "The channel score, normalized to be in [0,100]."
        }
      },
      "description": "The channel with score."
    },
    "SasPortalCreateSignedDeviceRequest": {
      "id": "SasPortalCreateSignedDeviceRequest",
      "description": "Request for CreateSignedDevice.",
      "properties": {
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer id (CPI ID) from the Certified Professional Installers database."
        },
        "encodedDevice": {
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set.",
          "type": "string",
          "format": "byte"
        }
      },
      "type": "object"
    },
    "SasPortalDeployment": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Resource name.",
          "readOnly": true,
          "type": "string"
        },
        "frns": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. The FRNs copied from its direct parent."
        },
        "displayName": {
          "type": "string",
          "description": "The deployment's display name."
        },
        "sasUserIds": {
          "type": "array",
          "description": "User ID used by the devices belonging to this deployment. Each deployment should be associated with one unique user ID.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "The Deployment.",
      "id": "SasPortalDeployment"
    },
    "SasPortalDeviceConfig": {
      "id": "SasPortalDeviceConfig",
      "type": "object",
      "properties": {
        "state": {
          "enum": [
            "DEVICE_CONFIG_STATE_UNSPECIFIED",
            "DRAFT",
            "FINAL"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "State of the configuration.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The last time the device configuration was edited.",
          "format": "google-datetime"
        },
        "installationParams": {
          "description": "Installation parameters for the device.",
          "$ref": "SasPortalInstallationParams"
        },
        "userId": {
          "type": "string",
          "description": "The identifier of a device user."
        },
        "isSigned": {
          "description": "Output only. Whether the configuration has been signed by a CPI.",
          "type": "boolean"
        },
        "category": {
          "description": "FCC category of the device.",
          "enum": [
            "DEVICE_CATEGORY_UNSPECIFIED",
            "DEVICE_CATEGORY_A",
            "DEVICE_CATEGORY_B"
          ],
          "enumDescriptions": [
            "Unspecified device category.",
            "Category A.",
            "Category B."
          ],
          "type": "string"
        },
        "model": {
          "description": "Information about this device model.",
          "$ref": "SasPortalDeviceModel"
        },
        "measurementCapabilities": {
          "description": "Measurement reporting capabilities of the device.",
          "type": "array",
          "items": {
            "enum": [
              "MEASUREMENT_CAPABILITY_UNSPECIFIED",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT"
            ],
            "enumDescriptions": [
              "",
              "",
              ""
            ],
            "type": "string"
          }
        },
        "airInterface": {
          "$ref": "SasPortalDeviceAirInterface",
          "description": "Information about this device's air interface."
        },
        "callSign": {
          "description": "The call sign of the device operator.",
          "type": "string"
        }
      },
      "description": "Information about the device configuration."
    },
    "SasPortalGenerateSecretRequest": {
      "type": "object",
      "id": "SasPortalGenerateSecretRequest",
      "description": "Request for GenerateSecret.",
      "properties": {}
    },
    "SasPortalListCustomersResponse": {
      "description": "Response for `ListCustomers`.",
      "id": "SasPortalListCustomersResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token returned from a previous call to ListCustomers that indicates from where listing should continue. If the field is missing or empty, it means there are no more customers."
        },
        "customers": {
          "items": {
            "$ref": "SasPortalCustomer"
          },
          "description": "The list of customers that match the request.",
          "type": "array"
        }
      }
    },
    "SasPortalInstallationParams": {
      "properties": {
        "longitude": {
          "format": "double",
          "description": "Longitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian.",
          "type": "number"
        },
        "height": {
          "format": "double",
          "description": "Device antenna height in meters. When the `heightType` parameter value is \"AGL\", the antenna height should be given relative to ground level. When the `heightType` parameter value is \"AMSL\", it is given with respect to WGS84 datum.",
          "type": "number"
        },
        "antennaAzimuth": {
          "description": "Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices.",
          "type": "integer",
          "format": "int32"
        },
        "verticalAccuracy": {
          "type": "number",
          "description": "A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters.",
          "format": "double"
        },
        "antennaModel": {
          "description": "If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets.",
          "type": "string"
        },
        "cpeCbsdIndication": {
          "type": "boolean",
          "description": "If present, this parameter specifies whether the CBSD is a CPE-CBSD or not."
        },
        "antennaGain": {
          "type": "integer",
          "format": "int32",
          "description": "Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive."
        },
        "horizontalAccuracy": {
          "type": "number",
          "format": "double",
          "description": "A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters."
        },
        "antennaBeamwidth": {
          "format": "int32",
          "description": "3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices.",
          "type": "integer"
        },
        "eirpCapability": {
          "description": "This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category.",
          "format": "int32",
          "type": "integer"
        },
        "antennaDowntilt": {
          "description": "Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices.",
          "type": "integer",
          "format": "int32"
        },
        "latitude": {
          "format": "double",
          "type": "number",
          "description": "Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator."
        },
        "indoorDeployment": {
          "description": "Whether the device antenna is indoor or not. `true`: indoor. `false`: outdoor.",
          "type": "boolean"
        },
        "heightType": {
          "enum": [
            "HEIGHT_TYPE_UNSPECIFIED",
            "HEIGHT_TYPE_AGL",
            "HEIGHT_TYPE_AMSL"
          ],
          "description": "Specifies how the height is measured.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified height type.",
            "AGL height is measured relative to the ground level.",
            "AMSL height is measured relative to the mean sea level."
          ]
        }
      },
      "type": "object",
      "id": "SasPortalInstallationParams",
      "description": "Information about the device installation parameters."
    },
    "SasPortalGenerateSecretResponse": {
      "properties": {
        "secret": {
          "type": "string",
          "description": "The secret generated by the string and used by ValidateInstaller."
        }
      },
      "id": "SasPortalGenerateSecretResponse",
      "type": "object",
      "description": "Response for GenerateSecret."
    },
    "SasPortalValidateInstallerResponse": {
      "description": "Response for ValidateInstaller.",
      "type": "object",
      "id": "SasPortalValidateInstallerResponse",
      "properties": {}
    },
    "SasPortalMoveDeviceRequest": {
      "description": "Request for MoveDevice.",
      "id": "SasPortalMoveDeviceRequest",
      "type": "object",
      "properties": {
        "destination": {
          "description": "Required. The name of the new parent resource node or customer to reparent the device under.",
          "type": "string"
        }
      }
    },
    "SasPortalDeviceModel": {
      "description": "Information about the model of the device.",
      "properties": {
        "softwareVersion": {
          "type": "string",
          "description": "The software version of the device."
        },
        "hardwareVersion": {
          "type": "string",
          "description": "The hardware version of the device."
        },
        "vendor": {
          "type": "string",
          "description": "The name of the device vendor."
        },
        "name": {
          "type": "string",
          "description": "The name of the device model."
        },
        "firmwareVersion": {
          "type": "string",
          "description": "The firmware version of the device."
        }
      },
      "id": "SasPortalDeviceModel",
      "type": "object"
    },
    "SasPortalSignDeviceRequest": {
      "properties": {
        "device": {
          "$ref": "SasPortalDevice",
          "description": "Required. The device to sign. The device fields name, fcc_id and serial_number must be set. The user_id field must be set."
        }
      },
      "type": "object",
      "description": "Request for SignDevice.",
      "id": "SasPortalSignDeviceRequest"
    },
    "SasPortalUpdateSignedDeviceRequest": {
      "description": "Request for UpdateSignedDevice.",
      "id": "SasPortalUpdateSignedDeviceRequest",
      "type": "object",
      "properties": {
        "installerId": {
          "description": "Required. Unique installer ID (CPI ID) from the Certified Professional Installers database.",
          "type": "string"
        },
        "encodedDevice": {
          "format": "byte",
          "description": "Required. The JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set.",
          "type": "string"
        }
      }
    },
    "SasPortalAssignment": {
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "id": "SasPortalAssignment",
      "properties": {
        "members": {
          "items": {
            "type": "string"
          },
          "description": "The identities the role is assigned to. It can have the following values: * `{user_email}`: An email address that represents a specific Google account. For example: `alice@gmail.com`. * `{group_email}`: An email address that represents a Google group. For example, `viewers@gmail.com`.",
          "type": "array"
        },
        "role": {
          "description": "Required. Role that is assigned to `members`.",
          "type": "string"
        }
      }
    },
    "SasPortalOperation": {
      "properties": {
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "SasPortalStatus"
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "SasPortalOperation",
      "type": "object"
    },
    "SasPortalEmpty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "SasPortalEmpty"
    },
    "SasPortalDeviceMetadata": {
      "description": "Device data overridable by both SAS Portal and registration requests.",
      "type": "object",
      "properties": {
        "nrqzValidation": {
          "readOnly": true,
          "$ref": "SasPortalNrqzValidation",
          "description": "Output only. National Radio Quiet Zone validation info."
        },
        "nrqzValidated": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether a CPI has validated to have coordinated with the National Quiet Zone office."
        },
        "commonChannelGroup": {
          "description": "CCG. A group of CBSDs in the same ICG requesting a common primary channel assignment. See CBRSA-TS-2001 V3.0.0 for more details.",
          "type": "string"
        },
        "interferenceCoordinationGroup": {
          "type": "string",
          "description": "ICG. A group of CBSDs that manage their own interference with the group. See CBRSA-TS-2001 V3.0.0 for more details."
        },
        "antennaModel": {
          "description": "If populated, the Antenna Model Pattern to use. Format is: RecordCreatorId:PatternId",
          "type": "string"
        }
      },
      "id": "SasPortalDeviceMetadata"
    },
    "SasPortalDeviceGrant": {
      "id": "SasPortalDeviceGrant",
      "type": "object",
      "properties": {
        "grantId": {
          "description": "Grant Id.",
          "type": "string"
        },
        "channelType": {
          "type": "string",
          "description": "Type of channel used.",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "CHANNEL_TYPE_UNSPECIFIED",
            "CHANNEL_TYPE_GAA",
            "CHANNEL_TYPE_PAL"
          ]
        },
        "state": {
          "enumDescriptions": [
            "",
            "The grant has been granted but the device is not heartbeating on it.",
            "The grant has been terminated by the SAS.",
            "The grant has been suspended by the SAS.",
            "The device is currently transmitting.",
            "The grant has expired."
          ],
          "description": "State of the grant.",
          "enum": [
            "GRANT_STATE_UNSPECIFIED",
            "GRANT_STATE_GRANTED",
            "GRANT_STATE_TERMINATED",
            "GRANT_STATE_SUSPENDED",
            "GRANT_STATE_AUTHORIZED",
            "GRANT_STATE_EXPIRED"
          ],
          "type": "string"
        },
        "expireTime": {
          "format": "google-datetime",
          "description": "The expiration time of the grant.",
          "type": "string"
        },
        "moveList": {
          "items": {
            "$ref": "SasPortalDpaMoveList"
          },
          "description": "The DPA move lists on which this grant appears.",
          "type": "array"
        },
        "suspensionReason": {
          "items": {
            "type": "string"
          },
          "description": "If the grant is suspended, the reason(s) for suspension.",
          "type": "array"
        },
        "maxEirp": {
          "type": "number",
          "description": "Maximum Equivalent Isotropically Radiated Power (EIRP) permitted by the grant. The maximum EIRP is in units of dBm/MHz. The value of `maxEirp` represents the average (RMS) EIRP that would be measured by the procedure defined in FCC part 96.41(e)(3).",
          "format": "double"
        },
        "frequencyRange": {
          "description": "The transmission frequency range.",
          "$ref": "SasPortalFrequencyRange"
        }
      },
      "description": "Device grant. It is an authorization provided by the Spectrum Access System to a device to transmit using specified operating parameters after a successful heartbeat by the device."
    },
    "SasPortalPolicy": {
      "id": "SasPortalPolicy",
      "properties": {
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "SasPortalAssignment"
          },
          "description": "List of assignments"
        },
        "etag": {
          "format": "byte",
          "description": "The etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to GetPolicy, and systems are expected to put that etag in the request to SetPolicy to ensure that their change will be applied to the same version of the policy. If no etag is provided in the call to GetPolicy, then the existing policy is overwritten blindly.",
          "type": "string"
        }
      },
      "description": "Defines an access control policy to the resources.",
      "type": "object"
    },
    "SasPortalDeviceAirInterface": {
      "type": "object",
      "properties": {
        "supportedSpec": {
          "description": "Optional. This field is related to the `radioTechnology` and provides the air interface specification that the CBSD is compliant with at the time of registration.",
          "type": "string"
        },
        "radioTechnology": {
          "type": "string",
          "description": "Conditional. This field specifies the radio access technology that is used for the CBSD.",
          "enum": [
            "RADIO_TECHNOLOGY_UNSPECIFIED",
            "E_UTRA",
            "CAMBIUM_NETWORKS",
            "FOUR_G_BBW_SAA_1",
            "NR",
            "DOODLE_CBRS",
            "CW",
            "REDLINE",
            "TARANA_WIRELESS"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        }
      },
      "id": "SasPortalDeviceAirInterface",
      "description": "Information about the device's air interface."
    },
    "SasPortalSetPolicyRequest": {
      "properties": {
        "disableNotification": {
          "description": "Optional. Set the field as true when we would like to disable the onboarding notification.",
          "type": "boolean"
        },
        "policy": {
          "description": "Required. The policy to be applied to the `resource`.",
          "$ref": "SasPortalPolicy"
        },
        "resource": {
          "type": "string",
          "description": "Required. The resource for which the policy is being specified. This policy replaces any existing policy."
        }
      },
      "type": "object",
      "description": "Request message for `SetPolicy` method.",
      "id": "SasPortalSetPolicyRequest"
    },
    "SasPortalTestPermissionsResponse": {
      "properties": {
        "permissions": {
          "description": "A set of permissions that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "SasPortalTestPermissionsResponse",
      "description": "Response message for `TestPermissions` method."
    },
    "SasPortalListDevicesResponse": {
      "type": "object",
      "id": "SasPortalListDevicesResponse",
      "description": "Response for ListDevices.",
      "properties": {
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListDevices that indicates from where listing should continue. If the field is missing or empty, it means there is no more devices.",
          "type": "string"
        },
        "devices": {
          "type": "array",
          "description": "The devices that match the request.",
          "items": {
            "$ref": "SasPortalDevice"
          }
        }
      }
    },
    "SasPortalMoveNodeRequest": {
      "type": "object",
      "properties": {
        "destination": {
          "type": "string",
          "description": "Required. The name of the new parent resource node or customer to reparent the node under."
        }
      },
      "description": "Request for MoveNode.",
      "id": "SasPortalMoveNodeRequest"
    },
    "SasPortalFrequencyRange": {
      "id": "SasPortalFrequencyRange",
      "type": "object",
      "properties": {
        "highFrequencyMhz": {
          "type": "number",
          "description": "The highest frequency of the frequency range in MHz.",
          "format": "double"
        },
        "lowFrequencyMhz": {
          "type": "number",
          "description": "The lowest frequency of the frequency range in MHz.",
          "format": "double"
        }
      },
      "description": "Frequency range from `low_frequency` to `high_frequency`."
    },
    "SasPortalNrqzValidation": {
      "properties": {
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Device longitude associated with the validation."
        },
        "caseId": {
          "type": "string",
          "description": "Validation case id."
        },
        "cpiId": {
          "description": "CPI who signed the validation.",
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "description": "Device latitude associated with the validation.",
          "format": "double"
        }
      },
      "type": "object",
      "id": "SasPortalNrqzValidation",
      "description": "Information about National Radio Quiet Zone validation. The presence of the field indicates the device has been validated."
    },
    "SasPortalTestPermissionsRequest": {
      "description": "Request message for `TestPermissions` method.",
      "type": "object",
      "id": "SasPortalTestPermissionsRequest",
      "properties": {
        "resource": {
          "description": "Required. The resource for which the permissions are being requested.",
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`."
        }
      }
    },
    "SasPortalListDeploymentsResponse": {
      "description": "Response for ListDeployments.",
      "properties": {
        "deployments": {
          "description": "The deployments that match the request.",
          "type": "array",
          "items": {
            "$ref": "SasPortalDeployment"
          }
        },
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListDeployments that indicates from where listing should continue. If the field is missing or empty, it means there are no more deployments.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SasPortalListDeploymentsResponse"
    },
    "SasPortalValidateInstallerRequest": {
      "properties": {
        "secret": {
          "type": "string",
          "description": "Required. Secret returned by the GenerateSecret."
        },
        "installerId": {
          "description": "Required. Unique installer id (CPI ID) from the Certified Professional Installers database.",
          "type": "string"
        },
        "encodedSecret": {
          "type": "string",
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must include a \"secret\" claim whose value is the secret."
        }
      },
      "type": "object",
      "description": "Request for ValidateInstaller.",
      "id": "SasPortalValidateInstallerRequest"
    },
    "SasPortalCustomer": {
      "type": "object",
      "id": "SasPortalCustomer",
      "properties": {
        "name": {
          "description": "Output only. Resource name of the customer.",
          "type": "string"
        },
        "sasUserIds": {
          "description": "User IDs used by the devices belonging to this customer.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Name of the organization that the customer entity represents."
        }
      },
      "description": "Entity representing a SAS customer."
    },
    "SasPortalStatus": {
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "SasPortalStatus"
    }
  },
  "rootUrl": "https://prod-tt-sasportal.googleapis.com/",
  "mtlsRootUrl": "https://prod-tt-sasportal.mtls.googleapis.com/",
  "ownerDomain": "google.com",
  "documentationLink": "https://developers.google.com/spectrum-access-system/",
  "kind": "discovery#restDescription",
  "canonicalName": "SAS Portal Testing",
  "baseUrl": "https://prod-tt-sasportal.googleapis.com/",
  "title": "SAS Portal API (Testing)",
  "id": "prod_tt_sasportal:v1alpha1",
  "ownerName": "Google",
  "basePath": "",
  "version": "v1alpha1",
  "description": ""
}

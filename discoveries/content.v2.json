{
  "resources": {
    "shippingsettings": {
      "methods": {
        "list": {
          "flatPath": "{merchantId}/shippingsettings",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "GET",
          "description": "Lists the shipping settings of the sub-accounts in your Merchant Center account.",
          "response": {
            "$ref": "ShippingsettingsListResponse"
          },
          "path": "{merchantId}/shippingsettings",
          "parameters": {
            "pageToken": {
              "type": "string",
              "description": "The token returned by the previous request.",
              "location": "query"
            },
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "required": true,
              "description": "The ID of the managing account. This must be a multi-client account.",
              "type": "string"
            },
            "maxResults": {
              "format": "uint32",
              "location": "query",
              "type": "integer",
              "description": "The maximum number of shipping settings to return in the response, used for paging."
            }
          },
          "parameterOrder": [
            "merchantId"
          ],
          "id": "content.shippingsettings.list"
        },
        "custombatch": {
          "flatPath": "shippingsettings/batch",
          "response": {
            "$ref": "ShippingsettingsCustomBatchResponse"
          },
          "id": "content.shippingsettings.custombatch",
          "path": "shippingsettings/batch",
          "httpMethod": "POST",
          "parameterOrder": [],
          "request": {
            "$ref": "ShippingsettingsCustomBatchRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query",
              "type": "boolean"
            }
          },
          "description": "Retrieves and updates the shipping settings of multiple accounts in a single request."
        },
        "getsupportedholidays": {
          "parameterOrder": [
            "merchantId"
          ],
          "path": "{merchantId}/supportedHolidays",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Retrieves supported holidays for an account.",
          "httpMethod": "GET",
          "parameters": {
            "merchantId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the account for which to retrieve the supported holidays.",
              "format": "uint64"
            }
          },
          "id": "content.shippingsettings.getsupportedholidays",
          "response": {
            "$ref": "ShippingsettingsGetSupportedHolidaysResponse"
          },
          "flatPath": "{merchantId}/supportedHolidays"
        },
        "update": {
          "request": {
            "$ref": "ShippingSettings"
          },
          "description": "Updates the shipping settings of the account. Any fields that are not provided are deleted from the resource.",
          "response": {
            "$ref": "ShippingSettings"
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "flatPath": "{merchantId}/shippingsettings/{accountId}",
          "id": "content.shippingsettings.update",
          "path": "{merchantId}/shippingsettings/{accountId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "PUT",
          "parameters": {
            "accountId": {
              "location": "path",
              "description": "The ID of the account for which to get/update shipping settings.",
              "type": "string",
              "required": true,
              "format": "uint64"
            },
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path",
              "type": "string",
              "required": true,
              "format": "uint64"
            },
            "dryRun": {
              "location": "query",
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            }
          }
        },
        "getsupportedcarriers": {
          "response": {
            "$ref": "ShippingsettingsGetSupportedCarriersResponse"
          },
          "flatPath": "{merchantId}/supportedCarriers",
          "parameters": {
            "merchantId": {
              "description": "The ID of the account for which to retrieve the supported carriers.",
              "type": "string",
              "required": true,
              "format": "uint64",
              "location": "path"
            }
          },
          "parameterOrder": [
            "merchantId"
          ],
          "httpMethod": "GET",
          "description": "Retrieves supported carriers and carrier services for an account.",
          "path": "{merchantId}/supportedCarriers",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.shippingsettings.getsupportedcarriers"
        },
        "getsupportedpickupservices": {
          "response": {
            "$ref": "ShippingsettingsGetSupportedPickupServicesResponse"
          },
          "description": "Retrieves supported pickup services for an account.",
          "parameters": {
            "merchantId": {
              "description": "The ID of the account for which to retrieve the supported pickup services.",
              "format": "uint64",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "httpMethod": "GET",
          "flatPath": "{merchantId}/supportedPickupServices",
          "id": "content.shippingsettings.getsupportedpickupservices",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/supportedPickupServices",
          "parameterOrder": [
            "merchantId"
          ]
        },
        "get": {
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "type": "string",
              "required": true,
              "location": "path",
              "format": "uint64",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account."
            },
            "accountId": {
              "location": "path",
              "description": "The ID of the account for which to get/update shipping settings.",
              "format": "uint64",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "{merchantId}/shippingsettings/{accountId}",
          "description": "Retrieves the shipping settings of the account.",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "response": {
            "$ref": "ShippingSettings"
          },
          "id": "content.shippingsettings.get",
          "path": "{merchantId}/shippingsettings/{accountId}"
        }
      }
    },
    "inventory": {
      "methods": {
        "set": {
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "InventorySetResponse"
          },
          "description": "Updates price and availability of a product in your Merchant Center account.",
          "request": {
            "$ref": "InventorySetRequest"
          },
          "path": "{merchantId}/inventory/{storeCode}/products/{productId}",
          "parameterOrder": [
            "merchantId",
            "storeCode",
            "productId"
          ],
          "flatPath": "{merchantId}/inventory/{storeCode}/products/{productId}",
          "id": "content.inventory.set",
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            },
            "productId": {
              "type": "string",
              "required": true,
              "description": "The REST ID of the product for which to update price and availability.",
              "location": "path"
            },
            "merchantId": {
              "required": true,
              "type": "string",
              "format": "uint64",
              "location": "path",
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account."
            },
            "storeCode": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The code of the store for which to update price and availability. Use `online` to update price and availability of an online product."
            }
          }
        },
        "custombatch": {
          "httpMethod": "POST",
          "description": "Updates price and availability for multiple products or stores in a single request. This operation does not update the expiration date of the products.",
          "request": {
            "$ref": "InventoryCustomBatchRequest"
          },
          "response": {
            "$ref": "InventoryCustomBatchResponse"
          },
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "inventory/batch",
          "id": "content.inventory.custombatch",
          "path": "inventory/batch",
          "parameters": {
            "dryRun": {
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean"
            }
          }
        }
      }
    },
    "liasettings": {
      "methods": {
        "update": {
          "description": "Updates the LIA settings of the account. Any fields that are not provided are deleted from the resource.",
          "httpMethod": "PUT",
          "parameters": {
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "location": "path",
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account."
            },
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean",
              "location": "query"
            },
            "accountId": {
              "required": true,
              "location": "path",
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account for which to get or update LIA settings."
            }
          },
          "path": "{merchantId}/liasettings/{accountId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "LiaSettings"
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "response": {
            "$ref": "LiaSettings"
          },
          "flatPath": "{merchantId}/liasettings/{accountId}",
          "id": "content.liasettings.update"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/liasettings/{accountId}",
          "description": "Retrieves the LIA settings of the account.",
          "id": "content.liasettings.get",
          "response": {
            "$ref": "LiaSettings"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "parameters": {
            "merchantId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64"
            },
            "accountId": {
              "location": "path",
              "required": true,
              "format": "uint64",
              "description": "The ID of the account for which to get or update LIA settings.",
              "type": "string"
            }
          },
          "flatPath": "{merchantId}/liasettings/{accountId}"
        },
        "setposdataprovider": {
          "parameterOrder": [
            "merchantId",
            "accountId",
            "country"
          ],
          "response": {
            "$ref": "LiasettingsSetPosDataProviderResponse"
          },
          "description": "Sets the POS data provider for the specified country.",
          "flatPath": "{merchantId}/liasettings/{accountId}/setposdataprovider",
          "path": "{merchantId}/liasettings/{accountId}/setposdataprovider",
          "id": "content.liasettings.setposdataprovider",
          "parameters": {
            "posExternalAccountId": {
              "description": "The account ID by which this merchant is known to the POS data provider.",
              "location": "query",
              "type": "string"
            },
            "country": {
              "type": "string",
              "description": "The country for which the POS data provider is selected.",
              "location": "query",
              "required": true
            },
            "posDataProviderId": {
              "type": "string",
              "description": "The ID of POS data provider.",
              "location": "query",
              "format": "uint64"
            },
            "accountId": {
              "location": "path",
              "description": "The ID of the account for which to retrieve accessible Google My Business accounts.",
              "format": "uint64",
              "required": true,
              "type": "string"
            },
            "merchantId": {
              "required": true,
              "type": "string",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path",
              "format": "uint64"
            }
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "custombatch": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "LiasettingsCustomBatchResponse"
          },
          "httpMethod": "POST",
          "request": {
            "$ref": "LiasettingsCustomBatchRequest"
          },
          "flatPath": "liasettings/batch",
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            }
          },
          "path": "liasettings/batch",
          "parameterOrder": [],
          "description": "Retrieves and/or updates the LIA settings of multiple accounts in a single request.",
          "id": "content.liasettings.custombatch"
        },
        "setinventoryverificationcontact": {
          "httpMethod": "POST",
          "id": "content.liasettings.setinventoryverificationcontact",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Sets the inventory verification contract for the specified country.",
          "parameters": {
            "contactName": {
              "location": "query",
              "required": true,
              "type": "string",
              "description": "The name of the inventory verification contact."
            },
            "accountId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "contactEmail": {
              "description": "The email of the inventory verification contact.",
              "location": "query",
              "type": "string",
              "required": true
            },
            "language": {
              "required": true,
              "location": "query",
              "type": "string",
              "description": "The language for which inventory verification is requested."
            },
            "country": {
              "location": "query",
              "required": true,
              "type": "string",
              "description": "The country for which inventory verification is requested."
            },
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "type": "string",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "required": true
            }
          },
          "response": {
            "$ref": "LiasettingsSetInventoryVerificationContactResponse"
          },
          "parameterOrder": [
            "merchantId",
            "accountId",
            "country",
            "language",
            "contactName",
            "contactEmail"
          ],
          "path": "{merchantId}/liasettings/{accountId}/setinventoryverificationcontact",
          "flatPath": "{merchantId}/liasettings/{accountId}/setinventoryverificationcontact"
        },
        "listposdataproviders": {
          "path": "liasettings/posdataproviders",
          "id": "content.liasettings.listposdataproviders",
          "httpMethod": "GET",
          "flatPath": "liasettings/posdataproviders",
          "response": {
            "$ref": "LiasettingsListPosDataProvidersResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Retrieves the list of POS data providers that have active settings for the all eiligible countries.",
          "parameters": {},
          "parameterOrder": []
        },
        "getaccessiblegmbaccounts": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/liasettings/{accountId}/accessiblegmbaccounts",
          "httpMethod": "GET",
          "id": "content.liasettings.getaccessiblegmbaccounts",
          "path": "{merchantId}/liasettings/{accountId}/accessiblegmbaccounts",
          "description": "Retrieves the list of accessible Google My Business accounts.",
          "parameters": {
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64",
              "location": "path",
              "type": "string",
              "required": true
            },
            "accountId": {
              "location": "path",
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account for which to retrieve accessible Google My Business accounts.",
              "required": true
            }
          },
          "response": {
            "$ref": "LiasettingsGetAccessibleGmbAccountsResponse"
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ]
        },
        "requestgmbaccess": {
          "path": "{merchantId}/liasettings/{accountId}/requestgmbaccess",
          "parameters": {
            "gmbEmail": {
              "type": "string",
              "description": "The email of the Google My Business account.",
              "required": true,
              "location": "query"
            },
            "accountId": {
              "format": "uint64",
              "required": true,
              "location": "path",
              "description": "The ID of the account for which GMB access is requested.",
              "type": "string"
            },
            "merchantId": {
              "type": "string",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path",
              "required": true,
              "format": "uint64"
            }
          },
          "description": "Requests access to a specified Google My Business account.",
          "parameterOrder": [
            "merchantId",
            "accountId",
            "gmbEmail"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/liasettings/{accountId}/requestgmbaccess",
          "response": {
            "$ref": "LiasettingsRequestGmbAccessResponse"
          },
          "httpMethod": "POST",
          "id": "content.liasettings.requestgmbaccess"
        },
        "list": {
          "id": "content.liasettings.list",
          "description": "Lists the LIA settings of the sub-accounts in your Merchant Center account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "GET",
          "flatPath": "{merchantId}/liasettings",
          "path": "{merchantId}/liasettings",
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "description": "The ID of the managing account. This must be a multi-client account.",
              "required": true,
              "location": "path"
            },
            "pageToken": {
              "location": "query",
              "description": "The token returned by the previous request.",
              "type": "string"
            },
            "maxResults": {
              "location": "query",
              "type": "integer",
              "description": "The maximum number of LIA settings to return in the response, used for paging.",
              "format": "uint32"
            }
          },
          "response": {
            "$ref": "LiasettingsListResponse"
          },
          "parameterOrder": [
            "merchantId"
          ]
        },
        "requestinventoryverification": {
          "httpMethod": "POST",
          "response": {
            "$ref": "LiasettingsRequestInventoryVerificationResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.liasettings.requestinventoryverification",
          "flatPath": "{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}",
          "path": "{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}",
          "description": "Requests inventory validation for the specified country.",
          "parameterOrder": [
            "merchantId",
            "accountId",
            "country"
          ],
          "parameters": {
            "merchantId": {
              "required": true,
              "location": "path",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "type": "string",
              "format": "uint64"
            },
            "country": {
              "required": true,
              "location": "path",
              "description": "The country for which inventory validation is requested.",
              "type": "string"
            },
            "accountId": {
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "type": "string",
              "format": "uint64"
            }
          }
        }
      }
    },
    "productstatuses": {
      "methods": {
        "custombatch": {
          "path": "productstatuses/batch",
          "httpMethod": "POST",
          "response": {
            "$ref": "ProductstatusesCustomBatchResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "ProductstatusesCustomBatchRequest"
          },
          "id": "content.productstatuses.custombatch",
          "parameterOrder": [],
          "flatPath": "productstatuses/batch",
          "parameters": {
            "includeAttributes": {
              "location": "query",
              "description": "Flag to include full product data in the results of this request. The default value is false.",
              "type": "boolean"
            }
          },
          "description": "Gets the statuses of multiple products in a single request."
        },
        "list": {
          "parameterOrder": [
            "merchantId"
          ],
          "response": {
            "$ref": "ProductstatusesListResponse"
          },
          "flatPath": "{merchantId}/productstatuses",
          "path": "{merchantId}/productstatuses",
          "id": "content.productstatuses.list",
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The token returned by the previous request."
            },
            "destinations": {
              "type": "string",
              "repeated": true,
              "location": "query",
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination."
            },
            "merchantId": {
              "required": true,
              "type": "string",
              "location": "path",
              "format": "uint64",
              "description": "The ID of the account that contains the products. This account cannot be a multi-client account."
            },
            "maxResults": {
              "description": "The maximum number of product statuses to return in the response, used for paging.",
              "format": "uint32",
              "type": "integer",
              "location": "query"
            },
            "includeAttributes": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to include full product data in the results of the list request. The default value is false."
            },
            "includeInvalidInsertedItems": {
              "location": "query",
              "description": "Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false).",
              "type": "boolean"
            }
          },
          "description": "Lists the statuses of the products in your Merchant Center account.",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "get": {
          "flatPath": "{merchantId}/productstatuses/{productId}",
          "parameters": {
            "productId": {
              "location": "path",
              "required": true,
              "description": "The REST ID of the product.",
              "type": "string"
            },
            "includeAttributes": {
              "type": "boolean",
              "description": "Flag to include full product data in the result of this get request. The default value is false.",
              "location": "query"
            },
            "destinations": {
              "location": "query",
              "type": "string",
              "repeated": true,
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination."
            },
            "merchantId": {
              "format": "uint64",
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account."
            }
          },
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "id": "content.productstatuses.get",
          "httpMethod": "GET",
          "description": "Gets the status of a product from your Merchant Center account.",
          "path": "{merchantId}/productstatuses/{productId}",
          "response": {
            "$ref": "ProductStatus"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        }
      }
    },
    "orders": {
      "methods": {
        "updatelineitemshippingdetails": {
          "path": "{merchantId}/orders/{orderId}/updateLineItemShippingDetails",
          "parameters": {
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "required": true,
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            },
            "orderId": {
              "location": "path",
              "description": "The ID of the order.",
              "required": true,
              "type": "string"
            }
          },
          "description": "Updates ship by and delivery by dates for a line item.",
          "request": {
            "$ref": "OrdersUpdateLineItemShippingDetailsRequest"
          },
          "httpMethod": "POST",
          "flatPath": "{merchantId}/orders/{orderId}/updateLineItemShippingDetails",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "OrdersUpdateLineItemShippingDetailsResponse"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "id": "content.orders.updatelineitemshippingdetails"
        },
        "shiplineitems": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.orders.shiplineitems",
          "request": {
            "$ref": "OrdersShipLineItemsRequest"
          },
          "parameters": {
            "orderId": {
              "required": true,
              "type": "string",
              "description": "The ID of the order.",
              "location": "path"
            },
            "merchantId": {
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "location": "path",
              "required": true
            }
          },
          "path": "{merchantId}/orders/{orderId}/shipLineItems",
          "response": {
            "$ref": "OrdersShipLineItemsResponse"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "flatPath": "{merchantId}/orders/{orderId}/shipLineItems",
          "description": "Marks line item(s) as shipped.",
          "httpMethod": "POST"
        },
        "setlineitemmetadata": {
          "httpMethod": "POST",
          "path": "{merchantId}/orders/{orderId}/setLineItemMetadata",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "parameters": {
            "orderId": {
              "description": "The ID of the order.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "OrdersSetLineItemMetadataRequest"
          },
          "id": "content.orders.setlineitemmetadata",
          "description": "Sets (or overrides if it already exists) merchant provided annotations in the form of key-value pairs. A common use case would be to supply us with additional structured information about a line item that cannot be provided via other methods. Submitted key-value pairs can be retrieved as part of the orders resource.",
          "flatPath": "{merchantId}/orders/{orderId}/setLineItemMetadata",
          "response": {
            "$ref": "OrdersSetLineItemMetadataResponse"
          }
        },
        "get": {
          "httpMethod": "GET",
          "flatPath": "{merchantId}/orders/{orderId}",
          "parameters": {
            "orderId": {
              "location": "path",
              "required": true,
              "description": "The ID of the order.",
              "type": "string"
            },
            "merchantId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64"
            }
          },
          "id": "content.orders.get",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "Order"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "description": "Retrieves an order from your Merchant Center account.",
          "path": "{merchantId}/orders/{orderId}"
        },
        "createtestorder": {
          "path": "{merchantId}/testorders",
          "flatPath": "{merchantId}/testorders",
          "response": {
            "$ref": "OrdersCreateTestOrderResponse"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId"
          ],
          "description": "Sandbox only. Creates a test order.",
          "request": {
            "$ref": "OrdersCreateTestOrderRequest"
          },
          "parameters": {
            "merchantId": {
              "type": "string",
              "required": true,
              "description": "The ID of the account that should manage the order. This cannot be a multi-client account.",
              "location": "path",
              "format": "uint64"
            }
          },
          "id": "content.orders.createtestorder"
        },
        "returnlineitem": {
          "path": "{merchantId}/orders/{orderId}/returnLineItem",
          "id": "content.orders.returnlineitem",
          "flatPath": "{merchantId}/orders/{orderId}/returnLineItem",
          "request": {
            "$ref": "OrdersReturnLineItemRequest"
          },
          "parameters": {
            "merchantId": {
              "required": true,
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path"
            },
            "orderId": {
              "description": "The ID of the order.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "response": {
            "$ref": "OrdersReturnLineItemResponse"
          },
          "description": "Returns a line item.",
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "createtestreturn": {
          "response": {
            "$ref": "OrdersCreateTestReturnResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/orders/{orderId}/testreturn",
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "location": "path"
            },
            "orderId": {
              "description": "The ID of the order.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "flatPath": "{merchantId}/orders/{orderId}/testreturn",
          "description": "Sandbox only. Creates a test return.",
          "request": {
            "$ref": "OrdersCreateTestReturnRequest"
          },
          "id": "content.orders.createtestreturn"
        },
        "cancellineitem": {
          "response": {
            "$ref": "OrdersCancelLineItemResponse"
          },
          "id": "content.orders.cancellineitem",
          "parameters": {
            "orderId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the order.",
              "required": true
            },
            "merchantId": {
              "required": true,
              "type": "string",
              "format": "uint64",
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            }
          },
          "request": {
            "$ref": "OrdersCancelLineItemRequest"
          },
          "description": "Cancels a line item, making a full refund.",
          "path": "{merchantId}/orders/{orderId}/cancelLineItem",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "flatPath": "{merchantId}/orders/{orderId}/cancelLineItem"
        },
        "getbymerchantorderid": {
          "description": "Retrieves an order using merchant order ID.",
          "flatPath": "{merchantId}/ordersbymerchantid/{merchantOrderId}",
          "id": "content.orders.getbymerchantorderid",
          "parameters": {
            "merchantId": {
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "location": "path",
              "format": "uint64"
            },
            "merchantOrderId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The merchant order ID to be looked for."
            }
          },
          "httpMethod": "GET",
          "path": "{merchantId}/ordersbymerchantid/{merchantOrderId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "merchantOrderId"
          ],
          "response": {
            "$ref": "OrdersGetByMerchantOrderIdResponse"
          }
        },
        "updateshipment": {
          "id": "content.orders.updateshipment",
          "parameters": {
            "orderId": {
              "required": true,
              "type": "string",
              "description": "The ID of the order.",
              "location": "path"
            },
            "merchantId": {
              "required": true,
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "location": "path"
            }
          },
          "response": {
            "$ref": "OrdersUpdateShipmentResponse"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "description": "Updates a shipment's status, carrier, and/or tracking ID.",
          "request": {
            "$ref": "OrdersUpdateShipmentRequest"
          },
          "flatPath": "{merchantId}/orders/{orderId}/updateShipment",
          "httpMethod": "POST",
          "path": "{merchantId}/orders/{orderId}/updateShipment",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "instorerefundlineitem": {
          "flatPath": "{merchantId}/orders/{orderId}/inStoreRefundLineItem",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Deprecated. Notifies that item return and refund was handled directly by merchant outside of Google payments processing (e.g. cash refund done in store). Note: We recommend calling the returnrefundlineitem method to refund in-store returns. We will issue the refund directly to the customer. This helps to prevent possible differences arising between merchant and Google transaction records. We also recommend having the point of sale system communicate with Google to ensure that customers do not receive a double refund by first refunding via Google then via an in-store return.",
          "parameters": {
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "location": "path"
            },
            "orderId": {
              "type": "string",
              "description": "The ID of the order.",
              "required": true,
              "location": "path"
            }
          },
          "httpMethod": "POST",
          "request": {
            "$ref": "OrdersInStoreRefundLineItemRequest"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "id": "content.orders.instorerefundlineitem",
          "path": "{merchantId}/orders/{orderId}/inStoreRefundLineItem",
          "response": {
            "$ref": "OrdersInStoreRefundLineItemResponse"
          }
        },
        "updatemerchantorderid": {
          "id": "content.orders.updatemerchantorderid",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "orderId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the order.",
              "required": true
            },
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            }
          },
          "path": "{merchantId}/orders/{orderId}/updateMerchantOrderId",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "request": {
            "$ref": "OrdersUpdateMerchantOrderIdRequest"
          },
          "description": "Updates the merchant order ID for a given order.",
          "response": {
            "$ref": "OrdersUpdateMerchantOrderIdResponse"
          },
          "flatPath": "{merchantId}/orders/{orderId}/updateMerchantOrderId",
          "httpMethod": "POST"
        },
        "acknowledge": {
          "path": "{merchantId}/orders/{orderId}/acknowledge",
          "request": {
            "$ref": "OrdersAcknowledgeRequest"
          },
          "description": "Marks an order as acknowledged.",
          "parameters": {
            "merchantId": {
              "required": true,
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "type": "string"
            },
            "orderId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The ID of the order."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.orders.acknowledge",
          "flatPath": "{merchantId}/orders/{orderId}/acknowledge",
          "httpMethod": "POST",
          "response": {
            "$ref": "OrdersAcknowledgeResponse"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ]
        },
        "canceltestorderbycustomer": {
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "parameters": {
            "merchantId": {
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "location": "path",
              "required": true
            },
            "orderId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The ID of the test order to cancel."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Sandbox only. Cancels a test order for customer-initiated cancellation.",
          "request": {
            "$ref": "OrdersCancelTestOrderByCustomerRequest"
          },
          "id": "content.orders.canceltestorderbycustomer",
          "response": {
            "$ref": "OrdersCancelTestOrderByCustomerResponse"
          },
          "path": "{merchantId}/testorders/{orderId}/cancelByCustomer",
          "flatPath": "{merchantId}/testorders/{orderId}/cancelByCustomer",
          "httpMethod": "POST"
        },
        "refund": {
          "httpMethod": "POST",
          "flatPath": "{merchantId}/orders/{orderId}/refund",
          "id": "content.orders.refund",
          "parameters": {
            "merchantId": {
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "required": true,
              "format": "uint64"
            },
            "orderId": {
              "type": "string",
              "description": "The ID of the order to refund.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "OrdersRefundResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "OrdersRefundRequest"
          },
          "description": "Deprecated, please use returnRefundLineItem instead.",
          "path": "{merchantId}/orders/{orderId}/refund",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ]
        },
        "advancetestorder": {
          "parameters": {
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "required": true,
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            },
            "orderId": {
              "description": "The ID of the test order to modify.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "flatPath": "{merchantId}/testorders/{orderId}/advance",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/testorders/{orderId}/advance",
          "description": "Sandbox only. Moves a test order from state \"`inProgress`\" to state \"`pendingShipment`\".",
          "id": "content.orders.advancetestorder",
          "response": {
            "$ref": "OrdersAdvanceTestOrderResponse"
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ]
        },
        "gettestordertemplate": {
          "id": "content.orders.gettestordertemplate",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/testordertemplates/{templateName}",
          "description": "Sandbox only. Retrieves an order template that can be used to quickly create a new order in sandbox.",
          "parameterOrder": [
            "merchantId",
            "templateName"
          ],
          "response": {
            "$ref": "OrdersGetTestOrderTemplateResponse"
          },
          "parameters": {
            "country": {
              "description": "The country of the template to retrieve. Defaults to `US`.",
              "location": "query",
              "type": "string"
            },
            "templateName": {
              "enum": [
                "TEMPLATE1",
                "TEMPLATE2",
                "TEMPLATE1A",
                "TEMPLATE1B",
                "TEMPLATE3"
              ],
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                ""
              ],
              "required": true,
              "description": "The name of the template to retrieve.",
              "location": "path",
              "type": "string"
            },
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the account that should manage the order. This cannot be a multi-client account.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "flatPath": "{merchantId}/testordertemplates/{templateName}"
        },
        "list": {
          "flatPath": "{merchantId}/orders",
          "path": "{merchantId}/orders",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Lists the orders in your Merchant Center account.",
          "response": {
            "$ref": "OrdersListResponse"
          },
          "parameters": {
            "pageToken": {
              "type": "string",
              "description": "The token returned by the previous request.",
              "location": "query"
            },
            "merchantId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "format": "uint64"
            },
            "placedDateEnd": {
              "location": "query",
              "type": "string",
              "description": "Obtains orders placed before this date (exclusively), in ISO 8601 format."
            },
            "placedDateStart": {
              "description": "Obtains orders placed after this date (inclusively), in ISO 8601 format.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "type": "integer",
              "description": "The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page.",
              "location": "query",
              "format": "uint32"
            },
            "acknowledged": {
              "description": "Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged. We recommend using this filter set to `false`, in conjunction with the `acknowledge` call, such that only un-acknowledged orders are returned. ",
              "type": "boolean",
              "location": "query"
            },
            "statuses": {
              "enum": [
                "ACTIVE",
                "COMPLETED",
                "CANCELED",
                "IN_PROGRESS",
                "PENDING_SHIPMENT",
                "PARTIALLY_SHIPPED",
                "SHIPPED",
                "PARTIALLY_DELIVERED",
                "DELIVERED",
                "PARTIALLY_RETURNED",
                "RETURNED"
              ],
              "repeated": true,
              "type": "string",
              "description": "Obtains orders that match any of the specified statuses. Please note that `active` is a shortcut for `pendingShipment` and `partiallyShipped`, and `completed` is a shortcut for `shipped`, `partiallyDelivered`, `delivered`, `partiallyReturned`, `returned`, and `canceled`.",
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
              ],
              "location": "query"
            },
            "orderBy": {
              "description": "Order results by placement date in descending or ascending order. Acceptable values are: - placedDateAsc - placedDateDesc ",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "merchantId"
          ],
          "id": "content.orders.list",
          "httpMethod": "GET"
        },
        "rejectreturnlineitem": {
          "response": {
            "$ref": "OrdersRejectReturnLineItemResponse"
          },
          "flatPath": "{merchantId}/orders/{orderId}/rejectReturnLineItem",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/orders/{orderId}/rejectReturnLineItem",
          "httpMethod": "POST",
          "id": "content.orders.rejectreturnlineitem",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "description": "Rejects return on an line item.",
          "request": {
            "$ref": "OrdersRejectReturnLineItemRequest"
          },
          "parameters": {
            "orderId": {
              "required": true,
              "type": "string",
              "description": "The ID of the order.",
              "location": "path"
            },
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path"
            }
          }
        },
        "custombatch": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "OrdersCustomBatchResponse"
          },
          "httpMethod": "POST",
          "id": "content.orders.custombatch",
          "flatPath": "orders/batch",
          "parameters": {},
          "request": {
            "$ref": "OrdersCustomBatchRequest"
          },
          "description": "Retrieves or modifies multiple orders in a single request.",
          "parameterOrder": [],
          "path": "orders/batch"
        },
        "returnrefundlineitem": {
          "parameters": {
            "merchantId": {
              "location": "path",
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true
            },
            "orderId": {
              "description": "The ID of the order.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "response": {
            "$ref": "OrdersReturnRefundLineItemResponse"
          },
          "httpMethod": "POST",
          "id": "content.orders.returnrefundlineitem",
          "description": "Returns and refunds a line item. Note that this method can only be called on fully shipped orders. Please also note that the Orderreturns API is the preferred way to handle returns after you receive a return from a customer. You can use Orderreturns.list or Orderreturns.get to search for the return, and then use Orderreturns.processreturn to issue the refund. If the return cannot be found, then we recommend using this API to issue a refund.",
          "request": {
            "$ref": "OrdersReturnRefundLineItemRequest"
          },
          "flatPath": "{merchantId}/orders/{orderId}/returnRefundLineItem",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/orders/{orderId}/returnRefundLineItem"
        },
        "cancel": {
          "path": "{merchantId}/orders/{orderId}/cancel",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "id": "content.orders.cancel",
          "description": "Cancels all line items in an order, making a full refund.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "request": {
            "$ref": "OrdersCancelRequest"
          },
          "flatPath": "{merchantId}/orders/{orderId}/cancel",
          "parameters": {
            "orderId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the order to cancel."
            },
            "merchantId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64"
            }
          },
          "response": {
            "$ref": "OrdersCancelResponse"
          }
        }
      }
    },
    "datafeedstatuses": {
      "methods": {
        "custombatch": {
          "request": {
            "$ref": "DatafeedstatusesCustomBatchRequest"
          },
          "id": "content.datafeedstatuses.custombatch",
          "path": "datafeedstatuses/batch",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {},
          "description": "Gets multiple Merchant Center datafeed statuses in a single request.",
          "parameterOrder": [],
          "httpMethod": "POST",
          "response": {
            "$ref": "DatafeedstatusesCustomBatchResponse"
          },
          "flatPath": "datafeedstatuses/batch"
        },
        "list": {
          "path": "{merchantId}/datafeedstatuses",
          "response": {
            "$ref": "DatafeedstatusesListResponse"
          },
          "id": "content.datafeedstatuses.list",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/datafeedstatuses",
          "parameterOrder": [
            "merchantId"
          ],
          "parameters": {
            "maxResults": {
              "type": "integer",
              "description": "The maximum number of products to return in the response, used for paging.",
              "location": "query",
              "format": "uint32"
            },
            "pageToken": {
              "location": "query",
              "description": "The token returned by the previous request.",
              "type": "string"
            },
            "merchantId": {
              "required": true,
              "description": "The ID of the account that manages the datafeeds. This account cannot be a multi-client account.",
              "location": "path",
              "format": "uint64",
              "type": "string"
            }
          },
          "description": "Lists the statuses of the datafeeds in your Merchant Center account.",
          "httpMethod": "GET"
        },
        "get": {
          "response": {
            "$ref": "DatafeedStatus"
          },
          "parameters": {
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "location": "path"
            },
            "country": {
              "location": "query",
              "description": "The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target.",
              "type": "string"
            },
            "datafeedId": {
              "location": "path",
              "format": "uint64",
              "required": true,
              "description": "The ID of the datafeed.",
              "type": "string"
            },
            "language": {
              "type": "string",
              "location": "query",
              "description": "The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target."
            }
          },
          "description": "Retrieves the status of a datafeed from your Merchant Center account.",
          "path": "{merchantId}/datafeedstatuses/{datafeedId}",
          "flatPath": "{merchantId}/datafeedstatuses/{datafeedId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "id": "content.datafeedstatuses.get",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        }
      }
    },
    "datafeeds": {
      "methods": {
        "insert": {
          "parameterOrder": [
            "merchantId"
          ],
          "flatPath": "{merchantId}/datafeeds",
          "response": {
            "$ref": "Datafeed"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "Datafeed"
          },
          "id": "content.datafeeds.insert",
          "description": "Registers a datafeed configuration with your Merchant Center account.",
          "httpMethod": "POST",
          "path": "{merchantId}/datafeeds",
          "parameters": {
            "merchantId": {
              "type": "string",
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "required": true,
              "format": "uint64",
              "location": "path"
            },
            "dryRun": {
              "location": "query",
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            }
          }
        },
        "delete": {
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "id": "content.datafeeds.delete",
          "parameters": {
            "dryRun": {
              "location": "query",
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            },
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "required": true,
              "location": "path",
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account."
            },
            "datafeedId": {
              "format": "uint64",
              "required": true,
              "location": "path",
              "description": "The ID of the datafeed.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/datafeeds/{datafeedId}",
          "description": "Deletes a datafeed configuration from your Merchant Center account.",
          "path": "{merchantId}/datafeeds/{datafeedId}",
          "httpMethod": "DELETE"
        },
        "list": {
          "description": "Lists the configurations for datafeeds in your Merchant Center account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "GET",
          "path": "{merchantId}/datafeeds",
          "id": "content.datafeeds.list",
          "parameters": {
            "pageToken": {
              "description": "The token returned by the previous request.",
              "location": "query",
              "type": "string"
            },
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that manages the datafeeds. This account cannot be a multi-client account.",
              "location": "path"
            },
            "maxResults": {
              "type": "integer",
              "description": "The maximum number of products to return in the response, used for paging.",
              "location": "query",
              "format": "uint32"
            }
          },
          "parameterOrder": [
            "merchantId"
          ],
          "flatPath": "{merchantId}/datafeeds",
          "response": {
            "$ref": "DatafeedsListResponse"
          }
        },
        "update": {
          "id": "content.datafeeds.update",
          "description": "Updates a datafeed configuration of your Merchant Center account. Any fields that are not provided are deleted from the resource.",
          "path": "{merchantId}/datafeeds/{datafeedId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "Datafeed"
          },
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "flatPath": "{merchantId}/datafeeds/{datafeedId}",
          "httpMethod": "PUT",
          "response": {
            "$ref": "Datafeed"
          },
          "parameters": {
            "merchantId": {
              "required": true,
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "type": "string",
              "format": "uint64",
              "location": "path"
            },
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query",
              "type": "boolean"
            },
            "datafeedId": {
              "required": true,
              "location": "path",
              "description": "The ID of the datafeed.",
              "type": "string",
              "format": "uint64"
            }
          }
        },
        "fetchnow": {
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "description": "Invokes a fetch for the datafeed in your Merchant Center account. If you need to call this method more than once per day, we recommend you use the Products service to update your product data.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean",
              "location": "query"
            },
            "merchantId": {
              "location": "path",
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "type": "string",
              "format": "uint64",
              "required": true
            },
            "datafeedId": {
              "required": true,
              "type": "string",
              "format": "uint64",
              "location": "path",
              "description": "The ID of the datafeed to be fetched."
            }
          },
          "flatPath": "{merchantId}/datafeeds/{datafeedId}/fetchNow",
          "httpMethod": "POST",
          "path": "{merchantId}/datafeeds/{datafeedId}/fetchNow",
          "id": "content.datafeeds.fetchnow",
          "response": {
            "$ref": "DatafeedsFetchNowResponse"
          }
        },
        "get": {
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "description": "Retrieves a datafeed configuration from your Merchant Center account.",
          "path": "{merchantId}/datafeeds/{datafeedId}",
          "parameters": {
            "merchantId": {
              "required": true,
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "location": "path",
              "format": "uint64",
              "type": "string"
            },
            "datafeedId": {
              "format": "uint64",
              "description": "The ID of the datafeed.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "id": "content.datafeeds.get",
          "httpMethod": "GET",
          "response": {
            "$ref": "Datafeed"
          },
          "flatPath": "{merchantId}/datafeeds/{datafeedId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "custombatch": {
          "response": {
            "$ref": "DatafeedsCustomBatchResponse"
          },
          "path": "datafeeds/batch",
          "parameters": {
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query",
              "type": "boolean"
            }
          },
          "id": "content.datafeeds.custombatch",
          "flatPath": "datafeeds/batch",
          "request": {
            "$ref": "DatafeedsCustomBatchRequest"
          },
          "description": "Deletes, fetches, gets, inserts and updates multiple datafeeds in a single request.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "parameterOrder": []
        }
      }
    },
    "accounttax": {
      "methods": {
        "custombatch": {
          "path": "accounttax/batch",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Retrieves and updates tax settings of multiple accounts in a single request.",
          "httpMethod": "POST",
          "request": {
            "$ref": "AccounttaxCustomBatchRequest"
          },
          "flatPath": "accounttax/batch",
          "parameters": {
            "dryRun": {
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean"
            }
          },
          "response": {
            "$ref": "AccounttaxCustomBatchResponse"
          },
          "id": "content.accounttax.custombatch"
        },
        "update": {
          "flatPath": "{merchantId}/accounttax/{accountId}",
          "description": "Updates the tax settings of the account. Any fields that are not provided are deleted from the resource.",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "request": {
            "$ref": "AccountTax"
          },
          "id": "content.accounttax.update",
          "response": {
            "$ref": "AccountTax"
          },
          "path": "{merchantId}/accounttax/{accountId}",
          "parameters": {
            "accountId": {
              "required": true,
              "format": "uint64",
              "location": "path",
              "type": "string",
              "description": "The ID of the account for which to get/update account tax settings."
            },
            "dryRun": {
              "location": "query",
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            },
            "merchantId": {
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64",
              "type": "string",
              "location": "path"
            }
          },
          "httpMethod": "PUT",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "get": {
          "response": {
            "$ref": "AccountTax"
          },
          "parameters": {
            "merchantId": {
              "required": true,
              "location": "path",
              "format": "uint64",
              "type": "string",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account."
            },
            "accountId": {
              "location": "path",
              "required": true,
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account for which to get/update account tax settings."
            }
          },
          "id": "content.accounttax.get",
          "description": "Retrieves the tax settings of the account.",
          "httpMethod": "GET",
          "flatPath": "{merchantId}/accounttax/{accountId}",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/accounttax/{accountId}"
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.accounttax.list",
          "parameterOrder": [
            "merchantId"
          ],
          "response": {
            "$ref": "AccounttaxListResponse"
          },
          "flatPath": "{merchantId}/accounttax",
          "path": "{merchantId}/accounttax",
          "description": "Lists the tax settings of the sub-accounts in your Merchant Center account.",
          "httpMethod": "GET",
          "parameters": {
            "pageToken": {
              "description": "The token returned by the previous request.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "type": "integer",
              "format": "uint32",
              "location": "query",
              "description": "The maximum number of tax settings to return in the response, used for paging."
            },
            "merchantId": {
              "description": "The ID of the managing account. This must be a multi-client account.",
              "location": "path",
              "required": true,
              "type": "string",
              "format": "uint64"
            }
          }
        }
      }
    },
    "orderreturns": {
      "methods": {
        "get": {
          "parameterOrder": [
            "merchantId",
            "returnId"
          ],
          "response": {
            "$ref": "MerchantOrderReturn"
          },
          "id": "content.orderreturns.get",
          "path": "{merchantId}/orderreturns/{returnId}",
          "description": "Retrieves an order return from your Merchant Center account.",
          "flatPath": "{merchantId}/orderreturns/{returnId}",
          "httpMethod": "GET",
          "parameters": {
            "merchantId": {
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "location": "path",
              "required": true
            },
            "returnId": {
              "type": "string",
              "description": "Merchant order return ID generated by Google.",
              "required": true,
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Lists order returns in your Merchant Center account.",
          "response": {
            "$ref": "OrderreturnsListResponse"
          },
          "httpMethod": "GET",
          "flatPath": "{merchantId}/orderreturns",
          "parameterOrder": [
            "merchantId"
          ],
          "id": "content.orderreturns.list",
          "parameters": {
            "pageToken": {
              "type": "string",
              "description": "The token returned by the previous request.",
              "location": "query"
            },
            "createdStartDate": {
              "description": "Obtains order returns created after this date (inclusively), in ISO 8601 format.",
              "location": "query",
              "type": "string"
            },
            "orderBy": {
              "type": "string",
              "enumDescriptions": [
                "",
                ""
              ],
              "description": "Return the results in the specified order.",
              "location": "query",
              "enum": [
                "RETURN_CREATION_TIME_DESC",
                "RETURN_CREATION_TIME_ASC"
              ]
            },
            "createdEndDate": {
              "description": "Obtains order returns created before this date (inclusively), in ISO 8601 format.",
              "location": "query",
              "type": "string"
            },
            "merchantId": {
              "format": "uint64",
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "required": true
            },
            "maxResults": {
              "format": "uint32",
              "location": "query",
              "type": "integer",
              "description": "The maximum number of order returns to return in the response, used for paging. The default value is 25 returns per page, and the maximum allowed value is 250 returns per page."
            }
          },
          "path": "{merchantId}/orderreturns"
        }
      }
    },
    "accounts": {
      "methods": {
        "authinfo": {
          "parameters": {},
          "httpMethod": "GET",
          "id": "content.accounts.authinfo",
          "flatPath": "accounts/authinfo",
          "description": "Returns information about the authenticated user.",
          "parameterOrder": [],
          "path": "accounts/authinfo",
          "response": {
            "$ref": "AccountsAuthInfoResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "Account"
          },
          "flatPath": "{merchantId}/accounts/{accountId}",
          "httpMethod": "GET",
          "id": "content.accounts.get",
          "parameters": {
            "accountId": {
              "required": true,
              "type": "string",
              "location": "path",
              "format": "uint64",
              "description": "The ID of the account."
            },
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "path": "{merchantId}/accounts/{accountId}",
          "description": "Retrieves a Merchant Center account.",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ]
        },
        "list": {
          "path": "{merchantId}/accounts",
          "response": {
            "$ref": "AccountsListResponse"
          },
          "description": "Lists the sub-accounts in your Merchant Center account.",
          "parameterOrder": [
            "merchantId"
          ],
          "parameters": {
            "pageToken": {
              "type": "string",
              "description": "The token returned by the previous request.",
              "location": "query"
            },
            "merchantId": {
              "format": "uint64",
              "required": true,
              "location": "path",
              "description": "The ID of the managing account. This must be a multi-client account.",
              "type": "string"
            },
            "maxResults": {
              "location": "query",
              "format": "uint32",
              "description": "The maximum number of accounts to return in the response, used for paging.",
              "type": "integer"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/accounts",
          "id": "content.accounts.list",
          "httpMethod": "GET"
        },
        "update": {
          "request": {
            "$ref": "Account"
          },
          "id": "content.accounts.update",
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            },
            "accountId": {
              "required": true,
              "location": "path",
              "format": "uint64",
              "description": "The ID of the account.",
              "type": "string"
            },
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "type": "string",
              "format": "uint64",
              "location": "path",
              "required": true
            }
          },
          "flatPath": "{merchantId}/accounts/{accountId}",
          "httpMethod": "PUT",
          "path": "{merchantId}/accounts/{accountId}",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Updates a Merchant Center account. Any fields that are not provided are deleted from the resource.",
          "response": {
            "$ref": "Account"
          }
        },
        "claimwebsite": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Claims the website of a Merchant Center sub-account.",
          "httpMethod": "POST",
          "parameters": {
            "accountId": {
              "required": true,
              "format": "uint64",
              "location": "path",
              "type": "string",
              "description": "The ID of the account whose website is claimed."
            },
            "overwrite": {
              "type": "boolean",
              "description": "Only available to selected merchants. When set to `True`, this flag removes any existing claim on the requested website by another account and replaces it with a claim from this account.",
              "location": "query"
            },
            "merchantId": {
              "type": "string",
              "required": true,
              "format": "uint64",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path"
            }
          },
          "id": "content.accounts.claimwebsite",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "flatPath": "{merchantId}/accounts/{accountId}/claimwebsite",
          "path": "{merchantId}/accounts/{accountId}/claimwebsite",
          "response": {
            "$ref": "AccountsClaimWebsiteResponse"
          }
        },
        "custombatch": {
          "path": "accounts/batch",
          "parameterOrder": [],
          "id": "content.accounts.custombatch",
          "response": {
            "$ref": "AccountsCustomBatchResponse"
          },
          "description": "Retrieves, inserts, updates, and deletes multiple Merchant Center (sub-)accounts in a single request.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "request": {
            "$ref": "AccountsCustomBatchRequest"
          },
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query"
            }
          },
          "flatPath": "accounts/batch"
        },
        "delete": {
          "description": "Deletes a Merchant Center sub-account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "DELETE",
          "flatPath": "{merchantId}/accounts/{accountId}",
          "id": "content.accounts.delete",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "path": "{merchantId}/accounts/{accountId}",
          "parameters": {
            "accountId": {
              "location": "path",
              "description": "The ID of the account.",
              "required": true,
              "type": "string",
              "format": "uint64"
            },
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query",
              "type": "boolean"
            },
            "force": {
              "type": "boolean",
              "description": "Flag to delete sub-accounts with products. The default value is false.",
              "default": "false",
              "location": "query"
            },
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "required": true,
              "description": "The ID of the managing account. This must be a multi-client account, and accountId must be the ID of a sub-account of this account.",
              "location": "path"
            }
          }
        },
        "link": {
          "flatPath": "{merchantId}/accounts/{accountId}/link",
          "description": "Performs an action on a link between two Merchant Center accounts, namely accountId and linkedAccountId.",
          "id": "content.accounts.link",
          "httpMethod": "POST",
          "parameters": {
            "merchantId": {
              "location": "path",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "required": true,
              "format": "uint64",
              "type": "string"
            },
            "accountId": {
              "description": "The ID of the account that should be linked.",
              "required": true,
              "location": "path",
              "type": "string",
              "format": "uint64"
            }
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "path": "{merchantId}/accounts/{accountId}/link",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "AccountsLinkRequest"
          },
          "response": {
            "$ref": "AccountsLinkResponse"
          }
        },
        "insert": {
          "request": {
            "$ref": "Account"
          },
          "flatPath": "{merchantId}/accounts",
          "parameters": {
            "dryRun": {
              "location": "query",
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            },
            "merchantId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the managing account. This must be a multi-client account.",
              "required": true,
              "format": "uint64"
            }
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId"
          ],
          "path": "{merchantId}/accounts",
          "description": "Creates a Merchant Center sub-account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.accounts.insert",
          "response": {
            "$ref": "Account"
          }
        }
      }
    },
    "orderreports": {
      "methods": {
        "listtransactions": {
          "path": "{merchantId}/orderreports/disbursements/{disbursementId}/transactions",
          "httpMethod": "GET",
          "id": "content.orderreports.listtransactions",
          "parameters": {
            "transactionStartDate": {
              "type": "string",
              "description": "The first date in which transaction occurred. In ISO 8601 format.",
              "location": "query"
            },
            "transactionEndDate": {
              "location": "query",
              "type": "string",
              "description": "The last date in which transaction occurred. In ISO 8601 format. Default: current date."
            },
            "disbursementId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The Google-provided ID of the disbursement (found in Wallet)."
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "location": "query",
              "description": "The maximum number of disbursements to return in the response, used for paging.",
              "type": "integer",
              "format": "uint32"
            },
            "merchantId": {
              "required": true,
              "format": "uint64",
              "location": "path",
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            }
          },
          "description": "Retrieves a list of transactions for a disbursement from your Merchant Center account.",
          "parameterOrder": [
            "merchantId",
            "disbursementId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/orderreports/disbursements/{disbursementId}/transactions",
          "response": {
            "$ref": "OrderreportsListTransactionsResponse"
          }
        },
        "listdisbursements": {
          "parameterOrder": [
            "merchantId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Retrieves a report for disbursements from your Merchant Center account.",
          "id": "content.orderreports.listdisbursements",
          "parameters": {
            "disbursementStartDate": {
              "type": "string",
              "description": "The first date which disbursements occurred. In ISO 8601 format.",
              "location": "query"
            },
            "merchantId": {
              "required": true,
              "format": "uint64",
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string"
            },
            "disbursementEndDate": {
              "description": "The last date which disbursements occurred. In ISO 8601 format. Default: current date.",
              "location": "query",
              "type": "string"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The token returned by the previous request."
            },
            "maxResults": {
              "type": "integer",
              "location": "query",
              "format": "uint32",
              "description": "The maximum number of disbursements to return in the response, used for paging."
            }
          },
          "httpMethod": "GET",
          "flatPath": "{merchantId}/orderreports/disbursements",
          "response": {
            "$ref": "OrderreportsListDisbursementsResponse"
          },
          "path": "{merchantId}/orderreports/disbursements"
        }
      }
    },
    "pos": {
      "methods": {
        "list": {
          "description": "Lists the stores of the target merchant.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "response": {
            "$ref": "PosListResponse"
          },
          "parameters": {
            "targetMerchantId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the target merchant.",
              "format": "uint64"
            },
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "description": "The ID of the POS or inventory data provider.",
              "type": "string",
              "required": true
            }
          },
          "httpMethod": "GET",
          "flatPath": "{merchantId}/pos/{targetMerchantId}/store",
          "path": "{merchantId}/pos/{targetMerchantId}/store",
          "id": "content.pos.list"
        },
        "get": {
          "parameters": {
            "targetMerchantId": {
              "required": true,
              "location": "path",
              "type": "string",
              "format": "uint64",
              "description": "The ID of the target merchant."
            },
            "merchantId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the POS or inventory data provider.",
              "format": "uint64"
            },
            "storeCode": {
              "description": "A store code that is unique per merchant.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "flatPath": "{merchantId}/pos/{targetMerchantId}/store/{storeCode}",
          "response": {
            "$ref": "PosStore"
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.pos.get",
          "path": "{merchantId}/pos/{targetMerchantId}/store/{storeCode}",
          "parameterOrder": [
            "merchantId",
            "targetMerchantId",
            "storeCode"
          ],
          "description": "Retrieves information about the given store."
        },
        "inventory": {
          "description": "Submit inventory for the given merchant.",
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "request": {
            "$ref": "PosInventoryRequest"
          },
          "parameters": {
            "targetMerchantId": {
              "description": "The ID of the target merchant.",
              "required": true,
              "format": "uint64",
              "type": "string",
              "location": "path"
            },
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the POS or inventory data provider."
            },
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query",
              "type": "boolean"
            }
          },
          "id": "content.pos.inventory",
          "path": "{merchantId}/pos/{targetMerchantId}/inventory",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/pos/{targetMerchantId}/inventory",
          "response": {
            "$ref": "PosInventoryResponse"
          }
        },
        "delete": {
          "flatPath": "{merchantId}/pos/{targetMerchantId}/store/{storeCode}",
          "id": "content.pos.delete",
          "description": "Deletes a store for the given merchant.",
          "parameterOrder": [
            "merchantId",
            "targetMerchantId",
            "storeCode"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/pos/{targetMerchantId}/store/{storeCode}",
          "parameters": {
            "targetMerchantId": {
              "type": "string",
              "required": true,
              "description": "The ID of the target merchant.",
              "format": "uint64",
              "location": "path"
            },
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean",
              "location": "query"
            },
            "merchantId": {
              "description": "The ID of the POS or inventory data provider.",
              "type": "string",
              "format": "uint64",
              "required": true,
              "location": "path"
            },
            "storeCode": {
              "description": "A store code that is unique per merchant.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "httpMethod": "DELETE"
        },
        "custombatch": {
          "description": "Batches multiple POS-related calls in a single request.",
          "response": {
            "$ref": "PosCustomBatchResponse"
          },
          "id": "content.pos.custombatch",
          "parameters": {
            "dryRun": {
              "location": "query",
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            }
          },
          "path": "pos/batch",
          "flatPath": "pos/batch",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "PosCustomBatchRequest"
          },
          "parameterOrder": []
        },
        "insert": {
          "description": "Creates a store for the given merchant.",
          "flatPath": "{merchantId}/pos/{targetMerchantId}/store",
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "parameters": {
            "dryRun": {
              "location": "query",
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            },
            "targetMerchantId": {
              "required": true,
              "type": "string",
              "format": "uint64",
              "location": "path",
              "description": "The ID of the target merchant."
            },
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "required": true,
              "description": "The ID of the POS or inventory data provider.",
              "location": "path"
            }
          },
          "httpMethod": "POST",
          "response": {
            "$ref": "PosStore"
          },
          "path": "{merchantId}/pos/{targetMerchantId}/store",
          "request": {
            "$ref": "PosStore"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.pos.insert"
        },
        "sale": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/pos/{targetMerchantId}/sale",
          "response": {
            "$ref": "PosSaleResponse"
          },
          "parameters": {
            "merchantId": {
              "location": "path",
              "type": "string",
              "format": "uint64",
              "description": "The ID of the POS or inventory data provider.",
              "required": true
            },
            "targetMerchantId": {
              "type": "string",
              "required": true,
              "description": "The ID of the target merchant.",
              "format": "uint64",
              "location": "path"
            },
            "dryRun": {
              "location": "query",
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            }
          },
          "request": {
            "$ref": "PosSaleRequest"
          },
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "id": "content.pos.sale",
          "description": "Submit a sale event for the given merchant.",
          "flatPath": "{merchantId}/pos/{targetMerchantId}/sale",
          "httpMethod": "POST"
        }
      }
    },
    "orderinvoices": {
      "methods": {
        "createchargeinvoice": {
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "parameters": {
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "required": true,
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            },
            "orderId": {
              "description": "The ID of the order.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "description": "Creates a charge invoice for a shipment group, and triggers a charge capture for orderinvoice enabled orders.",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/orderinvoices/{orderId}/createChargeInvoice",
          "response": {
            "$ref": "OrderinvoicesCreateChargeInvoiceResponse"
          },
          "path": "{merchantId}/orderinvoices/{orderId}/createChargeInvoice",
          "request": {
            "$ref": "OrderinvoicesCreateChargeInvoiceRequest"
          },
          "id": "content.orderinvoices.createchargeinvoice"
        },
        "createrefundinvoice": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "parameters": {
            "orderId": {
              "required": true,
              "location": "path",
              "description": "The ID of the order.",
              "type": "string"
            },
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "flatPath": "{merchantId}/orderinvoices/{orderId}/createRefundInvoice",
          "request": {
            "$ref": "OrderinvoicesCreateRefundInvoiceRequest"
          },
          "id": "content.orderinvoices.createrefundinvoice",
          "response": {
            "$ref": "OrderinvoicesCreateRefundInvoiceResponse"
          },
          "path": "{merchantId}/orderinvoices/{orderId}/createRefundInvoice",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "description": "Creates a refund invoice for one or more shipment groups, and triggers a refund for orderinvoice enabled orders. This can only be used for line items that have previously been charged using `createChargeInvoice`. All amounts (except for the summary) are incremental with respect to the previous invoice."
        }
      }
    },
    "products": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "flatPath": "{merchantId}/products/{productId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.products.get",
          "path": "{merchantId}/products/{productId}",
          "response": {
            "$ref": "Product"
          },
          "description": "Retrieves a product from your Merchant Center account.",
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "type": "string",
              "format": "uint64",
              "required": true,
              "location": "path"
            },
            "productId": {
              "location": "path",
              "description": "The REST ID of the product.",
              "type": "string",
              "required": true
            }
          }
        },
        "custombatch": {
          "parameterOrder": [],
          "path": "products/batch",
          "parameters": {
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query",
              "type": "boolean"
            }
          },
          "httpMethod": "POST",
          "flatPath": "products/batch",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "ProductsCustomBatchRequest"
          },
          "id": "content.products.custombatch",
          "description": "Retrieves, inserts, and deletes multiple products in a single request.",
          "response": {
            "$ref": "ProductsCustomBatchResponse"
          }
        },
        "list": {
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId"
          ],
          "flatPath": "{merchantId}/products",
          "response": {
            "$ref": "ProductsListResponse"
          },
          "description": "Lists the products in your Merchant Center account. The response might contain fewer items than specified by maxResults. Rely on nextPageToken to determine if there are more items to be requested.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "maxResults": {
              "type": "integer",
              "description": "The maximum number of products to return in the response, used for paging.",
              "format": "uint32",
              "location": "query"
            },
            "merchantId": {
              "location": "path",
              "type": "string",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that contains the products. This account cannot be a multi-client account."
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "type": "string",
              "location": "query"
            },
            "includeInvalidInsertedItems": {
              "location": "query",
              "type": "boolean",
              "description": "Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false)."
            }
          },
          "id": "content.products.list",
          "path": "{merchantId}/products"
        },
        "delete": {
          "flatPath": "{merchantId}/products/{productId}",
          "description": "Deletes a product from your Merchant Center account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.products.delete",
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "path": "{merchantId}/products/{productId}",
          "httpMethod": "DELETE",
          "parameters": {
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "required": true,
              "type": "string",
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account."
            },
            "dryRun": {
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean"
            },
            "productId": {
              "description": "The REST ID of the product.",
              "location": "path",
              "type": "string",
              "required": true
            }
          }
        },
        "insert": {
          "request": {
            "$ref": "Product"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "Product"
          },
          "parameterOrder": [
            "merchantId"
          ],
          "flatPath": "{merchantId}/products",
          "path": "{merchantId}/products",
          "id": "content.products.insert",
          "description": "Uploads a product to your Merchant Center account. If an item with the same channel, contentLanguage, offerId, and targetCountry already exists, this method updates that entry.",
          "parameters": {
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean",
              "location": "query"
            },
            "merchantId": {
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "required": true,
              "format": "uint64",
              "type": "string",
              "location": "path"
            }
          },
          "httpMethod": "POST"
        }
      }
    },
    "accountstatuses": {
      "methods": {
        "list": {
          "parameters": {
            "merchantId": {
              "required": true,
              "format": "uint64",
              "type": "string",
              "location": "path",
              "description": "The ID of the managing account. This must be a multi-client account."
            },
            "maxResults": {
              "format": "uint32",
              "type": "integer",
              "location": "query",
              "description": "The maximum number of account statuses to return in the response, used for paging."
            },
            "destinations": {
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
              "location": "query",
              "repeated": true,
              "type": "string"
            },
            "pageToken": {
              "location": "query",
              "description": "The token returned by the previous request.",
              "type": "string"
            }
          },
          "path": "{merchantId}/accountstatuses",
          "id": "content.accountstatuses.list",
          "description": "Lists the statuses of the sub-accounts in your Merchant Center account.",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "{merchantId}/accountstatuses",
          "parameterOrder": [
            "merchantId"
          ],
          "response": {
            "$ref": "AccountstatusesListResponse"
          }
        },
        "get": {
          "response": {
            "$ref": "AccountStatus"
          },
          "description": "Retrieves the status of a Merchant Center account. No itemLevelIssues are returned for multi-client accounts.",
          "httpMethod": "GET",
          "flatPath": "{merchantId}/accountstatuses/{accountId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "{merchantId}/accountstatuses/{accountId}",
          "parameters": {
            "destinations": {
              "type": "string",
              "repeated": true,
              "location": "query",
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination."
            },
            "accountId": {
              "required": true,
              "location": "path",
              "description": "The ID of the account.",
              "format": "uint64",
              "type": "string"
            },
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "id": "content.accountstatuses.get"
        },
        "custombatch": {
          "description": "Retrieves multiple Merchant Center account statuses in a single request.",
          "request": {
            "$ref": "AccountstatusesCustomBatchRequest"
          },
          "response": {
            "$ref": "AccountstatusesCustomBatchResponse"
          },
          "path": "accountstatuses/batch",
          "httpMethod": "POST",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [],
          "flatPath": "accountstatuses/batch",
          "id": "content.accountstatuses.custombatch"
        }
      }
    }
  },
  "canonicalName": "Shopping Content",
  "ownerDomain": "google.com",
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ]
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/content": {
          "description": "Manage your product listings and accounts for Google Shopping"
        }
      }
    }
  },
  "mtlsRootUrl": "https://shoppingcontent.mtls.googleapis.com/",
  "name": "content",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "id": "content:v2",
  "servicePath": "content/v2/",
  "description": "Manage your product listings and accounts for Google Shopping",
  "rootUrl": "https://shoppingcontent.googleapis.com/",
  "schemas": {
    "OrdersRejectReturnLineItemResponse": {
      "type": "object",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersRejectReturnLineItemResponse\".",
          "type": "string"
        }
      },
      "id": "OrdersRejectReturnLineItemResponse"
    },
    "ProductstatusesCustomBatchResponse": {
      "id": "ProductstatusesCustomBatchResponse",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "ProductstatusesCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#productstatusesCustomBatchResponse\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersCreateTestOrderResponse": {
      "id": "OrdersCreateTestOrderResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCreateTestOrderResponse\"."
        },
        "orderId": {
          "description": "The ID of the newly created test order.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiasettingsGetAccessibleGmbAccountsResponse": {
      "id": "LiasettingsGetAccessibleGmbAccountsResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsGetAccessibleGmbAccountsResponse\"."
        },
        "gmbAccounts": {
          "type": "array",
          "description": "A list of GMB accounts which are available to the merchant.",
          "items": {
            "$ref": "GmbAccountsGmbAccount"
          }
        },
        "accountId": {
          "description": "The ID of the Merchant Center account.",
          "format": "uint64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderinvoicesCreateRefundInvoiceResponse": {
      "id": "OrderinvoicesCreateRefundInvoiceResponse",
      "type": "object",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderinvoicesCreateRefundInvoiceResponse\"."
        }
      }
    },
    "ProductTax": {
      "type": "object",
      "id": "ProductTax",
      "properties": {
        "rate": {
          "type": "number",
          "description": "The percentage of tax rate that applies to the item price.",
          "format": "double"
        },
        "locationId": {
          "format": "int64",
          "description": "The numeric ID of a location that the tax rate applies to as defined in the AdWords API.",
          "type": "string"
        },
        "region": {
          "type": "string",
          "description": "The geographic region to which the tax rate applies."
        },
        "taxShip": {
          "description": "Should be set to true if tax is charged on shipping.",
          "type": "boolean"
        },
        "country": {
          "type": "string",
          "description": "The country within which the item is taxed, specified as a CLDR territory code."
        },
        "postalCode": {
          "description": "The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*.",
          "type": "string"
        }
      }
    },
    "AccountsLinkResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsLinkResponse\".",
          "type": "string"
        }
      },
      "id": "AccountsLinkResponse",
      "type": "object"
    },
    "DatafeedStatusError": {
      "properties": {
        "examples": {
          "description": "A list of example occurrences of the error, grouped by product.",
          "items": {
            "$ref": "DatafeedStatusExample"
          },
          "type": "array"
        },
        "code": {
          "description": "The code of the error, e.g., \"validation/invalid_value\".",
          "type": "string"
        },
        "message": {
          "type": "string",
          "description": "The error message, e.g., \"Invalid price\"."
        },
        "count": {
          "description": "The number of occurrences of the error in the feed.",
          "format": "uint64",
          "type": "string"
        }
      },
      "description": "An error occurring in the feed, like \"invalid price\".",
      "id": "DatafeedStatusError",
      "type": "object"
    },
    "OrdersCancelTestOrderByCustomerRequest": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for the cancellation. Acceptable values are: - \"`changedMind`\" - \"`orderedWrongItem`\" - \"`other`\" "
        }
      },
      "id": "OrdersCancelTestOrderByCustomerRequest"
    },
    "PosListResponse": {
      "id": "PosListResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#posListResponse\"."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "PosStore"
          }
        }
      },
      "type": "object"
    },
    "CarriersCarrier": {
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of supported services (e.g., `\"ground\"`) for that carrier. Contains at least one service. This is the list of valid values for CarrierRate.carrierService."
        },
        "country": {
          "type": "string",
          "description": "The CLDR country code of the carrier (e.g., \"US\"). Always present."
        },
        "name": {
          "type": "string",
          "description": "The name of the carrier (e.g., `\"UPS\"`). Always present."
        },
        "eddServices": {
          "description": "A list of services supported for EDD (Estimated Delivery Date) calculation. This is the list of valid values for WarehouseBasedDeliveryTime.carrierService.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "CarriersCarrier"
    },
    "PosStore": {
      "description": "Store resource.",
      "id": "PosStore",
      "type": "object",
      "properties": {
        "storeCode": {
          "description": "Required. A store identifier that is unique for the given merchant.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posStore`\""
        },
        "storeAddress": {
          "description": "Required. The street address of the store.",
          "type": "string"
        }
      }
    },
    "PickupCarrierService": {
      "properties": {
        "carrierName": {
          "description": "The name of the pickup carrier (e.g., `\"UPS\"`). Required.",
          "type": "string"
        },
        "serviceName": {
          "type": "string",
          "description": "The name of the pickup service (e.g., `\"Access point\"`). Required."
        }
      },
      "id": "PickupCarrierService",
      "type": "object"
    },
    "AccountStatusAccountLevelIssue": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Issue identifier."
        },
        "documentation": {
          "type": "string",
          "description": "The URL of a web page to help resolving this issue."
        },
        "detail": {
          "description": "Additional details about the issue.",
          "type": "string"
        },
        "severity": {
          "type": "string",
          "description": "Severity of the issue. Acceptable values are: - \"`critical`\" - \"`error`\" - \"`suggestion`\" "
        },
        "destination": {
          "description": "The destination the issue applies to. If this field is empty then the issue applies to all available destinations.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Short description of the issue."
        },
        "country": {
          "description": "Country for which this issue is reported.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "AccountStatusAccountLevelIssue"
    },
    "LiaInventorySettings": {
      "properties": {
        "status": {
          "description": "The status of the inventory verification process. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" ",
          "type": "string"
        },
        "inventoryVerificationContactName": {
          "description": "The name of the contact for the inventory verification process.",
          "type": "string"
        },
        "inventoryVerificationContactStatus": {
          "description": "The status of the verification contact. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" ",
          "type": "string"
        },
        "inventoryVerificationContactEmail": {
          "description": "The email of the contact for the inventory verification process.",
          "type": "string"
        }
      },
      "id": "LiaInventorySettings",
      "type": "object"
    },
    "OrdersCreateTestReturnResponse": {
      "id": "OrdersCreateTestReturnResponse",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCreateTestReturnResponse\"."
        },
        "returnId": {
          "description": "The ID of the newly created test order return.",
          "type": "string"
        }
      }
    },
    "PosCustomBatchResponseEntry": {
      "id": "PosCustomBatchResponseEntry",
      "type": "object",
      "properties": {
        "batchId": {
          "description": "The ID of the request entry to which this entry responds.",
          "format": "uint32",
          "type": "integer"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posCustomBatchResponseEntry`\""
        },
        "store": {
          "$ref": "PosStore",
          "description": "The retrieved or updated store information."
        },
        "sale": {
          "$ref": "PosSale",
          "description": "The updated sale information."
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if, and only if, the request failed."
        },
        "inventory": {
          "description": "The updated inventory information.",
          "$ref": "PosInventory"
        }
      }
    },
    "OrdersCancelResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCancelResponse\"."
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        }
      },
      "id": "OrdersCancelResponse"
    },
    "AccountStatusDataQualityIssue": {
      "id": "AccountStatusDataQualityIssue",
      "properties": {
        "country": {
          "type": "string"
        },
        "exampleItems": {
          "type": "array",
          "items": {
            "$ref": "AccountStatusExampleItem"
          }
        },
        "displayedValue": {
          "type": "string"
        },
        "lastChecked": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "submittedValue": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "severity": {
          "type": "string",
          "description": " Acceptable values are: - \"`critical`\" - \"`error`\" - \"`suggestion`\" "
        },
        "detail": {
          "type": "string"
        },
        "numItems": {
          "type": "integer",
          "format": "uint32"
        },
        "destination": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderLegacyPromotionBenefit": {
      "type": "object",
      "properties": {
        "subType": {
          "type": "string",
          "description": "Further describes the benefit of the promotion. Note that we will expand on this enumeration as we support new promotion sub-types. Acceptable values are: - \"`buyMGetMoneyOff`\" - \"`buyMGetNMoneyOff`\" - \"`buyMGetNPercentOff`\" - \"`buyMGetPercentOff`\" - \"`freeGift`\" - \"`freeGiftWithItemId`\" - \"`freeGiftWithValue`\" - \"`freeOvernightShipping`\" - \"`freeShipping`\" - \"`freeTwoDayShipping`\" - \"`moneyOff`\" - \"`percentageOff`\" - \"`rewardPoints`\" - \"`salePrice`\" "
        },
        "type": {
          "type": "string",
          "description": "Describes whether the promotion applies to products (e.g. 20% off) or to shipping (e.g. Free Shipping). Acceptable values are: - \"`product`\" - \"`shipping`\" "
        },
        "offerIds": {
          "items": {
            "type": "string"
          },
          "description": "The OfferId(s) that were purchased in this order and map to this specific benefit of the promotion.",
          "type": "array"
        },
        "discount": {
          "$ref": "Price",
          "description": "The discount in the order price when the promotion is applied."
        },
        "taxImpact": {
          "description": "The impact on tax when the promotion is applied.",
          "$ref": "Price"
        }
      },
      "id": "OrderLegacyPromotionBenefit"
    },
    "DatafeedsCustomBatchResponse": {
      "type": "object",
      "id": "DatafeedsCustomBatchResponse",
      "properties": {
        "entries": {
          "items": {
            "$ref": "DatafeedsCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests.",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedsCustomBatchResponse\"."
        }
      }
    },
    "UnitInvoiceAdditionalCharge": {
      "id": "UnitInvoiceAdditionalCharge",
      "type": "object",
      "properties": {
        "additionalChargePromotions": {
          "type": "array",
          "items": {
            "$ref": "Promotion"
          },
          "description": "Deprecated."
        },
        "type": {
          "type": "string",
          "description": "[required] Type of the additional charge. Acceptable values are: - \"`shipping`\" "
        },
        "additionalChargeAmount": {
          "$ref": "Amount",
          "description": "[required] Amount of the additional charge."
        }
      }
    },
    "OrderShipmentScheduledDeliveryDetails": {
      "id": "OrderShipmentScheduledDeliveryDetails",
      "properties": {
        "carrierPhoneNumber": {
          "description": "The phone number of the carrier fulfilling the delivery. The phone number is formatted as the international notation in ITU-T Recommendation E.123 (e.g., \"+41 44 668 1800\").",
          "type": "string"
        },
        "scheduledDate": {
          "description": "The date a shipment is scheduled for delivery, in ISO 8601 format.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceSummaryAdditionalChargeSummary": {
      "properties": {
        "type": {
          "description": "[required] Type of the additional charge. Acceptable values are: - \"`shipping`\" ",
          "type": "string"
        },
        "totalAmount": {
          "$ref": "Amount",
          "description": "[required] Total additional charge for this type."
        }
      },
      "id": "InvoiceSummaryAdditionalChargeSummary",
      "type": "object"
    },
    "Order": {
      "type": "object",
      "id": "Order",
      "properties": {
        "channelType": {
          "type": "string",
          "description": "Deprecated. Acceptable values are: - \"`googleExpress`\" - \"`purchasesOnGoogle`\" "
        },
        "acknowledged": {
          "type": "boolean",
          "description": "Whether the order was acknowledged."
        },
        "merchantOrderId": {
          "description": "Merchant-provided ID of the order.",
          "type": "string"
        },
        "shipments": {
          "type": "array",
          "items": {
            "$ref": "OrderShipment"
          },
          "description": "Shipments of the order."
        },
        "customer": {
          "$ref": "OrderCustomer",
          "description": "The details of the customer who placed the order."
        },
        "pickupDetails": {
          "description": "Pickup details for shipments of type `pickup`.",
          "$ref": "OrderPickupDetails"
        },
        "shippingOption": {
          "type": "string",
          "description": "Deprecated. Shipping details are provided with line items instead. Acceptable values are: - \"`economy`\" - \"`expedited`\" - \"`oneDay`\" - \"`sameDay`\" - \"`standard`\" - \"`twoDay`\" "
        },
        "shippingCost": {
          "$ref": "Price",
          "description": "The total cost of shipping for all items."
        },
        "refunds": {
          "items": {
            "$ref": "OrderRefund"
          },
          "type": "array",
          "description": "Refunds for the order."
        },
        "shippingCostTax": {
          "$ref": "Price",
          "description": "The tax for the total shipping cost."
        },
        "deliveryDetails": {
          "$ref": "OrderDeliveryDetails",
          "description": "Delivery details for shipments of type `delivery`."
        },
        "promotions": {
          "items": {
            "$ref": "OrderLegacyPromotion"
          },
          "type": "array",
          "description": "The details of the merchant provided promotions applied to the order. To determine which promotions apply to which products, check the `Promotions[].Benefits[].OfferIds` field against the `LineItems[].Product.OfferId` field for each promotion. If a promotion is applied to more than 1 `offerId`, divide the discount value by the number of affected offers to determine how much discount to apply to each `offerId`. Examples: 1. To calculate the line item level discount for a single specific item: For each promotion, subtract the `Promotions[].Benefits[].Discount.value` amount from the `LineItems[].Price.value`. 2. To calculate the line item level discount for multiple quantity of a specific item: For each promotion, divide the `Promotions[].Benefits[].Discount.value` by the quantity of products and substract it from `LineItems[].Product.Price.value` for each quantity item. Only 1 promotion can be applied to an offerId in a given order. To refund an item which had a promotion applied to it, make sure to refund the amount after first subtracting the promotion discount from the item price. More details about the program are here."
        },
        "paymentStatus": {
          "description": "The status of the payment. Acceptable values are: - \"`paymentCaptured`\" - \"`paymentRejected`\" - \"`paymentSecured`\" - \"`pendingAuthorization`\" ",
          "type": "string"
        },
        "netAmount": {
          "$ref": "Price",
          "description": "The net amount for the order. For example, if an order was originally for a grand total of $100 and a refund was issued for $20, the net amount will be $80."
        },
        "taxCollector": {
          "type": "string",
          "description": "The party responsible for collecting and remitting taxes. Acceptable values are: - \"`marketplaceFacilitator`\" - \"`merchant`\" "
        },
        "status": {
          "description": "The status of the order. Acceptable values are: - \"`canceled`\" - \"`delivered`\" - \"`inProgress`\" - \"`partiallyDelivered`\" - \"`partiallyReturned`\" - \"`partiallyShipped`\" - \"`pendingShipment`\" - \"`returned`\" - \"`shipped`\" ",
          "type": "string"
        },
        "placedDate": {
          "description": "The date when the order was placed, in ISO 8601 format.",
          "type": "string"
        },
        "lineItems": {
          "items": {
            "$ref": "OrderLineItem"
          },
          "type": "array",
          "description": "Line items that are ordered."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#order`\""
        },
        "id": {
          "description": "The REST ID of the order. Globally unique.",
          "type": "string"
        },
        "merchantId": {
          "format": "uint64",
          "type": "string"
        },
        "paymentMethod": {
          "description": "The details of the payment method.",
          "$ref": "OrderPaymentMethod"
        }
      },
      "description": "Order. Production access (all methods) requires the order manager role. Sandbox access does not."
    },
    "ProductStatusDestinationStatus": {
      "id": "ProductStatusDestinationStatus",
      "type": "object",
      "properties": {
        "approvalStatus": {
          "type": "string",
          "description": "The destination's approval status. Acceptable values are: - \"`approved`\" - \"`disapproved`\" "
        },
        "destination": {
          "type": "string",
          "description": "The name of the destination"
        },
        "approvalPending": {
          "description": "Whether the approval status might change due to further processing.",
          "type": "boolean"
        },
        "intention": {
          "description": "Provided for backward compatibility only. Always set to \"required\". Acceptable values are: - \"`default`\" - \"`excluded`\" - \"`optional`\" - \"`required`\" ",
          "type": "string"
        }
      }
    },
    "ShipmentInvoiceLineItemInvoice": {
      "properties": {
        "shipmentUnitIds": {
          "type": "array",
          "description": "[required] The shipment unit ID is assigned by the merchant and defines individual quantities within a line item. The same ID can be assigned to units that are the same while units that differ must be assigned a different ID (for example: free or promotional units).",
          "items": {
            "type": "string"
          }
        },
        "lineItemId": {
          "description": "ID of the line item. Either lineItemId or productId must be set.",
          "type": "string"
        },
        "unitInvoice": {
          "$ref": "UnitInvoice",
          "description": "[required] Invoice details for a single unit."
        },
        "productId": {
          "type": "string",
          "description": "ID of the product. This is the REST ID used in the products service. Either lineItemId or productId must be set."
        }
      },
      "id": "ShipmentInvoiceLineItemInvoice",
      "type": "object"
    },
    "Amount": {
      "properties": {
        "tax": {
          "description": "[required] Tax value.",
          "$ref": "Price"
        },
        "pretax": {
          "description": "[required] Value before taxes.",
          "$ref": "Price"
        }
      },
      "id": "Amount",
      "type": "object"
    },
    "LiaPosDataProvider": {
      "properties": {
        "posExternalAccountId": {
          "description": "The account ID by which this merchant is known to the POS data provider.",
          "type": "string"
        },
        "posDataProviderId": {
          "description": "The ID of the POS data provider.",
          "format": "uint64",
          "type": "string"
        }
      },
      "id": "LiaPosDataProvider",
      "type": "object"
    },
    "OrderCancellation": {
      "type": "object",
      "id": "OrderCancellation",
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for the cancellation. Orders that are canceled with a noInventory reason will lead to the removal of the product from Buy on Google until you make an update to that product. This will not affect your Shopping ads. Acceptable values are: - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`customerCanceled`\" - \"`customerInitiatedCancel`\" - \"`customerSupportRequested`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceError`\" - \"`returnRefundAbuse`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" "
        },
        "creationDate": {
          "type": "string",
          "description": "Date on which the cancellation has been created, in ISO 8601 format."
        },
        "actor": {
          "description": "The actor that created the cancellation. Acceptable values are: - \"`customer`\" - \"`googleBot`\" - \"`googleCustomerService`\" - \"`googlePayments`\" - \"`googleSabre`\" - \"`merchant`\" ",
          "type": "string"
        },
        "quantity": {
          "format": "uint32",
          "description": "The quantity that was canceled.",
          "type": "integer"
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        }
      }
    },
    "OrderShipment": {
      "type": "object",
      "id": "OrderShipment",
      "properties": {
        "creationDate": {
          "description": "Date on which the shipment has been created, in ISO 8601 format.",
          "type": "string"
        },
        "trackingId": {
          "type": "string",
          "description": "The tracking ID for the shipment."
        },
        "carrier": {
          "type": "string",
          "description": "The carrier handling the shipment. For supported carriers, Google includes the carrier name and tracking URL in emails to customers. For select supported carriers, Google also automatically updates the shipment status based on the provided shipment ID. *Note:* You can also use unsupported carriers, but emails to customers will not include the carrier name or tracking URL, and there will be no automatic order status updates. Supported carriers for US are: - \"`ups`\" (United Parcel Service) *automatic status updates* - \"`usps`\" (United States Postal Service) *automatic status updates* - \"`fedex`\" (FedEx) *automatic status updates * - \"`dhl`\" (DHL eCommerce) *automatic status updates* (US only) - \"`ontrac`\" (OnTrac) *automatic status updates * - \"`dhl express`\" (DHL Express) - \"`deliv`\" (Deliv) - \"`dynamex`\" (TForce) - \"`lasership`\" (LaserShip) - \"`mpx`\" (Military Parcel Xpress) - \"`uds`\" (United Delivery Service) - \"`efw`\" (Estes Forwarding Worldwide) - \"`jd logistics`\" (JD Logistics) - \"`yunexpress`\" (YunExpress) - \"`china post`\" (China Post) - \"`china ems`\" (China Post Express Mail Service) - \"`singapore post`\" (Singapore Post) - \"`pos malaysia`\" (Pos Malaysia) - \"`postnl`\" (PostNL) - \"`ptt`\" (PTT Turkish Post) - \"`eub`\" (ePacket) - \"`chukou1`\" (Chukou1 Logistics) - \"`bestex`\" (Best Express) - \"`canada post`\" (Canada Post) - \"`purolator`\" (Purolator) - \"`canpar`\" (Canpar) - \"`india post`\" (India Post) - \"`blue dart`\" (Blue Dart) - \"`delhivery`\" (Delhivery) - \"`dtdc`\" (DTDC) - \"`tpc india`\" (TPC India) Supported carriers for FR are: - \"`la poste`\" (La Poste) *automatic status updates * - \"`colissimo`\" (Colissimo by La Poste) *automatic status updates* - \"`ups`\" (United Parcel Service) *automatic status updates * - \"`chronopost`\" (Chronopost by La Poste) - \"`gls`\" (General Logistics Systems France) - \"`dpd`\" (DPD Group by GeoPost) - \"`bpost`\" (Belgian Post Group) - \"`colis prive`\" (Colis Privé) - \"`boxtal`\" (Boxtal) - \"`geodis`\" (GEODIS) - \"`tnt`\" (TNT) - \"`db schenker`\" (DB Schenker) - \"`aramex`\" (Aramex) "
        },
        "id": {
          "description": "The ID of the shipment.",
          "type": "string"
        },
        "deliveryDate": {
          "description": "Date on which the shipment has been delivered, in ISO 8601 format. Present only if `status` is `delivered`",
          "type": "string"
        },
        "scheduledDeliveryDetails": {
          "description": "Delivery details of the shipment if scheduling is needed.",
          "$ref": "OrderShipmentScheduledDeliveryDetails"
        },
        "lineItems": {
          "description": "The line items that are shipped.",
          "type": "array",
          "items": {
            "$ref": "OrderShipmentLineItemShipment"
          }
        },
        "status": {
          "type": "string",
          "description": "The status of the shipment. Acceptable values are: - \"`delivered`\" - \"`readyForPickup`\" - \"`shipped`\" - \"`undeliverable`\" "
        }
      }
    },
    "AccountTax": {
      "properties": {
        "rules": {
          "description": "Tax rules. Updating the tax rules will enable US taxes (not reversible). Defining no rules is equivalent to not charging tax at all.",
          "items": {
            "$ref": "AccountTaxTaxRule"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountTax\"."
        },
        "accountId": {
          "format": "uint64",
          "type": "string",
          "description": "Required. The ID of the account to which these account tax settings belong."
        }
      },
      "type": "object",
      "description": "The tax settings of a merchant account. All methods require the admin role.",
      "id": "AccountTax"
    },
    "Row": {
      "type": "object",
      "properties": {
        "cells": {
          "items": {
            "$ref": "Value"
          },
          "type": "array",
          "description": "The list of cells that constitute the row. Must have the same length as `columnHeaders` for two-dimensional tables, a length of 1 for one-dimensional tables. Required."
        }
      },
      "id": "Row"
    },
    "OrdersCustomBatchRequestEntryCreateTestReturnReturnItem": {
      "id": "OrdersCustomBatchRequestEntryCreateTestReturnReturnItem",
      "properties": {
        "quantity": {
          "format": "uint32",
          "description": "Quantity that is returned.",
          "type": "integer"
        },
        "lineItemId": {
          "description": "The ID of the line item to return.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountsClaimWebsiteResponse": {
      "id": "AccountsClaimWebsiteResponse",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsClaimWebsiteResponse\"."
        }
      }
    },
    "InventoryCustomBatchRequest": {
      "type": "object",
      "id": "InventoryCustomBatchRequest",
      "properties": {
        "entries": {
          "type": "array",
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "InventoryCustomBatchRequestEntry"
          }
        }
      }
    },
    "OrderPickupDetails": {
      "properties": {
        "address": {
          "description": "Address of the pickup location where the shipment should be sent. Note that `recipientName` in the address is the name of the business at the pickup location.",
          "$ref": "OrderAddress"
        },
        "collectors": {
          "items": {
            "$ref": "OrderPickupDetailsCollector"
          },
          "description": "Collectors authorized to pick up shipment from the pickup location.",
          "type": "array"
        },
        "locationId": {
          "type": "string",
          "description": "ID of the pickup location."
        }
      },
      "id": "OrderPickupDetails",
      "type": "object"
    },
    "AccountsCustomBatchResponseEntry": {
      "type": "object",
      "description": "A batch entry encoding a single non-batch accounts response.",
      "id": "AccountsCustomBatchResponseEntry",
      "properties": {
        "account": {
          "description": "The retrieved, created, or updated account. Not defined if the method was `delete`, `claimwebsite` or `link`.",
          "$ref": "Account"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountsCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if and only if the request failed."
        },
        "batchId": {
          "description": "The ID of the request entry this entry responds to.",
          "format": "uint32",
          "type": "integer"
        },
        "linkStatus": {
          "description": "Deprecated. This field is never set. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" ",
          "type": "string"
        }
      }
    },
    "OrdersSetLineItemMetadataResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersSetLineItemMetadataResponse\".",
          "type": "string"
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        }
      },
      "id": "OrdersSetLineItemMetadataResponse"
    },
    "ShippingsettingsGetSupportedHolidaysResponse": {
      "id": "ShippingsettingsGetSupportedHolidaysResponse",
      "properties": {
        "holidays": {
          "description": "A list of holidays applicable for delivery guarantees. May be empty.",
          "items": {
            "$ref": "HolidaysHoliday"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsGetSupportedHolidaysResponse\"."
        }
      },
      "type": "object"
    },
    "DatafeedstatusesCustomBatchResponseEntry": {
      "type": "object",
      "description": "A batch entry encoding a single non-batch datafeedstatuses response.",
      "properties": {
        "datafeedStatus": {
          "description": "The requested data feed status. Defined if and only if the request was successful.",
          "$ref": "DatafeedStatus"
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if and only if the request failed."
        },
        "batchId": {
          "description": "The ID of the request entry this entry responds to.",
          "format": "uint32",
          "type": "integer"
        }
      },
      "id": "DatafeedstatusesCustomBatchResponseEntry"
    },
    "ShipmentTrackingInfo": {
      "id": "ShipmentTrackingInfo",
      "properties": {
        "carrier": {
          "description": "The shipping carrier that handles the package. Acceptable values are: - \"`boxtal`\" - \"`bpost`\" - \"`chronopost`\" - \"`colisPrive`\" - \"`colissimo`\" - \"`cxt`\" - \"`deliv`\" - \"`dhl`\" - \"`dpd`\" - \"`dynamex`\" - \"`eCourier`\" - \"`easypost`\" - \"`efw`\" - \"`fedex`\" - \"`fedexSmartpost`\" - \"`geodis`\" - \"`gls`\" - \"`googleCourier`\" - \"`gsx`\" - \"`jdLogistics`\" - \"`laPoste`\" - \"`lasership`\" - \"`manual`\" - \"`mpx`\" - \"`onTrac`\" - \"`other`\" - \"`tnt`\" - \"`uds`\" - \"`ups`\" - \"`usps`\" ",
          "type": "string"
        },
        "trackingNumber": {
          "type": "string",
          "description": "The tracking number for the package."
        }
      },
      "type": "object"
    },
    "Promotion": {
      "id": "Promotion",
      "type": "object",
      "properties": {
        "promotionAmount": {
          "description": "[required] Amount of the promotion. The values here are the promotion applied to the unit price pretax and to the total of the tax amounts.",
          "$ref": "Amount"
        },
        "promotionId": {
          "type": "string",
          "description": "[required] ID of the promotion."
        }
      }
    },
    "AccountUser": {
      "properties": {
        "emailAddress": {
          "description": "User's email address.",
          "type": "string"
        },
        "paymentsManager": {
          "description": "Whether user can manage payment settings.",
          "type": "boolean"
        },
        "orderManager": {
          "description": "Whether user is an order manager.",
          "type": "boolean"
        },
        "paymentsAnalyst": {
          "description": "Whether user can access payment statements.",
          "type": "boolean"
        },
        "admin": {
          "type": "boolean",
          "description": "Whether user is an admin."
        }
      },
      "type": "object",
      "id": "AccountUser"
    },
    "OrderLineItemProduct": {
      "type": "object",
      "properties": {
        "title": {
          "description": "The title of the product.",
          "type": "string"
        },
        "mpn": {
          "type": "string",
          "description": "Manufacturer Part Number (MPN) of the item."
        },
        "price": {
          "description": "Price of the item.",
          "$ref": "Price"
        },
        "id": {
          "description": "The REST ID of the product.",
          "type": "string"
        },
        "channel": {
          "description": "The item's channel (online or local). Acceptable values are: - \"`local`\" - \"`online`\" ",
          "type": "string"
        },
        "fees": {
          "items": {
            "$ref": "OrderLineItemProductFee"
          },
          "description": "Associated fees at order creation time.",
          "type": "array"
        },
        "targetCountry": {
          "description": "The CLDR territory // code of the target country of the product.",
          "type": "string"
        },
        "shownImage": {
          "type": "string",
          "description": "URL to the cached image shown to the user when order was placed."
        },
        "itemGroupId": {
          "type": "string",
          "description": "Shared identifier for all variants of the same product."
        },
        "condition": {
          "type": "string",
          "description": "Condition or state of the item. Acceptable values are: - \"`new`\" - \"`refurbished`\" - \"`used`\" "
        },
        "variantAttributes": {
          "description": "Variant attributes for the item. These are dimensions of the product, such as color, gender, material, pattern, and size. You can find a comprehensive list of variant attributes here.",
          "type": "array",
          "items": {
            "$ref": "OrderLineItemProductVariantAttribute"
          }
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number (GTIN) of the item."
        },
        "offerId": {
          "type": "string",
          "description": "An identifier of the item."
        },
        "brand": {
          "description": "Brand of the item.",
          "type": "string"
        },
        "contentLanguage": {
          "description": "The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "imageLink": {
          "type": "string",
          "description": "URL of an image of the item."
        }
      },
      "id": "OrderLineItemProduct"
    },
    "MerchantOrderReturnItem": {
      "type": "object",
      "id": "MerchantOrderReturnItem",
      "properties": {
        "product": {
          "$ref": "OrderLineItemProduct",
          "description": "Product data from the time of the order placement."
        },
        "returnShipmentIds": {
          "items": {
            "type": "string"
          },
          "description": "IDs of the return shipments that this return item belongs to.",
          "type": "array"
        },
        "state": {
          "description": "State of the item. Acceptable values are: - \"`canceled`\" - \"`new`\" - \"`received`\" - \"`refunded`\" - \"`rejected`\" ",
          "type": "string"
        },
        "itemId": {
          "description": "Product level item ID. If the returned items are of the same product, they will have the same ID.",
          "type": "string"
        },
        "customerReturnReason": {
          "description": "The reason that the customer chooses to return an item.",
          "$ref": "CustomerReturnReason"
        },
        "merchantReturnReason": {
          "description": "The reason that merchant chooses to accept a return item.",
          "$ref": "RefundReason"
        }
      }
    },
    "CustomGroup": {
      "type": "object",
      "id": "CustomGroup",
      "properties": {
        "attributes": {
          "items": {
            "$ref": "CustomAttribute"
          },
          "description": "The sub-attributes.",
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "The name of the group. Underscores will be replaced by spaces upon insertion."
        }
      }
    },
    "OrdersAcknowledgeResponse": {
      "id": "OrdersAcknowledgeResponse",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersAcknowledgeResponse\"."
        }
      },
      "type": "object"
    },
    "AccountsListResponse": {
      "type": "object",
      "id": "AccountsListResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsListResponse\"."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "Account"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of accounts."
        }
      }
    },
    "TransitTable": {
      "id": "TransitTable",
      "properties": {
        "rows": {
          "type": "array",
          "items": {
            "$ref": "TransitTableTransitTimeRow"
          }
        },
        "transitTimeLabels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of transit time labels. The last value can be `\"all other labels\"`. Example: `[\"food\", \"electronics\", \"all other labels\"]`."
        },
        "postalCodeGroupNames": {
          "description": "A list of postal group names. The last value can be `\"all other locations\"`. Example: `[\"zone 1\", \"zone 2\", \"all other locations\"]`. The referred postal code groups must match the delivery country of the service.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "ProductsCustomBatchResponseEntry": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productsCustomBatchResponseEntry`\""
        },
        "batchId": {
          "format": "uint32",
          "description": "The ID of the request entry this entry responds to.",
          "type": "integer"
        },
        "product": {
          "description": "The inserted product. Only defined if the method is `insert` and if the request was successful.",
          "$ref": "Product"
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if and only if the request failed."
        }
      },
      "description": "A batch entry encoding a single non-batch products response.",
      "type": "object",
      "id": "ProductsCustomBatchResponseEntry"
    },
    "PosCustomBatchRequestEntry": {
      "id": "PosCustomBatchRequestEntry",
      "properties": {
        "inventory": {
          "$ref": "PosInventory",
          "description": "The inventory to submit. This should be set only if the method is `inventory`."
        },
        "store": {
          "description": "The store information to submit. This should be set only if the method is `insert`.",
          "$ref": "PosStore"
        },
        "batchId": {
          "type": "integer",
          "format": "uint32",
          "description": "An entry ID, unique within the batch request."
        },
        "merchantId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the POS data provider."
        },
        "sale": {
          "$ref": "PosSale",
          "description": "The sale information to submit. This should be set only if the method is `sale`."
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`get`\" - \"`insert`\" - \"`inventory`\" - \"`sale`\" ",
          "type": "string"
        },
        "storeCode": {
          "description": "The store code. This should be set only if the method is `delete` or `get`.",
          "type": "string"
        },
        "targetMerchantId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the account for which to get/submit data."
        }
      },
      "type": "object"
    },
    "DatafeedstatusesListResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedstatusesListResponse\"."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of datafeed statuses."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "DatafeedStatus"
          }
        }
      },
      "id": "DatafeedstatusesListResponse"
    },
    "ProductStatusItemLevelIssue": {
      "id": "ProductStatusItemLevelIssue",
      "properties": {
        "destination": {
          "description": "The destination the issue applies to.",
          "type": "string"
        },
        "servability": {
          "description": "How this issue affects serving of the offer.",
          "type": "string"
        },
        "attributeName": {
          "description": "The attribute's name, if the issue is caused by a single attribute.",
          "type": "string"
        },
        "documentation": {
          "type": "string",
          "description": "The URL of a web page to help with resolving this issue."
        },
        "description": {
          "type": "string",
          "description": "A short issue description in English."
        },
        "detail": {
          "description": "A detailed issue description in English.",
          "type": "string"
        },
        "resolution": {
          "description": "Whether the issue can be resolved by the merchant.",
          "type": "string"
        },
        "code": {
          "description": "The error code of the issue.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersCancelRequest": {
      "id": "OrdersCancelRequest",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "reason": {
          "type": "string",
          "description": "The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" "
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        }
      }
    },
    "OrderCustomer": {
      "type": "object",
      "id": "OrderCustomer",
      "properties": {
        "invoiceReceivingEmail": {
          "description": "Email address for the merchant to send value-added tax or invoice documentation of the order. Only the last document sent is made available to the customer. For more information, see About automated VAT invoicing for Buy on Google.",
          "type": "string"
        },
        "email": {
          "description": "Deprecated.",
          "type": "string"
        },
        "explicitMarketingPreference": {
          "type": "boolean",
          "description": "Deprecated. Please use marketingRightsInfo instead."
        },
        "fullName": {
          "type": "string",
          "description": "Full name of the customer."
        },
        "marketingRightsInfo": {
          "$ref": "OrderCustomerMarketingRightsInfo",
          "description": "Customer's marketing preferences. Contains the marketing opt-in information that is current at the time that the merchant call. User preference selections can change from one order to the next so preferences must be checked with every order."
        }
      }
    },
    "PosSaleResponse": {
      "type": "object",
      "properties": {
        "timestamp": {
          "description": "Required. The inventory timestamp, in ISO 8601 format.",
          "type": "string"
        },
        "targetCountry": {
          "description": "Required. The CLDR territory code for the item.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#posSaleResponse\".",
          "type": "string"
        },
        "saleId": {
          "type": "string",
          "description": "A unique ID to group items from the same sale event."
        },
        "quantity": {
          "description": "Required. The relative change of the available quantity. Negative for items returned.",
          "type": "string",
          "format": "int64"
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number."
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "itemId": {
          "description": "Required. A unique identifier for the item.",
          "type": "string"
        },
        "storeCode": {
          "type": "string",
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business."
        },
        "price": {
          "$ref": "Price",
          "description": "Required. The price of the item."
        }
      },
      "id": "PosSaleResponse"
    },
    "ProductShipping": {
      "properties": {
        "postalCode": {
          "description": "The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length.",
          "type": "string"
        },
        "region": {
          "description": "The geographic region to which a shipping rate applies.",
          "type": "string"
        },
        "locationGroupName": {
          "type": "string",
          "description": "The location where the shipping is applicable, represented by a location group name."
        },
        "country": {
          "type": "string",
          "description": "The CLDR territory code of the country to which an item will ship."
        },
        "service": {
          "type": "string",
          "description": "A free-form description of the service class or delivery speed."
        },
        "locationId": {
          "description": "The numeric ID of a location that the shipping rate applies to as defined in the AdWords API.",
          "format": "int64",
          "type": "string"
        },
        "price": {
          "description": "Fixed shipping price, represented as a number.",
          "$ref": "Price"
        }
      },
      "id": "ProductShipping",
      "type": "object"
    },
    "ShippingsettingsGetSupportedCarriersResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsGetSupportedCarriersResponse\"."
        },
        "carriers": {
          "items": {
            "$ref": "CarriersCarrier"
          },
          "description": "A list of supported carriers. May be empty.",
          "type": "array"
        }
      },
      "id": "ShippingsettingsGetSupportedCarriersResponse"
    },
    "ShippingSettings": {
      "type": "object",
      "id": "ShippingSettings",
      "properties": {
        "services": {
          "type": "array",
          "description": "The target account's list of services. Optional.",
          "items": {
            "$ref": "Service"
          }
        },
        "postalCodeGroups": {
          "items": {
            "$ref": "PostalCodeGroup"
          },
          "description": "A list of postal code groups that can be referred to in `services`. Optional.",
          "type": "array"
        },
        "accountId": {
          "format": "uint64",
          "description": "The ID of the account to which these account shipping settings belong. Ignored upon update, always present in get request responses.",
          "type": "string"
        }
      },
      "description": "The merchant account's shipping settings. All methods except getsupportedcarriers and getsupportedholidays require the admin role."
    },
    "ShippingsettingsCustomBatchResponseEntry": {
      "properties": {
        "batchId": {
          "description": "The ID of the request entry to which this entry responds.",
          "type": "integer",
          "format": "uint32"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#shippingsettingsCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "errors": {
          "description": "A list of errors defined if, and only if, the request failed.",
          "$ref": "Errors"
        },
        "shippingSettings": {
          "$ref": "ShippingSettings",
          "description": "The retrieved or updated account shipping settings."
        }
      },
      "description": "A batch entry encoding a single non-batch shipping settings response.",
      "id": "ShippingsettingsCustomBatchResponseEntry",
      "type": "object"
    },
    "OrderLineItemProductVariantAttribute": {
      "properties": {
        "dimension": {
          "description": "The dimension of the variant.",
          "type": "string"
        },
        "value": {
          "description": "The value for the dimension.",
          "type": "string"
        }
      },
      "id": "OrderLineItemProductVariantAttribute",
      "type": "object"
    },
    "OrderinvoicesCreateChargeInvoiceRequest": {
      "id": "OrderinvoicesCreateChargeInvoiceRequest",
      "properties": {
        "lineItemInvoices": {
          "items": {
            "$ref": "ShipmentInvoiceLineItemInvoice"
          },
          "description": "[required] Invoice details per line item.",
          "type": "array"
        },
        "invoiceId": {
          "description": "[required] The ID of the invoice.",
          "type": "string"
        },
        "invoiceSummary": {
          "$ref": "InvoiceSummary",
          "description": "[required] Invoice summary."
        },
        "shipmentGroupId": {
          "description": "[required] ID of the shipment group. It is assigned by the merchant in the `shipLineItems` method and is used to group multiple line items that have the same kind of shipping charges.",
          "type": "string"
        },
        "operationId": {
          "type": "string",
          "description": "[required] The ID of the operation, unique across all operations for a given order."
        }
      },
      "type": "object"
    },
    "OrderLineItemProductFee": {
      "id": "OrderLineItemProductFee",
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "Price",
          "description": "Amount of the fee."
        },
        "name": {
          "type": "string",
          "description": "Name of the fee."
        }
      }
    },
    "DatafeedStatusExample": {
      "type": "object",
      "description": "An example occurrence for a particular error.",
      "properties": {
        "lineNumber": {
          "format": "uint64",
          "type": "string",
          "description": "Line number in the data feed where the example is found."
        },
        "value": {
          "type": "string",
          "description": "The problematic value."
        },
        "itemId": {
          "description": "The ID of the example item.",
          "type": "string"
        }
      },
      "id": "DatafeedStatusExample"
    },
    "RefundReason": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the reason."
        },
        "reasonCode": {
          "description": "Code of the refund reason. Acceptable values are: - \"`adjustment`\" - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`customerSupportRequested`\" - \"`deliveredLateByCarrier`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`feeAdjustment`\" - \"`invalidCoupon`\" - \"`lateShipmentCredit`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceAdjustment`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`promoReallocation`\" - \"`qualityNotAsExpected`\" - \"`returnRefundAbuse`\" - \"`shippingCostAdjustment`\" - \"`shippingPriceError`\" - \"`taxAdjustment`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        }
      },
      "type": "object",
      "id": "RefundReason"
    },
    "DatafeedsCustomBatchRequest": {
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "type": "array",
          "items": {
            "$ref": "DatafeedsCustomBatchRequestEntry"
          }
        }
      },
      "type": "object",
      "id": "DatafeedsCustomBatchRequest"
    },
    "OrderLegacyPromotion": {
      "id": "OrderLegacyPromotion",
      "properties": {
        "redemptionChannel": {
          "type": "string",
          "description": "Indicates that the promotion is valid online. Acceptable values are: - \"`online`\" "
        },
        "id": {
          "type": "string",
          "description": "The unique ID of the promotion."
        },
        "productApplicability": {
          "description": "Whether the promotion is applicable to all products or only specific products. Acceptable values are: - \"`allProducts`\" - \"`specificProducts`\" ",
          "type": "string"
        },
        "longTitle": {
          "description": "The full title of the promotion.",
          "type": "string"
        },
        "benefits": {
          "items": {
            "$ref": "OrderLegacyPromotionBenefit"
          },
          "type": "array"
        },
        "effectiveDates": {
          "type": "string",
          "description": "The date and time frame when the promotion is active and ready for validation review. Note that the promotion live time may be delayed for a few hours due to the validation review. Start date and end date are separated by a forward slash (/). The start date is specified by the format (YYYY-MM-DD), followed by the letter ?T?, the time of the day when the sale starts (in Greenwich Mean Time, GMT), followed by an expression of the time zone for the sale. The end date is in the same format."
        },
        "genericRedemptionCode": {
          "description": "Optional. The text code that corresponds to the promotion when applied on the retailer?s website.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderAddress": {
      "properties": {
        "postalCode": {
          "description": "Postal Code or ZIP (e.g. \"94043\").",
          "type": "string"
        },
        "country": {
          "description": "CLDR country code (e.g. \"US\").",
          "type": "string"
        },
        "streetAddress": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Street-level part of the address."
        },
        "isPostOfficeBox": {
          "description": "Whether the address is a post office box.",
          "type": "boolean"
        },
        "locality": {
          "description": "City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs).",
          "type": "string"
        },
        "region": {
          "description": "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\").",
          "type": "string"
        },
        "recipientName": {
          "type": "string",
          "description": "Name of the recipient."
        },
        "fullAddress": {
          "description": "Strings representing the lines of the printed label for mailing the order, for example: John Smith 1600 Amphitheatre Parkway Mountain View, CA, 94043 United States ",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "OrderAddress",
      "type": "object"
    },
    "DatafeedFormat": {
      "id": "DatafeedFormat",
      "properties": {
        "columnDelimiter": {
          "description": "Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \"`pipe`\" - \"`tab`\" - \"`tilde`\" ",
          "type": "string"
        },
        "quotingMode": {
          "type": "string",
          "description": "Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \"`normal character`\" - \"`value quoting`\" "
        },
        "fileEncoding": {
          "description": "Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected. Acceptable values are: - \"`latin-1`\" - \"`utf-16be`\" - \"`utf-16le`\" - \"`utf-8`\" - \"`windows-1252`\" ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderLineItemShippingDetailsMethod": {
      "properties": {
        "minDaysInTransit": {
          "description": "Required. Minimum transit time.",
          "type": "integer",
          "format": "uint32"
        },
        "carrier": {
          "type": "string",
          "description": "The carrier for the shipping. Optional. See `shipments[].carrier` for a list of acceptable values."
        },
        "maxDaysInTransit": {
          "type": "integer",
          "description": "Required. Maximum transit time.",
          "format": "uint32"
        },
        "methodName": {
          "type": "string",
          "description": "Required. The name of the shipping method."
        }
      },
      "id": "OrderLineItemShippingDetailsMethod",
      "type": "object"
    },
    "PosCustomBatchResponse": {
      "id": "PosCustomBatchResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#posCustomBatchResponse\".",
          "type": "string"
        },
        "entries": {
          "items": {
            "$ref": "PosCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests.",
          "type": "array"
        }
      }
    },
    "OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails": {
      "properties": {
        "productId": {
          "type": "string",
          "description": "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "deliverByDate": {
          "type": "string",
          "description": "Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past."
        },
        "lineItemId": {
          "description": "The ID of the line item to set metadata. Either lineItemId or productId is required.",
          "type": "string"
        },
        "shipByDate": {
          "type": "string",
          "description": "Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past."
        }
      },
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails"
    },
    "OrdersShipLineItemsRequest": {
      "id": "OrdersShipLineItemsRequest",
      "properties": {
        "trackingId": {
          "description": "Deprecated. Please use shipmentInfo instead. The tracking ID for the shipment.",
          "type": "string"
        },
        "carrier": {
          "type": "string",
          "description": "Deprecated. Please use shipmentInfo instead. The carrier handling the shipment. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values."
        },
        "shipmentInfos": {
          "items": {
            "$ref": "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo"
          },
          "type": "array",
          "description": "Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs)."
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "lineItems": {
          "type": "array",
          "description": "Line items to ship.",
          "items": {
            "$ref": "OrderShipmentLineItemShipment"
          }
        },
        "shipmentGroupId": {
          "description": "ID of the shipment group. Required for orders that use the orderinvoices service.",
          "type": "string"
        },
        "shipmentId": {
          "type": "string",
          "description": "Deprecated. Please use shipmentInfo instead. The ID of the shipment."
        }
      },
      "type": "object"
    },
    "OrdersReturnRefundLineItemRequest": {
      "properties": {
        "amountTax": {
          "$ref": "Price",
          "description": "Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        },
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "uint32",
          "description": "The quantity to return and refund. Quantity is required."
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "productId": {
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "amountPretax": {
          "description": "The amount that is refunded. If omitted, refundless return is assumed (same as calling returnLineItem method).",
          "$ref": "Price"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        }
      },
      "id": "OrdersReturnRefundLineItemRequest",
      "type": "object"
    },
    "OrdersInStoreRefundLineItemRequest": {
      "properties": {
        "amountPretax": {
          "description": "The amount that is refunded. Required.",
          "$ref": "Price"
        },
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "quantity": {
          "description": "The quantity to return and refund.",
          "format": "uint32",
          "type": "integer"
        },
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "amountTax": {
          "description": "Tax amount that correspond to refund amount in amountPretax. Required.",
          "$ref": "Price"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        }
      },
      "type": "object",
      "id": "OrdersInStoreRefundLineItemRequest"
    },
    "OrdersCustomBatchRequestEntryShipLineItems": {
      "id": "OrdersCustomBatchRequestEntryShipLineItems",
      "type": "object",
      "properties": {
        "shipmentInfos": {
          "type": "array",
          "items": {
            "$ref": "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo"
          },
          "description": "Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs)."
        },
        "shipmentId": {
          "type": "string",
          "description": "Deprecated. Please use shipmentInfo instead. The ID of the shipment."
        },
        "lineItems": {
          "type": "array",
          "items": {
            "$ref": "OrderShipmentLineItemShipment"
          },
          "description": "Line items to ship."
        },
        "trackingId": {
          "type": "string",
          "description": "Deprecated. Please use shipmentInfo instead. The tracking ID for the shipment."
        },
        "shipmentGroupId": {
          "description": "ID of the shipment group. Required for orders that use the orderinvoices service.",
          "type": "string"
        },
        "carrier": {
          "type": "string",
          "description": "Deprecated. Please use shipmentInfo instead. The carrier handling the shipment. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values."
        }
      }
    },
    "AccountAddress": {
      "properties": {
        "region": {
          "description": "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\").",
          "type": "string"
        },
        "locality": {
          "description": "City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs).",
          "type": "string"
        },
        "country": {
          "description": "CLDR country code (e.g. \"US\"). This value cannot be set for a sub-account of an MCA. All MCA sub-accounts inherit the country of their parent MCA.",
          "type": "string"
        },
        "streetAddress": {
          "description": "Street-level part of the address.",
          "type": "string"
        },
        "postalCode": {
          "type": "string",
          "description": "Postal code or ZIP (e.g. \"94043\")."
        }
      },
      "id": "AccountAddress",
      "type": "object"
    },
    "AccounttaxCustomBatchResponseEntry": {
      "description": "A batch entry encoding a single non-batch accounttax response.",
      "type": "object",
      "id": "AccounttaxCustomBatchResponseEntry",
      "properties": {
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        },
        "accountTax": {
          "description": "The retrieved or updated account tax settings.",
          "$ref": "AccountTax"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accounttaxCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "batchId": {
          "type": "integer",
          "description": "The ID of the request entry this entry responds to.",
          "format": "uint32"
        }
      }
    },
    "OrdersCustomBatchRequestEntryRejectReturnLineItem": {
      "id": "OrdersCustomBatchRequestEntryRejectReturnLineItem",
      "properties": {
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`damagedOrUsed`\" - \"`missingComponent`\" - \"`notEligible`\" - \"`other`\" - \"`outOfReturnWindow`\" ",
          "type": "string"
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "quantity": {
          "type": "integer",
          "description": "The quantity to return and refund.",
          "format": "uint32"
        }
      },
      "type": "object"
    },
    "LiasettingsCustomBatchResponse": {
      "id": "LiasettingsCustomBatchResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsCustomBatchResponse\".",
          "type": "string"
        },
        "entries": {
          "type": "array",
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "LiasettingsCustomBatchResponseEntry"
          }
        }
      },
      "type": "object"
    },
    "Inventory": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#inventory`\"",
          "type": "string"
        },
        "instoreProductLocation": {
          "type": "string",
          "description": "The instore product location. Supported only for local products."
        },
        "salePriceEffectiveDate": {
          "description": "A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided.",
          "type": "string"
        },
        "availability": {
          "description": "The availability of the product. Acceptable values are: - \"`in stock`\" - \"`out of stock`\" - \"`preorder`\" ",
          "type": "string"
        },
        "loyaltyPoints": {
          "$ref": "LoyaltyPoints",
          "description": "Loyalty points that users receive after purchasing the item. Japan only."
        },
        "customLabel2": {
          "type": "string",
          "description": "Custom label 2 for custom grouping of items in a Shopping campaign. Only supported for online products."
        },
        "price": {
          "$ref": "Price",
          "description": "The price of the product."
        },
        "installment": {
          "$ref": "Installment",
          "description": "Number and amount of installments to pay for an item. Brazil only."
        },
        "sellOnGoogleQuantity": {
          "description": "The quantity of the product that is available for selling on Google. Supported only for online products.",
          "format": "uint32",
          "type": "integer"
        },
        "quantity": {
          "format": "uint32",
          "description": "The quantity of the product. Must be equal to or greater than zero. Supported only for local products.",
          "type": "integer"
        },
        "salePrice": {
          "$ref": "Price",
          "description": "The sale price of the product. Mandatory if `sale_price_effective_date` is defined."
        },
        "customLabel4": {
          "description": "Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products.",
          "type": "string"
        },
        "customLabel0": {
          "description": "Custom label 0 for custom grouping of items in a Shopping campaign. Only supported for online products.",
          "type": "string"
        },
        "customLabel1": {
          "description": "Custom label 1 for custom grouping of items in a Shopping campaign. Only supported for online products.",
          "type": "string"
        },
        "pickup": {
          "description": "Store pickup information. Only supported for local inventory. Not setting `pickup` means \"don't update\" while setting it to the empty value (`{}` in JSON) means \"delete\". Otherwise, `pickupMethod` and `pickupSla` must be set together, unless `pickupMethod` is \"not supported\".",
          "$ref": "InventoryPickup"
        },
        "customLabel3": {
          "type": "string",
          "description": "Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products."
        }
      },
      "id": "Inventory",
      "type": "object"
    },
    "OrderReportTransaction": {
      "type": "object",
      "id": "OrderReportTransaction",
      "properties": {
        "merchantId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the managing account."
        },
        "disbursementCreationDate": {
          "type": "string",
          "description": "The date the disbursement was created, in ISO 8601 format."
        },
        "disbursementDate": {
          "description": "The date the disbursement was initiated, in ISO 8601 format.",
          "type": "string"
        },
        "productAmount": {
          "$ref": "Amount",
          "description": "Total amount for the items."
        },
        "orderId": {
          "description": "The ID of the order.",
          "type": "string"
        },
        "productAmountWithRemittedTax": {
          "description": "Total amount with remitted tax for the items.",
          "$ref": "ProductAmount"
        },
        "disbursementAmount": {
          "$ref": "Price",
          "description": "The disbursement amount."
        },
        "merchantOrderId": {
          "type": "string",
          "description": "Merchant-provided ID of the order."
        },
        "transactionDate": {
          "description": "The date of the transaction, in ISO 8601 format.",
          "type": "string"
        },
        "disbursementId": {
          "description": "The ID of the disbursement.",
          "type": "string"
        }
      }
    },
    "AccountsCustomBatchRequestEntry": {
      "properties": {
        "linkRequest": {
          "description": "Details about the `link` request.",
          "$ref": "AccountsCustomBatchRequestEntryLinkRequest"
        },
        "account": {
          "$ref": "Account",
          "description": "The account to create or update. Only defined if the method is `insert` or `update`."
        },
        "overwrite": {
          "type": "boolean",
          "description": "Only applicable if the method is `claimwebsite`. Indicates whether or not to take the claim from another account in case there is a conflict."
        },
        "batchId": {
          "type": "integer",
          "format": "uint32",
          "description": "An entry ID, unique within the batch request."
        },
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`claimWebsite`\" - \"`delete`\" - \"`get`\" - \"`insert`\" - \"`link`\" - \"`update`\" "
        },
        "merchantId": {
          "description": "The ID of the managing account.",
          "format": "uint64",
          "type": "string"
        },
        "force": {
          "description": "Whether the account should be deleted if the account has offers. Only applicable if the method is `delete`.",
          "type": "boolean"
        },
        "labelIds": {
          "type": "array",
          "description": "Label IDs for the 'updatelabels' request.",
          "items": {
            "format": "uint64",
            "type": "string"
          }
        },
        "accountId": {
          "format": "uint64",
          "description": "The ID of the targeted account. Only defined if the method is not `insert`.",
          "type": "string"
        }
      },
      "id": "AccountsCustomBatchRequestEntry",
      "description": "A batch entry encoding a single non-batch accounts request.",
      "type": "object"
    },
    "MerchantOrderReturn": {
      "type": "object",
      "id": "MerchantOrderReturn",
      "properties": {
        "orderId": {
          "type": "string",
          "description": "Google order ID."
        },
        "returnShipments": {
          "type": "array",
          "description": "Shipments of the return.",
          "items": {
            "$ref": "ReturnShipment"
          }
        },
        "returnItems": {
          "type": "array",
          "description": "Items of the return.",
          "items": {
            "$ref": "MerchantOrderReturnItem"
          }
        },
        "orderReturnId": {
          "type": "string",
          "description": "Order return ID generated by Google."
        },
        "merchantOrderId": {
          "description": "Merchant defined order ID.",
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "description": "The date of creation of the return, in ISO 8601 format."
        }
      },
      "description": "Order return. Production access (all methods) requires the order manager role. Sandbox access does not."
    },
    "OrdersCustomBatchRequestEntry": {
      "id": "OrdersCustomBatchRequestEntry",
      "properties": {
        "batchId": {
          "type": "integer",
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32"
        },
        "orderId": {
          "description": "The ID of the order. Required for all methods beside `getByMerchantOrderId`.",
          "type": "string"
        },
        "cancelLineItem": {
          "description": "Required for `cancelLineItem` method.",
          "$ref": "OrdersCustomBatchRequestEntryCancelLineItem"
        },
        "setLineItemMetadata": {
          "description": "Required for `setLineItemMetadata` method.",
          "$ref": "OrdersCustomBatchRequestEntrySetLineItemMetadata"
        },
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`acknowledge`\" - \"`cancel`\" - \"`cancelLineItem`\" - \"`get`\" - \"`getByMerchantOrderId`\" - \"`inStoreRefundLineItem`\" - \"`refund`\" - \"`rejectReturnLineItem`\" - \"`returnLineItem`\" - \"`returnRefundLineItem`\" - \"`setLineItemMetadata`\" - \"`shipLineItems`\" - \"`updateLineItemShippingDetails`\" - \"`updateMerchantOrderId`\" - \"`updateShipment`\" "
        },
        "refund": {
          "description": "Required for `refund` method.",
          "$ref": "OrdersCustomBatchRequestEntryRefund"
        },
        "cancel": {
          "description": "Required for `cancel` method.",
          "$ref": "OrdersCustomBatchRequestEntryCancel"
        },
        "returnRefundLineItem": {
          "description": "Required for `returnRefundLineItem` method.",
          "$ref": "OrdersCustomBatchRequestEntryReturnRefundLineItem"
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order. Required for all methods beside `get` and `getByMerchantOrderId`."
        },
        "rejectReturnLineItem": {
          "description": "Required for `rejectReturnLineItem` method.",
          "$ref": "OrdersCustomBatchRequestEntryRejectReturnLineItem"
        },
        "inStoreRefundLineItem": {
          "description": "Required for `inStoreReturnLineItem` method.",
          "$ref": "OrdersCustomBatchRequestEntryInStoreRefundLineItem"
        },
        "updateLineItemShippingDetails": {
          "description": "Required for `updateLineItemShippingDate` method.",
          "$ref": "OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails"
        },
        "returnLineItem": {
          "description": "Required for `returnLineItem` method.",
          "$ref": "OrdersCustomBatchRequestEntryReturnLineItem"
        },
        "updateShipment": {
          "description": "Required for `updateShipment` method.",
          "$ref": "OrdersCustomBatchRequestEntryUpdateShipment"
        },
        "merchantOrderId": {
          "type": "string",
          "description": "The merchant order ID. Required for `updateMerchantOrderId` and `getByMerchantOrderId` methods."
        },
        "shipLineItems": {
          "$ref": "OrdersCustomBatchRequestEntryShipLineItems",
          "description": "Required for `shipLineItems` method."
        },
        "merchantId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the managing account."
        }
      },
      "type": "object"
    },
    "ProductStatus": {
      "description": "The status of a product, i.e., information about a product computed asynchronously.",
      "id": "ProductStatus",
      "properties": {
        "dataQualityIssues": {
          "type": "array",
          "description": "DEPRECATED - never populated",
          "items": {
            "$ref": "ProductStatusDataQualityIssue"
          }
        },
        "itemLevelIssues": {
          "description": "A list of all issues associated with the product.",
          "type": "array",
          "items": {
            "$ref": "ProductStatusItemLevelIssue"
          }
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productStatus`\""
        },
        "lastUpdateDate": {
          "type": "string",
          "description": "Date on which the item has been last updated, in ISO 8601 format."
        },
        "link": {
          "description": "The link to the product.",
          "type": "string"
        },
        "title": {
          "description": "The title of the product.",
          "type": "string"
        },
        "destinationStatuses": {
          "items": {
            "$ref": "ProductStatusDestinationStatus"
          },
          "description": "The intended destinations for the product.",
          "type": "array"
        },
        "googleExpirationDate": {
          "description": "Date on which the item expires in Google Shopping, in ISO 8601 format.",
          "type": "string"
        },
        "creationDate": {
          "description": "Date on which the item has been created, in ISO 8601 format.",
          "type": "string"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product for which status is reported."
        },
        "product": {
          "$ref": "Product",
          "description": "Product data after applying all the join inputs."
        }
      },
      "type": "object"
    },
    "OrdersShipLineItemsResponse": {
      "id": "OrdersShipLineItemsResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersShipLineItemsResponse\".",
          "type": "string"
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        }
      }
    },
    "AccountGoogleMyBusinessLink": {
      "type": "object",
      "id": "AccountGoogleMyBusinessLink",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the link between this Merchant Center account and the GMB account. Acceptable values are: - \"`active`\" - \"`pending`\" "
        },
        "gmbEmail": {
          "description": "The GMB email address of which a specific account within a GMB account. A sample account within a GMB account could be a business account with set of locations, managed under the GMB account.",
          "type": "string"
        }
      }
    },
    "OrderPickupDetailsCollector": {
      "properties": {
        "name": {
          "description": "Name of the person picking up the shipment.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number of the person picking up the shipment.",
          "type": "string"
        }
      },
      "id": "OrderPickupDetailsCollector",
      "type": "object"
    },
    "GmbAccounts": {
      "id": "GmbAccounts",
      "type": "object",
      "properties": {
        "accountId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the Merchant Center account."
        },
        "gmbAccounts": {
          "description": "A list of GMB accounts which are available to the merchant.",
          "type": "array",
          "items": {
            "$ref": "GmbAccountsGmbAccount"
          }
        }
      }
    },
    "OrdersCustomBatchResponseEntry": {
      "properties": {
        "order": {
          "description": "The retrieved order. Only defined if the method is `get` and if the request was successful.",
          "$ref": "Order"
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Only defined if 1. the request was successful; and 2. the method is not `get`, `getByMerchantOrderId`, or one of the test methods. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if and only if the request failed."
        },
        "batchId": {
          "type": "integer",
          "description": "The ID of the request entry this entry responds to.",
          "format": "uint32"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersCustomBatchResponseEntry`\"",
          "type": "string"
        }
      },
      "id": "OrdersCustomBatchResponseEntry",
      "type": "object"
    },
    "OrdersUpdateMerchantOrderIdResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersUpdateMerchantOrderIdResponse\".",
          "type": "string"
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      },
      "id": "OrdersUpdateMerchantOrderIdResponse"
    },
    "OrderPaymentMethod": {
      "id": "OrderPaymentMethod",
      "type": "object",
      "properties": {
        "billingAddress": {
          "$ref": "OrderAddress",
          "description": "The billing address."
        },
        "expirationYear": {
          "description": "The card expiration year (4-digit, e.g. 2015).",
          "type": "integer",
          "format": "int32"
        },
        "lastFourDigits": {
          "description": "The last four digits of the card number.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The type of instrument. Acceptable values are: - \"`AMEX`\" - \"`DISCOVER`\" - \"`JCB`\" - \"`MASTERCARD`\" - \"`UNIONPAY`\" - \"`VISA`\" - \"``\" "
        },
        "phoneNumber": {
          "description": "The billing phone number.",
          "type": "string"
        },
        "expirationMonth": {
          "type": "integer",
          "description": "The card expiration month (January = 1, February = 2 etc.).",
          "format": "int32"
        }
      }
    },
    "Headers": {
      "type": "object",
      "properties": {
        "locations": {
          "items": {
            "$ref": "LocationIdSet"
          },
          "description": "A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
          "type": "array"
        },
        "prices": {
          "items": {
            "$ref": "Price"
          },
          "description": "A list of inclusive order price upper bounds. The last price's value can be `\"infinity\"`. For example `[{\"value\": \"10\", \"currency\": \"USD\"}, {\"value\": \"500\", \"currency\": \"USD\"}, {\"value\": \"infinity\", \"currency\": \"USD\"}]` represents the headers \"\u003c= $10\", \"\u003c= $500\", and \"\u003e $500\". All prices within a service must have the same currency. Must be non-empty. Can only be set if all other fields are not set.",
          "type": "array"
        },
        "weights": {
          "type": "array",
          "items": {
            "$ref": "Weight"
          },
          "description": "A list of inclusive order weight upper bounds. The last weight's value can be `\"infinity\"`. For example `[{\"value\": \"10\", \"unit\": \"kg\"}, {\"value\": \"50\", \"unit\": \"kg\"}, {\"value\": \"infinity\", \"unit\": \"kg\"}]` represents the headers \"\u003c= 10kg\", \"\u003c= 50kg\", and \"\u003e 50kg\". All weights within a service must have the same unit. Must be non-empty. Can only be set if all other fields are not set."
        },
        "postalCodeGroupNames": {
          "items": {
            "type": "string"
          },
          "description": "A list of postal group names. The last value can be `\"all other locations\"`. Example: `[\"zone 1\", \"zone 2\", \"all other locations\"]`. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
          "type": "array"
        },
        "numberOfItems": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of inclusive number of items upper bounds. The last value can be `\"infinity\"`. For example `[\"10\", \"50\", \"infinity\"]` represents the headers \"\u003c= 10 items\", \"\u003c= 50 items\", and \"\u003e 50 items\". Must be non-empty. Can only be set if all other fields are not set."
        }
      },
      "description": "A non-empty list of row or column headers for a table. Exactly one of `prices`, `weights`, `numItems`, `postalCodeGroupNames`, or `location` must be set.",
      "id": "Headers"
    },
    "LiasettingsSetPosDataProviderResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsSetPosDataProviderResponse\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "LiasettingsSetPosDataProviderResponse"
    },
    "BusinessDayConfig": {
      "id": "BusinessDayConfig",
      "type": "object",
      "properties": {
        "businessDays": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Regular business days. May not be empty."
        }
      }
    },
    "DatafeedsCustomBatchRequestEntry": {
      "id": "DatafeedsCustomBatchRequestEntry",
      "description": "A batch entry encoding a single non-batch datafeeds request.",
      "type": "object",
      "properties": {
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`fetchNow`\" - \"`get`\" - \"`insert`\" - \"`update`\" ",
          "type": "string"
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "type": "integer",
          "format": "uint32"
        },
        "merchantId": {
          "format": "uint64",
          "description": "The ID of the managing account.",
          "type": "string"
        },
        "datafeed": {
          "$ref": "Datafeed",
          "description": "The data feed to insert."
        },
        "datafeedId": {
          "description": "The ID of the data feed to get, delete or fetch.",
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "ProductAspect": {
      "properties": {
        "intention": {
          "type": "string",
          "description": "Deprecated."
        },
        "aspectName": {
          "description": "Deprecated.",
          "type": "string"
        },
        "destinationName": {
          "type": "string",
          "description": "Deprecated."
        }
      },
      "id": "ProductAspect",
      "type": "object"
    },
    "ShippingsettingsCustomBatchRequest": {
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "ShippingsettingsCustomBatchRequestEntry"
          },
          "type": "array"
        }
      },
      "id": "ShippingsettingsCustomBatchRequest",
      "type": "object"
    },
    "GmbAccountsGmbAccount": {
      "id": "GmbAccountsGmbAccount",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the GMB account."
        },
        "type": {
          "type": "string",
          "description": "The type of the GMB account (User or Business)."
        },
        "email": {
          "description": "The email which identifies the GMB account.",
          "type": "string"
        },
        "listingCount": {
          "format": "uint64",
          "description": "Number of listings under this account.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiasettingsRequestGmbAccessResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsRequestGmbAccessResponse\".",
          "type": "string"
        }
      },
      "id": "LiasettingsRequestGmbAccessResponse"
    },
    "OrderreturnsListResponse": {
      "type": "object",
      "id": "OrderreturnsListResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderreturnsListResponse\"."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of returns."
        },
        "resources": {
          "items": {
            "$ref": "MerchantOrderReturn"
          },
          "type": "array"
        }
      }
    },
    "ProductstatusesCustomBatchRequestEntry": {
      "type": "object",
      "description": "A batch entry encoding a single non-batch productstatuses request.",
      "properties": {
        "merchantId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the managing account."
        },
        "destinations": {
          "items": {
            "type": "string"
          },
          "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
          "type": "array"
        },
        "batchId": {
          "type": "integer",
          "format": "uint32",
          "description": "An entry ID, unique within the batch request."
        },
        "includeAttributes": {
          "type": "boolean"
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" ",
          "type": "string"
        },
        "productId": {
          "description": "The ID of the product whose status to get.",
          "type": "string"
        }
      },
      "id": "ProductstatusesCustomBatchRequestEntry"
    },
    "Account": {
      "properties": {
        "businessInformation": {
          "$ref": "AccountBusinessInformation",
          "description": "The business information of the account."
        },
        "websiteUrl": {
          "description": "The merchant's website.",
          "type": "string"
        },
        "sellerId": {
          "description": "Client-specific, locally-unique, internal ID for the child account.",
          "type": "string"
        },
        "name": {
          "description": "Required. Display name for the account.",
          "type": "string"
        },
        "id": {
          "description": "Required for update. Merchant Center account ID.",
          "type": "string",
          "format": "uint64"
        },
        "users": {
          "description": "Users with access to the account. Every account (except for subaccounts) must have at least one admin user.",
          "type": "array",
          "items": {
            "$ref": "AccountUser"
          }
        },
        "googleMyBusinessLink": {
          "$ref": "AccountGoogleMyBusinessLink",
          "description": "The GMB account which is linked or in the process of being linked with the Merchant Center account."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#account`\""
        },
        "adultContent": {
          "type": "boolean",
          "description": "Indicates whether the merchant sells adult content."
        },
        "adwordsLinks": {
          "description": "List of linked AdWords accounts that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected either in the AdWords interface or through the AdWords API. To delete an active link, or to cancel a link request, remove it from the list.",
          "type": "array",
          "items": {
            "$ref": "AccountAdwordsLink"
          }
        },
        "youtubeChannelLinks": {
          "description": "List of linked YouTube channels that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected in the YT Creator Studio interface. To delete an active link, or to cancel a link request, remove it from the list.",
          "items": {
            "$ref": "AccountYouTubeChannelLink"
          },
          "type": "array"
        },
        "reviewsUrl": {
          "type": "string",
          "description": "[DEPRECATED] This field is never returned and will be ignored if provided."
        }
      },
      "type": "object",
      "id": "Account",
      "description": "Account data. After the creation of a new account it may take a few minutes before it is fully operational. The methods delete, insert, and update require the admin role."
    },
    "CutoffTime": {
      "type": "object",
      "id": "CutoffTime",
      "properties": {
        "timezone": {
          "description": "Timezone identifier for the cutoff time. A list of identifiers can be found in the AdWords API documentation. E.g. \"Europe/Zurich\". Required.",
          "type": "string"
        },
        "hour": {
          "description": "Hour of the cutoff time until which an order has to be placed to be processed in the same day. Required.",
          "format": "uint32",
          "type": "integer"
        },
        "minute": {
          "type": "integer",
          "description": "Minute of the cutoff time until which an order has to be placed to be processed in the same day. Required.",
          "format": "uint32"
        }
      }
    },
    "AccountsCustomBatchResponse": {
      "id": "AccountsCustomBatchResponse",
      "properties": {
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "AccountsCustomBatchResponseEntry"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsCustomBatchResponse\"."
        }
      },
      "type": "object"
    },
    "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption": {
      "properties": {
        "reason": {
          "type": "string",
          "description": "[required] Reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`customerSupportRequested`\" - \"`deliveredLateByCarrier`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`feeAdjustment`\" - \"`invalidCoupon`\" - \"`lateShipmentCredit`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceAdjustment`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`promoReallocation`\" - \"`qualityNotAsExpected`\" - \"`returnRefundAbuse`\" - \"`shippingCostAdjustment`\" - \"`shippingPriceError`\" - \"`taxAdjustment`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        },
        "description": {
          "description": "Optional description of the refund reason.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption"
    },
    "ProductShippingWeight": {
      "type": "object",
      "properties": {
        "unit": {
          "type": "string",
          "description": "The unit of value."
        },
        "value": {
          "description": "The weight of the product used to calculate the shipping cost of the item.",
          "format": "double",
          "type": "number"
        }
      },
      "id": "ProductShippingWeight"
    },
    "OrdersListResponse": {
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "Order"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersListResponse\".",
          "type": "string"
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of orders.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrdersListResponse"
    },
    "OrdersGetByMerchantOrderIdResponse": {
      "properties": {
        "order": {
          "description": "The requested order.",
          "$ref": "Order"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersGetByMerchantOrderIdResponse\".",
          "type": "string"
        }
      },
      "id": "OrdersGetByMerchantOrderIdResponse",
      "type": "object"
    },
    "OrdersUpdateMerchantOrderIdRequest": {
      "id": "OrdersUpdateMerchantOrderIdRequest",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "merchantOrderId": {
          "type": "string",
          "description": "The merchant order id to be assigned to the order. Must be unique per merchant."
        }
      },
      "type": "object"
    },
    "HolidaysHoliday": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier for the holiday to be used when configuring holiday cutoffs. Always present.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The holiday type. Always present. Acceptable values are: - \"`Christmas`\" - \"`Easter`\" - \"`Father's Day`\" - \"`Halloween`\" - \"`Independence Day (USA)`\" - \"`Mother's Day`\" - \"`Thanksgiving`\" - \"`Valentine's Day`\" "
        },
        "date": {
          "description": "Date of the holiday, in ISO 8601 format. E.g. \"2016-12-25\" for Christmas 2016. Always present.",
          "type": "string"
        },
        "countryCode": {
          "description": "The CLDR territory code of the country in which the holiday is available. E.g. \"US\", \"DE\", \"GB\". A holiday cutoff can only be configured in a shipping settings service with matching delivery country. Always present.",
          "type": "string"
        },
        "deliveryGuaranteeHour": {
          "description": "Hour of the day in the delivery location's timezone on the guaranteed delivery date by which the order has to arrive at the customer's. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Always present.",
          "type": "string",
          "format": "uint64"
        },
        "deliveryGuaranteeDate": {
          "type": "string",
          "description": "Date on which the order has to arrive at the customer's, in ISO 8601 format. E.g. \"2016-12-24\" for 24th December 2016. Always present."
        }
      },
      "id": "HolidaysHoliday"
    },
    "DatafeedsFetchNowResponse": {
      "id": "DatafeedsFetchNowResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedsFetchNowResponse\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TestOrderLineItemProduct": {
      "properties": {
        "gtin": {
          "description": "Global Trade Item Number (GTIN) of the item. Optional.",
          "type": "string"
        },
        "mpn": {
          "description": "Manufacturer Part Number (MPN) of the item. Optional.",
          "type": "string"
        },
        "fees": {
          "type": "array",
          "items": {
            "$ref": "OrderLineItemProductFee"
          },
          "description": "Fees for the item. Optional."
        },
        "title": {
          "type": "string",
          "description": "Required. The title of the product."
        },
        "condition": {
          "type": "string",
          "description": "Required. Condition or state of the item. Acceptable values are: - \"`new`\" "
        },
        "itemGroupId": {
          "type": "string",
          "description": "Shared identifier for all variants of the same product. Optional."
        },
        "variantAttributes": {
          "description": "Variant attributes for the item. Optional.",
          "items": {
            "$ref": "OrderLineItemProductVariantAttribute"
          },
          "type": "array"
        },
        "offerId": {
          "type": "string",
          "description": "Required. An identifier of the item."
        },
        "brand": {
          "description": "Required. Brand of the item.",
          "type": "string"
        },
        "imageLink": {
          "type": "string",
          "description": "Required. URL of an image of the item."
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item. Acceptable values are: - \"`en`\" - \"`fr`\" "
        },
        "price": {
          "description": "Required. The price for the product. Tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied.",
          "$ref": "Price"
        },
        "channel": {
          "description": "Deprecated. Acceptable values are: - \"`online`\" ",
          "type": "string"
        },
        "targetCountry": {
          "description": "Required. The CLDR territory // code of the target country of the product.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "TestOrderLineItemProduct"
    },
    "CustomerReturnReason": {
      "id": "CustomerReturnReason",
      "type": "object",
      "properties": {
        "reasonCode": {
          "description": "Code of the return reason. Acceptable values are: - \"`betterPriceFound`\" - \"`changedMind`\" - \"`damagedOrDefectiveItem`\" - \"`didNotMatchDescription`\" - \"`doesNotFit`\" - \"`expiredItem`\" - \"`incorrectItemReceived`\" - \"`noLongerNeeded`\" - \"`notSpecified`\" - \"`orderedWrongItem`\" - \"`other`\" - \"`qualityNotExpected`\" - \"`receivedTooLate`\" - \"`undeliverable`\" ",
          "type": "string"
        },
        "description": {
          "description": "Description of the reason.",
          "type": "string"
        }
      }
    },
    "ProductstatusesCustomBatchResponseEntry": {
      "properties": {
        "productStatus": {
          "description": "The requested product status. Only defined if the request was successful.",
          "$ref": "ProductStatus"
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors, if the request failed."
        },
        "batchId": {
          "format": "uint32",
          "description": "The ID of the request entry this entry responds to.",
          "type": "integer"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productstatusesCustomBatchResponseEntry`\"",
          "type": "string"
        }
      },
      "description": "A batch entry encoding a single non-batch productstatuses response.",
      "id": "ProductstatusesCustomBatchResponseEntry",
      "type": "object"
    },
    "CustomAttribute": {
      "id": "CustomAttribute",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the attribute."
        },
        "type": {
          "type": "string",
          "description": "The type of the attribute. Acceptable values are: - \"`boolean`\" - \"`datetimerange`\" - \"`float`\" - \"`group`\" - \"`int`\" - \"`price`\" - \"`text`\" - \"`time`\" - \"`url`\" "
        },
        "name": {
          "description": "The name of the attribute. Underscores will be replaced by spaces upon insertion.",
          "type": "string"
        },
        "unit": {
          "type": "string",
          "description": "Free-form unit of the attribute. Unit can only be used for values of type int, float, or price."
        }
      },
      "type": "object"
    },
    "AccountStatusProducts": {
      "id": "AccountStatusProducts",
      "type": "object",
      "properties": {
        "destination": {
          "type": "string",
          "description": "The destination the data applies to."
        },
        "statistics": {
          "$ref": "AccountStatusStatistics",
          "description": "Aggregated product statistics."
        },
        "country": {
          "description": "The country the data applies to.",
          "type": "string"
        },
        "channel": {
          "description": "The channel the data applies to. Acceptable values are: - \"`local`\" - \"`online`\" ",
          "type": "string"
        },
        "itemLevelIssues": {
          "type": "array",
          "description": "List of item-level issues.",
          "items": {
            "$ref": "AccountStatusItemLevelIssue"
          }
        }
      }
    },
    "OrderinvoicesCreateChargeInvoiceResponse": {
      "type": "object",
      "properties": {
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderinvoicesCreateChargeInvoiceResponse\"."
        }
      },
      "id": "OrderinvoicesCreateChargeInvoiceResponse"
    },
    "OrdersUpdateLineItemShippingDetailsResponse": {
      "id": "OrdersUpdateLineItemShippingDetailsResponse",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersUpdateLineItemShippingDetailsResponse\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersUpdateLineItemShippingDetailsRequest": {
      "properties": {
        "deliverByDate": {
          "description": "Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past.",
          "type": "string"
        },
        "productId": {
          "description": "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "shipByDate": {
          "type": "string",
          "description": "Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past."
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to set metadata. Either lineItemId or productId is required."
        }
      },
      "id": "OrdersUpdateLineItemShippingDetailsRequest",
      "type": "object"
    },
    "ProductsListResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#productsListResponse\".",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "Product"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of products."
        }
      },
      "id": "ProductsListResponse",
      "type": "object"
    },
    "OrdersCancelLineItemRequest": {
      "properties": {
        "productId": {
          "description": "The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "amountTax": {
          "description": "Tax amount that corresponds to cancellation amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided.",
          "$ref": "Price"
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to cancel. Either lineItemId or productId is required."
        },
        "reason": {
          "description": "The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" ",
          "type": "string"
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "amountPretax": {
          "description": "Amount to refund for the cancelation. Optional. If not set, Google will calculate the default based on the price and tax of the items involved. The amount must not be larger than the net amount left on the order.",
          "$ref": "Price"
        },
        "quantity": {
          "description": "The quantity to cancel.",
          "type": "integer",
          "format": "uint32"
        },
        "amount": {
          "$ref": "Price",
          "description": "Deprecated. Please use amountPretax and amountTax instead."
        }
      },
      "type": "object",
      "id": "OrdersCancelLineItemRequest"
    },
    "LoyaltyPoints": {
      "properties": {
        "ratio": {
          "type": "number",
          "format": "double",
          "description": "The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0."
        },
        "name": {
          "type": "string",
          "description": "Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters."
        },
        "pointsValue": {
          "type": "string",
          "format": "int64",
          "description": "The retailer's loyalty points in absolute value."
        }
      },
      "type": "object",
      "id": "LoyaltyPoints"
    },
    "LiasettingsCustomBatchRequestEntry": {
      "properties": {
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "An entry ID, unique within the batch request."
        },
        "liaSettings": {
          "$ref": "LiaSettings",
          "description": "The account Lia settings to update. Only defined if the method is `update`."
        },
        "gmbEmail": {
          "type": "string",
          "description": "The GMB account. Required only for RequestGmbAccess."
        },
        "merchantId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the managing account."
        },
        "country": {
          "type": "string",
          "description": "The country code. Required only for RequestInventoryVerification."
        },
        "contactName": {
          "type": "string",
          "description": "Inventory validation contact name. Required only for SetInventoryValidationContact."
        },
        "accountId": {
          "description": "The ID of the account for which to get/update account LIA settings.",
          "type": "string",
          "format": "uint64"
        },
        "posExternalAccountId": {
          "description": "The account ID by which this merchant is known to the POS provider.",
          "type": "string"
        },
        "contactEmail": {
          "description": "Inventory validation contact email. Required only for SetInventoryValidationContact.",
          "type": "string"
        },
        "posDataProviderId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of POS data provider. Required only for SetPosProvider."
        },
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" - \"`getAccessibleGmbAccounts`\" - \"`requestGmbAccess`\" - \"`requestInventoryVerification`\" - \"`setInventoryVerificationContact`\" - \"`update`\" "
        }
      },
      "type": "object",
      "id": "LiasettingsCustomBatchRequestEntry"
    },
    "OrderLineItem": {
      "id": "OrderLineItem",
      "type": "object",
      "properties": {
        "cancellations": {
          "type": "array",
          "description": "Cancellations of the line item.",
          "items": {
            "$ref": "OrderCancellation"
          }
        },
        "tax": {
          "description": "Total tax amount for the line item. For example, if two items are purchased, and each have a cost tax of $2, the total tax amount will be $4.",
          "$ref": "Price"
        },
        "quantityReadyForPickup": {
          "description": "Number of items ready for pickup.",
          "format": "uint32",
          "type": "integer"
        },
        "returnInfo": {
          "description": "Details of the return policy for the line item.",
          "$ref": "OrderLineItemReturnInfo"
        },
        "quantityDelivered": {
          "description": "Number of items delivered.",
          "type": "integer",
          "format": "uint32"
        },
        "quantityPending": {
          "format": "uint32",
          "type": "integer",
          "description": "Number of items pending."
        },
        "returns": {
          "description": "Returns of the line item.",
          "items": {
            "$ref": "OrderReturn"
          },
          "type": "array"
        },
        "shippingDetails": {
          "description": "Details of the requested shipping for the line item.",
          "$ref": "OrderLineItemShippingDetails"
        },
        "price": {
          "description": "Total price for the line item. For example, if two items for $10 are purchased, the total price will be $20.",
          "$ref": "Price"
        },
        "quantityCanceled": {
          "format": "uint32",
          "description": "Number of items canceled.",
          "type": "integer"
        },
        "product": {
          "description": "Product data as seen by customer from the time of the order placement. Note that certain attributes values (e.g. title or gtin) might be reformatted and no longer match values submitted via product feed.",
          "$ref": "OrderLineItemProduct"
        },
        "quantityShipped": {
          "type": "integer",
          "description": "Number of items shipped.",
          "format": "uint32"
        },
        "annotations": {
          "description": "Annotations that are attached to the line item.",
          "type": "array",
          "items": {
            "$ref": "OrderMerchantProvidedAnnotation"
          }
        },
        "quantityOrdered": {
          "type": "integer",
          "format": "uint32",
          "description": "Number of items ordered."
        },
        "id": {
          "description": "The ID of the line item.",
          "type": "string"
        },
        "quantityReturned": {
          "description": "Number of items returned.",
          "format": "uint32",
          "type": "integer"
        }
      }
    },
    "Product": {
      "properties": {
        "adult": {
          "type": "boolean",
          "description": "Should be set to true if the item is targeted towards adults."
        },
        "promotionIds": {
          "description": "The unique ID of a promotion.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customAttributes": {
          "description": "A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (e.g., `{ \"name\": \"size type\", \"value\": \"regular\" }`). This is useful for submitting attributes not explicitly exposed by the API, such as additional attributes used for Buy on Google (formerly known as Shopping Actions).",
          "type": "array",
          "items": {
            "$ref": "CustomAttribute"
          }
        },
        "canonicalLink": {
          "type": "string",
          "description": "URL for the canonical version of your item's landing page."
        },
        "energyEfficiencyClass": {
          "type": "string",
          "description": "The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \"`A`\" - \"`A+`\" - \"`A++`\" - \"`A+++`\" - \"`B`\" - \"`C`\" - \"`D`\" - \"`E`\" - \"`F`\" - \"`G`\" "
        },
        "googleProductCategory": {
          "type": "string",
          "description": "Google's category of the item (see [Google product taxonomy](https://support.google.com/merchants/answer/1705911)). When querying products, this field will contain the user provided value. There is currently no way to get back the auto assigned google product categories through the API."
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number (GTIN) of the item."
        },
        "availability": {
          "description": "Availability status of the item. Acceptable values are: - \"`in stock`\" - \"`out of stock`\" - \"`preorder`\" ",
          "type": "string"
        },
        "customGroups": {
          "items": {
            "$ref": "CustomGroup"
          },
          "description": "A list of custom (merchant-provided) custom attribute groups.",
          "type": "array"
        },
        "destinations": {
          "type": "array",
          "items": {
            "$ref": "ProductDestination"
          },
          "description": "Specifies the intended destinations for the product."
        },
        "customLabel4": {
          "type": "string",
          "description": "Custom label 4 for custom grouping of items in a Shopping campaign."
        },
        "mpn": {
          "type": "string",
          "description": "Manufacturer Part Number (MPN) of the item."
        },
        "source": {
          "description": "The source of the offer, i.e., how the offer was created. Acceptable values are: - \"`api`\" - \"`crawl`\" - \"`feed`\" ",
          "type": "string"
        },
        "price": {
          "$ref": "Price",
          "description": "Price of the item."
        },
        "salePriceEffectiveDate": {
          "description": "Date range during which the item is on sale (see products data specification ).",
          "type": "string"
        },
        "costOfGoodsSold": {
          "$ref": "Price",
          "description": "Cost of goods sold. Used for gross profit reporting."
        },
        "isBundle": {
          "type": "boolean",
          "description": "Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price."
        },
        "shippingWidth": {
          "$ref": "ProductShippingDimension",
          "description": "Width of the item for shipping."
        },
        "sizeType": {
          "description": "The cut of the item. Recommended for apparel items. Acceptable values are: - \"`big and tall`\" - \"`maternity`\" - \"`oversize`\" - \"`petite`\" - \"`plus`\" - \"`regular`\" ",
          "type": "string"
        },
        "customLabel0": {
          "type": "string",
          "description": "Custom label 0 for custom grouping of items in a Shopping campaign."
        },
        "description": {
          "description": "Description of the item.",
          "type": "string"
        },
        "title": {
          "description": "Title of the item.",
          "type": "string"
        },
        "additionalImageLinks": {
          "type": "array",
          "description": "Additional URLs of images of the item.",
          "items": {
            "type": "string"
          }
        },
        "maxHandlingTime": {
          "description": "Maximal product handling time (in business days).",
          "type": "string",
          "format": "int64"
        },
        "maxEnergyEfficiencyClass": {
          "description": "The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \"`A`\" - \"`A+`\" - \"`A++`\" - \"`A+++`\" - \"`B`\" - \"`C`\" - \"`D`\" - \"`E`\" - \"`F`\" - \"`G`\" ",
          "type": "string"
        },
        "displayAdsValue": {
          "type": "number",
          "format": "double",
          "description": "Offer margin for dynamic remarketing campaigns."
        },
        "expirationDate": {
          "description": "Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in `productstatuses` as `googleExpirationDate` and might be earlier if `expirationDate` is too far in the future.",
          "type": "string"
        },
        "sizeSystem": {
          "type": "string",
          "description": "System in which the size is specified. Recommended for apparel items. Acceptable values are: - \"`AU`\" - \"`BR`\" - \"`CN`\" - \"`DE`\" - \"`EU`\" - \"`FR`\" - \"`IT`\" - \"`JP`\" - \"`MEX`\" - \"`UK`\" - \"`US`\" "
        },
        "availabilityDate": {
          "description": "The day a pre-ordered product becomes available for delivery, in ISO 8601 format.",
          "type": "string"
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "Error"
          },
          "description": "Read-only warnings."
        },
        "sellOnGoogleQuantity": {
          "description": "The quantity of the product that is available for selling on Google. Supported only for online products.",
          "type": "string",
          "format": "int64"
        },
        "shippingWeight": {
          "$ref": "ProductShippingWeight",
          "description": "Weight of the item for shipping."
        },
        "unitPricingMeasure": {
          "$ref": "ProductUnitPricingMeasure",
          "description": "The measure and dimension of an item."
        },
        "shippingHeight": {
          "description": "Height of the item for shipping.",
          "$ref": "ProductShippingDimension"
        },
        "unitPricingBaseMeasure": {
          "$ref": "ProductUnitPricingBaseMeasure",
          "description": "The preference of the denominator of the unit price."
        },
        "displayAdsSimilarIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Advertiser-specified recommendations."
        },
        "multipack": {
          "type": "string",
          "description": "The number of identical products in a merchant-defined multipack.",
          "format": "int64"
        },
        "adwordsGrouping": {
          "type": "string",
          "description": "Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise."
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        },
        "itemGroupId": {
          "description": "Shared identifier for all variants of the same product.",
          "type": "string"
        },
        "material": {
          "type": "string",
          "description": "The material of which the item is made."
        },
        "salePrice": {
          "description": "Advertised sale price of the item.",
          "$ref": "Price"
        },
        "shippingLabel": {
          "type": "string",
          "description": "The shipping label of the product, used to group product in account-level shipping rules."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#product`\""
        },
        "id": {
          "type": "string",
          "description": "The REST ID of the product. Content API methods that operate on products take this as their `productId` parameter. The REST ID for a product is of the form channel:contentLanguage: targetCountry: offerId."
        },
        "productType": {
          "type": "string",
          "description": "Your category of the item (formatted as in products data specification)."
        },
        "customLabel2": {
          "description": "Custom label 2 for custom grouping of items in a Shopping campaign.",
          "type": "string"
        },
        "brand": {
          "description": "Brand of the item.",
          "type": "string"
        },
        "pattern": {
          "type": "string",
          "description": "The item's pattern (e.g. polka dots)."
        },
        "displayAdsLink": {
          "description": "URL directly to your item's landing page for dynamic remarketing campaigns.",
          "type": "string"
        },
        "onlineOnly": {
          "description": "Deprecated.",
          "type": "boolean"
        },
        "identifierExists": {
          "type": "boolean",
          "description": "False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada."
        },
        "link": {
          "description": "URL directly linking to your item's page on your website.",
          "type": "string"
        },
        "customLabel1": {
          "description": "Custom label 1 for custom grouping of items in a Shopping campaign.",
          "type": "string"
        },
        "installment": {
          "$ref": "Installment",
          "description": "Number and amount of installments to pay for an item."
        },
        "loyaltyPoints": {
          "$ref": "LoyaltyPoints",
          "description": "Loyalty points that users receive after purchasing the item. Japan only."
        },
        "additionalProductTypes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Additional categories of the item (formatted as in products data specification)."
        },
        "ageGroup": {
          "type": "string",
          "description": "Target age group of the item. Acceptable values are: - \"`adult`\" - \"`infant`\" - \"`kids`\" - \"`newborn`\" - \"`toddler`\" - \"`youngAdult`\" "
        },
        "aspects": {
          "type": "array",
          "items": {
            "$ref": "ProductAspect"
          },
          "description": "Deprecated. Do not use."
        },
        "channel": {
          "description": "Required. The item's channel (online or local). Acceptable values are: - \"`local`\" - \"`online`\" ",
          "type": "string"
        },
        "offerId": {
          "type": "string",
          "description": "Required. A unique identifier for the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details. *Note:* Content API methods that operate on products take the REST ID of the product, *not* this identifier."
        },
        "adwordsRedirect": {
          "description": "Allows advertisers to override the item URL when the product is shown within the context of Product Ads.",
          "type": "string"
        },
        "customLabel3": {
          "description": "Custom label 3 for custom grouping of items in a Shopping campaign.",
          "type": "string"
        },
        "shipping": {
          "type": "array",
          "items": {
            "$ref": "ProductShipping"
          },
          "description": "Shipping rules."
        },
        "shippingLength": {
          "description": "Length of the item for shipping.",
          "$ref": "ProductShippingDimension"
        },
        "adwordsLabels": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Similar to adwords_grouping, but only works on CPC."
        },
        "gender": {
          "type": "string",
          "description": "Target gender of the item. Acceptable values are: - \"`female`\" - \"`male`\" - \"`unisex`\" "
        },
        "sizes": {
          "description": "Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same `itemGroupId` value (see size definition).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayAdsTitle": {
          "description": "Title of an item for dynamic remarketing campaigns.",
          "type": "string"
        },
        "minEnergyEfficiencyClass": {
          "type": "string",
          "description": "The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \"`A`\" - \"`A+`\" - \"`A++`\" - \"`A+++`\" - \"`B`\" - \"`C`\" - \"`D`\" - \"`E`\" - \"`F`\" - \"`G`\" "
        },
        "imageLink": {
          "type": "string",
          "description": "URL of an image of the item."
        },
        "taxes": {
          "items": {
            "$ref": "ProductTax"
          },
          "type": "array",
          "description": "Tax information."
        },
        "validatedDestinations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Deprecated. The read-only list of intended destinations which passed validation."
        },
        "condition": {
          "description": "Condition or state of the item. Acceptable values are: - \"`new`\" - \"`refurbished`\" - \"`used`\" ",
          "type": "string"
        },
        "mobileLink": {
          "description": "URL for the mobile-optimized version of your item's landing page.",
          "type": "string"
        },
        "color": {
          "type": "string",
          "description": "Color of the item."
        },
        "displayAdsId": {
          "type": "string",
          "description": "An identifier for an item for dynamic remarketing campaigns."
        },
        "minHandlingTime": {
          "format": "int64",
          "type": "string",
          "description": "Minimal product handling time (in business days)."
        }
      },
      "id": "Product",
      "description": " Required product attributes are primarily defined by the products data specification. See the Products Data Specification Help Center article for information. Product data. After inserting, updating, or deleting a product, it may take several minutes before changes take effect.",
      "type": "object"
    },
    "LocationIdSet": {
      "type": "object",
      "properties": {
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A non-empty list of location IDs. They must all be of the same location type (e.g., state)."
        }
      },
      "id": "LocationIdSet"
    },
    "ReturnShipment": {
      "properties": {
        "deliveryDate": {
          "description": "The date of delivery of the shipment, in ISO 8601 format.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "State of the shipment. Acceptable values are: - \"`completed`\" - \"`new`\" - \"`shipped`\" - \"`undeliverable`\" - \"`pending`\" "
        },
        "shipmentTrackingInfos": {
          "description": "Tracking information of the shipment. One return shipment might be handled by several shipping carriers sequentially.",
          "items": {
            "$ref": "ShipmentTrackingInfo"
          },
          "type": "array"
        },
        "returnMethodType": {
          "type": "string",
          "description": "Type of the return method. Acceptable values are: - \"`byMail`\" - \"`contactCustomerSupport`\" - \"`returnless`\" "
        },
        "creationDate": {
          "description": "The date of creation of the shipment, in ISO 8601 format.",
          "type": "string"
        },
        "shipmentId": {
          "type": "string",
          "description": "Shipment ID generated by Google."
        },
        "shippingDate": {
          "type": "string",
          "description": "The date of shipping of the shipment, in ISO 8601 format."
        }
      },
      "type": "object",
      "id": "ReturnShipment"
    },
    "TestOrderPaymentMethod": {
      "type": "object",
      "id": "TestOrderPaymentMethod",
      "properties": {
        "predefinedBillingAddress": {
          "type": "string",
          "description": "The billing address. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" "
        },
        "expirationYear": {
          "type": "integer",
          "format": "int32",
          "description": "The card expiration year (4-digit, e.g. 2015)."
        },
        "lastFourDigits": {
          "type": "string",
          "description": "The last four digits of the card number."
        },
        "type": {
          "type": "string",
          "description": "The type of instrument. Note that real orders might have different values than the four values accepted by `createTestOrder`. Acceptable values are: - \"`AMEX`\" - \"`DISCOVER`\" - \"`MASTERCARD`\" - \"`VISA`\" "
        },
        "expirationMonth": {
          "format": "int32",
          "description": "The card expiration month (January = 1, February = 2 etc.).",
          "type": "integer"
        }
      }
    },
    "OrdersInStoreRefundLineItemResponse": {
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersInStoreRefundLineItemResponse\".",
          "type": "string"
        }
      },
      "id": "OrdersInStoreRefundLineItemResponse",
      "type": "object"
    },
    "PosInventoryResponse": {
      "type": "object",
      "properties": {
        "targetCountry": {
          "description": "Required. The CLDR territory code for the item.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#posInventoryResponse\"."
        },
        "price": {
          "description": "Required. The current price of the item.",
          "$ref": "Price"
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "quantity": {
          "format": "int64",
          "type": "string",
          "description": "Required. The available quantity of the item."
        },
        "gtin": {
          "description": "Global Trade Item Number.",
          "type": "string"
        },
        "storeCode": {
          "type": "string",
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business."
        },
        "timestamp": {
          "description": "Required. The inventory timestamp, in ISO 8601 format.",
          "type": "string"
        },
        "itemId": {
          "description": "Required. A unique identifier for the item.",
          "type": "string"
        }
      },
      "id": "PosInventoryResponse"
    },
    "AccountCustomerService": {
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "Customer service phone number."
        },
        "url": {
          "type": "string",
          "description": "Customer service URL."
        },
        "email": {
          "type": "string",
          "description": "Customer service email."
        }
      },
      "type": "object",
      "id": "AccountCustomerService"
    },
    "Price": {
      "properties": {
        "value": {
          "type": "string",
          "description": "The price represented as a number."
        },
        "currency": {
          "type": "string",
          "description": "The currency of the price."
        }
      },
      "id": "Price",
      "type": "object"
    },
    "OrdersReturnLineItemResponse": {
      "id": "OrdersReturnLineItemResponse",
      "type": "object",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersReturnLineItemResponse\"."
        }
      }
    },
    "AccountstatusesCustomBatchResponseEntry": {
      "id": "AccountstatusesCustomBatchResponseEntry",
      "description": "A batch entry encoding a single non-batch accountstatuses response.",
      "properties": {
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        },
        "accountStatus": {
          "$ref": "AccountStatus",
          "description": "The requested account status. Defined if and only if the request was successful."
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "The ID of the request entry this entry responds to."
        }
      },
      "type": "object"
    },
    "AccountstatusesCustomBatchRequestEntry": {
      "description": "A batch entry encoding a single non-batch accountstatuses request.",
      "type": "object",
      "id": "AccountstatusesCustomBatchRequestEntry",
      "properties": {
        "accountId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the (sub-)account whose status to get."
        },
        "destinations": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination."
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32",
          "type": "integer"
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" ",
          "type": "string"
        },
        "merchantId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the managing account."
        }
      }
    },
    "ShippingsettingsCustomBatchResponse": {
      "id": "ShippingsettingsCustomBatchResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsCustomBatchResponse\".",
          "type": "string"
        },
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "ShippingsettingsCustomBatchResponseEntry"
          },
          "type": "array"
        }
      }
    },
    "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption": {
      "id": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption",
      "properties": {
        "reason": {
          "description": "[required] Reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "description": {
          "description": "Optional description of the return reason.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PosInventory": {
      "type": "object",
      "properties": {
        "price": {
          "$ref": "Price",
          "description": "Required. The current price of the item."
        },
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posInventory`\""
        },
        "quantity": {
          "format": "int64",
          "description": "Required. The available quantity of the item.",
          "type": "string"
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.",
          "type": "string"
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number."
        },
        "timestamp": {
          "description": "Required. The inventory timestamp, in ISO 8601 format.",
          "type": "string"
        }
      },
      "description": "The absolute quantity of an item available at the given store.",
      "id": "PosInventory"
    },
    "AccountBusinessInformation": {
      "id": "AccountBusinessInformation",
      "properties": {
        "customerService": {
          "description": "The customer service information of the business.",
          "$ref": "AccountCustomerService"
        },
        "phoneNumber": {
          "type": "string",
          "description": "The phone number of the business."
        },
        "address": {
          "$ref": "AccountAddress",
          "description": "The address of the business."
        }
      },
      "type": "object"
    },
    "InventorySetRequest": {
      "properties": {
        "pickup": {
          "$ref": "InventoryPickup",
          "description": "Store pickup information. Only supported for local inventory. Not setting `pickup` means \"don't update\" while setting it to the empty value (`{}` in JSON) means \"delete\". Otherwise, `pickupMethod` and `pickupSla` must be set together, unless `pickupMethod` is \"not supported\"."
        },
        "customLabel1": {
          "description": "Custom label 1 for custom grouping of items in a Shopping campaign. Only supported for online products.",
          "type": "string"
        },
        "customLabel2": {
          "type": "string",
          "description": "Custom label 2 for custom grouping of items in a Shopping campaign. Only supported for online products."
        },
        "quantity": {
          "format": "uint32",
          "type": "integer",
          "description": "The quantity of the product. Must be equal to or greater than zero. Supported only for local products."
        },
        "salePriceEffectiveDate": {
          "description": "A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided.",
          "type": "string"
        },
        "customLabel3": {
          "description": "Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products.",
          "type": "string"
        },
        "customLabel0": {
          "type": "string",
          "description": "Custom label 0 for custom grouping of items in a Shopping campaign. Only supported for online products."
        },
        "salePrice": {
          "$ref": "Price",
          "description": "The sale price of the product. Mandatory if `sale_price_effective_date` is defined."
        },
        "sellOnGoogleQuantity": {
          "type": "integer",
          "format": "uint32",
          "description": "The quantity of the product that is available for selling on Google. Supported only for online products."
        },
        "availability": {
          "type": "string",
          "description": "The availability of the product. Acceptable values are: - \"`in stock`\" - \"`out of stock`\" - \"`preorder`\" "
        },
        "installment": {
          "$ref": "Installment",
          "description": "Number and amount of installments to pay for an item. Brazil only."
        },
        "customLabel4": {
          "type": "string",
          "description": "Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products."
        },
        "instoreProductLocation": {
          "description": "The instore product location. Supported only for local products.",
          "type": "string"
        },
        "price": {
          "description": "The price of the product.",
          "$ref": "Price"
        },
        "loyaltyPoints": {
          "$ref": "LoyaltyPoints",
          "description": "Loyalty points that users receive after purchasing the item. Japan only."
        }
      },
      "type": "object",
      "id": "InventorySetRequest"
    },
    "Errors": {
      "id": "Errors",
      "type": "object",
      "properties": {
        "errors": {
          "items": {
            "$ref": "Error"
          },
          "description": "A list of errors.",
          "type": "array"
        },
        "message": {
          "type": "string",
          "description": "The message of the first error in `errors`."
        },
        "code": {
          "description": "The HTTP status of the first error in `errors`.",
          "type": "integer",
          "format": "uint32"
        }
      },
      "description": "A list of errors returned by a failed batch entry."
    },
    "OrderMerchantProvidedAnnotation": {
      "id": "OrderMerchantProvidedAnnotation",
      "type": "object",
      "properties": {
        "key": {
          "description": "Key for additional merchant provided (as key-value pairs) annotation about the line item.",
          "type": "string"
        },
        "value": {
          "description": "Value for additional merchant provided (as key-value pairs) annotation about the line item.",
          "type": "string"
        }
      }
    },
    "MinimumOrderValueTableStoreCodeSetWithMov": {
      "description": "A list of store code sets sharing the same minimum order value. At least two sets are required and the last one must be empty, which signifies 'MOV for all other stores'. Each store code can only appear once across all the sets. All prices within a service must have the same currency.",
      "properties": {
        "storeCodes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of unique store codes or empty for the catch all."
        },
        "value": {
          "description": "The minimum order value for the given stores.",
          "$ref": "Price"
        }
      },
      "type": "object",
      "id": "MinimumOrderValueTableStoreCodeSetWithMov"
    },
    "AccounttaxCustomBatchResponse": {
      "id": "AccounttaxCustomBatchResponse",
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "AccounttaxCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests.",
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accounttaxCustomBatchResponse\".",
          "type": "string"
        }
      }
    },
    "InvoiceSummary": {
      "type": "object",
      "id": "InvoiceSummary",
      "properties": {
        "promotionSummaries": {
          "description": "Deprecated.",
          "type": "array",
          "items": {
            "$ref": "Promotion"
          }
        },
        "customerBalance": {
          "$ref": "Amount",
          "description": "Deprecated."
        },
        "productTotal": {
          "$ref": "Amount",
          "description": "[required] Total price for the product."
        },
        "additionalChargeSummaries": {
          "items": {
            "$ref": "InvoiceSummaryAdditionalChargeSummary"
          },
          "description": "Summary of the total amounts of the additional charges.",
          "type": "array"
        },
        "googleBalance": {
          "description": "Deprecated.",
          "$ref": "Amount"
        },
        "merchantBalance": {
          "description": "Deprecated.",
          "$ref": "Amount"
        }
      }
    },
    "AccountIdentifier": {
      "type": "object",
      "properties": {
        "merchantId": {
          "description": "The merchant account ID, set for individual accounts and subaccounts.",
          "type": "string",
          "format": "uint64"
        },
        "aggregatorId": {
          "format": "uint64",
          "description": "The aggregator ID, set for aggregators and subaccounts (in that case, it represents the aggregator of the subaccount).",
          "type": "string"
        }
      },
      "id": "AccountIdentifier"
    },
    "OrdersRefundRequest": {
      "type": "object",
      "properties": {
        "amount": {
          "description": "Deprecated. Please use amountPretax and amountTax instead.",
          "$ref": "Price"
        },
        "amountTax": {
          "$ref": "Price",
          "description": "Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, amountPretax must be set. Calculated automatically if not provided."
        },
        "amountPretax": {
          "description": "The amount that is refunded. Either amount or amountPretax should be filled.",
          "$ref": "Price"
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "reason": {
          "description": "The reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`deliveredLateByCarrier`\" - \"`feeAdjustment`\" - \"`lateShipmentCredit`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`shippingCostAdjustment`\" - \"`taxAdjustment`\" - \"`undeliverableShippingAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        }
      },
      "id": "OrdersRefundRequest"
    },
    "OrdersCancelTestOrderByCustomerResponse": {
      "id": "OrdersCancelTestOrderByCustomerResponse",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCancelTestOrderByCustomerResponse\"."
        }
      }
    },
    "OrdersCustomBatchRequestEntryCancelLineItem": {
      "properties": {
        "reason": {
          "description": "The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" ",
          "type": "string"
        },
        "amount": {
          "$ref": "Price",
          "description": "Deprecated. Please use amountPretax and amountTax instead."
        },
        "amountPretax": {
          "description": "Amount to refund for the cancelation. Optional. If not set, Google will calculate the default based on the price and tax of the items involved. The amount must not be larger than the net amount left on the order.",
          "$ref": "Price"
        },
        "amountTax": {
          "description": "Tax amount that corresponds to cancellation amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided.",
          "$ref": "Price"
        },
        "quantity": {
          "type": "integer",
          "format": "uint32",
          "description": "The quantity to cancel."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to cancel. Either lineItemId or productId is required."
        }
      },
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryCancelLineItem"
    },
    "DatafeedTarget": {
      "properties": {
        "excludedDestinations": {
          "type": "array",
          "description": "The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center).",
          "items": {
            "type": "string"
          }
        },
        "country": {
          "description": "The country where the items in the feed will be included in the search index, represented as a CLDR territory code.",
          "type": "string"
        },
        "language": {
          "type": "string",
          "description": "The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for `targets[].country`."
        },
        "includedDestinations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in `excludedDestinations`. List of supported destinations (if available to the account): - DisplayAds - Shopping - ShoppingActions - SurfacesAcrossGoogle "
        }
      },
      "type": "object",
      "id": "DatafeedTarget"
    },
    "PosDataProviders": {
      "properties": {
        "country": {
          "description": "Country code.",
          "type": "string"
        },
        "posDataProviders": {
          "description": "A list of POS data providers.",
          "items": {
            "$ref": "PosDataProvidersPosDataProvider"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "PosDataProviders"
    },
    "AccountstatusesCustomBatchRequest": {
      "properties": {
        "entries": {
          "items": {
            "$ref": "AccountstatusesCustomBatchRequestEntry"
          },
          "type": "array",
          "description": "The request entries to be processed in the batch."
        }
      },
      "id": "AccountstatusesCustomBatchRequest",
      "type": "object"
    },
    "ProductstatusesListResponse": {
      "id": "ProductstatusesListResponse",
      "type": "object",
      "properties": {
        "resources": {
          "items": {
            "$ref": "ProductStatus"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#productstatusesListResponse\"."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of products statuses."
        }
      }
    },
    "AccounttaxCustomBatchRequestEntry": {
      "type": "object",
      "id": "AccounttaxCustomBatchRequestEntry",
      "description": "A batch entry encoding a single non-batch accounttax request.",
      "properties": {
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" - \"`update`\" "
        },
        "accountId": {
          "type": "string",
          "description": "The ID of the account for which to get/update account tax settings.",
          "format": "uint64"
        },
        "batchId": {
          "format": "uint32",
          "description": "An entry ID, unique within the batch request.",
          "type": "integer"
        },
        "accountTax": {
          "description": "The account tax settings to update. Only defined if the method is `update`.",
          "$ref": "AccountTax"
        },
        "merchantId": {
          "description": "The ID of the managing account.",
          "format": "uint64",
          "type": "string"
        }
      }
    },
    "OrdersAcknowledgeRequest": {
      "id": "OrdersAcknowledgeRequest",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        }
      }
    },
    "OrderCustomerMarketingRightsInfo": {
      "id": "OrderCustomerMarketingRightsInfo",
      "type": "object",
      "properties": {
        "explicitMarketingPreference": {
          "description": "Last known customer selection regarding marketing preferences. In certain cases this selection might not be known, so this field would be empty. If a customer selected `granted` in their most recent order, they can be subscribed to marketing emails. Customers who have chosen `denied` must not be subscribed, or must be unsubscribed if already opted-in. Acceptable values are: - \"`denied`\" - \"`granted`\" ",
          "type": "string"
        },
        "lastUpdatedTimestamp": {
          "type": "string",
          "description": "Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet."
        },
        "marketingEmailAddress": {
          "type": "string",
          "description": "Email address that can be used for marketing purposes. The field may be empty even if `explicitMarketingPreference` is 'granted'. This happens when retrieving an old order from the customer who deleted their account."
        }
      }
    },
    "AccounttaxListResponse": {
      "id": "AccounttaxListResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accounttaxListResponse\".",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "AccountTax"
          }
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of account tax settings.",
          "type": "string"
        }
      }
    },
    "OrdersCustomBatchRequest": {
      "type": "object",
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "type": "array",
          "items": {
            "$ref": "OrdersCustomBatchRequestEntry"
          }
        }
      },
      "id": "OrdersCustomBatchRequest"
    },
    "DatafeedsCustomBatchResponseEntry": {
      "description": "A batch entry encoding a single non-batch datafeeds response.",
      "id": "DatafeedsCustomBatchResponseEntry",
      "properties": {
        "datafeed": {
          "description": "The requested data feed. Defined if and only if the request was successful.",
          "$ref": "Datafeed"
        },
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "The ID of the request entry this entry responds to."
        }
      },
      "type": "object"
    },
    "DeliveryTime": {
      "type": "object",
      "properties": {
        "handlingBusinessDayConfig": {
          "$ref": "BusinessDayConfig",
          "description": "The business days during which orders can be handled. If not provided, Monday to Friday business days will be assumed."
        },
        "maxTransitTimeInDays": {
          "format": "uint32",
          "type": "integer",
          "description": "Maximum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to `minTransitTimeInDays`."
        },
        "transitBusinessDayConfig": {
          "$ref": "BusinessDayConfig",
          "description": "The business days during which orders can be in-transit. If not provided, Monday to Friday business days will be assumed."
        },
        "transitTimeTable": {
          "$ref": "TransitTable",
          "description": "Transit time table, number of business days spent in transit based on row and column dimensions. Either `{min,max}TransitTimeInDays` or `transitTimeTable` can be set, but not both."
        },
        "minTransitTimeInDays": {
          "type": "integer",
          "description": "Minimum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Either `{min,max}TransitTimeInDays` or `transitTimeTable` must be set, but not both.",
          "format": "uint32"
        },
        "maxHandlingTimeInDays": {
          "format": "uint32",
          "type": "integer",
          "description": "Maximum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. Must be greater than or equal to `minHandlingTimeInDays`."
        },
        "holidayCutoffs": {
          "type": "array",
          "description": "Holiday cutoff definitions. If configured, they specify order cutoff times for holiday-specific shipping.",
          "items": {
            "$ref": "HolidayCutoff"
          }
        },
        "minHandlingTimeInDays": {
          "description": "Minimum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped.",
          "format": "uint32",
          "type": "integer"
        },
        "warehouseBasedDeliveryTimes": {
          "description": "Indicates that the delivery time should be calculated per warehouse (shipping origin location) based on the settings of the selected carrier. When set, no other transit time related field in DeliveryTime should be set.",
          "type": "array",
          "items": {
            "$ref": "WarehouseBasedDeliveryTime"
          }
        },
        "cutoffTime": {
          "description": "Business days cutoff time definition. If not configured the cutoff time will be defaulted to 8AM PST.",
          "$ref": "CutoffTime"
        }
      },
      "id": "DeliveryTime"
    },
    "OrdersCustomBatchRequestEntryUpdateShipment": {
      "id": "OrdersCustomBatchRequestEntryUpdateShipment",
      "properties": {
        "deliveryDate": {
          "type": "string",
          "description": "Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if `status` is `delivered`."
        },
        "carrier": {
          "type": "string",
          "description": "The carrier handling the shipment. Not updated if missing. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values."
        },
        "trackingId": {
          "description": "The tracking ID for the shipment. Not updated if missing.",
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "New status for the shipment. Not updated if missing. Acceptable values are: - \"`delivered`\" - \"`undeliverable`\" - \"`readyForPickup`\" "
        },
        "shipmentId": {
          "type": "string",
          "description": "The ID of the shipment."
        }
      },
      "type": "object"
    },
    "WarehouseBasedDeliveryTime": {
      "type": "object",
      "properties": {
        "carrier": {
          "description": "Required. Carrier, such as `\"UPS\"` or `\"Fedex\"`. The list of supported carriers can be retrieved via the `listSupportedCarriers` method.",
          "type": "string"
        },
        "originAdministrativeArea": {
          "type": "string",
          "description": "Required. Shipping origin's state."
        },
        "originPostalCode": {
          "description": "Required. Shipping origin.",
          "type": "string"
        },
        "originCity": {
          "type": "string",
          "description": "Required. Shipping origin's city."
        },
        "originStreetAddress": {
          "type": "string",
          "description": "Shipping origin's street address"
        },
        "originCountry": {
          "description": "Required. Shipping origin's country represented as a [CLDR territory code](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml).",
          "type": "string"
        },
        "carrierService": {
          "description": "Required. Carrier service, such as `\"ground\"` or `\"2 days\"`. The list of supported services for a carrier can be retrieved via the `listSupportedCarriers` method. The name of the service must be in the eddSupportedServices list.",
          "type": "string"
        }
      },
      "id": "WarehouseBasedDeliveryTime"
    },
    "TestOrderCustomer": {
      "properties": {
        "explicitMarketingPreference": {
          "type": "boolean",
          "description": "Deprecated. Please use marketingRightsInfo instead."
        },
        "email": {
          "description": "Required. Email address of the customer. Acceptable values are: - \"`pog.dwight.schrute@gmail.com`\" - \"`pog.jim.halpert@gmail.com`\" - \"`penpog.pam.beesly@gmail.comding`\" ",
          "type": "string"
        },
        "marketingRightsInfo": {
          "$ref": "TestOrderCustomerMarketingRightsInfo",
          "description": "Customer's marketing preferences."
        },
        "fullName": {
          "description": "Full name of the customer.",
          "type": "string"
        }
      },
      "id": "TestOrderCustomer",
      "type": "object"
    },
    "TransitTableTransitTimeRowTransitTimeValue": {
      "type": "object",
      "properties": {
        "maxTransitTimeInDays": {
          "description": "Must be greater than or equal to `minTransitTimeInDays`.",
          "format": "uint32",
          "type": "integer"
        },
        "minTransitTimeInDays": {
          "description": "Transit time range (min-max) in business days. 0 means same day delivery, 1 means next day delivery.",
          "type": "integer",
          "format": "uint32"
        }
      },
      "id": "TransitTableTransitTimeRowTransitTimeValue"
    },
    "OrdersGetTestOrderTemplateResponse": {
      "id": "OrdersGetTestOrderTemplateResponse",
      "type": "object",
      "properties": {
        "template": {
          "$ref": "TestOrder",
          "description": "The requested test order template."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersGetTestOrderTemplateResponse\".",
          "type": "string"
        }
      }
    },
    "InventoryCustomBatchResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#inventoryCustomBatchResponse\"."
        },
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "InventoryCustomBatchResponseEntry"
          },
          "type": "array"
        }
      },
      "id": "InventoryCustomBatchResponse"
    },
    "DatafeedFetchSchedule": {
      "id": "DatafeedFetchSchedule",
      "type": "object",
      "properties": {
        "hour": {
          "type": "integer",
          "format": "uint32",
          "description": "The hour of the day the feed file should be fetched (0-23)."
        },
        "minuteOfHour": {
          "type": "integer",
          "description": "The minute of the hour the feed file should be fetched (0-59). Read-only.",
          "format": "uint32"
        },
        "fetchUrl": {
          "description": "The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols.",
          "type": "string"
        },
        "timeZone": {
          "type": "string",
          "description": "Time zone used for schedule. UTC by default. E.g., \"America/Los_Angeles\"."
        },
        "dayOfMonth": {
          "format": "uint32",
          "type": "integer",
          "description": "The day of the month the feed file should be fetched (1-31)."
        },
        "paused": {
          "description": "Whether the scheduled fetch is paused or not.",
          "type": "boolean"
        },
        "username": {
          "type": "string",
          "description": "An optional user name for fetch_url."
        },
        "weekday": {
          "type": "string",
          "description": "The day of the week the feed file should be fetched. Acceptable values are: - \"`monday`\" - \"`tuesday`\" - \"`wednesday`\" - \"`thursday`\" - \"`friday`\" - \"`saturday`\" - \"`sunday`\" "
        },
        "password": {
          "description": "An optional password for fetch_url.",
          "type": "string"
        }
      },
      "description": "The required fields vary based on the frequency of fetching. For a monthly fetch schedule, day_of_month and hour are required. For a weekly fetch schedule, weekday and hour are required. For a daily fetch schedule, only hour is required."
    },
    "OrdersRefundResponse": {
      "id": "OrdersRefundResponse",
      "type": "object",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersRefundResponse\".",
          "type": "string"
        }
      }
    },
    "LiaAboutPageSettings": {
      "id": "LiaAboutPageSettings",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status of the verification process for the About page. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" ",
          "type": "string"
        },
        "url": {
          "description": "The URL for the About page.",
          "type": "string"
        }
      }
    },
    "AccountAdwordsLink": {
      "id": "AccountAdwordsLink",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the link between this Merchant Center account and the AdWords account. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in Google AdWords or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending. Acceptable values are: - \"`active`\" - \"`pending`\" "
        },
        "adwordsId": {
          "type": "string",
          "format": "uint64",
          "description": "Customer ID of the AdWords account."
        }
      },
      "type": "object"
    },
    "OrdersCustomBatchRequestEntryInStoreRefundLineItem": {
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "uint32",
          "description": "The quantity to return and refund."
        },
        "amountTax": {
          "description": "Tax amount that correspond to refund amount in amountPretax. Required.",
          "$ref": "Price"
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "amountPretax": {
          "$ref": "Price",
          "description": "The amount that is refunded. Required."
        }
      },
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryInStoreRefundLineItem"
    },
    "ProductstatusesCustomBatchRequest": {
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "ProductstatusesCustomBatchRequestEntry"
          },
          "type": "array",
          "description": "The request entries to be processed in the batch."
        }
      },
      "id": "ProductstatusesCustomBatchRequest"
    },
    "DatafeedsListResponse": {
      "properties": {
        "resources": {
          "items": {
            "$ref": "Datafeed"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedsListResponse\"."
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of datafeeds.",
          "type": "string"
        }
      },
      "id": "DatafeedsListResponse",
      "type": "object"
    },
    "ProductDestination": {
      "type": "object",
      "properties": {
        "destinationName": {
          "description": "The name of the destination.",
          "type": "string"
        },
        "intention": {
          "type": "string",
          "description": "Whether the destination is required, excluded or should be validated. Acceptable values are: - \"`default`\" - \"`excluded`\" - \"`optional`\" - \"`required`\" "
        }
      },
      "id": "ProductDestination"
    },
    "OrderinvoicesCreateRefundInvoiceRequest": {
      "id": "OrderinvoicesCreateRefundInvoiceRequest",
      "properties": {
        "shipmentInvoices": {
          "type": "array",
          "description": "Invoice details for different shipment groups.",
          "items": {
            "$ref": "ShipmentInvoice"
          }
        },
        "operationId": {
          "description": "[required] The ID of the operation, unique across all operations for a given order.",
          "type": "string"
        },
        "invoiceId": {
          "description": "[required] The ID of the invoice.",
          "type": "string"
        },
        "returnOption": {
          "$ref": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption",
          "description": "Option to create an invoice for a refund and mark all items within the invoice as returned. Exactly one of `refundOnlyOption` or `returnOption` must be provided."
        },
        "refundOnlyOption": {
          "description": "Option to create a refund-only invoice. Exactly one of `refundOnlyOption` or `returnOption` must be provided.",
          "$ref": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption"
        }
      },
      "type": "object"
    },
    "OrdersCustomBatchRequestEntryReturnRefundLineItem": {
      "properties": {
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "productId": {
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to return. Either lineItemId or productId is required."
        },
        "amountPretax": {
          "description": "The amount that is refunded. If omitted, refundless return is assumed (same as calling returnLineItem method).",
          "$ref": "Price"
        },
        "amountTax": {
          "$ref": "Price",
          "description": "Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided."
        },
        "quantity": {
          "description": "The quantity to return and refund.",
          "format": "uint32",
          "type": "integer"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        }
      },
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryReturnRefundLineItem"
    },
    "LiasettingsRequestInventoryVerificationResponse": {
      "type": "object",
      "id": "LiasettingsRequestInventoryVerificationResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsRequestInventoryVerificationResponse\".",
          "type": "string"
        }
      }
    },
    "AccountYouTubeChannelLink": {
      "properties": {
        "channelId": {
          "type": "string",
          "description": "Channel ID."
        },
        "status": {
          "description": "Status of the link between this Merchant Center account and the YouTube channel. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in YT Creator Studio or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending.",
          "type": "string"
        }
      },
      "id": "AccountYouTubeChannelLink",
      "type": "object"
    },
    "OrdersUpdateShipmentResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersUpdateShipmentResponse\".",
          "type": "string"
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      },
      "id": "OrdersUpdateShipmentResponse",
      "type": "object"
    },
    "Error": {
      "id": "Error",
      "description": "An error returned by the API.",
      "properties": {
        "domain": {
          "type": "string",
          "description": "The domain of the error."
        },
        "message": {
          "type": "string",
          "description": "A description of the error."
        },
        "reason": {
          "description": "The error code.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountsCustomBatchRequestEntryLinkRequest": {
      "type": "object",
      "id": "AccountsCustomBatchRequestEntryLinkRequest",
      "properties": {
        "linkedAccountId": {
          "type": "string",
          "description": "The ID of the linked account."
        },
        "action": {
          "type": "string",
          "description": "Action to perform for this link. The `\"request\"` action is only available to select merchants. Acceptable values are: - \"`approve`\" - \"`remove`\" - \"`request`\" "
        },
        "linkType": {
          "description": "Type of the link between the two accounts. Acceptable values are: - \"`channelPartner`\" - \"`eCommercePlatform`\" ",
          "type": "string"
        }
      }
    },
    "ShipmentInvoice": {
      "id": "ShipmentInvoice",
      "type": "object",
      "properties": {
        "lineItemInvoices": {
          "description": "[required] Invoice details per line item.",
          "items": {
            "$ref": "ShipmentInvoiceLineItemInvoice"
          },
          "type": "array"
        },
        "shipmentGroupId": {
          "type": "string",
          "description": "[required] ID of the shipment group. It is assigned by the merchant in the `shipLineItems` method and is used to group multiple line items that have the same kind of shipping charges."
        },
        "invoiceSummary": {
          "$ref": "InvoiceSummary",
          "description": "[required] Invoice summary."
        }
      }
    },
    "ProductsCustomBatchRequestEntry": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "The ID of the product to get or delete. Only defined if the method is `get` or `delete`.",
          "type": "string"
        },
        "product": {
          "description": "The product to insert. Only required if the method is `insert`.",
          "$ref": "Product"
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "An entry ID, unique within the batch request."
        },
        "merchantId": {
          "format": "uint64",
          "description": "The ID of the managing account.",
          "type": "string"
        },
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`get`\" - \"`insert`\" "
        }
      },
      "description": "A batch entry encoding a single non-batch products request.",
      "id": "ProductsCustomBatchRequestEntry"
    },
    "TestOrder": {
      "type": "object",
      "properties": {
        "shippingOption": {
          "description": "Required. The requested shipping option. Acceptable values are: - \"`economy`\" - \"`expedited`\" - \"`oneDay`\" - \"`sameDay`\" - \"`standard`\" - \"`twoDay`\" ",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#testOrder`\""
        },
        "paymentMethod": {
          "$ref": "TestOrderPaymentMethod",
          "description": "The details of the payment method."
        },
        "customer": {
          "description": "Required. The details of the customer who placed the order.",
          "$ref": "TestOrderCustomer"
        },
        "notificationMode": {
          "type": "string",
          "description": "Restricted. Do not use."
        },
        "lineItems": {
          "description": "Required. Line items that are ordered. At least one line item must be provided.",
          "type": "array",
          "items": {
            "$ref": "TestOrderLineItem"
          }
        },
        "predefinedPickupDetails": {
          "type": "string",
          "description": "Identifier of one of the predefined pickup details. Required for orders containing line items with shipping type `pickup`. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" "
        },
        "shippingCostTax": {
          "description": "Deprecated. Ignored if provided.",
          "$ref": "Price"
        },
        "enableOrderinvoices": {
          "type": "boolean",
          "description": "Whether the orderinvoices service should support this order."
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "OrderLegacyPromotion"
          },
          "description": "Deprecated. Ignored if provided."
        },
        "shippingCost": {
          "description": "Required. The price of shipping for all items. Shipping tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied. Note that shipping is not taxed in certain states.",
          "$ref": "Price"
        },
        "predefinedDeliveryAddress": {
          "description": "Required. Identifier of one of the predefined delivery addresses for the delivery. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" ",
          "type": "string"
        }
      },
      "id": "TestOrder"
    },
    "OrderReturn": {
      "properties": {
        "creationDate": {
          "description": "Date on which the item has been created, in ISO 8601 format.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "actor": {
          "description": "The actor that created the refund. Acceptable values are: - \"`customer`\" - \"`googleBot`\" - \"`googleCustomerService`\" - \"`googlePayments`\" - \"`googleSabre`\" - \"`merchant`\" ",
          "type": "string"
        },
        "quantity": {
          "format": "uint32",
          "type": "integer",
          "description": "Quantity that is returned."
        }
      },
      "type": "object",
      "id": "OrderReturn"
    },
    "Installment": {
      "type": "object",
      "id": "Installment",
      "properties": {
        "amount": {
          "description": "The amount the buyer has to pay per month.",
          "$ref": "Price"
        },
        "months": {
          "description": "The number of installments the buyer has to pay.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "OrdersCustomBatchRequestEntryReturnLineItem": {
      "properties": {
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "productId": {
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "description": "The quantity to return.",
          "format": "uint32"
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to return. Either lineItemId or productId is required."
        },
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        }
      },
      "id": "OrdersCustomBatchRequestEntryReturnLineItem",
      "type": "object"
    },
    "PickupServicesPickupService": {
      "type": "object",
      "properties": {
        "carrierName": {
          "type": "string",
          "description": "The name of the carrier (e.g., `\"UPS\"`). Always present."
        },
        "country": {
          "description": "The CLDR country code of the carrier (e.g., \"US\"). Always present.",
          "type": "string"
        },
        "serviceName": {
          "description": "The name of the pickup service (e.g., `\"Access point\"`). Always present.",
          "type": "string"
        }
      },
      "id": "PickupServicesPickupService"
    },
    "Table": {
      "properties": {
        "rows": {
          "description": "The list of rows that constitute the table. Must have the same length as `rowHeaders`. Required.",
          "type": "array",
          "items": {
            "$ref": "Row"
          }
        },
        "columnHeaders": {
          "description": "Headers of the table's columns. Optional: if not set then the table has only one dimension.",
          "$ref": "Headers"
        },
        "rowHeaders": {
          "$ref": "Headers",
          "description": "Headers of the table's rows. Required."
        },
        "name": {
          "type": "string",
          "description": "Name of the table. Required for subtables, ignored for the main table."
        }
      },
      "id": "Table",
      "type": "object"
    },
    "Datafeed": {
      "properties": {
        "contentType": {
          "type": "string",
          "description": "Required. The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported. Acceptable values are: - \"`local products`\" - \"`product inventory`\" - \"`products`\" "
        },
        "fetchSchedule": {
          "description": "Fetch schedule for the feed file.",
          "$ref": "DatafeedFetchSchedule"
        },
        "intendedDestinations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "[DEPRECATED] Please use targets[].includedDestinations instead. The list of intended destinations (corresponds to checked check boxes in Merchant Center)."
        },
        "targetCountry": {
          "description": "[DEPRECATED] Please use targets[].country instead. The country where the items in the feed will be included in the search index, represented as a CLDR territory code.",
          "type": "string"
        },
        "targets": {
          "items": {
            "$ref": "DatafeedTarget"
          },
          "description": "The targets this feed should apply to (country, language, destinations).",
          "type": "array"
        },
        "name": {
          "description": "Required for insert. A descriptive name of the data feed.",
          "type": "string"
        },
        "contentLanguage": {
          "description": "[DEPRECATED] Please use targets[].language instead. The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for `targetCountry`.",
          "type": "string"
        },
        "attributeLanguage": {
          "description": "The two-letter ISO 639-1 language in which the attributes are defined in the data feed.",
          "type": "string"
        },
        "format": {
          "description": "Format of the feed file.",
          "$ref": "DatafeedFormat"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "description": "Required for update. The ID of the data feed."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#datafeed`\""
        },
        "fileName": {
          "description": "Required. The filename of the feed. All feeds must have a unique file name.",
          "type": "string"
        }
      },
      "description": "Datafeed configuration data.",
      "type": "object",
      "id": "Datafeed"
    },
    "RateGroup": {
      "type": "object",
      "properties": {
        "singleValue": {
          "$ref": "Value",
          "description": "The value of the rate group (e.g. flat rate $10). Can only be set if `mainTable` and `subtables` are not set."
        },
        "subtables": {
          "type": "array",
          "description": "A list of subtables referred to by `mainTable`. Can only be set if `mainTable` is set.",
          "items": {
            "$ref": "Table"
          }
        },
        "name": {
          "type": "string",
          "description": "Name of the rate group. Optional. If set has to be unique within shipping service."
        },
        "mainTable": {
          "$ref": "Table",
          "description": "A table defining the rate group, when `singleValue` is not expressive enough. Can only be set if `singleValue` is not set."
        },
        "carrierRates": {
          "description": "A list of carrier rates that can be referred to by `mainTable` or `singleValue`.",
          "items": {
            "$ref": "CarrierRate"
          },
          "type": "array"
        },
        "applicableShippingLabels": {
          "description": "A list of shipping labels defining the products to which this rate group applies to. This is a disjunction: only one of the labels has to match for the rate group to apply. May only be empty for the last rate group of a service. Required.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "RateGroup"
    },
    "OrdersCancelLineItemResponse": {
      "type": "object",
      "id": "OrdersCancelLineItemResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCancelLineItemResponse\".",
          "type": "string"
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        }
      }
    },
    "ProductUnitPricingBaseMeasure": {
      "id": "ProductUnitPricingBaseMeasure",
      "properties": {
        "value": {
          "description": "The denominator of the unit price.",
          "format": "int64",
          "type": "string"
        },
        "unit": {
          "description": "The unit of the denominator.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ShippingsettingsGetSupportedPickupServicesResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsGetSupportedPickupServicesResponse\"."
        },
        "pickupServices": {
          "items": {
            "$ref": "PickupServicesPickupService"
          },
          "description": "A list of supported pickup services. May be empty.",
          "type": "array"
        }
      },
      "id": "ShippingsettingsGetSupportedPickupServicesResponse",
      "type": "object"
    },
    "AccountstatusesCustomBatchResponse": {
      "id": "AccountstatusesCustomBatchResponse",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountstatusesCustomBatchResponse\"."
        },
        "entries": {
          "items": {
            "$ref": "AccountstatusesCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests.",
          "type": "array"
        }
      }
    },
    "LiaCountrySettings": {
      "id": "LiaCountrySettings",
      "properties": {
        "inventory": {
          "description": "LIA inventory verification settings.",
          "$ref": "LiaInventorySettings"
        },
        "onDisplayToOrder": {
          "$ref": "LiaOnDisplayToOrderSettings",
          "description": "LIA \"On Display To Order\" settings."
        },
        "about": {
          "$ref": "LiaAboutPageSettings",
          "description": "The settings for the About page."
        },
        "storePickupActive": {
          "description": "The status of the \"Store pickup\" feature.",
          "type": "boolean"
        },
        "country": {
          "type": "string",
          "description": "Required. CLDR country code (e.g. \"US\")."
        },
        "posDataProvider": {
          "$ref": "LiaPosDataProvider",
          "description": "The POS data provider linked with this country."
        },
        "hostedLocalStorefrontActive": {
          "description": "The status of the \"Merchant hosted local storefront\" feature.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "LiasettingsListResponse": {
      "id": "LiasettingsListResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of LIA settings."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsListResponse\"."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "LiaSettings"
          }
        }
      }
    },
    "PosSale": {
      "properties": {
        "targetCountry": {
          "description": "Required. The CLDR territory code for the item.",
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "description": "Required. The relative change of the available quantity. Negative for items returned."
        },
        "storeCode": {
          "type": "string",
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business."
        },
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        },
        "saleId": {
          "type": "string",
          "description": "A unique ID to group items from the same sale event."
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posSale`\"",
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        },
        "price": {
          "$ref": "Price",
          "description": "Required. The price of the item."
        }
      },
      "id": "PosSale",
      "description": "The change of the available quantity of an item at the given store.",
      "type": "object"
    },
    "CarrierRate": {
      "type": "object",
      "id": "CarrierRate",
      "properties": {
        "carrierName": {
          "description": "Carrier service, such as `\"UPS\"` or `\"Fedex\"`. The list of supported carriers can be retrieved via the `getSupportedCarriers` method. Required.",
          "type": "string"
        },
        "originPostalCode": {
          "description": "Shipping origin for this carrier rate. Required.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of the carrier rate. Must be unique per rate group. Required."
        },
        "carrierService": {
          "description": "Carrier service, such as `\"ground\"` or `\"2 days\"`. The list of supported services for a carrier can be retrieved via the `getSupportedCarriers` method. Required.",
          "type": "string"
        },
        "percentageAdjustment": {
          "type": "string",
          "description": "Multiplicative shipping rate modifier as a number in decimal notation. Can be negative. For example `\"5.4\"` increases the rate by 5.4%, `\"-3\"` decreases the rate by 3%. Optional."
        },
        "flatAdjustment": {
          "description": "Additive shipping rate modifier. Can be negative. For example `{ \"value\": \"1\", \"currency\" : \"USD\" }` adds $1 to the rate, `{ \"value\": \"-3\", \"currency\" : \"USD\" }` removes $3 from the rate. Optional.",
          "$ref": "Price"
        }
      }
    },
    "LiaSettings": {
      "id": "LiaSettings",
      "type": "object",
      "description": "Local Inventory ads (LIA) settings. All methods except listposdataproviders require the admin role.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liaSettings`\""
        },
        "countrySettings": {
          "type": "array",
          "items": {
            "$ref": "LiaCountrySettings"
          },
          "description": "The LIA settings for each country."
        },
        "accountId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the account to which these LIA settings belong. Ignored upon update, always present in get request responses."
        }
      }
    },
    "Weight": {
      "id": "Weight",
      "type": "object",
      "properties": {
        "value": {
          "description": "Required. The weight represented as a number. The weight can have a maximum precision of four decimal places.",
          "type": "string"
        },
        "unit": {
          "description": "Required. The weight unit. Acceptable values are: - \"`kg`\" - \"`lb`\" ",
          "type": "string"
        }
      }
    },
    "AccountStatusItemLevelIssue": {
      "id": "AccountStatusItemLevelIssue",
      "type": "object",
      "properties": {
        "attributeName": {
          "description": "The attribute's name, if the issue is caused by a single attribute.",
          "type": "string"
        },
        "description": {
          "description": "A short issue description in English.",
          "type": "string"
        },
        "servability": {
          "description": "How this issue affects serving of the offer.",
          "type": "string"
        },
        "numItems": {
          "type": "string",
          "format": "int64",
          "description": "Number of items with this issue."
        },
        "documentation": {
          "type": "string",
          "description": "The URL of a web page to help with resolving this issue."
        },
        "resolution": {
          "type": "string",
          "description": "Whether the issue can be resolved by the merchant."
        },
        "detail": {
          "description": "A detailed issue description in English.",
          "type": "string"
        },
        "code": {
          "description": "The error code of the issue.",
          "type": "string"
        }
      }
    },
    "MinimumOrderValueTable": {
      "type": "object",
      "properties": {
        "storeCodeSetWithMovs": {
          "items": {
            "$ref": "MinimumOrderValueTableStoreCodeSetWithMov"
          },
          "type": "array"
        }
      },
      "id": "MinimumOrderValueTable"
    },
    "OrderreportsListTransactionsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of transactions.",
          "type": "string"
        },
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "OrderReportTransaction"
          },
          "description": "The list of transactions."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderreportsListTransactionsResponse\"."
        }
      },
      "id": "OrderreportsListTransactionsResponse",
      "type": "object"
    },
    "LiasettingsCustomBatchRequest": {
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "LiasettingsCustomBatchRequestEntry"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "LiasettingsCustomBatchRequest"
    },
    "DatafeedstatusesCustomBatchRequest": {
      "type": "object",
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "DatafeedstatusesCustomBatchRequestEntry"
          },
          "type": "array"
        }
      },
      "id": "DatafeedstatusesCustomBatchRequest"
    },
    "LiasettingsListPosDataProvidersResponse": {
      "properties": {
        "posDataProviders": {
          "description": "The list of POS data providers for each eligible country",
          "items": {
            "$ref": "PosDataProviders"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsListPosDataProvidersResponse\"."
        }
      },
      "type": "object",
      "id": "LiasettingsListPosDataProvidersResponse"
    },
    "OrderDeliveryDetails": {
      "type": "object",
      "id": "OrderDeliveryDetails",
      "properties": {
        "address": {
          "$ref": "OrderAddress",
          "description": "The delivery address"
        },
        "phoneNumber": {
          "type": "string",
          "description": "The phone number of the person receiving the delivery."
        }
      }
    },
    "AccountStatusStatistics": {
      "id": "AccountStatusStatistics",
      "type": "object",
      "properties": {
        "active": {
          "type": "string",
          "description": "Number of active offers.",
          "format": "int64"
        },
        "expiring": {
          "description": "Number of expiring offers.",
          "type": "string",
          "format": "int64"
        },
        "disapproved": {
          "type": "string",
          "format": "int64",
          "description": "Number of disapproved offers."
        },
        "pending": {
          "format": "int64",
          "description": "Number of pending offers.",
          "type": "string"
        }
      }
    },
    "DatafeedstatusesCustomBatchResponse": {
      "type": "object",
      "id": "DatafeedstatusesCustomBatchResponse",
      "properties": {
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "type": "array",
          "items": {
            "$ref": "DatafeedstatusesCustomBatchResponseEntry"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedstatusesCustomBatchResponse\".",
          "type": "string"
        }
      }
    },
    "ShippingsettingsCustomBatchRequestEntry": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" - \"`update`\" "
        },
        "shippingSettings": {
          "description": "The account shipping settings to update. Only defined if the method is `update`.",
          "$ref": "ShippingSettings"
        },
        "merchantId": {
          "format": "uint64",
          "description": "The ID of the managing account.",
          "type": "string"
        },
        "accountId": {
          "description": "The ID of the account for which to get/update account shipping settings.",
          "format": "uint64",
          "type": "string"
        },
        "batchId": {
          "type": "integer",
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32"
        }
      },
      "id": "ShippingsettingsCustomBatchRequestEntry",
      "description": "A batch entry encoding a single non-batch shippingsettings request."
    },
    "OrderShipmentLineItemShipment": {
      "properties": {
        "productId": {
          "type": "string",
          "description": "The ID of the product to ship. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "quantity": {
          "type": "integer",
          "format": "uint32",
          "description": "The quantity that is shipped."
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item that is shipped. This value is assigned by Google when an order is created. Either lineItemId or productId is required."
        }
      },
      "type": "object",
      "id": "OrderShipmentLineItemShipment"
    },
    "PostalCodeGroup": {
      "properties": {
        "postalCodeRanges": {
          "items": {
            "$ref": "PostalCodeRange"
          },
          "description": "A range of postal codes. Required.",
          "type": "array"
        },
        "country": {
          "type": "string",
          "description": "The CLDR territory code of the country the postal code group applies to. Required."
        },
        "name": {
          "description": "The name of the postal code group, referred to in headers. Required.",
          "type": "string"
        }
      },
      "id": "PostalCodeGroup",
      "type": "object"
    },
    "ProductUnitPricingMeasure": {
      "properties": {
        "unit": {
          "description": "The unit of the measure.",
          "type": "string"
        },
        "value": {
          "type": "number",
          "description": "The measure of an item.",
          "format": "double"
        }
      },
      "id": "ProductUnitPricingMeasure",
      "type": "object"
    },
    "UnitInvoiceTaxLine": {
      "properties": {
        "taxName": {
          "description": "Optional name of the tax type. This should only be provided if `taxType` is `otherFeeTax`.",
          "type": "string"
        },
        "taxAmount": {
          "$ref": "Price",
          "description": "[required] Tax amount for the tax type."
        },
        "taxType": {
          "description": "[required] Type of the tax. Acceptable values are: - \"`otherFee`\" - \"`otherFeeTax`\" - \"`sales`\" ",
          "type": "string"
        }
      },
      "id": "UnitInvoiceTaxLine",
      "type": "object"
    },
    "PosInventoryRequest": {
      "id": "PosInventoryRequest",
      "properties": {
        "price": {
          "$ref": "Price",
          "description": "Required. The current price of the item."
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        },
        "itemId": {
          "description": "Required. A unique identifier for the item.",
          "type": "string"
        },
        "storeCode": {
          "type": "string",
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business."
        },
        "quantity": {
          "description": "Required. The available quantity of the item.",
          "type": "string",
          "format": "int64"
        },
        "gtin": {
          "description": "Global Trade Item Number.",
          "type": "string"
        },
        "targetCountry": {
          "description": "Required. The CLDR territory code for the item.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersCreateTestReturnRequest": {
      "id": "OrdersCreateTestReturnRequest",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "OrdersCustomBatchRequestEntryCreateTestReturnReturnItem"
          },
          "description": "Returned items."
        }
      }
    },
    "OrderreportsListDisbursementsResponse": {
      "id": "OrderreportsListDisbursementsResponse",
      "type": "object",
      "properties": {
        "disbursements": {
          "type": "array",
          "description": "The list of disbursements.",
          "items": {
            "$ref": "OrderReportDisbursement"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of disbursements."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderreportsListDisbursementsResponse\".",
          "type": "string"
        }
      }
    },
    "OrdersReturnLineItemRequest": {
      "id": "OrdersReturnLineItemRequest",
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "quantity": {
          "type": "integer",
          "description": "The quantity to return.",
          "format": "uint32"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to return. Either lineItemId or productId is required."
        }
      }
    },
    "PosDataProvidersPosDataProvider": {
      "id": "PosDataProvidersPosDataProvider",
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string",
          "description": "The full name of this POS data Provider."
        },
        "providerId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the account."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of Pos data Provider."
        }
      }
    },
    "OrdersCreateTestOrderRequest": {
      "type": "object",
      "properties": {
        "country": {
          "description": "The CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created via `template_name`, or the addresses of orders created via `test_order`. Acceptable values are: - \"`US`\" - \"`FR`\" Defaults to `US`.",
          "type": "string"
        },
        "testOrder": {
          "description": "The test order to create.",
          "$ref": "TestOrder"
        },
        "templateName": {
          "description": "The test order template to use. Specify as an alternative to `testOrder` as a shortcut for retrieving a template and then creating an order using that template. Acceptable values are: - \"`template1`\" - \"`template1a`\" - \"`template1b`\" - \"`template2`\" - \"`template3`\" ",
          "type": "string"
        }
      },
      "id": "OrdersCreateTestOrderRequest"
    },
    "PosSaleRequest": {
      "id": "PosSaleRequest",
      "properties": {
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        },
        "price": {
          "$ref": "Price",
          "description": "Required. The price of the item."
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        },
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        },
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        },
        "quantity": {
          "description": "Required. The relative change of the available quantity. Negative for items returned.",
          "type": "string",
          "format": "int64"
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.",
          "type": "string"
        },
        "saleId": {
          "description": "A unique ID to group items from the same sale event.",
          "type": "string"
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number."
        }
      },
      "type": "object"
    },
    "OrdersSetLineItemMetadataRequest": {
      "id": "OrdersSetLineItemMetadataRequest",
      "properties": {
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "OrderMerchantProvidedAnnotation"
          }
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to set metadata. Either lineItemId or productId is required."
        },
        "productId": {
          "description": "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TestOrderLineItem": {
      "type": "object",
      "properties": {
        "unitTax": {
          "$ref": "Price",
          "description": "Deprecated. Ignored if provided."
        },
        "product": {
          "description": "Required. Product data from the time of the order placement.",
          "$ref": "TestOrderLineItemProduct"
        },
        "returnInfo": {
          "description": "Required. Details of the return policy for the line item.",
          "$ref": "OrderLineItemReturnInfo"
        },
        "shippingDetails": {
          "description": "Required. Details of the requested shipping for the line item.",
          "$ref": "OrderLineItemShippingDetails"
        },
        "quantityOrdered": {
          "format": "uint32",
          "type": "integer",
          "description": "Required. Number of items ordered."
        }
      },
      "id": "TestOrderLineItem"
    },
    "LiasettingsSetInventoryVerificationContactResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsSetInventoryVerificationContactResponse\"."
        }
      },
      "id": "LiasettingsSetInventoryVerificationContactResponse",
      "type": "object"
    },
    "OrderLineItemReturnInfo": {
      "id": "OrderLineItemReturnInfo",
      "properties": {
        "daysToReturn": {
          "description": "Required. How many days later the item can be returned.",
          "format": "int32",
          "type": "integer"
        },
        "policyUrl": {
          "description": "Required. URL of the item return policy.",
          "type": "string"
        },
        "isReturnable": {
          "type": "boolean",
          "description": "Required. Whether the item is returnable."
        }
      },
      "type": "object"
    },
    "AccountStatus": {
      "id": "AccountStatus",
      "description": "The status of an account, i.e., information about its products, which is computed offline and not returned immediately at insertion time.",
      "type": "object",
      "properties": {
        "dataQualityIssues": {
          "items": {
            "$ref": "AccountStatusDataQualityIssue"
          },
          "description": "DEPRECATED - never populated.",
          "type": "array"
        },
        "accountLevelIssues": {
          "description": "A list of account level issues.",
          "type": "array",
          "items": {
            "$ref": "AccountStatusAccountLevelIssue"
          }
        },
        "products": {
          "description": "List of product-related data by channel, destination, and country. Data in this field may be delayed by up to 30 minutes.",
          "type": "array",
          "items": {
            "$ref": "AccountStatusProducts"
          }
        },
        "websiteClaimed": {
          "type": "boolean",
          "description": "Whether the account's website is claimed or not."
        },
        "accountId": {
          "description": "The ID of the account for which the status is reported.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountStatus`\"",
          "type": "string"
        }
      }
    },
    "OrdersCustomBatchRequestEntryCancel": {
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" "
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        }
      },
      "id": "OrdersCustomBatchRequestEntryCancel",
      "type": "object"
    },
    "InventoryCustomBatchRequestEntry": {
      "id": "InventoryCustomBatchRequestEntry",
      "type": "object",
      "description": "A batch entry encoding a single non-batch inventory request.",
      "properties": {
        "inventory": {
          "description": "Price and availability of the product.",
          "$ref": "Inventory"
        },
        "batchId": {
          "type": "integer",
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32"
        },
        "merchantId": {
          "description": "The ID of the managing account.",
          "format": "uint64",
          "type": "string"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product for which to update price and availability."
        },
        "storeCode": {
          "description": "The code of the store for which to update price and availability. Use `online` to update price and availability of an online product.",
          "type": "string"
        }
      }
    },
    "OrdersCustomBatchRequestEntrySetLineItemMetadata": {
      "properties": {
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "OrderMerchantProvidedAnnotation"
          }
        },
        "lineItemId": {
          "description": "The ID of the line item to set metadata. Either lineItemId or productId is required.",
          "type": "string"
        },
        "productId": {
          "description": "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        }
      },
      "id": "OrdersCustomBatchRequestEntrySetLineItemMetadata",
      "type": "object"
    },
    "LiasettingsCustomBatchResponseEntry": {
      "id": "LiasettingsCustomBatchResponseEntry",
      "type": "object",
      "properties": {
        "gmbAccounts": {
          "$ref": "GmbAccounts",
          "description": "The list of accessible GMB accounts."
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "The ID of the request entry to which this entry responds."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liasettingsCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if, and only if, the request failed."
        },
        "liaSettings": {
          "$ref": "LiaSettings",
          "description": "The retrieved or updated Lia settings."
        },
        "posDataProviders": {
          "items": {
            "$ref": "PosDataProviders"
          },
          "type": "array",
          "description": "The list of POS data providers."
        }
      }
    },
    "InventoryCustomBatchResponseEntry": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#inventoryCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "batchId": {
          "description": "The ID of the request entry this entry responds to.",
          "format": "uint32",
          "type": "integer"
        },
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        }
      },
      "id": "InventoryCustomBatchResponseEntry",
      "description": "A batch entry encoding a single non-batch inventory response."
    },
    "ProductsCustomBatchRequest": {
      "type": "object",
      "id": "ProductsCustomBatchRequest",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "ProductsCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch."
        }
      }
    },
    "AccountsAuthInfoResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsAuthInfoResponse\".",
          "type": "string"
        },
        "accountIdentifiers": {
          "items": {
            "$ref": "AccountIdentifier"
          },
          "type": "array",
          "description": "The account identifiers corresponding to the authenticated user. - For an individual account: only the merchant ID is defined - For an aggregator: only the aggregator ID is defined - For a subaccount of an MCA: both the merchant ID and the aggregator ID are defined. "
        }
      },
      "id": "AccountsAuthInfoResponse"
    },
    "DatafeedStatus": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "description": "The country for which the status is reported, represented as a CLDR territory code."
        },
        "itemsTotal": {
          "description": "The number of items in the feed that were processed.",
          "type": "string",
          "format": "uint64"
        },
        "processingStatus": {
          "type": "string",
          "description": "The processing status of the feed. Acceptable values are: - \"`\"`failure`\": The feed could not be processed or all items had errors.`\" - \"`in progress`\": The feed is being processed. - \"`none`\": The feed has not yet been processed. For example, a feed that has never been uploaded will have this processing status. - \"`success`\": The feed was processed successfully, though some items might have had errors. "
        },
        "itemsValid": {
          "description": "The number of items in the feed that were valid.",
          "type": "string",
          "format": "uint64"
        },
        "errors": {
          "items": {
            "$ref": "DatafeedStatusError"
          },
          "description": "The list of errors occurring in the feed.",
          "type": "array"
        },
        "language": {
          "description": "The two-letter ISO 639-1 language for which the status is reported.",
          "type": "string"
        },
        "lastUploadDate": {
          "description": "The last date at which the feed was uploaded.",
          "type": "string"
        },
        "datafeedId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the feed for which the status is reported."
        },
        "warnings": {
          "items": {
            "$ref": "DatafeedStatusError"
          },
          "type": "array",
          "description": "The list of errors occurring in the feed."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#datafeedStatus`\""
        }
      },
      "id": "DatafeedStatus",
      "description": "The status of a datafeed, i.e., the result of the last retrieval of the datafeed computed asynchronously when the feed processing is finished."
    },
    "LiaOnDisplayToOrderSettings": {
      "id": "LiaOnDisplayToOrderSettings",
      "type": "object",
      "properties": {
        "shippingCostPolicyUrl": {
          "description": "Shipping cost and policy URL.",
          "type": "string"
        },
        "status": {
          "description": "The status of the ?On display to order? feature. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" ",
          "type": "string"
        }
      }
    },
    "OrdersCustomBatchResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCustomBatchResponse\"."
        },
        "entries": {
          "items": {
            "$ref": "OrdersCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests.",
          "type": "array"
        }
      },
      "id": "OrdersCustomBatchResponse",
      "type": "object"
    },
    "InventoryPickup": {
      "properties": {
        "pickupSla": {
          "type": "string",
          "description": "The expected date that an order will be ready for pickup, relative to when the order is placed. Only supported for local inventory. Must be submitted together with `pickupMethod`. Acceptable values are: - \"`five day`\" - \"`four day`\" - \"`multi day`\" - \"`multi week`\" - \"`next day`\" - \"`same day`\" - \"`seven day`\" - \"`six day`\" - \"`three day`\" - \"`two day`\" "
        },
        "pickupMethod": {
          "description": "Whether store pickup is available for this offer and whether the pickup option should be shown as buy, reserve, or not supported. Only supported for local inventory. Unless the value is \"not supported\", must be submitted together with `pickupSla`. Acceptable values are: - \"`buy`\" - \"`not supported`\" - \"`reserve`\" - \"`ship to store`\" ",
          "type": "string"
        }
      },
      "id": "InventoryPickup",
      "type": "object"
    },
    "HolidayCutoff": {
      "type": "object",
      "properties": {
        "deadlineTimezone": {
          "description": "Timezone identifier for the deadline hour. A list of identifiers can be found in the AdWords API documentation. E.g. \"Europe/Zurich\". Required.",
          "type": "string"
        },
        "deadlineDate": {
          "description": "Date of the order deadline, in ISO 8601 format. E.g. \"2016-11-29\" for 29th November 2016. Required.",
          "type": "string"
        },
        "deadlineHour": {
          "type": "integer",
          "description": "Hour of the day on the deadline date until which the order has to be placed to qualify for the delivery guarantee. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Required.",
          "format": "uint32"
        },
        "holidayId": {
          "type": "string",
          "description": "Unique identifier for the holiday. Required."
        },
        "visibleFromDate": {
          "type": "string",
          "description": "Date on which the deadline will become visible to consumers in ISO 8601 format. E.g. \"2016-10-31\" for 31st October 2016. Required."
        }
      },
      "id": "HolidayCutoff"
    },
    "ShippingsettingsListResponse": {
      "id": "ShippingsettingsListResponse",
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "ShippingSettings"
          }
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsListResponse\"."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of shipping settings."
        }
      }
    },
    "Value": {
      "id": "Value",
      "type": "object",
      "description": "The single value of a rate group or the value of a rate group table's cell. Exactly one of `noShipping`, `flatRate`, `pricePercentage`, `carrierRateName`, `subtableName` must be set.",
      "properties": {
        "noShipping": {
          "description": "If true, then the product can't ship. Must be true when set, can only be set if all other fields are not set.",
          "type": "boolean"
        },
        "flatRate": {
          "description": "A flat rate. Can only be set if all other fields are not set.",
          "$ref": "Price"
        },
        "carrierRateName": {
          "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.",
          "type": "string"
        },
        "pricePercentage": {
          "description": "A percentage of the price represented as a number in decimal notation (e.g., `\"5.4\"`). Can only be set if all other fields are not set.",
          "type": "string"
        },
        "subtableName": {
          "description": "The name of a subtable. Can only be set in table cells (i.e., not for single values), and only if all other fields are not set.",
          "type": "string"
        }
      }
    },
    "AccountstatusesListResponse": {
      "id": "AccountstatusesListResponse",
      "type": "object",
      "properties": {
        "resources": {
          "items": {
            "$ref": "AccountStatus"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of account statuses."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountstatusesListResponse\"."
        }
      }
    },
    "OrderReportDisbursement": {
      "type": "object",
      "properties": {
        "disbursementId": {
          "description": "The ID of the disbursement.",
          "type": "string"
        },
        "merchantId": {
          "description": "The ID of the managing account.",
          "type": "string",
          "format": "uint64"
        },
        "disbursementCreationDate": {
          "description": "The disbursement date, in ISO 8601 format.",
          "type": "string"
        },
        "disbursementDate": {
          "type": "string",
          "description": "The date the disbursement was initiated, in ISO 8601 format."
        },
        "disbursementAmount": {
          "description": "The disbursement amount.",
          "$ref": "Price"
        }
      },
      "id": "OrderReportDisbursement",
      "description": "Order disbursement. All methods require the payment analyst role."
    },
    "AccountsCustomBatchRequest": {
      "type": "object",
      "id": "AccountsCustomBatchRequest",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "AccountsCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch."
        }
      }
    },
    "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo": {
      "properties": {
        "trackingId": {
          "description": "The tracking ID for the shipment.",
          "type": "string"
        },
        "shipmentId": {
          "type": "string",
          "description": "Required. The ID of the shipment. This is assigned by the merchant and is unique to each shipment."
        },
        "carrier": {
          "type": "string",
          "description": "The carrier handling the shipment. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values."
        }
      },
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo"
    },
    "AccountStatusExampleItem": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string"
        },
        "submittedValue": {
          "type": "string"
        },
        "itemId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "valueOnLandingPage": {
          "type": "string"
        }
      },
      "id": "AccountStatusExampleItem"
    },
    "TestOrderCustomerMarketingRightsInfo": {
      "properties": {
        "lastUpdatedTimestamp": {
          "type": "string",
          "description": "Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet."
        },
        "explicitMarketingPreference": {
          "type": "string",
          "description": "Last know user use selection regards marketing preferences. In certain cases selection might not be known, so this field would be empty. Acceptable values are: - \"`denied`\" - \"`granted`\" "
        }
      },
      "type": "object",
      "id": "TestOrderCustomerMarketingRightsInfo"
    },
    "OrdersUpdateShipmentRequest": {
      "type": "object",
      "properties": {
        "shipmentId": {
          "type": "string",
          "description": "The ID of the shipment."
        },
        "deliveryDate": {
          "description": "Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if `status` is `delivered`.",
          "type": "string"
        },
        "status": {
          "description": "New status for the shipment. Not updated if missing. Acceptable values are: - \"`delivered`\" - \"`undeliverable`\" - \"`readyForPickup`\" ",
          "type": "string"
        },
        "carrier": {
          "description": "The carrier handling the shipment. Not updated if missing. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.",
          "type": "string"
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "trackingId": {
          "description": "The tracking ID for the shipment. Not updated if missing.",
          "type": "string"
        }
      },
      "id": "OrdersUpdateShipmentRequest"
    },
    "OrderRefund": {
      "properties": {
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "creationDate": {
          "description": "Date on which the item has been created, in ISO 8601 format.",
          "type": "string"
        },
        "actor": {
          "type": "string",
          "description": "The actor that created the refund. Acceptable values are: - \"`customer`\" - \"`googleBot`\" - \"`googleCustomerService`\" - \"`googlePayments`\" - \"`googleSabre`\" - \"`merchant`\" "
        },
        "amount": {
          "$ref": "Price",
          "description": "The amount that is refunded."
        },
        "reason": {
          "description": "The reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`customerSupportRequested`\" - \"`deliveredLateByCarrier`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`feeAdjustment`\" - \"`invalidCoupon`\" - \"`lateShipmentCredit`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceAdjustment`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`promoReallocation`\" - \"`qualityNotAsExpected`\" - \"`returnRefundAbuse`\" - \"`shippingCostAdjustment`\" - \"`shippingPriceError`\" - \"`taxAdjustment`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        }
      },
      "id": "OrderRefund",
      "type": "object"
    },
    "OrdersCustomBatchRequestEntryRefund": {
      "properties": {
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "amount": {
          "description": "Deprecated. Please use amountPretax and amountTax instead.",
          "$ref": "Price"
        },
        "reason": {
          "type": "string",
          "description": "The reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`deliveredLateByCarrier`\" - \"`feeAdjustment`\" - \"`lateShipmentCredit`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`shippingCostAdjustment`\" - \"`taxAdjustment`\" - \"`undeliverableShippingAddress`\" - \"`wrongProductShipped`\" "
        },
        "amountTax": {
          "$ref": "Price",
          "description": "Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, amountPretax must be set. Calculated automatically if not provided."
        },
        "amountPretax": {
          "$ref": "Price",
          "description": "The amount that is refunded. Either amount or amountPretax should be filled."
        }
      },
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryRefund"
    },
    "ProductStatusDataQualityIssue": {
      "type": "object",
      "id": "ProductStatusDataQualityIssue",
      "properties": {
        "fetchStatus": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "valueProvided": {
          "type": "string"
        },
        "valueOnLandingPage": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        }
      }
    },
    "AccountTaxTaxRule": {
      "properties": {
        "shippingTaxed": {
          "description": "If true, shipping charges are also taxed.",
          "type": "boolean"
        },
        "ratePercent": {
          "type": "string",
          "description": "Explicit tax rate in percent, represented as a floating point number without the percentage character. Must not be negative."
        },
        "useGlobalRate": {
          "description": "Whether the tax rate is taken from a global tax table or specified explicitly.",
          "type": "boolean"
        },
        "locationId": {
          "format": "uint64",
          "description": "Required. State (or province) is which the tax is applicable, described by its location ID (also called criteria ID).",
          "type": "string"
        },
        "country": {
          "type": "string",
          "description": "Country code in which tax is applicable."
        }
      },
      "id": "AccountTaxTaxRule",
      "description": "Tax calculation rule to apply in a state or province (USA only).",
      "type": "object"
    },
    "DatafeedstatusesCustomBatchRequestEntry": {
      "description": "A batch entry encoding a single non-batch datafeedstatuses request.",
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "description": "The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that for multi-target datafeeds this parameter is required."
        },
        "merchantId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the managing account."
        },
        "language": {
          "type": "string",
          "description": "The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that for multi-target datafeeds this parameter is required."
        },
        "datafeedId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the data feed to get."
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" ",
          "type": "string"
        },
        "batchId": {
          "type": "integer",
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32"
        }
      },
      "id": "DatafeedstatusesCustomBatchRequestEntry"
    },
    "TransitTableTransitTimeRow": {
      "id": "TransitTableTransitTimeRow",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "TransitTableTransitTimeRowTransitTimeValue"
          }
        }
      },
      "type": "object"
    },
    "ProductShippingDimension": {
      "type": "object",
      "properties": {
        "unit": {
          "type": "string",
          "description": "The unit of value."
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "The dimension of the product used to calculate the shipping cost of the item."
        }
      },
      "id": "ProductShippingDimension"
    },
    "OrdersRejectReturnLineItemRequest": {
      "properties": {
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to return. Either lineItemId or productId is required."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "quantity": {
          "format": "uint32",
          "type": "integer",
          "description": "The quantity to return and refund."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the return. Acceptable values are: - \"`damagedOrUsed`\" - \"`missingComponent`\" - \"`notEligible`\" - \"`other`\" - \"`outOfReturnWindow`\" "
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        }
      },
      "type": "object",
      "id": "OrdersRejectReturnLineItemRequest"
    },
    "ProductAmount": {
      "properties": {
        "taxAmount": {
          "$ref": "Price",
          "description": "Tax value."
        },
        "priceAmount": {
          "description": "The pre-tax or post-tax price depending on the location of the order.",
          "$ref": "Price"
        },
        "remittedTaxAmount": {
          "description": "Remitted tax value.",
          "$ref": "Price"
        }
      },
      "id": "ProductAmount",
      "type": "object"
    },
    "AccounttaxCustomBatchRequest": {
      "properties": {
        "entries": {
          "type": "array",
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "AccounttaxCustomBatchRequestEntry"
          }
        }
      },
      "type": "object",
      "id": "AccounttaxCustomBatchRequest"
    },
    "AccountsLinkRequest": {
      "properties": {
        "linkedAccountId": {
          "type": "string",
          "description": "The ID of the linked account."
        },
        "linkType": {
          "type": "string",
          "description": "Type of the link between the two accounts. Acceptable values are: - \"`channelPartner`\" - \"`eCommercePlatform`\" "
        },
        "action": {
          "description": "Action to perform for this link. The `\"request\"` action is only available to select merchants. Acceptable values are: - \"`approve`\" - \"`remove`\" - \"`request`\" ",
          "type": "string"
        }
      },
      "id": "AccountsLinkRequest",
      "type": "object"
    },
    "PosCustomBatchRequest": {
      "id": "PosCustomBatchRequest",
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "type": "array",
          "items": {
            "$ref": "PosCustomBatchRequestEntry"
          }
        }
      },
      "type": "object"
    },
    "PostalCodeRange": {
      "type": "object",
      "properties": {
        "postalCodeRangeEnd": {
          "description": "A postal code or a pattern of the form `prefix*` denoting the inclusive upper bound of the range defining the area. It must have the same length as `postalCodeRangeBegin`: if `postalCodeRangeBegin` is a postal code then `postalCodeRangeEnd` must be a postal code too; if `postalCodeRangeBegin` is a pattern then `postalCodeRangeEnd` must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching `postalCodeRangeBegin`.",
          "type": "string"
        },
        "postalCodeRangeBegin": {
          "type": "string",
          "description": "A postal code or a pattern of the form `prefix*` denoting the inclusive lower bound of the range defining the area. Examples values: `\"94108\"`, `\"9410*\"`, `\"9*\"`. Required."
        }
      },
      "id": "PostalCodeRange"
    },
    "ProductsCustomBatchResponse": {
      "id": "ProductsCustomBatchResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#productsCustomBatchResponse\"."
        },
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "type": "array",
          "items": {
            "$ref": "ProductsCustomBatchResponseEntry"
          }
        }
      },
      "type": "object"
    },
    "InventorySetResponse": {
      "id": "InventorySetResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#inventorySetResponse\".",
          "type": "string"
        }
      }
    },
    "OrdersReturnRefundLineItemResponse": {
      "id": "OrdersReturnRefundLineItemResponse",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersReturnRefundLineItemResponse\"."
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      }
    },
    "UnitInvoice": {
      "properties": {
        "unitPricePretax": {
          "$ref": "Price",
          "description": "[required] Price of the unit, before applying taxes."
        },
        "unitPriceTaxes": {
          "type": "array",
          "description": "Tax amounts to apply to the unit price.",
          "items": {
            "$ref": "UnitInvoiceTaxLine"
          }
        },
        "promotions": {
          "items": {
            "$ref": "Promotion"
          },
          "type": "array",
          "description": "Deprecated."
        },
        "additionalCharges": {
          "description": "Additional charges for a unit, e.g. shipping costs.",
          "type": "array",
          "items": {
            "$ref": "UnitInvoiceAdditionalCharge"
          }
        }
      },
      "id": "UnitInvoice",
      "type": "object"
    },
    "Service": {
      "type": "object",
      "properties": {
        "minimumOrderValue": {
          "$ref": "Price",
          "description": "Minimum order value for this service. If set, indicates that customers will have to spend at least this amount. All prices within a service must have the same currency. Cannot be set together with minimum_order_value_table."
        },
        "currency": {
          "type": "string",
          "description": "The CLDR code of the currency to which this service applies. Must match that of the prices in rate groups."
        },
        "deliveryTime": {
          "description": "Time spent in various aspects from order to the delivery of the product. Required.",
          "$ref": "DeliveryTime"
        },
        "minimumOrderValueTable": {
          "description": "Table of per store minimum order values for the pickup fulfillment type. Cannot be set together with minimum_order_value.",
          "$ref": "MinimumOrderValueTable"
        },
        "deliveryCountry": {
          "type": "string",
          "description": "The CLDR territory code of the country to which the service applies. Required."
        },
        "eligibility": {
          "type": "string",
          "description": "Eligibility for this service. Acceptable values are: - \"`All scenarios`\" - \"`All scenarios except Shopping Actions`\" - \"`Shopping Actions`\" "
        },
        "shipmentType": {
          "description": "Type of locations this service ships orders to. Acceptable values are: - \"`delivery`\" - \"`pickup`\" ",
          "type": "string"
        },
        "rateGroups": {
          "description": "Shipping rate group definitions. Only the last one is allowed to have an empty `applicableShippingLabels`, which means \"everything else\". The other `applicableShippingLabels` must not overlap.",
          "type": "array",
          "items": {
            "$ref": "RateGroup"
          }
        },
        "active": {
          "description": "A boolean exposing the active status of the shipping service. Required.",
          "type": "boolean"
        },
        "name": {
          "description": "Free-form name of the service. Must be unique within target account. Required.",
          "type": "string"
        },
        "pickupService": {
          "description": "The carrier-service pair delivering items to collection points. The list of supported pickup services can be retrieved via the `getSupportedPickupServices` method. Required if and only if the service delivery type is `pickup`.",
          "$ref": "PickupCarrierService"
        }
      },
      "id": "Service"
    },
    "OrderLineItemShippingDetails": {
      "properties": {
        "type": {
          "description": "Type of shipment. Indicates whether `deliveryDetails` or `pickupDetails` is applicable for this shipment. Acceptable values are: - \"`delivery`\" - \"`pickup`\" ",
          "type": "string"
        },
        "deliverByDate": {
          "type": "string",
          "description": "Required. The delivery by date, in ISO 8601 format."
        },
        "method": {
          "$ref": "OrderLineItemShippingDetailsMethod",
          "description": "Required. Details of the shipping method."
        },
        "shipByDate": {
          "type": "string",
          "description": "Required. The ship by date, in ISO 8601 format."
        }
      },
      "id": "OrderLineItemShippingDetails",
      "type": "object"
    },
    "OrdersAdvanceTestOrderResponse": {
      "id": "OrdersAdvanceTestOrderResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersAdvanceTestOrderResponse\"."
        }
      },
      "type": "object"
    }
  },
  "title": "Content API for Shopping",
  "fullyEncodeReservedExpansion": true,
  "protocol": "rest",
  "batchPath": "batch",
  "basePath": "/content/v2/",
  "revision": "20210519",
  "version": "v2",
  "documentationLink": "https://developers.google.com/shopping-content/v2/",
  "kind": "discovery#restDescription",
  "baseUrl": "https://shoppingcontent.googleapis.com/content/v2/",
  "ownerName": "Google",
  "discoveryVersion": "v1"
}

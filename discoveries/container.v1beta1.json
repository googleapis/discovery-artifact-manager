{
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "servicePath": "",
  "id": "container:v1beta1",
  "version": "v1beta1",
  "parameters": {
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "type": "string",
      "default": "json",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    }
  },
  "basePath": "",
  "resources": {
    "projects": {
      "resources": {
        "zones": {
          "resources": {
            "operations": {
              "methods": {
                "get": {
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/operations/{operationId}",
                  "id": "container.projects.zones.operations.get",
                  "parameters": {
                    "projectId": {
                      "type": "string",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                      "required": true,
                      "location": "path"
                    },
                    "zone": {
                      "required": true,
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "path"
                    },
                    "operationId": {
                      "location": "path",
                      "description": "Required. Deprecated. The server-assigned `name` of the operation. This field has been deprecated and replaced by the name field.",
                      "required": true,
                      "type": "string"
                    },
                    "name": {
                      "location": "query",
                      "type": "string",
                      "description": "The name (project, location, operation id) of the operation to get. Specified in the format `projects/*/locations/*/operations/*`."
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the specified operation.",
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/operations/{operationId}",
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "operationId"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/operations",
                  "id": "container.projects.zones.operations.list",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameters": {
                    "zone": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) to return operations for, or `-` for all zones. This field has been deprecated and replaced by the parent field.",
                      "type": "string"
                    },
                    "projectId": {
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "description": "The parent (project and location) where the operations will be listed. Specified in the format `projects/*/locations/*`. Location \"-\" matches all zones and all regions.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/operations",
                  "parameterOrder": [
                    "projectId",
                    "zone"
                  ],
                  "description": "Lists all operations in a project in the specified zone or all zones.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "cancel": {
                  "id": "container.projects.zones.operations.cancel",
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/operations/{operationId}:cancel",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "operationId"
                  ],
                  "parameters": {
                    "projectId": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                      "type": "string"
                    },
                    "operationId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Deprecated. The server-assigned `name` of the operation. This field has been deprecated and replaced by the name field."
                    },
                    "zone": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the operation resides. This field has been deprecated and replaced by the name field.",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Cancels the specified operation.",
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/operations/{operationId}:cancel",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  }
                }
              }
            },
            "clusters": {
              "methods": {
                "master": {
                  "description": "Updates the master for a specific cluster.",
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/master",
                  "parameters": {
                    "clusterId": {
                      "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "zone": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "location": "path"
                    },
                    "projectId": {
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/master",
                  "id": "container.projects.zones.clusters.master",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "UpdateMasterRequest"
                  }
                },
                "setNetworkPolicy": {
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setNetworkPolicy",
                  "parameters": {
                    "clusterId": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.",
                      "required": true
                    },
                    "zone": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "required": true
                    },
                    "projectId": {
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "SetNetworkPolicyRequest"
                  },
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setNetworkPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "container.projects.zones.clusters.setNetworkPolicy",
                  "description": "Enables or disables Network Policy for a cluster."
                },
                "locations": {
                  "deprecated": true,
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "container.projects.zones.clusters.locations",
                  "parameters": {
                    "clusterId": {
                      "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "projectId": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
                    },
                    "zone": {
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "SetLocationsRequest"
                  },
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/locations",
                  "description": "Sets the locations for a specific cluster. Deprecated. Use [projects.locations.clusters.update](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters/update) instead.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/locations"
                },
                "list": {
                  "parameterOrder": [
                    "projectId",
                    "zone"
                  ],
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "query",
                      "type": "string",
                      "description": "The parent (project and location) where the clusters will be listed. Specified in the format `projects/*/locations/*`. Location \"-\" matches all zones and all regions."
                    },
                    "projectId": {
                      "type": "string",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.",
                      "required": true,
                      "location": "path"
                    },
                    "zone": {
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides, or \"-\" for all zones. This field has been deprecated and replaced by the parent field.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Lists all clusters owned by a project in either the specified zone or all zones.",
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters",
                  "id": "container.projects.zones.clusters.list",
                  "response": {
                    "$ref": "ListClustersResponse"
                  }
                },
                "create": {
                  "id": "container.projects.zones.clusters.create",
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters",
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a cluster, consisting of the specified number and type of Google Compute Engine instances. By default, the cluster is created in the project's [default network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks). One firewall is added for the cluster. After cluster creation, the Kubelet creates routes for each node to allow the containers on that node to communicate with all other instances in the cluster. Finally, an entry is added to the project's global metadata indicating which CIDR range the cluster is using.",
                  "parameterOrder": [
                    "projectId",
                    "zone"
                  ],
                  "parameters": {
                    "projectId": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.",
                      "required": true
                    },
                    "zone": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "CreateClusterRequest"
                  },
                  "httpMethod": "POST"
                },
                "setMaintenancePolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the maintenance policy for a cluster.",
                  "parameters": {
                    "projectId": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects)."
                    },
                    "clusterId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the cluster to update."
                    },
                    "zone": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides."
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setMaintenancePolicy",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "SetMaintenancePolicyRequest"
                  },
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setMaintenancePolicy",
                  "id": "container.projects.zones.clusters.setMaintenancePolicy",
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ]
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "container.projects.zones.clusters.get",
                  "parameters": {
                    "zone": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
                    },
                    "projectId": {
                      "type": "string",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                      "location": "path",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name (project, location, cluster) of the cluster to retrieve. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "location": "query"
                    },
                    "clusterId": {
                      "description": "Required. Deprecated. The name of the cluster to retrieve. This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}",
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}",
                  "httpMethod": "GET",
                  "description": "Gets the details for a specific cluster.",
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "response": {
                    "$ref": "Cluster"
                  }
                },
                "delete": {
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}",
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}",
                  "parameters": {
                    "projectId": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                      "location": "path"
                    },
                    "name": {
                      "description": "The name (project, location, cluster) of the cluster to delete. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "type": "string",
                      "location": "query"
                    },
                    "clusterId": {
                      "description": "Required. Deprecated. The name of the cluster to delete. This field has been deprecated and replaced by the name field.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "zone": {
                      "required": true,
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes the cluster, including the Kubernetes endpoint and all worker nodes. Firewalls and routes that were configured during cluster creation are also deleted. Other Google Compute Engine resources that might be in use by the cluster, such as load balancer resources, are not deleted if they weren't present when the cluster was initially created.",
                  "id": "container.projects.zones.clusters.delete",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ]
                },
                "update": {
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}",
                  "id": "container.projects.zones.clusters.update",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the settings for a specific cluster.",
                  "parameters": {
                    "projectId": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
                    },
                    "zone": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "location": "path"
                    },
                    "clusterId": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field."
                    }
                  },
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}",
                  "httpMethod": "PUT",
                  "request": {
                    "$ref": "UpdateClusterRequest"
                  }
                },
                "completeIpRotation": {
                  "description": "Completes master IP rotation.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:completeIpRotation",
                  "id": "container.projects.zones.clusters.completeIpRotation",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "CompleteIPRotationRequest"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "clusterId": {
                      "required": true,
                      "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.",
                      "location": "path",
                      "type": "string"
                    },
                    "zone": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
                    },
                    "projectId": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                      "required": true
                    }
                  },
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:completeIpRotation"
                },
                "legacyAbac": {
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/legacyAbac",
                  "request": {
                    "$ref": "SetLegacyAbacRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/legacyAbac",
                  "httpMethod": "POST",
                  "description": "Enables or disables the ABAC authorization mechanism on a cluster.",
                  "parameters": {
                    "clusterId": {
                      "description": "Required. Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "zone": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "required": true
                    },
                    "projectId": {
                      "location": "path",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "id": "container.projects.zones.clusters.legacyAbac",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "addons": {
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "httpMethod": "POST",
                  "id": "container.projects.zones.clusters.addons",
                  "description": "Sets the addons for a specific cluster.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "SetAddonsConfigRequest"
                  },
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/addons",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/addons",
                  "parameters": {
                    "clusterId": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field."
                    },
                    "zone": {
                      "location": "path",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "required": true,
                      "type": "string"
                    },
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                      "location": "path"
                    }
                  }
                },
                "monitoring": {
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/monitoring",
                  "description": "Sets the monitoring service for a specific cluster.",
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/monitoring",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "id": "container.projects.zones.clusters.monitoring",
                  "parameters": {
                    "clusterId": {
                      "type": "string",
                      "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
                      "location": "path",
                      "required": true
                    },
                    "zone": {
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "projectId": {
                      "location": "path",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "SetMonitoringServiceRequest"
                  }
                },
                "startIpRotation": {
                  "description": "Starts master IP rotation.",
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:startIpRotation",
                  "id": "container.projects.zones.clusters.startIpRotation",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "StartIPRotationRequest"
                  },
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "parameters": {
                    "projectId": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                      "type": "string"
                    },
                    "zone": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
                    },
                    "clusterId": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field."
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:startIpRotation",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "logging": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "container.projects.zones.clusters.logging",
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "request": {
                    "$ref": "SetLoggingServiceRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/logging",
                  "description": "Sets the logging service for a specific cluster.",
                  "httpMethod": "POST",
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/logging",
                  "parameters": {
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
                    },
                    "zone": {
                      "required": true,
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "path"
                    },
                    "clusterId": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field."
                    }
                  }
                },
                "resourceLabels": {
                  "description": "Sets labels on a cluster.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/resourceLabels",
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/resourceLabels",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "clusterId": {
                      "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "projectId": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
                    },
                    "zone": {
                      "required": true,
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "SetLabelsRequest"
                  },
                  "id": "container.projects.zones.clusters.resourceLabels"
                },
                "setMasterAuth": {
                  "request": {
                    "$ref": "SetMasterAuthRequest"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "zone": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
                    },
                    "clusterId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field."
                    },
                    "projectId": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setMasterAuth",
                  "description": "Sets master auth materials. Currently supports changing the admin password or a specific cluster, either via password generation or explicitly setting the password.",
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setMasterAuth",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "container.projects.zones.clusters.setMasterAuth"
                }
              },
              "resources": {
                "nodePools": {
                  "methods": {
                    "create": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "CreateNodePoolRequest"
                      },
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools",
                      "parameters": {
                        "clusterId": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the parent field."
                        },
                        "zone": {
                          "location": "path",
                          "required": true,
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.",
                          "type": "string"
                        },
                        "projectId": {
                          "location": "path",
                          "required": true,
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.",
                          "type": "string"
                        }
                      },
                      "id": "container.projects.zones.clusters.nodePools.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a node pool for a cluster.",
                      "httpMethod": "POST",
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools",
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId"
                      ]
                    },
                    "update": {
                      "parameters": {
                        "clusterId": {
                          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "projectId": {
                          "type": "string",
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                          "required": true,
                          "location": "path"
                        },
                        "zone": {
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                          "location": "path",
                          "type": "string",
                          "required": true
                        },
                        "nodePoolId": {
                          "description": "Required. Deprecated. The name of the node pool to upgrade. This field has been deprecated and replaced by the name field.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "description": "Updates the version and/or image type of a specific node pool.",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "UpdateNodePoolRequest"
                      },
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/update",
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId",
                        "nodePoolId"
                      ],
                      "id": "container.projects.zones.clusters.nodePools.update",
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/update"
                    },
                    "list": {
                      "description": "Lists the node pools for a cluster.",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools",
                      "id": "container.projects.zones.clusters.nodePools.list",
                      "parameters": {
                        "zone": {
                          "type": "string",
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.",
                          "required": true,
                          "location": "path"
                        },
                        "projectId": {
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "parent": {
                          "location": "query",
                          "type": "string",
                          "description": "The parent (project, location, cluster name) where the node pools will be listed. Specified in the format `projects/*/locations/*/clusters/*`."
                        },
                        "clusterId": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the parent field.",
                          "required": true
                        }
                      },
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools",
                      "response": {
                        "$ref": "ListNodePoolsResponse"
                      },
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId"
                      ]
                    },
                    "autoscaling": {
                      "description": "Sets the autoscaling settings of a specific node pool.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "zone": {
                          "location": "path",
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                          "type": "string",
                          "required": true
                        },
                        "clusterId": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
                          "required": true
                        },
                        "projectId": {
                          "type": "string",
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                          "required": true,
                          "location": "path"
                        },
                        "nodePoolId": {
                          "description": "Required. Deprecated. The name of the node pool to upgrade. This field has been deprecated and replaced by the name field.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/autoscaling",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "SetNodePoolAutoscalingRequest"
                      },
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId",
                        "nodePoolId"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/autoscaling",
                      "id": "container.projects.zones.clusters.nodePools.autoscaling"
                    },
                    "get": {
                      "httpMethod": "GET",
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}",
                      "description": "Retrieves the requested node pool.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "nodePoolId": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. Deprecated. The name of the node pool. This field has been deprecated and replaced by the name field."
                        },
                        "projectId": {
                          "type": "string",
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                          "required": true,
                          "location": "path"
                        },
                        "zone": {
                          "type": "string",
                          "required": true,
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                          "location": "path"
                        },
                        "name": {
                          "description": "The name (project, location, cluster, node pool id) of the node pool to get. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
                          "type": "string",
                          "location": "query"
                        },
                        "clusterId": {
                          "location": "path",
                          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId",
                        "nodePoolId"
                      ],
                      "id": "container.projects.zones.clusters.nodePools.get",
                      "response": {
                        "$ref": "NodePool"
                      },
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}"
                    },
                    "setSize": {
                      "request": {
                        "$ref": "SetNodePoolSizeRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/setSize",
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId",
                        "nodePoolId"
                      ],
                      "id": "container.projects.zones.clusters.nodePools.setSize",
                      "parameters": {
                        "projectId": {
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "zone": {
                          "location": "path",
                          "required": true,
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                          "type": "string"
                        },
                        "clusterId": {
                          "required": true,
                          "type": "string",
                          "description": "Required. Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field.",
                          "location": "path"
                        },
                        "nodePoolId": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. Deprecated. The name of the node pool to update. This field has been deprecated and replaced by the name field."
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "SetNodePoolSizeRequest sets the size of a node pool. The new size will be used for all replicas, including future replicas created by modifying NodePool.locations.",
                      "httpMethod": "POST",
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/setSize"
                    },
                    "setManagement": {
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/setManagement",
                      "description": "Sets the NodeManagement options for a node pool.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId",
                        "nodePoolId"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "container.projects.zones.clusters.nodePools.setManagement",
                      "request": {
                        "$ref": "SetNodePoolManagementRequest"
                      },
                      "parameters": {
                        "projectId": {
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "zone": {
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                          "location": "path",
                          "type": "string",
                          "required": true
                        },
                        "nodePoolId": {
                          "required": true,
                          "location": "path",
                          "description": "Required. Deprecated. The name of the node pool to update. This field has been deprecated and replaced by the name field.",
                          "type": "string"
                        },
                        "clusterId": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field."
                        }
                      },
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/setManagement"
                    },
                    "delete": {
                      "description": "Deletes a node pool from a cluster.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE",
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}",
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}",
                      "parameters": {
                        "nodePoolId": {
                          "location": "path",
                          "description": "Required. Deprecated. The name of the node pool to delete. This field has been deprecated and replaced by the name field.",
                          "required": true,
                          "type": "string"
                        },
                        "clusterId": {
                          "required": true,
                          "type": "string",
                          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.",
                          "location": "path"
                        },
                        "zone": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
                        },
                        "projectId": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
                        },
                        "name": {
                          "location": "query",
                          "description": "The name (project, location, cluster, node pool id) of the node pool to delete. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
                          "type": "string"
                        }
                      },
                      "id": "container.projects.zones.clusters.nodePools.delete",
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId",
                        "nodePoolId"
                      ]
                    },
                    "rollback": {
                      "parameters": {
                        "projectId": {
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "clusterId": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. Deprecated. The name of the cluster to rollback. This field has been deprecated and replaced by the name field."
                        },
                        "zone": {
                          "type": "string",
                          "required": true,
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                          "location": "path"
                        },
                        "nodePoolId": {
                          "description": "Required. Deprecated. The name of the node pool to rollback. This field has been deprecated and replaced by the name field.",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "id": "container.projects.zones.clusters.nodePools.rollback",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}:rollback",
                      "request": {
                        "$ref": "RollbackNodePoolUpgradeRequest"
                      },
                      "description": "Rolls back a previously Aborted or Failed NodePool upgrade. This makes no changes if the last upgrade successfully completed.",
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}:rollback",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId",
                        "nodePoolId"
                      ]
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "getServerconfig": {
              "path": "v1beta1/projects/{projectId}/zones/{zone}/serverconfig",
              "httpMethod": "GET",
              "parameterOrder": [
                "projectId",
                "zone"
              ],
              "id": "container.projects.zones.getServerconfig",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ServerConfig"
              },
              "parameters": {
                "zone": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) to return operations for. This field has been deprecated and replaced by the name field."
                },
                "name": {
                  "description": "The name (project and location) of the server config to get, specified in the format `projects/*/locations/*`.",
                  "type": "string",
                  "location": "query"
                },
                "projectId": {
                  "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "description": "Returns configuration info about the Google Kubernetes Engine service.",
              "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/serverconfig"
            }
          }
        },
        "locations": {
          "methods": {
            "getServerConfig": {
              "parameters": {
                "name": {
                  "required": true,
                  "description": "The name (project and location) of the server config to get, specified in the format `projects/*/locations/*`.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                },
                "projectId": {
                  "type": "string",
                  "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                  "location": "query"
                },
                "zone": {
                  "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) to return operations for. This field has been deprecated and replaced by the name field.",
                  "type": "string",
                  "location": "query"
                }
              },
              "description": "Returns configuration info about the Google Kubernetes Engine service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "path": "v1beta1/{+name}/serverConfig",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/serverConfig",
              "id": "container.projects.locations.getServerConfig",
              "response": {
                "$ref": "ServerConfig"
              }
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. Contains the name of the resource requested. Specified in the format `projects/*`.",
                  "location": "path"
                }
              },
              "path": "v1beta1/{+parent}/locations",
              "flatPath": "v1beta1/projects/{projectsId}/locations",
              "description": "Fetches locations that offer Google Kubernetes Engine.",
              "httpMethod": "GET",
              "id": "container.projects.locations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          },
          "resources": {
            "clusters": {
              "methods": {
                "update": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "required": true,
                      "description": "The name (project, location, cluster) of the cluster to update. Specified in the format `projects/*/locations/*/clusters/*`."
                    }
                  },
                  "httpMethod": "PUT",
                  "request": {
                    "$ref": "UpdateClusterRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Updates the settings for a specific cluster.",
                  "id": "container.projects.locations.clusters.update",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setAddons": {
                  "request": {
                    "$ref": "SetAddonsConfigRequest"
                  },
                  "id": "container.projects.locations.clusters.setAddons",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setAddons",
                  "path": "v1beta1/{+name}:setAddons",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The name (project, location, cluster) of the cluster to set addons. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$"
                    }
                  },
                  "description": "Sets the addons for a specific cluster.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "getJwks": {
                  "response": {
                    "$ref": "GetJSONWebKeysResponse"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "description": "The cluster (project, location, cluster name) to get keys for. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "id": "container.projects.locations.clusters.getJwks",
                  "path": "v1beta1/{+parent}/jwks",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/jwks",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets the public component of the cluster signing keys in JSON Web Key format. This API is not yet intended for general use, and is not available for all clusters."
                },
                "get": {
                  "id": "container.projects.locations.clusters.get",
                  "response": {
                    "$ref": "Cluster"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "zone": {
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "query"
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "Required. Deprecated. The name of the cluster to retrieve. This field has been deprecated and replaced by the name field.",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "The name (project, location, cluster) of the cluster to retrieve. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "type": "string"
                    },
                    "projectId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
                    }
                  },
                  "description": "Gets the details for a specific cluster.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}",
                  "path": "v1beta1/{+name}"
                },
                "setLocations": {
                  "httpMethod": "POST",
                  "deprecated": true,
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setLocations",
                  "request": {
                    "$ref": "SetLocationsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "location": "path",
                      "description": "The name (project, location, cluster) of the cluster to set locations. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "type": "string"
                    }
                  },
                  "description": "Sets the locations for a specific cluster. Deprecated. Use [projects.locations.clusters.update](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters/update) instead.",
                  "id": "container.projects.locations.clusters.setLocations",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1beta1/{+name}:setLocations"
                },
                "delete": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}",
                  "id": "container.projects.locations.clusters.delete",
                  "description": "Deletes the cluster, including the Kubernetes endpoint and all worker nodes. Firewalls and routes that were configured during cluster creation are also deleted. Other Google Compute Engine resources that might be in use by the cluster, such as load balancer resources, are not deleted if they weren't present when the cluster was initially created.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "clusterId": {
                      "location": "query",
                      "description": "Required. Deprecated. The name of the cluster to delete. This field has been deprecated and replaced by the name field.",
                      "type": "string"
                    },
                    "projectId": {
                      "location": "query",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name (project, location, cluster) of the cluster to delete. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "type": "string"
                    },
                    "zone": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
                    }
                  }
                },
                "create": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "CreateClusterRequest"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The parent (project and location) where the cluster will be created. Specified in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v1beta1/{+parent}/clusters",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a cluster, consisting of the specified number and type of Google Compute Engine instances. By default, the cluster is created in the project's [default network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks). One firewall is added for the cluster. After cluster creation, the Kubelet creates routes for each node to allow the containers on that node to communicate with all other instances in the cluster. Finally, an entry is added to the project's global metadata indicating which CIDR range the cluster is using.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "container.projects.locations.clusters.create",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "setMasterAuth": {
                  "description": "Sets master auth materials. Currently supports changing the admin password or a specific cluster, either via password generation or explicitly setting the password.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "description": "The name (project, location, cluster) of the cluster to set auth. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "id": "container.projects.locations.clusters.setMasterAuth",
                  "path": "v1beta1/{+name}:setMasterAuth",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setMasterAuth",
                  "request": {
                    "$ref": "SetMasterAuthRequest"
                  }
                },
                "setMonitoring": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "description": "The name (project, location, cluster) of the cluster to set monitoring. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$"
                    }
                  },
                  "description": "Sets the monitoring service for a specific cluster.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setMonitoring",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "container.projects.locations.clusters.setMonitoring",
                  "request": {
                    "$ref": "SetMonitoringServiceRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta1/{+name}:setMonitoring"
                },
                "setMaintenancePolicy": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "container.projects.locations.clusters.setMaintenancePolicy",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name (project, location, cluster name) of the cluster to set maintenance policy. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$"
                    }
                  },
                  "path": "v1beta1/{+name}:setMaintenancePolicy",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setMaintenancePolicy",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "description": "Sets the maintenance policy for a cluster.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "SetMaintenancePolicyRequest"
                  }
                },
                "startIpRotation": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Starts master IP rotation.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:startIpRotation",
                  "path": "v1beta1/{+name}:startIpRotation",
                  "id": "container.projects.locations.clusters.startIpRotation",
                  "parameters": {
                    "name": {
                      "description": "The name (project, location, cluster name) of the cluster to start IP rotation. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "StartIPRotationRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "setNetworkPolicy": {
                  "description": "Enables or disables Network Policy for a cluster.",
                  "request": {
                    "$ref": "SetNetworkPolicyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "container.projects.locations.clusters.setNetworkPolicy",
                  "parameters": {
                    "name": {
                      "description": "The name (project, location, cluster name) of the cluster to set networking policy. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$"
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setNetworkPolicy",
                  "path": "v1beta1/{+name}:setNetworkPolicy"
                },
                "setLegacyAbac": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "container.projects.locations.clusters.setLegacyAbac",
                  "description": "Enables or disables the ABAC authorization mechanism on a cluster.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "SetLegacyAbacRequest"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "The name (project, location, cluster name) of the cluster to set legacy abac. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setLegacyAbac",
                  "path": "v1beta1/{+name}:setLegacyAbac",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "setResourceLabels": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setResourceLabels",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "The name (project, location, cluster name) of the cluster to set labels. Specified in the format `projects/*/locations/*/clusters/*`."
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Sets labels on a cluster.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}:setResourceLabels",
                  "id": "container.projects.locations.clusters.setResourceLabels",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "SetLabelsRequest"
                  }
                },
                "updateMaster": {
                  "request": {
                    "$ref": "UpdateMasterRequest"
                  },
                  "description": "Updates the master for a specific cluster.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:updateMaster",
                  "path": "v1beta1/{+name}:updateMaster",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name (project, location, cluster) of the cluster to update. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "id": "container.projects.locations.clusters.updateMaster"
                },
                "list": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters",
                  "description": "Lists all clusters owned by a project in either the specified zone or all zones.",
                  "parameters": {
                    "parent": {
                      "description": "The parent (project and location) where the clusters will be listed. Specified in the format `projects/*/locations/*`. Location \"-\" matches all zones and all regions.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "projectId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field."
                    },
                    "zone": {
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides, or \"-\" for all zones. This field has been deprecated and replaced by the parent field.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "path": "v1beta1/{+parent}/clusters",
                  "id": "container.projects.locations.clusters.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListClustersResponse"
                  }
                },
                "setLogging": {
                  "id": "container.projects.locations.clusters.setLogging",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "The name (project, location, cluster) of the cluster to set logging. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Sets the logging service for a specific cluster.",
                  "path": "v1beta1/{+name}:setLogging",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setLogging",
                  "request": {
                    "$ref": "SetLoggingServiceRequest"
                  }
                },
                "completeIpRotation": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "The name (project, location, cluster name) of the cluster to complete IP rotation. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:completeIpRotation",
                  "path": "v1beta1/{+name}:completeIpRotation",
                  "request": {
                    "$ref": "CompleteIPRotationRequest"
                  },
                  "id": "container.projects.locations.clusters.completeIpRotation",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Completes master IP rotation."
                }
              },
              "resources": {
                "nodePools": {
                  "methods": {
                    "delete": {
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}",
                      "id": "container.projects.locations.clusters.nodePools.delete",
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a node pool from a cluster.",
                      "path": "v1beta1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "clusterId": {
                          "location": "query",
                          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.",
                          "type": "string"
                        },
                        "projectId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
                        },
                        "nodePoolId": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. Deprecated. The name of the node pool to delete. This field has been deprecated and replaced by the name field."
                        },
                        "zone": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/nodePools/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "The name (project, location, cluster, node pool id) of the node pool to delete. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
                          "required": true
                        }
                      }
                    },
                    "create": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a node pool for a cluster.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "container.projects.locations.clusters.nodePools.create",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools",
                      "httpMethod": "POST",
                      "path": "v1beta1/{+parent}/nodePools",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "The parent (project, location, cluster name) where the node pool will be created. Specified in the format `projects/*/locations/*/clusters/*`."
                        }
                      },
                      "request": {
                        "$ref": "CreateNodePoolRequest"
                      }
                    },
                    "update": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "PUT",
                      "request": {
                        "$ref": "UpdateNodePoolRequest"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/nodePools/[^/]+$",
                          "description": "The name (project, location, cluster, node pool) of the node pool to update. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Updates the version and/or image type of a specific node pool.",
                      "id": "container.projects.locations.clusters.nodePools.update",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1beta1/{+name}"
                    },
                    "setSize": {
                      "request": {
                        "$ref": "SetNodePoolSizeRequest"
                      },
                      "id": "container.projects.locations.clusters.nodePools.setSize",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "SetNodePoolSizeRequest sets the size of a node pool. The new size will be used for all replicas, including future replicas created by modifying NodePool.locations.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/nodePools/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "The name (project, location, cluster, node pool id) of the node pool to set size. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`."
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}:setSize",
                      "path": "v1beta1/{+name}:setSize"
                    },
                    "setManagement": {
                      "path": "v1beta1/{+name}:setManagement",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}:setManagement",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "description": "The name (project, location, cluster, node pool id) of the node pool to set management properties. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/nodePools/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "request": {
                        "$ref": "SetNodePoolManagementRequest"
                      },
                      "description": "Sets the NodeManagement options for a node pool.",
                      "httpMethod": "POST",
                      "id": "container.projects.locations.clusters.nodePools.setManagement",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "rollback": {
                      "request": {
                        "$ref": "RollbackNodePoolUpgradeRequest"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "container.projects.locations.clusters.nodePools.rollback",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "The name (project, location, cluster, node pool id) of the node poll to rollback upgrade. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/nodePools/[^/]+$",
                          "required": true
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}:rollback",
                      "path": "v1beta1/{+name}:rollback",
                      "description": "Rolls back a previously Aborted or Failed NodePool upgrade. This makes no changes if the last upgrade successfully completed.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST"
                    },
                    "setAutoscaling": {
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Sets the autoscaling settings of a specific node pool.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "SetNodePoolAutoscalingRequest"
                      },
                      "id": "container.projects.locations.clusters.nodePools.setAutoscaling",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}:setAutoscaling",
                      "path": "v1beta1/{+name}:setAutoscaling",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "The name (project, location, cluster, node pool) of the node pool to set autoscaler settings. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/nodePools/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      }
                    },
                    "get": {
                      "description": "Retrieves the requested node pool.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "container.projects.locations.clusters.nodePools.get",
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}",
                      "parameters": {
                        "zone": {
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                          "type": "string",
                          "location": "query"
                        },
                        "nodePoolId": {
                          "location": "query",
                          "description": "Required. Deprecated. The name of the node pool. This field has been deprecated and replaced by the name field.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name (project, location, cluster, node pool id) of the node pool to get. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/nodePools/[^/]+$"
                        },
                        "clusterId": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field."
                        },
                        "projectId": {
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "NodePool"
                      }
                    },
                    "list": {
                      "description": "Lists the node pools for a cluster.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "container.projects.locations.clusters.nodePools.list",
                      "parameters": {
                        "parent": {
                          "description": "The parent (project, location, cluster name) where the node pools will be listed. Specified in the format `projects/*/locations/*/clusters/*`.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                          "required": true,
                          "location": "path"
                        },
                        "clusterId": {
                          "location": "query",
                          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the parent field.",
                          "type": "string"
                        },
                        "zone": {
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.",
                          "type": "string",
                          "location": "query"
                        },
                        "projectId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field."
                        }
                      },
                      "response": {
                        "$ref": "ListNodePoolsResponse"
                      },
                      "path": "v1beta1/{+parent}/nodePools",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools"
                    },
                    "completeUpgrade": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/nodePools/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "The name (project, location, cluster, node pool id) of the node pool to complete upgrade. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`."
                        }
                      },
                      "path": "v1beta1/{+name}:completeUpgrade",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}:completeUpgrade",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "CompleteNodePoolUpgradeRequest"
                      },
                      "response": {
                        "$ref": "Empty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "CompleteNodePoolUpgrade will signal an on-going node pool upgrade to complete.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "container.projects.locations.clusters.nodePools.completeUpgrade"
                    }
                  }
                },
                "well-known": {
                  "methods": {
                    "getOpenid-configuration": {
                      "response": {
                        "$ref": "GetOpenIDConfigResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "container.projects.locations.clusters.well-known.getOpenid-configuration",
                      "httpMethod": "GET",
                      "description": "Gets the OIDC discovery document for the cluster. See the [OpenID Connect Discovery 1.0 specification](https://openid.net/specs/openid-connect-discovery-1_0.html) for details. This API is not yet intended for general use, and is not available for all clusters.",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/.well-known/openid-configuration",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "The cluster (project, location, cluster name) to get the discovery document for. Specified in the format `projects/*/locations/*/clusters/*`.",
                          "type": "string"
                        }
                      },
                      "path": "v1beta1/{+parent}/.well-known/openid-configuration"
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "operationId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Deprecated. The server-assigned `name` of the operation. This field has been deprecated and replaced by the name field."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name (project, location, operation id) of the operation to get. Specified in the format `projects/*/locations/*/operations/*`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true
                    },
                    "projectId": {
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "query"
                    },
                    "zone": {
                      "type": "string",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "location": "query"
                    }
                  },
                  "id": "container.projects.locations.operations.get",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "GET",
                  "description": "Gets the specified operation.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "cancel": {
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}:cancel",
                  "id": "container.projects.locations.operations.cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The name (project, location, operation id) of the operation to cancel. Specified in the format `projects/*/locations/*/operations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "description": "Cancels the specified operation."
                },
                "list": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "zone": {
                      "location": "query",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) to return operations for, or `-` for all zones. This field has been deprecated and replaced by the parent field.",
                      "type": "string"
                    },
                    "projectId": {
                      "location": "query",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "The parent (project and location) where the operations will be listed. Specified in the format `projects/*/locations/*`. Location \"-\" matches all zones and all regions."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "container.projects.locations.operations.list",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "description": "Lists all operations in a project in the specified zone or all zones.",
                  "path": "v1beta1/{+parent}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        },
        "aggregated": {
          "resources": {
            "usableSubnetworks": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists subnetworks that can be used for creating clusters in a project.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListUsableSubnetworksResponse"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/aggregated/usableSubnetworks",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "description": "Specifies a page token to use. Set this to the nextPageToken returned by previous list requests to get the next page of results.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "The max number of results per page that should be returned. If the number of available results is larger than `page_size`, a `next_page_token` is returned which can be used to get the next page of results in subsequent requests. Acceptable values are 0 to 500, inclusive. (Default: 500)",
                      "format": "int32"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The parent project where subnetworks are usable. Specified in the format `projects/*`.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+$"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filtering currently only supports equality on the networkProjectId and must be in the form: \"networkProjectId=[PROJECTID]\", where `networkProjectId` is the project which owns the listed subnetworks. This defaults to the parent project ID."
                    }
                  },
                  "path": "v1beta1/{+parent}/aggregated/usableSubnetworks",
                  "id": "container.projects.aggregated.usableSubnetworks.list"
                }
              }
            }
          }
        }
      }
    }
  },
  "batchPath": "batch",
  "documentationLink": "https://cloud.google.com/container-engine/",
  "mtlsRootUrl": "https://container.mtls.googleapis.com/",
  "schemas": {
    "BinaryAuthorization": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "This field is deprecated. Leave this unset and instead configure BinaryAuthorization using evaluation_mode. If evaluation_mode is set to anything other than EVALUATION_MODE_UNSPECIFIED, this field is ignored."
        },
        "evaluationMode": {
          "description": "Mode of operation for binauthz policy evaluation. If unspecified, defaults to DISABLED.",
          "enumDescriptions": [
            "Default value",
            "Disable BinaryAuthorization",
            "Enforce Kubernetes admission requests with BinaryAuthorization using the project's singleton policy. This is equivalent to setting the enabled boolean to true."
          ],
          "enum": [
            "EVALUATION_MODE_UNSPECIFIED",
            "DISABLED",
            "PROJECT_SINGLETON_POLICY_ENFORCE"
          ],
          "type": "string"
        }
      },
      "description": "Configuration for Binary Authorization.",
      "id": "BinaryAuthorization"
    },
    "StartIPRotationRequest": {
      "properties": {
        "rotateCredentials": {
          "type": "boolean",
          "description": "Whether to rotate credentials during IP rotation."
        },
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        },
        "name": {
          "description": "The name (project, location, cluster name) of the cluster to start IP rotation. Specified in the format `projects/*/locations/*/clusters/*`.",
          "type": "string"
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.",
          "type": "string"
        }
      },
      "description": "StartIPRotationRequest creates a new IP for the cluster and then performs a node upgrade on each node pool to point to the new IP.",
      "type": "object",
      "id": "StartIPRotationRequest"
    },
    "WindowsVersion": {
      "type": "object",
      "description": "Windows server version.",
      "properties": {
        "osVersion": {
          "type": "string",
          "description": "Windows server build number"
        },
        "imageType": {
          "type": "string",
          "description": "Windows server image type"
        },
        "supportEndDate": {
          "$ref": "Date",
          "description": "Mainstream support end date"
        }
      },
      "id": "WindowsVersion"
    },
    "AutoUpgradeOptions": {
      "description": "AutoUpgradeOptions defines the set of options for the user to control how the Auto Upgrades will proceed.",
      "id": "AutoUpgradeOptions",
      "properties": {
        "description": {
          "description": "[Output only] This field is set when upgrades are about to commence with the description of the upgrade.",
          "type": "string"
        },
        "autoUpgradeStartTime": {
          "description": "[Output only] This field is set when upgrades are about to commence with the approximate start time for the upgrades, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkloadConfig": {
      "properties": {
        "auditMode": {
          "type": "string",
          "enum": [
            "MODE_UNSPECIFIED",
            "DISABLED",
            "BASIC",
            "BASELINE",
            "RESTRICTED"
          ],
          "description": "Sets which mode of auditing should be used for the cluster's workloads.",
          "enumDescriptions": [
            "Default value meaning that no mode has been specified.",
            "This disables Workload Configuration auditing on the cluster, meaning that nothing is surfaced.",
            "Applies the default set of policy auditing to a cluster's workloads.",
            "Surfaces configurations that are not in line with the Pod Security Standard Baseline policy.",
            "Surfaces configurations that are not in line with the Pod Security Standard Restricted policy."
          ]
        }
      },
      "id": "WorkloadConfig",
      "description": "WorkloadConfig defines the flags to enable or disable the workload configurations for the cluster.",
      "type": "object"
    },
    "EphemeralStorageLocalSsdConfig": {
      "id": "EphemeralStorageLocalSsdConfig",
      "properties": {
        "localSsdCount": {
          "description": "Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage. The limit for this value is dependent upon the maximum number of disks available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "EphemeralStorageLocalSsdConfig contains configuration for the node ephemeral storage using Local SSDs."
    },
    "LocalNvmeSsdBlockConfig": {
      "properties": {
        "localSsdCount": {
          "format": "int32",
          "type": "integer",
          "description": "The number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size. If zero, it means no raw-block local NVMe SSD disks to be attached to the node. The limit for this value is dependent upon the maximum number of disks available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information."
        }
      },
      "description": "LocalNvmeSsdBlockConfig contains configuration for using raw-block local NVMe SSDs",
      "id": "LocalNvmeSsdBlockConfig",
      "type": "object"
    },
    "FastSocket": {
      "properties": {
        "enabled": {
          "description": "Whether Fast Socket features are enabled in the node pool.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "FastSocket",
      "description": "Configuration of Fast Socket feature."
    },
    "PlacementPolicy": {
      "properties": {
        "type": {
          "description": "The type of placement.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "COMPACT"
          ],
          "type": "string",
          "enumDescriptions": [
            "TYPE_UNSPECIFIED specifies no requirements on nodes placement.",
            "COMPACT specifies node placement in the same availability domain to ensure low communication latency."
          ]
        }
      },
      "description": "PlacementPolicy defines the placement policy used by the node pool.",
      "type": "object",
      "id": "PlacementPolicy"
    },
    "NodeTaints": {
      "properties": {
        "taints": {
          "description": "List of node taints.",
          "items": {
            "$ref": "NodeTaint"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Collection of Kubernetes [node taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration).",
      "id": "NodeTaints"
    },
    "NetworkTags": {
      "id": "NetworkTags",
      "properties": {
        "tags": {
          "description": "List of network tags.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Collection of Compute Engine network tags that can be applied to a node's underlying VM instance. (See `tags` field in [`NodeConfig`](/kubernetes-engine/docs/reference/rest/v1/NodeConfig))."
    },
    "NetworkConfig": {
      "type": "object",
      "properties": {
        "serviceExternalIpsConfig": {
          "$ref": "ServiceExternalIPsConfig",
          "description": "ServiceExternalIPsConfig specifies if services with externalIPs field are blocked or not."
        },
        "enableIntraNodeVisibility": {
          "type": "boolean",
          "description": "Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC network."
        },
        "datapathProvider": {
          "enumDescriptions": [
            "Default value.",
            "Use the IPTables implementation based on kube-proxy.",
            "Use the eBPF based GKE Dataplane V2 with additional features. See the [GKE Dataplane V2 documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/dataplane-v2) for more."
          ],
          "enum": [
            "DATAPATH_PROVIDER_UNSPECIFIED",
            "LEGACY_DATAPATH",
            "ADVANCED_DATAPATH"
          ],
          "type": "string",
          "description": "The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation."
        },
        "defaultSnatStatus": {
          "description": "Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when default_snat_status is disabled. When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic.",
          "$ref": "DefaultSnatStatus"
        },
        "dnsConfig": {
          "description": "DNSConfig contains clusterDNS config for this cluster.",
          "$ref": "DNSConfig"
        },
        "subnetwork": {
          "description": "Output only. The relative name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/vpc) to which the cluster is connected. Example: projects/my-project/regions/us-central1/subnetworks/my-subnet",
          "type": "string"
        },
        "gatewayApiConfig": {
          "$ref": "GatewayAPIConfig",
          "description": "GatewayAPIConfig contains the desired config of Gateway API on this cluster."
        },
        "privateIpv6GoogleAccess": {
          "enumDescriptions": [
            "Default value. Same as DISABLED",
            "No private access to or from Google Services",
            "Enables private IPv6 access to Google Services from GKE",
            "Enables private IPv6 access to and from Google Services"
          ],
          "description": "The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services (all access will be via IPv4)",
          "type": "string",
          "enum": [
            "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED",
            "PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED",
            "PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE",
            "PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL"
          ]
        },
        "network": {
          "description": "Output only. The relative name of the Google Compute Engine network(https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. Example: projects/my-project/global/networks/my-network",
          "type": "string"
        },
        "enableL4ilbSubsetting": {
          "description": "Whether L4ILB Subsetting is enabled for this cluster.",
          "type": "boolean"
        }
      },
      "id": "NetworkConfig",
      "description": "NetworkConfig reports the relative names of network & subnetwork."
    },
    "HttpLoadBalancing": {
      "properties": {
        "disabled": {
          "description": "Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load balancers.",
          "type": "boolean"
        }
      },
      "description": "Configuration options for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.",
      "type": "object",
      "id": "HttpLoadBalancing"
    },
    "ListLocationsResponse": {
      "description": "ListLocationsResponse returns the list of all GKE locations and their recommendation state.",
      "properties": {
        "nextPageToken": {
          "description": "Only return ListLocationsResponse that occur after the page_token. This value should be populated from the ListLocationsResponse.next_page_token if that response token was set (which happens when listing more Locations than fit in a single ListLocationsResponse).",
          "type": "string"
        },
        "locations": {
          "description": "A full list of GKE locations.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        }
      },
      "id": "ListLocationsResponse",
      "type": "object"
    },
    "NodeTaint": {
      "type": "object",
      "id": "NodeTaint",
      "description": "Kubernetes taint is composed of three fields: key, value, and effect. Effect can only be one of three types: NoSchedule, PreferNoSchedule or NoExecute. See [here](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration) for more information, including usage and the valid values.",
      "properties": {
        "value": {
          "description": "Value for taint.",
          "type": "string"
        },
        "key": {
          "description": "Key for taint.",
          "type": "string"
        },
        "effect": {
          "type": "string",
          "enumDescriptions": [
            "Not set",
            "NoSchedule",
            "PreferNoSchedule",
            "NoExecute"
          ],
          "enum": [
            "EFFECT_UNSPECIFIED",
            "NO_SCHEDULE",
            "PREFER_NO_SCHEDULE",
            "NO_EXECUTE"
          ],
          "description": "Effect for taint."
        }
      }
    },
    "LoggingComponentConfig": {
      "id": "LoggingComponentConfig",
      "properties": {
        "enableComponents": {
          "type": "array",
          "items": {
            "enum": [
              "COMPONENT_UNSPECIFIED",
              "SYSTEM_COMPONENTS",
              "WORKLOADS",
              "APISERVER",
              "SCHEDULER",
              "CONTROLLER_MANAGER"
            ],
            "enumDescriptions": [
              "Default value. This shouldn't be used.",
              "system components",
              "workloads",
              "kube-apiserver",
              "kube-scheduler",
              "kube-controller-manager"
            ],
            "type": "string"
          },
          "description": "Select components to collect logs. An empty set would disable all logging."
        }
      },
      "description": "LoggingComponentConfig is cluster logging component configuration.",
      "type": "object"
    },
    "NetworkPolicyConfig": {
      "type": "object",
      "id": "NetworkPolicyConfig",
      "properties": {
        "disabled": {
          "description": "Whether NetworkPolicy is enabled for this cluster.",
          "type": "boolean"
        }
      },
      "description": "Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for the nodes."
    },
    "WorkloadALTSConfig": {
      "id": "WorkloadALTSConfig",
      "description": "Configuration for direct-path (via ALTS) with workload identity.",
      "type": "object",
      "properties": {
        "enableAlts": {
          "description": "enable_alts controls whether the alts handshaker should be enabled or not for direct-path. Requires Workload Identity (workload_pool must be non-empty).",
          "type": "boolean"
        }
      }
    },
    "ShieldedNodes": {
      "description": "Configuration of Shielded Nodes feature.",
      "properties": {
        "enabled": {
          "description": "Whether Shielded Nodes features are enabled on all nodes in this cluster.",
          "type": "boolean"
        }
      },
      "id": "ShieldedNodes",
      "type": "object"
    },
    "CloudRunConfig": {
      "type": "object",
      "properties": {
        "disabled": {
          "description": "Whether Cloud Run addon is enabled for this cluster.",
          "type": "boolean"
        },
        "loadBalancerType": {
          "enumDescriptions": [
            "Load balancer type for Cloud Run is unspecified.",
            "Install external load balancer for Cloud Run.",
            "Install internal load balancer for Cloud Run."
          ],
          "description": "Which load balancer type is installed for Cloud Run.",
          "type": "string",
          "enum": [
            "LOAD_BALANCER_TYPE_UNSPECIFIED",
            "LOAD_BALANCER_TYPE_EXTERNAL",
            "LOAD_BALANCER_TYPE_INTERNAL"
          ]
        }
      },
      "description": "Configuration options for the Cloud Run feature.",
      "id": "CloudRunConfig"
    },
    "Fleet": {
      "type": "object",
      "description": "Fleet is the fleet configuration for the cluster.",
      "properties": {
        "preRegistered": {
          "description": "[Output only] Whether the cluster has been registered through the fleet API.",
          "type": "boolean"
        },
        "membership": {
          "type": "string",
          "description": "[Output only] The full resource name of the registered fleet membership of the cluster, in the format `//gkehub.googleapis.com/projects/*/locations/*/memberships/*`."
        },
        "project": {
          "type": "string",
          "description": "The Fleet host project(project ID or project number) where this cluster will be registered to. This field cannot be changed after the cluster has been registered."
        }
      },
      "id": "Fleet"
    },
    "MaintenancePolicy": {
      "type": "object",
      "id": "MaintenancePolicy",
      "properties": {
        "window": {
          "description": "Specifies the maintenance window in which maintenance may be performed.",
          "$ref": "MaintenanceWindow"
        },
        "resourceVersion": {
          "type": "string",
          "description": "A hash identifying the version of this policy, so that updates to fields of the policy won't accidentally undo intermediate changes (and so that users of the API unaware of some fields won't accidentally remove other fields). Make a `get()` request to the cluster to get the current resource version and include it with requests to set the policy."
        }
      },
      "description": "MaintenancePolicy defines the maintenance policy to be used for the cluster."
    },
    "NodePoolLoggingConfig": {
      "type": "object",
      "id": "NodePoolLoggingConfig",
      "properties": {
        "variantConfig": {
          "$ref": "LoggingVariantConfig",
          "description": "Logging variant configuration."
        }
      },
      "description": "NodePoolLoggingConfig specifies logging configuration for nodepools."
    },
    "WorkloadIdentityConfig": {
      "description": "Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.",
      "id": "WorkloadIdentityConfig",
      "type": "object",
      "properties": {
        "identityProvider": {
          "description": "identity provider is the third party identity provider.",
          "type": "string"
        },
        "identityNamespace": {
          "description": "IAM Identity Namespace to attach all Kubernetes Service Accounts to.",
          "type": "string"
        },
        "workloadPool": {
          "description": "The workload pool to attach all Kubernetes service accounts to.",
          "type": "string"
        }
      }
    },
    "AvailableVersion": {
      "id": "AvailableVersion",
      "description": "Deprecated.",
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "description": "Reason for availability."
        },
        "version": {
          "description": "Kubernetes version.",
          "type": "string"
        }
      }
    },
    "MaxPodsConstraint": {
      "type": "object",
      "description": "Constraints applied to pods.",
      "properties": {
        "maxPodsPerNode": {
          "format": "int64",
          "description": "Constraint enforced on the max num of pods per node.",
          "type": "string"
        }
      },
      "id": "MaxPodsConstraint"
    },
    "Autopilot": {
      "type": "object",
      "id": "Autopilot",
      "description": "Autopilot is the configuration for Autopilot settings on the cluster.",
      "properties": {
        "enabled": {
          "description": "Enable Autopilot",
          "type": "boolean"
        }
      }
    },
    "UpgradeEvent": {
      "description": "UpgradeEvent is a notification sent to customers by the cluster server when a resource is upgrading.",
      "properties": {
        "resource": {
          "description": "Optional relative path to the resource. For example in node pool upgrades, the relative path of the node pool.",
          "type": "string"
        },
        "operation": {
          "type": "string",
          "description": "The operation associated with this upgrade."
        },
        "targetVersion": {
          "type": "string",
          "description": "The target version for the upgrade."
        },
        "resourceType": {
          "type": "string",
          "enumDescriptions": [
            "Default value. This shouldn't be used.",
            "Master / control plane",
            "Node pool"
          ],
          "enum": [
            "UPGRADE_RESOURCE_TYPE_UNSPECIFIED",
            "MASTER",
            "NODE_POOL"
          ],
          "description": "The resource type that is upgrading."
        },
        "currentVersion": {
          "type": "string",
          "description": "The current version before the upgrade."
        },
        "operationStartTime": {
          "description": "The time when the operation was started.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object",
      "id": "UpgradeEvent"
    },
    "Cluster": {
      "properties": {
        "legacyAbac": {
          "description": "Configuration for the legacy ABAC authorization mode.",
          "$ref": "LegacyAbac"
        },
        "privateClusterConfig": {
          "$ref": "PrivateClusterConfig",
          "description": "Configuration for private cluster."
        },
        "selfLink": {
          "type": "string",
          "description": "[Output only] Server-defined URL for the resource."
        },
        "workloadCertificates": {
          "description": "Configuration for issuance of mTLS keys and certificates to Kubernetes pods.",
          "$ref": "WorkloadCertificates"
        },
        "locations": {
          "description": "The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This field provides a default value if [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) are not specified during node pool creation. Warning: changing cluster locations will update the [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) of all node pools and will result in nodes being added and/or removed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "master": {
          "description": "Configuration for master components.",
          "$ref": "Master"
        },
        "fleet": {
          "description": "Fleet information for the cluster.",
          "$ref": "Fleet"
        },
        "zone": {
          "description": "[Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field is deprecated, use location instead.",
          "type": "string"
        },
        "endpoint": {
          "description": "[Output only] The IP address of this cluster's master endpoint. The endpoint can be accessed from the internet at `https://username:password@endpoint/`. See the `masterAuth` property of this resource for username and password information.",
          "type": "string"
        },
        "networkConfig": {
          "$ref": "NetworkConfig",
          "description": "Configuration for cluster networking."
        },
        "autoscaling": {
          "$ref": "ClusterAutoscaling",
          "description": "Cluster-level autoscaling configuration."
        },
        "enableKubernetesAlpha": {
          "description": "Kubernetes alpha features are enabled on this cluster. This includes alpha API groups (e.g. v1beta1) and features that may not be production ready in the kubernetes version of the master and nodes. The cluster has no SLA for uptime and master/node upgrades are disabled. Alpha enabled clusters are automatically deleted thirty days after creation.",
          "type": "boolean"
        },
        "name": {
          "description": "The name of this cluster. The name must be unique within this project and location (e.g. zone or region), and can be up to 40 characters with the following restrictions: * Lowercase letters, numbers, and hyphens only. * Must start with a letter. * Must end with a number or a letter.",
          "type": "string"
        },
        "loggingService": {
          "type": "string",
          "description": "The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions."
        },
        "expireTime": {
          "description": "[Output only] The time the cluster will be automatically deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "type": "string"
        },
        "enableTpu": {
          "type": "boolean",
          "description": "Enable the ability to use Cloud TPUs in this cluster. This field is deprecated, use tpu_config.enabled instead."
        },
        "servicesIpv4Cidr": {
          "description": "[Output only] The IP address range of the Kubernetes services in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`). Service addresses are typically put in the last `/16` from the container CIDR.",
          "type": "string"
        },
        "masterAuthorizedNetworksConfig": {
          "description": "The configuration options for master authorized networks feature.",
          "$ref": "MasterAuthorizedNetworksConfig"
        },
        "addonsConfig": {
          "description": "Configurations for the various addons available to run in the cluster.",
          "$ref": "AddonsConfig"
        },
        "tpuIpv4CidrBlock": {
          "description": "[Output only] The IP address range of the Cloud TPUs in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`).",
          "type": "string"
        },
        "currentNodeCount": {
          "type": "integer",
          "description": "[Output only] The number of nodes currently in the cluster. Deprecated. Call Kubernetes API directly to retrieve node information.",
          "format": "int32"
        },
        "nodePoolDefaults": {
          "description": "Default NodePool settings for the entire cluster. These settings are overridden if specified on the specific NodePool object.",
          "$ref": "NodePoolDefaults"
        },
        "subnetwork": {
          "type": "string",
          "description": "The name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/subnetworks) to which the cluster is connected. On output this shows the subnetwork ID instead of the name."
        },
        "privateCluster": {
          "type": "boolean",
          "description": "If this is a private cluster setup. Private clusters are clusters that, by default have no external IP addresses on the nodes and where nodes and the master communicate over private IP addresses. This field is deprecated, use private_cluster_config.enable_private_nodes instead."
        },
        "monitoringConfig": {
          "$ref": "MonitoringConfig",
          "description": "Monitoring configuration for the cluster."
        },
        "masterAuth": {
          "description": "The authentication information for accessing the master endpoint. If unspecified, the defaults are used: For clusters before v1.12, if master_auth is unspecified, `username` will be set to \"admin\", a random password will be generated, and a client certificate will be issued.",
          "$ref": "MasterAuth"
        },
        "labelFingerprint": {
          "type": "string",
          "description": "The fingerprint of the set of labels for this cluster."
        },
        "shieldedNodes": {
          "$ref": "ShieldedNodes",
          "description": "Shielded Nodes configuration."
        },
        "meshCertificates": {
          "description": "Configuration for issuance of mTLS keys and certificates to Kubernetes pods.",
          "$ref": "MeshCertificates"
        },
        "initialNodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of nodes to create in this cluster. You must ensure that your Compute Engine [resource quota](https://cloud.google.com/compute/quotas) is sufficient for this number of instances. You must also have available firewall and routes quota. For requests, this field should only be used in lieu of a \"node_pool\" object, since this configuration (along with the \"node_config\") will be used to create a \"NodePool\" object with an auto-generated name. Do not use this and a node_pool at the same time. This field is deprecated, use node_pool.initial_node_count instead."
        },
        "networkPolicy": {
          "$ref": "NetworkPolicy",
          "description": "Configuration options for the NetworkPolicy feature."
        },
        "protectConfig": {
          "description": "Enable/Disable Protect API features for the cluster.",
          "$ref": "ProtectConfig"
        },
        "podSecurityPolicyConfig": {
          "description": "Configuration for the PodSecurityPolicy feature.",
          "$ref": "PodSecurityPolicyConfig"
        },
        "etag": {
          "description": "This checksum is computed by the server based on the value of cluster fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "instanceGroupUrls": {
          "description": "Deprecated. Use node_pools.instance_group_urls.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clusterIpv4Cidr": {
          "type": "string",
          "description": "The IP address range of the container pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`). Leave blank to have one automatically chosen or specify a `/14` block in `10.0.0.0/8`."
        },
        "autopilot": {
          "$ref": "Autopilot",
          "description": "Autopilot configuration for the cluster."
        },
        "createTime": {
          "type": "string",
          "description": "[Output only] The time the cluster was created, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."
        },
        "nodeConfig": {
          "description": "Parameters used in creating the cluster's nodes. For requests, this field should only be used in lieu of a \"node_pool\" object, since this configuration (along with the \"initial_node_count\") will be used to create a \"NodePool\" object with an auto-generated name. Do not use this and a node_pool at the same time. For responses, this field will be populated with the node configuration of the first node pool. (For configuration of each node pool, see `node_pool.config`) If unspecified, the defaults are used. This field is deprecated, use node_pool.config instead.",
          "$ref": "NodeConfig"
        },
        "workloadIdentityConfig": {
          "description": "Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.",
          "$ref": "WorkloadIdentityConfig"
        },
        "conditions": {
          "items": {
            "$ref": "StatusCondition"
          },
          "description": "Which conditions caused the current cluster state.",
          "type": "array"
        },
        "tpuConfig": {
          "description": "Configuration for Cloud TPU support;",
          "$ref": "TpuConfig"
        },
        "notificationConfig": {
          "$ref": "NotificationConfig",
          "description": "Notification configuration of the cluster."
        },
        "description": {
          "type": "string",
          "description": "An optional description of this cluster."
        },
        "clusterTelemetry": {
          "description": "Telemetry integration for the cluster.",
          "$ref": "ClusterTelemetry"
        },
        "maintenancePolicy": {
          "description": "Configure the maintenance policy for this cluster.",
          "$ref": "MaintenancePolicy"
        },
        "costManagementConfig": {
          "$ref": "CostManagementConfig",
          "description": "Configuration for the fine-grained cost management feature."
        },
        "status": {
          "enumDescriptions": [
            "Not set.",
            "The PROVISIONING state indicates the cluster is being created.",
            "The RUNNING state indicates the cluster has been created and is fully usable.",
            "The RECONCILING state indicates that some work is actively being done on the cluster, such as upgrading the master or node software. Details can be found in the `statusMessage` field.",
            "The STOPPING state indicates the cluster is being deleted.",
            "The ERROR state indicates the cluster may be unusable. Details can be found in the `statusMessage` field.",
            "The DEGRADED state indicates the cluster requires user action to restore full functionality. Details can be found in the `statusMessage` field."
          ],
          "type": "string",
          "description": "[Output only] The current status of this cluster.",
          "enum": [
            "STATUS_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "RECONCILING",
            "STOPPING",
            "ERROR",
            "DEGRADED"
          ]
        },
        "initialClusterVersion": {
          "description": "The initial Kubernetes version for this cluster. Valid versions are those found in validMasterVersions returned by getServerConfig. The version can be upgraded over time; such upgrades are reflected in currentMasterVersion and currentNodeVersion. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"\",\"-\": picks the default Kubernetes version",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "[Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides."
        },
        "binaryAuthorization": {
          "description": "Configuration for Binary Authorization.",
          "$ref": "BinaryAuthorization"
        },
        "identityServiceConfig": {
          "$ref": "IdentityServiceConfig",
          "description": "Configuration for Identity Service component."
        },
        "statusMessage": {
          "type": "string",
          "description": "[Output only] Deprecated. Use conditions instead. Additional information about the current status of this cluster, if available."
        },
        "network": {
          "type": "string",
          "description": "The name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. If left unspecified, the `default` network will be used. On output this shows the network ID instead of the name."
        },
        "masterIpv4CidrBlock": {
          "description": "The IP prefix in CIDR notation to use for the hosted master network. This prefix will be used for assigning private IP addresses to the master or set of masters, as well as the ILB VIP. This field is deprecated, use private_cluster_config.master_ipv4_cidr_block instead.",
          "type": "string"
        },
        "loggingConfig": {
          "description": "Logging configuration for the cluster.",
          "$ref": "LoggingConfig"
        },
        "nodePoolAutoConfig": {
          "$ref": "NodePoolAutoConfig",
          "description": "Node pool configs that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled clusters."
        },
        "resourceUsageExportConfig": {
          "description": "Configuration for exporting resource usages. Resource usage export is disabled when this config unspecified.",
          "$ref": "ResourceUsageExportConfig"
        },
        "ipAllocationPolicy": {
          "description": "Configuration for cluster IP allocation.",
          "$ref": "IPAllocationPolicy"
        },
        "monitoringService": {
          "description": "The monitoring service the cluster should use to write metrics. Currently available options: * \"monitoring.googleapis.com/kubernetes\" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Output only. Unique id for the cluster.",
          "readOnly": true
        },
        "resourceLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource labels for the cluster to use to annotate any related Google Compute Engine resources."
        },
        "nodePools": {
          "items": {
            "$ref": "NodePool"
          },
          "type": "array",
          "description": "The node pools associated with this cluster. This field should not be set if \"node_config\" or \"initial_node_count\" are specified."
        },
        "authenticatorGroupsConfig": {
          "description": "Configuration controlling RBAC group membership information.",
          "$ref": "AuthenticatorGroupsConfig"
        },
        "verticalPodAutoscaling": {
          "$ref": "VerticalPodAutoscaling",
          "description": "Cluster-level Vertical Pod Autoscaling configuration."
        },
        "currentNodeVersion": {
          "type": "string",
          "description": "[Output only] Deprecated, use [NodePool.version](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters.nodePools) instead. The current version of the node software components. If they are currently at multiple versions because they're in the process of being upgraded, this reflects the minimum version of all nodes."
        },
        "defaultMaxPodsConstraint": {
          "description": "The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster. Only honored if cluster created with IP Alias support.",
          "$ref": "MaxPodsConstraint"
        },
        "confidentialNodes": {
          "$ref": "ConfidentialNodes",
          "description": "Configuration of Confidential Nodes. All the nodes in the cluster will be Confidential VM once enabled."
        },
        "nodeIpv4CidrSize": {
          "type": "integer",
          "format": "int32",
          "description": "[Output only] The size of the address space on each node for hosting containers. This is provisioned from within the `container_ipv4_cidr` range. This field will only be set when cluster is in route-based network mode."
        },
        "databaseEncryption": {
          "description": "Configuration of etcd encryption.",
          "$ref": "DatabaseEncryption"
        },
        "currentMasterVersion": {
          "type": "string",
          "description": "[Output only] The current software version of the master endpoint."
        },
        "releaseChannel": {
          "$ref": "ReleaseChannel",
          "description": "Release channel configuration. If left unspecified on cluster creation and a version is specified, the cluster is enrolled in the most mature release channel where the version is available (first checking STABLE, then REGULAR, and finally RAPID). Otherwise, if no release channel configuration and no version is specified, the cluster is enrolled in the REGULAR channel with its default version."
        },
        "workloadAltsConfig": {
          "$ref": "WorkloadALTSConfig",
          "description": "Configuration for direct-path (via ALTS) with workload identity."
        }
      },
      "description": "A Google Kubernetes Engine cluster.",
      "id": "Cluster",
      "type": "object"
    },
    "NodeLabels": {
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map of node label keys and node label values."
        }
      },
      "id": "NodeLabels",
      "description": "Collection of node-level [Kubernetes labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels).",
      "type": "object"
    },
    "StandardRolloutPolicy": {
      "type": "object",
      "properties": {
        "batchPercentage": {
          "description": "Percentage of the blue pool nodes to drain in a batch. The range of this field should be (0.0, 1.0].",
          "format": "float",
          "type": "number"
        },
        "batchSoakDuration": {
          "type": "string",
          "format": "google-duration",
          "description": "Soak time after each batch gets drained. Default to zero."
        },
        "batchNodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of blue nodes to drain in a batch."
        }
      },
      "id": "StandardRolloutPolicy",
      "description": "Standard rollout policy is the default policy for blue-green."
    },
    "MonitoringComponentConfig": {
      "properties": {
        "enableComponents": {
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Default value. This shouldn't be used.",
              "system components",
              "Deprecated: Use Google Cloud Managed Service for Prometheus.",
              "kube-apiserver",
              "kube-scheduler",
              "kube-controller-manager"
            ],
            "enum": [
              "COMPONENT_UNSPECIFIED",
              "SYSTEM_COMPONENTS",
              "WORKLOADS",
              "APISERVER",
              "SCHEDULER",
              "CONTROLLER_MANAGER"
            ]
          },
          "description": "Select components to collect metrics. An empty set would disable all monitoring."
        }
      },
      "type": "object",
      "description": "MonitoringComponentConfig is cluster monitoring component configuration.",
      "id": "MonitoringComponentConfig"
    },
    "CostManagementConfig": {
      "description": "Configuration for fine-grained cost management feature.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the feature is enabled or not."
        }
      },
      "type": "object",
      "id": "CostManagementConfig"
    },
    "MaintenanceExclusionOptions": {
      "type": "object",
      "id": "MaintenanceExclusionOptions",
      "properties": {
        "scope": {
          "type": "string",
          "enumDescriptions": [
            "NO_UPGRADES excludes all upgrades, including patch upgrades and minor upgrades across control planes and nodes. This is the default exclusion behavior.",
            "NO_MINOR_UPGRADES excludes all minor upgrades for the cluster, only patches are allowed.",
            "NO_MINOR_OR_NODE_UPGRADES excludes all minor upgrades for the cluster, and also exclude all node pool upgrades. Only control plane patches are allowed."
          ],
          "enum": [
            "NO_UPGRADES",
            "NO_MINOR_UPGRADES",
            "NO_MINOR_OR_NODE_UPGRADES"
          ],
          "description": "Scope specifies the upgrade scope which upgrades are blocked by the exclusion."
        }
      },
      "description": "Represents the Maintenance exclusion option."
    },
    "NodePool": {
      "description": "NodePool contains the name and configuration for a cluster's node pool. Node pools are a set of nodes (i.e. VM's), with a common configuration and specification, under the control of the cluster master. They may have a set of Kubernetes labels applied to them, which may be used to reference them during pod scheduling. They may also be resized up or down, to accommodate the workload. These upgrade settings control the level of parallelism and the level of disruption caused by an upgrade. maxUnavailable controls the number of nodes that can be simultaneously unavailable. maxSurge controls the number of additional nodes that can be added to the node pool temporarily for the time of the upgrade to increase the number of available nodes. (maxUnavailable + maxSurge) determines the level of parallelism (how many nodes are being upgraded at the same time). Note: upgrades inevitably introduce some disruption since workloads need to be moved from old nodes to new, upgraded ones. Even if maxUnavailable=0, this holds true. (Disruption stays within the limits of PodDisruptionBudget, if it is configured.) Consider a hypothetical node pool with 5 nodes having maxSurge=2, maxUnavailable=1. This means the upgrade process upgrades 3 nodes simultaneously. It creates 2 additional (upgraded) nodes, then it brings down 3 old (not yet upgraded) nodes at the same time. This ensures that there are always at least 4 nodes available.",
      "properties": {
        "podIpv4CidrSize": {
          "description": "[Output only] The pod CIDR block size per node in this node pool.",
          "type": "integer",
          "format": "int32"
        },
        "config": {
          "$ref": "NodeConfig",
          "description": "The node configuration of the pool."
        },
        "selfLink": {
          "type": "string",
          "description": "[Output only] Server-defined URL for the resource."
        },
        "conditions": {
          "items": {
            "$ref": "StatusCondition"
          },
          "type": "array",
          "description": "Which conditions caused the current node pool state."
        },
        "locations": {
          "items": {
            "type": "string"
          },
          "description": "The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the NodePool's nodes should be located. If this value is unspecified during node pool creation, the [Cluster.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters#Cluster.FIELDS.locations) value will be used, instead. Warning: changing node pool locations will result in nodes being added and/or removed.",
          "type": "array"
        },
        "autoscaling": {
          "$ref": "NodePoolAutoscaling",
          "description": "Autoscaler configuration for this NodePool. Autoscaler is enabled only if a valid configuration is present."
        },
        "upgradeSettings": {
          "description": "Upgrade settings control disruption and speed of the upgrade.",
          "$ref": "UpgradeSettings"
        },
        "maxPodsConstraint": {
          "description": "The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.",
          "$ref": "MaxPodsConstraint"
        },
        "statusMessage": {
          "description": "[Output only] Deprecated. Use conditions instead. Additional information about the current status of this node pool instance, if available.",
          "type": "string"
        },
        "version": {
          "description": "The version of Kubernetes running on this NodePool's nodes. If unspecified, it defaults as described [here](https://cloud.google.com/kubernetes-engine/versioning#specifying_node_version).",
          "type": "string"
        },
        "status": {
          "enum": [
            "STATUS_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "RUNNING_WITH_ERROR",
            "RECONCILING",
            "STOPPING",
            "ERROR"
          ],
          "type": "string",
          "description": "[Output only] The status of the nodes in this pool instance.",
          "enumDescriptions": [
            "Not set.",
            "The PROVISIONING state indicates the node pool is being created.",
            "The RUNNING state indicates the node pool has been created and is fully usable.",
            "The RUNNING_WITH_ERROR state indicates the node pool has been created and is partially usable. Some error state has occurred and some functionality may be impaired. Customer may need to reissue a request or trigger a new update.",
            "The RECONCILING state indicates that some work is actively being done on the node pool, such as upgrading node software. Details can be found in the `statusMessage` field.",
            "The STOPPING state indicates the node pool is being deleted.",
            "The ERROR state indicates the node pool may be unusable. Details can be found in the `statusMessage` field."
          ]
        },
        "name": {
          "description": "The name of the node pool.",
          "type": "string"
        },
        "initialNodeCount": {
          "format": "int32",
          "description": "The initial node count for the pool. You must ensure that your Compute Engine [resource quota](https://cloud.google.com/compute/quotas) is sufficient for this number of instances. You must also have available firewall and routes quota.",
          "type": "integer"
        },
        "placementPolicy": {
          "$ref": "PlacementPolicy",
          "description": "Specifies the node placement policy."
        },
        "instanceGroupUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "[Output only] The resource URLs of the [managed instance groups](https://cloud.google.com/compute/docs/instance-groups/creating-groups-of-managed-instances) associated with this node pool. During the node pool blue-green upgrade operation, the URLs contain both blue and green resources."
        },
        "networkConfig": {
          "description": "Networking configuration for this NodePool. If specified, it overrides the cluster-level defaults.",
          "$ref": "NodeNetworkConfig"
        },
        "management": {
          "description": "NodeManagement configuration for this NodePool.",
          "$ref": "NodeManagement"
        },
        "etag": {
          "description": "This checksum is computed by the server based on the value of node pool fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "updateInfo": {
          "$ref": "UpdateInfo",
          "readOnly": true,
          "description": "Output only. [Output only] Update info contains relevant information during a node pool update."
        }
      },
      "type": "object",
      "id": "NodePool"
    },
    "DailyMaintenanceWindow": {
      "id": "DailyMaintenanceWindow",
      "description": "Time window specified for daily maintenance operations.",
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "description": "Time within the maintenance window to start the maintenance operations. It must be in format \"HH:MM\", where HH : [00-23] and MM : [00-59] GMT."
        },
        "duration": {
          "description": "[Output only] Duration of the time window, automatically chosen to be smallest possible in the given scenario.",
          "type": "string"
        }
      }
    },
    "PrivateClusterMasterGlobalAccessConfig": {
      "description": "Configuration for controlling master global access settings.",
      "id": "PrivateClusterMasterGlobalAccessConfig",
      "properties": {
        "enabled": {
          "description": "Whenever master is accessible globally or not.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "LoggingConfig": {
      "id": "LoggingConfig",
      "type": "object",
      "description": "LoggingConfig is cluster logging configuration.",
      "properties": {
        "componentConfig": {
          "$ref": "LoggingComponentConfig",
          "description": "Logging components configuration"
        }
      }
    },
    "Master": {
      "description": "Master is the configuration for components on master.",
      "properties": {},
      "id": "Master",
      "type": "object"
    },
    "ClusterTelemetry": {
      "properties": {
        "type": {
          "enumDescriptions": [
            "Not set.",
            "Monitoring integration is disabled.",
            "Monitoring integration is enabled.",
            "Only system components are monitored and logged."
          ],
          "type": "string",
          "enum": [
            "UNSPECIFIED",
            "DISABLED",
            "ENABLED",
            "SYSTEM_ONLY"
          ],
          "description": "Type of the integration."
        }
      },
      "description": "Telemetry integration for the cluster.",
      "type": "object",
      "id": "ClusterTelemetry"
    },
    "NodeConfig": {
      "id": "NodeConfig",
      "description": "Parameters that describe the nodes in a cluster. GKE Autopilot clusters do not recognize parameters in `NodeConfig`. Use AutoprovisioningNodePoolDefaults instead.",
      "properties": {
        "diskSizeGb": {
          "type": "integer",
          "format": "int32",
          "description": "Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB."
        },
        "loggingConfig": {
          "description": "Logging configuration.",
          "$ref": "NodePoolLoggingConfig"
        },
        "resourceLabels": {
          "type": "object",
          "description": "The resource labels for the node pool to use to annotate any related Google Compute Engine resources.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "confidentialNodes": {
          "$ref": "ConfidentialNodes",
          "description": "Confidential nodes config. All the nodes in the node pool will be Confidential VM once enabled."
        },
        "labels": {
          "description": "The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it's best to assume the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "kubeletConfig": {
          "$ref": "NodeKubeletConfig",
          "description": "Node kubelet configs."
        },
        "diskType": {
          "type": "string",
          "description": "Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') If unspecified, the default disk type is 'pd-standard'"
        },
        "spot": {
          "type": "boolean",
          "description": "Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag."
        },
        "serviceAccount": {
          "description": "The Google Cloud Platform Service Account to be used by the node VMs. Specify the email address of the Service Account; otherwise, if no Service Account is specified, the \"default\" service account is used.",
          "type": "string"
        },
        "shieldedInstanceConfig": {
          "description": "Shielded Instance options.",
          "$ref": "ShieldedInstanceConfig"
        },
        "sandboxConfig": {
          "description": "Sandbox configuration for this node.",
          "$ref": "SandboxConfig"
        },
        "accelerators": {
          "items": {
            "$ref": "AcceleratorConfig"
          },
          "description": "A list of hardware accelerators to be attached to each node. See https://cloud.google.com/compute/docs/gpus for more information about support for GPUs.",
          "type": "array"
        },
        "fastSocket": {
          "description": "Enable or disable NCCL fast socket for the node pool.",
          "$ref": "FastSocket"
        },
        "imageType": {
          "description": "The image type to use for this node. Note that for a given image type, the latest version of it will be used. Please see https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for available image types.",
          "type": "string"
        },
        "windowsNodeConfig": {
          "description": "Parameters that can be configured on Windows nodes.",
          "$ref": "WindowsNodeConfig"
        },
        "taints": {
          "type": "array",
          "description": "List of kubernetes taints to be applied to each node. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/",
          "items": {
            "$ref": "NodeTaint"
          }
        },
        "nodeGroup": {
          "description": "Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).",
          "type": "string"
        },
        "machineType": {
          "type": "string",
          "description": "The name of a Google Compute Engine [machine type](https://cloud.google.com/compute/docs/machine-types). If unspecified, the default machine type is `e2-medium`."
        },
        "reservationAffinity": {
          "description": "The optional reservation affinity. Setting this field will apply the specified [Zonal Compute Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) to this node pool.",
          "$ref": "ReservationAffinity"
        },
        "gcfsConfig": {
          "description": "GCFS (Google Container File System) configs.",
          "$ref": "GcfsConfig"
        },
        "metadata": {
          "type": "object",
          "description": "The metadata key/value pairs assigned to instances in the cluster. Keys must conform to the regexp `[a-zA-Z0-9-_]+` and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the reserved keys: - \"cluster-location\" - \"cluster-name\" - \"cluster-uid\" - \"configure-sh\" - \"containerd-configure-sh\" - \"enable-oslogin\" - \"gci-ensure-gke-docker\" - \"gci-metrics-enabled\" - \"gci-update-strategy\" - \"instance-template\" - \"kube-env\" - \"startup-script\" - \"user-data\" - \"disable-address-manager\" - \"windows-startup-script-ps1\" - \"common-psm1\" - \"k8s-node-setup-psm1\" - \"install-ssh-psm1\" - \"user-profile-psm1\" Values are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on them is that each value's size must be less than or equal to 32 KB. The total size of all keys and values must be less than 512 KB.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "localSsdCount": {
          "format": "int32",
          "type": "integer",
          "description": "The number of local SSD disks to be attached to the node. The limit for this value is dependent upon the maximum number of disks available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information."
        },
        "preemptible": {
          "description": "Whether the nodes are created as preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible for more inforamtion about preemptible VM instances.",
          "type": "boolean"
        },
        "bootDiskKmsKey": {
          "type": "string",
          "description": " The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption"
        },
        "linuxNodeConfig": {
          "description": "Parameters that can be configured on Linux nodes.",
          "$ref": "LinuxNodeConfig"
        },
        "ephemeralStorageConfig": {
          "$ref": "EphemeralStorageConfig",
          "description": "Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk."
        },
        "ephemeralStorageLocalSsdConfig": {
          "$ref": "EphemeralStorageLocalSsdConfig",
          "description": "Parameters for the node ephemeral storage using Local SSDs. If unspecified, ephemeral storage is backed by the boot disk. This field is functionally equivalent to the ephemeral_storage_config"
        },
        "oauthScopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of Google API scopes to be made available on all of the node VMs under the \"default\" service account. The following scopes are recommended, but not required, and by default are not included: * `https://www.googleapis.com/auth/compute` is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only` is required for communicating with **gcr.io** (the [Google Container Registry](https://cloud.google.com/container-registry/)). If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added."
        },
        "advancedMachineFeatures": {
          "$ref": "AdvancedMachineFeatures",
          "description": "Advanced features for the Compute Engine VM."
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "description": "The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster or node pool creation. Each tag within the list must comply with RFC1035.",
          "type": "array"
        },
        "gvnic": {
          "description": "Enable or disable gvnic on the node pool.",
          "$ref": "VirtualNIC"
        },
        "minCpuPlatform": {
          "description": "Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as `minCpuPlatform: \"Intel Haswell\"` or `minCpuPlatform: \"Intel Sandy Bridge\"`. For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform).",
          "type": "string"
        },
        "localNvmeSsdBlockConfig": {
          "$ref": "LocalNvmeSsdBlockConfig",
          "description": "Parameters for using raw-block Local NVMe SSDs."
        },
        "workloadMetadataConfig": {
          "description": "The workload metadata configuration for this node.",
          "$ref": "WorkloadMetadataConfig"
        }
      },
      "type": "object"
    },
    "NodeKubeletConfig": {
      "description": "Node kubelet configs.",
      "type": "object",
      "id": "NodeKubeletConfig",
      "properties": {
        "cpuCfsQuotaPeriod": {
          "description": "Set the CPU CFS quota period value 'cpu.cfs_period_us'. The string must be a sequence of decimal numbers, each with optional fraction and a unit suffix, such as \"300ms\". Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\". The value must be a positive duration.",
          "type": "string"
        },
        "cpuCfsQuota": {
          "description": "Enable CPU CFS quota enforcement for containers that specify CPU limits. This option is enabled by default which makes kubelet use CFS quota (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to enforce container CPU limits. Otherwise, CPU limits will not be enforced at all. Disable this option to mitigate CPU throttling problems while still having your pods to be in Guaranteed QoS class by specifying the CPU limits. The default value is 'true' if unspecified.",
          "type": "boolean"
        },
        "podPidsLimit": {
          "description": "Set the Pod PID limits. See https://kubernetes.io/docs/concepts/policy/pid-limiting/#pod-pid-limits Controls the maximum number of processes allowed to run in a pod. The value must be greater than or equal to 1024 and less than 4194304.",
          "format": "int64",
          "type": "string"
        },
        "cpuManagerPolicy": {
          "type": "string",
          "description": "Control the CPU management policy on the node. See https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/ The following values are allowed. * \"none\": the default, which represents the existing scheduling behavior. * \"static\": allows pods with certain resource characteristics to be granted increased CPU affinity and exclusivity on the node. The default value is 'none' if unspecified."
        }
      }
    },
    "BigQueryDestination": {
      "id": "BigQueryDestination",
      "description": "Parameters for using BigQuery as the destination of resource usage export.",
      "type": "object",
      "properties": {
        "datasetId": {
          "type": "string",
          "description": "The ID of a BigQuery Dataset."
        }
      }
    },
    "WindowsVersions": {
      "properties": {
        "windowsVersions": {
          "items": {
            "$ref": "WindowsVersion"
          },
          "type": "array",
          "description": "List of Windows server versions."
        }
      },
      "id": "WindowsVersions",
      "type": "object",
      "description": "Windows server versions."
    },
    "Date": {
      "properties": {
        "day": {
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer"
        },
        "month": {
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer"
        },
        "year": {
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Date",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "type": "object"
    },
    "DnsCacheConfig": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether NodeLocal DNSCache is enabled for this cluster."
        }
      },
      "type": "object",
      "description": "Configuration for NodeLocal DNSCache",
      "id": "DnsCacheConfig"
    },
    "CancelOperationRequest": {
      "properties": {
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the operation resides. This field has been deprecated and replaced by the name field."
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, operation id) of the operation to cancel. Specified in the format `projects/*/locations/*/operations/*`."
        },
        "operationId": {
          "description": "Required. Deprecated. The server-assigned `name` of the operation. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
        }
      },
      "description": "CancelOperationRequest cancels a single operation.",
      "type": "object",
      "id": "CancelOperationRequest"
    },
    "ServerConfig": {
      "description": "Kubernetes Engine service configuration.",
      "properties": {
        "channels": {
          "description": "List of release channel configurations.",
          "type": "array",
          "items": {
            "$ref": "ReleaseChannelConfig"
          }
        },
        "windowsVersionMaps": {
          "description": "Maps of Kubernetes version and supported Windows server versions.",
          "additionalProperties": {
            "$ref": "WindowsVersions"
          },
          "type": "object"
        },
        "validNodeVersions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of valid node upgrade target versions, in descending order."
        },
        "validMasterVersions": {
          "items": {
            "type": "string"
          },
          "description": "List of valid master versions, in descending order.",
          "type": "array"
        },
        "validImageTypes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of valid image types."
        },
        "defaultClusterVersion": {
          "type": "string",
          "description": "Version of Kubernetes the service deploys by default."
        },
        "defaultImageType": {
          "type": "string",
          "description": "Default image type."
        }
      },
      "type": "object",
      "id": "ServerConfig"
    },
    "RollbackNodePoolUpgradeRequest": {
      "type": "object",
      "description": "RollbackNodePoolUpgradeRequest rollbacks the previously Aborted or Failed NodePool upgrade. This will be an no-op if the last upgrade successfully completed.",
      "properties": {
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
        },
        "nodePoolId": {
          "type": "string",
          "description": "Required. Deprecated. The name of the node pool to rollback. This field has been deprecated and replaced by the name field."
        },
        "name": {
          "description": "The name (project, location, cluster, node pool id) of the node poll to rollback upgrade. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
          "type": "string"
        },
        "respectPdb": {
          "description": "Option for rollback to ignore the PodDisruptionBudget. Default value is false.",
          "type": "boolean"
        },
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster to rollback. This field has been deprecated and replaced by the name field.",
          "type": "string"
        }
      },
      "id": "RollbackNodePoolUpgradeRequest"
    },
    "PubSub": {
      "properties": {
        "enabled": {
          "description": "Enable notifications for Pub/Sub.",
          "type": "boolean"
        },
        "filter": {
          "description": "Allows filtering to one or more specific event types. If no filter is specified, or if a filter is specified with no event types, all event types will be sent",
          "$ref": "Filter"
        },
        "topic": {
          "description": "The desired Pub/Sub topic to which notifications will be sent by GKE. Format is `projects/{project}/topics/{topic}`.",
          "type": "string"
        }
      },
      "description": "Pub/Sub specific notification config.",
      "id": "PubSub",
      "type": "object"
    },
    "KalmConfig": {
      "type": "object",
      "id": "KalmConfig",
      "description": "Configuration options for the KALM addon.",
      "properties": {
        "enabled": {
          "description": "Whether KALM is enabled for this cluster.",
          "type": "boolean"
        }
      }
    },
    "Operation": {
      "description": "This operation resource represents operations that may have happened or are happening on the cluster. All fields are output only.",
      "properties": {
        "location": {
          "type": "string",
          "description": "[Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides."
        },
        "detail": {
          "type": "string",
          "description": "Detailed operation progress, if available."
        },
        "zone": {
          "description": "The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the operation is taking place. This field is deprecated, use location instead.",
          "type": "string"
        },
        "clusterConditions": {
          "items": {
            "$ref": "StatusCondition"
          },
          "type": "array",
          "description": "Which conditions caused the current cluster state. Deprecated. Use field error instead."
        },
        "operationType": {
          "type": "string",
          "description": "The operation type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CREATE_CLUSTER",
            "DELETE_CLUSTER",
            "UPGRADE_MASTER",
            "UPGRADE_NODES",
            "REPAIR_CLUSTER",
            "UPDATE_CLUSTER",
            "CREATE_NODE_POOL",
            "DELETE_NODE_POOL",
            "SET_NODE_POOL_MANAGEMENT",
            "AUTO_REPAIR_NODES",
            "AUTO_UPGRADE_NODES",
            "SET_LABELS",
            "SET_MASTER_AUTH",
            "SET_NODE_POOL_SIZE",
            "SET_NETWORK_POLICY",
            "SET_MAINTENANCE_POLICY",
            "RESIZE_CLUSTER"
          ],
          "enumDescriptions": [
            "Not set.",
            "The cluster is being created. The cluster should be assumed to be unusable until the operation finishes. In the event of the operation failing, the cluster will enter the ERROR state and eventually be deleted.",
            "The cluster is being deleted. The cluster should be assumed to be unusable as soon as this operation starts. In the event of the operation failing, the cluster will enter the ERROR state and the deletion will be automatically retried until completed.",
            "The cluster version is being updated. Note that this includes \"upgrades\" to the same version, which are simply a recreation. This also includes [auto-upgrades](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-upgrades#upgrading_automatically). For more details, see [documentation on cluster upgrades](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-upgrades#cluster_upgrades).",
            "A node pool is being updated. Despite calling this an \"upgrade\", this includes most forms of updates to node pools. This also includes [auto-upgrades](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-upgrades). This operation sets the progress field and may be canceled. The upgrade strategy depends on [node pool configuration](https://cloud.google.com/kubernetes-engine/docs/concepts/node-pool-upgrade-strategies). The nodes are generally still usable during this operation.",
            "A problem has been detected with the control plane and is being repaired. This operation type is initiated by GKE. For more details, see [documentation on repairs](https://cloud.google.com/kubernetes-engine/docs/concepts/maintenance-windows-and-exclusions#repairs).",
            "The cluster is being updated. This is a broad category of operations and includes operations that only change metadata as well as those that must recreate the entire cluster. If the control plane must be recreated, this will cause temporary downtime for zonal clusters. Some features require recreating the nodes as well. Those will be recreated as separate operations and the update may not be completely functional until the node pools recreations finish. Node recreations will generally follow [maintenance policies](https://cloud.google.com/kubernetes-engine/docs/concepts/maintenance-windows-and-exclusions). Some GKE-initiated operations use this type. This includes certain types of auto-upgrades and incident mitigations.",
            "A node pool is being created. The node pool should be assumed to be unusable until this operation finishes. In the event of an error, the node pool may be partially created. If enabled, [node autoprovisioning](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning) may have automatically initiated such operations.",
            "The node pool is being deleted. The node pool should be assumed to be unusable as soon as this operation starts.",
            "The node pool's manamagent field is being updated. These operations only update metadata and may be concurrent with most other operations.",
            "A problem has been detected with nodes and [they are being repaired](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-repair). This operation type is initiated by GKE, typically automatically. This operation may be concurrent with other operations and there may be multiple repairs occurring on the same node pool.",
            "Unused. Automatic node upgrade uses UPGRADE_NODES.",
            "Unused. Updating labels uses UPDATE_CLUSTER.",
            "Unused. Updating master auth uses UPDATE_CLUSTER.",
            "The node pool is being resized. With the exception of resizing to or from size zero, the node pool is generally usable during this operation.",
            "Unused. Updating network policy uses UPDATE_CLUSTER.",
            "Unused. Updating maintenance policy uses UPDATE_CLUSTER.",
            "The control plane is being resized. This operation type is initiated by GKE. These operations are often performed preemptively to ensure that the control plane has sufficient resources and is not typically an indication of issues. For more details, see [documentation on resizes](https://cloud.google.com/kubernetes-engine/docs/concepts/maintenance-windows-and-exclusions#repairs)."
          ]
        },
        "startTime": {
          "type": "string",
          "description": "[Output only] The time the operation started, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."
        },
        "nodepoolConditions": {
          "items": {
            "$ref": "StatusCondition"
          },
          "type": "array",
          "description": "Which conditions caused the current node pool state. Deprecated. Use field error instead."
        },
        "error": {
          "description": "The error result of the operation in case of failure.",
          "$ref": "Status"
        },
        "targetLink": {
          "type": "string",
          "description": "Server-defined URI for the target of the operation. The format of this is a URI to the resource being modified (such as a cluster, node pool, or node). For node pool repairs, there may be multiple nodes being repaired, but only one will be the target. Examples: - ## `https://container.googleapis.com/v1/projects/123/locations/us-central1/clusters/my-cluster` ## `https://container.googleapis.com/v1/projects/123/zones/us-central1-c/clusters/my-cluster/nodePools/my-np` `https://container.googleapis.com/v1/projects/123/zones/us-central1-c/clusters/my-cluster/nodePools/my-np/node/my-node`"
        },
        "status": {
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed.",
            "The operation is aborting."
          ],
          "enum": [
            "STATUS_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE",
            "ABORTING"
          ],
          "description": "The current status of the operation."
        },
        "name": {
          "description": "The server-assigned ID for the operation.",
          "type": "string"
        },
        "progress": {
          "description": "Output only. [Output only] Progress information for an operation.",
          "readOnly": true,
          "$ref": "OperationProgress"
        },
        "selfLink": {
          "description": "Server-defined URI for the operation. Example: `https://container.googleapis.com/v1alpha1/projects/123/locations/us-central1/operations/operation-123`.",
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. If an error has occurred, a textual description of the error. Deprecated. Use field error instead.",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "description": "[Output only] The time the operation completed, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Operation"
    },
    "HorizontalPodAutoscaling": {
      "description": "Configuration options for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.",
      "properties": {
        "disabled": {
          "description": "Whether the Horizontal Pod Autoscaling feature is enabled in the cluster. When enabled, it ensures that metrics are collected into Stackdriver Monitoring.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "HorizontalPodAutoscaling"
    },
    "MasterAuthorizedNetworksConfig": {
      "type": "object",
      "description": "Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.",
      "properties": {
        "gcpPublicCidrsAccessEnabled": {
          "description": "Whether master is accessbile via Google Compute Engine Public IP addresses.",
          "type": "boolean"
        },
        "cidrBlocks": {
          "type": "array",
          "description": "cidr_blocks define up to 10 external networks that could access Kubernetes master through HTTPS.",
          "items": {
            "$ref": "CidrBlock"
          }
        },
        "enabled": {
          "description": "Whether or not master authorized networks is enabled.",
          "type": "boolean"
        }
      },
      "id": "MasterAuthorizedNetworksConfig"
    },
    "NetworkPerformanceConfig": {
      "id": "NetworkPerformanceConfig",
      "properties": {
        "externalIpEgressBandwidthTier": {
          "enum": [
            "TIER_UNSPECIFIED",
            "TIER_1"
          ],
          "enumDescriptions": [
            "Default value",
            "Higher bandwidth, actual values based on VM size."
          ],
          "type": "string",
          "description": "Specifies the network bandwidth tier for the NodePool for traffic to external/public IP addresses."
        },
        "totalEgressBandwidthTier": {
          "type": "string",
          "enum": [
            "TIER_UNSPECIFIED",
            "TIER_1"
          ],
          "enumDescriptions": [
            "Default value",
            "Higher bandwidth, actual values based on VM size."
          ],
          "description": "Specifies the total network bandwidth tier for the NodePool."
        }
      },
      "description": "Configuration of all network bandwidth tiers",
      "type": "object"
    },
    "ConfidentialNodes": {
      "type": "object",
      "description": "ConfidentialNodes is configuration for the confidential nodes feature, which makes nodes run on confidential VMs.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether Confidential Nodes feature is enabled."
        }
      },
      "id": "ConfidentialNodes"
    },
    "UpgradeAvailableEvent": {
      "description": "UpgradeAvailableEvent is a notification sent to customers when a new available version is released.",
      "type": "object",
      "properties": {
        "windowsVersions": {
          "description": "Windows node versions info.",
          "$ref": "WindowsVersions"
        },
        "releaseChannel": {
          "$ref": "ReleaseChannel",
          "description": "The release channel of the version. If empty, it means a non-channel release."
        },
        "version": {
          "type": "string",
          "description": "The release version available for upgrade."
        },
        "resourceType": {
          "enumDescriptions": [
            "Default value. This shouldn't be used.",
            "Master / control plane",
            "Node pool"
          ],
          "type": "string",
          "enum": [
            "UPGRADE_RESOURCE_TYPE_UNSPECIFIED",
            "MASTER",
            "NODE_POOL"
          ],
          "description": "The resource type of the release version."
        },
        "resource": {
          "description": "Optional relative path to the resource. For example, the relative path of the node pool.",
          "type": "string"
        }
      },
      "id": "UpgradeAvailableEvent"
    },
    "Metric": {
      "description": "Progress metric is (string, int|float|string) pair.",
      "properties": {
        "stringValue": {
          "type": "string",
          "description": "For metrics with custom values (ratios, visual progress, etc.)."
        },
        "name": {
          "type": "string",
          "description": "Required. Metric name, e.g., \"nodes total\", \"percent done\"."
        },
        "doubleValue": {
          "description": "For metrics with floating point value.",
          "type": "number",
          "format": "double"
        },
        "intValue": {
          "description": "For metrics with integer value.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "Metric",
      "type": "object"
    },
    "GkeBackupAgentConfig": {
      "type": "object",
      "description": "Configuration for the Backup for GKE Agent.",
      "properties": {
        "enabled": {
          "description": "Whether the Backup for GKE agent is enabled for this cluster.",
          "type": "boolean"
        }
      },
      "id": "GkeBackupAgentConfig"
    },
    "MaintenanceWindow": {
      "id": "MaintenanceWindow",
      "description": "MaintenanceWindow defines the maintenance window to be used for the cluster.",
      "properties": {
        "maintenanceExclusions": {
          "additionalProperties": {
            "$ref": "TimeWindow"
          },
          "type": "object",
          "description": "Exceptions to maintenance window. Non-emergency maintenance should not occur in these windows."
        },
        "recurringWindow": {
          "description": "RecurringWindow specifies some number of recurring time periods for maintenance to occur. The time windows may be overlapping. If no maintenance windows are set, maintenance can occur at any time.",
          "$ref": "RecurringTimeWindow"
        },
        "dailyMaintenanceWindow": {
          "$ref": "DailyMaintenanceWindow",
          "description": "DailyMaintenanceWindow specifies a daily maintenance operation window."
        }
      },
      "type": "object"
    },
    "IstioConfig": {
      "description": "Configuration options for Istio addon.",
      "properties": {
        "disabled": {
          "type": "boolean",
          "description": "Whether Istio is enabled for this cluster."
        },
        "auth": {
          "description": "The specified Istio auth mode, either none, or mutual TLS.",
          "enumDescriptions": [
            "auth not enabled",
            "auth mutual TLS enabled"
          ],
          "type": "string",
          "enum": [
            "AUTH_NONE",
            "AUTH_MUTUAL_TLS"
          ]
        }
      },
      "id": "IstioConfig",
      "type": "object"
    },
    "UpgradeSettings": {
      "description": "These upgrade settings configure the upgrade strategy for the node pool. Use strategy to switch between the strategies applied to the node pool. If the strategy is SURGE, use max_surge and max_unavailable to control the level of parallelism and the level of disruption caused by upgrade. 1. maxSurge controls the number of additional nodes that can be added to the node pool temporarily for the time of the upgrade to increase the number of available nodes. 2. maxUnavailable controls the number of nodes that can be simultaneously unavailable. 3. (maxUnavailable + maxSurge) determines the level of parallelism (how many nodes are being upgraded at the same time). If the strategy is BLUE_GREEN, use blue_green_settings to configure the blue-green upgrade related settings. 1. standard_rollout_policy is the default policy. The policy is used to control the way blue pool gets drained. The draining is executed in the batch mode. The batch size could be specified as either percentage of the node pool size or the number of nodes. batch_soak_duration is the soak time after each batch gets drained. 2. node_pool_soak_duration is the soak time after all blue nodes are drained. After this period, the blue pool nodes will be deleted.",
      "id": "UpgradeSettings",
      "properties": {
        "maxSurge": {
          "type": "integer",
          "description": "The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process.",
          "format": "int32"
        },
        "maxUnavailable": {
          "description": "The maximum number of nodes that can be simultaneously unavailable during the upgrade process. A node is considered available if its status is Ready.",
          "type": "integer",
          "format": "int32"
        },
        "strategy": {
          "enum": [
            "NODE_POOL_UPDATE_STRATEGY_UNSPECIFIED",
            "BLUE_GREEN",
            "SURGE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value if unset. GKE internally defaults the update strategy to SURGE for unspecified strategies.",
            "blue-green upgrade.",
            "SURGE is the traditional way of upgrading a node pool. max_surge and max_unavailable determines the level of upgrade parallelism."
          ],
          "description": "Update strategy of the node pool."
        },
        "blueGreenSettings": {
          "description": "Settings for blue-green upgrade strategy.",
          "$ref": "BlueGreenSettings"
        }
      },
      "type": "object"
    },
    "DatabaseEncryption": {
      "type": "object",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Name of CloudKMS key to use for the encryption of secrets in etcd. Ex. projects/my-project/locations/global/keyRings/my-ring/cryptoKeys/my-key"
        },
        "state": {
          "enumDescriptions": [
            "Should never be set",
            "Secrets in etcd are encrypted.",
            "Secrets in etcd are stored in plain text (at etcd level) - this is unrelated to Compute Engine level full disk encryption."
          ],
          "enum": [
            "UNKNOWN",
            "ENCRYPTED",
            "DECRYPTED"
          ],
          "description": "The desired state of etcd encryption.",
          "type": "string"
        }
      },
      "id": "DatabaseEncryption",
      "description": "Configuration of etcd encryption."
    },
    "ClientCertificateConfig": {
      "id": "ClientCertificateConfig",
      "type": "object",
      "description": "Configuration for client certificates on the cluster.",
      "properties": {
        "issueClientCertificate": {
          "type": "boolean",
          "description": "Issue a client certificate."
        }
      }
    },
    "NotificationConfig": {
      "description": "NotificationConfig is the configuration of notifications.",
      "id": "NotificationConfig",
      "properties": {
        "pubsub": {
          "$ref": "PubSub",
          "description": "Notification config for Pub/Sub."
        }
      },
      "type": "object"
    },
    "GcsFuseCsiDriverConfig": {
      "id": "GcsFuseCsiDriverConfig",
      "type": "object",
      "description": "Configuration for the Cloud Storage Fuse CSI driver.",
      "properties": {
        "enabled": {
          "description": "Whether the Cloud Storage Fuse CSI driver is enabled for this cluster.",
          "type": "boolean"
        }
      }
    },
    "BlueGreenInfo": {
      "type": "object",
      "id": "BlueGreenInfo",
      "description": "Information relevant to blue-green upgrade.",
      "properties": {
        "phase": {
          "type": "string",
          "enum": [
            "PHASE_UNSPECIFIED",
            "UPDATE_STARTED",
            "CREATING_GREEN_POOL",
            "CORDONING_BLUE_POOL",
            "DRAINING_BLUE_POOL",
            "NODE_POOL_SOAKING",
            "DELETING_BLUE_POOL",
            "ROLLBACK_STARTED"
          ],
          "enumDescriptions": [
            "Unspecified phase.",
            "blue-green upgrade has been initiated.",
            "Start creating green pool nodes.",
            "Start cordoning blue pool nodes.",
            "Start draining blue pool nodes.",
            "Start soaking time after draining entire blue pool.",
            "Start deleting blue nodes.",
            "Rollback has been initiated."
          ],
          "description": "Current blue-green upgrade phase."
        },
        "greenPoolVersion": {
          "type": "string",
          "description": "Version of green pool."
        },
        "bluePoolDeletionStartTime": {
          "description": "Time to start deleting blue pool to complete blue-green upgrade, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "type": "string"
        },
        "blueInstanceGroupUrls": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The resource URLs of the [managed instance groups] (/compute/docs/instance-groups/creating-groups-of-managed-instances) associated with blue pool."
        },
        "greenInstanceGroupUrls": {
          "description": "The resource URLs of the [managed instance groups] (/compute/docs/instance-groups/creating-groups-of-managed-instances) associated with green pool.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "SetNetworkPolicyRequest": {
      "type": "object",
      "description": "SetNetworkPolicyRequest enables/disables network policy for a cluster.",
      "id": "SetNetworkPolicyRequest",
      "properties": {
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
        },
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        },
        "networkPolicy": {
          "description": "Required. Configuration options for the NetworkPolicy feature.",
          "$ref": "NetworkPolicy"
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster name) of the cluster to set networking policy. Specified in the format `projects/*/locations/*/clusters/*`."
        }
      }
    },
    "GetJSONWebKeysResponse": {
      "description": "GetJSONWebKeysResponse is a valid JSON Web Key Set as specififed in rfc 7517",
      "properties": {
        "keys": {
          "items": {
            "$ref": "Jwk"
          },
          "description": "The public component of the keys used by the cluster to sign token requests.",
          "type": "array"
        },
        "cacheHeader": {
          "$ref": "HttpCacheControlResponseHeader",
          "description": "OnePlatform automatically extracts this field and uses it to set the HTTP Cache-Control header."
        }
      },
      "id": "GetJSONWebKeysResponse",
      "type": "object"
    },
    "EphemeralStorageConfig": {
      "type": "object",
      "properties": {
        "localSsdCount": {
          "format": "int32",
          "description": "Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.",
          "type": "integer"
        }
      },
      "id": "EphemeralStorageConfig",
      "description": "EphemeralStorageConfig contains configuration for the ephemeral storage filesystem."
    },
    "SandboxConfig": {
      "id": "SandboxConfig",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "UNSPECIFIED",
            "GVISOR"
          ],
          "enumDescriptions": [
            "Default value. This should not be used.",
            "Run sandbox using gvisor."
          ],
          "description": "Type of the sandbox to use for the node."
        },
        "sandboxType": {
          "type": "string",
          "description": "Type of the sandbox to use for the node (e.g. 'gvisor')"
        }
      },
      "description": "SandboxConfig contains configurations of the sandbox to use for the node.",
      "type": "object"
    },
    "ResourceLabels": {
      "description": "Collection of [GCP labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels).",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of node label keys and node label values."
        }
      },
      "id": "ResourceLabels",
      "type": "object"
    },
    "UpdateMasterRequest": {
      "id": "UpdateMasterRequest",
      "type": "object",
      "properties": {
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        },
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster) of the cluster to update. Specified in the format `projects/*/locations/*/clusters/*`."
        },
        "masterVersion": {
          "description": "Required. The Kubernetes version to change the master to. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"-\": picks the default Kubernetes version",
          "type": "string"
        }
      },
      "description": "UpdateMasterRequest updates the master of the cluster."
    },
    "SetNodePoolAutoscalingRequest": {
      "description": "SetNodePoolAutoscalingRequest sets the autoscaler settings of a node pool.",
      "properties": {
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
        },
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        },
        "nodePoolId": {
          "description": "Required. Deprecated. The name of the node pool to upgrade. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "clusterId": {
          "type": "string",
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field."
        },
        "autoscaling": {
          "description": "Required. Autoscaling configuration for the node pool.",
          "$ref": "NodePoolAutoscaling"
        },
        "name": {
          "description": "The name (project, location, cluster, node pool) of the node pool to set autoscaler settings. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
          "type": "string"
        }
      },
      "id": "SetNodePoolAutoscalingRequest",
      "type": "object"
    },
    "IntraNodeVisibilityConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enables intra node visibility for this cluster.",
          "type": "boolean"
        }
      },
      "id": "IntraNodeVisibilityConfig",
      "description": "IntraNodeVisibilityConfig contains the desired config of the intra-node visibility on this cluster."
    },
    "AdditionalPodRangesConfig": {
      "description": "AdditionalPodRangesConfig is the configuration for additional pod secondary ranges supporting the ClusterUpdate message.",
      "id": "AdditionalPodRangesConfig",
      "properties": {
        "podRangeNames": {
          "type": "array",
          "description": "Name for pod secondary ipv4 range which has the actual range defined ahead.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "ListUsableSubnetworksResponse": {
      "description": "ListUsableSubnetworksResponse is the response of ListUsableSubnetworksRequest.",
      "id": "ListUsableSubnetworksResponse",
      "type": "object",
      "properties": {
        "subnetworks": {
          "description": "A list of usable subnetworks in the specified network project.",
          "items": {
            "$ref": "UsableSubnetwork"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "This token allows you to get the next page of results for list requests. If the number of results is larger than `page_size`, use the `next_page_token` as a value for the query parameter `page_token` in the next request. The value will become empty when there are no more pages.",
          "type": "string"
        }
      }
    },
    "ListOperationsResponse": {
      "properties": {
        "missingZones": {
          "description": "If any zones are listed here, the list of operations returned may be missing the operations from those zones.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations in the project in the specified zone."
        }
      },
      "description": "ListOperationsResponse is the result of ListOperationsRequest.",
      "type": "object",
      "id": "ListOperationsResponse"
    },
    "UpdateInfo": {
      "properties": {
        "blueGreenInfo": {
          "description": "Information of a blue-green upgrade.",
          "$ref": "BlueGreenInfo"
        }
      },
      "description": "UpdateInfo contains resource (instance groups, etc), status and other intermediate information relevant to a node pool upgrade.",
      "type": "object",
      "id": "UpdateInfo"
    },
    "Empty": {
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "ResourceLimit": {
      "type": "object",
      "description": "Contains information about amount of some resource in the cluster. For memory, value should be in GB.",
      "properties": {
        "maximum": {
          "type": "string",
          "format": "int64",
          "description": "Maximum amount of the resource in the cluster."
        },
        "resourceType": {
          "type": "string",
          "description": "Resource name \"cpu\", \"memory\" or gpu-specific string."
        },
        "minimum": {
          "type": "string",
          "description": "Minimum amount of the resource in the cluster.",
          "format": "int64"
        }
      },
      "id": "ResourceLimit"
    },
    "NodeConfigDefaults": {
      "description": "Subset of NodeConfig message that has defaults.",
      "id": "NodeConfigDefaults",
      "properties": {
        "gcfsConfig": {
          "description": "GCFS (Google Container File System, also known as Riptide) options.",
          "$ref": "GcfsConfig"
        },
        "loggingConfig": {
          "$ref": "NodePoolLoggingConfig",
          "description": "Logging configuration for node pools."
        }
      },
      "type": "object"
    },
    "AddonsConfig": {
      "id": "AddonsConfig",
      "properties": {
        "horizontalPodAutoscaling": {
          "description": "Configuration for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.",
          "$ref": "HorizontalPodAutoscaling"
        },
        "kubernetesDashboard": {
          "description": "Configuration for the Kubernetes Dashboard. This addon is deprecated, and will be disabled in 1.15. It is recommended to use the Cloud Console to manage and monitor your Kubernetes clusters, workloads and applications. For more information, see: https://cloud.google.com/kubernetes-engine/docs/concepts/dashboards",
          "$ref": "KubernetesDashboard"
        },
        "kalmConfig": {
          "$ref": "KalmConfig",
          "description": "Configuration for the KALM addon, which manages the lifecycle of k8s applications."
        },
        "gcsFuseCsiDriverConfig": {
          "description": "Configuration for the Cloud Storage Fuse CSI driver.",
          "$ref": "GcsFuseCsiDriverConfig"
        },
        "istioConfig": {
          "$ref": "IstioConfig",
          "description": "Configuration for Istio, an open platform to connect, manage, and secure microservices."
        },
        "dnsCacheConfig": {
          "$ref": "DnsCacheConfig",
          "description": "Configuration for NodeLocalDNS, a dns cache running on cluster nodes"
        },
        "networkPolicyConfig": {
          "$ref": "NetworkPolicyConfig",
          "description": "Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for the nodes."
        },
        "gcePersistentDiskCsiDriverConfig": {
          "description": "Configuration for the Compute Engine Persistent Disk CSI driver.",
          "$ref": "GcePersistentDiskCsiDriverConfig"
        },
        "gkeBackupAgentConfig": {
          "$ref": "GkeBackupAgentConfig",
          "description": "Configuration for the Backup for GKE agent addon."
        },
        "httpLoadBalancing": {
          "description": "Configuration for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.",
          "$ref": "HttpLoadBalancing"
        },
        "gcpFilestoreCsiDriverConfig": {
          "description": "Configuration for the GCP Filestore CSI driver.",
          "$ref": "GcpFilestoreCsiDriverConfig"
        },
        "configConnectorConfig": {
          "description": "Configuration for the ConfigConnector add-on, a Kubernetes extension to manage hosted GCP services through the Kubernetes API",
          "$ref": "ConfigConnectorConfig"
        },
        "cloudRunConfig": {
          "description": "Configuration for the Cloud Run addon. The `IstioConfig` addon must be enabled in order to enable Cloud Run addon. This option can only be enabled at cluster creation time.",
          "$ref": "CloudRunConfig"
        }
      },
      "description": "Configuration for the addons that can be automatically spun up in the cluster, enabling additional functionality.",
      "type": "object"
    },
    "PodCIDROverprovisionConfig": {
      "description": "[PRIVATE FIELD] Config for pod CIDR size overprovisioning.",
      "properties": {
        "disable": {
          "type": "boolean",
          "description": "Whether Pod CIDR overprovisioning is disabled. Note: Pod CIDR overprovisioning is enabled by default."
        }
      },
      "id": "PodCIDROverprovisionConfig",
      "type": "object"
    },
    "MonitoringConfig": {
      "properties": {
        "componentConfig": {
          "description": "Monitoring components configuration",
          "$ref": "MonitoringComponentConfig"
        },
        "managedPrometheusConfig": {
          "description": "Enable Google Cloud Managed Service for Prometheus in the cluster.",
          "$ref": "ManagedPrometheusConfig"
        }
      },
      "id": "MonitoringConfig",
      "description": "MonitoringConfig is cluster monitoring configuration.",
      "type": "object"
    },
    "VirtualNIC": {
      "type": "object",
      "description": "Configuration of gVNIC feature.",
      "properties": {
        "enabled": {
          "description": "Whether gVNIC features are enabled in the node pool.",
          "type": "boolean"
        }
      },
      "id": "VirtualNIC"
    },
    "MasterAuth": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "The username to use for HTTP basic authentication to the master endpoint. For clusters v1.6.0 and later, basic authentication can be disabled by leaving username unspecified (or setting it to the empty string). Warning: basic authentication is deprecated, and will be removed in GKE control plane versions 1.19 and newer. For a list of recommended authentication methods, see: https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication"
        },
        "clusterCaCertificate": {
          "type": "string"
        },
        "clientCertificate": {
          "description": "[Output only] Base64-encoded public certificate used by clients to authenticate to the cluster endpoint.",
          "type": "string"
        },
        "clientCertificateConfig": {
          "$ref": "ClientCertificateConfig",
          "description": "Configuration for client certificate authentication on the cluster. For clusters before v1.12, if no configuration is specified, a client certificate is issued."
        },
        "clientKey": {
          "type": "string",
          "description": "[Output only] Base64-encoded private key used by clients to authenticate to the cluster endpoint."
        },
        "password": {
          "description": "The password to use for HTTP basic authentication to the master endpoint. Because the master endpoint is open to the Internet, you should create a strong password. If a password is provided for cluster creation, username must be non-empty. Warning: basic authentication is deprecated, and will be removed in GKE control plane versions 1.19 and newer. For a list of recommended authentication methods, see: https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication",
          "type": "string"
        }
      },
      "id": "MasterAuth",
      "description": "The authentication information for accessing the master endpoint. Authentication can be done using HTTP basic auth or using client certificates."
    },
    "ClusterUpdate": {
      "properties": {
        "desiredNodePoolId": {
          "description": "The node pool to be upgraded. This field is mandatory if \"desired_node_version\", \"desired_image_family\", \"desired_node_pool_autoscaling\", or \"desired_workload_metadata_config\" is specified and there is more than one node pool on the cluster.",
          "type": "string"
        },
        "desiredPrivateClusterConfig": {
          "description": "The desired private cluster configuration.",
          "$ref": "PrivateClusterConfig"
        },
        "desiredMasterAuthorizedNetworksConfig": {
          "description": "The desired configuration options for master authorized networks feature.",
          "$ref": "MasterAuthorizedNetworksConfig"
        },
        "desiredServiceExternalIpsConfig": {
          "description": "ServiceExternalIPsConfig specifies the config for the use of Services with ExternalIPs field.",
          "$ref": "ServiceExternalIPsConfig"
        },
        "desiredPrivateIpv6GoogleAccess": {
          "enumDescriptions": [
            "Default value. Same as DISABLED",
            "No private access to or from Google Services",
            "Enables private IPv6 access to Google Services from GKE",
            "Enables private IPv6 access to and from Google Services"
          ],
          "description": "The desired state of IPv6 connectivity to Google Services.",
          "type": "string",
          "enum": [
            "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED",
            "PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED",
            "PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE",
            "PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL"
          ]
        },
        "desiredMasterVersion": {
          "type": "string",
          "description": "The Kubernetes version to change the master to. The only valid value is the latest supported version. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"-\": picks the default Kubernetes version"
        },
        "desiredDatabaseEncryption": {
          "$ref": "DatabaseEncryption",
          "description": "Configuration of etcd encryption."
        },
        "additionalPodRangesConfig": {
          "$ref": "AdditionalPodRangesConfig",
          "description": "The additional pod ranges to be added to the cluster. These pod ranges can be used by node pools to allocate pod IPs."
        },
        "removedAdditionalPodRangesConfig": {
          "$ref": "AdditionalPodRangesConfig",
          "description": "The additional pod ranges that are to be removed from the cluster. The pod ranges specified here must have been specified earlier in the 'additional_pod_ranges_config' argument."
        },
        "desiredNodeVersion": {
          "description": "The Kubernetes version to change the nodes to (typically an upgrade). Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"-\": picks the Kubernetes master version",
          "type": "string"
        },
        "desiredReleaseChannel": {
          "description": "The desired release channel configuration.",
          "$ref": "ReleaseChannel"
        },
        "desiredIntraNodeVisibilityConfig": {
          "description": "The desired config of Intra-node visibility.",
          "$ref": "IntraNodeVisibilityConfig"
        },
        "desiredNotificationConfig": {
          "description": "The desired notification configuration.",
          "$ref": "NotificationConfig"
        },
        "desiredFleet": {
          "$ref": "Fleet",
          "description": "The desired fleet configuration for the cluster."
        },
        "desiredL4ilbSubsettingConfig": {
          "description": "The desired L4 Internal Load Balancer Subsetting configuration.",
          "$ref": "ILBSubsettingConfig"
        },
        "desiredShieldedNodes": {
          "description": "Configuration for Shielded Nodes.",
          "$ref": "ShieldedNodes"
        },
        "desiredGatewayApiConfig": {
          "$ref": "GatewayAPIConfig",
          "description": "The desired config of Gateway API on this cluster."
        },
        "desiredPodSecurityPolicyConfig": {
          "description": "The desired configuration options for the PodSecurityPolicy feature.",
          "$ref": "PodSecurityPolicyConfig"
        },
        "desiredResourceUsageExportConfig": {
          "description": "The desired configuration for exporting resource usage.",
          "$ref": "ResourceUsageExportConfig"
        },
        "desiredNodePoolLoggingConfig": {
          "description": "The desired node pool logging configuration defaults for the cluster.",
          "$ref": "NodePoolLoggingConfig"
        },
        "desiredWorkloadAltsConfig": {
          "description": "Configuration for direct-path (via ALTS) with workload identity.",
          "$ref": "WorkloadALTSConfig"
        },
        "desiredMeshCertificates": {
          "$ref": "MeshCertificates",
          "description": "Configuration for issuance of mTLS keys and certificates to Kubernetes pods."
        },
        "desiredNodePoolAutoConfigNetworkTags": {
          "$ref": "NetworkTags",
          "description": "The desired network tags that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled clusters."
        },
        "desiredWorkloadIdentityConfig": {
          "$ref": "WorkloadIdentityConfig",
          "description": "Configuration for Workload Identity."
        },
        "desiredClusterTelemetry": {
          "$ref": "ClusterTelemetry",
          "description": "The desired telemetry integration for the cluster."
        },
        "desiredLoggingConfig": {
          "description": "The desired logging configuration.",
          "$ref": "LoggingConfig"
        },
        "desiredCostManagementConfig": {
          "description": "The desired configuration for the fine-grained cost management feature.",
          "$ref": "CostManagementConfig"
        },
        "desiredMaster": {
          "description": "Configuration for master components.",
          "$ref": "Master"
        },
        "desiredLoggingService": {
          "type": "string",
          "description": "The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions."
        },
        "desiredProtectConfig": {
          "description": "Enable/Disable Protect API features for the cluster.",
          "$ref": "ProtectConfig"
        },
        "desiredWorkloadCertificates": {
          "description": "Configuration for issuance of mTLS keys and certificates to Kubernetes pods.",
          "$ref": "WorkloadCertificates"
        },
        "desiredMonitoringConfig": {
          "$ref": "MonitoringConfig",
          "description": "The desired monitoring configuration."
        },
        "desiredGcfsConfig": {
          "$ref": "GcfsConfig",
          "description": "The desired GCFS config for the cluster."
        },
        "desiredTpuConfig": {
          "$ref": "TpuConfig",
          "description": "The desired Cloud TPU configuration."
        },
        "desiredBinaryAuthorization": {
          "$ref": "BinaryAuthorization",
          "description": "The desired configuration options for the Binary Authorization feature."
        },
        "desiredDatapathProvider": {
          "description": "The desired datapath provider for the cluster.",
          "enum": [
            "DATAPATH_PROVIDER_UNSPECIFIED",
            "LEGACY_DATAPATH",
            "ADVANCED_DATAPATH"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Use the IPTables implementation based on kube-proxy.",
            "Use the eBPF based GKE Dataplane V2 with additional features. See the [GKE Dataplane V2 documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/dataplane-v2) for more."
          ]
        },
        "desiredLocations": {
          "type": "array",
          "description": "The desired list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This list must always include the cluster's primary zone. Warning: changing cluster locations will update the locations of all node pools and will result in nodes being added and/or removed.",
          "items": {
            "type": "string"
          }
        },
        "etag": {
          "type": "string",
          "description": "The current etag of the cluster. If an etag is provided and does not match the current etag of the cluster, update will be blocked and an ABORTED error will be returned."
        },
        "desiredDnsConfig": {
          "description": "DNSConfig contains clusterDNS config for this cluster.",
          "$ref": "DNSConfig"
        },
        "desiredMonitoringService": {
          "description": "The monitoring service the cluster should use to write metrics. Currently available options: * \"monitoring.googleapis.com/kubernetes\" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.",
          "type": "string"
        },
        "desiredIdentityServiceConfig": {
          "$ref": "IdentityServiceConfig",
          "description": "The desired Identity Service component configuration."
        },
        "desiredVerticalPodAutoscaling": {
          "description": "Cluster-level Vertical Pod Autoscaling configuration.",
          "$ref": "VerticalPodAutoscaling"
        },
        "desiredNodePoolAutoscaling": {
          "$ref": "NodePoolAutoscaling",
          "description": "Autoscaler configuration for the node pool specified in desired_node_pool_id. If there is only one pool in the cluster and desired_node_pool_id is not provided then the change applies to that single node pool."
        },
        "desiredAuthenticatorGroupsConfig": {
          "description": "AuthenticatorGroupsConfig specifies the config for the cluster security groups settings.",
          "$ref": "AuthenticatorGroupsConfig"
        },
        "desiredAddonsConfig": {
          "$ref": "AddonsConfig",
          "description": "Configurations for the various addons available to run in the cluster."
        },
        "desiredDefaultSnatStatus": {
          "$ref": "DefaultSnatStatus",
          "description": "The desired status of whether to disable default sNAT for this cluster."
        },
        "desiredClusterAutoscaling": {
          "$ref": "ClusterAutoscaling",
          "description": "Cluster-level autoscaling configuration."
        },
        "desiredImageType": {
          "description": "The desired image type for the node pool. NOTE: Set the \"desired_node_pool\" field as well.",
          "type": "string"
        },
        "desiredEnablePrivateEndpoint": {
          "type": "boolean",
          "description": "Enable/Disable private endpoint for the cluster's master."
        },
        "desiredStackType": {
          "enum": [
            "STACK_TYPE_UNSPECIFIED",
            "IPV4",
            "IPV4_IPV6"
          ],
          "description": "The desired stack type of the cluster. If a stack type is provided and does not match the current stack type of the cluster, update will attempt to change the stack type to the new type.",
          "enumDescriptions": [
            "By default, the clusters will be IPV4 only",
            "The value used if the cluster is a IPV4 only",
            "The value used if the cluster is a dual stack cluster"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "id": "ClusterUpdate",
      "description": "ClusterUpdate describes an update to the cluster. Exactly one update can be applied to a cluster with each request, so at most one field can be provided."
    },
    "BlueGreenSettings": {
      "type": "object",
      "description": "Settings for blue-green upgrade.",
      "properties": {
        "standardRolloutPolicy": {
          "description": "Standard policy for the blue-green upgrade.",
          "$ref": "StandardRolloutPolicy"
        },
        "nodePoolSoakDuration": {
          "type": "string",
          "format": "google-duration",
          "description": "Time needed after draining entire blue pool. After this period, blue pool will be cleaned up."
        }
      },
      "id": "BlueGreenSettings"
    },
    "Status": {
      "id": "Status",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "ReservationAffinity": {
      "type": "object",
      "id": "ReservationAffinity",
      "properties": {
        "key": {
          "type": "string",
          "description": "Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify \"compute.googleapis.com/reservation-name\" as the key and specify the name of your reservation as its value."
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Corresponds to the label value(s) of reservation resource(s)."
        },
        "consumeReservationType": {
          "description": "Corresponds to the type of reservation consumption.",
          "enumDescriptions": [
            "Default value. This should not be used.",
            "Do not consume from any reserved capacity.",
            "Consume any reservation available.",
            "Must consume from a specific reservation. Must specify key value fields for specifying the reservations."
          ],
          "type": "string",
          "enum": [
            "UNSPECIFIED",
            "NO_RESERVATION",
            "ANY_RESERVATION",
            "SPECIFIC_RESERVATION"
          ]
        }
      },
      "description": "[ReservationAffinity](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) is the configuration of desired reservation which instances could take capacity from."
    },
    "KubernetesDashboard": {
      "properties": {
        "disabled": {
          "description": "Whether the Kubernetes Dashboard is enabled for this cluster.",
          "type": "boolean"
        }
      },
      "id": "KubernetesDashboard",
      "type": "object",
      "description": "Configuration for the Kubernetes Dashboard."
    },
    "ProtectConfig": {
      "id": "ProtectConfig",
      "type": "object",
      "properties": {
        "workloadVulnerabilityMode": {
          "enum": [
            "WORKLOAD_VULNERABILITY_MODE_UNSPECIFIED",
            "DISABLED",
            "BASIC"
          ],
          "type": "string",
          "description": "Sets which mode to use for Protect workload vulnerability scanning feature.",
          "enumDescriptions": [
            "Default value not specified.",
            "Disables Workload Vulnerability Scanning feature on the cluster.",
            "Applies basic vulnerability scanning settings for cluster workloads."
          ]
        },
        "workloadConfig": {
          "description": "WorkloadConfig defines which actions are enabled for a cluster's workload configurations.",
          "$ref": "WorkloadConfig"
        }
      },
      "description": "ProtectConfig defines the flags needed to enable/disable features for the Protect API."
    },
    "WindowsNodeConfig": {
      "type": "object",
      "description": "Parameters that can be configured on Windows nodes. Windows Node Config that define the parameters that will be used to configure the Windows node pool settings",
      "properties": {
        "osVersion": {
          "type": "string",
          "description": "OSVersion specifies the Windows node config to be used on the node",
          "enumDescriptions": [
            "When OSVersion is not specified",
            "LTSC2019 specifies to use LTSC2019 as the Windows Servercore Base Image",
            "LTSC2022 specifies to use LTSC2022 as the Windows Servercore Base Image"
          ],
          "enum": [
            "OS_VERSION_UNSPECIFIED",
            "OS_VERSION_LTSC2019",
            "OS_VERSION_LTSC2022"
          ]
        }
      },
      "id": "WindowsNodeConfig"
    },
    "ManagedPrometheusConfig": {
      "properties": {
        "enabled": {
          "description": "Enable Managed Collection.",
          "type": "boolean"
        }
      },
      "description": "ManagedPrometheusConfig defines the configuration for Google Cloud Managed Service for Prometheus.",
      "type": "object",
      "id": "ManagedPrometheusConfig"
    },
    "GcpFilestoreCsiDriverConfig": {
      "description": "Configuration for the GCP Filestore CSI driver.",
      "id": "GcpFilestoreCsiDriverConfig",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether the GCP Filestore CSI driver is enabled for this cluster.",
          "type": "boolean"
        }
      }
    },
    "AutoprovisioningNodePoolDefaults": {
      "id": "AutoprovisioningNodePoolDefaults",
      "description": "AutoprovisioningNodePoolDefaults contains defaults for a node pool created by NAP.",
      "properties": {
        "diskSizeGb": {
          "format": "int32",
          "description": "Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.",
          "type": "integer"
        },
        "bootDiskKmsKey": {
          "description": " The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption",
          "type": "string"
        },
        "management": {
          "$ref": "NodeManagement",
          "description": "NodeManagement configuration for this NodePool."
        },
        "oauthScopes": {
          "type": "array",
          "description": "The set of Google API scopes to be made available on all of the node VMs under the \"default\" service account. The following scopes are recommended, but not required, and by default are not included: * `https://www.googleapis.com/auth/compute` is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only` is required for communicating with **gcr.io** (the [Google Container Registry](https://cloud.google.com/container-registry/)). If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.",
          "items": {
            "type": "string"
          }
        },
        "upgradeSettings": {
          "$ref": "UpgradeSettings",
          "description": "Upgrade settings control disruption and speed of the upgrade."
        },
        "imageType": {
          "type": "string",
          "description": "The image type to use for NAP created node. Please see https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for available image types."
        },
        "minCpuPlatform": {
          "description": "Deprecated. Minimum CPU platform to be used for NAP created node pools. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: Intel Haswell or minCpuPlatform: Intel Sandy Bridge. For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform). This field is deprecated, min_cpu_platform should be specified using `cloud.google.com/requested-min-cpu-platform` label selector on the pod. To unset the min cpu platform field pass \"automatic\" as field value.",
          "type": "string"
        },
        "shieldedInstanceConfig": {
          "$ref": "ShieldedInstanceConfig",
          "description": "Shielded Instance options."
        },
        "serviceAccount": {
          "type": "string",
          "description": "The Google Cloud Platform Service Account to be used by the node VMs. Specify the email address of the Service Account; otherwise, if no Service Account is specified, the \"default\" service account is used."
        },
        "diskType": {
          "description": "Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') If unspecified, the default disk type is 'pd-standard'",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListClustersResponse": {
      "description": "ListClustersResponse is the result of ListClustersRequest.",
      "type": "object",
      "properties": {
        "clusters": {
          "items": {
            "$ref": "Cluster"
          },
          "type": "array",
          "description": "A list of clusters in the project in the specified zone, or across all ones."
        },
        "missingZones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If any zones are listed here, the list of clusters returned may be missing those zones."
        }
      },
      "id": "ListClustersResponse"
    },
    "MeshCertificates": {
      "type": "object",
      "description": "Configuration for issuance of mTLS keys and certificates to Kubernetes pods.",
      "id": "MeshCertificates",
      "properties": {
        "enableCertificates": {
          "type": "boolean",
          "description": "enable_certificates controls issuance of workload mTLS certificates. If set, the GKE Workload Identity Certificates controller and node agent will be deployed in the cluster, which can then be configured by creating a WorkloadCertificateConfig Custom Resource. Requires Workload Identity (workload_pool must be non-empty)."
        }
      }
    },
    "Jwk": {
      "id": "Jwk",
      "properties": {
        "crv": {
          "description": "Used for ECDSA keys.",
          "type": "string"
        },
        "x": {
          "description": "Used for ECDSA keys.",
          "type": "string"
        },
        "use": {
          "type": "string",
          "description": "Permitted uses for the public keys."
        },
        "y": {
          "description": "Used for ECDSA keys.",
          "type": "string"
        },
        "kty": {
          "type": "string",
          "description": "Key Type."
        },
        "e": {
          "type": "string",
          "description": "Used for RSA keys."
        },
        "n": {
          "type": "string",
          "description": "Used for RSA keys."
        },
        "alg": {
          "type": "string",
          "description": "Algorithm."
        },
        "kid": {
          "type": "string",
          "description": "Key ID."
        }
      },
      "description": "Jwk is a JSON Web Key as specified in RFC 7517",
      "type": "object"
    },
    "DNSConfig": {
      "properties": {
        "clusterDnsScope": {
          "type": "string",
          "description": "cluster_dns_scope indicates the scope of access to cluster DNS records.",
          "enum": [
            "DNS_SCOPE_UNSPECIFIED",
            "CLUSTER_SCOPE",
            "VPC_SCOPE"
          ],
          "enumDescriptions": [
            "Default value, will be inferred as cluster scope.",
            "DNS records are accessible from within the cluster.",
            "DNS records are accessible from within the VPC."
          ]
        },
        "clusterDnsDomain": {
          "description": "cluster_dns_domain is the suffix used for all cluster service records.",
          "type": "string"
        },
        "clusterDns": {
          "enum": [
            "PROVIDER_UNSPECIFIED",
            "PLATFORM_DEFAULT",
            "CLOUD_DNS"
          ],
          "enumDescriptions": [
            "Default value",
            "Use GKE default DNS provider(kube-dns) for DNS resolution.",
            "Use CloudDNS for DNS resolution."
          ],
          "type": "string",
          "description": "cluster_dns indicates which in-cluster DNS provider should be used."
        }
      },
      "id": "DNSConfig",
      "type": "object",
      "description": "DNSConfig contains the desired set of options for configuring clusterDNS."
    },
    "StatusCondition": {
      "type": "object",
      "id": "StatusCondition",
      "properties": {
        "message": {
          "type": "string",
          "description": "Human-friendly representation of the condition"
        },
        "canonicalCode": {
          "description": "Canonical code of the condition.",
          "type": "string",
          "enumDescriptions": [
            "Not an error; returned on success. HTTP Mapping: 200 OK",
            "The operation was cancelled, typically by the caller. HTTP Mapping: 499 Client Closed Request",
            "Unknown error. For example, this error may be returned when a `Status` value received from another address space belongs to an error space that is not known in this address space. Also errors raised by APIs that do not return enough error information may be converted to this error. HTTP Mapping: 500 Internal Server Error",
            "The client specified an invalid argument. Note that this differs from `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments that are problematic regardless of the state of the system (e.g., a malformed file name). HTTP Mapping: 400 Bad Request",
            "The deadline expired before the operation could complete. For operations that change the state of the system, this error may be returned even if the operation has completed successfully. For example, a successful response from a server could have been delayed long enough for the deadline to expire. HTTP Mapping: 504 Gateway Timeout",
            "Some requested entity (e.g., file or directory) was not found. Note to server developers: if a request is denied for an entire class of users, such as gradual feature rollout or undocumented allowlist, `NOT_FOUND` may be used. If a request is denied for some users within a class of users, such as user-based access control, `PERMISSION_DENIED` must be used. HTTP Mapping: 404 Not Found",
            "The entity that a client attempted to create (e.g., file or directory) already exists. HTTP Mapping: 409 Conflict",
            "The caller does not have permission to execute the specified operation. `PERMISSION_DENIED` must not be used for rejections caused by exhausting some resource (use `RESOURCE_EXHAUSTED` instead for those errors). `PERMISSION_DENIED` must not be used if the caller can not be identified (use `UNAUTHENTICATED` instead for those errors). This error code does not imply the request is valid or the requested entity exists or satisfies other pre-conditions. HTTP Mapping: 403 Forbidden",
            "The request does not have valid authentication credentials for the operation. HTTP Mapping: 401 Unauthorized",
            "Some resource has been exhausted, perhaps a per-user quota, or perhaps the entire file system is out of space. HTTP Mapping: 429 Too Many Requests",
            "The operation was rejected because the system is not in a state required for the operation's execution. For example, the directory to be deleted is non-empty, an rmdir operation is applied to a non-directory, etc. Service implementors can use the following guidelines to decide between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`: (a) Use `UNAVAILABLE` if the client can retry just the failing call. (b) Use `ABORTED` if the client should retry at a higher level. For example, when a client-specified test-and-set fails, indicating the client should restart a read-modify-write sequence. (c) Use `FAILED_PRECONDITION` if the client should not retry until the system state has been explicitly fixed. For example, if an \"rmdir\" fails because the directory is non-empty, `FAILED_PRECONDITION` should be returned since the client should not retry unless the files are deleted from the directory. HTTP Mapping: 400 Bad Request",
            "The operation was aborted, typically due to a concurrency issue such as a sequencer check failure or transaction abort. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 409 Conflict",
            "The operation was attempted past the valid range. E.g., seeking or reading past end-of-file. Unlike `INVALID_ARGUMENT`, this error indicates a problem that may be fixed if the system state changes. For example, a 32-bit file system will generate `INVALID_ARGUMENT` if asked to read at an offset that is not in the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked to read from an offset past the current file size. There is a fair bit of overlap between `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend using `OUT_OF_RANGE` (the more specific error) when it applies so that callers who are iterating through a space can easily look for an `OUT_OF_RANGE` error to detect when they are done. HTTP Mapping: 400 Bad Request",
            "The operation is not implemented or is not supported/enabled in this service. HTTP Mapping: 501 Not Implemented",
            "Internal errors. This means that some invariants expected by the underlying system have been broken. This error code is reserved for serious errors. HTTP Mapping: 500 Internal Server Error",
            "The service is currently unavailable. This is most likely a transient condition, which can be corrected by retrying with a backoff. Note that it is not always safe to retry non-idempotent operations. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 503 Service Unavailable",
            "Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal Server Error"
          ],
          "enum": [
            "OK",
            "CANCELLED",
            "UNKNOWN",
            "INVALID_ARGUMENT",
            "DEADLINE_EXCEEDED",
            "NOT_FOUND",
            "ALREADY_EXISTS",
            "PERMISSION_DENIED",
            "UNAUTHENTICATED",
            "RESOURCE_EXHAUSTED",
            "FAILED_PRECONDITION",
            "ABORTED",
            "OUT_OF_RANGE",
            "UNIMPLEMENTED",
            "INTERNAL",
            "UNAVAILABLE",
            "DATA_LOSS"
          ]
        },
        "code": {
          "enum": [
            "UNKNOWN",
            "GCE_STOCKOUT",
            "GKE_SERVICE_ACCOUNT_DELETED",
            "GCE_QUOTA_EXCEEDED",
            "SET_BY_OPERATOR",
            "CLOUD_KMS_KEY_ERROR",
            "CA_EXPIRING"
          ],
          "enumDescriptions": [
            "UNKNOWN indicates a generic condition.",
            "GCE_STOCKOUT indicates that Google Compute Engine resources are temporarily unavailable.",
            "GKE_SERVICE_ACCOUNT_DELETED indicates that the user deleted their robot service account.",
            "Google Compute Engine quota was exceeded.",
            "Cluster state was manually changed by an SRE due to a system logic error.",
            "Unable to perform an encrypt operation against the CloudKMS key used for etcd level encryption.",
            "Cluster CA is expiring soon. More codes TBA"
          ],
          "type": "string",
          "description": "Machine-friendly representation of the condition Deprecated. Use canonical_code instead."
        }
      },
      "description": "StatusCondition describes why a cluster or a node pool has a certain status (e.g., ERROR or DEGRADED)."
    },
    "IdentityServiceConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable the Identity Service component"
        }
      },
      "description": "IdentityServiceConfig is configuration for Identity Service which allows customers to use external identity providers with the K8S API",
      "id": "IdentityServiceConfig"
    },
    "SetLegacyAbacRequest": {
      "type": "object",
      "id": "SetLegacyAbacRequest",
      "properties": {
        "clusterId": {
          "type": "string",
          "description": "Required. Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field."
        },
        "enabled": {
          "description": "Required. Whether ABAC authorization will be enabled in the cluster.",
          "type": "boolean"
        },
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster name) of the cluster to set legacy abac. Specified in the format `projects/*/locations/*/clusters/*`."
        },
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
        }
      },
      "description": "SetLegacyAbacRequest enables or disables the ABAC authorization mechanism for a cluster."
    },
    "SetAddonsConfigRequest": {
      "id": "SetAddonsConfigRequest",
      "properties": {
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
        },
        "name": {
          "description": "The name (project, location, cluster) of the cluster to set addons. Specified in the format `projects/*/locations/*/clusters/*`.",
          "type": "string"
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "addonsConfig": {
          "$ref": "AddonsConfig",
          "description": "Required. The desired configurations for the various addons available to run in the cluster."
        },
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "SetAddonsRequest sets the addons associated with the cluster."
    },
    "CompleteIPRotationRequest": {
      "id": "CompleteIPRotationRequest",
      "properties": {
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "name": {
          "description": "The name (project, location, cluster name) of the cluster to complete IP rotation. Specified in the format `projects/*/locations/*/clusters/*`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "CompleteIPRotationRequest moves the cluster master back into single-IP mode."
    },
    "OperationProgress": {
      "description": "Information about operation (or operation stage) progress.",
      "type": "object",
      "id": "OperationProgress",
      "properties": {
        "name": {
          "type": "string",
          "description": "A non-parameterized string describing an operation stage. Unset for single-stage operations."
        },
        "status": {
          "enum": [
            "STATUS_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE",
            "ABORTING"
          ],
          "enumDescriptions": [
            "Not set.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed.",
            "The operation is aborting."
          ],
          "type": "string",
          "description": "Status of an operation stage. Unset for single-stage operations."
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "Metric"
          },
          "description": "Progress metric bundle, for example: metrics: [{name: \"nodes done\", int_value: 15}, {name: \"nodes total\", int_value: 32}] or metrics: [{name: \"progress\", double_value: 0.56}, {name: \"progress scale\", double_value: 1.0}]"
        },
        "stages": {
          "type": "array",
          "description": "Substages of an operation or a stage.",
          "items": {
            "$ref": "OperationProgress"
          }
        }
      }
    },
    "WorkloadMetadataConfig": {
      "properties": {
        "nodeMetadata": {
          "enumDescriptions": [
            "Not set.",
            "Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. Metadata concealment is a temporary security solution available while the bootstrapping process for cluster nodes is being redesigned with significant security improvements. This feature is scheduled to be deprecated in the future and later removed.",
            "Expose all VM metadata to pods.",
            "Run the GKE Metadata Server on this node. The GKE Metadata Server exposes a metadata API to workloads that is compatible with the V1 Compute Metadata APIs exposed by the Compute Engine and App Engine Metadata Servers. This feature can only be enabled if Workload Identity is enabled at the cluster level."
          ],
          "enum": [
            "UNSPECIFIED",
            "SECURE",
            "EXPOSE",
            "GKE_METADATA_SERVER"
          ],
          "type": "string",
          "description": "NodeMetadata is the configuration for how to expose metadata to the workloads running on the node."
        },
        "mode": {
          "type": "string",
          "description": "Mode is the configuration for how to expose metadata to workloads running on the node pool.",
          "enumDescriptions": [
            "Not set.",
            "Expose all Compute Engine metadata to pods.",
            "Run the GKE Metadata Server on this node. The GKE Metadata Server exposes a metadata API to workloads that is compatible with the V1 Compute Metadata APIs exposed by the Compute Engine and App Engine Metadata Servers. This feature can only be enabled if Workload Identity is enabled at the cluster level."
          ],
          "enum": [
            "MODE_UNSPECIFIED",
            "GCE_METADATA",
            "GKE_METADATA"
          ]
        }
      },
      "type": "object",
      "id": "WorkloadMetadataConfig",
      "description": "WorkloadMetadataConfig defines the metadata configuration to expose to workloads on the node pool."
    },
    "AcceleratorConfig": {
      "id": "AcceleratorConfig",
      "description": "AcceleratorConfig represents a Hardware Accelerator request.",
      "properties": {
        "maxTimeSharedClientsPerGpu": {
          "format": "int64",
          "type": "string",
          "description": "The number of time-shared GPU resources to expose for each physical GPU."
        },
        "acceleratorType": {
          "type": "string",
          "description": "The accelerator type resource name. List of supported accelerators [here](https://cloud.google.com/compute/docs/gpus)"
        },
        "gpuPartitionSize": {
          "type": "string",
          "description": "Size of partitions to create on the GPU. Valid values are described in the NVIDIA [mig user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning)."
        },
        "gpuSharingConfig": {
          "description": "The configuration for GPU sharing options.",
          "$ref": "GPUSharingConfig"
        },
        "acceleratorCount": {
          "description": "The number of the accelerator cards exposed to an instance.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConsumptionMeteringConfig": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable consumption metering for this cluster. If enabled, a second BigQuery table will be created to hold resource consumption records."
        }
      },
      "description": "Parameters for controlling consumption metering.",
      "type": "object",
      "id": "ConsumptionMeteringConfig"
    },
    "Location": {
      "description": "Location returns the location name, and if the location is recommended for GKE cluster scheduling.",
      "properties": {
        "type": {
          "enum": [
            "LOCATION_TYPE_UNSPECIFIED",
            "ZONE",
            "REGION"
          ],
          "description": "Contains the type of location this Location is for. Regional or Zonal.",
          "enumDescriptions": [
            "LOCATION_TYPE_UNSPECIFIED means the location type was not determined.",
            "A GKE Location where Zonal clusters can be created.",
            "A GKE Location where Regional clusters can be created."
          ],
          "type": "string"
        },
        "recommended": {
          "type": "boolean",
          "description": "Whether the location is recommended for GKE cluster scheduling."
        },
        "name": {
          "description": "Contains the name of the resource requested. Specified in the format `projects/*/locations/*`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Location"
    },
    "RecurringTimeWindow": {
      "id": "RecurringTimeWindow",
      "type": "object",
      "description": "Represents an arbitrary window of time that recurs.",
      "properties": {
        "window": {
          "description": "The window of the first recurrence.",
          "$ref": "TimeWindow"
        },
        "recurrence": {
          "description": "An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how this window reccurs. They go on for the span of time between the start and end time. For example, to have something repeat every weekday, you'd use: `FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR` To repeat some window daily (equivalent to the DailyMaintenanceWindow): `FREQ=DAILY` For the first weekend of every month: `FREQ=MONTHLY;BYSETPOS=1;BYDAY=SA,SU` This specifies how frequently the window starts. Eg, if you wanted to have a 9-5 UTC-4 window every weekday, you'd use something like: ``` start time = 2019-01-01T09:00:00-0400 end time = 2019-01-01T17:00:00-0400 recurrence = FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR ``` Windows can span multiple days. Eg, to make the window encompass every weekend from midnight Saturday till the last minute of Sunday UTC: ``` start time = 2019-01-05T00:00:00Z end time = 2019-01-07T23:59:00Z recurrence = FREQ=WEEKLY;BYDAY=SA ``` Note the start and end time's specific dates are largely arbitrary except to specify duration of the window and when it first starts. The FREQ values of HOURLY, MINUTELY, and SECONDLY are not supported.",
          "type": "string"
        }
      }
    },
    "AdvancedMachineFeatures": {
      "type": "object",
      "properties": {
        "threadsPerCore": {
          "format": "int64",
          "description": "The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.",
          "type": "string"
        }
      },
      "id": "AdvancedMachineFeatures",
      "description": "Specifies options for controlling advanced machine features."
    },
    "LinuxNodeConfig": {
      "description": "Parameters that can be configured on Linux nodes.",
      "type": "object",
      "id": "LinuxNodeConfig",
      "properties": {
        "sysctls": {
          "description": "The Linux kernel parameters to be applied to the nodes and all pods running on the nodes. The following parameters are supported. net.core.busy_poll net.core.busy_read net.core.netdev_max_backlog net.core.rmem_max net.core.wmem_default net.core.wmem_max net.core.optmem_max net.core.somaxconn net.ipv4.tcp_rmem net.ipv4.tcp_wmem net.ipv4.tcp_tw_reuse",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cgroupMode": {
          "enum": [
            "CGROUP_MODE_UNSPECIFIED",
            "CGROUP_MODE_V1",
            "CGROUP_MODE_V2"
          ],
          "type": "string",
          "description": "cgroup_mode specifies the cgroup mode to be used on the node.",
          "enumDescriptions": [
            "CGROUP_MODE_UNSPECIFIED is when unspecified cgroup configuration is used. The default for the GKE node OS image will be used.",
            "CGROUP_MODE_V1 specifies to use cgroupv1 for the cgroup configuration on the node image.",
            "CGROUP_MODE_V2 specifies to use cgroupv2 for the cgroup configuration on the node image."
          ]
        }
      }
    },
    "UsableSubnetwork": {
      "description": "UsableSubnetwork resource returns the subnetwork name, its associated network and the primary CIDR range.",
      "type": "object",
      "id": "UsableSubnetwork",
      "properties": {
        "ipCidrRange": {
          "description": "The range of internal addresses that are owned by this subnetwork.",
          "type": "string"
        },
        "network": {
          "type": "string",
          "description": "Network Name. Example: projects/my-project/global/networks/my-network"
        },
        "subnetwork": {
          "description": "Subnetwork Name. Example: projects/my-project/regions/us-central1/subnetworks/my-subnet",
          "type": "string"
        },
        "secondaryIpRanges": {
          "type": "array",
          "description": "Secondary IP ranges.",
          "items": {
            "$ref": "UsableSubnetworkSecondaryRange"
          }
        },
        "statusMessage": {
          "type": "string",
          "description": "A human readable status message representing the reasons for cases where the caller cannot use the secondary ranges under the subnet. For example if the secondary_ip_ranges is empty due to a permission issue, an insufficient permission message will be given by status_message."
        }
      }
    },
    "SecurityBulletinEvent": {
      "description": "SecurityBulletinEvent is a notification sent to customers when a security bulletin has been posted that they are vulnerable to.",
      "id": "SecurityBulletinEvent",
      "type": "object",
      "properties": {
        "bulletinId": {
          "description": "The ID of the bulletin corresponding to the vulnerability.",
          "type": "string"
        },
        "briefDescription": {
          "description": "A brief description of the bulletin. See the bulletin pointed to by the bulletin_uri field for an expanded description.",
          "type": "string"
        },
        "manualStepsRequired": {
          "type": "boolean",
          "description": "If this field is specified, it means there are manual steps that the user must take to make their clusters safe."
        },
        "affectedSupportedMinors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The GKE minor versions affected by this vulnerability."
        },
        "severity": {
          "type": "string",
          "description": "The severity of this bulletin as it relates to GKE."
        },
        "bulletinUri": {
          "description": "The URI link to the bulletin on the website for more information.",
          "type": "string"
        },
        "resourceTypeAffected": {
          "type": "string",
          "description": "The resource type (node/control plane) that has the vulnerability. Multiple notifications (1 notification per resource type) will be sent for a vulnerability that affects \u003e 1 resource type."
        },
        "suggestedUpgradeTarget": {
          "description": "This represents a version selected from the patched_versions field that the cluster receiving this notification should most likely want to upgrade to based on its current version. Note that if this notification is being received by a given cluster, it means that this version is currently available as an upgrade target in that cluster's location.",
          "type": "string"
        },
        "patchedVersions": {
          "type": "array",
          "description": "The GKE versions where this vulnerability is patched.",
          "items": {
            "type": "string"
          }
        },
        "cveIds": {
          "description": "The CVEs associated with this bulletin.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "WorkloadCertificates": {
      "type": "object",
      "id": "WorkloadCertificates",
      "description": "Configuration for issuance of mTLS keys and certificates to Kubernetes pods.",
      "properties": {
        "enableCertificates": {
          "type": "boolean",
          "description": "enable_certificates controls issuance of workload mTLS certificates. If set, the GKE Workload Identity Certificates controller and node agent will be deployed in the cluster, which can then be configured by creating a WorkloadCertificateConfig Custom Resource. Requires Workload Identity (workload_pool must be non-empty)."
        }
      }
    },
    "SetNodePoolManagementRequest": {
      "type": "object",
      "description": "SetNodePoolManagementRequest sets the node management properties of a node pool.",
      "id": "SetNodePoolManagementRequest",
      "properties": {
        "nodePoolId": {
          "description": "Required. Deprecated. The name of the node pool to update. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "name": {
          "description": "The name (project, location, cluster, node pool id) of the node pool to set management properties. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "management": {
          "description": "Required. NodeManagement configuration for the node pool.",
          "$ref": "NodeManagement"
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        }
      }
    },
    "LoggingVariantConfig": {
      "type": "object",
      "description": "LoggingVariantConfig specifies the behaviour of the logging component.",
      "id": "LoggingVariantConfig",
      "properties": {
        "variant": {
          "description": "Logging variant deployed on nodes.",
          "enum": [
            "VARIANT_UNSPECIFIED",
            "DEFAULT",
            "MAX_THROUGHPUT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value. This shouldn't be used.",
            "default logging variant.",
            "maximum logging throughput variant."
          ]
        }
      }
    },
    "PrivateClusterConfig": {
      "description": "Configuration options for private clusters.",
      "type": "object",
      "id": "PrivateClusterConfig",
      "properties": {
        "peeringName": {
          "type": "string",
          "description": "Output only. The peering name in the customer VPC used by this cluster."
        },
        "publicEndpoint": {
          "type": "string",
          "description": "Output only. The external IP address of this cluster's master endpoint."
        },
        "privateEndpoint": {
          "type": "string",
          "description": "Output only. The internal IP address of this cluster's master endpoint."
        },
        "privateEndpointSubnetwork": {
          "type": "string",
          "description": "Subnet to provision the master's private endpoint during cluster creation. Specified in projects/*/regions/*/subnetworks/* format."
        },
        "masterIpv4CidrBlock": {
          "description": "The IP range in CIDR notation to use for the hosted master network. This range will be used for assigning internal IP addresses to the master or set of masters, as well as the ILB VIP. This range must not overlap with any other ranges in use within the cluster's network.",
          "type": "string"
        },
        "enablePrivateEndpoint": {
          "type": "boolean",
          "description": "Whether the master's internal IP address is used as the cluster endpoint."
        },
        "masterGlobalAccessConfig": {
          "$ref": "PrivateClusterMasterGlobalAccessConfig",
          "description": "Controls master global access settings."
        },
        "enablePrivateNodes": {
          "description": "Whether nodes have internal IP addresses only. If enabled, all nodes are given only RFC 1918 private addresses and communicate with the master via private networking.",
          "type": "boolean"
        }
      }
    },
    "PodSecurityPolicyConfig": {
      "type": "object",
      "description": "Configuration for the PodSecurityPolicy feature.",
      "id": "PodSecurityPolicyConfig",
      "properties": {
        "enabled": {
          "description": "Enable the PodSecurityPolicy controller for this cluster. If enabled, pods must be valid under a PodSecurityPolicy to be created.",
          "type": "boolean"
        }
      }
    },
    "GPUSharingConfig": {
      "properties": {
        "maxSharedClientsPerGpu": {
          "format": "int64",
          "description": "The max number of containers that can share a physical GPU.",
          "type": "string"
        },
        "gpuSharingStrategy": {
          "description": "The type of GPU sharing strategy to enable on the GPU node.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "GPUs are time-shared between containers."
          ],
          "enum": [
            "GPU_SHARING_STRATEGY_UNSPECIFIED",
            "TIME_SHARING"
          ]
        }
      },
      "description": "GPUSharingConfig represents the GPU sharing configuration for Hardware Accelerators.",
      "id": "GPUSharingConfig",
      "type": "object"
    },
    "AuthenticatorGroupsConfig": {
      "type": "object",
      "description": "Configuration for returning group information from authenticators.",
      "id": "AuthenticatorGroupsConfig",
      "properties": {
        "securityGroup": {
          "description": "The name of the security group-of-groups to be used. Only relevant if enabled = true.",
          "type": "string"
        },
        "enabled": {
          "description": "Whether this cluster should return group membership lookups during authentication using a group of security groups.",
          "type": "boolean"
        }
      }
    },
    "Filter": {
      "type": "object",
      "properties": {
        "eventType": {
          "description": "Event types to allowlist.",
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Not set, will be ignored.",
              "Corresponds with UpgradeAvailableEvent.",
              "Corresponds with UpgradeEvent.",
              "Corresponds with SecurityBulletinEvent."
            ],
            "type": "string",
            "enum": [
              "EVENT_TYPE_UNSPECIFIED",
              "UPGRADE_AVAILABLE_EVENT",
              "UPGRADE_EVENT",
              "SECURITY_BULLETIN_EVENT"
            ]
          }
        }
      },
      "id": "Filter",
      "description": "Allows filtering to one or more specific event types. If event types are present, those and only those event types will be transmitted to the cluster. Other types will be skipped. If no filter is specified, or no event types are present, all event types will be sent"
    },
    "TpuConfig": {
      "type": "object",
      "id": "TpuConfig",
      "properties": {
        "ipv4CidrBlock": {
          "type": "string",
          "description": "IPv4 CIDR block reserved for Cloud TPU in the VPC."
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether Cloud TPU integration is enabled or not."
        },
        "useServiceNetworking": {
          "type": "boolean",
          "description": "Whether to use service networking for Cloud TPU or not."
        }
      },
      "description": "Configuration for Cloud TPU."
    },
    "UpdateClusterRequest": {
      "type": "object",
      "id": "UpdateClusterRequest",
      "properties": {
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        },
        "clusterId": {
          "type": "string",
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field."
        },
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "update": {
          "description": "Required. A description of the update.",
          "$ref": "ClusterUpdate"
        },
        "name": {
          "description": "The name (project, location, cluster) of the cluster to update. Specified in the format `projects/*/locations/*/clusters/*`.",
          "type": "string"
        }
      },
      "description": "UpdateClusterRequest updates the settings of a cluster."
    },
    "SetMonitoringServiceRequest": {
      "properties": {
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster) of the cluster to set monitoring. Specified in the format `projects/*/locations/*/clusters/*`."
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "monitoringService": {
          "description": "Required. The monitoring service the cluster should use to write metrics. Currently available options: * \"monitoring.googleapis.com/kubernetes\" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
        }
      },
      "description": "SetMonitoringServiceRequest sets the monitoring service of a cluster.",
      "type": "object",
      "id": "SetMonitoringServiceRequest"
    },
    "NodeNetworkConfig": {
      "id": "NodeNetworkConfig",
      "description": "Parameters for node pool-level network config.",
      "type": "object",
      "properties": {
        "networkPerformanceConfig": {
          "$ref": "NetworkPerformanceConfig",
          "description": "Network bandwidth tier configuration."
        },
        "podCidrOverprovisionConfig": {
          "$ref": "PodCIDROverprovisionConfig",
          "description": "[PRIVATE FIELD] Pod CIDR size overprovisioning config for the nodepool. Pod CIDR size per node depends on max_pods_per_node. By default, the value of max_pods_per_node is rounded off to next power of 2 and we then double that to get the size of pod CIDR block per node. Example: max_pods_per_node of 30 would result in 64 IPs (/26). This config can disable the doubling of IPs (we still round off to next power of 2) Example: max_pods_per_node of 30 will result in 32 IPs (/27) when overprovisioning is disabled."
        },
        "createPodRange": {
          "type": "boolean",
          "description": "Input only. Whether to create a new range for pod IPs in this node pool. Defaults are provided for `pod_range` and `pod_ipv4_cidr_block` if they are not specified. If neither `create_pod_range` or `pod_range` are specified, the cluster-level default (`ip_allocation_policy.cluster_ipv4_cidr_block`) is used. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created."
        },
        "podRange": {
          "description": "The ID of the secondary range for pod IPs. If `create_pod_range` is true, this ID is used for the new range. If `create_pod_range` is false, uses an existing secondary range with this ID. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created.",
          "type": "string"
        },
        "enablePrivateNodes": {
          "description": "Whether nodes have internal IP addresses only. If enable_private_nodes is not specified, then the value is derived from cluster.privateClusterConfig.enablePrivateNodes",
          "type": "boolean"
        },
        "podIpv4CidrBlock": {
          "description": "The IP address range for pod IPs in this node pool. Only applicable if `create_pod_range` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) to pick a specific range to use. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created.",
          "type": "string"
        }
      }
    },
    "ServiceExternalIPsConfig": {
      "description": "Config to block services with externalIPs field.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether Services with ExternalIPs field are allowed or not."
        }
      },
      "id": "ServiceExternalIPsConfig",
      "type": "object"
    },
    "ShieldedInstanceConfig": {
      "description": "A set of Shielded Instance options.",
      "properties": {
        "enableIntegrityMonitoring": {
          "type": "boolean",
          "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created."
        },
        "enableSecureBoot": {
          "type": "boolean",
          "description": "Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails."
        }
      },
      "id": "ShieldedInstanceConfig",
      "type": "object"
    },
    "DefaultSnatStatus": {
      "properties": {
        "disabled": {
          "type": "boolean",
          "description": "Disables cluster default sNAT rules."
        }
      },
      "id": "DefaultSnatStatus",
      "type": "object",
      "description": "DefaultSnatStatus contains the desired state of whether default sNAT should be disabled on the cluster."
    },
    "NodePoolDefaults": {
      "description": "Subset of Nodepool message that has defaults.",
      "properties": {
        "nodeConfigDefaults": {
          "description": "Subset of NodeConfig message that has defaults.",
          "$ref": "NodeConfigDefaults"
        }
      },
      "type": "object",
      "id": "NodePoolDefaults"
    },
    "TimeWindow": {
      "description": "Represents an arbitrary window of time.",
      "type": "object",
      "id": "TimeWindow",
      "properties": {
        "endTime": {
          "description": "The time that the window ends. The end time should take place after the start time.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time that the window first starts."
        },
        "maintenanceExclusionOptions": {
          "description": "MaintenanceExclusionOptions provides maintenance exclusion related options.",
          "$ref": "MaintenanceExclusionOptions"
        }
      }
    },
    "NodePoolAutoConfig": {
      "description": "node pool configs that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled clusters",
      "properties": {
        "networkTags": {
          "description": "The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster creation. Each tag within the list must comply with RFC1035.",
          "$ref": "NetworkTags"
        }
      },
      "id": "NodePoolAutoConfig",
      "type": "object"
    },
    "SetLocationsRequest": {
      "id": "SetLocationsRequest",
      "type": "object",
      "description": "SetLocationsRequest sets the locations of the cluster.",
      "properties": {
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "locations": {
          "description": "Required. The desired list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. Changing the locations a cluster is in will result in nodes being either created or removed from the cluster, depending on whether locations are being added or removed. This list must always include the cluster's primary zone.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "clusterId": {
          "type": "string",
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field."
        },
        "name": {
          "description": "The name (project, location, cluster) of the cluster to set locations. Specified in the format `projects/*/locations/*/clusters/*`.",
          "type": "string"
        },
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        }
      }
    },
    "HttpCacheControlResponseHeader": {
      "description": "RFC-2616: cache control support",
      "type": "object",
      "id": "HttpCacheControlResponseHeader",
      "properties": {
        "expires": {
          "type": "string",
          "description": "14.21 response cache expires, in RFC 1123 date format"
        },
        "age": {
          "description": "14.6 response cache age, in seconds since the response is generated",
          "type": "string",
          "format": "int64"
        },
        "directive": {
          "type": "string",
          "description": "14.9 request and response directives"
        }
      }
    },
    "VerticalPodAutoscaling": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enables vertical pod autoscaling."
        }
      },
      "description": "VerticalPodAutoscaling contains global, per-cluster information required by Vertical Pod Autoscaler to automatically adjust the resources of pods controlled by it.",
      "id": "VerticalPodAutoscaling"
    },
    "NodePoolAutoscaling": {
      "type": "object",
      "id": "NodePoolAutoscaling",
      "description": "NodePoolAutoscaling contains information required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.",
      "properties": {
        "maxNodeCount": {
          "format": "int32",
          "description": "Maximum number of nodes for one location in the NodePool. Must be \u003e= min_node_count. There has to be enough quota to scale up the cluster.",
          "type": "integer"
        },
        "locationPolicy": {
          "enum": [
            "LOCATION_POLICY_UNSPECIFIED",
            "BALANCED",
            "ANY"
          ],
          "description": "Location policy used when scaling up a nodepool.",
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "BALANCED is a best effort policy that aims to balance the sizes of different zones.",
            "ANY policy picks zones that have the highest capacity available."
          ]
        },
        "totalMinNodeCount": {
          "description": "Minimum number of nodes in the node pool. Must be greater than 1 less than total_max_node_count. The total_*_node_count fields are mutually exclusive with the *_node_count fields.",
          "format": "int32",
          "type": "integer"
        },
        "enabled": {
          "description": "Is autoscaling enabled for this node pool.",
          "type": "boolean"
        },
        "minNodeCount": {
          "description": "Minimum number of nodes for one location in the NodePool. Must be \u003e= 1 and \u003c= max_node_count.",
          "format": "int32",
          "type": "integer"
        },
        "totalMaxNodeCount": {
          "type": "integer",
          "description": "Maximum number of nodes in the node pool. Must be greater than total_min_node_count. There has to be enough quota to scale up the cluster. The total_*_node_count fields are mutually exclusive with the *_node_count fields.",
          "format": "int32"
        },
        "autoprovisioned": {
          "type": "boolean",
          "description": "Can this node pool be deleted automatically."
        }
      }
    },
    "GatewayAPIConfig": {
      "id": "GatewayAPIConfig",
      "type": "object",
      "description": "GatewayAPIConfig contains the desired config of Gateway API on this cluster.",
      "properties": {
        "channel": {
          "enum": [
            "CHANNEL_UNSPECIFIED",
            "CHANNEL_DISABLED",
            "CHANNEL_EXPERIMENTAL",
            "CHANNEL_STANDARD"
          ],
          "description": "The Gateway API release channel to use for Gateway API.",
          "enumDescriptions": [
            "Default value.",
            "Gateway API support is disabled",
            "Gateway API support is enabled, experimental CRDs are installed",
            "Gateway API support is enabled, standard CRDs are installed"
          ],
          "type": "string"
        }
      }
    },
    "UpdateNodePoolRequest": {
      "id": "UpdateNodePoolRequest",
      "type": "object",
      "description": "SetNodePoolVersionRequest updates the version of a node pool.",
      "properties": {
        "etag": {
          "description": "The current etag of the node pool. If an etag is provided and does not match the current etag of the node pool, update will be blocked and an ABORTED error will be returned.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster, node pool) of the node pool to update. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`."
        },
        "nodePoolId": {
          "type": "string",
          "description": "Required. Deprecated. The name of the node pool to upgrade. This field has been deprecated and replaced by the name field."
        },
        "clusterId": {
          "type": "string",
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field."
        },
        "linuxNodeConfig": {
          "description": "Parameters that can be configured on Linux nodes.",
          "$ref": "LinuxNodeConfig"
        },
        "nodeNetworkConfig": {
          "$ref": "NodeNetworkConfig",
          "description": "Node network config."
        },
        "resourceLabels": {
          "$ref": "ResourceLabels",
          "description": "The resource labels for the node pool to use to annotate any related Google Compute Engine resources."
        },
        "imageType": {
          "type": "string",
          "description": "Required. The desired image type for the node pool. Please see https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for available image types."
        },
        "nodeVersion": {
          "type": "string",
          "description": "Required. The Kubernetes version to change the nodes to (typically an upgrade). Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"-\": picks the Kubernetes master version"
        },
        "windowsNodeConfig": {
          "description": "Parameters that can be configured on Windows nodes.",
          "$ref": "WindowsNodeConfig"
        },
        "gcfsConfig": {
          "description": "GCFS config.",
          "$ref": "GcfsConfig"
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The desired list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the node pool's nodes should be located. Changing the locations for a node pool will result in nodes being either created or removed from the node pool, depending on whether locations are being added or removed."
        },
        "confidentialNodes": {
          "$ref": "ConfidentialNodes",
          "description": "Confidential nodes config. All the nodes in the node pool will be Confidential VM once enabled."
        },
        "taints": {
          "description": "The desired node taints to be applied to all nodes in the node pool. If this field is not present, the taints will not be changed. Otherwise, the existing node taints will be *replaced* with the provided taints.",
          "$ref": "NodeTaints"
        },
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
        },
        "fastSocket": {
          "description": "Enable or disable NCCL fast socket for the node pool.",
          "$ref": "FastSocket"
        },
        "upgradeSettings": {
          "description": "Upgrade settings control disruption and speed of the upgrade.",
          "$ref": "UpgradeSettings"
        },
        "loggingConfig": {
          "description": "Logging configuration.",
          "$ref": "NodePoolLoggingConfig"
        },
        "workloadMetadataConfig": {
          "$ref": "WorkloadMetadataConfig",
          "description": "The desired workload metadata config for the node pool."
        },
        "tags": {
          "description": "The desired network tags to be applied to all nodes in the node pool. If this field is not present, the tags will not be changed. Otherwise, the existing network tags will be *replaced* with the provided tags.",
          "$ref": "NetworkTags"
        },
        "labels": {
          "description": "The desired node labels to be applied to all nodes in the node pool. If this field is not present, the labels will not be changed. Otherwise, the existing node labels will be *replaced* with the provided labels.",
          "$ref": "NodeLabels"
        },
        "gvnic": {
          "$ref": "VirtualNIC",
          "description": "Enable or disable gvnic on the node pool."
        },
        "kubeletConfig": {
          "$ref": "NodeKubeletConfig",
          "description": "Node kubelet configs."
        },
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
          "type": "string"
        }
      }
    },
    "ClusterAutoscaling": {
      "description": "ClusterAutoscaling contains global, per-cluster information required by Cluster Autoscaler to automatically adjust the size of the cluster and create/delete node pools based on the current needs.",
      "id": "ClusterAutoscaling",
      "properties": {
        "resourceLimits": {
          "description": "Contains global constraints regarding minimum and maximum amount of resources in the cluster.",
          "type": "array",
          "items": {
            "$ref": "ResourceLimit"
          }
        },
        "autoprovisioningNodePoolDefaults": {
          "description": "AutoprovisioningNodePoolDefaults contains defaults for a node pool created by NAP.",
          "$ref": "AutoprovisioningNodePoolDefaults"
        },
        "autoscalingProfile": {
          "type": "string",
          "enumDescriptions": [
            "No change to autoscaling configuration.",
            "Prioritize optimizing utilization of resources.",
            "Use default (balanced) autoscaling configuration."
          ],
          "description": "Defines autoscaling behaviour.",
          "enum": [
            "PROFILE_UNSPECIFIED",
            "OPTIMIZE_UTILIZATION",
            "BALANCED"
          ]
        },
        "enableNodeAutoprovisioning": {
          "type": "boolean",
          "description": "Enables automatic node pool creation and deletion."
        },
        "autoprovisioningLocations": {
          "items": {
            "type": "string"
          },
          "description": "The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the NodePool's nodes can be created by NAP.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "NetworkPolicy": {
      "properties": {
        "provider": {
          "type": "string",
          "enum": [
            "PROVIDER_UNSPECIFIED",
            "CALICO"
          ],
          "enumDescriptions": [
            "Not set",
            "Tigera (Calico Felix)."
          ],
          "description": "The selected network policy provider."
        },
        "enabled": {
          "description": "Whether network policy is enabled on the cluster.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "NetworkPolicy",
      "description": "Configuration options for the NetworkPolicy feature. https://kubernetes.io/docs/concepts/services-networking/networkpolicies/"
    },
    "SetLabelsRequest": {
      "description": "SetLabelsRequest sets the Google Cloud Platform labels on a Google Container Engine cluster, which will in turn set them for Google Compute Engine resources used by that cluster",
      "id": "SetLabelsRequest",
      "type": "object",
      "properties": {
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "resourceLabels": {
          "description": "Required. The labels to set for that cluster.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "labelFingerprint": {
          "description": "Required. The fingerprint of the previous set of labels for this resource, used to detect conflicts. The fingerprint is initially generated by Kubernetes Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash when updating or changing labels. Make a `get()` request to the resource to get the latest fingerprint.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster name) of the cluster to set labels. Specified in the format `projects/*/locations/*/clusters/*`."
        },
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
          "type": "string"
        }
      }
    },
    "SetNodePoolSizeRequest": {
      "type": "object",
      "description": "SetNodePoolSizeRequest sets the size of a node pool.",
      "id": "SetNodePoolSizeRequest",
      "properties": {
        "nodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Required. The desired node count for the pool."
        },
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster, node pool id) of the node pool to set size. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`."
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "nodePoolId": {
          "description": "Required. Deprecated. The name of the node pool to update. This field has been deprecated and replaced by the name field.",
          "type": "string"
        }
      }
    },
    "SetLoggingServiceRequest": {
      "description": "SetLoggingServiceRequest sets the logging service of a cluster.",
      "properties": {
        "name": {
          "description": "The name (project, location, cluster) of the cluster to set logging. Specified in the format `projects/*/locations/*/clusters/*`.",
          "type": "string"
        },
        "loggingService": {
          "type": "string",
          "description": "Required. The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions."
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
        },
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        }
      },
      "type": "object",
      "id": "SetLoggingServiceRequest"
    },
    "LegacyAbac": {
      "description": "Configuration for the legacy Attribute Based Access Control authorization mode.",
      "properties": {
        "enabled": {
          "description": "Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service accounts, nodes, and controllers, will have statically granted permissions beyond those provided by the RBAC configuration or IAM.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "LegacyAbac"
    },
    "GcfsConfig": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether to use GCFS."
        }
      },
      "id": "GcfsConfig",
      "type": "object",
      "description": "GcfsConfig contains configurations of Google Container File System."
    },
    "ReleaseChannel": {
      "type": "object",
      "description": "ReleaseChannel indicates which release channel a cluster is subscribed to. Release channels are arranged in order of risk. When a cluster is subscribed to a release channel, Google maintains both the master version and the node version. Node auto-upgrade defaults to true and cannot be disabled.",
      "properties": {
        "channel": {
          "enumDescriptions": [
            "No channel specified.",
            "RAPID channel is offered on an early access basis for customers who want to test new releases. WARNING: Versions available in the RAPID Channel may be subject to unresolved issues with no known workaround and are not subject to any SLAs.",
            "Clusters subscribed to REGULAR receive versions that are considered GA quality. REGULAR is intended for production users who want to take advantage of new features.",
            "Clusters subscribed to STABLE receive versions that are known to be stable and reliable in production."
          ],
          "description": "channel specifies which release channel the cluster is subscribed to.",
          "type": "string",
          "enum": [
            "UNSPECIFIED",
            "RAPID",
            "REGULAR",
            "STABLE"
          ]
        }
      },
      "id": "ReleaseChannel"
    },
    "IPAllocationPolicy": {
      "properties": {
        "nodeIpv4Cidr": {
          "type": "string",
          "description": "This field is deprecated, use node_ipv4_cidr_block."
        },
        "createSubnetwork": {
          "type": "boolean",
          "description": "Whether a new subnetwork will be created automatically for the cluster. This field is only applicable when `use_ip_aliases` is true."
        },
        "tpuIpv4CidrBlock": {
          "description": "The IP address range of the Cloud TPUs in this cluster. If unspecified, a range will be automatically chosen with the default size. This field is only applicable when `use_ip_aliases` is true. If unspecified, the range will use the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use. This field is deprecated, use cluster.tpu_config.ipv4_cidr_block instead.",
          "type": "string"
        },
        "podCidrOverprovisionConfig": {
          "description": "[PRIVATE FIELD] Pod CIDR size overprovisioning config for the cluster. Pod CIDR size per node depends on max_pods_per_node. By default, the value of max_pods_per_node is doubled and then rounded off to next power of 2 to get the size of pod CIDR block per node. Example: max_pods_per_node of 30 would result in 64 IPs (/26). This config can disable the doubling of IPs (we still round off to next power of 2) Example: max_pods_per_node of 30 will result in 32 IPs (/27) when overprovisioning is disabled.",
          "$ref": "PodCIDROverprovisionConfig"
        },
        "servicesIpv6CidrBlock": {
          "type": "string",
          "description": "Output only. [Output only] The services IPv6 CIDR block for the cluster.",
          "readOnly": true
        },
        "ipv6AccessType": {
          "type": "string",
          "enumDescriptions": [
            "Default value, will be defaulted as type external.",
            "Access type internal (all v6 addresses are internal IPs)",
            "Access type external (all v6 addresses are external IPs)"
          ],
          "description": "The ipv6 access type (internal or external) when create_subnetwork is true",
          "enum": [
            "IPV6_ACCESS_TYPE_UNSPECIFIED",
            "INTERNAL",
            "EXTERNAL"
          ]
        },
        "clusterIpv4CidrBlock": {
          "type": "string",
          "description": "The IP address range for the cluster pod IPs. If this field is set, then `cluster.cluster_ipv4_cidr` must be left blank. This field is only applicable when `use_ip_aliases` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use."
        },
        "useRoutes": {
          "description": "Whether routes will be used for pod IPs in the cluster. This is used in conjunction with use_ip_aliases. It cannot be true if use_ip_aliases is true. If both use_ip_aliases and use_routes are false, then the server picks the default IP allocation mode",
          "type": "boolean"
        },
        "clusterSecondaryRangeName": {
          "type": "string",
          "description": "The name of the secondary range to be used for the cluster CIDR block. The secondary range will be used for pod IP addresses. This must be an existing secondary range associated with the cluster subnetwork. This field is only applicable with use_ip_aliases and create_subnetwork is false."
        },
        "servicesIpv4Cidr": {
          "type": "string",
          "description": "This field is deprecated, use services_ipv4_cidr_block."
        },
        "nodeIpv4CidrBlock": {
          "type": "string",
          "description": "The IP address range of the instance IPs in this cluster. This is applicable only if `create_subnetwork` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use."
        },
        "subnetIpv6CidrBlock": {
          "type": "string",
          "description": "Output only. [Output only] The subnet's IPv6 CIDR block used by nodes and pods.",
          "readOnly": true
        },
        "servicesSecondaryRangeName": {
          "description": "The name of the secondary range to be used as for the services CIDR block. The secondary range will be used for service ClusterIPs. This must be an existing secondary range associated with the cluster subnetwork. This field is only applicable with use_ip_aliases and create_subnetwork is false.",
          "type": "string"
        },
        "servicesIpv4CidrBlock": {
          "type": "string",
          "description": "The IP address range of the services IPs in this cluster. If blank, a range will be automatically chosen with the default size. This field is only applicable when `use_ip_aliases` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use."
        },
        "allowRouteOverlap": {
          "type": "boolean",
          "description": "If true, allow allocation of cluster CIDR ranges that overlap with certain kinds of network routes. By default we do not allow cluster CIDR ranges to intersect with any user declared routes. With allow_route_overlap == true, we allow overlapping with CIDR ranges that are larger than the cluster CIDR range. If this field is set to true, then cluster and services CIDRs must be fully-specified (e.g. `10.96.0.0/14`, but not `/14`), which means: 1) When `use_ip_aliases` is true, `cluster_ipv4_cidr_block` and `services_ipv4_cidr_block` must be fully-specified. 2) When `use_ip_aliases` is false, `cluster.cluster_ipv4_cidr` muse be fully-specified."
        },
        "useIpAliases": {
          "description": "Whether alias IPs will be used for pod IPs in the cluster. This is used in conjunction with use_routes. It cannot be true if use_routes is true. If both use_ip_aliases and use_routes are false, then the server picks the default IP allocation mode",
          "type": "boolean"
        },
        "clusterIpv4Cidr": {
          "type": "string",
          "description": "This field is deprecated, use cluster_ipv4_cidr_block."
        },
        "stackType": {
          "description": "IP stack type",
          "enum": [
            "STACK_TYPE_UNSPECIFIED",
            "IPV4",
            "IPV4_IPV6"
          ],
          "enumDescriptions": [
            "By default, the clusters will be IPV4 only",
            "The value used if the cluster is a IPV4 only",
            "The value used if the cluster is a dual stack cluster"
          ],
          "type": "string"
        },
        "subnetworkName": {
          "description": "A custom subnetwork name to be used if `create_subnetwork` is true. If this field is empty, then an automatic name will be chosen for the new subnetwork.",
          "type": "string"
        },
        "additionalPodRangesConfig": {
          "readOnly": true,
          "$ref": "AdditionalPodRangesConfig",
          "description": "Output only. [Output only] The additional pod ranges that are added to the cluster. These pod ranges can be used by new node pools to allocate pod IPs automatically. Once the range is removed it will not show up in IPAllocationPolicy."
        }
      },
      "description": "Configuration for controlling how IPs are allocated in the cluster.",
      "type": "object",
      "id": "IPAllocationPolicy"
    },
    "CreateNodePoolRequest": {
      "id": "CreateNodePoolRequest",
      "type": "object",
      "description": "CreateNodePoolRequest creates a node pool for a cluster.",
      "properties": {
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the parent field.",
          "type": "string"
        },
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field."
        },
        "nodePool": {
          "description": "Required. The node pool to create.",
          "$ref": "NodePool"
        },
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field."
        },
        "parent": {
          "type": "string",
          "description": "The parent (project, location, cluster name) where the node pool will be created. Specified in the format `projects/*/locations/*/clusters/*`."
        }
      }
    },
    "CidrBlock": {
      "id": "CidrBlock",
      "properties": {
        "displayName": {
          "description": "display_name is an optional field for users to identify CIDR blocks.",
          "type": "string"
        },
        "cidrBlock": {
          "type": "string",
          "description": "cidr_block must be specified in CIDR notation."
        }
      },
      "type": "object",
      "description": "CidrBlock contains an optional name and one CIDR block."
    },
    "ListNodePoolsResponse": {
      "type": "object",
      "id": "ListNodePoolsResponse",
      "properties": {
        "nodePools": {
          "type": "array",
          "items": {
            "$ref": "NodePool"
          },
          "description": "A list of node pools for a cluster."
        }
      },
      "description": "ListNodePoolsResponse is the result of ListNodePoolsRequest."
    },
    "ConfigConnectorConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether Cloud Connector is enabled for this cluster."
        }
      },
      "id": "ConfigConnectorConfig",
      "description": "Configuration options for the Config Connector add-on."
    },
    "SetMaintenancePolicyRequest": {
      "type": "object",
      "properties": {
        "clusterId": {
          "description": "Required. The name of the cluster to update.",
          "type": "string"
        },
        "zone": {
          "description": "Required. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides.",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "Required. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects)."
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster name) of the cluster to set maintenance policy. Specified in the format `projects/*/locations/*/clusters/*`."
        },
        "maintenancePolicy": {
          "$ref": "MaintenancePolicy",
          "description": "Required. The maintenance policy to be set for the cluster. An empty field clears the existing maintenance policy."
        }
      },
      "description": "SetMaintenancePolicyRequest sets the maintenance policy for a cluster.",
      "id": "SetMaintenancePolicyRequest"
    },
    "UsableSubnetworkSecondaryRange": {
      "properties": {
        "status": {
          "description": "This field is to determine the status of the secondary range programmably.",
          "enum": [
            "UNKNOWN",
            "UNUSED",
            "IN_USE_SERVICE",
            "IN_USE_SHAREABLE_POD",
            "IN_USE_MANAGED_POD"
          ],
          "type": "string",
          "enumDescriptions": [
            "UNKNOWN is the zero value of the Status enum. It's not a valid status.",
            "UNUSED denotes that this range is unclaimed by any cluster.",
            "IN_USE_SERVICE denotes that this range is claimed by a cluster for services. It cannot be used for other clusters.",
            "IN_USE_SHAREABLE_POD denotes this range was created by the network admin and is currently claimed by a cluster for pods. It can only be used by other clusters as a pod range.",
            "IN_USE_MANAGED_POD denotes this range was created by GKE and is claimed for pods. It cannot be used for other clusters."
          ]
        },
        "rangeName": {
          "type": "string",
          "description": "The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance."
        },
        "ipCidrRange": {
          "description": "The range of IP addresses belonging to this subnetwork secondary range.",
          "type": "string"
        }
      },
      "description": "Secondary IP range of a usable subnetwork.",
      "type": "object",
      "id": "UsableSubnetworkSecondaryRange"
    },
    "ILBSubsettingConfig": {
      "id": "ILBSubsettingConfig",
      "description": "ILBSubsettingConfig contains the desired config of L4 Internal LoadBalancer subsetting on this cluster.",
      "properties": {
        "enabled": {
          "description": "Enables l4 ILB subsetting for this cluster",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "SetMasterAuthRequest": {
      "type": "object",
      "description": "SetMasterAuthRequest updates the admin password of a cluster.",
      "properties": {
        "clusterId": {
          "type": "string",
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field."
        },
        "update": {
          "description": "Required. A description of the update.",
          "$ref": "MasterAuth"
        },
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the name field."
        },
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "action": {
          "enum": [
            "UNKNOWN",
            "SET_PASSWORD",
            "GENERATE_PASSWORD",
            "SET_USERNAME"
          ],
          "enumDescriptions": [
            "Operation is unknown and will error out.",
            "Set the password to a user generated value.",
            "Generate a new password and set it to that.",
            "Set the username. If an empty username is provided, basic authentication is disabled for the cluster. If a non-empty username is provided, basic authentication is enabled, with either a provided password or a generated one."
          ],
          "type": "string",
          "description": "Required. The exact form of action to be taken on the master auth."
        },
        "name": {
          "description": "The name (project, location, cluster) of the cluster to set auth. Specified in the format `projects/*/locations/*/clusters/*`.",
          "type": "string"
        }
      },
      "id": "SetMasterAuthRequest"
    },
    "NodeManagement": {
      "properties": {
        "autoRepair": {
          "type": "boolean",
          "description": "Whether the nodes will be automatically repaired."
        },
        "autoUpgrade": {
          "description": "Whether the nodes will be automatically upgraded.",
          "type": "boolean"
        },
        "upgradeOptions": {
          "description": "Specifies the Auto Upgrade knobs for the node pool.",
          "$ref": "AutoUpgradeOptions"
        }
      },
      "id": "NodeManagement",
      "type": "object",
      "description": "NodeManagement defines the set of node management services turned on for the node pool."
    },
    "ReleaseChannelConfig": {
      "description": "ReleaseChannelConfig exposes configuration for a release channel.",
      "id": "ReleaseChannelConfig",
      "type": "object",
      "properties": {
        "defaultVersion": {
          "description": "The default version for newly created clusters on the channel.",
          "type": "string"
        },
        "validVersions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of valid versions for the channel."
        },
        "channel": {
          "enum": [
            "UNSPECIFIED",
            "RAPID",
            "REGULAR",
            "STABLE"
          ],
          "enumDescriptions": [
            "No channel specified.",
            "RAPID channel is offered on an early access basis for customers who want to test new releases. WARNING: Versions available in the RAPID Channel may be subject to unresolved issues with no known workaround and are not subject to any SLAs.",
            "Clusters subscribed to REGULAR receive versions that are considered GA quality. REGULAR is intended for production users who want to take advantage of new features.",
            "Clusters subscribed to STABLE receive versions that are known to be stable and reliable in production."
          ],
          "type": "string",
          "description": "The release channel this configuration applies to."
        },
        "availableVersions": {
          "items": {
            "$ref": "AvailableVersion"
          },
          "description": "Deprecated. This field has been deprecated and replaced with the valid_versions field.",
          "type": "array"
        }
      }
    },
    "GcePersistentDiskCsiDriverConfig": {
      "type": "object",
      "description": "Configuration for the Compute Engine PD CSI driver.",
      "id": "GcePersistentDiskCsiDriverConfig",
      "properties": {
        "enabled": {
          "description": "Whether the Compute Engine PD CSI driver is enabled for this cluster.",
          "type": "boolean"
        }
      }
    },
    "GetOpenIDConfigResponse": {
      "description": "GetOpenIDConfigResponse is an OIDC discovery document for the cluster. See the OpenID Connect Discovery 1.0 specification for details.",
      "properties": {
        "claims_supported": {
          "description": "Supported claims.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "issuer": {
          "type": "string",
          "description": "OIDC Issuer."
        },
        "jwks_uri": {
          "type": "string",
          "description": "JSON Web Key uri."
        },
        "grant_types": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Supported grant types."
        },
        "response_types_supported": {
          "description": "Supported response types.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "id_token_signing_alg_values_supported": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "supported ID Token signing Algorithms."
        },
        "subject_types_supported": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Supported subject types."
        },
        "cacheHeader": {
          "$ref": "HttpCacheControlResponseHeader",
          "description": "OnePlatform automatically extracts this field and uses it to set the HTTP Cache-Control header."
        }
      },
      "type": "object",
      "id": "GetOpenIDConfigResponse"
    },
    "CreateClusterRequest": {
      "description": "CreateClusterRequest creates a cluster.",
      "properties": {
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field."
        },
        "cluster": {
          "$ref": "Cluster",
          "description": "Required. A [cluster resource](https://cloud.google.com/container-engine/reference/rest/v1beta1/projects.locations.clusters)"
        },
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://cloud.google.com/resource-manager/docs/creating-managing-projects). This field has been deprecated and replaced by the parent field.",
          "type": "string"
        },
        "parent": {
          "type": "string",
          "description": "The parent (project and location) where the cluster will be created. Specified in the format `projects/*/locations/*`."
        }
      },
      "id": "CreateClusterRequest",
      "type": "object"
    },
    "CompleteNodePoolUpgradeRequest": {
      "id": "CompleteNodePoolUpgradeRequest",
      "description": "CompleteNodePoolUpgradeRequest sets the name of target node pool to complete upgrade.",
      "type": "object",
      "properties": {}
    },
    "ResourceUsageExportConfig": {
      "type": "object",
      "properties": {
        "enableNetworkEgressMetering": {
          "type": "boolean",
          "description": "Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created in the cluster to meter network egress traffic."
        },
        "bigqueryDestination": {
          "$ref": "BigQueryDestination",
          "description": "Configuration to use BigQuery as usage export destination."
        },
        "consumptionMeteringConfig": {
          "description": "Configuration to enable resource consumption metering.",
          "$ref": "ConsumptionMeteringConfig"
        }
      },
      "id": "ResourceUsageExportConfig",
      "description": "Configuration for exporting cluster resource usages."
    }
  },
  "name": "container",
  "baseUrl": "https://container.googleapis.com/",
  "discoveryVersion": "v1",
  "revision": "20230501",
  "title": "Kubernetes Engine API",
  "canonicalName": "Container",
  "protocol": "rest",
  "description": "Builds and manages container-based applications, powered by the open source Kubernetes technology.",
  "fullyEncodeReservedExpansion": true,
  "ownerName": "Google",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version_module": true,
  "rootUrl": "https://container.googleapis.com/",
  "ownerDomain": "google.com",
  "kind": "discovery#restDescription"
}

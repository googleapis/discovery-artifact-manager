{
  "description": "Builds and manages container-based applications, powered by the open source Kubernetes technology.",
  "resources": {
    "projects": {
      "resources": {
        "zones": {
          "resources": {
            "operations": {
              "methods": {
                "cancel": {
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/operations/{operationId}:cancel",
                  "id": "container.projects.zones.operations.cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "operationId"
                  ],
                  "parameters": {
                    "operationId": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Deprecated. The server-assigned `name` of the operation. This field has been deprecated and replaced by the name field.",
                      "required": true
                    },
                    "projectId": {
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "zone": {
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the operation resides. This field has been deprecated and replaced by the name field.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Cancels the specified operation.",
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/operations/{operationId}:cancel"
                },
                "get": {
                  "id": "container.projects.zones.operations.get",
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/operations/{operationId}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "operationId"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "projectId": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                      "required": true
                    },
                    "operationId": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Deprecated. The server-assigned `name` of the operation. This field has been deprecated and replaced by the name field.",
                      "location": "path"
                    },
                    "name": {
                      "location": "query",
                      "description": "The name (project, location, operation id) of the operation to get. Specified in the format `projects/*/locations/*/operations/*`.",
                      "type": "string"
                    },
                    "zone": {
                      "required": true,
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/operations/{operationId}",
                  "description": "Gets the specified operation."
                },
                "list": {
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "The parent (project and location) where the operations will be listed. Specified in the format `projects/*/locations/*`. Location \"-\" matches all zones and all regions.",
                      "type": "string",
                      "location": "query"
                    },
                    "projectId": {
                      "required": true,
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the parent field.",
                      "type": "string",
                      "location": "path"
                    },
                    "zone": {
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) to return operations for, or `-` for all zones. This field has been deprecated and replaced by the parent field.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "description": "Lists all operations in a project in the specified zone or all zones.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "container.projects.zones.operations.list",
                  "parameterOrder": [
                    "projectId",
                    "zone"
                  ],
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/operations",
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/operations"
                }
              }
            },
            "clusters": {
              "resources": {
                "nodePools": {
                  "methods": {
                    "setSize": {
                      "parameters": {
                        "clusterId": {
                          "location": "path",
                          "description": "Required. Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field.",
                          "type": "string",
                          "required": true
                        },
                        "zone": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
                        },
                        "projectId": {
                          "location": "path",
                          "required": true,
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                          "type": "string"
                        },
                        "nodePoolId": {
                          "description": "Required. Deprecated. The name of the node pool to update. This field has been deprecated and replaced by the name field.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "request": {
                        "$ref": "SetNodePoolSizeRequest"
                      },
                      "description": "SetNodePoolSizeRequest sets the size of a node pool. The new size will be used for all replicas, including future replicas created by modifying NodePool.locations.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/setSize",
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/setSize",
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "container.projects.zones.clusters.nodePools.setSize",
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId",
                        "nodePoolId"
                      ]
                    },
                    "autoscaling": {
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "SetNodePoolAutoscalingRequest"
                      },
                      "description": "Sets the autoscaling settings of a specific node pool.",
                      "id": "container.projects.zones.clusters.nodePools.autoscaling",
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/autoscaling",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/autoscaling",
                      "parameters": {
                        "zone": {
                          "location": "path",
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                          "type": "string",
                          "required": true
                        },
                        "nodePoolId": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. Deprecated. The name of the node pool to upgrade. This field has been deprecated and replaced by the name field.",
                          "required": true
                        },
                        "projectId": {
                          "location": "path",
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                          "required": true,
                          "type": "string"
                        },
                        "clusterId": {
                          "required": true,
                          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId",
                        "nodePoolId"
                      ]
                    },
                    "update": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/update",
                      "parameters": {
                        "zone": {
                          "required": true,
                          "type": "string",
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                          "location": "path"
                        },
                        "projectId": {
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "nodePoolId": {
                          "location": "path",
                          "description": "Required. Deprecated. The name of the node pool to upgrade. This field has been deprecated and replaced by the name field.",
                          "required": true,
                          "type": "string"
                        },
                        "clusterId": {
                          "required": true,
                          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId",
                        "nodePoolId"
                      ],
                      "description": "Updates the version and/or image type of a specific node pool.",
                      "id": "container.projects.zones.clusters.nodePools.update",
                      "request": {
                        "$ref": "UpdateNodePoolRequest"
                      },
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/update"
                    },
                    "list": {
                      "description": "Lists the node pools for a cluster.",
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId"
                      ],
                      "httpMethod": "GET",
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools",
                      "id": "container.projects.zones.clusters.nodePools.list",
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListNodePoolsResponse"
                      },
                      "parameters": {
                        "parent": {
                          "description": "The parent (project, location, cluster name) where the node pools will be listed. Specified in the format `projects/*/locations/*/clusters/*`.",
                          "type": "string",
                          "location": "query"
                        },
                        "projectId": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber). This field has been deprecated and replaced by the parent field."
                        },
                        "zone": {
                          "required": true,
                          "location": "path",
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.",
                          "type": "string"
                        },
                        "clusterId": {
                          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the parent field.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      }
                    },
                    "setManagement": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "container.projects.zones.clusters.nodePools.setManagement",
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId",
                        "nodePoolId"
                      ],
                      "httpMethod": "POST",
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/setManagement",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Sets the NodeManagement options for a node pool.",
                      "request": {
                        "$ref": "SetNodePoolManagementRequest"
                      },
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}/setManagement",
                      "parameters": {
                        "zone": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
                        },
                        "nodePoolId": {
                          "description": "Required. Deprecated. The name of the node pool to update. This field has been deprecated and replaced by the name field.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "projectId": {
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "clusterId": {
                          "required": true,
                          "location": "path",
                          "description": "Required. Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field.",
                          "type": "string"
                        }
                      }
                    },
                    "get": {
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "NodePool"
                      },
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}",
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId",
                        "nodePoolId"
                      ],
                      "id": "container.projects.zones.clusters.nodePools.get",
                      "parameters": {
                        "projectId": {
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber). This field has been deprecated and replaced by the name field.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "zone": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                          "required": true
                        },
                        "name": {
                          "description": "The name (project, location, cluster, node pool id) of the node pool to get. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
                          "location": "query",
                          "type": "string"
                        },
                        "clusterId": {
                          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "nodePoolId": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. Deprecated. The name of the node pool. This field has been deprecated and replaced by the name field."
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}",
                      "description": "Retrieves the requested node pool.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "rollback": {
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId",
                        "nodePoolId"
                      ],
                      "description": "Rolls back a previously Aborted or Failed NodePool upgrade. This makes no changes if the last upgrade successfully completed.",
                      "request": {
                        "$ref": "RollbackNodePoolUpgradeRequest"
                      },
                      "parameters": {
                        "nodePoolId": {
                          "description": "Required. Deprecated. The name of the node pool to rollback. This field has been deprecated and replaced by the name field.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "projectId": {
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "clusterId": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. Deprecated. The name of the cluster to rollback. This field has been deprecated and replaced by the name field."
                        },
                        "zone": {
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}:rollback",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}:rollback",
                      "id": "container.projects.zones.clusters.nodePools.rollback",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Operation"
                      }
                    },
                    "create": {
                      "request": {
                        "$ref": "CreateNodePoolRequest"
                      },
                      "parameters": {
                        "zone": {
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "clusterId": {
                          "required": true,
                          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the parent field.",
                          "type": "string",
                          "location": "path"
                        },
                        "projectId": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber). This field has been deprecated and replaced by the parent field."
                        }
                      },
                      "id": "container.projects.zones.clusters.nodePools.create",
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools",
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Creates a node pool for a cluster.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId"
                      ],
                      "httpMethod": "POST"
                    },
                    "delete": {
                      "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}",
                      "description": "Deletes a node pool from a cluster.",
                      "parameters": {
                        "clusterId": {
                          "type": "string",
                          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.",
                          "required": true,
                          "location": "path"
                        },
                        "nodePoolId": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. Deprecated. The name of the node pool to delete. This field has been deprecated and replaced by the name field."
                        },
                        "zone": {
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "projectId": {
                          "required": true,
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber). This field has been deprecated and replaced by the name field.",
                          "type": "string",
                          "location": "path"
                        },
                        "name": {
                          "location": "query",
                          "description": "The name (project, location, cluster, node pool id) of the node pool to delete. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
                          "type": "string"
                        }
                      },
                      "id": "container.projects.zones.clusters.nodePools.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE",
                      "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/nodePools/{nodePoolId}",
                      "parameterOrder": [
                        "projectId",
                        "zone",
                        "clusterId",
                        "nodePoolId"
                      ],
                      "response": {
                        "$ref": "Operation"
                      }
                    }
                  }
                }
              },
              "methods": {
                "setNetworkPolicy": {
                  "parameters": {
                    "zone": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "type": "string"
                    },
                    "clusterId": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.",
                      "location": "path"
                    },
                    "projectId": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber). This field has been deprecated and replaced by the name field."
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "id": "container.projects.zones.clusters.setNetworkPolicy",
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setNetworkPolicy",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "SetNetworkPolicyRequest"
                  },
                  "description": "Enables or disables Network Policy for a cluster.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setNetworkPolicy"
                },
                "monitoring": {
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "id": "container.projects.zones.clusters.monitoring",
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/monitoring",
                  "parameters": {
                    "zone": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "location": "path"
                    },
                    "clusterId": {
                      "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field."
                    }
                  },
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/monitoring",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the monitoring service for a specific cluster.",
                  "request": {
                    "$ref": "SetMonitoringServiceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "addons": {
                  "id": "container.projects.zones.clusters.addons",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/addons",
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/addons",
                  "parameters": {
                    "projectId": {
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "zone": {
                      "required": true,
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "path"
                    },
                    "clusterId": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "description": "Sets the addons for a specific cluster.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "SetAddonsConfigRequest"
                  }
                },
                "logging": {
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/logging",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "clusterId": {
                      "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "zone": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
                    },
                    "projectId": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "SetLoggingServiceRequest"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/logging",
                  "description": "Sets the logging service for a specific cluster.",
                  "id": "container.projects.zones.clusters.logging",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ]
                },
                "completeIpRotation": {
                  "request": {
                    "$ref": "CompleteIPRotationRequest"
                  },
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "description": "Completes master IP rotation.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "projectId": {
                      "required": true,
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber). This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "path"
                    },
                    "clusterId": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.",
                      "location": "path"
                    },
                    "zone": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:completeIpRotation",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:completeIpRotation",
                  "id": "container.projects.zones.clusters.completeIpRotation"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "container.projects.zones.clusters.list",
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters",
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters",
                  "response": {
                    "$ref": "ListClustersResponse"
                  },
                  "description": "Lists all clusters owned by a project in either the specified zone or all zones.",
                  "httpMethod": "GET",
                  "parameters": {
                    "projectId": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the parent field.",
                      "required": true
                    },
                    "zone": {
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides, or \"-\" for all zones. This field has been deprecated and replaced by the parent field.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "parent": {
                      "type": "string",
                      "description": "The parent (project and location) where the clusters will be listed. Specified in the format `projects/*/locations/*`. Location \"-\" matches all zones and all regions.",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "zone"
                  ]
                },
                "startIpRotation": {
                  "description": "Starts master IP rotation.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:startIpRotation",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "StartIPRotationRequest"
                  },
                  "id": "container.projects.zones.clusters.startIpRotation",
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:startIpRotation",
                  "parameters": {
                    "projectId": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber). This field has been deprecated and replaced by the name field."
                    },
                    "clusterId": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.",
                      "type": "string"
                    },
                    "zone": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "resourceLabels": {
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/resourceLabels",
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/resourceLabels",
                  "id": "container.projects.zones.clusters.resourceLabels",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "zone": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
                    },
                    "clusterId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field."
                    },
                    "projectId": {
                      "type": "string",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber). This field has been deprecated and replaced by the name field.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "request": {
                    "$ref": "SetLabelsRequest"
                  },
                  "description": "Sets labels on a cluster."
                },
                "legacyAbac": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/legacyAbac",
                  "description": "Enables or disables the ABAC authorization mechanism on a cluster.",
                  "request": {
                    "$ref": "SetLegacyAbacRequest"
                  },
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/legacyAbac",
                  "id": "container.projects.zones.clusters.legacyAbac",
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "zone": {
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "clusterId": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field."
                    },
                    "projectId": {
                      "required": true,
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "setMaintenancePolicy": {
                  "description": "Sets the maintenance policy for a cluster.",
                  "httpMethod": "POST",
                  "id": "container.projects.zones.clusters.setMaintenancePolicy",
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "request": {
                    "$ref": "SetMaintenancePolicyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setMaintenancePolicy",
                  "parameters": {
                    "projectId": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840)."
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "Required. The name of the cluster to update.",
                      "location": "path",
                      "required": true
                    },
                    "zone": {
                      "location": "path",
                      "description": "Required. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setMaintenancePolicy"
                },
                "delete": {
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "location": "query",
                      "description": "The name (project, location, cluster) of the cluster to delete. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "type": "string"
                    },
                    "zone": {
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "projectId": {
                      "location": "path",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "required": true
                    },
                    "clusterId": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Deprecated. The name of the cluster to delete. This field has been deprecated and replaced by the name field.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "DELETE",
                  "description": "Deletes the cluster, including the Kubernetes endpoint and all worker nodes. Firewalls and routes that were configured during cluster creation are also deleted. Other Google Compute Engine resources that might be in use by the cluster, such as load balancer resources, are not deleted if they weren't present when the cluster was initially created.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "container.projects.zones.clusters.delete",
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}"
                },
                "create": {
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters",
                  "id": "container.projects.zones.clusters.create",
                  "parameters": {
                    "zone": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.",
                      "required": true
                    },
                    "projectId": {
                      "required": true,
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the parent field.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "CreateClusterRequest"
                  },
                  "description": "Creates a cluster, consisting of the specified number and type of Google Compute Engine instances. By default, the cluster is created in the project's [default network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks). One firewall is added for the cluster. After cluster creation, the Kubelet creates routes for each node to allow the containers on that node to communicate with all other instances in the cluster. Finally, an entry is added to the project's global metadata indicating which CIDR range the cluster is using.",
                  "httpMethod": "POST",
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "projectId",
                    "zone"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "locations": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Sets the locations for a specific cluster. Deprecated. Use [projects.locations.clusters.update](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters/update) instead.",
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/locations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/locations",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "SetLocationsRequest"
                  },
                  "id": "container.projects.zones.clusters.locations",
                  "parameters": {
                    "zone": {
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "clusterId": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
                      "required": true
                    },
                    "projectId": {
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ]
                },
                "get": {
                  "parameters": {
                    "clusterId": {
                      "description": "Required. Deprecated. The name of the cluster to retrieve. This field has been deprecated and replaced by the name field.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name (project, location, cluster) of the cluster to retrieve. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "location": "query"
                    },
                    "projectId": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                      "location": "path"
                    },
                    "zone": {
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "description": "Gets the details for a specific cluster.",
                  "response": {
                    "$ref": "Cluster"
                  },
                  "id": "container.projects.zones.clusters.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}",
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}",
                  "httpMethod": "GET"
                },
                "update": {
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}",
                  "httpMethod": "PUT",
                  "request": {
                    "$ref": "UpdateClusterRequest"
                  },
                  "id": "container.projects.zones.clusters.update",
                  "description": "Updates the settings for a specific cluster.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "clusterId": {
                      "required": true,
                      "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "path"
                    },
                    "zone": {
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "projectId": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ]
                },
                "setMasterAuth": {
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setMasterAuth",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "parameters": {
                    "zone": {
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "projectId": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                      "location": "path"
                    },
                    "clusterId": {
                      "required": true,
                      "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "SetMasterAuthRequest"
                  },
                  "httpMethod": "POST",
                  "id": "container.projects.zones.clusters.setMasterAuth",
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}:setMasterAuth",
                  "description": "Sets master auth materials. Currently supports changing the admin password or a specific cluster, either via password generation or explicitly setting the password."
                },
                "master": {
                  "request": {
                    "$ref": "UpdateMasterRequest"
                  },
                  "id": "container.projects.zones.clusters.master",
                  "description": "Updates the master for a specific cluster.",
                  "httpMethod": "POST",
                  "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/master",
                  "parameterOrder": [
                    "projectId",
                    "zone",
                    "clusterId"
                  ],
                  "parameters": {
                    "zone": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "location": "path"
                    },
                    "clusterId": {
                      "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "projectId": {
                      "required": true,
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/projects/{projectId}/zones/{zone}/clusters/{clusterId}/master",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            }
          },
          "methods": {
            "getServerconfig": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ServerConfig"
              },
              "description": "Returns configuration info about the Google Kubernetes Engine service.",
              "id": "container.projects.zones.getServerconfig",
              "parameters": {
                "projectId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field."
                },
                "name": {
                  "location": "query",
                  "description": "The name (project and location) of the server config to get, specified in the format `projects/*/locations/*`.",
                  "type": "string"
                },
                "zone": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) to return operations for. This field has been deprecated and replaced by the name field."
                }
              },
              "parameterOrder": [
                "projectId",
                "zone"
              ],
              "httpMethod": "GET",
              "path": "v1beta1/projects/{projectId}/zones/{zone}/serverconfig",
              "flatPath": "v1beta1/projects/{projectId}/zones/{zone}/serverconfig"
            }
          }
        },
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "container.projects.locations.operations.get",
                  "parameters": {
                    "name": {
                      "description": "The name (project, location, operation id) of the operation to get. Specified in the format `projects/*/locations/*/operations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "operationId": {
                      "type": "string",
                      "description": "Required. Deprecated. The server-assigned `name` of the operation. This field has been deprecated and replaced by the name field.",
                      "location": "query"
                    },
                    "projectId": {
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                      "location": "query",
                      "type": "string"
                    },
                    "zone": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "GET",
                  "path": "v1beta1/{+name}",
                  "description": "Gets the specified operation.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "cancel": {
                  "path": "v1beta1/{+name}:cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "description": "Cancels the specified operation.",
                  "parameters": {
                    "name": {
                      "description": "The name (project, location, operation id) of the operation to cancel. Specified in the format `projects/*/locations/*/operations/*`.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "id": "container.projects.locations.operations.cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "The parent (project and location) where the operations will be listed. Specified in the format `projects/*/locations/*`. Location \"-\" matches all zones and all regions.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "zone": {
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) to return operations for, or `-` for all zones. This field has been deprecated and replaced by the parent field.",
                      "type": "string",
                      "location": "query"
                    },
                    "projectId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the parent field."
                    }
                  },
                  "path": "v1beta1/{+parent}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "container.projects.locations.operations.list",
                  "description": "Lists all operations in a project in the specified zone or all zones.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations"
                }
              }
            },
            "clusters": {
              "methods": {
                "setMaintenancePolicy": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "SetMaintenancePolicyRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "container.projects.locations.clusters.setMaintenancePolicy",
                  "httpMethod": "POST",
                  "description": "Sets the maintenance policy for a cluster.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setMaintenancePolicy",
                  "path": "v1beta1/{+name}:setMaintenancePolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "required": true,
                      "description": "The name (project, location, cluster name) of the cluster to set maintenance policy. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "setMonitoring": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setMonitoring",
                  "description": "Sets the monitoring service for a specific cluster.",
                  "request": {
                    "$ref": "SetMonitoringServiceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1beta1/{+name}:setMonitoring",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "container.projects.locations.clusters.setMonitoring",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The name (project, location, cluster) of the cluster to set monitoring. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$"
                    }
                  },
                  "httpMethod": "POST"
                },
                "setNetworkPolicy": {
                  "request": {
                    "$ref": "SetNetworkPolicyRequest"
                  },
                  "description": "Enables or disables Network Policy for a cluster.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setNetworkPolicy",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "description": "The name (project, location, cluster name) of the cluster to set networking policy. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "container.projects.locations.clusters.setNetworkPolicy",
                  "path": "v1beta1/{+name}:setNetworkPolicy",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getJwks": {
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The cluster (project, location, cluster name) to get keys for. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$"
                    }
                  },
                  "id": "container.projects.locations.clusters.getJwks",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/jwks",
                  "description": "Gets the public component of the cluster signing keys in JSON Web Key format. This API is not yet intended for general use, and is not available for all clusters.",
                  "path": "v1beta1/{+parent}/jwks",
                  "response": {
                    "$ref": "GetJSONWebKeysResponse"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "setLogging": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the logging service for a specific cluster.",
                  "id": "container.projects.locations.clusters.setLogging",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "The name (project, location, cluster) of the cluster to set logging. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "SetLoggingServiceRequest"
                  },
                  "path": "v1beta1/{+name}:setLogging",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setLogging"
                },
                "get": {
                  "path": "v1beta1/{+name}",
                  "httpMethod": "GET",
                  "parameters": {
                    "clusterId": {
                      "description": "Required. Deprecated. The name of the cluster to retrieve. This field has been deprecated and replaced by the name field.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "description": "The name (project, location, cluster) of the cluster to retrieve. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "type": "string"
                    },
                    "zone": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
                    },
                    "projectId": {
                      "location": "query",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the details for a specific cluster.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "container.projects.locations.clusters.get",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}",
                  "response": {
                    "$ref": "Cluster"
                  }
                },
                "create": {
                  "request": {
                    "$ref": "CreateClusterRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a cluster, consisting of the specified number and type of Google Compute Engine instances. By default, the cluster is created in the project's [default network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks). One firewall is added for the cluster. After cluster creation, the Kubelet creates routes for each node to allow the containers on that node to communicate with all other instances in the cluster. Finally, an entry is added to the project's global metadata indicating which CIDR range the cluster is using.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "container.projects.locations.clusters.create",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters",
                  "httpMethod": "POST",
                  "path": "v1beta1/{+parent}/clusters",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The parent (project and location) where the cluster will be created. Specified in the format `projects/*/locations/*`."
                    }
                  }
                },
                "setMasterAuth": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setMasterAuth",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name (project, location, cluster) of the cluster to set auth. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Sets master auth materials. Currently supports changing the admin password or a specific cluster, either via password generation or explicitly setting the password.",
                  "path": "v1beta1/{+name}:setMasterAuth",
                  "id": "container.projects.locations.clusters.setMasterAuth",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "SetMasterAuthRequest"
                  }
                },
                "setResourceLabels": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "The name (project, location, cluster name) of the cluster to set labels. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets labels on a cluster.",
                  "id": "container.projects.locations.clusters.setResourceLabels",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "SetLabelsRequest"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setResourceLabels",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta1/{+name}:setResourceLabels"
                },
                "updateMaster": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the master for a specific cluster.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:updateMaster",
                  "request": {
                    "$ref": "UpdateMasterRequest"
                  },
                  "id": "container.projects.locations.clusters.updateMaster",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "description": "The name (project, location, cluster) of the cluster to update. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1beta1/{+name}:updateMaster",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "update": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the settings for a specific cluster.",
                  "request": {
                    "$ref": "UpdateClusterRequest"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "The name (project, location, cluster) of the cluster to update. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PUT",
                  "id": "container.projects.locations.clusters.update",
                  "path": "v1beta1/{+name}"
                },
                "setLocations": {
                  "path": "v1beta1/{+name}:setLocations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name (project, location, cluster) of the cluster to set locations. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Sets the locations for a specific cluster. Deprecated. Use [projects.locations.clusters.update](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters/update) instead.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setLocations",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "SetLocationsRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "container.projects.locations.clusters.setLocations",
                  "httpMethod": "POST"
                },
                "completeIpRotation": {
                  "id": "container.projects.locations.clusters.completeIpRotation",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CompleteIPRotationRequest"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "description": "The name (project, location, cluster name) of the cluster to complete IP rotation. Specified in the format `projects/*/locations/*/clusters/*`."
                    }
                  },
                  "path": "v1beta1/{+name}:completeIpRotation",
                  "description": "Completes master IP rotation.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:completeIpRotation",
                  "httpMethod": "POST"
                },
                "delete": {
                  "description": "Deletes the cluster, including the Kubernetes endpoint and all worker nodes. Firewalls and routes that were configured during cluster creation are also deleted. Other Google Compute Engine resources that might be in use by the cluster, such as load balancer resources, are not deleted if they weren't present when the cluster was initially created.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1beta1/{+name}",
                  "id": "container.projects.locations.clusters.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "zone": {
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
                      "location": "query",
                      "type": "string"
                    },
                    "clusterId": {
                      "location": "query",
                      "description": "Required. Deprecated. The name of the cluster to delete. This field has been deprecated and replaced by the name field.",
                      "type": "string"
                    },
                    "projectId": {
                      "type": "string",
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                      "location": "query"
                    },
                    "name": {
                      "description": "The name (project, location, cluster) of the cluster to delete. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$"
                    }
                  }
                },
                "setLegacyAbac": {
                  "path": "v1beta1/{+name}:setLegacyAbac",
                  "request": {
                    "$ref": "SetLegacyAbacRequest"
                  },
                  "id": "container.projects.locations.clusters.setLegacyAbac",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setLegacyAbac",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name (project, location, cluster name) of the cluster to set legacy abac. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Enables or disables the ABAC authorization mechanism on a cluster.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "description": "Lists all clusters owned by a project in either the specified zone or all zones.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters",
                  "httpMethod": "GET",
                  "path": "v1beta1/{+parent}/clusters",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListClustersResponse"
                  },
                  "id": "container.projects.locations.clusters.list",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "The parent (project and location) where the clusters will be listed. Specified in the format `projects/*/locations/*`. Location \"-\" matches all zones and all regions.",
                      "required": true,
                      "type": "string"
                    },
                    "projectId": {
                      "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the parent field.",
                      "type": "string",
                      "location": "query"
                    },
                    "zone": {
                      "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides, or \"-\" for all zones. This field has been deprecated and replaced by the parent field.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setAddons": {
                  "id": "container.projects.locations.clusters.setAddons",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:setAddons",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Sets the addons for a specific cluster.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "SetAddonsConfigRequest"
                  },
                  "parameters": {
                    "name": {
                      "description": "The name (project, location, cluster) of the cluster to set addons. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1beta1/{+name}:setAddons",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "startIpRotation": {
                  "parameters": {
                    "name": {
                      "description": "The name (project, location, cluster name) of the cluster to start IP rotation. Specified in the format `projects/*/locations/*/clusters/*`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Starts master IP rotation.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "StartIPRotationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}:startIpRotation",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}:startIpRotation",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "container.projects.locations.clusters.startIpRotation"
                }
              },
              "resources": {
                "well-known": {
                  "methods": {
                    "getOpenid-configuration": {
                      "httpMethod": "GET",
                      "id": "container.projects.locations.clusters.well-known.getOpenid-configuration",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "The cluster (project, location, cluster name) to get the discovery document for. Specified in the format `projects/*/locations/*/clusters/*`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$"
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/.well-known/openid-configuration",
                      "response": {
                        "$ref": "GetOpenIDConfigResponse"
                      },
                      "path": "v1beta1/{+parent}/.well-known/openid-configuration",
                      "description": "Gets the OIDC discovery document for the cluster. See the [OpenID Connect Discovery 1.0 specification](https://openid.net/specs/openid-connect-discovery-1_0.html) for details. This API is not yet intended for general use, and is not available for all clusters."
                    }
                  }
                },
                "nodePools": {
                  "methods": {
                    "create": {
                      "request": {
                        "$ref": "CreateNodePoolRequest"
                      },
                      "path": "v1beta1/{+parent}/nodePools",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "description": "The parent (project, location, cluster name) where the node pool will be created. Specified in the format `projects/*/locations/*/clusters/*`.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$"
                        }
                      },
                      "description": "Creates a node pool for a cluster.",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "container.projects.locations.clusters.nodePools.create",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools",
                      "response": {
                        "$ref": "Operation"
                      }
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "clusterId": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field."
                        },
                        "zone": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
                        },
                        "nodePoolId": {
                          "description": "Required. Deprecated. The name of the node pool to delete. This field has been deprecated and replaced by the name field.",
                          "type": "string",
                          "location": "query"
                        },
                        "name": {
                          "description": "The name (project, location, cluster, node pool id) of the node pool to delete. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/nodePools/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        },
                        "projectId": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber). This field has been deprecated and replaced by the name field."
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}",
                      "id": "container.projects.locations.clusters.nodePools.delete",
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "DELETE",
                      "description": "Deletes a node pool from a cluster.",
                      "path": "v1beta1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "update": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Updates the version and/or image type of a specific node pool.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+name}",
                      "id": "container.projects.locations.clusters.nodePools.update",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/nodePools/[^/]+$",
                          "type": "string",
                          "description": "The name (project, location, cluster, node pool) of the node pool to update. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "UpdateNodePoolRequest"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PUT",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}"
                    },
                    "setSize": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}:setSize",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "SetNodePoolSizeRequest"
                      },
                      "id": "container.projects.locations.clusters.nodePools.setSize",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/nodePools/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "The name (project, location, cluster, node pool id) of the node pool to set size. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
                          "location": "path"
                        }
                      },
                      "path": "v1beta1/{+name}:setSize",
                      "description": "SetNodePoolSizeRequest sets the size of a node pool. The new size will be used for all replicas, including future replicas created by modifying NodePool.locations."
                    },
                    "rollback": {
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/nodePools/[^/]+$",
                          "type": "string",
                          "description": "The name (project, location, cluster, node pool id) of the node poll to rollback upgrade. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "RollbackNodePoolUpgradeRequest"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}:rollback",
                      "id": "container.projects.locations.clusters.nodePools.rollback",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Rolls back a previously Aborted or Failed NodePool upgrade. This makes no changes if the last upgrade successfully completed.",
                      "path": "v1beta1/{+name}:rollback"
                    },
                    "list": {
                      "description": "Lists the node pools for a cluster.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "projectId": {
                          "location": "query",
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber). This field has been deprecated and replaced by the parent field.",
                          "type": "string"
                        },
                        "zone": {
                          "type": "string",
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "description": "The parent (project, location, cluster name) where the node pools will be listed. Specified in the format `projects/*/locations/*/clusters/*`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+$",
                          "required": true
                        },
                        "clusterId": {
                          "type": "string",
                          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the parent field.",
                          "location": "query"
                        }
                      },
                      "id": "container.projects.locations.clusters.nodePools.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+parent}/nodePools",
                      "response": {
                        "$ref": "ListNodePoolsResponse"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools",
                      "httpMethod": "GET"
                    },
                    "setManagement": {
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}:setManagement",
                      "id": "container.projects.locations.clusters.nodePools.setManagement",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Sets the NodeManagement options for a node pool.",
                      "request": {
                        "$ref": "SetNodePoolManagementRequest"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "The name (project, location, cluster, node pool id) of the node pool to set management properties. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/nodePools/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1beta1/{+name}:setManagement",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "setAutoscaling": {
                      "path": "v1beta1/{+name}:setAutoscaling",
                      "description": "Sets the autoscaling settings of a specific node pool.",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}:setAutoscaling",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "The name (project, location, cluster, node pool) of the node pool to set autoscaler settings. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/nodePools/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "SetNodePoolAutoscalingRequest"
                      },
                      "httpMethod": "POST",
                      "id": "container.projects.locations.clusters.nodePools.setAutoscaling"
                    },
                    "get": {
                      "response": {
                        "$ref": "NodePool"
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Retrieves the requested node pool.",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/clusters/[^/]+/nodePools/[^/]+$",
                          "location": "path",
                          "description": "The name (project, location, cluster, node pool id) of the node pool to get. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
                          "required": true
                        },
                        "clusterId": {
                          "type": "string",
                          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.",
                          "location": "query"
                        },
                        "nodePoolId": {
                          "description": "Required. Deprecated. The name of the node pool. This field has been deprecated and replaced by the name field.",
                          "type": "string",
                          "location": "query"
                        },
                        "projectId": {
                          "type": "string",
                          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber). This field has been deprecated and replaced by the name field.",
                          "location": "query"
                        },
                        "zone": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
                        }
                      },
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/clusters/{clustersId}/nodePools/{nodePoolsId}",
                      "id": "container.projects.locations.clusters.nodePools.get"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "getServerConfig": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "zone": {
                  "location": "query",
                  "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) to return operations for. This field has been deprecated and replaced by the name field.",
                  "type": "string"
                },
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "description": "The name (project and location) of the server config to get, specified in the format `projects/*/locations/*`.",
                  "required": true,
                  "type": "string"
                },
                "projectId": {
                  "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
                  "location": "query",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/serverConfig",
              "response": {
                "$ref": "ServerConfig"
              },
              "description": "Returns configuration info about the Google Kubernetes Engine service.",
              "path": "v1beta1/{+name}/serverConfig",
              "id": "container.projects.locations.getServerConfig",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "list": {
              "id": "container.projects.locations.list",
              "flatPath": "v1beta1/projects/{projectsId}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "path": "v1beta1/{+parent}/locations",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "description": "Fetches locations that offer Google Kubernetes Engine.",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. Contains the name of the resource requested. Specified in the format `projects/*`.",
                  "type": "string"
                }
              }
            }
          }
        },
        "aggregated": {
          "resources": {
            "usableSubnetworks": {
              "methods": {
                "list": {
                  "description": "Lists subnetworks that can be used for creating clusters in a project.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent project where subnetworks are usable. Specified in the format `projects/*`.",
                      "pattern": "^projects/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Specifies a page token to use. Set this to the nextPageToken returned by previous list requests to get the next page of results."
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "The max number of results per page that should be returned. If the number of available results is larger than `page_size`, a `next_page_token` is returned which can be used to get the next page of results in subsequent requests. Acceptable values are 0 to 500, inclusive. (Default: 500)"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filtering currently only supports equality on the networkProjectId and must be in the form: \"networkProjectId=[PROJECTID]\", where `networkProjectId` is the project which owns the listed subnetworks. This defaults to the parent project ID."
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/aggregated/usableSubnetworks",
                  "path": "v1beta1/{+parent}/aggregated/usableSubnetworks",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "container.projects.aggregated.usableSubnetworks.list",
                  "response": {
                    "$ref": "ListUsableSubnetworksResponse"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerName": "Google",
  "title": "Kubernetes Engine API",
  "name": "container",
  "fullyEncodeReservedExpansion": true,
  "documentationLink": "https://cloud.google.com/container-engine/",
  "discoveryVersion": "v1",
  "mtlsRootUrl": "https://container.mtls.googleapis.com/",
  "parameters": {
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "alt": {
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean",
      "default": "true"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    }
  },
  "rootUrl": "https://container.googleapis.com/",
  "id": "container:v1beta1",
  "canonicalName": "Container",
  "schemas": {
    "ReservationAffinity": {
      "id": "ReservationAffinity",
      "description": "[ReservationAffinity](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) is the configuration of desired reservation which instances could take capacity from.",
      "properties": {
        "consumeReservationType": {
          "type": "string",
          "enumDescriptions": [
            "Default value. This should not be used.",
            "Do not consume from any reserved capacity.",
            "Consume any reservation available.",
            "Must consume from a specific reservation. Must specify key value fields for specifying the reservations."
          ],
          "description": "Corresponds to the type of reservation consumption.",
          "enum": [
            "UNSPECIFIED",
            "NO_RESERVATION",
            "ANY_RESERVATION",
            "SPECIFIC_RESERVATION"
          ]
        },
        "key": {
          "description": "Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify \"googleapis.com/reservation-name\" as the key and specify the name of your reservation as its value.",
          "type": "string"
        },
        "values": {
          "description": "Corresponds to the label value(s) of reservation resource(s).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "VirtualNIC": {
      "description": "Configuration of gVNIC feature.",
      "properties": {
        "enabled": {
          "description": "Whether gVNIC features are enabled in the node pool.",
          "type": "boolean"
        }
      },
      "id": "VirtualNIC",
      "type": "object"
    },
    "DnsCacheConfig": {
      "id": "DnsCacheConfig",
      "properties": {
        "enabled": {
          "description": "Whether NodeLocal DNSCache is enabled for this cluster.",
          "type": "boolean"
        }
      },
      "description": "Configuration for NodeLocal DNSCache",
      "type": "object"
    },
    "UpgradeEvent": {
      "type": "object",
      "description": "UpgradeEvent is a notification sent to customers by the cluster server when a resource is upgrading.",
      "id": "UpgradeEvent",
      "properties": {
        "operation": {
          "description": "The operation associated with this upgrade.",
          "type": "string"
        },
        "targetVersion": {
          "description": "The target version for the upgrade.",
          "type": "string"
        },
        "currentVersion": {
          "type": "string",
          "description": "The current version before the upgrade."
        },
        "operationStartTime": {
          "format": "google-datetime",
          "description": "The time when the operation was started.",
          "type": "string"
        },
        "resource": {
          "description": "Optional relative path to the resource. For example in node pool upgrades, the relative path of the node pool.",
          "type": "string"
        },
        "resourceType": {
          "enum": [
            "UPGRADE_RESOURCE_TYPE_UNSPECIFIED",
            "MASTER",
            "NODE_POOL"
          ],
          "enumDescriptions": [
            "Default value. This shouldn't be used.",
            "Master / control plane",
            "Node pool"
          ],
          "type": "string",
          "description": "The resource type that is upgrading."
        }
      }
    },
    "ClientCertificateConfig": {
      "id": "ClientCertificateConfig",
      "description": "Configuration for client certificates on the cluster.",
      "type": "object",
      "properties": {
        "issueClientCertificate": {
          "description": "Issue a client certificate.",
          "type": "boolean"
        }
      }
    },
    "ReleaseChannel": {
      "type": "object",
      "description": "ReleaseChannel indicates which release channel a cluster is subscribed to. Release channels are arranged in order of risk. When a cluster is subscribed to a release channel, Google maintains both the master version and the node version. Node auto-upgrade defaults to true and cannot be disabled.",
      "properties": {
        "channel": {
          "enumDescriptions": [
            "No channel specified.",
            "RAPID channel is offered on an early access basis for customers who want to test new releases. WARNING: Versions available in the RAPID Channel may be subject to unresolved issues with no known workaround and are not subject to any SLAs.",
            "Clusters subscribed to REGULAR receive versions that are considered GA quality. REGULAR is intended for production users who want to take advantage of new features.",
            "Clusters subscribed to STABLE receive versions that are known to be stable and reliable in production."
          ],
          "type": "string",
          "enum": [
            "UNSPECIFIED",
            "RAPID",
            "REGULAR",
            "STABLE"
          ],
          "description": "channel specifies which release channel the cluster is subscribed to."
        }
      },
      "id": "ReleaseChannel"
    },
    "NodeKubeletConfig": {
      "type": "object",
      "properties": {
        "podPidsLimit": {
          "description": "Set the Pod PID limits. See https://kubernetes.io/docs/concepts/policy/pid-limiting/#pod-pid-limits Controls the maximum number of processes allowed to run in a pod. The value must be greater than or equal to 1024 and less than 4194304.",
          "type": "string",
          "format": "int64"
        },
        "cpuCfsQuota": {
          "description": "Enable CPU CFS quota enforcement for containers that specify CPU limits. This option is enabled by default which makes kubelet use CFS quota (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to enforce container CPU limits. Otherwise, CPU limits will not be enforced at all. Disable this option to mitigate CPU throttling problems while still having your pods to be in Guaranteed QoS class by specifying the CPU limits. The default value is 'true' if unspecified.",
          "type": "boolean"
        },
        "cpuManagerPolicy": {
          "description": "Control the CPU management policy on the node. See https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/ The following values are allowed. * \"none\": the default, which represents the existing scheduling behavior. * \"static\": allows pods with certain resource characteristics to be granted increased CPU affinity and exclusivity on the node. The default value is 'none' if unspecified.",
          "type": "string"
        },
        "cpuCfsQuotaPeriod": {
          "type": "string",
          "description": "Set the CPU CFS quota period value 'cpu.cfs_period_us'. The string must be a sequence of decimal numbers, each with optional fraction and a unit suffix, such as \"300ms\". Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\". The value must be a positive duration."
        }
      },
      "description": "Node kubelet configs.",
      "id": "NodeKubeletConfig"
    },
    "HttpCacheControlResponseHeader": {
      "description": "RFC-2616: cache control support",
      "id": "HttpCacheControlResponseHeader",
      "properties": {
        "directive": {
          "description": "14.9 request and response directives",
          "type": "string"
        },
        "age": {
          "description": "14.6 response cache age, in seconds since the response is generated",
          "format": "int64",
          "type": "string"
        },
        "expires": {
          "description": "14.21 response cache expires, in RFC 1123 date format",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IstioConfig": {
      "description": "Configuration options for Istio addon.",
      "id": "IstioConfig",
      "type": "object",
      "properties": {
        "disabled": {
          "description": "Whether Istio is enabled for this cluster.",
          "type": "boolean"
        },
        "auth": {
          "description": "The specified Istio auth mode, either none, or mutual TLS.",
          "enum": [
            "AUTH_NONE",
            "AUTH_MUTUAL_TLS"
          ],
          "type": "string",
          "enumDescriptions": [
            "auth not enabled",
            "auth mutual TLS enabled"
          ]
        }
      }
    },
    "StatusCondition": {
      "properties": {
        "canonicalCode": {
          "description": "Canonical code of the condition.",
          "enum": [
            "OK",
            "CANCELLED",
            "UNKNOWN",
            "INVALID_ARGUMENT",
            "DEADLINE_EXCEEDED",
            "NOT_FOUND",
            "ALREADY_EXISTS",
            "PERMISSION_DENIED",
            "UNAUTHENTICATED",
            "RESOURCE_EXHAUSTED",
            "FAILED_PRECONDITION",
            "ABORTED",
            "OUT_OF_RANGE",
            "UNIMPLEMENTED",
            "INTERNAL",
            "UNAVAILABLE",
            "DATA_LOSS"
          ],
          "enumDescriptions": [
            "Not an error; returned on success HTTP Mapping: 200 OK",
            "The operation was cancelled, typically by the caller. HTTP Mapping: 499 Client Closed Request",
            "Unknown error. For example, this error may be returned when a `Status` value received from another address space belongs to an error space that is not known in this address space. Also errors raised by APIs that do not return enough error information may be converted to this error. HTTP Mapping: 500 Internal Server Error",
            "The client specified an invalid argument. Note that this differs from `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments that are problematic regardless of the state of the system (e.g., a malformed file name). HTTP Mapping: 400 Bad Request",
            "The deadline expired before the operation could complete. For operations that change the state of the system, this error may be returned even if the operation has completed successfully. For example, a successful response from a server could have been delayed long enough for the deadline to expire. HTTP Mapping: 504 Gateway Timeout",
            "Some requested entity (e.g., file or directory) was not found. Note to server developers: if a request is denied for an entire class of users, such as gradual feature rollout or undocumented allowlist, `NOT_FOUND` may be used. If a request is denied for some users within a class of users, such as user-based access control, `PERMISSION_DENIED` must be used. HTTP Mapping: 404 Not Found",
            "The entity that a client attempted to create (e.g., file or directory) already exists. HTTP Mapping: 409 Conflict",
            "The caller does not have permission to execute the specified operation. `PERMISSION_DENIED` must not be used for rejections caused by exhausting some resource (use `RESOURCE_EXHAUSTED` instead for those errors). `PERMISSION_DENIED` must not be used if the caller can not be identified (use `UNAUTHENTICATED` instead for those errors). This error code does not imply the request is valid or the requested entity exists or satisfies other pre-conditions. HTTP Mapping: 403 Forbidden",
            "The request does not have valid authentication credentials for the operation. HTTP Mapping: 401 Unauthorized",
            "Some resource has been exhausted, perhaps a per-user quota, or perhaps the entire file system is out of space. HTTP Mapping: 429 Too Many Requests",
            "The operation was rejected because the system is not in a state required for the operation's execution. For example, the directory to be deleted is non-empty, an rmdir operation is applied to a non-directory, etc. Service implementors can use the following guidelines to decide between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`: (a) Use `UNAVAILABLE` if the client can retry just the failing call. (b) Use `ABORTED` if the client should retry at a higher level. For example, when a client-specified test-and-set fails, indicating the client should restart a read-modify-write sequence. (c) Use `FAILED_PRECONDITION` if the client should not retry until the system state has been explicitly fixed. For example, if an \"rmdir\" fails because the directory is non-empty, `FAILED_PRECONDITION` should be returned since the client should not retry unless the files are deleted from the directory. HTTP Mapping: 400 Bad Request",
            "The operation was aborted, typically due to a concurrency issue such as a sequencer check failure or transaction abort. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 409 Conflict",
            "The operation was attempted past the valid range. E.g., seeking or reading past end-of-file. Unlike `INVALID_ARGUMENT`, this error indicates a problem that may be fixed if the system state changes. For example, a 32-bit file system will generate `INVALID_ARGUMENT` if asked to read at an offset that is not in the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked to read from an offset past the current file size. There is a fair bit of overlap between `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend using `OUT_OF_RANGE` (the more specific error) when it applies so that callers who are iterating through a space can easily look for an `OUT_OF_RANGE` error to detect when they are done. HTTP Mapping: 400 Bad Request",
            "The operation is not implemented or is not supported/enabled in this service. HTTP Mapping: 501 Not Implemented",
            "Internal errors. This means that some invariants expected by the underlying system have been broken. This error code is reserved for serious errors. HTTP Mapping: 500 Internal Server Error",
            "The service is currently unavailable. This is most likely a transient condition, which can be corrected by retrying with a backoff. Note that it is not always safe to retry non-idempotent operations. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 503 Service Unavailable",
            "Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal Server Error"
          ],
          "type": "string"
        },
        "code": {
          "enum": [
            "UNKNOWN",
            "GCE_STOCKOUT",
            "GKE_SERVICE_ACCOUNT_DELETED",
            "GCE_QUOTA_EXCEEDED",
            "SET_BY_OPERATOR",
            "CLOUD_KMS_KEY_ERROR",
            "CA_EXPIRING"
          ],
          "enumDescriptions": [
            "UNKNOWN indicates a generic condition.",
            "GCE_STOCKOUT indicates that Google Compute Engine resources are temporarily unavailable.",
            "GKE_SERVICE_ACCOUNT_DELETED indicates that the user deleted their robot service account.",
            "Google Compute Engine quota was exceeded.",
            "Cluster state was manually changed by an SRE due to a system logic error.",
            "Unable to perform an encrypt operation against the CloudKMS key used for etcd level encryption.",
            "Cluster CA is expiring soon. More codes TBA"
          ],
          "description": "Machine-friendly representation of the condition Deprecated. Use canonical_code instead.",
          "type": "string"
        },
        "message": {
          "type": "string",
          "description": "Human-friendly representation of the condition"
        }
      },
      "type": "object",
      "id": "StatusCondition",
      "description": "StatusCondition describes why a cluster or a node pool has a certain status (e.g., ERROR or DEGRADED)."
    },
    "DatabaseEncryption": {
      "type": "object",
      "id": "DatabaseEncryption",
      "description": "Configuration of etcd encryption.",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Name of CloudKMS key to use for the encryption of secrets in etcd. Ex. projects/my-project/locations/global/keyRings/my-ring/cryptoKeys/my-key"
        },
        "state": {
          "description": "Denotes the state of etcd encryption.",
          "enum": [
            "UNKNOWN",
            "ENCRYPTED",
            "DECRYPTED"
          ],
          "enumDescriptions": [
            "Should never be set",
            "Secrets in etcd are encrypted.",
            "Secrets in etcd are stored in plain text (at etcd level) - this is unrelated to Compute Engine level full disk encryption."
          ],
          "type": "string"
        }
      }
    },
    "VerticalPodAutoscaling": {
      "id": "VerticalPodAutoscaling",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enables vertical pod autoscaling."
        }
      },
      "description": "VerticalPodAutoscaling contains global, per-cluster information required by Vertical Pod Autoscaler to automatically adjust the resources of pods controlled by it.",
      "type": "object"
    },
    "Empty": {
      "properties": {},
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "Date": {
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "id": "Date",
      "properties": {
        "year": {
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "format": "int32",
          "type": "integer"
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
        }
      },
      "type": "object"
    },
    "UpgradeAvailableEvent": {
      "type": "object",
      "id": "UpgradeAvailableEvent",
      "properties": {
        "releaseChannel": {
          "description": "The release channel of the version. If empty, it means a non-channel release.",
          "$ref": "ReleaseChannel"
        },
        "windowsVersions": {
          "description": "Windows node versions info.",
          "$ref": "WindowsVersions"
        },
        "resource": {
          "description": "Optional relative path to the resource. For example, the relative path of the node pool.",
          "type": "string"
        },
        "resourceType": {
          "enumDescriptions": [
            "Default value. This shouldn't be used.",
            "Master / control plane",
            "Node pool"
          ],
          "enum": [
            "UPGRADE_RESOURCE_TYPE_UNSPECIFIED",
            "MASTER",
            "NODE_POOL"
          ],
          "type": "string",
          "description": "The resource type of the release version."
        },
        "version": {
          "description": "The release version available for upgrade.",
          "type": "string"
        }
      },
      "description": "UpgradeAvailableEvent is a notification sent to customers when a new available version is released."
    },
    "WindowsVersion": {
      "type": "object",
      "properties": {
        "supportEndDate": {
          "description": "Mainstream support end date",
          "$ref": "Date"
        },
        "imageType": {
          "description": "Windows server image type",
          "type": "string"
        },
        "osVersion": {
          "type": "string",
          "description": "Windows server build number"
        }
      },
      "id": "WindowsVersion",
      "description": "Windows server version."
    },
    "PubSub": {
      "id": "PubSub",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable notifications for Pub/Sub."
        },
        "filter": {
          "description": "Allows filtering to one or more specific event types. If no filter is specified, or if a filter is specified with no event types, all event types will be sent",
          "$ref": "Filter"
        },
        "topic": {
          "type": "string",
          "description": "The desired Pub/Sub topic to which notifications will be sent by GKE. Format is `projects/{project}/topics/{topic}`."
        }
      },
      "description": "Pub/Sub specific notification config."
    },
    "PlacementPolicy": {
      "description": "PlacementPolicy defines the placement policy used by the node pool.",
      "id": "PlacementPolicy",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "COMPACT"
          ],
          "description": "The type of placement.",
          "type": "string",
          "enumDescriptions": [
            "TYPE_UNSPECIFIED specifies no requirements on nodes placement.",
            "COMPACT specifies node placement in the same availability domain to ensure low communication latency."
          ]
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "type": "object",
      "description": "ListLocationsResponse returns the list of all GKE locations and their recommendation state.",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A full list of GKE locations."
        },
        "nextPageToken": {
          "description": "Only return ListLocationsResponse that occur after the page_token. This value should be populated from the ListLocationsResponse.next_page_token if that response token was set (which happens when listing more Locations than fit in a single ListLocationsResponse).",
          "type": "string"
        }
      }
    },
    "LoggingComponentConfig": {
      "description": "LoggingComponentConfig is cluster logging component configuration.",
      "properties": {
        "enableComponents": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "COMPONENT_UNSPECIFIED",
              "SYSTEM_COMPONENTS",
              "WORKLOADS"
            ],
            "enumDescriptions": [
              "Default value. This shouldn't be used.",
              "system components",
              "workloads"
            ]
          },
          "description": "Select components to collect logs. An empty set would disable all logging."
        }
      },
      "id": "LoggingComponentConfig",
      "type": "object"
    },
    "SetLegacyAbacRequest": {
      "description": "SetLegacyAbacRequest enables or disables the ABAC authorization mechanism for a cluster.",
      "properties": {
        "clusterId": {
          "type": "string",
          "description": "Required. Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field."
        },
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster name) of the cluster to set legacy abac. Specified in the format `projects/*/locations/*/clusters/*`."
        },
        "enabled": {
          "type": "boolean",
          "description": "Required. Whether ABAC authorization will be enabled in the cluster."
        }
      },
      "type": "object",
      "id": "SetLegacyAbacRequest"
    },
    "NetworkPerformanceConfig": {
      "description": "Configuration of all network bandwidth tiers",
      "properties": {
        "externalIpEgressBandwidthTier": {
          "description": "Specifies the network bandwidth tier for the NodePool for traffic to external/public IP addresses.",
          "enumDescriptions": [
            "Default value",
            "Higher bandwidth, actual values based on VM size."
          ],
          "type": "string",
          "enum": [
            "TIER_UNSPECIFIED",
            "TIER_1"
          ]
        },
        "totalEgressBandwidthTier": {
          "type": "string",
          "enumDescriptions": [
            "Default value",
            "Higher bandwidth, actual values based on VM size."
          ],
          "description": "Specifies the total network bandwidth tier for the NodePool.",
          "enum": [
            "TIER_UNSPECIFIED",
            "TIER_1"
          ]
        }
      },
      "type": "object",
      "id": "NetworkPerformanceConfig"
    },
    "ClusterUpdate": {
      "id": "ClusterUpdate",
      "description": "ClusterUpdate describes an update to the cluster. Exactly one update can be applied to a cluster with each request, so at most one field can be provided.",
      "properties": {
        "desiredVerticalPodAutoscaling": {
          "description": "Cluster-level Vertical Pod Autoscaling configuration.",
          "$ref": "VerticalPodAutoscaling"
        },
        "desiredNodePoolAutoscaling": {
          "$ref": "NodePoolAutoscaling",
          "description": "Autoscaler configuration for the node pool specified in desired_node_pool_id. If there is only one pool in the cluster and desired_node_pool_id is not provided then the change applies to that single node pool."
        },
        "desiredPrivateIpv6GoogleAccess": {
          "type": "string",
          "enumDescriptions": [
            "Default value. Same as DISABLED",
            "No private access to or from Google Services",
            "Enables private IPv6 access to Google Services from GKE",
            "Enables priate IPv6 access to and from Google Services"
          ],
          "enum": [
            "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED",
            "PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED",
            "PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE",
            "PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL"
          ],
          "description": "The desired state of IPv6 connectivity to Google Services."
        },
        "desiredResourceUsageExportConfig": {
          "description": "The desired configuration for exporting resource usage.",
          "$ref": "ResourceUsageExportConfig"
        },
        "desiredShieldedNodes": {
          "description": "Configuration for Shielded Nodes.",
          "$ref": "ShieldedNodes"
        },
        "desiredIdentityServiceConfig": {
          "$ref": "IdentityServiceConfig",
          "description": "The desired Identity Service component configuration."
        },
        "desiredNodeVersion": {
          "type": "string",
          "description": "The Kubernetes version to change the nodes to (typically an upgrade). Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"-\": picks the Kubernetes master version"
        },
        "desiredReleaseChannel": {
          "$ref": "ReleaseChannel",
          "description": "The desired release channel configuration."
        },
        "desiredPrivateClusterConfig": {
          "description": "The desired private cluster configuration.",
          "$ref": "PrivateClusterConfig"
        },
        "desiredDatabaseEncryption": {
          "$ref": "DatabaseEncryption",
          "description": "Configuration of etcd encryption."
        },
        "desiredIntraNodeVisibilityConfig": {
          "description": "The desired config of Intra-node visibility.",
          "$ref": "IntraNodeVisibilityConfig"
        },
        "desiredNotificationConfig": {
          "description": "The desired notification configuration.",
          "$ref": "NotificationConfig"
        },
        "desiredDefaultSnatStatus": {
          "description": "The desired status of whether to disable default sNAT for this cluster.",
          "$ref": "DefaultSnatStatus"
        },
        "desiredLoggingConfig": {
          "description": "The desired logging configuration.",
          "$ref": "LoggingConfig"
        },
        "desiredAuthenticatorGroupsConfig": {
          "$ref": "AuthenticatorGroupsConfig",
          "description": "AuthenticatorGroupsConfig specifies the config for the cluster security groups settings."
        },
        "desiredImageType": {
          "type": "string",
          "description": "The desired image type for the node pool. NOTE: Set the \"desired_node_pool\" field as well."
        },
        "desiredL4ilbSubsettingConfig": {
          "$ref": "ILBSubsettingConfig",
          "description": "The desired L4 Internal Load Balancer Subsetting configuration."
        },
        "desiredMaster": {
          "description": "Configuration for master components.",
          "$ref": "Master"
        },
        "desiredClusterAutoscaling": {
          "$ref": "ClusterAutoscaling",
          "description": "Cluster-level autoscaling configuration."
        },
        "desiredLoggingService": {
          "description": "The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.",
          "type": "string"
        },
        "desiredServiceExternalIpsConfig": {
          "$ref": "ServiceExternalIPsConfig",
          "description": "ServiceExternalIPsConfig specifies the config for the use of Services with ExternalIPs field."
        },
        "desiredNodePoolId": {
          "type": "string",
          "description": "The node pool to be upgraded. This field is mandatory if \"desired_node_version\", \"desired_image_family\", \"desired_node_pool_autoscaling\", or \"desired_workload_metadata_config\" is specified and there is more than one node pool on the cluster."
        },
        "desiredAddonsConfig": {
          "description": "Configurations for the various addons available to run in the cluster.",
          "$ref": "AddonsConfig"
        },
        "desiredDatapathProvider": {
          "type": "string",
          "enum": [
            "DATAPATH_PROVIDER_UNSPECIFIED",
            "LEGACY_DATAPATH",
            "ADVANCED_DATAPATH"
          ],
          "description": "The desired datapath provider for the cluster.",
          "enumDescriptions": [
            "Default value.",
            "Use the IPTables implementation based on kube-proxy.",
            "Use the eBPF based GKE Dataplane V2 with additional features. See the [GKE Dataplane V2 documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/dataplane-v2) for more."
          ]
        },
        "desiredBinaryAuthorization": {
          "description": "The desired configuration options for the Binary Authorization feature.",
          "$ref": "BinaryAuthorization"
        },
        "desiredPodSecurityPolicyConfig": {
          "description": "The desired configuration options for the PodSecurityPolicy feature.",
          "$ref": "PodSecurityPolicyConfig"
        },
        "desiredWorkloadIdentityConfig": {
          "$ref": "WorkloadIdentityConfig",
          "description": "Configuration for Workload Identity."
        },
        "desiredWorkloadCertificates": {
          "description": "Configuration for issuance of mTLS keys and certificates to Kubernetes pods.",
          "$ref": "WorkloadCertificates"
        },
        "desiredLocations": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The desired list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This list must always include the cluster's primary zone. Warning: changing cluster locations will update the locations of all node pools and will result in nodes being added and/or removed."
        },
        "desiredMasterAuthorizedNetworksConfig": {
          "$ref": "MasterAuthorizedNetworksConfig",
          "description": "The desired configuration options for master authorized networks feature."
        },
        "desiredMasterVersion": {
          "type": "string",
          "description": "The Kubernetes version to change the master to. The only valid value is the latest supported version. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"-\": picks the default Kubernetes version"
        },
        "desiredWorkloadAltsConfig": {
          "$ref": "WorkloadALTSConfig",
          "description": "Configuration for direct-path (via ALTS) with workload identity."
        },
        "desiredMeshCertificates": {
          "description": "Configuration for issuance of mTLS keys and certificates to Kubernetes pods.",
          "$ref": "MeshCertificates"
        },
        "desiredClusterTelemetry": {
          "description": "The desired telemetry integration for the cluster.",
          "$ref": "ClusterTelemetry"
        },
        "desiredMonitoringConfig": {
          "description": "The desired monitoring configuration.",
          "$ref": "MonitoringConfig"
        },
        "desiredMonitoringService": {
          "description": "The monitoring service the cluster should use to write metrics. Currently available options: * \"monitoring.googleapis.com/kubernetes\" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.",
          "type": "string"
        },
        "desiredGcfsConfig": {
          "description": "The desired GCFS config for the cluster.",
          "$ref": "GcfsConfig"
        },
        "desiredTpuConfig": {
          "description": "The desired Cloud TPU configuration.",
          "$ref": "TpuConfig"
        },
        "desiredNodePoolAutoConfigNetworkTags": {
          "description": "The desired network tags that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled clusters.",
          "$ref": "NetworkTags"
        },
        "desiredDnsConfig": {
          "$ref": "DNSConfig",
          "description": "DNSConfig contains clusterDNS config for this cluster."
        }
      },
      "type": "object"
    },
    "Filter": {
      "description": "Allows filtering to one or more specific event types. If event types are present, those and only those event types will be transmitted to the cluster. Other types will be skipped. If no filter is specified, or no event types are present, all event types will be sent",
      "type": "object",
      "id": "Filter",
      "properties": {
        "eventType": {
          "type": "array",
          "description": "Event types to allowlist.",
          "items": {
            "enumDescriptions": [
              "Not set, will be ignored.",
              "Corresponds with UpgradeAvailableEvent.",
              "Corresponds with UpgradeEvent.",
              "Corresponds with SecurityBulletinEvent."
            ],
            "type": "string",
            "enum": [
              "EVENT_TYPE_UNSPECIFIED",
              "UPGRADE_AVAILABLE_EVENT",
              "UPGRADE_EVENT",
              "SECURITY_BULLETIN_EVENT"
            ]
          }
        }
      }
    },
    "MaintenanceExclusionOptions": {
      "type": "object",
      "properties": {
        "scope": {
          "description": "Scope specifies the upgrade scope which upgrades are blocked by the exclusion.",
          "type": "string",
          "enum": [
            "NO_UPGRADES",
            "NO_MINOR_UPGRADES",
            "NO_MINOR_OR_NODE_UPGRADES"
          ],
          "enumDescriptions": [
            "NO_UPGRADES excludes all upgrades, including patch upgrades and minor upgrades across control planes and nodes. This is the default exclusion behavior.",
            "NO_MINOR_UPGRADES excludes all minor upgrades for the cluster, only patches are allowed.",
            "NO_MINOR_OR_NODE_UPGRADES excludes all minor upgrades for the cluster, and also exclude all node pool upgrades. Only control plane patches are allowed."
          ]
        }
      },
      "id": "MaintenanceExclusionOptions",
      "description": "Represents the Maintenance exclusion option."
    },
    "WorkloadIdentityConfig": {
      "properties": {
        "workloadPool": {
          "type": "string",
          "description": "The workload pool to attach all Kubernetes service accounts to."
        },
        "identityNamespace": {
          "type": "string",
          "description": "IAM Identity Namespace to attach all Kubernetes Service Accounts to."
        },
        "identityProvider": {
          "type": "string",
          "description": "identity provider is the third party identity provider."
        }
      },
      "type": "object",
      "description": "Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.",
      "id": "WorkloadIdentityConfig"
    },
    "NetworkPolicyConfig": {
      "id": "NetworkPolicyConfig",
      "type": "object",
      "properties": {
        "disabled": {
          "type": "boolean",
          "description": "Whether NetworkPolicy is enabled for this cluster."
        }
      },
      "description": "Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for the nodes."
    },
    "UpdateNodePoolRequest": {
      "properties": {
        "confidentialNodes": {
          "description": "Confidential nodes config. All the nodes in the node pool will be Confidential VM once enabled.",
          "$ref": "ConfidentialNodes"
        },
        "tags": {
          "description": "The desired network tags to be applied to all nodes in the node pool. If this field is not present, the tags will not be changed. Otherwise, the existing network tags will be *replaced* with the provided tags.",
          "$ref": "NetworkTags"
        },
        "upgradeSettings": {
          "$ref": "UpgradeSettings",
          "description": "Upgrade settings control disruption and speed of the upgrade."
        },
        "gcfsConfig": {
          "$ref": "GcfsConfig",
          "description": "GCFS config."
        },
        "workloadMetadataConfig": {
          "description": "The desired workload metadata config for the node pool.",
          "$ref": "WorkloadMetadataConfig"
        },
        "gvnic": {
          "$ref": "VirtualNIC",
          "description": "Enable or disable gvnic on the node pool."
        },
        "taints": {
          "description": "The desired node taints to be applied to all nodes in the node pool. If this field is not present, the taints will not be changed. Otherwise, the existing node taints will be *replaced* with the provided taints.",
          "$ref": "NodeTaints"
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "kubeletConfig": {
          "description": "Node kubelet configs.",
          "$ref": "NodeKubeletConfig"
        },
        "locations": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The desired list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the node pool's nodes should be located. Changing the locations for a node pool will result in nodes being either created or removed from the node pool, depending on whether locations are being added or removed."
        },
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        },
        "name": {
          "description": "The name (project, location, cluster, node pool) of the node pool to update. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
          "type": "string"
        },
        "linuxNodeConfig": {
          "$ref": "LinuxNodeConfig",
          "description": "Parameters that can be configured on Linux nodes."
        },
        "nodeVersion": {
          "type": "string",
          "description": "Required. The Kubernetes version to change the nodes to (typically an upgrade). Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"-\": picks the Kubernetes master version"
        },
        "nodePoolId": {
          "description": "Required. Deprecated. The name of the node pool to upgrade. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "imageType": {
          "type": "string",
          "description": "Required. The desired image type for the node pool."
        },
        "labels": {
          "description": "The desired node labels to be applied to all nodes in the node pool. If this field is not present, the labels will not be changed. Otherwise, the existing node labels will be *replaced* with the provided labels.",
          "$ref": "NodeLabels"
        }
      },
      "type": "object",
      "id": "UpdateNodePoolRequest",
      "description": "SetNodePoolVersionRequest updates the version of a node pool."
    },
    "GcePersistentDiskCsiDriverConfig": {
      "properties": {
        "enabled": {
          "description": "Whether the Compute Engine PD CSI driver is enabled for this cluster.",
          "type": "boolean"
        }
      },
      "id": "GcePersistentDiskCsiDriverConfig",
      "type": "object",
      "description": "Configuration for the Compute Engine PD CSI driver."
    },
    "ILBSubsettingConfig": {
      "type": "object",
      "description": "ILBSubsettingConfig contains the desired config of L4 Internal LoadBalancer subsetting on this cluster.",
      "properties": {
        "enabled": {
          "description": "Enables l4 ILB subsetting for this cluster",
          "type": "boolean"
        }
      },
      "id": "ILBSubsettingConfig"
    },
    "NodeLabels": {
      "type": "object",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map of node label keys and node label values."
        }
      },
      "id": "NodeLabels",
      "description": "Collection of node-level [Kubernetes labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels)."
    },
    "NotificationConfig": {
      "id": "NotificationConfig",
      "description": "NotificationConfig is the configuration of notifications.",
      "type": "object",
      "properties": {
        "pubsub": {
          "$ref": "PubSub",
          "description": "Notification config for Pub/Sub."
        }
      }
    },
    "CreateClusterRequest": {
      "type": "object",
      "description": "CreateClusterRequest creates a cluster.",
      "id": "CreateClusterRequest",
      "properties": {
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field."
        },
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the parent field.",
          "type": "string"
        },
        "cluster": {
          "$ref": "Cluster",
          "description": "Required. A [cluster resource](https://cloud.google.com/container-engine/reference/rest/v1beta1/projects.locations.clusters)"
        },
        "parent": {
          "type": "string",
          "description": "The parent (project and location) where the cluster will be created. Specified in the format `projects/*/locations/*`."
        }
      }
    },
    "HorizontalPodAutoscaling": {
      "properties": {
        "disabled": {
          "type": "boolean",
          "description": "Whether the Horizontal Pod Autoscaling feature is enabled in the cluster. When enabled, it ensures that metrics are collected into Stackdriver Monitoring."
        }
      },
      "id": "HorizontalPodAutoscaling",
      "type": "object",
      "description": "Configuration options for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods."
    },
    "UsableSubnetwork": {
      "type": "object",
      "id": "UsableSubnetwork",
      "description": "UsableSubnetwork resource returns the subnetwork name, its associated network and the primary CIDR range.",
      "properties": {
        "secondaryIpRanges": {
          "items": {
            "$ref": "UsableSubnetworkSecondaryRange"
          },
          "description": "Secondary IP ranges.",
          "type": "array"
        },
        "subnetwork": {
          "type": "string",
          "description": "Subnetwork Name. Example: projects/my-project/regions/us-central1/subnetworks/my-subnet"
        },
        "ipCidrRange": {
          "type": "string",
          "description": "The range of internal addresses that are owned by this subnetwork."
        },
        "statusMessage": {
          "description": "A human readable status message representing the reasons for cases where the caller cannot use the secondary ranges under the subnet. For example if the secondary_ip_ranges is empty due to a permission issue, an insufficient permission message will be given by status_message.",
          "type": "string"
        },
        "network": {
          "type": "string",
          "description": "Network Name. Example: projects/my-project/global/networks/my-network"
        }
      }
    },
    "GetOpenIDConfigResponse": {
      "id": "GetOpenIDConfigResponse",
      "type": "object",
      "properties": {
        "id_token_signing_alg_values_supported": {
          "items": {
            "type": "string"
          },
          "description": "supported ID Token signing Algorithms.",
          "type": "array"
        },
        "jwks_uri": {
          "description": "JSON Web Key uri.",
          "type": "string"
        },
        "issuer": {
          "type": "string",
          "description": "OIDC Issuer."
        },
        "response_types_supported": {
          "type": "array",
          "description": "Supported response types.",
          "items": {
            "type": "string"
          }
        },
        "grant_types": {
          "description": "Supported grant types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subject_types_supported": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Supported subject types."
        },
        "cacheHeader": {
          "$ref": "HttpCacheControlResponseHeader",
          "description": "OnePlatform automatically extracts this field and uses it to set the HTTP Cache-Control header."
        },
        "claims_supported": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Supported claims."
        }
      },
      "description": "GetOpenIDConfigResponse is an OIDC discovery document for the cluster. See the OpenID Connect Discovery 1.0 specification for details."
    },
    "NetworkConfig": {
      "type": "object",
      "properties": {
        "enableIntraNodeVisibility": {
          "description": "Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC network.",
          "type": "boolean"
        },
        "datapathProvider": {
          "enumDescriptions": [
            "Default value.",
            "Use the IPTables implementation based on kube-proxy.",
            "Use the eBPF based GKE Dataplane V2 with additional features. See the [GKE Dataplane V2 documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/dataplane-v2) for more."
          ],
          "type": "string",
          "description": "The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.",
          "enum": [
            "DATAPATH_PROVIDER_UNSPECIFIED",
            "LEGACY_DATAPATH",
            "ADVANCED_DATAPATH"
          ]
        },
        "defaultSnatStatus": {
          "$ref": "DefaultSnatStatus",
          "description": "Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when default_snat_status is disabled. When disabled is set to false, default IP masquerade rules will be applied to the nodes to prevent sNAT on cluster internal traffic."
        },
        "network": {
          "description": "Output only. The relative name of the Google Compute Engine network(https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. Example: projects/my-project/global/networks/my-network",
          "type": "string"
        },
        "enableL4ilbSubsetting": {
          "type": "boolean",
          "description": "Whether L4ILB Subsetting is enabled for this cluster."
        },
        "subnetwork": {
          "description": "Output only. The relative name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/vpc) to which the cluster is connected. Example: projects/my-project/regions/us-central1/subnetworks/my-subnet",
          "type": "string"
        },
        "dnsConfig": {
          "$ref": "DNSConfig",
          "description": "DNSConfig contains clusterDNS config for this cluster."
        },
        "privateIpv6GoogleAccess": {
          "enumDescriptions": [
            "Default value. Same as DISABLED",
            "No private access to or from Google Services",
            "Enables private IPv6 access to Google Services from GKE",
            "Enables priate IPv6 access to and from Google Services"
          ],
          "type": "string",
          "description": "The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services (all access will be via IPv4)",
          "enum": [
            "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED",
            "PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED",
            "PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE",
            "PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL"
          ]
        },
        "serviceExternalIpsConfig": {
          "$ref": "ServiceExternalIPsConfig",
          "description": "ServiceExternalIPsConfig specifies if services with externalIPs field are blocked or not."
        }
      },
      "description": "NetworkConfig reports the relative names of network & subnetwork.",
      "id": "NetworkConfig"
    },
    "Operation": {
      "type": "object",
      "id": "Operation",
      "description": "This operation resource represents operations that may have happened or are happening on the cluster. All fields are output only.",
      "properties": {
        "clusterConditions": {
          "items": {
            "$ref": "StatusCondition"
          },
          "description": "Which conditions caused the current cluster state. Deprecated. Use field error instead.",
          "type": "array"
        },
        "endTime": {
          "description": "[Output only] The time the operation completed, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "Server-defined URL for the resource."
        },
        "zone": {
          "type": "string",
          "description": "The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the operation is taking place. This field is deprecated, use location instead."
        },
        "error": {
          "description": "The error result of the operation in case of failure.",
          "$ref": "Status"
        },
        "targetLink": {
          "description": "Server-defined URL for the target of the operation.",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "description": "[Output only] The time the operation started, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."
        },
        "status": {
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed.",
            "The operation is aborting."
          ],
          "enum": [
            "STATUS_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE",
            "ABORTING"
          ],
          "description": "The current status of the operation."
        },
        "detail": {
          "description": "Detailed operation progress, if available.",
          "type": "string"
        },
        "progress": {
          "readOnly": true,
          "description": "Output only. [Output only] Progress information for an operation.",
          "$ref": "OperationProgress"
        },
        "name": {
          "description": "The server-assigned ID for the operation.",
          "type": "string"
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Output only. If an error has occurred, a textual description of the error. Deprecated. Use field error instead.",
          "type": "string"
        },
        "operationType": {
          "description": "The operation type.",
          "enumDescriptions": [
            "Not set.",
            "Cluster create.",
            "Cluster delete.",
            "A master upgrade.",
            "A node upgrade.",
            "Cluster repair.",
            "Cluster update.",
            "Node pool create.",
            "Node pool delete.",
            "Set node pool management.",
            "Automatic node pool repair.",
            "Automatic node upgrade.",
            "Set labels.",
            "Set/generate master auth materials",
            "Set node pool size.",
            "Updates network policy for a cluster.",
            "Set the maintenance policy."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CREATE_CLUSTER",
            "DELETE_CLUSTER",
            "UPGRADE_MASTER",
            "UPGRADE_NODES",
            "REPAIR_CLUSTER",
            "UPDATE_CLUSTER",
            "CREATE_NODE_POOL",
            "DELETE_NODE_POOL",
            "SET_NODE_POOL_MANAGEMENT",
            "AUTO_REPAIR_NODES",
            "AUTO_UPGRADE_NODES",
            "SET_LABELS",
            "SET_MASTER_AUTH",
            "SET_NODE_POOL_SIZE",
            "SET_NETWORK_POLICY",
            "SET_MAINTENANCE_POLICY"
          ]
        },
        "nodepoolConditions": {
          "type": "array",
          "description": "Which conditions caused the current node pool state. Deprecated. Use field error instead.",
          "items": {
            "$ref": "StatusCondition"
          }
        },
        "location": {
          "type": "string",
          "description": "[Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides."
        }
      }
    },
    "Cluster": {
      "type": "object",
      "properties": {
        "description": {
          "description": "An optional description of this cluster.",
          "type": "string"
        },
        "loggingService": {
          "description": "The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.",
          "type": "string"
        },
        "nodePoolAutoConfig": {
          "description": "Node pool configs that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled clusters.",
          "$ref": "NodePoolAutoConfig"
        },
        "initialClusterVersion": {
          "description": "The initial Kubernetes version for this cluster. Valid versions are those found in validMasterVersions returned by getServerConfig. The version can be upgraded over time; such upgrades are reflected in currentMasterVersion and currentNodeVersion. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"\",\"-\": picks the default Kubernetes version",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of this cluster. The name must be unique within this project and location (e.g. zone or region), and can be up to 40 characters with the following restrictions: * Lowercase letters, numbers, and hyphens only. * Must start with a letter. * Must end with a number or a letter."
        },
        "conditions": {
          "description": "Which conditions caused the current cluster state.",
          "type": "array",
          "items": {
            "$ref": "StatusCondition"
          }
        },
        "masterAuth": {
          "description": "The authentication information for accessing the master endpoint. If unspecified, the defaults are used: For clusters before v1.12, if master_auth is unspecified, `username` will be set to \"admin\", a random password will be generated, and a client certificate will be issued.",
          "$ref": "MasterAuth"
        },
        "labelFingerprint": {
          "description": "The fingerprint of the set of labels for this cluster.",
          "type": "string"
        },
        "confidentialNodes": {
          "$ref": "ConfidentialNodes",
          "description": "Configuration of Confidential Nodes. All the nodes in the cluster will be Confidential VM once enabled."
        },
        "locations": {
          "description": "The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This field provides a default value if [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) are not specified during node pool creation. Warning: changing cluster locations will update the [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) of all node pools and will result in nodes being added and/or removed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "initialNodeCount": {
          "description": "The number of nodes to create in this cluster. You must ensure that your Compute Engine [resource quota](https://cloud.google.com/compute/quotas) is sufficient for this number of instances. You must also have available firewall and routes quota. For requests, this field should only be used in lieu of a \"node_pool\" object, since this configuration (along with the \"node_config\") will be used to create a \"NodePool\" object with an auto-generated name. Do not use this and a node_pool at the same time. This field is deprecated, use node_pool.initial_node_count instead.",
          "format": "int32",
          "type": "integer"
        },
        "databaseEncryption": {
          "description": "Configuration of etcd encryption.",
          "$ref": "DatabaseEncryption"
        },
        "instanceGroupUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Deprecated. Use node_pools.instance_group_urls."
        },
        "monitoringConfig": {
          "$ref": "MonitoringConfig",
          "description": "Monitoring configuration for the cluster."
        },
        "enableKubernetesAlpha": {
          "description": "Kubernetes alpha features are enabled on this cluster. This includes alpha API groups (e.g. v1beta1) and features that may not be production ready in the kubernetes version of the master and nodes. The cluster has no SLA for uptime and master/node upgrades are disabled. Alpha enabled clusters are automatically deleted thirty days after creation.",
          "type": "boolean"
        },
        "networkPolicy": {
          "description": "Configuration options for the NetworkPolicy feature.",
          "$ref": "NetworkPolicy"
        },
        "status": {
          "description": "[Output only] The current status of this cluster.",
          "enum": [
            "STATUS_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "RECONCILING",
            "STOPPING",
            "ERROR",
            "DEGRADED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "The PROVISIONING state indicates the cluster is being created.",
            "The RUNNING state indicates the cluster has been created and is fully usable.",
            "The RECONCILING state indicates that some work is actively being done on the cluster, such as upgrading the master or node software. Details can be found in the `statusMessage` field.",
            "The STOPPING state indicates the cluster is being deleted.",
            "The ERROR state indicates the cluster may be unusable. Details can be found in the `statusMessage` field.",
            "The DEGRADED state indicates the cluster requires user action to restore full functionality. Details can be found in the `statusMessage` field."
          ]
        },
        "tpuConfig": {
          "$ref": "TpuConfig",
          "description": "Configuration for Cloud TPU support;"
        },
        "zone": {
          "description": "[Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field is deprecated, use location instead.",
          "type": "string"
        },
        "currentNodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "[Output only] The number of nodes currently in the cluster. Deprecated. Call Kubernetes API directly to retrieve node information."
        },
        "master": {
          "$ref": "Master",
          "description": "Configuration for master components."
        },
        "workloadAltsConfig": {
          "description": "Configuration for direct-path (via ALTS) with workload identity.",
          "$ref": "WorkloadALTSConfig"
        },
        "clusterTelemetry": {
          "$ref": "ClusterTelemetry",
          "description": "Telemetry integration for the cluster."
        },
        "privateClusterConfig": {
          "$ref": "PrivateClusterConfig",
          "description": "Configuration for private cluster."
        },
        "defaultMaxPodsConstraint": {
          "$ref": "MaxPodsConstraint",
          "description": "The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster. Only honored if cluster created with IP Alias support."
        },
        "loggingConfig": {
          "description": "Logging configuration for the cluster.",
          "$ref": "LoggingConfig"
        },
        "currentNodeVersion": {
          "description": "[Output only] Deprecated, use [NodePool.version](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters.nodePools) instead. The current version of the node software components. If they are currently at multiple versions because they're in the process of being upgraded, this reflects the minimum version of all nodes.",
          "type": "string"
        },
        "releaseChannel": {
          "description": "Release channel configuration.",
          "$ref": "ReleaseChannel"
        },
        "expireTime": {
          "type": "string",
          "description": "[Output only] The time the cluster will be automatically deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."
        },
        "tpuIpv4CidrBlock": {
          "description": "[Output only] The IP address range of the Cloud TPUs in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`).",
          "type": "string"
        },
        "endpoint": {
          "type": "string",
          "description": "[Output only] The IP address of this cluster's master endpoint. The endpoint can be accessed from the internet at `https://username:password@endpoint/`. See the `masterAuth` property of this resource for username and password information."
        },
        "createTime": {
          "type": "string",
          "description": "[Output only] The time the cluster was created, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."
        },
        "workloadCertificates": {
          "$ref": "WorkloadCertificates",
          "description": "Configuration for issuance of mTLS keys and certificates to Kubernetes pods."
        },
        "statusMessage": {
          "type": "string",
          "description": "[Output only] Deprecated. Use conditions instead. Additional information about the current status of this cluster, if available."
        },
        "nodePoolDefaults": {
          "$ref": "NodePoolDefaults",
          "description": "Default NodePool settings for the entire cluster. These settings are overridden if specified on the specific NodePool object."
        },
        "resourceUsageExportConfig": {
          "description": "Configuration for exporting resource usages. Resource usage export is disabled when this config unspecified.",
          "$ref": "ResourceUsageExportConfig"
        },
        "workloadIdentityConfig": {
          "$ref": "WorkloadIdentityConfig",
          "description": "Configuration for the use of Kubernetes Service Accounts in GCP IAM policies."
        },
        "networkConfig": {
          "$ref": "NetworkConfig",
          "description": "Configuration for cluster networking."
        },
        "enableTpu": {
          "type": "boolean",
          "description": "Enable the ability to use Cloud TPUs in this cluster. This field is deprecated, use tpu_config.enabled instead."
        },
        "selfLink": {
          "description": "[Output only] Server-defined URL for the resource.",
          "type": "string"
        },
        "meshCertificates": {
          "description": "Configuration for issuance of mTLS keys and certificates to Kubernetes pods.",
          "$ref": "MeshCertificates"
        },
        "ipAllocationPolicy": {
          "description": "Configuration for cluster IP allocation.",
          "$ref": "IPAllocationPolicy"
        },
        "legacyAbac": {
          "$ref": "LegacyAbac",
          "description": "Configuration for the legacy ABAC authorization mode."
        },
        "authenticatorGroupsConfig": {
          "description": "Configuration controlling RBAC group membership information.",
          "$ref": "AuthenticatorGroupsConfig"
        },
        "network": {
          "description": "The name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. If left unspecified, the `default` network will be used. On output this shows the network ID instead of the name.",
          "type": "string"
        },
        "monitoringService": {
          "description": "The monitoring service the cluster should use to write metrics. Currently available options: * \"monitoring.googleapis.com/kubernetes\" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.",
          "type": "string"
        },
        "identityServiceConfig": {
          "$ref": "IdentityServiceConfig",
          "description": "Configuration for Identity Service component."
        },
        "maintenancePolicy": {
          "description": "Configure the maintenance policy for this cluster.",
          "$ref": "MaintenancePolicy"
        },
        "masterAuthorizedNetworksConfig": {
          "description": "The configuration options for master authorized networks feature.",
          "$ref": "MasterAuthorizedNetworksConfig"
        },
        "binaryAuthorization": {
          "description": "Configuration for Binary Authorization.",
          "$ref": "BinaryAuthorization"
        },
        "podSecurityPolicyConfig": {
          "description": "Configuration for the PodSecurityPolicy feature.",
          "$ref": "PodSecurityPolicyConfig"
        },
        "addonsConfig": {
          "$ref": "AddonsConfig",
          "description": "Configurations for the various addons available to run in the cluster."
        },
        "autopilot": {
          "$ref": "Autopilot",
          "description": "Autopilot configuration for the cluster."
        },
        "clusterIpv4Cidr": {
          "description": "The IP address range of the container pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`). Leave blank to have one automatically chosen or specify a `/14` block in `10.0.0.0/8`.",
          "type": "string"
        },
        "autoscaling": {
          "description": "Cluster-level autoscaling configuration.",
          "$ref": "ClusterAutoscaling"
        },
        "resourceLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource labels for the cluster to use to annotate any related Google Compute Engine resources.",
          "type": "object"
        },
        "location": {
          "type": "string",
          "description": "[Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides."
        },
        "id": {
          "readOnly": true,
          "description": "Output only. Unique id for the cluster.",
          "type": "string"
        },
        "servicesIpv4Cidr": {
          "type": "string",
          "description": "[Output only] The IP address range of the Kubernetes services in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`). Service addresses are typically put in the last `/16` from the container CIDR."
        },
        "notificationConfig": {
          "description": "Notification configuration of the cluster.",
          "$ref": "NotificationConfig"
        },
        "privateCluster": {
          "description": "If this is a private cluster setup. Private clusters are clusters that, by default have no external IP addresses on the nodes and where nodes and the master communicate over private IP addresses. This field is deprecated, use private_cluster_config.enable_private_nodes instead.",
          "type": "boolean"
        },
        "verticalPodAutoscaling": {
          "$ref": "VerticalPodAutoscaling",
          "description": "Cluster-level Vertical Pod Autoscaling configuration."
        },
        "nodePools": {
          "items": {
            "$ref": "NodePool"
          },
          "description": "The node pools associated with this cluster. This field should not be set if \"node_config\" or \"initial_node_count\" are specified.",
          "type": "array"
        },
        "nodeIpv4CidrSize": {
          "type": "integer",
          "format": "int32",
          "description": "[Output only] The size of the address space on each node for hosting containers. This is provisioned from within the `container_ipv4_cidr` range. This field will only be set when cluster is in route-based network mode."
        },
        "currentMasterVersion": {
          "description": "[Output only] The current software version of the master endpoint.",
          "type": "string"
        },
        "nodeConfig": {
          "$ref": "NodeConfig",
          "description": "Parameters used in creating the cluster's nodes. For requests, this field should only be used in lieu of a \"node_pool\" object, since this configuration (along with the \"initial_node_count\") will be used to create a \"NodePool\" object with an auto-generated name. Do not use this and a node_pool at the same time. For responses, this field will be populated with the node configuration of the first node pool. (For configuration of each node pool, see `node_pool.config`) If unspecified, the defaults are used. This field is deprecated, use node_pool.config instead."
        },
        "masterIpv4CidrBlock": {
          "description": "The IP prefix in CIDR notation to use for the hosted master network. This prefix will be used for assigning private IP addresses to the master or set of masters, as well as the ILB VIP. This field is deprecated, use private_cluster_config.master_ipv4_cidr_block instead.",
          "type": "string"
        },
        "shieldedNodes": {
          "description": "Shielded Nodes configuration.",
          "$ref": "ShieldedNodes"
        },
        "subnetwork": {
          "description": "The name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/subnetworks) to which the cluster is connected. On output this shows the subnetwork ID instead of the name.",
          "type": "string"
        }
      },
      "id": "Cluster",
      "description": "A Google Kubernetes Engine cluster."
    },
    "HttpLoadBalancing": {
      "type": "object",
      "id": "HttpLoadBalancing",
      "properties": {
        "disabled": {
          "description": "Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load balancers.",
          "type": "boolean"
        }
      },
      "description": "Configuration options for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster."
    },
    "PrivateClusterMasterGlobalAccessConfig": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whenever master is accessible globally or not."
        }
      },
      "type": "object",
      "description": "Configuration for controlling master global access settings.",
      "id": "PrivateClusterMasterGlobalAccessConfig"
    },
    "ClusterTelemetry": {
      "description": "Telemetry integration for the cluster.",
      "properties": {
        "type": {
          "description": "Type of the integration.",
          "type": "string",
          "enum": [
            "UNSPECIFIED",
            "DISABLED",
            "ENABLED",
            "SYSTEM_ONLY"
          ],
          "enumDescriptions": [
            "Not set.",
            "Monitoring integration is disabled.",
            "Monitoring integration is enabled.",
            "Only system components are monitored and logged."
          ]
        }
      },
      "type": "object",
      "id": "ClusterTelemetry"
    },
    "NodePool": {
      "properties": {
        "autoscaling": {
          "description": "Autoscaler configuration for this NodePool. Autoscaler is enabled only if a valid configuration is present.",
          "$ref": "NodePoolAutoscaling"
        },
        "status": {
          "enum": [
            "STATUS_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "RUNNING_WITH_ERROR",
            "RECONCILING",
            "STOPPING",
            "ERROR"
          ],
          "enumDescriptions": [
            "Not set.",
            "The PROVISIONING state indicates the node pool is being created.",
            "The RUNNING state indicates the node pool has been created and is fully usable.",
            "The RUNNING_WITH_ERROR state indicates the node pool has been created and is partially usable. Some error state has occurred and some functionality may be impaired. Customer may need to reissue a request or trigger a new update.",
            "The RECONCILING state indicates that some work is actively being done on the node pool, such as upgrading node software. Details can be found in the `statusMessage` field.",
            "The STOPPING state indicates the node pool is being deleted.",
            "The ERROR state indicates the node pool may be unusable. Details can be found in the `statusMessage` field."
          ],
          "type": "string",
          "description": "[Output only] The status of the nodes in this pool instance."
        },
        "config": {
          "description": "The node configuration of the pool.",
          "$ref": "NodeConfig"
        },
        "management": {
          "$ref": "NodeManagement",
          "description": "NodeManagement configuration for this NodePool."
        },
        "networkConfig": {
          "$ref": "NodeNetworkConfig",
          "description": "Networking configuration for this NodePool. If specified, it overrides the cluster-level defaults."
        },
        "upgradeSettings": {
          "$ref": "UpgradeSettings",
          "description": "Upgrade settings control disruption and speed of the upgrade."
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the NodePool's nodes should be located. If this value is unspecified during node pool creation, the [Cluster.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters#Cluster.FIELDS.locations) value will be used, instead. Warning: changing node pool locations will result in nodes being added and/or removed."
        },
        "statusMessage": {
          "type": "string",
          "description": "[Output only] Deprecated. Use conditions instead. Additional information about the current status of this node pool instance, if available."
        },
        "instanceGroupUrls": {
          "description": "[Output only] The resource URLs of the [managed instance groups](https://cloud.google.com/compute/docs/instance-groups/creating-groups-of-managed-instances) associated with this node pool.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "conditions": {
          "description": "Which conditions caused the current node pool state.",
          "type": "array",
          "items": {
            "$ref": "StatusCondition"
          }
        },
        "version": {
          "description": "The version of the Kubernetes of this node.",
          "type": "string"
        },
        "placementPolicy": {
          "$ref": "PlacementPolicy",
          "description": "Specifies the node placement policy."
        },
        "maxPodsConstraint": {
          "description": "The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.",
          "$ref": "MaxPodsConstraint"
        },
        "name": {
          "description": "The name of the node pool.",
          "type": "string"
        },
        "podIpv4CidrSize": {
          "type": "integer",
          "description": "[Output only] The pod CIDR block size per node in this node pool.",
          "format": "int32"
        },
        "selfLink": {
          "type": "string",
          "description": "[Output only] Server-defined URL for the resource."
        },
        "initialNodeCount": {
          "description": "The initial node count for the pool. You must ensure that your Compute Engine [resource quota](https://cloud.google.com/compute/quotas) is sufficient for this number of instances. You must also have available firewall and routes quota.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "NodePool contains the name and configuration for a cluster's node pool. Node pools are a set of nodes (i.e. VM's), with a common configuration and specification, under the control of the cluster master. They may have a set of Kubernetes labels applied to them, which may be used to reference them during pod scheduling. They may also be resized up or down, to accommodate the workload. These upgrade settings control the level of parallelism and the level of disruption caused by an upgrade. maxUnavailable controls the number of nodes that can be simultaneously unavailable. maxSurge controls the number of additional nodes that can be added to the node pool temporarily for the time of the upgrade to increase the number of available nodes. (maxUnavailable + maxSurge) determines the level of parallelism (how many nodes are being upgraded at the same time). Note: upgrades inevitably introduce some disruption since workloads need to be moved from old nodes to new, upgraded ones. Even if maxUnavailable=0, this holds true. (Disruption stays within the limits of PodDisruptionBudget, if it is configured.) Consider a hypothetical node pool with 5 nodes having maxSurge=2, maxUnavailable=1. This means the upgrade process upgrades 3 nodes simultaneously. It creates 2 additional (upgraded) nodes, then it brings down 3 old (not yet upgraded) nodes at the same time. This ensures that there are always at least 4 nodes available.",
      "id": "NodePool"
    },
    "ShieldedInstanceConfig": {
      "description": "A set of Shielded Instance options.",
      "properties": {
        "enableIntegrityMonitoring": {
          "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.",
          "type": "boolean"
        },
        "enableSecureBoot": {
          "type": "boolean",
          "description": "Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails."
        }
      },
      "id": "ShieldedInstanceConfig",
      "type": "object"
    },
    "ListOperationsResponse": {
      "type": "object",
      "id": "ListOperationsResponse",
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations in the project in the specified zone."
        },
        "missingZones": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "If any zones are listed here, the list of operations returned may be missing the operations from those zones."
        }
      },
      "description": "ListOperationsResponse is the result of ListOperationsRequest."
    },
    "SetNetworkPolicyRequest": {
      "type": "object",
      "properties": {
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber). This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "clusterId": {
          "type": "string",
          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field."
        },
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster name) of the cluster to set networking policy. Specified in the format `projects/*/locations/*/clusters/*`."
        },
        "networkPolicy": {
          "description": "Required. Configuration options for the NetworkPolicy feature.",
          "$ref": "NetworkPolicy"
        }
      },
      "description": "SetNetworkPolicyRequest enables/disables network policy for a cluster.",
      "id": "SetNetworkPolicyRequest"
    },
    "SetLabelsRequest": {
      "description": "SetLabelsRequest sets the Google Cloud Platform labels on a Google Container Engine cluster, which will in turn set them for Google Compute Engine resources used by that cluster",
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber). This field has been deprecated and replaced by the name field."
        },
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster name) of the cluster to set labels. Specified in the format `projects/*/locations/*/clusters/*`."
        },
        "clusterId": {
          "type": "string",
          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field."
        },
        "labelFingerprint": {
          "type": "string",
          "description": "Required. The fingerprint of the previous set of labels for this resource, used to detect conflicts. The fingerprint is initially generated by Kubernetes Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash when updating or changing labels. Make a `get()` request to the resource to get the latest fingerprint."
        },
        "resourceLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Required. The labels to set for that cluster.",
          "type": "object"
        }
      },
      "id": "SetLabelsRequest"
    },
    "UpgradeSettings": {
      "properties": {
        "maxUnavailable": {
          "type": "integer",
          "description": "The maximum number of nodes that can be simultaneously unavailable during the upgrade process. A node is considered available if its status is Ready.",
          "format": "int32"
        },
        "maxSurge": {
          "description": "The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "UpgradeSettings",
      "type": "object"
    },
    "ClusterAutoscaling": {
      "type": "object",
      "id": "ClusterAutoscaling",
      "description": "ClusterAutoscaling contains global, per-cluster information required by Cluster Autoscaler to automatically adjust the size of the cluster and create/delete node pools based on the current needs.",
      "properties": {
        "autoprovisioningNodePoolDefaults": {
          "$ref": "AutoprovisioningNodePoolDefaults",
          "description": "AutoprovisioningNodePoolDefaults contains defaults for a node pool created by NAP."
        },
        "autoprovisioningLocations": {
          "items": {
            "type": "string"
          },
          "description": "The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the NodePool's nodes can be created by NAP.",
          "type": "array"
        },
        "autoscalingProfile": {
          "description": "Defines autoscaling behaviour.",
          "enum": [
            "PROFILE_UNSPECIFIED",
            "OPTIMIZE_UTILIZATION",
            "BALANCED"
          ],
          "type": "string",
          "enumDescriptions": [
            "No change to autoscaling configuration.",
            "Prioritize optimizing utilization of resources.",
            "Use default (balanced) autoscaling configuration."
          ]
        },
        "resourceLimits": {
          "type": "array",
          "description": "Contains global constraints regarding minimum and maximum amount of resources in the cluster.",
          "items": {
            "$ref": "ResourceLimit"
          }
        },
        "enableNodeAutoprovisioning": {
          "type": "boolean",
          "description": "Enables automatic node pool creation and deletion."
        }
      }
    },
    "KubernetesDashboard": {
      "properties": {
        "disabled": {
          "type": "boolean",
          "description": "Whether the Kubernetes Dashboard is enabled for this cluster."
        }
      },
      "id": "KubernetesDashboard",
      "type": "object",
      "description": "Configuration for the Kubernetes Dashboard."
    },
    "SetMaintenancePolicyRequest": {
      "id": "SetMaintenancePolicyRequest",
      "description": "SetMaintenancePolicyRequest sets the maintenance policy for a cluster.",
      "type": "object",
      "properties": {
        "clusterId": {
          "description": "Required. The name of the cluster to update.",
          "type": "string"
        },
        "zone": {
          "description": "Required. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster name) of the cluster to set maintenance policy. Specified in the format `projects/*/locations/*/clusters/*`."
        },
        "maintenancePolicy": {
          "$ref": "MaintenancePolicy",
          "description": "Required. The maintenance policy to be set for the cluster. An empty field clears the existing maintenance policy."
        },
        "projectId": {
          "description": "Required. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840).",
          "type": "string"
        }
      }
    },
    "LinuxNodeConfig": {
      "description": "Parameters that can be configured on Linux nodes.",
      "type": "object",
      "id": "LinuxNodeConfig",
      "properties": {
        "sysctls": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The Linux kernel parameters to be applied to the nodes and all pods running on the nodes. The following parameters are supported. net.core.busy_poll net.core.busy_read net.core.netdev_max_backlog net.core.rmem_max net.core.wmem_default net.core.wmem_max net.core.optmem_max net.core.somaxconn net.ipv4.tcp_rmem net.ipv4.tcp_wmem net.ipv4.tcp_tw_reuse"
        }
      }
    },
    "MaintenancePolicy": {
      "type": "object",
      "id": "MaintenancePolicy",
      "description": "MaintenancePolicy defines the maintenance policy to be used for the cluster.",
      "properties": {
        "resourceVersion": {
          "type": "string",
          "description": "A hash identifying the version of this policy, so that updates to fields of the policy won't accidentally undo intermediate changes (and so that users of the API unaware of some fields won't accidentally remove other fields). Make a `get()` request to the cluster to get the current resource version and include it with requests to set the policy."
        },
        "window": {
          "$ref": "MaintenanceWindow",
          "description": "Specifies the maintenance window in which maintenance may be performed."
        }
      }
    },
    "MonitoringComponentConfig": {
      "description": "MonitoringComponentConfig is cluster monitoring component configuration.",
      "id": "MonitoringComponentConfig",
      "type": "object",
      "properties": {
        "enableComponents": {
          "description": "Select components to collect metrics. An empty set would disable all monitoring.",
          "items": {
            "enum": [
              "COMPONENT_UNSPECIFIED",
              "SYSTEM_COMPONENTS",
              "WORKLOADS"
            ],
            "enumDescriptions": [
              "Default value. This shouldn't be used.",
              "system components",
              "Deprecated: Use Google Cloud Managed Service for Prometheus."
            ],
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "NodeManagement": {
      "id": "NodeManagement",
      "properties": {
        "autoUpgrade": {
          "description": "Whether the nodes will be automatically upgraded.",
          "type": "boolean"
        },
        "upgradeOptions": {
          "$ref": "AutoUpgradeOptions",
          "description": "Specifies the Auto Upgrade knobs for the node pool."
        },
        "autoRepair": {
          "type": "boolean",
          "description": "Whether the nodes will be automatically repaired."
        }
      },
      "description": "NodeManagement defines the set of node management services turned on for the node pool.",
      "type": "object"
    },
    "NetworkPolicy": {
      "id": "NetworkPolicy",
      "description": "Configuration options for the NetworkPolicy feature. https://kubernetes.io/docs/concepts/services-networking/networkpolicies/",
      "properties": {
        "enabled": {
          "description": "Whether network policy is enabled on the cluster.",
          "type": "boolean"
        },
        "provider": {
          "enum": [
            "PROVIDER_UNSPECIFIED",
            "CALICO"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not set",
            "Tigera (Calico Felix)."
          ],
          "description": "The selected network policy provider."
        }
      },
      "type": "object"
    },
    "Master": {
      "type": "object",
      "properties": {},
      "description": "Master is the configuration for components on master.",
      "id": "Master"
    },
    "MasterAuth": {
      "description": "The authentication information for accessing the master endpoint. Authentication can be done using HTTP basic auth or using client certificates.",
      "properties": {
        "clientCertificate": {
          "type": "string",
          "description": "[Output only] Base64-encoded public certificate used by clients to authenticate to the cluster endpoint."
        },
        "clientCertificateConfig": {
          "$ref": "ClientCertificateConfig",
          "description": "Configuration for client certificate authentication on the cluster. For clusters before v1.12, if no configuration is specified, a client certificate is issued."
        },
        "clientKey": {
          "description": "[Output only] Base64-encoded private key used by clients to authenticate to the cluster endpoint.",
          "type": "string"
        },
        "password": {
          "description": "The password to use for HTTP basic authentication to the master endpoint. Because the master endpoint is open to the Internet, you should create a strong password. If a password is provided for cluster creation, username must be non-empty. Warning: basic authentication is deprecated, and will be removed in GKE control plane versions 1.19 and newer. For a list of recommended authentication methods, see: https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication",
          "type": "string"
        },
        "clusterCaCertificate": {
          "type": "string"
        },
        "username": {
          "description": "The username to use for HTTP basic authentication to the master endpoint. For clusters v1.6.0 and later, basic authentication can be disabled by leaving username unspecified (or setting it to the empty string). Warning: basic authentication is deprecated, and will be removed in GKE control plane versions 1.19 and newer. For a list of recommended authentication methods, see: https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication",
          "type": "string"
        }
      },
      "type": "object",
      "id": "MasterAuth"
    },
    "ManagedPrometheusConfig": {
      "properties": {
        "enabled": {
          "description": "Enable Managed Collection.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "ManagedPrometheusConfig",
      "description": "ManagedPrometheusConfig defines the configuration for Google Cloud Managed Service for Prometheus."
    },
    "MeshCertificates": {
      "description": "Configuration for issuance of mTLS keys and certificates to Kubernetes pods.",
      "properties": {
        "enableCertificates": {
          "type": "boolean",
          "description": "enable_certificates controls issuance of workload mTLS certificates. If set, the GKE Workload Identity Certificates controller and node agent will be deployed in the cluster, which can then be configured by creating a WorkloadCertificateConfig Custom Resource. Requires Workload Identity (workload_pool must be non-empty)."
        }
      },
      "id": "MeshCertificates",
      "type": "object"
    },
    "Autopilot": {
      "id": "Autopilot",
      "description": "Autopilot is the configuration for Autopilot settings on the cluster.",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable Autopilot"
        }
      }
    },
    "CreateNodePoolRequest": {
      "id": "CreateNodePoolRequest",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber). This field has been deprecated and replaced by the parent field.",
          "type": "string"
        },
        "clusterId": {
          "type": "string",
          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the parent field."
        },
        "nodePool": {
          "description": "Required. The node pool to create.",
          "$ref": "NodePool"
        },
        "parent": {
          "type": "string",
          "description": "The parent (project, location, cluster name) where the node pool will be created. Specified in the format `projects/*/locations/*/clusters/*`."
        },
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the parent field.",
          "type": "string"
        }
      },
      "description": "CreateNodePoolRequest creates a node pool for a cluster."
    },
    "AdvancedMachineFeatures": {
      "description": "Specifies options for controlling advanced machine features.",
      "type": "object",
      "properties": {
        "threadsPerCore": {
          "type": "string",
          "format": "int64",
          "description": "The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed."
        }
      },
      "id": "AdvancedMachineFeatures"
    },
    "SetNodePoolAutoscalingRequest": {
      "properties": {
        "name": {
          "description": "The name (project, location, cluster, node pool) of the node pool to set autoscaler settings. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
          "type": "string"
        },
        "autoscaling": {
          "description": "Required. Autoscaling configuration for the node pool.",
          "$ref": "NodePoolAutoscaling"
        },
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        },
        "nodePoolId": {
          "type": "string",
          "description": "Required. Deprecated. The name of the node pool to upgrade. This field has been deprecated and replaced by the name field."
        },
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SetNodePoolAutoscalingRequest",
      "description": "SetNodePoolAutoscalingRequest sets the autoscaler settings of a node pool."
    },
    "AutoprovisioningNodePoolDefaults": {
      "type": "object",
      "properties": {
        "diskSizeGb": {
          "description": "Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.",
          "type": "integer",
          "format": "int32"
        },
        "upgradeSettings": {
          "description": "Upgrade settings control disruption and speed of the upgrade.",
          "$ref": "UpgradeSettings"
        },
        "diskType": {
          "description": "Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') If unspecified, the default disk type is 'pd-standard'",
          "type": "string"
        },
        "serviceAccount": {
          "description": "The Google Cloud Platform Service Account to be used by the node VMs. Specify the email address of the Service Account; otherwise, if no Service Account is specified, the \"default\" service account is used.",
          "type": "string"
        },
        "minCpuPlatform": {
          "description": "Deprecated. Minimum CPU platform to be used for NAP created node pools. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: Intel Haswell or minCpuPlatform: Intel Sandy Bridge. For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) This field is deprecated, min_cpu_platform should be specified using cloud.google.com/requested-min-cpu-platform label selector on the pod. To unset the min cpu platform field pass \"automatic\" as field value.",
          "type": "string"
        },
        "management": {
          "description": "NodeManagement configuration for this NodePool.",
          "$ref": "NodeManagement"
        },
        "imageType": {
          "description": "The image type to use for NAP created node.",
          "type": "string"
        },
        "oauthScopes": {
          "items": {
            "type": "string"
          },
          "description": "The set of Google API scopes to be made available on all of the node VMs under the \"default\" service account. The following scopes are recommended, but not required, and by default are not included: * `https://www.googleapis.com/auth/compute` is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only` is required for communicating with **gcr.io** (the [Google Container Registry](https://cloud.google.com/container-registry/)). If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.",
          "type": "array"
        },
        "bootDiskKmsKey": {
          "description": " The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption",
          "type": "string"
        },
        "shieldedInstanceConfig": {
          "description": "Shielded Instance options.",
          "$ref": "ShieldedInstanceConfig"
        }
      },
      "id": "AutoprovisioningNodePoolDefaults",
      "description": "AutoprovisioningNodePoolDefaults contains defaults for a node pool created by NAP."
    },
    "ServiceExternalIPsConfig": {
      "type": "object",
      "id": "ServiceExternalIPsConfig",
      "description": "Config to block services with externalIPs field.",
      "properties": {
        "enabled": {
          "description": "Whether Services with ExternalIPs field are allowed or not.",
          "type": "boolean"
        }
      }
    },
    "IPAllocationPolicy": {
      "type": "object",
      "id": "IPAllocationPolicy",
      "properties": {
        "servicesIpv4Cidr": {
          "type": "string",
          "description": "This field is deprecated, use services_ipv4_cidr_block."
        },
        "clusterIpv4Cidr": {
          "type": "string",
          "description": "This field is deprecated, use cluster_ipv4_cidr_block."
        },
        "clusterIpv4CidrBlock": {
          "type": "string",
          "description": "The IP address range for the cluster pod IPs. If this field is set, then `cluster.cluster_ipv4_cidr` must be left blank. This field is only applicable when `use_ip_aliases` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use."
        },
        "servicesIpv4CidrBlock": {
          "description": "The IP address range of the services IPs in this cluster. If blank, a range will be automatically chosen with the default size. This field is only applicable when `use_ip_aliases` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use.",
          "type": "string"
        },
        "tpuIpv4CidrBlock": {
          "type": "string",
          "description": "The IP address range of the Cloud TPUs in this cluster. If unspecified, a range will be automatically chosen with the default size. This field is only applicable when `use_ip_aliases` is true. If unspecified, the range will use the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use. This field is deprecated, use cluster.tpu_config.ipv4_cidr_block instead."
        },
        "createSubnetwork": {
          "description": "Whether a new subnetwork will be created automatically for the cluster. This field is only applicable when `use_ip_aliases` is true.",
          "type": "boolean"
        },
        "allowRouteOverlap": {
          "description": "If true, allow allocation of cluster CIDR ranges that overlap with certain kinds of network routes. By default we do not allow cluster CIDR ranges to intersect with any user declared routes. With allow_route_overlap == true, we allow overlapping with CIDR ranges that are larger than the cluster CIDR range. If this field is set to true, then cluster and services CIDRs must be fully-specified (e.g. `10.96.0.0/14`, but not `/14`), which means: 1) When `use_ip_aliases` is true, `cluster_ipv4_cidr_block` and `services_ipv4_cidr_block` must be fully-specified. 2) When `use_ip_aliases` is false, `cluster.cluster_ipv4_cidr` muse be fully-specified.",
          "type": "boolean"
        },
        "clusterSecondaryRangeName": {
          "description": "The name of the secondary range to be used for the cluster CIDR block. The secondary range will be used for pod IP addresses. This must be an existing secondary range associated with the cluster subnetwork. This field is only applicable with use_ip_aliases and create_subnetwork is false.",
          "type": "string"
        },
        "subnetworkName": {
          "type": "string",
          "description": "A custom subnetwork name to be used if `create_subnetwork` is true. If this field is empty, then an automatic name will be chosen for the new subnetwork."
        },
        "nodeIpv4Cidr": {
          "description": "This field is deprecated, use node_ipv4_cidr_block.",
          "type": "string"
        },
        "useIpAliases": {
          "type": "boolean",
          "description": "Whether alias IPs will be used for pod IPs in the cluster. This is used in conjunction with use_routes. It cannot be true if use_routes is true. If both use_ip_aliases and use_routes are false, then the server picks the default IP allocation mode"
        },
        "nodeIpv4CidrBlock": {
          "type": "string",
          "description": "The IP address range of the instance IPs in this cluster. This is applicable only if `create_subnetwork` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use."
        },
        "useRoutes": {
          "description": "Whether routes will be used for pod IPs in the cluster. This is used in conjunction with use_ip_aliases. It cannot be true if use_ip_aliases is true. If both use_ip_aliases and use_routes are false, then the server picks the default IP allocation mode",
          "type": "boolean"
        },
        "servicesSecondaryRangeName": {
          "type": "string",
          "description": "The name of the secondary range to be used as for the services CIDR block. The secondary range will be used for service ClusterIPs. This must be an existing secondary range associated with the cluster subnetwork. This field is only applicable with use_ip_aliases and create_subnetwork is false."
        }
      },
      "description": "Configuration for controlling how IPs are allocated in the cluster."
    },
    "BigQueryDestination": {
      "properties": {
        "datasetId": {
          "type": "string",
          "description": "The ID of a BigQuery Dataset."
        }
      },
      "description": "Parameters for using BigQuery as the destination of resource usage export.",
      "id": "BigQueryDestination",
      "type": "object"
    },
    "SetAddonsConfigRequest": {
      "id": "SetAddonsConfigRequest",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name (project, location, cluster) of the cluster to set addons. Specified in the format `projects/*/locations/*/clusters/*`.",
          "type": "string"
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "addonsConfig": {
          "description": "Required. The desired configurations for the various addons available to run in the cluster.",
          "$ref": "AddonsConfig"
        },
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
          "type": "string"
        }
      },
      "description": "SetAddonsRequest sets the addons associated with the cluster."
    },
    "SecurityBulletinEvent": {
      "id": "SecurityBulletinEvent",
      "type": "object",
      "description": "SecurityBulletinEvent is a notification sent to customers when a security bulletin has been posted that they are vulnerable to.",
      "properties": {
        "affectedSupportedMinors": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The GKE minor versions affected by this vulnerability."
        },
        "manualStepsRequired": {
          "description": "If this field is specified, it means there are manual steps that the user must take to make their clusters safe.",
          "type": "boolean"
        },
        "briefDescription": {
          "description": "A brief description of the bulletin. See the bulletin pointed to by the bulletin_uri field for an expanded description.",
          "type": "string"
        },
        "severity": {
          "type": "string",
          "description": "The severity of this bulletin as it relates to GKE."
        },
        "resourceTypeAffected": {
          "description": "The resource type (node/control plane) that has the vulnerability. Multiple notifications (1 notification per resource type) will be sent for a vulnerability that affects \u003e 1 resource type.",
          "type": "string"
        },
        "cveIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The CVEs associated with this bulletin."
        },
        "bulletinUri": {
          "type": "string",
          "description": "The URI link to the bulletin on the website for more information."
        },
        "suggestedUpgradeTarget": {
          "description": "This represents a version selected from the patched_versions field that the cluster receiving this notification should most likely want to upgrade to based on its current version. Note that if this notification is being received by a given cluster, it means that this version is currently available as an upgrade target in that cluster's location.",
          "type": "string"
        },
        "patchedVersions": {
          "description": "The GKE versions where this vulnerability is patched.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "bulletinId": {
          "description": "The ID of the bulletin corresponding to the vulnerability.",
          "type": "string"
        }
      }
    },
    "DefaultSnatStatus": {
      "type": "object",
      "properties": {
        "disabled": {
          "type": "boolean",
          "description": "Disables cluster default sNAT rules."
        }
      },
      "id": "DefaultSnatStatus",
      "description": "DefaultSnatStatus contains the desired state of whether default sNAT should be disabled on the cluster."
    },
    "AddonsConfig": {
      "description": "Configuration for the addons that can be automatically spun up in the cluster, enabling additional functionality.",
      "properties": {
        "dnsCacheConfig": {
          "$ref": "DnsCacheConfig",
          "description": "Configuration for NodeLocalDNS, a dns cache running on cluster nodes"
        },
        "gcePersistentDiskCsiDriverConfig": {
          "$ref": "GcePersistentDiskCsiDriverConfig",
          "description": "Configuration for the Compute Engine Persistent Disk CSI driver."
        },
        "cloudRunConfig": {
          "description": "Configuration for the Cloud Run addon. The `IstioConfig` addon must be enabled in order to enable Cloud Run addon. This option can only be enabled at cluster creation time.",
          "$ref": "CloudRunConfig"
        },
        "gcpFilestoreCsiDriverConfig": {
          "$ref": "GcpFilestoreCsiDriverConfig",
          "description": "Configuration for the GCP Filestore CSI driver."
        },
        "horizontalPodAutoscaling": {
          "description": "Configuration for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.",
          "$ref": "HorizontalPodAutoscaling"
        },
        "networkPolicyConfig": {
          "description": "Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for the nodes.",
          "$ref": "NetworkPolicyConfig"
        },
        "httpLoadBalancing": {
          "description": "Configuration for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.",
          "$ref": "HttpLoadBalancing"
        },
        "configConnectorConfig": {
          "$ref": "ConfigConnectorConfig",
          "description": "Configuration for the ConfigConnector add-on, a Kubernetes extension to manage hosted GCP services through the Kubernetes API"
        },
        "istioConfig": {
          "$ref": "IstioConfig",
          "description": "Configuration for Istio, an open platform to connect, manage, and secure microservices."
        },
        "kubernetesDashboard": {
          "$ref": "KubernetesDashboard",
          "description": "Configuration for the Kubernetes Dashboard. This addon is deprecated, and will be disabled in 1.15. It is recommended to use the Cloud Console to manage and monitor your Kubernetes clusters, workloads and applications. For more information, see: https://cloud.google.com/kubernetes-engine/docs/concepts/dashboards"
        },
        "kalmConfig": {
          "$ref": "KalmConfig",
          "description": "Configuration for the KALM addon, which manages the lifecycle of k8s applications."
        },
        "gkeBackupAgentConfig": {
          "description": "Configuration for the Backup for GKE agent addon.",
          "$ref": "GkeBackupAgentConfig"
        }
      },
      "id": "AddonsConfig",
      "type": "object"
    },
    "CidrBlock": {
      "id": "CidrBlock",
      "description": "CidrBlock contains an optional name and one CIDR block.",
      "type": "object",
      "properties": {
        "cidrBlock": {
          "type": "string",
          "description": "cidr_block must be specified in CIDR notation."
        },
        "displayName": {
          "description": "display_name is an optional field for users to identify CIDR blocks.",
          "type": "string"
        }
      }
    },
    "PrivateClusterConfig": {
      "id": "PrivateClusterConfig",
      "properties": {
        "enablePrivateNodes": {
          "type": "boolean",
          "description": "Whether nodes have internal IP addresses only. If enabled, all nodes are given only RFC 1918 private addresses and communicate with the master via private networking."
        },
        "enablePrivateEndpoint": {
          "type": "boolean",
          "description": "Whether the master's internal IP address is used as the cluster endpoint."
        },
        "masterIpv4CidrBlock": {
          "type": "string",
          "description": "The IP range in CIDR notation to use for the hosted master network. This range will be used for assigning internal IP addresses to the master or set of masters, as well as the ILB VIP. This range must not overlap with any other ranges in use within the cluster's network."
        },
        "masterGlobalAccessConfig": {
          "description": "Controls master global access settings.",
          "$ref": "PrivateClusterMasterGlobalAccessConfig"
        },
        "peeringName": {
          "description": "Output only. The peering name in the customer VPC used by this cluster.",
          "type": "string"
        },
        "publicEndpoint": {
          "type": "string",
          "description": "Output only. The external IP address of this cluster's master endpoint."
        },
        "privateEndpoint": {
          "type": "string",
          "description": "Output only. The internal IP address of this cluster's master endpoint."
        }
      },
      "type": "object",
      "description": "Configuration options for private clusters."
    },
    "SetNodePoolSizeRequest": {
      "type": "object",
      "id": "SetNodePoolSizeRequest",
      "properties": {
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field."
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster, node pool id) of the node pool to set size. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`."
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "nodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Required. The desired node count for the pool."
        },
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "nodePoolId": {
          "description": "Required. Deprecated. The name of the node pool to update. This field has been deprecated and replaced by the name field.",
          "type": "string"
        }
      },
      "description": "SetNodePoolSizeRequest sets the size of a node pool."
    },
    "SetLocationsRequest": {
      "properties": {
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster) of the cluster to set locations. Specified in the format `projects/*/locations/*/clusters/*`."
        },
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field."
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. The desired list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. Changing the locations a cluster is in will result in nodes being either created or removed from the cluster, depending on whether locations are being added or removed. This list must always include the cluster's primary zone."
        }
      },
      "id": "SetLocationsRequest",
      "type": "object",
      "description": "SetLocationsRequest sets the locations of the cluster."
    },
    "UsableSubnetworkSecondaryRange": {
      "id": "UsableSubnetworkSecondaryRange",
      "description": "Secondary IP range of a usable subnetwork.",
      "type": "object",
      "properties": {
        "ipCidrRange": {
          "type": "string",
          "description": "The range of IP addresses belonging to this subnetwork secondary range."
        },
        "status": {
          "enumDescriptions": [
            "UNKNOWN is the zero value of the Status enum. It's not a valid status.",
            "UNUSED denotes that this range is unclaimed by any cluster.",
            "IN_USE_SERVICE denotes that this range is claimed by a cluster for services. It cannot be used for other clusters.",
            "IN_USE_SHAREABLE_POD denotes this range was created by the network admin and is currently claimed by a cluster for pods. It can only be used by other clusters as a pod range.",
            "IN_USE_MANAGED_POD denotes this range was created by GKE and is claimed for pods. It cannot be used for other clusters."
          ],
          "enum": [
            "UNKNOWN",
            "UNUSED",
            "IN_USE_SERVICE",
            "IN_USE_SHAREABLE_POD",
            "IN_USE_MANAGED_POD"
          ],
          "description": "This field is to determine the status of the secondary range programmably.",
          "type": "string"
        },
        "rangeName": {
          "description": "The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance.",
          "type": "string"
        }
      }
    },
    "SetMasterAuthRequest": {
      "description": "SetMasterAuthRequest updates the admin password of a cluster.",
      "type": "object",
      "id": "SetMasterAuthRequest",
      "properties": {
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field."
        },
        "action": {
          "enumDescriptions": [
            "Operation is unknown and will error out.",
            "Set the password to a user generated value.",
            "Generate a new password and set it to that.",
            "Set the username. If an empty username is provided, basic authentication is disabled for the cluster. If a non-empty username is provided, basic authentication is enabled, with either a provided password or a generated one."
          ],
          "type": "string",
          "description": "Required. The exact form of action to be taken on the master auth.",
          "enum": [
            "UNKNOWN",
            "SET_PASSWORD",
            "GENERATE_PASSWORD",
            "SET_USERNAME"
          ]
        },
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "update": {
          "$ref": "MasterAuth",
          "description": "Required. A description of the update."
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster) of the cluster to set auth. Specified in the format `projects/*/locations/*/clusters/*`."
        }
      }
    },
    "NodeNetworkConfig": {
      "type": "object",
      "id": "NodeNetworkConfig",
      "properties": {
        "podRange": {
          "description": "The ID of the secondary range for pod IPs. If `create_pod_range` is true, this ID is used for the new range. If `create_pod_range` is false, uses an existing secondary range with this ID. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created.",
          "type": "string"
        },
        "createPodRange": {
          "description": "Input only. Whether to create a new range for pod IPs in this node pool. Defaults are provided for `pod_range` and `pod_ipv4_cidr_block` if they are not specified. If neither `create_pod_range` or `pod_range` are specified, the cluster-level default (`ip_allocation_policy.cluster_ipv4_cidr_block`) is used. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created.",
          "type": "boolean"
        },
        "podIpv4CidrBlock": {
          "description": "The IP address range for pod IPs in this node pool. Only applicable if `create_pod_range` is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. `/14`) to have a range chosen with a specific netmask. Set to a [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) to pick a specific range to use. Only applicable if `ip_allocation_policy.use_ip_aliases` is true. This field cannot be changed after the node pool has been created.",
          "type": "string"
        },
        "networkPerformanceConfig": {
          "description": "Network bandwidth tier configuration.",
          "$ref": "NetworkPerformanceConfig"
        }
      },
      "description": "Parameters for node pool-level network config."
    },
    "GetJSONWebKeysResponse": {
      "properties": {
        "cacheHeader": {
          "$ref": "HttpCacheControlResponseHeader",
          "description": "OnePlatform automatically extracts this field and uses it to set the HTTP Cache-Control header."
        },
        "keys": {
          "type": "array",
          "items": {
            "$ref": "Jwk"
          },
          "description": "The public component of the keys used by the cluster to sign token requests."
        }
      },
      "type": "object",
      "id": "GetJSONWebKeysResponse",
      "description": "GetJSONWebKeysResponse is a valid JSON Web Key Set as specififed in rfc 7517"
    },
    "NodePoolAutoConfig": {
      "properties": {
        "networkTags": {
          "description": "The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster creation. Each tag within the list must comply with RFC1035.",
          "$ref": "NetworkTags"
        }
      },
      "id": "NodePoolAutoConfig",
      "description": "node pool configs that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled clusters",
      "type": "object"
    },
    "NodePoolAutoscaling": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Is autoscaling enabled for this node pool."
        },
        "maxNodeCount": {
          "type": "integer",
          "description": "Maximum number of nodes for one location in the NodePool. Must be \u003e= min_node_count. There has to be enough quota to scale up the cluster.",
          "format": "int32"
        },
        "minNodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum number of nodes for one location in the NodePool. Must be \u003e= 1 and \u003c= max_node_count."
        },
        "autoprovisioned": {
          "description": "Can this node pool be deleted automatically.",
          "type": "boolean"
        }
      },
      "id": "NodePoolAutoscaling",
      "type": "object",
      "description": "NodePoolAutoscaling contains information required by cluster autoscaler to adjust the size of the node pool to the current cluster usage."
    },
    "Status": {
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "Status"
    },
    "ListClustersResponse": {
      "type": "object",
      "properties": {
        "clusters": {
          "type": "array",
          "description": "A list of clusters in the project in the specified zone, or across all ones.",
          "items": {
            "$ref": "Cluster"
          }
        },
        "missingZones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If any zones are listed here, the list of clusters returned may be missing those zones."
        }
      },
      "id": "ListClustersResponse",
      "description": "ListClustersResponse is the result of ListClustersRequest."
    },
    "GcfsConfig": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether to use GCFS."
        }
      },
      "type": "object",
      "id": "GcfsConfig",
      "description": "GcfsConfig contains configurations of Google Container File System."
    },
    "RollbackNodePoolUpgradeRequest": {
      "id": "RollbackNodePoolUpgradeRequest",
      "description": "RollbackNodePoolUpgradeRequest rollbacks the previously Aborted or Failed NodePool upgrade. This will be an no-op if the last upgrade successfully completed.",
      "properties": {
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "nodePoolId": {
          "type": "string",
          "description": "Required. Deprecated. The name of the node pool to rollback. This field has been deprecated and replaced by the name field."
        },
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field."
        },
        "clusterId": {
          "type": "string",
          "description": "Required. Deprecated. The name of the cluster to rollback. This field has been deprecated and replaced by the name field."
        },
        "name": {
          "description": "The name (project, location, cluster, node pool id) of the node poll to rollback upgrade. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NodeTaints": {
      "type": "object",
      "properties": {
        "taints": {
          "type": "array",
          "items": {
            "$ref": "NodeTaint"
          },
          "description": "List of node taints."
        }
      },
      "id": "NodeTaints",
      "description": "Collection of Kubernetes [node taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration)."
    },
    "CompleteIPRotationRequest": {
      "type": "object",
      "id": "CompleteIPRotationRequest",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster name) of the cluster to complete IP rotation. Specified in the format `projects/*/locations/*/clusters/*`."
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber). This field has been deprecated and replaced by the name field."
        },
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        }
      },
      "description": "CompleteIPRotationRequest moves the cluster master back into single-IP mode."
    },
    "NetworkTags": {
      "properties": {
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of network tags."
        }
      },
      "type": "object",
      "description": "Collection of Compute Engine network tags that can be applied to a node's underlying VM instance. (See `tags` field in [`NodeConfig`](/kubernetes-engine/docs/reference/rest/v1/NodeConfig)).",
      "id": "NetworkTags"
    },
    "ListUsableSubnetworksResponse": {
      "description": "ListUsableSubnetworksResponse is the response of ListUsableSubnetworksRequest.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "This token allows you to get the next page of results for list requests. If the number of results is larger than `page_size`, use the `next_page_token` as a value for the query parameter `page_token` in the next request. The value will become empty when there are no more pages."
        },
        "subnetworks": {
          "type": "array",
          "description": "A list of usable subnetworks in the specified network project.",
          "items": {
            "$ref": "UsableSubnetwork"
          }
        }
      },
      "id": "ListUsableSubnetworksResponse"
    },
    "OperationProgress": {
      "type": "object",
      "description": "Information about operation (or operation stage) progress.",
      "id": "OperationProgress",
      "properties": {
        "metrics": {
          "type": "array",
          "description": "Progress metric bundle, for example: metrics: [{name: \"nodes done\", int_value: 15}, {name: \"nodes total\", int_value: 32}] or metrics: [{name: \"progress\", double_value: 0.56}, {name: \"progress scale\", double_value: 1.0}]",
          "items": {
            "$ref": "Metric"
          }
        },
        "stages": {
          "items": {
            "$ref": "OperationProgress"
          },
          "type": "array",
          "description": "Substages of an operation or a stage."
        },
        "status": {
          "enumDescriptions": [
            "Not set.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed.",
            "The operation is aborting."
          ],
          "description": "Status of an operation stage. Unset for single-stage operations.",
          "enum": [
            "STATUS_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE",
            "ABORTING"
          ],
          "type": "string"
        },
        "name": {
          "description": "A non-parameterized string describing an operation stage. Unset for single-stage operations.",
          "type": "string"
        }
      }
    },
    "DailyMaintenanceWindow": {
      "description": "Time window specified for daily maintenance operations.",
      "type": "object",
      "properties": {
        "startTime": {
          "description": "Time within the maintenance window to start the maintenance operations. It must be in format \"HH:MM\", where HH : [00-23] and MM : [00-59] GMT.",
          "type": "string"
        },
        "duration": {
          "type": "string",
          "description": "[Output only] Duration of the time window, automatically chosen to be smallest possible in the given scenario."
        }
      },
      "id": "DailyMaintenanceWindow"
    },
    "NodeTaint": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Value for taint."
        },
        "effect": {
          "description": "Effect for taint.",
          "enumDescriptions": [
            "Not set",
            "NoSchedule",
            "PreferNoSchedule",
            "NoExecute"
          ],
          "type": "string",
          "enum": [
            "EFFECT_UNSPECIFIED",
            "NO_SCHEDULE",
            "PREFER_NO_SCHEDULE",
            "NO_EXECUTE"
          ]
        },
        "key": {
          "description": "Key for taint.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "NodeTaint",
      "description": "Kubernetes taint is comprised of three fields: key, value, and effect. Effect can only be one of three types: NoSchedule, PreferNoSchedule or NoExecute. See [here](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration) for more information, including usage and the valid values."
    },
    "GkeBackupAgentConfig": {
      "type": "object",
      "id": "GkeBackupAgentConfig",
      "properties": {
        "enabled": {
          "description": "Whether the Backup for GKE agent is enabled for this cluster.",
          "type": "boolean"
        }
      },
      "description": "Configuration for the Backup for GKE Agent."
    },
    "ResourceUsageExportConfig": {
      "id": "ResourceUsageExportConfig",
      "type": "object",
      "properties": {
        "bigqueryDestination": {
          "description": "Configuration to use BigQuery as usage export destination.",
          "$ref": "BigQueryDestination"
        },
        "enableNetworkEgressMetering": {
          "description": "Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created in the cluster to meter network egress traffic.",
          "type": "boolean"
        },
        "consumptionMeteringConfig": {
          "$ref": "ConsumptionMeteringConfig",
          "description": "Configuration to enable resource consumption metering."
        }
      },
      "description": "Configuration for exporting cluster resource usages."
    },
    "DNSConfig": {
      "id": "DNSConfig",
      "properties": {
        "clusterDnsScope": {
          "enumDescriptions": [
            "Default value, will be inferred as cluster scope.",
            "DNS records are accessible from within the cluster.",
            "DNS records are accessible from within the VPC."
          ],
          "enum": [
            "DNS_SCOPE_UNSPECIFIED",
            "CLUSTER_SCOPE",
            "VPC_SCOPE"
          ],
          "type": "string",
          "description": "cluster_dns_scope indicates the scope of access to cluster DNS records."
        },
        "clusterDns": {
          "description": "cluster_dns indicates which in-cluster DNS provider should be used.",
          "enumDescriptions": [
            "Default value",
            "Use GKE default DNS provider(kube-dns) for DNS resolution.",
            "Use CloudDNS for DNS resolution."
          ],
          "type": "string",
          "enum": [
            "PROVIDER_UNSPECIFIED",
            "PLATFORM_DEFAULT",
            "CLOUD_DNS"
          ]
        },
        "clusterDnsDomain": {
          "description": "cluster_dns_domain is the suffix used for all cluster service records.",
          "type": "string"
        }
      },
      "description": "DNSConfig contains the desired set of options for configuring clusterDNS.",
      "type": "object"
    },
    "MasterAuthorizedNetworksConfig": {
      "id": "MasterAuthorizedNetworksConfig",
      "type": "object",
      "properties": {
        "cidrBlocks": {
          "type": "array",
          "description": "cidr_blocks define up to 10 external networks that could access Kubernetes master through HTTPS.",
          "items": {
            "$ref": "CidrBlock"
          }
        },
        "enabled": {
          "description": "Whether or not master authorized networks is enabled.",
          "type": "boolean"
        }
      },
      "description": "Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs."
    },
    "BinaryAuthorization": {
      "id": "BinaryAuthorization",
      "properties": {
        "enabled": {
          "description": "Enable Binary Authorization for this cluster. If enabled, all container images will be validated by Binary Authorization.",
          "type": "boolean"
        }
      },
      "description": "Configuration for Binary Authorization.",
      "type": "object"
    },
    "KalmConfig": {
      "id": "KalmConfig",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether KALM is enabled for this cluster."
        }
      },
      "description": "Configuration options for the KALM addon.",
      "type": "object"
    },
    "ReleaseChannelConfig": {
      "description": "ReleaseChannelConfig exposes configuration for a release channel.",
      "id": "ReleaseChannelConfig",
      "type": "object",
      "properties": {
        "defaultVersion": {
          "type": "string",
          "description": "The default version for newly created clusters on the channel."
        },
        "channel": {
          "type": "string",
          "enum": [
            "UNSPECIFIED",
            "RAPID",
            "REGULAR",
            "STABLE"
          ],
          "description": "The release channel this configuration applies to.",
          "enumDescriptions": [
            "No channel specified.",
            "RAPID channel is offered on an early access basis for customers who want to test new releases. WARNING: Versions available in the RAPID Channel may be subject to unresolved issues with no known workaround and are not subject to any SLAs.",
            "Clusters subscribed to REGULAR receive versions that are considered GA quality. REGULAR is intended for production users who want to take advantage of new features.",
            "Clusters subscribed to STABLE receive versions that are known to be stable and reliable in production."
          ]
        },
        "availableVersions": {
          "description": "Deprecated. This field has been deprecated and replaced with the valid_versions field.",
          "type": "array",
          "items": {
            "$ref": "AvailableVersion"
          }
        },
        "validVersions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of valid versions for the channel."
        }
      }
    },
    "ConsumptionMeteringConfig": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable consumption metering for this cluster. If enabled, a second BigQuery table will be created to hold resource consumption records."
        }
      },
      "type": "object",
      "id": "ConsumptionMeteringConfig",
      "description": "Parameters for controlling consumption metering."
    },
    "WorkloadALTSConfig": {
      "id": "WorkloadALTSConfig",
      "type": "object",
      "description": "Configuration for direct-path (via ALTS) with workload identity.",
      "properties": {
        "enableAlts": {
          "type": "boolean",
          "description": "enable_alts controls whether the alts handshaker should be enabled or not for direct-path. Requires Workload Identity (workload_pool must be non-empty)."
        }
      }
    },
    "SetMonitoringServiceRequest": {
      "type": "object",
      "properties": {
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster) of the cluster to set monitoring. Specified in the format `projects/*/locations/*/clusters/*`."
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "monitoringService": {
          "description": "Required. The monitoring service the cluster should use to write metrics. Currently available options: * \"monitoring.googleapis.com/kubernetes\" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.",
          "type": "string"
        }
      },
      "id": "SetMonitoringServiceRequest",
      "description": "SetMonitoringServiceRequest sets the monitoring service of a cluster."
    },
    "IdentityServiceConfig": {
      "id": "IdentityServiceConfig",
      "type": "object",
      "description": "IdentityServiceConfig is configuration for Identity Service which allows customers to use external identity providers with the K8S API",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable the Identity Service component"
        }
      }
    },
    "AcceleratorConfig": {
      "properties": {
        "acceleratorCount": {
          "format": "int64",
          "type": "string",
          "description": "The number of the accelerator cards exposed to an instance."
        },
        "gpuPartitionSize": {
          "type": "string",
          "description": "Size of partitions to create on the GPU. Valid values are described in the NVIDIA [mig user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning)."
        },
        "acceleratorType": {
          "type": "string",
          "description": "The accelerator type resource name. List of supported accelerators [here](https://cloud.google.com/compute/docs/gpus)"
        }
      },
      "description": "AcceleratorConfig represents a Hardware Accelerator request.",
      "id": "AcceleratorConfig",
      "type": "object"
    },
    "WorkloadMetadataConfig": {
      "type": "object",
      "id": "WorkloadMetadataConfig",
      "properties": {
        "mode": {
          "enum": [
            "MODE_UNSPECIFIED",
            "GCE_METADATA",
            "GKE_METADATA"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "Expose all Compute Engine metadata to pods.",
            "Run the GKE Metadata Server on this node. The GKE Metadata Server exposes a metadata API to workloads that is compatible with the V1 Compute Metadata APIs exposed by the Compute Engine and App Engine Metadata Servers. This feature can only be enabled if Workload Identity is enabled at the cluster level."
          ],
          "description": "Mode is the configuration for how to expose metadata to workloads running on the node pool."
        },
        "nodeMetadata": {
          "enumDescriptions": [
            "Not set.",
            "Prevent workloads not in hostNetwork from accessing certain VM metadata, specifically kube-env, which contains Kubelet credentials, and the instance identity token. Metadata concealment is a temporary security solution available while the bootstrapping process for cluster nodes is being redesigned with significant security improvements. This feature is scheduled to be deprecated in the future and later removed.",
            "Expose all VM metadata to pods.",
            "Run the GKE Metadata Server on this node. The GKE Metadata Server exposes a metadata API to workloads that is compatible with the V1 Compute Metadata APIs exposed by the Compute Engine and App Engine Metadata Servers. This feature can only be enabled if Workload Identity is enabled at the cluster level."
          ],
          "type": "string",
          "description": "NodeMetadata is the configuration for how to expose metadata to the workloads running on the node.",
          "enum": [
            "UNSPECIFIED",
            "SECURE",
            "EXPOSE",
            "GKE_METADATA_SERVER"
          ]
        }
      },
      "description": "WorkloadMetadataConfig defines the metadata configuration to expose to workloads on the node pool."
    },
    "Jwk": {
      "description": "Jwk is a JSON Web Key as specified in RFC 7517",
      "properties": {
        "n": {
          "type": "string",
          "description": "Used for RSA keys."
        },
        "y": {
          "description": "Used for ECDSA keys.",
          "type": "string"
        },
        "alg": {
          "type": "string",
          "description": "Algorithm."
        },
        "e": {
          "type": "string",
          "description": "Used for RSA keys."
        },
        "kid": {
          "type": "string",
          "description": "Key ID."
        },
        "crv": {
          "description": "Used for ECDSA keys.",
          "type": "string"
        },
        "kty": {
          "description": "Key Type.",
          "type": "string"
        },
        "x": {
          "type": "string",
          "description": "Used for ECDSA keys."
        },
        "use": {
          "description": "Permitted uses for the public keys.",
          "type": "string"
        }
      },
      "id": "Jwk",
      "type": "object"
    },
    "WorkloadCertificates": {
      "type": "object",
      "description": "Configuration for issuance of mTLS keys and certificates to Kubernetes pods.",
      "properties": {
        "enableCertificates": {
          "description": "enable_certificates controls issuance of workload mTLS certificates. If set, the GKE Workload Identity Certificates controller and node agent will be deployed in the cluster, which can then be configured by creating a WorkloadCertificateConfig Custom Resource. Requires Workload Identity (workload_pool must be non-empty).",
          "type": "boolean"
        }
      },
      "id": "WorkloadCertificates"
    },
    "UpdateMasterRequest": {
      "type": "object",
      "description": "UpdateMasterRequest updates the master of the cluster.",
      "properties": {
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "masterVersion": {
          "type": "string",
          "description": "Required. The Kubernetes version to change the master to. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - \"latest\": picks the highest valid Kubernetes version - \"1.X\": picks the highest valid patch+gke.N patch in the 1.X version - \"1.X.Y\": picks the highest valid gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an explicit Kubernetes version - \"-\": picks the default Kubernetes version"
        },
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field."
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster) of the cluster to update. Specified in the format `projects/*/locations/*/clusters/*`."
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
          "type": "string"
        }
      },
      "id": "UpdateMasterRequest"
    },
    "NodePoolDefaults": {
      "type": "object",
      "id": "NodePoolDefaults",
      "properties": {
        "nodeConfigDefaults": {
          "$ref": "NodeConfigDefaults",
          "description": "Subset of NodeConfig message that has defaults."
        }
      },
      "description": "Subset of Nodepool message that has defaults."
    },
    "NodeConfigDefaults": {
      "properties": {
        "gcfsConfig": {
          "$ref": "GcfsConfig",
          "description": "GCFS (Google Container File System, a.k.a Riptide) options."
        }
      },
      "id": "NodeConfigDefaults",
      "description": "Subset of NodeConfig message that has defaults.",
      "type": "object"
    },
    "GcpFilestoreCsiDriverConfig": {
      "description": "Configuration for the GCP Filestore CSI driver.",
      "id": "GcpFilestoreCsiDriverConfig",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether the GCP Filestore CSI driver is enabled for this cluster.",
          "type": "boolean"
        }
      }
    },
    "EphemeralStorageConfig": {
      "id": "EphemeralStorageConfig",
      "description": "EphemeralStorageConfig contains configuration for the ephemeral storage filesystem.",
      "type": "object",
      "properties": {
        "localSsdCount": {
          "description": "Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ServerConfig": {
      "id": "ServerConfig",
      "type": "object",
      "properties": {
        "defaultClusterVersion": {
          "description": "Version of Kubernetes the service deploys by default.",
          "type": "string"
        },
        "channels": {
          "items": {
            "$ref": "ReleaseChannelConfig"
          },
          "type": "array",
          "description": "List of release channel configurations."
        },
        "validNodeVersions": {
          "description": "List of valid node upgrade target versions, in descending order.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "validImageTypes": {
          "description": "List of valid image types.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "validMasterVersions": {
          "description": "List of valid master versions, in descending order.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "windowsVersionMaps": {
          "description": "Maps of Kubernetes version and supported Windows server versions.",
          "additionalProperties": {
            "$ref": "WindowsVersions"
          },
          "type": "object"
        },
        "defaultImageType": {
          "type": "string",
          "description": "Default image type."
        }
      },
      "description": "Kubernetes Engine service configuration."
    },
    "ConfigConnectorConfig": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether Cloud Connector is enabled for this cluster."
        }
      },
      "description": "Configuration options for the Config Connector add-on.",
      "id": "ConfigConnectorConfig",
      "type": "object"
    },
    "IntraNodeVisibilityConfig": {
      "type": "object",
      "description": "IntraNodeVisibilityConfig contains the desired config of the intra-node visibility on this cluster.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enables intra node visibility for this cluster."
        }
      },
      "id": "IntraNodeVisibilityConfig"
    },
    "Metric": {
      "properties": {
        "stringValue": {
          "description": "For metrics with custom values (ratios, visual progress, etc.).",
          "type": "string"
        },
        "name": {
          "description": "Required. Metric name, e.g., \"nodes total\", \"percent done\".",
          "type": "string"
        },
        "doubleValue": {
          "type": "number",
          "description": "For metrics with floating point value.",
          "format": "double"
        },
        "intValue": {
          "type": "string",
          "description": "For metrics with integer value.",
          "format": "int64"
        }
      },
      "id": "Metric",
      "description": "Progress metric is (string, int|float|string) pair.",
      "type": "object"
    },
    "AuthenticatorGroupsConfig": {
      "properties": {
        "securityGroup": {
          "type": "string",
          "description": "The name of the security group-of-groups to be used. Only relevant if enabled = true."
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether this cluster should return group membership lookups during authentication using a group of security groups."
        }
      },
      "id": "AuthenticatorGroupsConfig",
      "type": "object",
      "description": "Configuration for returning group information from authenticators."
    },
    "MaxPodsConstraint": {
      "id": "MaxPodsConstraint",
      "properties": {
        "maxPodsPerNode": {
          "description": "Constraint enforced on the max num of pods per node.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Constraints applied to pods.",
      "type": "object"
    },
    "TimeWindow": {
      "type": "object",
      "description": "Represents an arbitrary window of time.",
      "id": "TimeWindow",
      "properties": {
        "startTime": {
          "description": "The time that the window first starts.",
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time that the window ends. The end time should take place after the start time.",
          "type": "string"
        },
        "maintenanceExclusionOptions": {
          "description": "MaintenanceExclusionOptions provides maintenance exclusion related options.",
          "$ref": "MaintenanceExclusionOptions"
        }
      }
    },
    "SandboxConfig": {
      "description": "SandboxConfig contains configurations of the sandbox to use for the node.",
      "type": "object",
      "properties": {
        "sandboxType": {
          "type": "string",
          "description": "Type of the sandbox to use for the node (e.g. 'gvisor')"
        },
        "type": {
          "enum": [
            "UNSPECIFIED",
            "GVISOR"
          ],
          "enumDescriptions": [
            "Default value. This should not be used.",
            "Run sandbox using gvisor."
          ],
          "description": "Type of the sandbox to use for the node.",
          "type": "string"
        }
      },
      "id": "SandboxConfig"
    },
    "SetLoggingServiceRequest": {
      "properties": {
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field."
        },
        "clusterId": {
          "type": "string",
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field."
        },
        "loggingService": {
          "description": "Required. The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster) of the cluster to set logging. Specified in the format `projects/*/locations/*/clusters/*`."
        },
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
          "type": "string"
        }
      },
      "description": "SetLoggingServiceRequest sets the logging service of a cluster.",
      "id": "SetLoggingServiceRequest",
      "type": "object"
    },
    "UpdateClusterRequest": {
      "description": "UpdateClusterRequest updates the settings of a cluster.",
      "type": "object",
      "properties": {
        "update": {
          "$ref": "ClusterUpdate",
          "description": "Required. A description of the update."
        },
        "name": {
          "description": "The name (project, location, cluster) of the cluster to update. Specified in the format `projects/*/locations/*/clusters/*`.",
          "type": "string"
        },
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster to upgrade. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field."
        }
      },
      "id": "UpdateClusterRequest"
    },
    "CancelOperationRequest": {
      "properties": {
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the operation resides. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, operation id) of the operation to cancel. Specified in the format `projects/*/locations/*/operations/*`."
        },
        "operationId": {
          "type": "string",
          "description": "Required. Deprecated. The server-assigned `name` of the operation. This field has been deprecated and replaced by the name field."
        }
      },
      "type": "object",
      "description": "CancelOperationRequest cancels a single operation.",
      "id": "CancelOperationRequest"
    },
    "TpuConfig": {
      "type": "object",
      "id": "TpuConfig",
      "properties": {
        "ipv4CidrBlock": {
          "type": "string",
          "description": "IPv4 CIDR block reserved for Cloud TPU in the VPC."
        },
        "enabled": {
          "description": "Whether Cloud TPU integration is enabled or not.",
          "type": "boolean"
        },
        "useServiceNetworking": {
          "type": "boolean",
          "description": "Whether to use service networking for Cloud TPU or not."
        }
      },
      "description": "Configuration for Cloud TPU."
    },
    "ListNodePoolsResponse": {
      "type": "object",
      "properties": {
        "nodePools": {
          "items": {
            "$ref": "NodePool"
          },
          "description": "A list of node pools for a cluster.",
          "type": "array"
        }
      },
      "id": "ListNodePoolsResponse",
      "description": "ListNodePoolsResponse is the result of ListNodePoolsRequest."
    },
    "Location": {
      "description": "Location returns the location name, and if the location is recommended for GKE cluster scheduling.",
      "type": "object",
      "id": "Location",
      "properties": {
        "name": {
          "type": "string",
          "description": "Contains the name of the resource requested. Specified in the format `projects/*/locations/*`."
        },
        "type": {
          "type": "string",
          "description": "Contains the type of location this Location is for. Regional or Zonal.",
          "enumDescriptions": [
            "LOCATION_TYPE_UNSPECIFIED means the location type was not determined.",
            "A GKE Location where Zonal clusters can be created.",
            "A GKE Location where Regional clusters can be created."
          ],
          "enum": [
            "LOCATION_TYPE_UNSPECIFIED",
            "ZONE",
            "REGION"
          ]
        },
        "recommended": {
          "description": "Whether the location is recomended for GKE cluster scheduling.",
          "type": "boolean"
        }
      }
    },
    "StartIPRotationRequest": {
      "properties": {
        "clusterId": {
          "type": "string",
          "description": "Required. Deprecated. The name of the cluster. This field has been deprecated and replaced by the name field."
        },
        "projectId": {
          "type": "string",
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://developers.google.com/console/help/new/#projectnumber). This field has been deprecated and replaced by the name field."
        },
        "zone": {
          "type": "string",
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field."
        },
        "name": {
          "type": "string",
          "description": "The name (project, location, cluster name) of the cluster to start IP rotation. Specified in the format `projects/*/locations/*/clusters/*`."
        },
        "rotateCredentials": {
          "type": "boolean",
          "description": "Whether to rotate credentials during IP rotation."
        }
      },
      "id": "StartIPRotationRequest",
      "description": "StartIPRotationRequest creates a new IP for the cluster and then performs a node upgrade on each node pool to point to the new IP.",
      "type": "object"
    },
    "WindowsVersions": {
      "description": "Windows server versions.",
      "id": "WindowsVersions",
      "type": "object",
      "properties": {
        "windowsVersions": {
          "description": "List of Windows server versions.",
          "type": "array",
          "items": {
            "$ref": "WindowsVersion"
          }
        }
      }
    },
    "PodSecurityPolicyConfig": {
      "type": "object",
      "description": "Configuration for the PodSecurityPolicy feature.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable the PodSecurityPolicy controller for this cluster. If enabled, pods must be valid under a PodSecurityPolicy to be created."
        }
      },
      "id": "PodSecurityPolicyConfig"
    },
    "LoggingConfig": {
      "description": "LoggingConfig is cluster logging configuration.",
      "id": "LoggingConfig",
      "properties": {
        "componentConfig": {
          "description": "Logging components configuration",
          "$ref": "LoggingComponentConfig"
        }
      },
      "type": "object"
    },
    "MonitoringConfig": {
      "description": "MonitoringConfig is cluster monitoring configuration.",
      "id": "MonitoringConfig",
      "properties": {
        "managedPrometheusConfig": {
          "$ref": "ManagedPrometheusConfig",
          "description": "Enable Google Cloud Managed Service for Prometheus in the cluster."
        },
        "componentConfig": {
          "$ref": "MonitoringComponentConfig",
          "description": "Monitoring components configuration"
        }
      },
      "type": "object"
    },
    "ConfidentialNodes": {
      "id": "ConfidentialNodes",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether Confidential Nodes feature is enabled."
        }
      },
      "type": "object",
      "description": "ConfidentialNodes is configuration for the confidential nodes feature, which makes nodes run on confidential VMs."
    },
    "LegacyAbac": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service accounts, nodes, and controllers, will have statically granted permissions beyond those provided by the RBAC configuration or IAM."
        }
      },
      "type": "object",
      "id": "LegacyAbac",
      "description": "Configuration for the legacy Attribute Based Access Control authorization mode."
    },
    "SetNodePoolManagementRequest": {
      "type": "object",
      "description": "SetNodePoolManagementRequest sets the node management properties of a node pool.",
      "properties": {
        "name": {
          "description": "The name (project, location, cluster, node pool id) of the node pool to set management properties. Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.",
          "type": "string"
        },
        "clusterId": {
          "description": "Required. Deprecated. The name of the cluster to update. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "projectId": {
          "description": "Required. Deprecated. The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840). This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "zone": {
          "description": "Required. Deprecated. The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "nodePoolId": {
          "description": "Required. Deprecated. The name of the node pool to update. This field has been deprecated and replaced by the name field.",
          "type": "string"
        },
        "management": {
          "description": "Required. NodeManagement configuration for the node pool.",
          "$ref": "NodeManagement"
        }
      },
      "id": "SetNodePoolManagementRequest"
    },
    "AvailableVersion": {
      "id": "AvailableVersion",
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Kubernetes version."
        },
        "reason": {
          "description": "Reason for availability.",
          "type": "string"
        }
      },
      "description": "Deprecated."
    },
    "CloudRunConfig": {
      "id": "CloudRunConfig",
      "properties": {
        "disabled": {
          "type": "boolean",
          "description": "Whether Cloud Run addon is enabled for this cluster."
        },
        "loadBalancerType": {
          "enum": [
            "LOAD_BALANCER_TYPE_UNSPECIFIED",
            "LOAD_BALANCER_TYPE_EXTERNAL",
            "LOAD_BALANCER_TYPE_INTERNAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Load balancer type for Cloud Run is unspecified.",
            "Install external load balancer for Cloud Run.",
            "Install internal load balancer for Cloud Run."
          ],
          "description": "Which load balancer type is installed for Cloud Run."
        }
      },
      "type": "object",
      "description": "Configuration options for the Cloud Run feature."
    },
    "ShieldedNodes": {
      "id": "ShieldedNodes",
      "description": "Configuration of Shielded Nodes feature.",
      "properties": {
        "enabled": {
          "description": "Whether Shielded Nodes features are enabled on all nodes in this cluster.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "NodeConfig": {
      "type": "object",
      "id": "NodeConfig",
      "properties": {
        "confidentialNodes": {
          "$ref": "ConfidentialNodes",
          "description": "Confidential nodes config. All the nodes in the node pool will be Confidential VM once enabled."
        },
        "sandboxConfig": {
          "description": "Sandbox configuration for this node.",
          "$ref": "SandboxConfig"
        },
        "machineType": {
          "type": "string",
          "description": "The name of a Google Compute Engine [machine type](https://cloud.google.com/compute/docs/machine-types). If unspecified, the default machine type is `e2-medium`."
        },
        "nodeGroup": {
          "type": "string",
          "description": "Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes)."
        },
        "taints": {
          "type": "array",
          "items": {
            "$ref": "NodeTaint"
          },
          "description": "List of kubernetes taints to be applied to each node. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster or node pool creation. Each tag within the list must comply with RFC1035."
        },
        "diskSizeGb": {
          "format": "int32",
          "description": "Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.",
          "type": "integer"
        },
        "diskType": {
          "type": "string",
          "description": "Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') If unspecified, the default disk type is 'pd-standard'"
        },
        "kubeletConfig": {
          "$ref": "NodeKubeletConfig",
          "description": "Node kubelet configs."
        },
        "labels": {
          "description": "The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it's best to assume the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "preemptible": {
          "type": "boolean",
          "description": "Whether the nodes are created as preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible for more inforamtion about preemptible VM instances."
        },
        "gvnic": {
          "description": "Enable or disable gvnic on the node pool.",
          "$ref": "VirtualNIC"
        },
        "serviceAccount": {
          "type": "string",
          "description": "The Google Cloud Platform Service Account to be used by the node VMs. Specify the email address of the Service Account; otherwise, if no Service Account is specified, the \"default\" service account is used."
        },
        "oauthScopes": {
          "items": {
            "type": "string"
          },
          "description": "The set of Google API scopes to be made available on all of the node VMs under the \"default\" service account. The following scopes are recommended, but not required, and by default are not included: * `https://www.googleapis.com/auth/compute` is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only` is required for communicating with **gcr.io** (the [Google Container Registry](https://cloud.google.com/container-registry/)). If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.",
          "type": "array"
        },
        "workloadMetadataConfig": {
          "$ref": "WorkloadMetadataConfig",
          "description": "The workload metadata configuration for this node."
        },
        "localSsdCount": {
          "description": "The number of local SSD disks to be attached to the node. The limit for this value is dependent upon the maximum number of disks available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information.",
          "format": "int32",
          "type": "integer"
        },
        "gcfsConfig": {
          "$ref": "GcfsConfig",
          "description": "GCFS (Google Container File System) configs."
        },
        "reservationAffinity": {
          "$ref": "ReservationAffinity",
          "description": "The optional reservation affinity. Setting this field will apply the specified [Zonal Compute Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) to this node pool."
        },
        "accelerators": {
          "items": {
            "$ref": "AcceleratorConfig"
          },
          "type": "array",
          "description": "A list of hardware accelerators to be attached to each node. See https://cloud.google.com/compute/docs/gpus for more information about support for GPUs."
        },
        "ephemeralStorageConfig": {
          "$ref": "EphemeralStorageConfig",
          "description": "Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk."
        },
        "spot": {
          "type": "boolean",
          "description": "Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag."
        },
        "linuxNodeConfig": {
          "$ref": "LinuxNodeConfig",
          "description": "Parameters that can be configured on Linux nodes."
        },
        "bootDiskKmsKey": {
          "type": "string",
          "description": " The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption"
        },
        "advancedMachineFeatures": {
          "$ref": "AdvancedMachineFeatures",
          "description": "Advanced features for the Compute Engine VM."
        },
        "imageType": {
          "type": "string",
          "description": "The image type to use for this node. Note that for a given image type, the latest version of it will be used."
        },
        "shieldedInstanceConfig": {
          "$ref": "ShieldedInstanceConfig",
          "description": "Shielded Instance options."
        },
        "metadata": {
          "description": "The metadata key/value pairs assigned to instances in the cluster. Keys must conform to the regexp `[a-zA-Z0-9-_]+` and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the reserved keys: - \"cluster-location\" - \"cluster-name\" - \"cluster-uid\" - \"configure-sh\" - \"containerd-configure-sh\" - \"enable-oslogin\" - \"gci-ensure-gke-docker\" - \"gci-metrics-enabled\" - \"gci-update-strategy\" - \"instance-template\" - \"kube-env\" - \"startup-script\" - \"user-data\" - \"disable-address-manager\" - \"windows-startup-script-ps1\" - \"common-psm1\" - \"k8s-node-setup-psm1\" - \"install-ssh-psm1\" - \"user-profile-psm1\" Values are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on them is that each value's size must be less than or equal to 32 KB. The total size of all keys and values must be less than 512 KB.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "minCpuPlatform": {
          "description": "Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as `minCpuPlatform: \"Intel Haswell\"` or `minCpuPlatform: \"Intel Sandy Bridge\"`. For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)",
          "type": "string"
        }
      },
      "description": "Parameters that describe the nodes in a cluster. *Note:* GKE Autopilot clusters do not recognize parameters in `NodeConfig`. Use AutoprovisioningNodePoolDefaults instead."
    },
    "RecurringTimeWindow": {
      "type": "object",
      "id": "RecurringTimeWindow",
      "properties": {
        "window": {
          "description": "The window of the first recurrence.",
          "$ref": "TimeWindow"
        },
        "recurrence": {
          "description": "An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how this window reccurs. They go on for the span of time between the start and end time. For example, to have something repeat every weekday, you'd use: `FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR` To repeat some window daily (equivalent to the DailyMaintenanceWindow): `FREQ=DAILY` For the first weekend of every month: `FREQ=MONTHLY;BYSETPOS=1;BYDAY=SA,SU` This specifies how frequently the window starts. Eg, if you wanted to have a 9-5 UTC-4 window every weekday, you'd use something like: ``` start time = 2019-01-01T09:00:00-0400 end time = 2019-01-01T17:00:00-0400 recurrence = FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR ``` Windows can span multiple days. Eg, to make the window encompass every weekend from midnight Saturday till the last minute of Sunday UTC: ``` start time = 2019-01-05T00:00:00Z end time = 2019-01-07T23:59:00Z recurrence = FREQ=WEEKLY;BYDAY=SA ``` Note the start and end time's specific dates are largely arbitrary except to specify duration of the window and when it first starts. The FREQ values of HOURLY, MINUTELY, and SECONDLY are not supported.",
          "type": "string"
        }
      },
      "description": "Represents an arbitrary window of time that recurs."
    },
    "ResourceLimit": {
      "description": "Contains information about amount of some resource in the cluster. For memory, value should be in GB.",
      "type": "object",
      "id": "ResourceLimit",
      "properties": {
        "maximum": {
          "description": "Maximum amount of the resource in the cluster.",
          "format": "int64",
          "type": "string"
        },
        "minimum": {
          "type": "string",
          "description": "Minimum amount of the resource in the cluster.",
          "format": "int64"
        },
        "resourceType": {
          "description": "Resource name \"cpu\", \"memory\" or gpu-specific string.",
          "type": "string"
        }
      }
    },
    "AutoUpgradeOptions": {
      "id": "AutoUpgradeOptions",
      "type": "object",
      "properties": {
        "autoUpgradeStartTime": {
          "description": "[Output only] This field is set when upgrades are about to commence with the approximate start time for the upgrades, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "[Output only] This field is set when upgrades are about to commence with the description of the upgrade."
        }
      },
      "description": "AutoUpgradeOptions defines the set of options for the user to control how the Auto Upgrades will proceed."
    },
    "MaintenanceWindow": {
      "description": "MaintenanceWindow defines the maintenance window to be used for the cluster.",
      "type": "object",
      "properties": {
        "recurringWindow": {
          "$ref": "RecurringTimeWindow",
          "description": "RecurringWindow specifies some number of recurring time periods for maintenance to occur. The time windows may be overlapping. If no maintenance windows are set, maintenance can occur at any time."
        },
        "maintenanceExclusions": {
          "additionalProperties": {
            "$ref": "TimeWindow"
          },
          "description": "Exceptions to maintenance window. Non-emergency maintenance should not occur in these windows.",
          "type": "object"
        },
        "dailyMaintenanceWindow": {
          "description": "DailyMaintenanceWindow specifies a daily maintenance operation window.",
          "$ref": "DailyMaintenanceWindow"
        }
      },
      "id": "MaintenanceWindow"
    }
  },
  "version": "v1beta1",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "version_module": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "batchPath": "batch",
  "basePath": "",
  "ownerDomain": "google.com",
  "kind": "discovery#restDescription",
  "protocol": "rest",
  "baseUrl": "https://container.googleapis.com/",
  "revision": "20220330",
  "servicePath": ""
}

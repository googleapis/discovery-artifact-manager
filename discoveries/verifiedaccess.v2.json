{
  "protocol": "rest",
  "batchPath": "batch",
  "canonicalName": "verifiedaccess",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "title": "Chrome Verified Access API",
  "id": "verifiedaccess:v2",
  "servicePath": "",
  "discoveryVersion": "v1",
  "revision": "20221004",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/verifiedaccess": {
          "description": "Verify your enterprise credentials"
        }
      }
    }
  },
  "schemas": {
    "Challenge": {
      "properties": {
        "alternativeChallenge": {
          "description": "Challenge generated with the old signing key, the bytes representation of SignedData (this will only be present during key rotation).",
          "format": "byte",
          "type": "string"
        },
        "challenge": {
          "format": "byte",
          "description": "Generated challenge, the bytes representation of SignedData.",
          "type": "string"
        }
      },
      "description": "Result message for VerifiedAccess.GenerateChallenge.",
      "id": "Challenge",
      "type": "object"
    },
    "VerifyChallengeResponseRequest": {
      "description": "Signed ChallengeResponse.",
      "properties": {
        "expectedIdentity": {
          "description": "Optional. Service can optionally provide identity information about the device or user associated with the key. For an EMK, this value is the enrolled domain. For an EUK, this value is the user's email address. If present, this value will be checked against contents of the response, and verification will fail if there is no match.",
          "type": "string"
        },
        "challengeResponse": {
          "format": "byte",
          "type": "string",
          "description": "Required. The generated response to the challenge, the bytes representation of SignedData."
        }
      },
      "type": "object",
      "id": "VerifyChallengeResponseRequest"
    },
    "Empty": {
      "properties": {},
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "VerifyChallengeResponseResult": {
      "description": "Result message for VerifiedAccess.VerifyChallengeResponse.",
      "type": "object",
      "id": "VerifyChallengeResponseResult",
      "properties": {
        "virtualDeviceId": {
          "description": "Virtual device id of the device. The definition of virtual device id is platform-specific.",
          "type": "string"
        },
        "deviceSignal": {
          "type": "string",
          "description": "Device signal in json string representation."
        },
        "customerId": {
          "description": "Unique customer id that this device belongs to, as defined by the Google Admin SDK at https://developers.google.com/admin-sdk/directory/v1/guides/manage-customers",
          "type": "string"
        },
        "devicePermanentId": {
          "type": "string",
          "description": "Device permanent id is returned in this field (for the machine response only)."
        },
        "keyTrustLevel": {
          "enumDescriptions": [
            "UNSPECIFIED.",
            "ChromeOS device in verified mode.",
            "ChromeOS device in developer mode.",
            "Chrome Browser with the key stored in the device hardware.",
            "Chrome Browser with the key stored at OS level."
          ],
          "enum": [
            "KEY_TRUST_LEVEL_UNSPECIFIED",
            "CHROME_OS_VERIFIED_MODE",
            "CHROME_OS_DEVELOPER_MODE",
            "CHROME_BROWSER_HW_KEY",
            "CHROME_BROWSER_OS_KEY"
          ],
          "type": "string",
          "description": "Device attested key trust level."
        },
        "signedPublicKeyAndChallenge": {
          "type": "string",
          "description": "Certificate Signing Request (in the SPKAC format, base64 encoded) is returned in this field. This field will be set only if device has included CSR in its challenge response. (the option to include CSR is now available for both user and machine responses)"
        }
      }
    }
  },
  "documentationLink": "https://developers.google.com/chrome/verified-access",
  "parameters": {
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format.",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    }
  },
  "basePath": "",
  "baseUrl": "https://verifiedaccess.googleapis.com/",
  "resources": {
    "challenge": {
      "methods": {
        "verify": {
          "parameterOrder": [],
          "flatPath": "v2/challenge:verify",
          "id": "verifiedaccess.challenge.verify",
          "path": "v2/challenge:verify",
          "scopes": [
            "https://www.googleapis.com/auth/verifiedaccess"
          ],
          "response": {
            "$ref": "VerifyChallengeResponseResult"
          },
          "request": {
            "$ref": "VerifyChallengeResponseRequest"
          },
          "parameters": {},
          "description": "Verifies the challenge response.",
          "httpMethod": "POST"
        },
        "generate": {
          "httpMethod": "POST",
          "parameters": {},
          "path": "v2/challenge:generate",
          "response": {
            "$ref": "Challenge"
          },
          "scopes": [
            "https://www.googleapis.com/auth/verifiedaccess"
          ],
          "id": "verifiedaccess.challenge.generate",
          "flatPath": "v2/challenge:generate",
          "description": "Generates a new challenge.",
          "request": {
            "$ref": "Empty"
          },
          "parameterOrder": []
        }
      }
    }
  },
  "version": "v2",
  "name": "verifiedaccess",
  "version_module": true,
  "ownerName": "Google",
  "rootUrl": "https://verifiedaccess.googleapis.com/",
  "ownerDomain": "google.com",
  "description": "API for Verified Access chrome extension to provide credential verification for chrome devices connecting to an enterprise network",
  "mtlsRootUrl": "https://verifiedaccess.mtls.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "kind": "discovery#restDescription"
}

{
  "title": "Chrome Verified Access API",
  "servicePath": "",
  "mtlsRootUrl": "https://verifiedaccess.mtls.googleapis.com/",
  "schemas": {
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {}
    },
    "VerifyChallengeResponseRequest": {
      "type": "object",
      "id": "VerifyChallengeResponseRequest",
      "description": "Signed ChallengeResponse.",
      "properties": {
        "expectedIdentity": {
          "type": "string",
          "description": "Optional. Service can optionally provide identity information about the device or user associated with the key. For an EMK, this value is the enrolled domain. For an EUK, this value is the user's email address. If present, this value will be checked against contents of the response, and verification will fail if there is no match."
        },
        "challengeResponse": {
          "description": "Required. The generated response to the challenge, the bytes representation of SignedData.",
          "format": "byte",
          "type": "string"
        }
      }
    },
    "Challenge": {
      "description": "Result message for VerifiedAccess.CreateChallenge.",
      "id": "Challenge",
      "properties": {
        "challenge": {
          "description": "Generated challenge, the bytes representation of SignedData.",
          "type": "string",
          "format": "byte"
        },
        "alternativeChallenge": {
          "type": "string",
          "format": "byte",
          "description": "Challenge generated with the old signing key, the bytes representation of SignedData (this will only be present during key rotation)."
        }
      },
      "type": "object"
    },
    "VerifyChallengeResponseResult": {
      "description": "Result message for VerifiedAccess.VerifyChallengeResponse.",
      "type": "object",
      "id": "VerifyChallengeResponseResult",
      "properties": {
        "deviceSignal": {
          "description": "Device signal in json string representation.",
          "type": "string"
        },
        "signedPublicKeyAndChallenge": {
          "type": "string",
          "description": "Certificate Signing Request (in the SPKAC format, base64 encoded) is returned in this field. This field will be set only if device has included CSR in its challenge response. (the option to include CSR is now available for both user and machine responses)"
        },
        "devicePermanentId": {
          "type": "string",
          "description": "Device permanent id is returned in this field (for the machine response only)."
        },
        "keyTrustLevel": {
          "enumDescriptions": [
            "UNSPECIFIED.",
            "ChromeOS device in verified mode.",
            "ChromeOS device in developer mode.",
            "Chrome Browser with the key stored in TPM.",
            "Chrome Browser with the key stored at OS level."
          ],
          "type": "string",
          "description": "Device attested key trust level.",
          "enum": [
            "KEY_TRUST_LEVEL_UNSPECIFIED",
            "CHROME_OS_VERIFIED_MODE",
            "CHROME_OS_DEVELOPER_MODE",
            "CHROME_BROWSER_TPM_KEY",
            "CHROME_BROWSER_OS_KEY"
          ]
        }
      }
    }
  },
  "resources": {
    "challenge": {
      "methods": {
        "generate": {
          "path": "v2/challenge:generate",
          "httpMethod": "POST",
          "parameterOrder": [],
          "parameters": {},
          "request": {
            "$ref": "Empty"
          },
          "description": "Generates a new challenge.",
          "response": {
            "$ref": "Challenge"
          },
          "scopes": [
            "https://www.googleapis.com/auth/verifiedaccess"
          ],
          "flatPath": "v2/challenge:generate",
          "id": "verifiedaccess.challenge.generate"
        },
        "verify": {
          "scopes": [
            "https://www.googleapis.com/auth/verifiedaccess"
          ],
          "parameterOrder": [],
          "httpMethod": "POST",
          "request": {
            "$ref": "VerifyChallengeResponseRequest"
          },
          "response": {
            "$ref": "VerifyChallengeResponseResult"
          },
          "parameters": {},
          "flatPath": "v2/challenge:verify",
          "description": "Verifies the challenge response.",
          "id": "verifiedaccess.challenge.verify",
          "path": "v2/challenge:verify"
        }
      }
    }
  },
  "batchPath": "batch",
  "parameters": {
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "documentationLink": "https://developers.google.com/chrome/verified-access",
  "kind": "discovery#restDescription",
  "description": "API for Verified Access chrome extension to provide credential verification for chrome devices connecting to an enterprise network",
  "revision": "20220215",
  "baseUrl": "https://verifiedaccess.googleapis.com/",
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "id": "verifiedaccess:v2",
  "fullyEncodeReservedExpansion": true,
  "rootUrl": "https://verifiedaccess.googleapis.com/",
  "canonicalName": "verifiedaccess",
  "version_module": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/verifiedaccess": {
          "description": "Verify your enterprise credentials"
        }
      }
    }
  },
  "version": "v2",
  "name": "verifiedaccess",
  "basePath": "",
  "protocol": "rest",
  "ownerName": "Google"
}

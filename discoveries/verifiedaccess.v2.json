{
  "fullyEncodeReservedExpansion": true,
  "baseUrl": "https://verifiedaccess.googleapis.com/",
  "discoveryVersion": "v1",
  "mtlsRootUrl": "https://verifiedaccess.mtls.googleapis.com/",
  "schemas": {
    "CrowdStrikeAgent": {
      "properties": {
        "customerId": {
          "type": "string",
          "description": "The Customer ID to which the agent belongs to."
        },
        "agentId": {
          "description": "The Agent ID of the Crowdstrike agent.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Properties of the CrowdStrike agent installed on a device.",
      "id": "CrowdStrikeAgent"
    },
    "Empty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "id": "Empty"
    },
    "VerifyChallengeResponseResult": {
      "id": "VerifyChallengeResponseResult",
      "type": "object",
      "properties": {
        "profileCustomerId": {
          "type": "string",
          "description": "Unique customer id that this profile belongs to, as defined by the Google Admin SDK at https://developers.google.com/admin-sdk/directory/v1/guides/manage-customers"
        },
        "signedPublicKeyAndChallenge": {
          "type": "string",
          "description": "Certificate Signing Request (in the SPKAC format, base64 encoded) is returned in this field. This field will be set only if device has included CSR in its challenge response. (the option to include CSR is now available for both user and machine responses)"
        },
        "profileKeyTrustLevel": {
          "enum": [
            "KEY_TRUST_LEVEL_UNSPECIFIED",
            "CHROME_OS_VERIFIED_MODE",
            "CHROME_OS_DEVELOPER_MODE",
            "CHROME_BROWSER_HW_KEY",
            "CHROME_BROWSER_OS_KEY",
            "CHROME_BROWSER_NO_KEY"
          ],
          "description": "Profile attested key trust level.",
          "enumDescriptions": [
            "UNSPECIFIED.",
            "ChromeOS device in verified mode.",
            "ChromeOS device in developer mode.",
            "Chrome Browser with the key stored in the device hardware.",
            "Chrome Browser with the key stored at OS level.",
            "Chrome Browser without an attestation key."
          ],
          "type": "string"
        },
        "deviceSignal": {
          "type": "string",
          "description": "Deprecated. Device signal in json string representation. Prefer using `device_signals` instead."
        },
        "deviceSignals": {
          "$ref": "DeviceSignals",
          "description": "Device signals."
        },
        "attestedDeviceId": {
          "type": "string",
          "description": "Attested device ID (ADID)."
        },
        "customerId": {
          "type": "string",
          "description": "Unique customer id that this device belongs to, as defined by the Google Admin SDK at https://developers.google.com/admin-sdk/directory/v1/guides/manage-customers"
        },
        "virtualDeviceId": {
          "description": "Virtual device id of the device. The definition of virtual device id is platform-specific.",
          "type": "string"
        },
        "keyTrustLevel": {
          "type": "string",
          "enum": [
            "KEY_TRUST_LEVEL_UNSPECIFIED",
            "CHROME_OS_VERIFIED_MODE",
            "CHROME_OS_DEVELOPER_MODE",
            "CHROME_BROWSER_HW_KEY",
            "CHROME_BROWSER_OS_KEY",
            "CHROME_BROWSER_NO_KEY"
          ],
          "description": "Device attested key trust level.",
          "enumDescriptions": [
            "UNSPECIFIED.",
            "ChromeOS device in verified mode.",
            "ChromeOS device in developer mode.",
            "Chrome Browser with the key stored in the device hardware.",
            "Chrome Browser with the key stored at OS level.",
            "Chrome Browser without an attestation key."
          ]
        },
        "devicePermanentId": {
          "description": "Device permanent id is returned in this field (for the machine response only).",
          "type": "string"
        },
        "virtualProfileId": {
          "description": "The ID of a profile on the device.",
          "type": "string"
        }
      },
      "description": "Result message for VerifiedAccess.VerifyChallengeResponse."
    },
    "Challenge": {
      "type": "object",
      "description": "Result message for VerifiedAccess.GenerateChallenge.",
      "properties": {
        "challenge": {
          "type": "string",
          "format": "byte",
          "description": "Generated challenge, the bytes representation of SignedData."
        }
      },
      "id": "Challenge"
    },
    "DeviceSignals": {
      "type": "object",
      "description": "The device signals as reported by Chrome. Unless otherwise specified, signals are available on all platforms.",
      "properties": {
        "screenLockSecured": {
          "description": "The state of the Screen Lock password protection. On ChromeOS, this value will always be ENABLED as there is not way to disable requiring a password or pin when unlocking the device.",
          "enumDescriptions": [
            "Unspecified.",
            "Chrome could not evaluate the state of the Screen Lock mechanism.",
            "The Screen Lock is not password-protected.",
            "The Screen Lock is password-protected."
          ],
          "enum": [
            "SCREEN_LOCK_SECURED_UNSPECIFIED",
            "SCREEN_LOCK_SECURED_UNKNOWN",
            "SCREEN_LOCK_SECURED_DISABLED",
            "SCREEN_LOCK_SECURED_ENABLED"
          ],
          "type": "string"
        },
        "systemDnsServers": {
          "type": "array",
          "description": "List of the addesses of all OS level DNS servers configured in the device's network settings.",
          "items": {
            "type": "string"
          }
        },
        "crowdStrikeAgent": {
          "description": "Crowdstrike agent properties installed on the device, if any. Available on Windows and MacOS only.",
          "$ref": "CrowdStrikeAgent"
        },
        "trigger": {
          "type": "string",
          "description": "The trigger which generated this set of signals.",
          "enumDescriptions": [
            "Unspecified.",
            "When navigating to an URL inside a browser.",
            "When signing into an account on the ChromeOS login screen."
          ],
          "enum": [
            "TRIGGER_UNSPECIFIED",
            "TRIGGER_BROWSER_NAVIGATION",
            "TRIGGER_LOGIN_SCREEN"
          ]
        },
        "browserVersion": {
          "type": "string",
          "description": "Current version of the Chrome browser which generated this set of signals. Example value: \"107.0.5286.0\"."
        },
        "deviceEnrollmentDomain": {
          "description": "Enrollment domain of the customer which is currently managing the device.",
          "type": "string"
        },
        "macAddresses": {
          "description": "MAC addresses of the device.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "operatingSystem": {
          "enumDescriptions": [
            "UNSPECIFIED.",
            "ChromeOS.",
            "ChromiumOS.",
            "Windows.",
            "Mac Os X.",
            "Linux"
          ],
          "description": "The type of the Operating System currently running on the device.",
          "type": "string",
          "enum": [
            "OPERATING_SYSTEM_UNSPECIFIED",
            "CHROME_OS",
            "CHROMIUM_OS",
            "WINDOWS",
            "MAC_OS_X",
            "LINUX"
          ]
        },
        "chromeRemoteDesktopAppBlocked": {
          "type": "boolean",
          "description": "Whether access to the Chrome Remote Desktop application is blocked via a policy."
        },
        "diskEncryption": {
          "description": "The encryption state of the disk. On ChromeOS, the main disk is always ENCRYPTED.",
          "enumDescriptions": [
            "Unspecified.",
            "Chrome could not evaluate the encryption state.",
            "The main disk is not encrypted.",
            "The main disk is encrypted."
          ],
          "enum": [
            "DISK_ENCRYPTION_UNSPECIFIED",
            "DISK_ENCRYPTION_UNKNOWN",
            "DISK_ENCRYPTION_DISABLED",
            "DISK_ENCRYPTION_ENCRYPTED"
          ],
          "type": "string"
        },
        "deviceAffiliationIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Affiliation IDs of the organizations that are affiliated with the organization that is currently managing the device. When the sets of device and profile affiliation IDs overlap, it means that the organizations managing the device and user are affiliated. To learn more about user affiliation, visit https://support.google.com/chrome/a/answer/12801245?ref_topic=9027936."
        },
        "allowScreenLock": {
          "type": "boolean",
          "description": "Value of the AllowScreenLock policy on the device. See https://chromeenterprise.google/policies/?policy=AllowScreenLock for more details. Available on ChromeOS only."
        },
        "siteIsolationEnabled": {
          "description": "Whether the Site Isolation (a.k.a Site Per Process) setting is enabled. That setting may be controlled by an enterprise policy: https://chromeenterprise.google/policies/#SitePerProcess",
          "type": "boolean"
        },
        "deviceManufacturer": {
          "type": "string",
          "description": "The name of the device's manufacturer."
        },
        "imei": {
          "description": "International Mobile Equipment Identity (IMEI) of the device. Available on ChromeOS only.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "osVersion": {
          "type": "string",
          "description": "The current version of the Operating System. On Windows and linux, the value will also include the security patch information."
        },
        "passwordProtectionWarningTrigger": {
          "description": "Whether the Password Protection Warning feature is enabled or not. Password protection alerts users when they reuse their protected password on potentially suspicious sites. This setting is controlled by an enterprise policy: https://chromeenterprise.google/policies/#PasswordProtectionWarningTrigger. Note that the policy unset does not have the same effects as having the policy explicitly set to `PASSWORD_PROTECTION_OFF`.",
          "enumDescriptions": [
            "Unspecified.",
            "The policy is not set.",
            "No password protection warning will be shown.",
            "Password protection warning is shown if a protected password is re-used.",
            "Password protection warning is shown if a protected password is re-used on a known phishing website."
          ],
          "enum": [
            "PASSWORD_PROTECTION_WARNING_TRIGGER_UNSPECIFIED",
            "POLICY_UNSET",
            "PASSWORD_PROTECTION_OFF",
            "PASSWORD_REUSE",
            "PHISHING_REUSE"
          ],
          "type": "string"
        },
        "thirdPartyBlockingEnabled": {
          "description": "Whether Chrome is blocking third-party software injection or not. This setting may be controlled by an enterprise policy: https://chromeenterprise.google/policies/?policy=ThirdPartyBlockingEnabled. Available on Windows only.",
          "type": "boolean"
        },
        "profileAffiliationIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Affiliation IDs of the organizations that are affiliated with the organization that is currently managing the Chrome Profile’s user or ChromeOS user."
        },
        "deviceModel": {
          "type": "string",
          "description": "The name of the device's model."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the device, as defined by the user."
        },
        "builtInDnsClientEnabled": {
          "type": "boolean",
          "description": "Whether Chrome's built-in DNS client is used. The OS DNS client is otherwise used. This value may be controlled by an enterprise policy: https://chromeenterprise.google/policies/#BuiltInDnsClientEnabled."
        },
        "windowsUserDomain": {
          "type": "string",
          "description": "Windows domain for the current OS user. Available on Windows only."
        },
        "osFirewall": {
          "enumDescriptions": [
            "Unspecified.",
            "Chrome could not evaluate the OS firewall state.",
            "The OS firewall is disabled.",
            "The OS firewall is enabled."
          ],
          "description": "The state of the OS level firewall. On ChromeOS, the value will always be ENABLED on regular devices and UNKNOWN on devices in developer mode.",
          "enum": [
            "OS_FIREWALL_UNSPECIFIED",
            "OS_FIREWALL_UNKNOWN",
            "OS_FIREWALL_DISABLED",
            "OS_FIREWALL_ENABLED"
          ],
          "type": "string"
        },
        "serialNumber": {
          "description": "The serial number of the device. On Windows, this represents the BIOS's serial number. Not available on most Linux distributions.",
          "type": "string"
        },
        "windowsMachineDomain": {
          "type": "string",
          "description": "Windows domain that the current machine has joined. Available on Windows only."
        },
        "realtimeUrlCheckMode": {
          "enum": [
            "REALTIME_URL_CHECK_MODE_UNSPECIFIED",
            "REALTIME_URL_CHECK_MODE_DISABLED",
            "REALTIME_URL_CHECK_MODE_ENABLED_MAIN_FRAME"
          ],
          "type": "string",
          "description": "Whether Enterprise-grade (i.e. custom) unsafe URL scanning is enabled or not. This setting may be controlled by an enterprise policy: https://chromeenterprise.google/policies/#EnterpriseRealTimeUrlCheckMode",
          "enumDescriptions": [
            "Unspecified.",
            "Disabled. Consumer Safe Browsing checks are applied.",
            "Realtime check for main frame URLs is enabled."
          ]
        },
        "secureBootMode": {
          "enum": [
            "SECURE_BOOT_MODE_UNSPECIFIED",
            "SECURE_BOOT_MODE_UNKNOWN",
            "SECURE_BOOT_MODE_DISABLED",
            "SECURE_BOOT_MODE_ENABLED"
          ],
          "type": "string",
          "description": "Whether the device's startup software has its Secure Boot feature enabled. Available on Windows only.",
          "enumDescriptions": [
            "Unspecified.",
            "Chrome was unable to determine the Secure Boot mode.",
            "Secure Boot was disabled on the startup software.",
            "Secure Boot was enabled on the startup software."
          ]
        },
        "safeBrowsingProtectionLevel": {
          "enumDescriptions": [
            "Unspecified.",
            "Safe Browsing is disabled.",
            "Safe Browsing is active in the standard mode.",
            "Safe Browsing is active in the enhanced mode."
          ],
          "enum": [
            "SAFE_BROWSING_PROTECTION_LEVEL_UNSPECIFIED",
            "INACTIVE",
            "STANDARD",
            "ENHANCED"
          ],
          "type": "string",
          "description": "Safe Browsing Protection Level. That setting may be controlled by an enterprise policy: https://chromeenterprise.google/policies/#SafeBrowsingProtectionLevel."
        },
        "meid": {
          "description": "Mobile Equipment Identifier (MEID) of the device. Available on ChromeOS only.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "hostname": {
          "type": "string",
          "description": "Hostname of the device."
        }
      },
      "id": "DeviceSignals"
    },
    "VerifyChallengeResponseRequest": {
      "properties": {
        "expectedIdentity": {
          "type": "string",
          "description": "Optional. Service can optionally provide identity information about the device or user associated with the key. For an EMK, this value is the enrolled domain. For an EUK, this value is the user's email address. If present, this value will be checked against contents of the response, and verification will fail if there is no match."
        },
        "challengeResponse": {
          "format": "byte",
          "description": "Required. The generated response to the challenge, the bytes representation of SignedData.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "VerifyChallengeResponseRequest",
      "description": "Signed ChallengeResponse."
    }
  },
  "ownerName": "Google",
  "version_module": true,
  "basePath": "",
  "kind": "discovery#restDescription",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "version": "v2",
  "description": "API for Verified Access chrome extension to provide credential verification for chrome devices connecting to an enterprise network",
  "documentationLink": "https://developers.google.com/chrome/verified-access",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/verifiedaccess": {
          "description": "Verify your enterprise credentials"
        }
      }
    }
  },
  "name": "verifiedaccess",
  "parameters": {
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    }
  },
  "title": "Chrome Verified Access API",
  "id": "verifiedaccess:v2",
  "resources": {
    "challenge": {
      "methods": {
        "generate": {
          "request": {
            "$ref": "Empty"
          },
          "httpMethod": "POST",
          "response": {
            "$ref": "Challenge"
          },
          "parameters": {},
          "id": "verifiedaccess.challenge.generate",
          "parameterOrder": [],
          "flatPath": "v2/challenge:generate",
          "path": "v2/challenge:generate",
          "scopes": [
            "https://www.googleapis.com/auth/verifiedaccess"
          ],
          "description": "Generates a new challenge."
        },
        "verify": {
          "scopes": [
            "https://www.googleapis.com/auth/verifiedaccess"
          ],
          "parameters": {},
          "request": {
            "$ref": "VerifyChallengeResponseRequest"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "response": {
            "$ref": "VerifyChallengeResponseResult"
          },
          "description": "Verifies the challenge response.",
          "path": "v2/challenge:verify",
          "id": "verifiedaccess.challenge.verify",
          "flatPath": "v2/challenge:verify"
        }
      }
    }
  },
  "revision": "20230718",
  "protocol": "rest",
  "batchPath": "batch",
  "rootUrl": "https://verifiedaccess.googleapis.com/",
  "canonicalName": "verifiedaccess",
  "servicePath": "",
  "ownerDomain": "google.com"
}

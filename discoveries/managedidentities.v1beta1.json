{
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "global": {
              "resources": {
                "operations": {
                  "methods": {
                    "cancel": {
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/global/operations/[^/]+$",
                          "location": "path",
                          "description": "The name of the operation resource to be cancelled.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/operations/{operationsId}:cancel",
                      "response": {
                        "$ref": "Empty"
                      },
                      "httpMethod": "POST",
                      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                      "id": "managedidentities.projects.locations.global.operations.cancel",
                      "request": {
                        "$ref": "CancelOperationRequest"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+name}:cancel"
                    },
                    "list": {
                      "path": "v1beta1/{+name}",
                      "id": "managedidentities.projects.locations.global.operations.list",
                      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "The standard list page token."
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "The standard list page size.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "The name of the operation's parent resource.",
                          "pattern": "^projects/[^/]+/locations/global/operations$"
                        },
                        "filter": {
                          "location": "query",
                          "description": "The standard list filter.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListOperationsResponse"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/operations",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET"
                    },
                    "get": {
                      "id": "managedidentities.projects.locations.global.operations.get",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/operations/{operationsId}",
                      "path": "v1beta1/{+name}",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "The name of the operation resource.",
                          "pattern": "^projects/[^/]+/locations/global/operations/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                      "httpMethod": "GET"
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/global/operations/[^/]+$",
                          "description": "The name of the operation resource to be deleted.",
                          "location": "path"
                        }
                      },
                      "path": "v1beta1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Empty"
                      },
                      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                      "httpMethod": "DELETE",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/operations/{operationsId}",
                      "id": "managedidentities.projects.locations.global.operations.delete"
                    }
                  }
                },
                "domains": {
                  "methods": {
                    "extendSchema": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "managedidentities.projects.locations.global.domains.extendSchema",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}:extendSchema",
                      "path": "v1beta1/{+domain}:extendSchema",
                      "parameterOrder": [
                        "domain"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Extend Schema for Domain",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "ExtendSchemaRequest"
                      },
                      "parameters": {
                        "domain": {
                          "description": "Required. The domain resource name using the form: `projects/{project_id}/locations/global/domains/{domain_name}`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                          "type": "string"
                        }
                      }
                    },
                    "enableMigration": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1beta1/{+domain}:enableMigration",
                      "description": "Enable Domain Migration",
                      "parameters": {
                        "domain": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The domain resource name using the form: `projects/{project_id}/locations/global/domains/{domain_name}`",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$"
                        }
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "domain"
                      ],
                      "id": "managedidentities.projects.locations.global.domains.enableMigration",
                      "request": {
                        "$ref": "EnableMigrationRequest"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}:enableMigration"
                    },
                    "detachTrust": {
                      "path": "v1beta1/{+name}:detachTrust",
                      "description": "Removes an AD trust.",
                      "request": {
                        "$ref": "DetachTrustRequest"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}:detachTrust",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                          "required": true,
                          "description": "Required. The resource domain name, project name, and location using the form: `projects/{project_id}/locations/global/domains/{domain_name}`",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "managedidentities.projects.locations.global.domains.detachTrust",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "description": "Lists domains in a project.",
                      "response": {
                        "$ref": "ListDomainsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. A filter specifying constraints of a list operation. For example, `Domain.fqdn=\"mydomain.myorginization\"`."
                        },
                        "pageToken": {
                          "description": "The `next_page_token` value returned from a previous ListDomainsRequest request, if any.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. The resource name of the domain location using the form: `projects/{project_id}/locations/global`",
                          "pattern": "^projects/[^/]+/locations/global$",
                          "type": "string",
                          "required": true
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Optional. The maximum number of items to return. If not specified, a default value of 1000 will be used. Regardless of the page_size value, the response may include a partial list. Callers should rely on a response's next_page_token to determine if there are additional results to list.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. Specifies the ordering of results. See [Sorting order](https://cloud.google.com/apis/design/design_patterns#sorting_order) for more information."
                        }
                      },
                      "path": "v1beta1/{+parent}/domains",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains",
                      "id": "managedidentities.projects.locations.global.domains.list",
                      "httpMethod": "GET"
                    },
                    "getLdapssettings": {
                      "id": "managedidentities.projects.locations.global.domains.getLdapssettings",
                      "path": "v1beta1/{+name}/ldapssettings",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}/ldapssettings",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The domain resource name using the form: `projects/{project_id}/locations/global/domains/{domain_name}`",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets the domain ldaps settings.",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "LDAPSSettings"
                      }
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Creates a Microsoft AD domain.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "domainName": {
                          "location": "query",
                          "description": "Required. A domain name, e.g. mydomain.myorg.com, with the following restrictions: * Must contain only lowercase letters, numbers, periods and hyphens. * Must start with a letter. * Must contain between 2-64 characters. * Must end with a number or a letter. * Must not start with period. * First segment length (mydomain form example above) shouldn't exceed 15 chars. * The last segment cannot be fully numeric. * Must be unique within the customer project.",
                          "type": "string"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/global$",
                          "description": "Required. The resource project name and location using the form: `projects/{project_id}/locations/global`",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "Domain"
                      },
                      "id": "managedidentities.projects.locations.global.domains.create",
                      "path": "v1beta1/{+parent}/domains"
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "path": "v1beta1/{+name}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                          "type": "string",
                          "description": "Required. The domain resource name using the form: `projects/{project_id}/locations/global/domains/{domain_name}`"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a domain.",
                      "id": "managedidentities.projects.locations.global.domains.delete",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "restore": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                          "description": "Required. resource name for the domain to which the backup belongs",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1beta1/{+name}:restore",
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "description": "RestoreBackup restores domain mentioned in the RestoreBackupRequest",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}:restore",
                      "id": "managedidentities.projects.locations.global.domains.restore",
                      "request": {
                        "$ref": "RestoreDomainRequest"
                      }
                    },
                    "resetAdminPassword": {
                      "description": "Resets a domain's administrator password.",
                      "path": "v1beta1/{+name}:resetAdminPassword",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}:resetAdminPassword",
                      "response": {
                        "$ref": "ResetAdminPasswordResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                          "description": "Required. The domain resource name using the form: `projects/{project_id}/locations/global/domains/{domain_name}`"
                        }
                      },
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "ResetAdminPasswordRequest"
                      },
                      "id": "managedidentities.projects.locations.global.domains.resetAdminPassword"
                    },
                    "domainJoinMachine": {
                      "id": "managedidentities.projects.locations.global.domains.domainJoinMachine",
                      "description": "DomainJoinMachine API joins a Compute Engine VM to the domain",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "domain"
                      ],
                      "parameters": {
                        "domain": {
                          "type": "string",
                          "description": "Required. The domain resource name using the form: projects/{project_id}/locations/global/domains/{domain_name}",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$"
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}:domainJoinMachine",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "DomainJoinMachineResponse"
                      },
                      "path": "v1beta1/{+domain}:domainJoinMachine",
                      "request": {
                        "$ref": "DomainJoinMachineRequest"
                      }
                    },
                    "checkMigrationPermission": {
                      "parameters": {
                        "domain": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The domain resource name using the form: `projects/{project_id}/locations/global/domains/{domain_name}`",
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                          "location": "path"
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}:checkMigrationPermission",
                      "request": {
                        "$ref": "CheckMigrationPermissionRequest"
                      },
                      "response": {
                        "$ref": "CheckMigrationPermissionResponse"
                      },
                      "id": "managedidentities.projects.locations.global.domains.checkMigrationPermission",
                      "description": "CheckMigrationPermission API gets the current state of DomainMigration",
                      "path": "v1beta1/{+domain}:checkMigrationPermission",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "domain"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "setIamPolicy": {
                      "response": {
                        "$ref": "Policy"
                      },
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$"
                        }
                      },
                      "path": "v1beta1/{+resource}:setIamPolicy",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "resource"
                      ],
                      "id": "managedidentities.projects.locations.global.domains.setIamPolicy",
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}:setIamPolicy"
                    },
                    "getIamPolicy": {
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "location": "path"
                        },
                        "options.requestedPolicyVersion": {
                          "type": "integer",
                          "location": "query",
                          "format": "int32",
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                        }
                      },
                      "httpMethod": "GET",
                      "id": "managedidentities.projects.locations.global.domains.getIamPolicy",
                      "path": "v1beta1/{+resource}:getIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "response": {
                        "$ref": "Policy"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}:getIamPolicy"
                    },
                    "patch": {
                      "httpMethod": "PATCH",
                      "parameters": {
                        "updateMask": {
                          "format": "google-fieldmask",
                          "description": "Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include fields from Domain: * `labels` * `locations` * `authorized_networks` * `audit_logs_enabled`",
                          "type": "string",
                          "location": "query"
                        },
                        "name": {
                          "description": "Output only. The unique name of the domain using the form: `projects/{project_id}/locations/global/domains/{domain_name}`.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}",
                      "id": "managedidentities.projects.locations.global.domains.patch",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1beta1/{+name}",
                      "request": {
                        "$ref": "Domain"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates the metadata and configuration of a domain."
                    },
                    "get": {
                      "httpMethod": "GET",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}",
                      "path": "v1beta1/{+name}",
                      "description": "Gets information about a domain.",
                      "id": "managedidentities.projects.locations.global.domains.get",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The domain resource name using the form: `projects/{project_id}/locations/global/domains/{domain_name}`",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Domain"
                      }
                    },
                    "attachTrust": {
                      "path": "v1beta1/{+name}:attachTrust",
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Adds an AD trust to a domain.",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}:attachTrust",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "POST",
                      "id": "managedidentities.projects.locations.global.domains.attachTrust",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. The resource domain name, project name and location using the form: `projects/{project_id}/locations/global/domains/{domain_name}`"
                        }
                      },
                      "request": {
                        "$ref": "AttachTrustRequest"
                      }
                    },
                    "updateLdapssettings": {
                      "parameters": {
                        "updateMask": {
                          "type": "string",
                          "format": "google-fieldmask",
                          "location": "query",
                          "description": "Required. Mask of fields to update. At least one path must be supplied in this field. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask"
                        },
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                          "description": "The resource name of the LDAPS settings. Uses the form: `projects/{project}/locations/{location}/domains/{domain}`.",
                          "location": "path"
                        }
                      },
                      "description": "Patches a single ldaps settings.",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}/ldapssettings",
                      "id": "managedidentities.projects.locations.global.domains.updateLdapssettings",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1beta1/{+name}/ldapssettings",
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "LDAPSSettings"
                      },
                      "httpMethod": "PATCH"
                    },
                    "testIamPermissions": {
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "id": "managedidentities.projects.locations.global.domains.testIamPermissions",
                      "path": "v1beta1/{+resource}:testIamPermissions",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}:testIamPermissions"
                    },
                    "validateTrust": {
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                          "description": "Required. The resource domain name, project name, and location using the form: `projects/{project_id}/locations/global/domains/{domain_name}`",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "path": "v1beta1/{+name}:validateTrust",
                      "description": "Validates a trust state, that the target domain is reachable, and that the target domain is able to accept incoming trust requests.",
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "ValidateTrustRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}:validateTrust",
                      "id": "managedidentities.projects.locations.global.domains.validateTrust"
                    },
                    "reconfigureTrust": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The resource domain name, project name and location using the form: `projects/{project_id}/locations/global/domains/{domain_name}`",
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                          "type": "string"
                        }
                      },
                      "description": "Updates the DNS conditional forwarder.",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "ReconfigureTrustRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "managedidentities.projects.locations.global.domains.reconfigureTrust",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}:reconfigureTrust",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1beta1/{+name}:reconfigureTrust"
                    },
                    "disableMigration": {
                      "description": "Disable Domain Migration",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "DisableMigrationRequest"
                      },
                      "parameterOrder": [
                        "domain"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}:disableMigration",
                      "path": "v1beta1/{+domain}:disableMigration",
                      "parameters": {
                        "domain": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. The domain resource name using the form: `projects/{project_id}/locations/global/domains/{domain_name}`"
                        }
                      },
                      "id": "managedidentities.projects.locations.global.domains.disableMigration"
                    }
                  },
                  "resources": {
                    "sqlIntegrations": {
                      "methods": {
                        "get": {
                          "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}/sqlIntegrations/{sqlIntegrationsId}",
                          "path": "v1beta1/{+name}",
                          "httpMethod": "GET",
                          "id": "managedidentities.projects.locations.global.domains.sqlIntegrations.get",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "SqlIntegration"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/global/domains/[^/]+/sqlIntegrations/[^/]+$",
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "description": "Required. SqlIntegration resource name using the form: `projects/{project_id}/locations/global/domains/*/sqlIntegrations/{name}`"
                            }
                          },
                          "description": "Gets details of a single sqlIntegration."
                        },
                        "list": {
                          "path": "v1beta1/{+parent}/sqlIntegrations",
                          "httpMethod": "GET",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}/sqlIntegrations",
                          "description": "Lists SqlIntegrations in a given domain.",
                          "id": "managedidentities.projects.locations.global.domains.sqlIntegrations.list",
                          "parameterOrder": [
                            "parent"
                          ],
                          "parameters": {
                            "pageSize": {
                              "location": "query",
                              "format": "int32",
                              "description": "Optional. The maximum number of items to return. If not specified, a default value of 1000 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response'ANIZATIONs next_page_token to determine if there are more instances left to be queried.",
                              "type": "integer"
                            },
                            "parent": {
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                              "description": "Required. The resource name of the SqlIntegrations using the form: `projects/{project_id}/locations/global/domains/*`",
                              "location": "path"
                            },
                            "pageToken": {
                              "description": "Optional. The next_page_token value returned from a previous List request, if any.",
                              "type": "string",
                              "location": "query"
                            },
                            "orderBy": {
                              "description": "Optional. Specifies the ordering of results following syntax at https://cloud.google.com/apis/design/design_patterns#sorting_order.",
                              "type": "string",
                              "location": "query"
                            },
                            "filter": {
                              "type": "string",
                              "location": "query",
                              "description": "Optional. Filter specifying constraints of a list operation. For example, `SqlIntegration.name=\"sql\"`."
                            }
                          },
                          "response": {
                            "$ref": "ListSqlIntegrationsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        }
                      }
                    },
                    "backups": {
                      "methods": {
                        "testIamPermissions": {
                          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "TestIamPermissionsResponse"
                          },
                          "request": {
                            "$ref": "TestIamPermissionsRequest"
                          },
                          "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}/backups/{backupsId}:testIamPermissions",
                          "httpMethod": "POST",
                          "path": "v1beta1/{+resource}:testIamPermissions",
                          "id": "managedidentities.projects.locations.global.domains.backups.testIamPermissions",
                          "parameters": {
                            "resource": {
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/global/domains/[^/]+/backups/[^/]+$",
                              "required": true,
                              "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                            }
                          },
                          "parameterOrder": [
                            "resource"
                          ]
                        },
                        "getIamPolicy": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                          "response": {
                            "$ref": "Policy"
                          },
                          "id": "managedidentities.projects.locations.global.domains.backups.getIamPolicy",
                          "path": "v1beta1/{+resource}:getIamPolicy",
                          "httpMethod": "GET",
                          "parameters": {
                            "options.requestedPolicyVersion": {
                              "format": "int32",
                              "location": "query",
                              "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                              "type": "integer"
                            },
                            "resource": {
                              "location": "path",
                              "required": true,
                              "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/global/domains/[^/]+/backups/[^/]+$"
                            }
                          },
                          "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}/backups/{backupsId}:getIamPolicy",
                          "parameterOrder": [
                            "resource"
                          ]
                        },
                        "list": {
                          "parameters": {
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "Optional. The next_page_token value returned from a previous List request, if any."
                            },
                            "parent": {
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                              "required": true,
                              "description": "Required. The domain resource name using the form: `projects/{project_id}/locations/global/domains/{domain_name}`"
                            },
                            "filter": {
                              "type": "string",
                              "location": "query",
                              "description": "Optional. Filter specifying constraints of a list operation."
                            },
                            "orderBy": {
                              "type": "string",
                              "location": "query",
                              "description": "Optional. Specifies the ordering of results following syntax at https://cloud.google.com/apis/design/design_patterns#sorting_order."
                            },
                            "pageSize": {
                              "format": "int32",
                              "description": "Optional. The maximum number of items to return. If not specified, a default value of 1000 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.",
                              "type": "integer",
                              "location": "query"
                            }
                          },
                          "description": "Lists Backup in a given project.",
                          "id": "managedidentities.projects.locations.global.domains.backups.list",
                          "httpMethod": "GET",
                          "path": "v1beta1/{+parent}/backups",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}/backups",
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "ListBackupsResponse"
                          }
                        },
                        "create": {
                          "id": "managedidentities.projects.locations.global.domains.backups.create",
                          "parameters": {
                            "backupId": {
                              "location": "query",
                              "description": "Required. Backup Id, unique name to identify the backups with the following restrictions: * Must be lowercase letters, numbers, and hyphens * Must start with a letter. * Must contain between 1-63 characters. * Must end with a number or a letter. * Must be unique within the domain.",
                              "type": "string"
                            },
                            "parent": {
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/global/domains/[^/]+$",
                              "description": "Required. The domain resource name using the form: `projects/{project_id}/locations/global/domains/{domain_name}`",
                              "required": true
                            }
                          },
                          "httpMethod": "POST",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}/backups",
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "Creates a Backup for a domain.",
                          "request": {
                            "$ref": "Backup"
                          },
                          "response": {
                            "$ref": "Operation"
                          },
                          "path": "v1beta1/{+parent}/backups"
                        },
                        "setIamPolicy": {
                          "parameterOrder": [
                            "resource"
                          ],
                          "response": {
                            "$ref": "Policy"
                          },
                          "parameters": {
                            "resource": {
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/global/domains/[^/]+/backups/[^/]+$",
                              "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                            }
                          },
                          "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                          "request": {
                            "$ref": "SetIamPolicyRequest"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1beta1/{+resource}:setIamPolicy",
                          "httpMethod": "POST",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}/backups/{backupsId}:setIamPolicy",
                          "id": "managedidentities.projects.locations.global.domains.backups.setIamPolicy"
                        },
                        "delete": {
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/global/domains/[^/]+/backups/[^/]+$",
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "description": "Required. The backup resource name using the form: `projects/{project_id}/locations/global/domains/{domain_name}/backups/{backup_id}`"
                            }
                          },
                          "id": "managedidentities.projects.locations.global.domains.backups.delete",
                          "description": "Deletes identified Backup.",
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Operation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "DELETE",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}/backups/{backupsId}",
                          "path": "v1beta1/{+name}"
                        },
                        "patch": {
                          "parameters": {
                            "name": {
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/global/domains/[^/]+/backups/[^/]+$",
                              "description": "Output only. The unique name of the Backup in the form of projects/{project_id}/locations/global/domains/{domain_name}/backups/{name}",
                              "required": true
                            },
                            "updateMask": {
                              "type": "string",
                              "description": "Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include these fields from Backup: * `labels`",
                              "format": "google-fieldmask",
                              "location": "query"
                            }
                          },
                          "response": {
                            "$ref": "Operation"
                          },
                          "path": "v1beta1/{+name}",
                          "httpMethod": "PATCH",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}/backups/{backupsId}",
                          "description": "Updates the labels for specified Backup.",
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "Backup"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "managedidentities.projects.locations.global.domains.backups.patch"
                        },
                        "get": {
                          "response": {
                            "$ref": "Backup"
                          },
                          "flatPath": "v1beta1/projects/{projectsId}/locations/global/domains/{domainsId}/backups/{backupsId}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1beta1/{+name}",
                          "parameters": {
                            "name": {
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "description": "Required. The backup resource name using the form: `projects/{project_id}/locations/global/domains/{domain_name}/backups/{backup_id}`",
                              "pattern": "^projects/[^/]+/locations/global/domains/[^/]+/backups/[^/]+$"
                            }
                          },
                          "description": "Gets details of a single Backup.",
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "managedidentities.projects.locations.global.domains.backups.get"
                        }
                      }
                    }
                  }
                },
                "peerings": {
                  "methods": {
                    "get": {
                      "path": "v1beta1/{+name}",
                      "parameters": {
                        "name": {
                          "description": "Required. Peering resource name using the form: `projects/{project_id}/locations/global/peerings/{peering_id}`",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/global/peerings/[^/]+$",
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "id": "managedidentities.projects.locations.global.peerings.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Peering"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/peerings/{peeringsId}",
                      "description": "Gets details of a single Peering."
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes identified Peering.",
                      "id": "managedidentities.projects.locations.global.peerings.delete",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/global/peerings/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. Peering resource name using the form: `projects/{project_id}/locations/global/peerings/{peering_id}`"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/peerings/{peeringsId}",
                      "path": "v1beta1/{+name}"
                    },
                    "getIamPolicy": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/peerings/{peeringsId}:getIamPolicy",
                      "httpMethod": "GET",
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "type": "integer",
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "location": "query",
                          "format": "int32"
                        },
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/global/peerings/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "id": "managedidentities.projects.locations.global.peerings.getIamPolicy",
                      "path": "v1beta1/{+resource}:getIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      },
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                    },
                    "setIamPolicy": {
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/peerings/{peeringsId}:setIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "resource"
                      ],
                      "path": "v1beta1/{+resource}:setIamPolicy",
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/global/peerings/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "id": "managedidentities.projects.locations.global.peerings.setIamPolicy"
                    },
                    "patch": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/global/peerings/[^/]+$",
                          "description": "Output only. Unique name of the peering in this scope including projects and location using the form: `projects/{project_id}/locations/global/peerings/{peering_id}`."
                        },
                        "updateMask": {
                          "description": "Required. Mask of fields to update. At least one path must be supplied in this field. The elements of the repeated paths field may only include these fields from Peering: * `labels`",
                          "type": "string",
                          "format": "google-fieldmask",
                          "location": "query"
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/peerings/{peeringsId}",
                      "request": {
                        "$ref": "Peering"
                      },
                      "description": "Updates the labels for specified Peering.",
                      "id": "managedidentities.projects.locations.global.peerings.patch",
                      "path": "v1beta1/{+name}",
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "testIamPermissions": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "id": "managedidentities.projects.locations.global.peerings.testIamPermissions",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/peerings/{peeringsId}:testIamPermissions",
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/global/peerings/[^/]+$",
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "location": "path",
                          "required": true
                        }
                      },
                      "path": "v1beta1/{+resource}:testIamPermissions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      }
                    },
                    "create": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/peerings",
                      "description": "Creates a Peering for Managed AD instance.",
                      "request": {
                        "$ref": "Peering"
                      },
                      "parameters": {
                        "peeringId": {
                          "description": "Required. Peering Id, unique name to identify peering.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/global$",
                          "location": "path",
                          "description": "Required. Resource project name and location using the form: `projects/{project_id}/locations/global`"
                        }
                      },
                      "path": "v1beta1/{+parent}/peerings",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "id": "managedidentities.projects.locations.global.peerings.create"
                    },
                    "list": {
                      "flatPath": "v1beta1/projects/{projectsId}/locations/global/peerings",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "id": "managedidentities.projects.locations.global.peerings.list",
                      "path": "v1beta1/{+parent}/peerings",
                      "description": "Lists Peerings in a given project.",
                      "response": {
                        "$ref": "ListPeeringsResponse"
                      },
                      "parameters": {
                        "filter": {
                          "location": "query",
                          "description": "Optional. Filter specifying constraints of a list operation. For example, `peering.authoized_network =\"/projects/myprojectid\"`.",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/global$",
                          "description": "Required. The resource name of the domain location using the form: `projects/{project_id}/locations/global`",
                          "required": true,
                          "location": "path"
                        },
                        "orderBy": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Specifies the ordering of results following syntax at https://cloud.google.com/apis/design/design_patterns#sorting_order."
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of items to return. If not specified, a default value of 1000 will be used by the service. Regardless of the page_size value, the response may include a partial list and a caller should only rely on response's next_page_token to determine if there are more instances left to be queried.",
                          "type": "integer",
                          "location": "query",
                          "format": "int32"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Optional. The next_page_token value returned from a previous List request, if any.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location.",
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}",
              "id": "managedidentities.projects.locations.get",
              "path": "v1beta1/{+name}",
              "httpMethod": "GET",
              "response": {
                "$ref": "Location"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "description": "Resource name for the location."
                }
              },
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "path": "v1beta1/{+name}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "flatPath": "v1beta1/projects/{projectsId}/locations",
              "id": "managedidentities.projects.locations.list",
              "response": {
                "$ref": "ListLocationsResponse"
              }
            }
          }
        }
      }
    }
  },
  "description": "The Managed Service for Microsoft Active Directory API is used for managing a highly available, hardened service running Microsoft Active Directory (AD).",
  "mtlsRootUrl": "https://managedidentities.mtls.googleapis.com/",
  "servicePath": "",
  "canonicalName": "Managed Service for Microsoft Active Directory Consumer API",
  "documentationLink": "https://cloud.google.com/managed-microsoft-ad/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "name": "managedidentities",
  "rootUrl": "https://managedidentities.googleapis.com/",
  "revision": "20230705",
  "title": "Managed Service for Microsoft Active Directory API",
  "basePath": "",
  "version": "v1beta1",
  "version_module": true,
  "ownerDomain": "google.com",
  "baseUrl": "https://managedidentities.googleapis.com/",
  "protocol": "rest",
  "discoveryVersion": "v1",
  "schemas": {
    "WeeklyCycle": {
      "properties": {
        "schedule": {
          "type": "array",
          "description": "User can specify multiple windows in a week. Minimum of 1 window.",
          "items": {
            "$ref": "Schedule"
          }
        }
      },
      "id": "WeeklyCycle",
      "description": "Time window specified for weekly operations.",
      "type": "object"
    },
    "Location": {
      "description": "A resource that represents a Google Cloud location.",
      "properties": {
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        }
      },
      "type": "object",
      "id": "Location"
    },
    "Trust": {
      "description": "Represents a relationship between two domains. This allows a controller in one domain to authenticate a user in another domain.",
      "properties": {
        "trustType": {
          "type": "string",
          "enum": [
            "TRUST_TYPE_UNSPECIFIED",
            "FOREST",
            "EXTERNAL"
          ],
          "description": "The type of trust represented by the trust resource.",
          "enumDescriptions": [
            "Not set.",
            "The forest trust.",
            "The external domain trust."
          ]
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The last update time."
        },
        "targetDnsIpAddresses": {
          "description": "The target DNS server IP addresses which can resolve the remote domain involved in the trust.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the instance was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "lastTrustHeartbeatTime": {
          "readOnly": true,
          "description": "Output only. The last heartbeat time when the trust was known to be connected.",
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "DELETING",
            "CONNECTED",
            "DISCONNECTED"
          ],
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "The domain trust is being created.",
            "The domain trust is being updated.",
            "The domain trust is being deleted.",
            "The domain trust is connected.",
            "The domain trust is disconnected."
          ],
          "description": "Output only. The current state of the trust."
        },
        "trustHandshakeSecret": {
          "description": "Input only. The trust secret used for the handshake with the target domain. It will not be stored.",
          "type": "string"
        },
        "stateDescription": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Additional information about the current state of the trust, if available."
        },
        "selectiveAuthentication": {
          "description": "The trust authentication type, which decides whether the trusted side has forest/domain wide access or selective access to an approved set of resources.",
          "type": "boolean"
        },
        "targetDomainName": {
          "type": "string",
          "description": "The fully qualified target domain name which will be in trust with the current domain."
        },
        "trustDirection": {
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "The inbound direction represents the trusting side.",
            "The outboud direction represents the trusted side.",
            "The bidirectional direction represents the trusted / trusting side."
          ],
          "enum": [
            "TRUST_DIRECTION_UNSPECIFIED",
            "INBOUND",
            "OUTBOUND",
            "BIDIRECTIONAL"
          ],
          "description": "The trust direction, which decides if the current domain is trusted, trusting, or both."
        }
      },
      "type": "object",
      "id": "Trust"
    },
    "GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata": {
      "id": "GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata",
      "type": "object",
      "description": "SloMetadata contains resources required for proper SLO classification of the instance.",
      "properties": {
        "perSliEligibility": {
          "description": "Optional. Multiple per-instance SLI eligibilities which apply for individual SLIs.",
          "$ref": "GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility"
        },
        "tier": {
          "description": "Name of the SLO tier the Instance belongs to. This name will be expected to match the tiers specified in the service SLO configuration. Field is mandatory and must not be empty.",
          "type": "string"
        },
        "nodes": {
          "items": {
            "$ref": "GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata"
          },
          "type": "array",
          "description": "Optional. List of nodes. Some producers need to use per-node metadata to calculate SLO. This field allows such producers to publish per-node SLO meta data, which will be consumed by SSA Eligibility Exporter and published in the form of per node metric to Monarch."
        }
      }
    },
    "ListBackupsResponse": {
      "type": "object",
      "id": "ListBackupsResponse",
      "properties": {
        "backups": {
          "items": {
            "$ref": "Backup"
          },
          "type": "array",
          "description": "A list of Cloud AD backups in the domain."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "ListBackupsResponse is the response message for ListBackups method."
    },
    "OnPremDomainDetails": {
      "id": "OnPremDomainDetails",
      "properties": {
        "domainName": {
          "type": "string",
          "description": "Required. FQDN of the on-prem domain being migrated."
        },
        "disableSidFiltering": {
          "type": "boolean",
          "description": "Optional. Option to disable SID filtering."
        }
      },
      "type": "object",
      "description": "OnPremDomainDetails is the message which contains details of on-prem domain which is trusted and needs to be migrated."
    },
    "DisableMigrationRequest": {
      "properties": {},
      "id": "DisableMigrationRequest",
      "description": "DisableMigrationRequest is the request message for DisableMigration method.",
      "type": "object"
    },
    "ListPeeringsResponse": {
      "id": "ListPeeringsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "peerings": {
          "type": "array",
          "description": "A list of Managed Identities Service Peerings in the project.",
          "items": {
            "$ref": "Peering"
          }
        }
      },
      "type": "object",
      "description": "ListPeeringsResponse is the response message for ListPeerings method."
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "Status"
    },
    "AttachTrustRequest": {
      "description": "Request message for AttachTrust",
      "type": "object",
      "properties": {
        "trust": {
          "description": "Required. The domain trust resource.",
          "$ref": "Trust"
        }
      },
      "id": "AttachTrustRequest"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "type": "object",
      "id": "Empty"
    },
    "Certificate": {
      "properties": {
        "subject": {
          "description": "The certificate subject.",
          "type": "string"
        },
        "expireTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The certificate expire time."
        },
        "subjectAlternativeName": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The additional hostnames for the domain."
        },
        "issuingCertificate": {
          "description": "The issuer of this certificate.",
          "$ref": "Certificate"
        },
        "thumbprint": {
          "description": "The certificate thumbprint which uniquely identifies the certificate.",
          "type": "string"
        }
      },
      "description": "Certificate used to configure LDAPS.",
      "type": "object",
      "id": "Certificate"
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        }
      },
      "id": "Expr"
    },
    "Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "id": "Policy",
      "properties": {
        "etag": {
          "type": "string",
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        },
        "version": {
          "format": "int32",
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "items": {
            "$ref": "Binding"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TimeOfDay": {
      "properties": {
        "hours": {
          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "format": "int32",
          "type": "integer"
        },
        "seconds": {
          "format": "int32",
          "type": "integer",
          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
        },
        "minutes": {
          "type": "integer",
          "description": "Minutes of hour of day. Must be from 0 to 59.",
          "format": "int32"
        },
        "nanos": {
          "type": "integer",
          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
          "format": "int32"
        }
      },
      "description": "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
      "id": "TimeOfDay",
      "type": "object"
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "type": "object",
      "id": "CancelOperationRequest"
    },
    "ExtendSchemaRequest": {
      "id": "ExtendSchemaRequest",
      "type": "object",
      "properties": {
        "description": {
          "description": "Required. Description for Schema Change.",
          "type": "string"
        },
        "gcsPath": {
          "description": "File stored in Cloud Storage bucket and represented in the form projects/{project_id}/buckets/{bucket_name}/objects/{object_name} File should be in the same project as the domain.",
          "type": "string"
        },
        "fileContents": {
          "description": "File uploaded as a byte stream input.",
          "format": "byte",
          "type": "string"
        }
      },
      "description": "ExtendSchemaRequest is the request message for ExtendSchema method."
    },
    "DomainJoinMachineResponse": {
      "id": "DomainJoinMachineResponse",
      "description": "DomainJoinMachineResponse is the response message for DomainJoinMachine method",
      "properties": {
        "domainJoinBlob": {
          "type": "string",
          "description": "The response is the offline domain join blob that is returned after running the djoin command. To correctly use the response of the API, please refer to the sample usage."
        }
      },
      "type": "object"
    },
    "GoogleCloudSaasacceleratorManagementProvidersV1Instance": {
      "description": "Instance represents the interface for SLM services to actuate the state of control plane resources. Example Instance in JSON, where consumer-project-number=123456, producer-project-id=cloud-sql: ```json Instance: { \"name\": \"projects/123456/locations/us-east1/instances/prod-instance\", \"create_time\": { \"seconds\": 1526406431, }, \"labels\": { \"env\": \"prod\", \"foo\": \"bar\" }, \"state\": READY, \"software_versions\": { \"software_update\": \"cloud-sql-09-28-2018\", }, \"maintenance_policy_names\": { \"UpdatePolicy\": \"projects/123456/locations/us-east1/maintenancePolicies/prod-update-policy\", } \"tenant_project_id\": \"cloud-sql-test-tenant\", \"producer_metadata\": { \"cloud-sql-tier\": \"basic\", \"cloud-sql-instance-size\": \"1G\", }, \"provisioned_resources\": [ { \"resource-type\": \"compute-instance\", \"resource-url\": \"https://www.googleapis.com/compute/v1/projects/cloud-sql/zones/us-east1-b/instances/vm-1\", } ], \"maintenance_schedules\": { \"csa_rollout\": { \"start_time\": { \"seconds\": 1526406431, }, \"end_time\": { \"seconds\": 1535406431, }, }, \"ncsa_rollout\": { \"start_time\": { \"seconds\": 1526406431, }, \"end_time\": { \"seconds\": 1535406431, }, } }, \"consumer_defined_name\": \"my-sql-instance1\", } ``` LINT.IfChange",
      "id": "GoogleCloudSaasacceleratorManagementProvidersV1Instance",
      "type": "object",
      "properties": {
        "maintenanceSchedules": {
          "additionalProperties": {
            "$ref": "GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule"
          },
          "type": "object",
          "description": "The MaintenanceSchedule contains the scheduling information of published maintenance schedule with same key as software_versions."
        },
        "sloMetadata": {
          "readOnly": true,
          "description": "Output only. SLO metadata for instance classification in the Standardized dataplane SLO platform. See go/cloud-ssa-standard-slo for feature description.",
          "$ref": "GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Timestamp when the resource was last modified."
        },
        "instanceType": {
          "description": "Optional. The instance_type of this instance of format: projects/{project_number}/locations/{location_id}/instanceTypes/{instance_type_id}. Instance Type represents a high-level tier or SKU of the service that this instance belong to. When enabled(eg: Maintenance Rollout), Rollout uses 'instance_type' along with 'software_versions' to determine whether instance needs an update or not.",
          "type": "string"
        },
        "maintenanceSettings": {
          "$ref": "GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings",
          "description": "Optional. The MaintenanceSettings associated with instance."
        },
        "name": {
          "description": "Unique name of the resource. It uses the form: `projects/{project_number}/locations/{location_id}/instances/{instance_id}` Note: This name is passed, stored and logged across the rollout system. So use of consumer project_id or any other consumer PII in the name is strongly discouraged for wipeout (go/wipeout) compliance. See go/elysium/project_ids#storage-guidance for more details.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Timestamp when the resource was created.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "maintenancePolicyNames": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the referenced policy must define the same policy type. For details, please refer to go/cloud-saas-mw-ug. Should not be set if maintenance_settings.maintenance_policies is set."
        },
        "softwareVersions": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Software versions that are used to deploy this instance. This can be mutated by rollout services.",
          "type": "object"
        },
        "provisionedResources": {
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource"
          },
          "description": "Output only. The list of data plane resources provisioned for this instance, e.g. compute VMs. See go/get-instance-metadata.",
          "type": "array"
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "UPDATING",
            "REPAIRING",
            "DELETING",
            "ERROR"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Instance is being created.",
            "Instance has been created and is ready to use.",
            "Instance is being updated.",
            "Instance is unheathy and under repair.",
            "Instance is being deleted.",
            "Instance encountered an error and is in indeterministic state."
          ],
          "description": "Output only. Current lifecycle state of the resource (e.g. if it's being created or ready to use)."
        },
        "slmInstanceTemplate": {
          "type": "string",
          "description": "Link to the SLM instance template. Only populated when updating SLM instances via SSA's Actuation service adaptor. Service producers with custom control plane (e.g. Cloud SQL) doesn't need to populate this field. Instead they should use software_versions."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user.",
          "type": "object"
        },
        "consumerDefinedName": {
          "description": "consumer_defined_name is the name of the instance set by the service consumers. Generally this is different from the `name` field which reperesents the system-assigned id of the instance which the service consumers do not recognize. This is a required field for tenants onboarding to Maintenance Window notifications (go/slm-rollout-maintenance-policies#prerequisites).",
          "type": "string"
        },
        "tenantProjectId": {
          "description": "Output only. ID of the associated GCP tenant project. See go/get-instance-metadata.",
          "readOnly": true,
          "type": "string"
        },
        "producerMetadata": {
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Output only. Custom string attributes used primarily to expose producer-specific information in monitoring dashboards. See go/get-instance-metadata.",
          "type": "object"
        },
        "notificationParameters": {
          "additionalProperties": {
            "$ref": "GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter"
          },
          "description": "Optional. notification_parameter are information that service producers may like to include that is not relevant to Rollout. This parameter will only be passed to Gamma and Cloud Logging for notification/logging purpose.",
          "type": "object"
        }
      }
    },
    "Date": {
      "type": "object",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "properties": {
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
        },
        "day": {
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer"
        },
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
        }
      },
      "id": "Date"
    },
    "SqlIntegration": {
      "description": "Represents the Sql instance integrated with AD.",
      "id": "SqlIntegration",
      "type": "object",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. The time sql integration was updated.",
          "format": "google-datetime",
          "readOnly": true
        },
        "state": {
          "enumDescriptions": [
            "Not Set",
            "The sqlIntegration is being created.",
            "The sqlIntegration is being deleted.",
            "The sqlIntegration is ready."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "DELETING",
            "READY"
          ],
          "description": "Output only. The current state of the sql integration."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time sql integration was created.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The unique name of the sql integration in the form of `projects/{project_id}/locations/global/domains/{domain_name}/sqlIntegrations/{sql_integration}`",
          "type": "string"
        },
        "sqlInstance": {
          "description": "The full resource name of an integrated sql instance",
          "type": "string"
        }
      }
    },
    "Binding": {
      "properties": {
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        },
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        }
      },
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object",
      "id": "Binding"
    },
    "GoogleCloudManagedidentitiesV1OpMetadata": {
      "properties": {
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "type": "string"
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        },
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. API version used to start the operation."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "id": "GoogleCloudManagedidentitiesV1OpMetadata"
    },
    "Operation": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      },
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "OnPremDomainSIDDetails": {
      "id": "OnPremDomainSIDDetails",
      "description": "OnPremDomainDetails is the message which contains details of on-prem domain which is trusted and needs to be migrated.",
      "properties": {
        "sidFilteringState": {
          "enum": [
            "SID_FILTERING_STATE_UNSPECIFIED",
            "ENABLED",
            "DISABLED"
          ],
          "enumDescriptions": [
            "SID Filtering is in unspecified state.",
            "SID Filtering is Enabled.",
            "SID Filtering is Disabled."
          ],
          "description": "Current SID filtering state.",
          "type": "string"
        },
        "name": {
          "description": "FQDN of the on-prem domain being migrated.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudManagedidentitiesV1beta1OpMetadata": {
      "properties": {
        "apiVersion": {
          "readOnly": true,
          "description": "Output only. API version used to start the operation.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime"
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "requestedCancellation": {
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true
        },
        "verb": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation."
        }
      },
      "id": "GoogleCloudManagedidentitiesV1beta1OpMetadata",
      "type": "object",
      "description": "Represents the metadata of the long-running operation."
    },
    "Backup": {
      "id": "Backup",
      "type": "object",
      "description": "Represents a Managed Microsoft Identities backup.",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Output only. The time the backups was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "FAILED",
            "DELETING"
          ],
          "description": "Output only. The current state of the backup.",
          "readOnly": true,
          "enumDescriptions": [
            "Not set.",
            "Backup is being created.",
            "Backup has been created and validated.",
            "Backup has been created but failed validation.",
            "Backup is being deleted."
          ],
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Last update time.",
          "format": "google-datetime"
        },
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "ON_DEMAND",
            "SCHEDULED",
            "SCHEMA_EXTENSION"
          ],
          "enumDescriptions": [
            "Backup type not specified.",
            "Backup was manually created.",
            "Backup was automatically created.",
            "Backup was taken as part of Schema Extension request."
          ],
          "description": "Output only. Indicates whether it’s an on-demand backup or scheduled.",
          "readOnly": true
        },
        "labels": {
          "description": "Optional. Resource labels to represent user provided metadata.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "description": {
          "description": "Optional. A short description of the backup.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The unique name of the Backup in the form of projects/{project_id}/locations/global/domains/{domain_name}/backups/{name}",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Additional information about the current status of this backup, if available."
        }
      }
    },
    "CheckMigrationPermissionResponse": {
      "description": "CheckMigrationPermissionResponse is the response message for CheckMigrationPermission method.",
      "properties": {
        "state": {
          "enumDescriptions": [
            "DomainMigration is in unspecified state.",
            "Domain Migration is Disabled.",
            "Domain Migration is Enabled.",
            "Domain Migration is not in valid state."
          ],
          "description": "The state of DomainMigration.",
          "enum": [
            "STATE_UNSPECIFIED",
            "DISABLED",
            "ENABLED",
            "NEEDS_MAINTENANCE"
          ],
          "type": "string"
        },
        "onpremDomains": {
          "type": "array",
          "description": "The state of SID filtering of all the domains which has trust established.",
          "items": {
            "$ref": "OnPremDomainSIDDetails"
          }
        }
      },
      "id": "CheckMigrationPermissionResponse",
      "type": "object"
    },
    "LDAPSSettings": {
      "properties": {
        "state": {
          "readOnly": true,
          "description": "Output only. The current state of this LDAPS settings.",
          "type": "string",
          "enumDescriptions": [
            "Not Set",
            "The LDAPS setting is being updated.",
            "The LDAPS setting is ready.",
            "The LDAPS setting is not applied correctly."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "UPDATING",
            "ACTIVE",
            "FAILED"
          ]
        },
        "certificate": {
          "$ref": "Certificate",
          "description": "Output only. The certificate used to configure LDAPS. Certificates can be chained with a maximum length of 15.",
          "readOnly": true
        },
        "certificatePfx": {
          "type": "string",
          "description": "Input only. The uploaded PKCS12-formatted certificate to configure LDAPS with. It will enable the domain controllers in this domain to accept LDAPS connections (either LDAP over SSL/TLS or the StartTLS operation). A valid certificate chain must form a valid x.509 certificate chain (or be comprised of a single self-signed certificate. It must be encrypted with either: 1) PBES2 + PBKDF2 + AES256 encryption and SHA256 PRF; or 2) pbeWithSHA1And3-KeyTripleDES-CBC Private key must be included for the leaf / single self-signed certificate. Note: For a fqdn your-example-domain.com, the wildcard fqdn is *.your-example-domain.com. Specifically the leaf certificate must have: - Either a blank subject or a subject with CN matching the wildcard fqdn. - Exactly two SANs - the fqdn and wildcard fqdn. - Encipherment and digital key signature key usages. - Server authentication extended key usage (OID=1.3.6.1.5.5.7.3.1) - Private key must be in one of the following formats: RSA, ECDSA, ED25519. - Private key must have appropriate key length: 2048 for RSA, 256 for ECDSA - Signature algorithm of the leaf certificate cannot be MD2, MD5 or SHA1.",
          "format": "byte"
        },
        "certificatePassword": {
          "type": "string",
          "description": "Input only. The password used to encrypt the uploaded pfx certificate."
        },
        "updateTime": {
          "description": "Output only. Last update time.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name of the LDAPS settings. Uses the form: `projects/{project}/locations/{location}/domains/{domain}`."
        }
      },
      "description": "LDAPSSettings represents the ldaps settings for domain resource. LDAP is the Lightweight Directory Access Protocol, defined in https://tools.ietf.org/html/rfc4511. The settings object configures LDAP over SSL/TLS, whether it is over port 636 or the StartTLS operation. If LDAPSSettings is being changed, it will be placed into the UPDATING state, which indicates that the resource is being reconciled. At this point, Get will reflect an intermediate state.",
      "type": "object",
      "id": "LDAPSSettings"
    },
    "GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource": {
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "Type of the resource. This can be either a GCP resource or a custom one (e.g. another cloud provider's VM). For GCP compute resources use singular form of the names listed in GCP compute API documentation (https://cloud.google.com/compute/docs/reference/rest/v1/), prefixed with 'compute-', for example: 'compute-instance', 'compute-disk', 'compute-autoscaler'."
        },
        "resourceUrl": {
          "type": "string",
          "description": "URL identifying the resource, e.g. \"https://www.googleapis.com/compute/v1/projects/...)\"."
        }
      },
      "description": "Describes provisioned dataplane resources.",
      "type": "object",
      "id": "GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource"
    },
    "SetIamPolicyRequest": {
      "description": "Request message for `SetIamPolicy` method.",
      "id": "SetIamPolicyRequest",
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        }
      }
    },
    "DailyCycle": {
      "description": "Time window specified for daily operations.",
      "type": "object",
      "id": "DailyCycle",
      "properties": {
        "duration": {
          "type": "string",
          "format": "google-duration",
          "description": "Output only. Duration of the time window, set by service producer."
        },
        "startTime": {
          "description": "Time within the day to start the operations.",
          "$ref": "TimeOfDay"
        }
      }
    },
    "DenyMaintenancePeriod": {
      "id": "DenyMaintenancePeriod",
      "properties": {
        "time": {
          "description": "Time in UTC when the Blackout period starts on start_date and ends on end_date. This can be: * Full time. * All zeros for 00:00:00 UTC",
          "$ref": "TimeOfDay"
        },
        "startDate": {
          "$ref": "Date",
          "description": "Deny period start date. This can be: * A full date, with non-zero year, month and day values. * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching this period will have to be the same or after the start."
        },
        "endDate": {
          "description": "Deny period end date. This can be: * A full date, with non-zero year, month and day values. * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching this period will have to be before the end.",
          "$ref": "Date"
        }
      },
      "type": "object",
      "description": "DenyMaintenancePeriod definition. Maintenance is forbidden within the deny period. The start_date must be less than the end_date."
    },
    "Domain": {
      "properties": {
        "reservedIpRange": {
          "type": "string",
          "description": "Required. The CIDR range of internal addresses that are reserved for this domain. Reserved networks must be /24 or larger. Ranges must be unique and non-overlapping with existing subnets in [Domain].[authorized_networks]."
        },
        "state": {
          "enumDescriptions": [
            "Not set.",
            "The domain is being created.",
            "The domain has been created and is fully usable.",
            "The domain's configuration is being updated.",
            "The domain is being deleted.",
            "The domain is being repaired and may be unusable. Details can be found in the `status_message` field.",
            "The domain is undergoing maintenance.",
            "The domain is not serving requests."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "UPDATING",
            "DELETING",
            "REPAIRING",
            "PERFORMING_MAINTENANCE",
            "UNAVAILABLE"
          ],
          "readOnly": true,
          "description": "Output only. The current state of this domain."
        },
        "auditLogsEnabled": {
          "type": "boolean",
          "description": "Optional. Configuration for audit logs. True if audit logs are enabled, else false. Default is audit logs disabled."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Resource labels that can contain user-provided metadata."
        },
        "admin": {
          "description": "Optional. The name of delegated administrator account used to perform Active Directory operations. If not specified, `setupadmin` will be used.",
          "type": "string"
        },
        "fqdn": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The fully-qualified domain name of the exposed domain used by clients to connect to the service. Similar to what would be chosen for an Active Directory set up on an internal network."
        },
        "locations": {
          "description": "Required. Locations where domain needs to be provisioned. regions e.g. us-west1 or us-east4 Service supports up to 4 locations at once. Each location will use a /26 block.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "authorizedNetworks": {
          "items": {
            "type": "string"
          },
          "description": "Optional. The full names of the Google Compute Engine [networks](/compute/docs/networks-and-firewalls#networks) the domain instance is connected to. Networks can be added using UpdateDomain. The domain is only available on networks listed in `authorized_networks`. If CIDR subnets overlap between networks, domain creation will fail.",
          "type": "array"
        },
        "trusts": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "Trust"
          },
          "description": "Output only. The current trusts associated with the domain."
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The last update time.",
          "format": "google-datetime"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the instance was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "statusMessage": {
          "description": "Output only. Additional information about the current status of this domain, if available.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The unique name of the domain using the form: `projects/{project_id}/locations/global/domains/{domain_name}`."
        }
      },
      "description": "Represents a managed Microsoft Active Directory domain. If the domain is being changed, it will be placed into the UPDATING state, which indicates that the resource is being reconciled. At this point, Get will reflect an intermediate state.",
      "type": "object",
      "id": "Domain"
    },
    "TestIamPermissionsRequest": {
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array"
        }
      },
      "type": "object",
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method."
    },
    "GoogleCloudManagedidentitiesV1alpha1OpMetadata": {
      "properties": {
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "verb": {
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string"
        },
        "apiVersion": {
          "readOnly": true,
          "description": "Output only. API version used to start the operation.",
          "type": "string"
        }
      },
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "id": "GoogleCloudManagedidentitiesV1alpha1OpMetadata"
    },
    "MaintenanceWindow": {
      "description": "MaintenanceWindow definition.",
      "properties": {
        "dailyCycle": {
          "description": "Daily cycle.",
          "$ref": "DailyCycle"
        },
        "weeklyCycle": {
          "description": "Weekly cycle.",
          "$ref": "WeeklyCycle"
        }
      },
      "id": "MaintenanceWindow",
      "type": "object"
    },
    "CheckMigrationPermissionRequest": {
      "properties": {},
      "description": "CheckMigrationPermissionRequest is the request message for CheckMigrationPermission method.",
      "type": "object",
      "id": "CheckMigrationPermissionRequest"
    },
    "GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata": {
      "type": "object",
      "description": "Node information for custom per-node SLO implementations. SSA does not support per-node SLO, but producers can populate per-node information in SloMetadata for custom precomputations. SSA Eligibility Exporter will emit per-node metric based on this information.",
      "properties": {
        "perSliEligibility": {
          "description": "If present, this will override eligibility for the node coming from instance or exclusions for specified SLIs.",
          "$ref": "GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility"
        },
        "nodeId": {
          "type": "string",
          "description": "The id of the node. This should be equal to SaasInstanceNode.node_id."
        },
        "location": {
          "description": "The location of the node, if different from instance location.",
          "type": "string"
        }
      },
      "id": "GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata"
    },
    "ListSqlIntegrationsResponse": {
      "id": "ListSqlIntegrationsResponse",
      "description": "ListSqlIntegrationsResponse is the response message for ListSqlIntegrations method.",
      "type": "object",
      "properties": {
        "sqlIntegrations": {
          "description": "A list of SqlIntegrations of a domain.",
          "type": "array",
          "items": {
            "$ref": "SqlIntegration"
          }
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "A list of locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      }
    },
    "ListLocationsResponse": {
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "DetachTrustRequest": {
      "type": "object",
      "description": "Request message for DetachTrust",
      "properties": {
        "trust": {
          "$ref": "Trust",
          "description": "Required. The domain trust resource to removed."
        }
      },
      "id": "DetachTrustRequest"
    },
    "GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter": {
      "id": "GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter",
      "properties": {
        "values": {
          "description": "Optional. Array of string values. e.g. instance's replica information.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Contains notification related data.",
      "type": "object"
    },
    "RestoreDomainRequest": {
      "id": "RestoreDomainRequest",
      "description": "RestoreDomainRequest is the request received by RestoreDomain rpc",
      "properties": {
        "backupId": {
          "type": "string",
          "description": "Required. ID of the backup to be restored"
        }
      },
      "type": "object"
    },
    "Peering": {
      "properties": {
        "state": {
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "Peering is being created.",
            "Peering is connected.",
            "Peering is disconnected.",
            "Peering is being deleted."
          ],
          "description": "Output only. The current state of this Peering.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CONNECTED",
            "DISCONNECTED",
            "DELETING"
          ]
        },
        "domainResource": {
          "type": "string",
          "description": "Required. Full domain resource path for the Managed AD Domain involved in peering. The resource path should be in the form: `projects/{project_id}/locations/global/domains/{domain_name}`"
        },
        "authorizedNetwork": {
          "description": "Required. The full names of the Google Compute Engine [networks](/compute/docs/networks-and-firewalls#networks) to which the instance is connected. Caller needs to make sure that CIDR subnets do not overlap between networks, else peering creation will fail.",
          "type": "string"
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Output only. Additional information about the current status of this peering, if available.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Unique name of the peering in this scope including projects and location using the form: `projects/{project_id}/locations/global/peerings/{peering_id}`.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. Resource labels to represent user provided metadata."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Last update time."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the instance was created.",
          "readOnly": true,
          "format": "google-datetime"
        }
      },
      "id": "Peering",
      "description": "Represents a Managed Microsoft Identities Peering.",
      "type": "object"
    },
    "EnableMigrationRequest": {
      "id": "EnableMigrationRequest",
      "description": "EnableMigrationRequest is the request message for EnableMigration method.",
      "type": "object",
      "properties": {
        "migratingDomains": {
          "type": "array",
          "description": "Required. List of the on-prem domains to be migrated.",
          "items": {
            "$ref": "OnPremDomainDetails"
          }
        },
        "enableDuration": {
          "format": "google-duration",
          "description": "Optional. Period after which the migration would be auto disabled. If unspecified, a default timeout of 48h is used.",
          "type": "string"
        }
      }
    },
    "TestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings": {
      "properties": {
        "isRollback": {
          "description": "Optional. If the update call is triggered from rollback, set the value as true.",
          "type": "boolean"
        },
        "exclude": {
          "type": "boolean",
          "description": "Optional. Exclude instance from maintenance. When true, rollout service will not attempt maintenance on the instance. Rollout service will include the instance in reported rollout progress as not attempted."
        },
        "maintenancePolicies": {
          "additionalProperties": {
            "$ref": "MaintenancePolicy"
          },
          "type": "object",
          "description": "Optional. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the embedded policy must define the same policy type. For details, please refer to go/cloud-saas-mw-ug. Should not be set if maintenance_policy_names is set. If only the name is needed, then only populate MaintenancePolicy.name."
        }
      },
      "type": "object",
      "description": "Maintenance settings associated with instance. Allows service producers and end users to assign settings that controls maintenance on this instance.",
      "id": "GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings"
    },
    "GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule": {
      "description": "Maintenance schedule which is exposed to customer and potentially end user, indicating published upcoming future maintenance schedule",
      "properties": {
        "canReschedule": {
          "deprecated": true,
          "description": "This field is deprecated, and will be always set to true since reschedule can happen multiple times now. This field should not be removed until all service producers remove this for their customers.",
          "type": "boolean"
        },
        "rolloutManagementPolicy": {
          "type": "string",
          "description": "The rollout management policy this maintenance schedule is associated with. When doing reschedule update request, the reschedule should be against this given policy."
        },
        "endTime": {
          "description": "The scheduled end time for the maintenance.",
          "format": "google-datetime",
          "type": "string"
        },
        "scheduleDeadlineTime": {
          "format": "google-datetime",
          "description": "schedule_deadline_time is the time deadline any schedule start time cannot go beyond, including reschedule. It's normally the initial schedule start time plus maintenance window length (1 day or 1 week). Maintenance cannot be scheduled to start beyond this deadline.",
          "type": "string"
        },
        "startTime": {
          "description": "The scheduled start time for the maintenance.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule",
      "type": "object"
    },
    "ValidateTrustRequest": {
      "description": "Request message for ValidateTrust",
      "id": "ValidateTrustRequest",
      "properties": {
        "trust": {
          "description": "Required. The domain trust to validate trust state for.",
          "$ref": "Trust"
        }
      },
      "type": "object"
    },
    "GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility": {
      "description": "SloEligibility is a tuple containing eligibility value: true if an instance is eligible for SLO calculation or false if it should be excluded from all SLO-related calculations along with a user-defined reason.",
      "properties": {
        "eligible": {
          "type": "boolean",
          "description": "Whether an instance is eligible or ineligible."
        },
        "reason": {
          "description": "User-defined reason for the current value of instance eligibility. Usually, this can be directly mapped to the internal state. An empty reason is allowed.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility"
    },
    "ListDomainsResponse": {
      "id": "ListDomainsResponse",
      "description": "Response message for ListDomains",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "domains": {
          "items": {
            "$ref": "Domain"
          },
          "type": "array",
          "description": "A list of Managed Identities Service domains in the project."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of locations that could not be reached."
        }
      },
      "type": "object"
    },
    "UpdatePolicy": {
      "id": "UpdatePolicy",
      "type": "object",
      "properties": {
        "denyMaintenancePeriods": {
          "description": "Deny Maintenance Period that is applied to resource to indicate when maintenance is forbidden. User can specify zero or more non-overlapping deny periods. Maximum number of deny_maintenance_periods expected is one.",
          "items": {
            "$ref": "DenyMaintenancePeriod"
          },
          "type": "array"
        },
        "channel": {
          "description": "Optional. Relative scheduling channel applied to resource.",
          "enum": [
            "UPDATE_CHANNEL_UNSPECIFIED",
            "EARLIER",
            "LATER",
            "WEEK1",
            "WEEK2",
            "WEEK5"
          ],
          "enumDescriptions": [
            "Unspecified channel.",
            "Early channel within a customer project.",
            "Later channel within a customer project.",
            "! ! The follow channels can ONLY be used if you adopt the new MW system! ! ! NOTE: all WEEK channels are assumed to be under a weekly window. ! There is currently no dedicated channel definitions for Daily windows. ! If you use Daily window, the system will assume a 1d (24Hours) advanced ! notification period b/w EARLY and LATER. ! We may consider support more flexible daily channel specifications in ! the future. WEEK1 == EARLIER with minimum 7d advanced notification. {7d, 14d} The system will treat them equally and will use WEEK1 whenever it can. New customers are encouraged to use this channel annotation.",
            "WEEK2 == LATER with minimum 14d advanced notification {14d, 21d}.",
            "WEEK5 == 40d support. minimum 35d advanced notification {35d, 42d}."
          ],
          "type": "string"
        },
        "window": {
          "$ref": "MaintenanceWindow",
          "description": "Optional. Maintenance window that is applied to resources covered by this policy."
        }
      },
      "description": "Maintenance policy applicable to instance updates."
    },
    "OperationMetadata": {
      "type": "object",
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. API version used to start the operation."
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "statusDetail": {
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running."
        },
        "cancelRequested": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime"
        }
      }
    },
    "ResetAdminPasswordResponse": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "A random password. See admin for more information."
        }
      },
      "description": "Response message for ResetAdminPassword",
      "id": "ResetAdminPasswordResponse"
    },
    "MaintenancePolicy": {
      "description": "LINT.IfChange Defines policies to service maintenance events.",
      "type": "object",
      "id": "MaintenancePolicy",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. MaintenancePolicy name using the form: `projects/{project_id}/locations/{location_id}/maintenancePolicies/{maintenance_policy_id}` where {project_id} refers to a GCP consumer project ID, {location_id} refers to a GCP region/zone, {maintenance_policy_id} must be 1-63 characters long and match the regular expression `[a-z0-9]([-a-z0-9]*[a-z0-9])?`."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "READY",
            "DELETING"
          ],
          "description": "Optional. The state of the policy.",
          "enumDescriptions": [
            "Unspecified state.",
            "Resource is ready to be used.",
            "Resource is being deleted. It can no longer be attached to instances."
          ],
          "type": "string"
        },
        "updatePolicy": {
          "description": "Maintenance policy applicable to instance update.",
          "$ref": "UpdatePolicy"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user.",
          "type": "object"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time when the resource was created."
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The time when the resource was updated.",
          "format": "google-datetime"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512."
        }
      }
    },
    "ResetAdminPasswordRequest": {
      "id": "ResetAdminPasswordRequest",
      "description": "Request message for ResetAdminPassword",
      "properties": {},
      "type": "object"
    },
    "DomainJoinMachineRequest": {
      "properties": {
        "force": {
          "type": "boolean",
          "description": "Optional. force if True, forces domain join even if the computer account already exists."
        },
        "ouName": {
          "type": "string",
          "description": "Optional. OU name to which the VM needs to be domain joined. If the field is not provided, the VM is joined to the default OU which is created. The default OU for the domain join api is created as GCE Instances under the Cloud OU. Example - OU=GCE Instances,OU=Cloud,DC=ad,DC=test,DC=com If the field is provided, then the custom OU is searched for under GCE Instances OU. Example - if ou_name=test_ou then the VM is domain joined to the following OU: OU=test_ou,OU=GCE Instances,OU=Cloud,DC=ad,DC=test,DC=com if present. If OU is not present under GCE Instances, then error is returned."
        },
        "vmIdToken": {
          "type": "string",
          "description": "Required. Full instance id token of compute engine VM to verify instance identity. More about this: https://cloud.google.com/compute/docs/instances/verifying-instance-identity#request_signature"
        }
      },
      "description": "DomainJoinMachineRequest is the request message for DomainJoinMachine method",
      "id": "DomainJoinMachineRequest",
      "type": "object"
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "type": "object",
      "description": "The response message for Operations.ListOperations."
    },
    "Schedule": {
      "id": "Schedule",
      "properties": {
        "startTime": {
          "$ref": "TimeOfDay",
          "description": "Time within the window to start the operations."
        },
        "day": {
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ],
          "type": "string",
          "enumDescriptions": [
            "The day of the week is unspecified.",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "description": "Allows to define schedule that runs specified day of the week."
        },
        "duration": {
          "type": "string",
          "format": "google-duration",
          "description": "Output only. Duration of the time window, set by service producer."
        }
      },
      "description": "Configure the schedule.",
      "type": "object"
    },
    "GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility": {
      "type": "object",
      "properties": {
        "eligibilities": {
          "description": "An entry in the eligibilities map specifies an eligibility for a particular SLI for the given instance. The SLI key in the name must be a valid SLI name specified in the Eligibility Exporter binary flags otherwise an error will be emitted by Eligibility Exporter and the oncaller will be alerted. If an SLI has been defined in the binary flags but the eligibilities map does not contain it, the corresponding SLI time series will not be emitted by the Eligibility Exporter. This ensures a smooth rollout and compatibility between the data produced by different versions of the Eligibility Exporters. If eligibilities map contains a key for an SLI which has not been declared in the binary flags, there will be an error message emitted in the Eligibility Exporter log and the metric for the SLI in question will not be emitted.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility"
          }
        }
      },
      "description": "PerSliSloEligibility is a mapping from an SLI name to eligibility.",
      "id": "GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility"
    },
    "ReconfigureTrustRequest": {
      "type": "object",
      "id": "ReconfigureTrustRequest",
      "description": "Request message for ReconfigureTrust",
      "properties": {
        "targetDomainName": {
          "type": "string",
          "description": "Required. The fully-qualified target domain name which will be in trust with current domain."
        },
        "targetDnsIpAddresses": {
          "type": "array",
          "description": "Required. The target DNS server IP addresses to resolve the remote domain involved in the trust.",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "location": "query",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json"
    }
  },
  "kind": "discovery#restDescription",
  "batchPath": "batch",
  "ownerName": "Google",
  "id": "managedidentities:v1beta1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true
}

{
  "resources": {
    "projects": {
      "methods": {
        "getProjectSettings": {
          "id": "artifactregistry.projects.getProjectSettings",
          "path": "v1beta2/{+name}",
          "flatPath": "v1beta2/projects/{projectsId}/projectSettings",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "Required. The name of the projectSettings resource.",
              "pattern": "^projects/[^/]+/projectSettings$",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "ProjectSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "description": "Retrieves the Settings for the Project."
        },
        "updateProjectSettings": {
          "id": "artifactregistry.projects.updateProjectSettings",
          "path": "v1beta2/{+name}",
          "flatPath": "v1beta2/projects/{projectsId}/projectSettings",
          "httpMethod": "PATCH",
          "parameters": {
            "name": {
              "description": "The name of the project's settings. Always of the form: projects/{project-id}/projectSettings In update request: never set In response: always set",
              "pattern": "^projects/[^/]+/projectSettings$",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "updateMask": {
              "description": "Field mask to support partial updates.",
              "location": "query",
              "type": "string",
              "format": "google-fieldmask"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "ProjectSettings"
          },
          "response": {
            "$ref": "ProjectSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Updates the Settings for the Project."
        }
      },
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "artifactregistry.projects.locations.list",
              "path": "v1beta2/{+name}/locations",
              "flatPath": "v1beta2/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "artifactregistry.projects.locations.get",
              "path": "v1beta2/{+name}",
              "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "description": "Gets information about a location."
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "get": {
                  "id": "artifactregistry.projects.locations.operations.get",
                  "path": "v1beta2/{+name}",
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                }
              }
            },
            "repositories": {
              "methods": {
                "list": {
                  "id": "artifactregistry.projects.locations.repositories.list",
                  "path": "v1beta2/{+parent}/repositories",
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource whose repositories will be listed.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of repositories to return. Maximum page size is 1,000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous list request, if any.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListRepositoriesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "description": "Lists repositories."
                },
                "get": {
                  "id": "artifactregistry.projects.locations.repositories.get",
                  "path": "v1beta2/{+name}",
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the repository to retrieve.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Repository"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "description": "Gets a repository."
                },
                "create": {
                  "id": "artifactregistry.projects.locations.repositories.create",
                  "path": "v1beta2/{+parent}/repositories",
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource where the repository will be created.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "repositoryId": {
                      "description": "Required. The repository id to use for this repository.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Repository"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a repository. The returned Operation will finish once the repository has been created. Its response will be the created Repository."
                },
                "patch": {
                  "id": "artifactregistry.projects.locations.repositories.patch",
                  "path": "v1beta2/{+name}",
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "The name of the repository, for example: `projects/p1/locations/us-central1/repositories/repo1`. For each location in a project, repository names must be unique.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Repository"
                  },
                  "response": {
                    "$ref": "Repository"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a repository."
                },
                "delete": {
                  "id": "artifactregistry.projects.locations.repositories.delete",
                  "path": "v1beta2/{+name}",
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the repository to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a repository and all of its contents. The returned Operation will finish once the repository has been deleted. It will not have any Operation metadata and will return a google.protobuf.Empty response."
                },
                "setIamPolicy": {
                  "id": "artifactregistry.projects.locations.repositories.setIamPolicy",
                  "path": "v1beta2/{+resource}:setIamPolicy",
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the IAM policy for a given resource."
                },
                "getIamPolicy": {
                  "id": "artifactregistry.projects.locations.repositories.getIamPolicy",
                  "path": "v1beta2/{+resource}:getIamPolicy",
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "description": "Gets the IAM policy for a given resource."
                },
                "testIamPermissions": {
                  "id": "artifactregistry.projects.locations.repositories.testIamPermissions",
                  "path": "v1beta2/{+resource}:testIamPermissions",
                  "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "description": "Tests if the caller has a list of permissions on a resource."
                }
              },
              "resources": {
                "aptArtifacts": {
                  "methods": {
                    "import": {
                      "id": "artifactregistry.projects.locations.repositories.aptArtifacts.import",
                      "path": "v1beta2/{+parent}/aptArtifacts:import",
                      "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/aptArtifacts:import",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "The name of the parent resource where the artifacts will be imported.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "ImportAptArtifactsRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Imports Apt artifacts. The returned Operation will complete once the resources are imported. Package, Version, and File resources are created based on the imported artifacts. Imported artifacts that conflict with existing resources are ignored."
                    },
                    "upload": {
                      "id": "artifactregistry.projects.locations.repositories.aptArtifacts.upload",
                      "path": "v1beta2/{+parent}/aptArtifacts:create",
                      "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/aptArtifacts:create",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "The name of the parent resource where the artifacts will be uploaded.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "supportsMediaUpload": true,
                      "mediaUpload": {
                        "accept": [
                          "*/*"
                        ],
                        "protocols": {
                          "simple": {
                            "multipart": true,
                            "path": "/upload/v1beta2/{+parent}/aptArtifacts:create"
                          }
                        }
                      },
                      "request": {
                        "$ref": "UploadAptArtifactRequest"
                      },
                      "response": {
                        "$ref": "UploadAptArtifactMediaResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Directly uploads an Apt artifact. The returned Operation will complete once the resources are uploaded. Package, Version, and File resources are created based on the imported artifact. Imported artifacts that conflict with existing resources are ignored."
                    }
                  }
                },
                "yumArtifacts": {
                  "methods": {
                    "import": {
                      "id": "artifactregistry.projects.locations.repositories.yumArtifacts.import",
                      "path": "v1beta2/{+parent}/yumArtifacts:import",
                      "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/yumArtifacts:import",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "The name of the parent resource where the artifacts will be imported.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "ImportYumArtifactsRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Imports Yum (RPM) artifacts. The returned Operation will complete once the resources are imported. Package, Version, and File resources are created based on the imported artifacts. Imported artifacts that conflict with existing resources are ignored."
                    },
                    "upload": {
                      "id": "artifactregistry.projects.locations.repositories.yumArtifacts.upload",
                      "path": "v1beta2/{+parent}/yumArtifacts:create",
                      "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/yumArtifacts:create",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "The name of the parent resource where the artifacts will be uploaded.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "supportsMediaUpload": true,
                      "mediaUpload": {
                        "accept": [
                          "*/*"
                        ],
                        "protocols": {
                          "simple": {
                            "multipart": true,
                            "path": "/upload/v1beta2/{+parent}/yumArtifacts:create"
                          }
                        }
                      },
                      "request": {
                        "$ref": "UploadYumArtifactRequest"
                      },
                      "response": {
                        "$ref": "UploadYumArtifactMediaResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Directly uploads a Yum artifact. The returned Operation will complete once the resources are uploaded. Package, Version, and File resources are created based on the imported artifact. Imported artifacts that conflict with existing resources are ignored."
                    }
                  }
                },
                "packages": {
                  "methods": {
                    "list": {
                      "id": "artifactregistry.projects.locations.repositories.packages.list",
                      "path": "v1beta2/{+parent}/packages",
                      "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The name of the parent resource whose packages will be listed.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of packages to return. Maximum page size is 1,000.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous list request, if any.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListPackagesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "description": "Lists packages."
                    },
                    "get": {
                      "id": "artifactregistry.projects.locations.repositories.packages.get",
                      "path": "v1beta2/{+name}",
                      "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the package to retrieve.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Package"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "description": "Gets a package."
                    },
                    "delete": {
                      "id": "artifactregistry.projects.locations.repositories.packages.delete",
                      "path": "v1beta2/{+name}",
                      "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the package to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a package and all of its versions and tags. The returned operation will complete once the package has been deleted."
                    },
                    "patch": {
                      "id": "artifactregistry.projects.locations.repositories.packages.patch",
                      "path": "v1beta2/{+name}",
                      "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "description": "The name of the package, for example: `projects/p1/locations/us-central1/repositories/repo1/packages/pkg1`. If the package ID part contains slashes, the slashes are escaped.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "updateMask": {
                          "description": "The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "Package"
                      },
                      "response": {
                        "$ref": "Package"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates a package."
                    }
                  },
                  "resources": {
                    "versions": {
                      "methods": {
                        "list": {
                          "id": "artifactregistry.projects.locations.repositories.packages.versions.list",
                          "path": "v1beta2/{+parent}/versions",
                          "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/versions",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "The name of the parent resource whose versions will be listed.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "The maximum number of versions to return. Maximum page size is 1,000.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "The next_page_token value returned from a previous list request, if any.",
                              "location": "query",
                              "type": "string"
                            },
                            "view": {
                              "description": "The view that should be returned in the response.",
                              "location": "query",
                              "type": "string",
                              "enumDescriptions": [
                                "The default / unset value. The API will default to the BASIC view.",
                                "Includes basic information about the version, but not any related tags.",
                                "Include everything."
                              ],
                              "enum": [
                                "VERSION_VIEW_UNSPECIFIED",
                                "BASIC",
                                "FULL"
                              ]
                            },
                            "orderBy": {
                              "description": "Optional. The field to order the results by.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListVersionsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "description": "Lists versions."
                        },
                        "get": {
                          "id": "artifactregistry.projects.locations.repositories.packages.versions.get",
                          "path": "v1beta2/{+name}",
                          "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/versions/{versionsId}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "description": "The name of the version to retrieve.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/versions/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "view": {
                              "description": "The view that should be returned in the response.",
                              "location": "query",
                              "type": "string",
                              "enumDescriptions": [
                                "The default / unset value. The API will default to the BASIC view.",
                                "Includes basic information about the version, but not any related tags.",
                                "Include everything."
                              ],
                              "enum": [
                                "VERSION_VIEW_UNSPECIFIED",
                                "BASIC",
                                "FULL"
                              ]
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Version"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "description": "Gets a version"
                        },
                        "delete": {
                          "id": "artifactregistry.projects.locations.repositories.packages.versions.delete",
                          "path": "v1beta2/{+name}",
                          "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/versions/{versionsId}",
                          "httpMethod": "DELETE",
                          "parameters": {
                            "name": {
                              "description": "The name of the version to delete.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/versions/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "force": {
                              "description": "By default, a version that is tagged may not be deleted. If force=true, the version and any tags pointing to the version are deleted.",
                              "location": "query",
                              "type": "boolean"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Operation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Deletes a version and all of its content. The returned operation will complete once the version has been deleted."
                        }
                      }
                    },
                    "tags": {
                      "methods": {
                        "list": {
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.list",
                          "path": "v1beta2/{+parent}/tags",
                          "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "The name of the parent package whose tags will be listed. For example: `projects/p1/locations/us-central1/repositories/repo1/packages/pkg1`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "filter": {
                              "description": "An expression for filtering the results of the request. Filter rules are case insensitive. The fields eligible for filtering are: * `version` An example of using a filter: * `version=\"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/1.0\"` --\u003e Tags that are applied to the version `1.0` in package `pkg1`.",
                              "location": "query",
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "The maximum number of tags to return. Maximum page size is 10,000.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "The next_page_token value returned from a previous list request, if any.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListTagsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "description": "Lists tags."
                        },
                        "get": {
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.get",
                          "path": "v1beta2/{+name}",
                          "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags/{tagsId}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "description": "The name of the tag to retrieve.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/tags/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Tag"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "description": "Gets a tag."
                        },
                        "create": {
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.create",
                          "path": "v1beta2/{+parent}/tags",
                          "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags",
                          "httpMethod": "POST",
                          "parameters": {
                            "parent": {
                              "description": "The name of the parent resource where the tag will be created.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "tagId": {
                              "description": "The tag id to use for this repository.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "request": {
                            "$ref": "Tag"
                          },
                          "response": {
                            "$ref": "Tag"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Creates a tag."
                        },
                        "patch": {
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.patch",
                          "path": "v1beta2/{+name}",
                          "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags/{tagsId}",
                          "httpMethod": "PATCH",
                          "parameters": {
                            "name": {
                              "description": "The name of the tag, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1\". If the package part contains slashes, the slashes are escaped. The tag part can only have characters in [a-zA-Z0-9\\-._~:@], anything else must be URL encoded.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/tags/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "updateMask": {
                              "description": "The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                              "location": "query",
                              "type": "string",
                              "format": "google-fieldmask"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "Tag"
                          },
                          "response": {
                            "$ref": "Tag"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Updates a tag."
                        },
                        "delete": {
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.delete",
                          "path": "v1beta2/{+name}",
                          "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags/{tagsId}",
                          "httpMethod": "DELETE",
                          "parameters": {
                            "name": {
                              "description": "The name of the tag to delete.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/tags/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Empty"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Deletes a tag."
                        }
                      }
                    }
                  }
                },
                "files": {
                  "methods": {
                    "list": {
                      "id": "artifactregistry.projects.locations.repositories.files.list",
                      "path": "v1beta2/{+parent}/files",
                      "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/files",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The name of the repository whose files will be listed. For example: \"projects/p1/locations/us-central1/repositories/repo1",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "filter": {
                          "description": "An expression for filtering the results of the request. Filter rules are case insensitive. The fields eligible for filtering are: * `name` * `owner` An example of using a filter: * `name=\"projects/p1/locations/us-central1/repositories/repo1/files/a/b/*\"` --\u003e Files with an ID starting with \"a/b/\". * `owner=\"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/1.0\"` --\u003e Files owned by the version `1.0` in package `pkg1`.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of files to return.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous list request, if any.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListFilesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "description": "Lists files."
                    },
                    "get": {
                      "id": "artifactregistry.projects.locations.repositories.files.get",
                      "path": "v1beta2/{+name}",
                      "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/files/{filesId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the file to retrieve.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/files/.*$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleDevtoolsArtifactregistryV1beta2File"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "description": "Gets a file."
                    },
                    "download": {
                      "id": "artifactregistry.projects.locations.repositories.files.download",
                      "path": "v1beta2/{+name}:download",
                      "flatPath": "v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/files/{filesId}:download",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the file to download.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/files/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "supportsMediaDownload": true,
                      "useMediaDownloadService": true,
                      "response": {
                        "$ref": "DownloadFileResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "description": "Download a file."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "documentationLink": "https://cloud.google.com/artifacts/docs/",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "basePath": "",
  "rootUrl": "https://artifactregistry.googleapis.com/",
  "endpoints": [
    {
      "endpointUrl": "https://artifactregistry.me-central2.rep.googleapis.com/",
      "location": "me-central2",
      "description": "Regional Endpoint"
    }
  ],
  "title": "Artifact Registry API",
  "servicePath": "",
  "version": "v1beta2",
  "canonicalName": "Artifact Registry",
  "description": "Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.",
  "mtlsRootUrl": "https://artifactregistry.mtls.googleapis.com/",
  "baseUrl": "https://artifactregistry.googleapis.com/",
  "discoveryVersion": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud services and see the email address of your Google Account"
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "revision": "20240501",
  "id": "artifactregistry:v1beta2",
  "version_module": true,
  "schemas": {
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "ImportAptArtifactsRequest": {
      "id": "ImportAptArtifactsRequest",
      "description": "The request to import new apt artifacts.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "description": "Google Cloud Storage location where input content is located.",
          "$ref": "ImportAptArtifactsGcsSource"
        }
      }
    },
    "ImportAptArtifactsGcsSource": {
      "id": "ImportAptArtifactsGcsSource",
      "description": "Google Cloud Storage location where the artifacts currently reside.",
      "type": "object",
      "properties": {
        "uris": {
          "description": "Cloud Storage paths URI (e.g., gs://my_bucket//my_object).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "useWildcards": {
          "description": "Supports URI wildcards for matching multiple objects from a single URI.",
          "type": "boolean"
        }
      }
    },
    "ImportYumArtifactsRequest": {
      "id": "ImportYumArtifactsRequest",
      "description": "The request to import new yum artifacts.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "description": "Google Cloud Storage location where input content is located.",
          "$ref": "ImportYumArtifactsGcsSource"
        }
      }
    },
    "ImportYumArtifactsGcsSource": {
      "id": "ImportYumArtifactsGcsSource",
      "description": "Google Cloud Storage location where the artifacts currently reside.",
      "type": "object",
      "properties": {
        "uris": {
          "description": "Cloud Storage paths URI (e.g., gs://my_bucket//my_object).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "useWildcards": {
          "description": "Supports URI wildcards for matching multiple objects from a single URI.",
          "type": "boolean"
        }
      }
    },
    "UploadAptArtifactRequest": {
      "id": "UploadAptArtifactRequest",
      "description": "The request to upload an artifact.",
      "type": "object",
      "properties": {}
    },
    "UploadAptArtifactMediaResponse": {
      "id": "UploadAptArtifactMediaResponse",
      "description": "The response to upload an artifact.",
      "type": "object",
      "properties": {
        "operation": {
          "description": "Operation to be returned to the user.",
          "$ref": "Operation"
        }
      }
    },
    "UploadYumArtifactRequest": {
      "id": "UploadYumArtifactRequest",
      "description": "The request to upload an artifact.",
      "type": "object",
      "properties": {}
    },
    "UploadYumArtifactMediaResponse": {
      "id": "UploadYumArtifactMediaResponse",
      "description": "The response to upload an artifact.",
      "type": "object",
      "properties": {
        "operation": {
          "description": "Operation to be returned to the user.",
          "$ref": "Operation"
        }
      }
    },
    "ListRepositoriesResponse": {
      "id": "ListRepositoriesResponse",
      "description": "The response from listing repositories.",
      "type": "object",
      "properties": {
        "repositories": {
          "description": "The repositories returned.",
          "type": "array",
          "items": {
            "$ref": "Repository"
          }
        },
        "nextPageToken": {
          "description": "The token to retrieve the next page of repositories, or empty if there are no more repositories to return.",
          "type": "string"
        }
      }
    },
    "Repository": {
      "id": "Repository",
      "description": "A Repository for storing artifacts with a specific format.",
      "type": "object",
      "properties": {
        "mavenConfig": {
          "description": "Maven repository config contains repository level configuration for the repositories of maven type.",
          "$ref": "MavenRepositoryConfig"
        },
        "name": {
          "description": "The name of the repository, for example: `projects/p1/locations/us-central1/repositories/repo1`. For each location in a project, repository names must be unique.",
          "type": "string"
        },
        "format": {
          "description": "Optional. The format of packages that are stored in the repository.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified package format.",
            "Docker package format.",
            "Maven package format.",
            "NPM package format.",
            "APT package format.",
            "YUM package format.",
            "GooGet package format.",
            "Python package format."
          ],
          "enum": [
            "FORMAT_UNSPECIFIED",
            "DOCKER",
            "MAVEN",
            "NPM",
            "APT",
            "YUM",
            "GOOGET",
            "PYTHON"
          ]
        },
        "description": {
          "description": "The user-provided description of the repository.",
          "type": "string"
        },
        "labels": {
          "description": "Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters, underscores, and dashes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "description": "Output only. The time when the repository was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The time when the repository was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "kmsKeyName": {
          "description": "The Cloud KMS resource name of the customer managed encryption key that's used to encrypt the contents of the Repository. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. This value may not be changed after the Repository has been created.",
          "type": "string"
        },
        "sizeBytes": {
          "description": "Output only. The size, in bytes, of all artifact storage in this repository. Repositories that are generally available or in public preview use this to calculate storage costs.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "satisfiesPzs": {
          "description": "Output only. If set, the repository satisfies physical zone separation.",
          "readOnly": true,
          "type": "boolean"
        },
        "satisfiesPzi": {
          "description": "Output only. If set, the repository satisfies physical zone isolation.",
          "readOnly": true,
          "type": "boolean"
        }
      }
    },
    "MavenRepositoryConfig": {
      "id": "MavenRepositoryConfig",
      "description": "MavenRepositoryConfig is maven related repository details. Provides additional configuration details for repositories of the maven format type.",
      "type": "object",
      "properties": {
        "allowSnapshotOverwrites": {
          "description": "The repository with this flag will allow publishing the same snapshot versions.",
          "type": "boolean"
        },
        "versionPolicy": {
          "description": "Version policy defines the versions that the registry will accept.",
          "type": "string",
          "enumDescriptions": [
            "VERSION_POLICY_UNSPECIFIED - the version policy is not defined. When the version policy is not defined, no validation is performed for the versions.",
            "RELEASE - repository will accept only Release versions.",
            "SNAPSHOT - repository will accept only Snapshot versions."
          ],
          "enum": [
            "VERSION_POLICY_UNSPECIFIED",
            "RELEASE",
            "SNAPSHOT"
          ]
        }
      }
    },
    "ListPackagesResponse": {
      "id": "ListPackagesResponse",
      "description": "The response from listing packages.",
      "type": "object",
      "properties": {
        "packages": {
          "description": "The packages returned.",
          "type": "array",
          "items": {
            "$ref": "Package"
          }
        },
        "nextPageToken": {
          "description": "The token to retrieve the next page of packages, or empty if there are no more packages to return.",
          "type": "string"
        }
      }
    },
    "Package": {
      "id": "Package",
      "description": "Packages are named collections of versions.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the package, for example: `projects/p1/locations/us-central1/repositories/repo1/packages/pkg1`. If the package ID part contains slashes, the slashes are escaped.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the package.",
          "type": "string"
        },
        "createTime": {
          "description": "The time when the package was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "The time when the package was last updated. This includes publishing a new version of the package.",
          "type": "string",
          "format": "google-datetime"
        },
        "annotations": {
          "description": "Optional. Client specified annotations.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ListVersionsResponse": {
      "id": "ListVersionsResponse",
      "description": "The response from listing versions.",
      "type": "object",
      "properties": {
        "versions": {
          "description": "The versions returned.",
          "type": "array",
          "items": {
            "$ref": "Version"
          }
        },
        "nextPageToken": {
          "description": "The token to retrieve the next page of versions, or empty if there are no more versions to return.",
          "type": "string"
        }
      }
    },
    "Version": {
      "id": "Version",
      "description": "The body of a version resource. A version resource represents a collection of components, such as files and other data. This may correspond to a version in many package management schemes.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the version, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/art1\". If the package or version ID parts contain slashes, the slashes are escaped.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the version, as specified in its metadata.",
          "type": "string"
        },
        "createTime": {
          "description": "The time when the version was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "The time when the version was last updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "relatedTags": {
          "description": "Output only. A list of related tags. Will contain up to 100 tags that reference this version.",
          "type": "array",
          "items": {
            "$ref": "Tag"
          }
        },
        "metadata": {
          "description": "Output only. Repository-specific Metadata stored against this version. The fields returned are defined by the underlying repository-specific resource. Currently, the resources could be: DockerImage MavenArtifact",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "Tag": {
      "id": "Tag",
      "description": "Tags point to a version and represent an alternative name that can be used to access the version.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the tag, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1\". If the package part contains slashes, the slashes are escaped. The tag part can only have characters in [a-zA-Z0-9\\-._~:@], anything else must be URL encoded.",
          "type": "string"
        },
        "version": {
          "description": "The name of the version the tag refers to, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/sha256:5243811\" If the package or version ID parts contain slashes, the slashes are escaped.",
          "type": "string"
        }
      }
    },
    "ListFilesResponse": {
      "id": "ListFilesResponse",
      "description": "The response from listing files.",
      "type": "object",
      "properties": {
        "files": {
          "description": "The files returned.",
          "type": "array",
          "items": {
            "$ref": "GoogleDevtoolsArtifactregistryV1beta2File"
          }
        },
        "nextPageToken": {
          "description": "The token to retrieve the next page of files, or empty if there are no more files to return.",
          "type": "string"
        }
      }
    },
    "GoogleDevtoolsArtifactregistryV1beta2File": {
      "id": "GoogleDevtoolsArtifactregistryV1beta2File",
      "description": "Files store content that is potentially associated with Packages or Versions.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the file, for example: `projects/p1/locations/us-central1/repositories/repo1/files/a%2Fb%2Fc.txt`. If the file ID part contains slashes, they are escaped.",
          "type": "string"
        },
        "sizeBytes": {
          "description": "The size of the File in bytes.",
          "type": "string",
          "format": "int64"
        },
        "hashes": {
          "description": "The hashes of the file content.",
          "type": "array",
          "items": {
            "$ref": "Hash"
          }
        },
        "createTime": {
          "description": "Output only. The time when the File was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The time when the File was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "owner": {
          "description": "The name of the Package or Version that owns this file, if any.",
          "type": "string"
        }
      }
    },
    "Hash": {
      "id": "Hash",
      "description": "A hash of file content.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The algorithm used to compute the hash value.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "SHA256 hash.",
            "MD5 hash."
          ],
          "enum": [
            "HASH_TYPE_UNSPECIFIED",
            "SHA256",
            "MD5"
          ]
        },
        "value": {
          "description": "The hash value.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "DownloadFileResponse": {
      "id": "DownloadFileResponse",
      "description": "The response to download a file.",
      "type": "object",
      "properties": {}
    },
    "ListTagsResponse": {
      "id": "ListTagsResponse",
      "description": "The response from listing tags.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "The tags returned.",
          "type": "array",
          "items": {
            "$ref": "Tag"
          }
        },
        "nextPageToken": {
          "description": "The token to retrieve the next page of tags, or empty if there are no more tags to return.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {}
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).",
          "type": "string"
        },
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProjectSettings": {
      "id": "ProjectSettings",
      "description": "The Artifact Registry settings that apply to a Project.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the project's settings. Always of the form: projects/{project-id}/projectSettings In update request: never set In response: always set",
          "type": "string"
        },
        "legacyRedirectionState": {
          "description": "The redirection state of the legacy repositories in this project.",
          "type": "string",
          "enumDescriptions": [
            "No redirection status has been set.",
            "Redirection is disabled.",
            "Redirection is enabled.",
            "Redirection is enabled, and has been finalized so cannot be reverted.",
            "Redirection is enabled and missing images are copied from GCR"
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            true,
            false
          ],
          "enum": [
            "REDIRECTION_STATE_UNSPECIFIED",
            "REDIRECTION_FROM_GCR_IO_DISABLED",
            "REDIRECTION_FROM_GCR_IO_ENABLED",
            "REDIRECTION_FROM_GCR_IO_FINALIZED",
            "REDIRECTION_FROM_GCR_IO_ENABLED_AND_COPYING"
          ]
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents a Google Cloud location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "ImportAptArtifactsResponse": {
      "id": "ImportAptArtifactsResponse",
      "description": "The response message from importing APT artifacts.",
      "type": "object",
      "properties": {
        "aptArtifacts": {
          "description": "The Apt artifacts imported.",
          "type": "array",
          "items": {
            "$ref": "AptArtifact"
          }
        },
        "errors": {
          "description": "Detailed error info for packages that were not imported.",
          "type": "array",
          "items": {
            "$ref": "ImportAptArtifactsErrorInfo"
          }
        }
      }
    },
    "AptArtifact": {
      "id": "AptArtifact",
      "description": "A detailed representation of an Apt artifact. Information in the record is derived from the archive's control file. See https://www.debian.org/doc/debian-policy/ch-controlfields.html",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The Artifact Registry resource name of the artifact.",
          "readOnly": true,
          "type": "string"
        },
        "packageName": {
          "description": "Output only. The Apt package name of the artifact.",
          "readOnly": true,
          "type": "string"
        },
        "packageType": {
          "description": "Output only. An artifact is a binary or source package.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Package type is not specified.",
            "Binary package.",
            "Source package."
          ],
          "enum": [
            "PACKAGE_TYPE_UNSPECIFIED",
            "BINARY",
            "SOURCE"
          ]
        },
        "architecture": {
          "description": "Output only. Operating system architecture of the artifact.",
          "readOnly": true,
          "type": "string"
        },
        "component": {
          "description": "Output only. Repository component of the artifact.",
          "readOnly": true,
          "type": "string"
        },
        "controlFile": {
          "description": "Output only. Contents of the artifact's control metadata file.",
          "readOnly": true,
          "type": "string",
          "format": "byte"
        }
      }
    },
    "ImportAptArtifactsErrorInfo": {
      "id": "ImportAptArtifactsErrorInfo",
      "description": "Error information explaining why a package was not imported.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "description": "Google Cloud Storage location requested.",
          "$ref": "ImportAptArtifactsGcsSource"
        },
        "error": {
          "description": "The detailed error status.",
          "$ref": "Status"
        }
      }
    },
    "ImportYumArtifactsResponse": {
      "id": "ImportYumArtifactsResponse",
      "description": "The response message from importing YUM artifacts.",
      "type": "object",
      "properties": {
        "yumArtifacts": {
          "description": "The yum artifacts imported.",
          "type": "array",
          "items": {
            "$ref": "YumArtifact"
          }
        },
        "errors": {
          "description": "Detailed error info for packages that were not imported.",
          "type": "array",
          "items": {
            "$ref": "ImportYumArtifactsErrorInfo"
          }
        }
      }
    },
    "YumArtifact": {
      "id": "YumArtifact",
      "description": "A detailed representation of a Yum artifact.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The Artifact Registry resource name of the artifact.",
          "readOnly": true,
          "type": "string"
        },
        "packageName": {
          "description": "Output only. The yum package name of the artifact.",
          "readOnly": true,
          "type": "string"
        },
        "packageType": {
          "description": "Output only. An artifact is a binary or source package.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Package type is not specified.",
            "Binary package (.rpm).",
            "Source package (.srpm)."
          ],
          "enum": [
            "PACKAGE_TYPE_UNSPECIFIED",
            "BINARY",
            "SOURCE"
          ]
        },
        "architecture": {
          "description": "Output only. Operating system architecture of the artifact.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ImportYumArtifactsErrorInfo": {
      "id": "ImportYumArtifactsErrorInfo",
      "description": "Error information explaining why a package was not imported.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "description": "Google Cloud Storage location requested.",
          "$ref": "ImportYumArtifactsGcsSource"
        },
        "error": {
          "description": "The detailed error status.",
          "$ref": "Status"
        }
      }
    },
    "UploadAptArtifactResponse": {
      "id": "UploadAptArtifactResponse",
      "description": "The response of the completed artifact upload operation. This response is contained in the Operation and available to users.",
      "type": "object",
      "properties": {
        "aptArtifacts": {
          "description": "The Apt artifacts updated.",
          "type": "array",
          "items": {
            "$ref": "AptArtifact"
          }
        }
      }
    },
    "UploadYumArtifactResponse": {
      "id": "UploadYumArtifactResponse",
      "description": "The response of the completed artifact upload operation. This response is contained in the Operation and available to users.",
      "type": "object",
      "properties": {
        "yumArtifacts": {
          "description": "The Yum artifacts updated.",
          "type": "array",
          "items": {
            "$ref": "YumArtifact"
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Metadata type for longrunning-operations, currently empty.",
      "type": "object",
      "properties": {}
    },
    "ImportAptArtifactsMetadata": {
      "id": "ImportAptArtifactsMetadata",
      "description": "The operation metadata for importing artifacts.",
      "type": "object",
      "properties": {}
    },
    "ImportYumArtifactsMetadata": {
      "id": "ImportYumArtifactsMetadata",
      "description": "The operation metadata for importing artifacts.",
      "type": "object",
      "properties": {}
    },
    "UploadAptArtifactMetadata": {
      "id": "UploadAptArtifactMetadata",
      "description": "The operation metadata for uploading artifacts.",
      "type": "object",
      "properties": {}
    },
    "UploadYumArtifactMetadata": {
      "id": "UploadYumArtifactMetadata",
      "description": "The operation metadata for uploading artifacts.",
      "type": "object",
      "properties": {}
    }
  },
  "batchPath": "batch",
  "protocol": "rest",
  "name": "artifactregistry",
  "ownerName": "Google",
  "ownerDomain": "google.com",
  "kind": "discovery#restDescription"
}

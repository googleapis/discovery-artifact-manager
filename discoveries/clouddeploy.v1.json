{
  "fullyEncodeReservedExpansion": true,
  "protocol": "rest",
  "kind": "discovery#restDescription",
  "version": "v1",
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {}
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {}
    },
    "ListDeliveryPipelinesResponse": {
      "id": "ListDeliveryPipelinesResponse",
      "description": "The response object from `ListDeliveryPipelines`.",
      "type": "object",
      "properties": {
        "deliveryPipelines": {
          "description": "The `DeliveryPipeline` objects.",
          "type": "array",
          "items": {
            "$ref": "DeliveryPipeline"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeliveryPipeline": {
      "id": "DeliveryPipeline",
      "description": "A `DeliveryPipeline` resource in the Cloud Deploy API. A `DeliveryPipeline` defines a pipeline through which a Skaffold configuration can progress.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Optional. Name of the `DeliveryPipeline`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}`. The `deliveryPipeline` component must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`",
          "type": "string"
        },
        "uid": {
          "description": "Output only. Unique identifier of the `DeliveryPipeline`.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Description of the `DeliveryPipeline`. Max length is 255 characters.",
          "type": "string"
        },
        "annotations": {
          "description": "User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be \u003c= 128 bytes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "description": "Output only. Time at which the pipeline was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Most recent time at which the pipeline was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "serialPipeline": {
          "description": "SerialPipeline defines a sequential set of stages for a `DeliveryPipeline`.",
          "$ref": "SerialPipeline"
        },
        "condition": {
          "description": "Output only. Information around the state of the Delivery Pipeline.",
          "readOnly": true,
          "$ref": "PipelineCondition"
        },
        "etag": {
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "suspended": {
          "description": "When suspended, no new releases or rollouts can be created, but in-progress ones will complete.",
          "type": "boolean"
        }
      }
    },
    "SerialPipeline": {
      "id": "SerialPipeline",
      "description": "SerialPipeline defines a sequential set of stages for a `DeliveryPipeline`.",
      "type": "object",
      "properties": {
        "stages": {
          "description": "Each stage specifies configuration for a `Target`. The ordering of this list defines the promotion flow.",
          "type": "array",
          "items": {
            "$ref": "Stage"
          }
        }
      }
    },
    "Stage": {
      "id": "Stage",
      "description": "Stage specifies a location to which to deploy.",
      "type": "object",
      "properties": {
        "targetId": {
          "description": "The target_id to which this stage points. This field refers exclusively to the last segment of a target name. For example, this field would just be `my-target` (rather than `projects/project/locations/location/targets/my-target`). The location of the `Target` is inferred to be the same as the location of the `DeliveryPipeline` that contains this `Stage`.",
          "type": "string"
        },
        "profiles": {
          "description": "Skaffold profiles to use when rendering the manifest for this stage's `Target`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "strategy": {
          "description": "Optional. The strategy to use for a `Rollout` to this stage.",
          "$ref": "Strategy"
        },
        "deployParameters": {
          "description": "Optional. The deploy parameters to use for the target in this stage.",
          "type": "array",
          "items": {
            "$ref": "DeployParameters"
          }
        }
      }
    },
    "Strategy": {
      "id": "Strategy",
      "description": "Strategy contains deployment strategy information.",
      "type": "object",
      "properties": {
        "standard": {
          "description": "Standard deployment strategy executes a single deploy and allows verifying the deployment.",
          "$ref": "Standard"
        },
        "canary": {
          "description": "Canary deployment strategy provides progressive percentage based deployments to a Target.",
          "$ref": "Canary"
        }
      }
    },
    "Standard": {
      "id": "Standard",
      "description": "Standard represents the standard deployment strategy.",
      "type": "object",
      "properties": {
        "verify": {
          "description": "Whether to verify a deployment.",
          "type": "boolean"
        },
        "predeploy": {
          "description": "Optional. Configuration for the predeploy job. If this is not configured, predeploy job will not be present.",
          "$ref": "Predeploy"
        },
        "postdeploy": {
          "description": "Optional. Configuration for the postdeploy job. If this is not configured, postdeploy job will not be present.",
          "$ref": "Postdeploy"
        }
      }
    },
    "Predeploy": {
      "id": "Predeploy",
      "description": "Predeploy contains the predeploy job configuration information.",
      "type": "object",
      "properties": {
        "actions": {
          "description": "Optional. A sequence of Skaffold custom actions to invoke during execution of the predeploy job.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Postdeploy": {
      "id": "Postdeploy",
      "description": "Postdeploy contains the postdeploy job configuration information.",
      "type": "object",
      "properties": {
        "actions": {
          "description": "Optional. A sequence of Skaffold custom actions to invoke during execution of the postdeploy job.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Canary": {
      "id": "Canary",
      "description": "Canary represents the canary deployment strategy.",
      "type": "object",
      "properties": {
        "runtimeConfig": {
          "description": "Optional. Runtime specific configurations for the deployment strategy. The runtime configuration is used to determine how Cloud Deploy will split traffic to enable a progressive deployment.",
          "$ref": "RuntimeConfig"
        },
        "canaryDeployment": {
          "description": "Configures the progressive based deployment for a Target.",
          "$ref": "CanaryDeployment"
        },
        "customCanaryDeployment": {
          "description": "Configures the progressive based deployment for a Target, but allows customizing at the phase level where a phase represents each of the percentage deployments.",
          "$ref": "CustomCanaryDeployment"
        }
      }
    },
    "RuntimeConfig": {
      "id": "RuntimeConfig",
      "description": "RuntimeConfig contains the runtime specific configurations for a deployment strategy.",
      "type": "object",
      "properties": {
        "kubernetes": {
          "description": "Kubernetes runtime configuration.",
          "$ref": "KubernetesConfig"
        },
        "cloudRun": {
          "description": "Cloud Run runtime configuration.",
          "$ref": "CloudRunConfig"
        }
      }
    },
    "KubernetesConfig": {
      "id": "KubernetesConfig",
      "description": "KubernetesConfig contains the Kubernetes runtime configuration.",
      "type": "object",
      "properties": {
        "gatewayServiceMesh": {
          "description": "Kubernetes Gateway API service mesh configuration.",
          "$ref": "GatewayServiceMesh"
        },
        "serviceNetworking": {
          "description": "Kubernetes Service networking configuration.",
          "$ref": "ServiceNetworking"
        }
      }
    },
    "GatewayServiceMesh": {
      "id": "GatewayServiceMesh",
      "description": "Information about the Kubernetes Gateway API service mesh configuration.",
      "type": "object",
      "properties": {
        "httpRoute": {
          "description": "Required. Name of the Gateway API HTTPRoute.",
          "type": "string"
        },
        "service": {
          "description": "Required. Name of the Kubernetes Service.",
          "type": "string"
        },
        "deployment": {
          "description": "Required. Name of the Kubernetes Deployment whose traffic is managed by the specified HTTPRoute and Service.",
          "type": "string"
        },
        "routeUpdateWaitTime": {
          "description": "Optional. The time to wait for route updates to propagate. The maximum configurable time is 3 hours, in seconds format. If unspecified, there is no wait time.",
          "type": "string",
          "format": "google-duration"
        },
        "stableCutbackDuration": {
          "description": "Optional. The amount of time to migrate traffic back from the canary Service to the original Service during the stable phase deployment. If specified, must be between 15s and 3600s. If unspecified, there is no cutback time.",
          "type": "string",
          "format": "google-duration"
        }
      }
    },
    "ServiceNetworking": {
      "id": "ServiceNetworking",
      "description": "Information about the Kubernetes Service networking configuration.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Required. Name of the Kubernetes Service.",
          "type": "string"
        },
        "deployment": {
          "description": "Required. Name of the Kubernetes Deployment whose traffic is managed by the specified Service.",
          "type": "string"
        },
        "disablePodOverprovisioning": {
          "description": "Optional. Whether to disable Pod overprovisioning. If Pod overprovisioning is disabled then Cloud Deploy will limit the number of total Pods used for the deployment strategy to the number of Pods the Deployment has on the cluster.",
          "type": "boolean"
        }
      }
    },
    "CloudRunConfig": {
      "id": "CloudRunConfig",
      "description": "CloudRunConfig contains the Cloud Run runtime configuration.",
      "type": "object",
      "properties": {
        "automaticTrafficControl": {
          "description": "Whether Cloud Deploy should update the traffic stanza in a Cloud Run Service on the user's behalf to facilitate traffic splitting. This is required to be true for CanaryDeployments, but optional for CustomCanaryDeployments.",
          "type": "boolean"
        },
        "canaryRevisionTags": {
          "description": "Optional. A list of tags that are added to the canary revision while the canary phase is in progress.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "priorRevisionTags": {
          "description": "Optional. A list of tags that are added to the prior revision while the canary phase is in progress.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "stableRevisionTags": {
          "description": "Optional. A list of tags that are added to the final stable revision when the stable phase is applied.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CanaryDeployment": {
      "id": "CanaryDeployment",
      "description": "CanaryDeployment represents the canary deployment configuration",
      "type": "object",
      "properties": {
        "percentages": {
          "description": "Required. The percentage based deployments that will occur as a part of a `Rollout`. List is expected in ascending order and each integer n is 0 \u003c= n \u003c 100. If the GatewayServiceMesh is configured for Kubernetes, then the range for n is 0 \u003c= n \u003c= 100.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "verify": {
          "description": "Whether to run verify tests after each percentage deployment.",
          "type": "boolean"
        },
        "predeploy": {
          "description": "Optional. Configuration for the predeploy job of the first phase. If this is not configured, there will be no predeploy job for this phase.",
          "$ref": "Predeploy"
        },
        "postdeploy": {
          "description": "Optional. Configuration for the postdeploy job of the last phase. If this is not configured, there will be no postdeploy job for this phase.",
          "$ref": "Postdeploy"
        }
      }
    },
    "CustomCanaryDeployment": {
      "id": "CustomCanaryDeployment",
      "description": "CustomCanaryDeployment represents the custom canary deployment configuration.",
      "type": "object",
      "properties": {
        "phaseConfigs": {
          "description": "Required. Configuration for each phase in the canary deployment in the order executed.",
          "type": "array",
          "items": {
            "$ref": "PhaseConfig"
          }
        }
      }
    },
    "PhaseConfig": {
      "id": "PhaseConfig",
      "description": "PhaseConfig represents the configuration for a phase in the custom canary deployment.",
      "type": "object",
      "properties": {
        "phaseId": {
          "description": "Required. The ID to assign to the `Rollout` phase. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.",
          "type": "string"
        },
        "percentage": {
          "description": "Required. Percentage deployment for the phase.",
          "type": "integer",
          "format": "int32"
        },
        "profiles": {
          "description": "Skaffold profiles to use when rendering the manifest for this phase. These are in addition to the profiles list specified in the `DeliveryPipeline` stage.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "verify": {
          "description": "Whether to run verify tests after the deployment.",
          "type": "boolean"
        },
        "predeploy": {
          "description": "Optional. Configuration for the predeploy job of this phase. If this is not configured, there will be no predeploy job for this phase.",
          "$ref": "Predeploy"
        },
        "postdeploy": {
          "description": "Optional. Configuration for the postdeploy job of this phase. If this is not configured, there will be no postdeploy job for this phase.",
          "$ref": "Postdeploy"
        }
      }
    },
    "DeployParameters": {
      "id": "DeployParameters",
      "description": "DeployParameters contains deploy parameters information.",
      "type": "object",
      "properties": {
        "values": {
          "description": "Required. Values are deploy parameters in key-value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "matchTargetLabels": {
          "description": "Optional. Deploy parameters are applied to targets with match labels. If unspecified, deploy parameters are applied to all targets (including child targets of a multi-target).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PipelineCondition": {
      "id": "PipelineCondition",
      "description": "PipelineCondition contains all conditions relevant to a Delivery Pipeline.",
      "type": "object",
      "properties": {
        "pipelineReadyCondition": {
          "description": "Details around the Pipeline's overall status.",
          "$ref": "PipelineReadyCondition"
        },
        "targetsPresentCondition": {
          "description": "Details around targets enumerated in the pipeline.",
          "$ref": "TargetsPresentCondition"
        },
        "targetsTypeCondition": {
          "description": "Details on the whether the targets enumerated in the pipeline are of the same type.",
          "$ref": "TargetsTypeCondition"
        }
      }
    },
    "PipelineReadyCondition": {
      "id": "PipelineReadyCondition",
      "description": "PipelineReadyCondition contains information around the status of the Pipeline.",
      "type": "object",
      "properties": {
        "status": {
          "description": "True if the Pipeline is in a valid state. Otherwise at least one condition in `PipelineCondition` is in an invalid state. Iterate over those conditions and see which condition(s) has status = false to find out what is wrong with the Pipeline.",
          "type": "boolean"
        },
        "updateTime": {
          "description": "Last time the condition was updated.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "TargetsPresentCondition": {
      "id": "TargetsPresentCondition",
      "description": "`TargetsPresentCondition` contains information on any Targets referenced in the Delivery Pipeline that do not actually exist.",
      "type": "object",
      "properties": {
        "status": {
          "description": "True if there aren't any missing Targets.",
          "type": "boolean"
        },
        "missingTargets": {
          "description": "The list of Target names that do not exist. For example, `projects/{project_id}/locations/{location_name}/targets/{target_name}`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updateTime": {
          "description": "Last time the condition was updated.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "TargetsTypeCondition": {
      "id": "TargetsTypeCondition",
      "description": "TargetsTypeCondition contains information on whether the Targets defined in the Delivery Pipeline are of the same type.",
      "type": "object",
      "properties": {
        "status": {
          "description": "True if the targets are all a comparable type. For example this is true if all targets are GKE clusters. This is false if some targets are Cloud Run targets and others are GKE clusters.",
          "type": "boolean"
        },
        "errorDetails": {
          "description": "Human readable error message.",
          "type": "string"
        }
      }
    },
    "ListTargetsResponse": {
      "id": "ListTargetsResponse",
      "description": "The response object from `ListTargets`.",
      "type": "object",
      "properties": {
        "targets": {
          "description": "The `Target` objects.",
          "type": "array",
          "items": {
            "$ref": "Target"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Target": {
      "id": "Target",
      "description": "A `Target` resource in the Cloud Deploy API. A `Target` defines a location to which a Skaffold configuration can be deployed.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Optional. Name of the `Target`. Format is `projects/{project}/locations/{location}/targets/{target}`. The `target` component must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`",
          "type": "string"
        },
        "targetId": {
          "description": "Output only. Resource id of the `Target`.",
          "readOnly": true,
          "type": "string"
        },
        "uid": {
          "description": "Output only. Unique identifier of the `Target`.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the `Target`. Max length is 255 characters.",
          "type": "string"
        },
        "annotations": {
          "description": "Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be \u003c= 128 bytes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "requireApproval": {
          "description": "Optional. Whether or not the `Target` requires approval.",
          "type": "boolean"
        },
        "createTime": {
          "description": "Output only. Time at which the `Target` was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Most recent time at which the `Target` was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "gke": {
          "description": "Optional. Information specifying a GKE Cluster.",
          "$ref": "GkeCluster"
        },
        "anthosCluster": {
          "description": "Optional. Information specifying an Anthos Cluster.",
          "$ref": "AnthosCluster"
        },
        "run": {
          "description": "Optional. Information specifying a Cloud Run deployment target.",
          "$ref": "CloudRunLocation"
        },
        "multiTarget": {
          "description": "Optional. Information specifying a multiTarget.",
          "$ref": "MultiTarget"
        },
        "customTarget": {
          "description": "Optional. Information specifying a Custom Target.",
          "$ref": "CustomTarget"
        },
        "etag": {
          "description": "Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "executionConfigs": {
          "description": "Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used in a single configuration; using the same value multiple times is an error. When one or more configurations are specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are specified, execution will use the default specified in `DefaultPool`.",
          "type": "array",
          "items": {
            "$ref": "ExecutionConfig"
          }
        },
        "deployParameters": {
          "description": "Optional. The deploy parameters to use for this target.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GkeCluster": {
      "id": "GkeCluster",
      "description": "Information specifying a GKE Cluster.",
      "type": "object",
      "properties": {
        "cluster": {
          "description": "Optional. Information specifying a GKE Cluster. Format is `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}`.",
          "type": "string"
        },
        "internalIp": {
          "description": "Optional. If true, `cluster` is accessed using the private IP address of the control plane endpoint. Otherwise, the default IP address of the control plane endpoint is used. The default IP address is the private IP address for clusters with private control-plane endpoints and the public IP address otherwise. Only specify this option when `cluster` is a [private GKE cluster](https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept).",
          "type": "boolean"
        },
        "proxyUrl": {
          "description": "Optional. If set, used to configure a [proxy](https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/#proxy) to the Kubernetes server.",
          "type": "string"
        }
      }
    },
    "AnthosCluster": {
      "id": "AnthosCluster",
      "description": "Information specifying an Anthos Cluster.",
      "type": "object",
      "properties": {
        "membership": {
          "description": "Optional. Membership of the GKE Hub-registered cluster to which to apply the Skaffold configuration. Format is `projects/{project}/locations/{location}/memberships/{membership_name}`.",
          "type": "string"
        }
      }
    },
    "CloudRunLocation": {
      "id": "CloudRunLocation",
      "description": "Information specifying where to deploy a Cloud Run Service.",
      "type": "object",
      "properties": {
        "location": {
          "description": "Required. The location for the Cloud Run Service. Format must be `projects/{project}/locations/{location}`.",
          "type": "string"
        }
      }
    },
    "MultiTarget": {
      "id": "MultiTarget",
      "description": "Information specifying a multiTarget.",
      "type": "object",
      "properties": {
        "targetIds": {
          "description": "Required. The target_ids of this multiTarget.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CustomTarget": {
      "id": "CustomTarget",
      "description": "Information specifying a Custom Target.",
      "type": "object",
      "properties": {
        "customTargetType": {
          "description": "Required. The name of the CustomTargetType. Format must be `projects/{project}/locations/{location}/customTargetTypes/{custom_target_type}`.",
          "type": "string"
        }
      }
    },
    "ExecutionConfig": {
      "id": "ExecutionConfig",
      "description": "Configuration of the environment to use when calling Skaffold.",
      "type": "object",
      "properties": {
        "usages": {
          "description": "Required. Usages when this configuration should be applied.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Default value. This value is unused.",
              "Use for rendering.",
              "Use for deploying and deployment hooks.",
              "Use for deployment verification.",
              "Use for predeploy job execution.",
              "Use for postdeploy job execution."
            ],
            "enum": [
              "EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED",
              "RENDER",
              "DEPLOY",
              "VERIFY",
              "PREDEPLOY",
              "POSTDEPLOY"
            ]
          }
        },
        "defaultPool": {
          "description": "Optional. Use default Cloud Build pool.",
          "$ref": "DefaultPool"
        },
        "privatePool": {
          "description": "Optional. Use private Cloud Build pool.",
          "$ref": "PrivatePool"
        },
        "workerPool": {
          "description": "Optional. The resource name of the `WorkerPool`, with the format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. If this optional field is unspecified, the default Cloud Build pool will be used.",
          "type": "string"
        },
        "serviceAccount": {
          "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) is used.",
          "type": "string"
        },
        "artifactStorage": {
          "description": "Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.",
          "type": "string"
        },
        "executionTimeout": {
          "description": "Optional. Execution timeout for a Cloud Build Execution. This must be between 10m and 24h in seconds format. If unspecified, a default timeout of 1h is used.",
          "type": "string",
          "format": "google-duration"
        },
        "verbose": {
          "description": "Optional. If true, additional logging will be enabled when running builds in this execution environment.",
          "type": "boolean"
        }
      }
    },
    "DefaultPool": {
      "id": "DefaultPool",
      "description": "Execution using the default Cloud Build pool.",
      "type": "object",
      "properties": {
        "serviceAccount": {
          "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) will be used.",
          "type": "string"
        },
        "artifactStorage": {
          "description": "Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.",
          "type": "string"
        }
      }
    },
    "PrivatePool": {
      "id": "PrivatePool",
      "description": "Execution using a private Cloud Build pool.",
      "type": "object",
      "properties": {
        "workerPool": {
          "description": "Required. Resource name of the Cloud Build worker pool to use. The format is `projects/{project}/locations/{location}/workerPools/{pool}`.",
          "type": "string"
        },
        "serviceAccount": {
          "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) will be used.",
          "type": "string"
        },
        "artifactStorage": {
          "description": "Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.",
          "type": "string"
        }
      }
    },
    "RollbackTargetRequest": {
      "id": "RollbackTargetRequest",
      "description": "The request object for `RollbackTarget`.",
      "type": "object",
      "properties": {
        "targetId": {
          "description": "Required. ID of the `Target` that is being rolled back.",
          "type": "string"
        },
        "rolloutId": {
          "description": "Required. ID of the rollback `Rollout` to create.",
          "type": "string"
        },
        "releaseId": {
          "description": "Optional. ID of the `Release` to roll back to. If this isn't specified, the previous successful `Rollout` to the specified target will be used to determine the `Release`.",
          "type": "string"
        },
        "rolloutToRollBack": {
          "description": "Optional. If provided, this must be the latest `Rollout` that is on the `Target`.",
          "type": "string"
        },
        "rollbackConfig": {
          "description": "Optional. Configs for the rollback `Rollout`.",
          "$ref": "RollbackTargetConfig"
        },
        "validateOnly": {
          "description": "Optional. If set to true, the request is validated and the user is provided with a `RollbackTargetResponse`.",
          "type": "boolean"
        }
      }
    },
    "RollbackTargetConfig": {
      "id": "RollbackTargetConfig",
      "description": "Configs for the Rollback rollout.",
      "type": "object",
      "properties": {
        "rollout": {
          "description": "Optional. The rollback `Rollout` to create.",
          "$ref": "Rollout"
        },
        "startingPhaseId": {
          "description": "Optional. The starting phase ID for the `Rollout`. If unspecified, the `Rollout` will start in the stable phase.",
          "type": "string"
        }
      }
    },
    "Rollout": {
      "id": "Rollout",
      "description": "A `Rollout` resource in the Cloud Deploy API. A `Rollout` contains information around a specific deployment to a `Target`.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Optional. Name of the `Rollout`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`. The `rollout` component must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`",
          "type": "string"
        },
        "uid": {
          "description": "Output only. Unique identifier of the `Rollout`.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Description of the `Rollout` for user purposes. Max length is 255 characters.",
          "type": "string"
        },
        "annotations": {
          "description": "User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be \u003c= 128 bytes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "description": "Output only. Time at which the `Rollout` was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "approveTime": {
          "description": "Output only. Time at which the `Rollout` was approved.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "enqueueTime": {
          "description": "Output only. Time at which the `Rollout` was enqueued.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "deployStartTime": {
          "description": "Output only. Time at which the `Rollout` started deploying.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "deployEndTime": {
          "description": "Output only. Time at which the `Rollout` finished deploying.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "targetId": {
          "description": "Required. The ID of Target to which this `Rollout` is deploying.",
          "type": "string"
        },
        "approvalState": {
          "description": "Output only. Approval state of the `Rollout`.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The `Rollout` has an unspecified approval state.",
            "The `Rollout` requires approval.",
            "The `Rollout` does not require approval.",
            "The `Rollout` has been approved.",
            "The `Rollout` has been rejected."
          ],
          "enum": [
            "APPROVAL_STATE_UNSPECIFIED",
            "NEEDS_APPROVAL",
            "DOES_NOT_NEED_APPROVAL",
            "APPROVED",
            "REJECTED"
          ]
        },
        "state": {
          "description": "Output only. Current state of the `Rollout`.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The `Rollout` has an unspecified state.",
            "The `Rollout` has completed successfully.",
            "The `Rollout` has failed.",
            "The `Rollout` is being deployed.",
            "The `Rollout` needs approval.",
            "An approver rejected the `Rollout`.",
            "The `Rollout` is waiting for an earlier Rollout(s) to complete on this `Target`.",
            "The `Rollout` is waiting for the `Release` to be fully rendered.",
            "The `Rollout` is in the process of being cancelled.",
            "The `Rollout` has been cancelled.",
            "The `Rollout` is halted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "SUCCEEDED",
            "FAILED",
            "IN_PROGRESS",
            "PENDING_APPROVAL",
            "APPROVAL_REJECTED",
            "PENDING",
            "PENDING_RELEASE",
            "CANCELLING",
            "CANCELLED",
            "HALTED"
          ]
        },
        "failureReason": {
          "description": "Output only. Additional information about the rollout failure, if available.",
          "readOnly": true,
          "type": "string"
        },
        "deployingBuild": {
          "description": "Output only. The resource name of the Cloud Build `Build` object that is used to deploy the Rollout. Format is `projects/{project}/locations/{location}/builds/{build}`.",
          "readOnly": true,
          "type": "string"
        },
        "etag": {
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "deployFailureCause": {
          "description": "Output only. The reason this rollout failed. This will always be unspecified while the rollout is in progress.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No reason for failure is specified.",
            "Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).",
            "The deploy operation did not complete successfully; check Cloud Build logs.",
            "Deployment did not complete within the alloted time.",
            "Release is in a failed state.",
            "Release is abandoned.",
            "No Skaffold verify configuration was found.",
            "Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details.",
            "A Rollout operation had a feature configured that is not supported."
          ],
          "enum": [
            "FAILURE_CAUSE_UNSPECIFIED",
            "CLOUD_BUILD_UNAVAILABLE",
            "EXECUTION_FAILED",
            "DEADLINE_EXCEEDED",
            "RELEASE_FAILED",
            "RELEASE_ABANDONED",
            "VERIFICATION_CONFIG_NOT_FOUND",
            "CLOUD_BUILD_REQUEST_FAILED",
            "OPERATION_FEATURE_NOT_SUPPORTED"
          ]
        },
        "phases": {
          "description": "Output only. The phases that represent the workflows of this `Rollout`.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Phase"
          }
        },
        "metadata": {
          "description": "Output only. Metadata contains information about the rollout.",
          "readOnly": true,
          "$ref": "Metadata"
        },
        "controllerRollout": {
          "description": "Output only. Name of the `ControllerRollout`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.",
          "readOnly": true,
          "type": "string"
        },
        "rollbackOfRollout": {
          "description": "Output only. Name of the `Rollout` that is rolled back by this `Rollout`. Empty if this `Rollout` wasn't created as a rollback.",
          "readOnly": true,
          "type": "string"
        },
        "rolledBackByRollouts": {
          "description": "Output only. Names of `Rollouts` that rolled back this `Rollout`.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Phase": {
      "id": "Phase",
      "description": "Phase represents a collection of jobs that are logically grouped together for a `Rollout`.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Output only. The ID of the Phase.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "Output only. Current state of the Phase.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The Phase has an unspecified state.",
            "The Phase is waiting for an earlier Phase(s) to complete.",
            "The Phase is in progress.",
            "The Phase has succeeded.",
            "The Phase has failed.",
            "The Phase was aborted.",
            "The Phase was skipped."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "IN_PROGRESS",
            "SUCCEEDED",
            "FAILED",
            "ABORTED",
            "SKIPPED"
          ]
        },
        "skipMessage": {
          "description": "Output only. Additional information on why the Phase was skipped, if available.",
          "readOnly": true,
          "type": "string"
        },
        "deploymentJobs": {
          "description": "Output only. Deployment job composition.",
          "readOnly": true,
          "$ref": "DeploymentJobs"
        },
        "childRolloutJobs": {
          "description": "Output only. ChildRollout job composition.",
          "readOnly": true,
          "$ref": "ChildRolloutJobs"
        }
      }
    },
    "DeploymentJobs": {
      "id": "DeploymentJobs",
      "description": "Deployment job composition.",
      "type": "object",
      "properties": {
        "deployJob": {
          "description": "Output only. The deploy Job. This is the deploy job in the phase.",
          "readOnly": true,
          "$ref": "Job"
        },
        "verifyJob": {
          "description": "Output only. The verify Job. Runs after a deploy if the deploy succeeds.",
          "readOnly": true,
          "$ref": "Job"
        },
        "predeployJob": {
          "description": "Output only. The predeploy Job, which is the first job on the phase.",
          "readOnly": true,
          "$ref": "Job"
        },
        "postdeployJob": {
          "description": "Output only. The postdeploy Job, which is the last job on the phase.",
          "readOnly": true,
          "$ref": "Job"
        }
      }
    },
    "Job": {
      "id": "Job",
      "description": "Job represents an operation for a `Rollout`.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Output only. The ID of the Job.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "Output only. The current state of the Job.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The Job has an unspecified state.",
            "The Job is waiting for an earlier Phase(s) or Job(s) to complete.",
            "The Job is disabled.",
            "The Job is in progress.",
            "The Job succeeded.",
            "The Job failed.",
            "The Job was aborted.",
            "The Job was skipped.",
            "The Job was ignored."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "DISABLED",
            "IN_PROGRESS",
            "SUCCEEDED",
            "FAILED",
            "ABORTED",
            "SKIPPED",
            "IGNORED"
          ]
        },
        "skipMessage": {
          "description": "Output only. Additional information on why the Job was skipped, if available.",
          "readOnly": true,
          "type": "string"
        },
        "jobRun": {
          "description": "Output only. The name of the `JobRun` responsible for the most recent invocation of this Job.",
          "readOnly": true,
          "type": "string"
        },
        "deployJob": {
          "description": "Output only. A deploy Job.",
          "readOnly": true,
          "$ref": "DeployJob"
        },
        "verifyJob": {
          "description": "Output only. A verify Job.",
          "readOnly": true,
          "$ref": "VerifyJob"
        },
        "predeployJob": {
          "description": "Output only. A predeploy Job.",
          "readOnly": true,
          "$ref": "PredeployJob"
        },
        "postdeployJob": {
          "description": "Output only. A postdeploy Job.",
          "readOnly": true,
          "$ref": "PostdeployJob"
        },
        "createChildRolloutJob": {
          "description": "Output only. A createChildRollout Job.",
          "readOnly": true,
          "$ref": "CreateChildRolloutJob"
        },
        "advanceChildRolloutJob": {
          "description": "Output only. An advanceChildRollout Job.",
          "readOnly": true,
          "$ref": "AdvanceChildRolloutJob"
        }
      }
    },
    "DeployJob": {
      "id": "DeployJob",
      "description": "A deploy Job.",
      "type": "object",
      "properties": {}
    },
    "VerifyJob": {
      "id": "VerifyJob",
      "description": "A verify Job.",
      "type": "object",
      "properties": {}
    },
    "PredeployJob": {
      "id": "PredeployJob",
      "description": "A predeploy Job.",
      "type": "object",
      "properties": {
        "actions": {
          "description": "Output only. The custom actions that the predeploy Job executes.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PostdeployJob": {
      "id": "PostdeployJob",
      "description": "A postdeploy Job.",
      "type": "object",
      "properties": {
        "actions": {
          "description": "Output only. The custom actions that the postdeploy Job executes.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CreateChildRolloutJob": {
      "id": "CreateChildRolloutJob",
      "description": "A createChildRollout Job.",
      "type": "object",
      "properties": {}
    },
    "AdvanceChildRolloutJob": {
      "id": "AdvanceChildRolloutJob",
      "description": "An advanceChildRollout Job.",
      "type": "object",
      "properties": {}
    },
    "ChildRolloutJobs": {
      "id": "ChildRolloutJobs",
      "description": "ChildRollouts job composition",
      "type": "object",
      "properties": {
        "createRolloutJobs": {
          "description": "Output only. List of CreateChildRolloutJobs",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Job"
          }
        },
        "advanceRolloutJobs": {
          "description": "Output only. List of AdvanceChildRolloutJobs",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Job"
          }
        }
      }
    },
    "Metadata": {
      "id": "Metadata",
      "description": "Metadata includes information associated with a `Rollout`.",
      "type": "object",
      "properties": {
        "cloudRun": {
          "description": "Output only. The name of the Cloud Run Service that is associated with a `Rollout`.",
          "readOnly": true,
          "$ref": "CloudRunMetadata"
        },
        "automation": {
          "description": "Output only. AutomationRolloutMetadata contains the information about the interactions between Automation service and this rollout.",
          "readOnly": true,
          "$ref": "AutomationRolloutMetadata"
        },
        "custom": {
          "description": "Output only. Custom metadata provided by user-defined `Rollout` operations.",
          "readOnly": true,
          "$ref": "CustomMetadata"
        }
      }
    },
    "CloudRunMetadata": {
      "id": "CloudRunMetadata",
      "description": "CloudRunMetadata contains information from a Cloud Run deployment.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Output only. The name of the Cloud Run Service that is associated with a `Rollout`. Format is `projects/{project}/locations/{location}/services/{service}`.",
          "readOnly": true,
          "type": "string"
        },
        "serviceUrls": {
          "description": "Output only. The Cloud Run Service urls that are associated with a `Rollout`.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "revision": {
          "description": "Output only. The Cloud Run Revision id associated with a `Rollout`.",
          "readOnly": true,
          "type": "string"
        },
        "job": {
          "description": "Output only. The name of the Cloud Run job that is associated with a `Rollout`. Format is `projects/{project}/locations/{location}/jobs/{job_name}`.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "AutomationRolloutMetadata": {
      "id": "AutomationRolloutMetadata",
      "description": "AutomationRolloutMetadata contains Automation-related actions that were performed on a rollout.",
      "type": "object",
      "properties": {
        "promoteAutomationRun": {
          "description": "Output only. The name of the AutomationRun initiated by a promote release rule.",
          "readOnly": true,
          "type": "string"
        },
        "advanceAutomationRuns": {
          "description": "Output only. The names of the AutomationRuns initiated by an advance rollout rule.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "repairAutomationRuns": {
          "description": "Output only. The names of the AutomationRuns initiated by a repair rollout rule.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CustomMetadata": {
      "id": "CustomMetadata",
      "description": "CustomMetadata contains information from a user-defined operation.",
      "type": "object",
      "properties": {
        "values": {
          "description": "Output only. Key-value pairs provided by the user-defined operation.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RollbackTargetResponse": {
      "id": "RollbackTargetResponse",
      "description": "The response object from `RollbackTarget`.",
      "type": "object",
      "properties": {
        "rollbackConfig": {
          "description": "The config of the rollback `Rollout` created or will be created.",
          "$ref": "RollbackTargetConfig"
        }
      }
    },
    "ListCustomTargetTypesResponse": {
      "id": "ListCustomTargetTypesResponse",
      "description": "The response object from `ListCustomTargetTypes.`",
      "type": "object",
      "properties": {
        "customTargetTypes": {
          "description": "The `CustomTargetType` objects.",
          "type": "array",
          "items": {
            "$ref": "CustomTargetType"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CustomTargetType": {
      "id": "CustomTargetType",
      "description": "A `CustomTargetType` resource in the Cloud Deploy API. A `CustomTargetType` defines a type of custom target that can be referenced in a `Target` in order to facilitate deploying to other systems besides the supported runtimes.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Optional. Name of the `CustomTargetType`. Format is `projects/{project}/locations/{location}/customTargetTypes/{customTargetType}`. The `customTargetType` component must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`",
          "type": "string"
        },
        "customTargetTypeId": {
          "description": "Output only. Resource id of the `CustomTargetType`.",
          "readOnly": true,
          "type": "string"
        },
        "uid": {
          "description": "Output only. Unique identifier of the `CustomTargetType`.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the `CustomTargetType`. Max length is 255 characters.",
          "type": "string"
        },
        "annotations": {
          "description": "Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be \u003c= 128 bytes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "description": "Output only. Time at which the `CustomTargetType` was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Most recent time at which the `CustomTargetType` was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "etag": {
          "description": "Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "customActions": {
          "description": "Configures render and deploy for the `CustomTargetType` using Skaffold custom actions.",
          "$ref": "CustomTargetSkaffoldActions"
        }
      }
    },
    "CustomTargetSkaffoldActions": {
      "id": "CustomTargetSkaffoldActions",
      "description": "CustomTargetSkaffoldActions represents the `CustomTargetType` configuration using Skaffold custom actions.",
      "type": "object",
      "properties": {
        "renderAction": {
          "description": "Optional. The Skaffold custom action responsible for render operations. If not provided then Cloud Deploy will perform the render operations via `skaffold render`.",
          "type": "string"
        },
        "deployAction": {
          "description": "Required. The Skaffold custom action responsible for deploy operations.",
          "type": "string"
        },
        "includeSkaffoldModules": {
          "description": "Optional. List of Skaffold modules Cloud Deploy will include in the Skaffold Config as required before performing diagnose.",
          "type": "array",
          "items": {
            "$ref": "SkaffoldModules"
          }
        }
      }
    },
    "SkaffoldModules": {
      "id": "SkaffoldModules",
      "description": "Skaffold Config modules and their remote source.",
      "type": "object",
      "properties": {
        "configs": {
          "description": "Optional. The Skaffold Config modules to use from the specified source.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "git": {
          "description": "Remote git repository containing the Skaffold Config modules.",
          "$ref": "SkaffoldGitSource"
        },
        "googleCloudStorage": {
          "description": "Cloud Storage bucket containing the Skaffold Config modules.",
          "$ref": "SkaffoldGCSSource"
        },
        "googleCloudBuildRepo": {
          "description": "Cloud Build V2 repository containing the Skaffold Config modules.",
          "$ref": "SkaffoldGCBRepoSource"
        }
      }
    },
    "SkaffoldGitSource": {
      "id": "SkaffoldGitSource",
      "description": "Git repository containing Skaffold Config modules.",
      "type": "object",
      "properties": {
        "repo": {
          "description": "Required. Git repository the package should be cloned from.",
          "type": "string"
        },
        "path": {
          "description": "Optional. Relative path from the repository root to the Skaffold file.",
          "type": "string"
        },
        "ref": {
          "description": "Optional. Git branch or tag to use when cloning the repository.",
          "type": "string"
        }
      }
    },
    "SkaffoldGCSSource": {
      "id": "SkaffoldGCSSource",
      "description": "Cloud Storage bucket containing Skaffold Config modules.",
      "type": "object",
      "properties": {
        "source": {
          "description": "Required. Cloud Storage source paths to copy recursively. For example, providing \"gs://my-bucket/dir/configs/*\" will result in Skaffold copying all files within the \"dir/configs\" directory in the bucket \"my-bucket\".",
          "type": "string"
        },
        "path": {
          "description": "Optional. Relative path from the source to the Skaffold file.",
          "type": "string"
        }
      }
    },
    "SkaffoldGCBRepoSource": {
      "id": "SkaffoldGCBRepoSource",
      "description": "Cloud Build V2 Repository containing Skaffold Configs.",
      "type": "object",
      "properties": {
        "repository": {
          "description": "Required. Name of the Cloud Build V2 Repository. Format is projects/{project}/locations/{location}/connections/{connection}/repositories/{repository}.",
          "type": "string"
        },
        "path": {
          "description": "Optional. Relative path from the repository root to the Skaffold Config file.",
          "type": "string"
        },
        "ref": {
          "description": "Optional. Branch or tag to use when cloning the repository.",
          "type": "string"
        }
      }
    },
    "ListReleasesResponse": {
      "id": "ListReleasesResponse",
      "description": "The response object from `ListReleases`.",
      "type": "object",
      "properties": {
        "releases": {
          "description": "The `Release` objects.",
          "type": "array",
          "items": {
            "$ref": "Release"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Release": {
      "id": "Release",
      "description": "A `Release` resource in the Cloud Deploy API. A `Release` defines a specific Skaffold configuration instance that can be deployed.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Optional. Name of the `Release`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}`. The `release` component must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`",
          "type": "string"
        },
        "uid": {
          "description": "Output only. Unique identifier of the `Release`.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Description of the `Release`. Max length is 255 characters.",
          "type": "string"
        },
        "annotations": {
          "description": "User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be \u003c= 128 bytes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "abandoned": {
          "description": "Output only. Indicates whether this is an abandoned release.",
          "readOnly": true,
          "type": "boolean"
        },
        "createTime": {
          "description": "Output only. Time at which the `Release` was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "renderStartTime": {
          "description": "Output only. Time at which the render began.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "renderEndTime": {
          "description": "Output only. Time at which the render completed.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "skaffoldConfigUri": {
          "description": "Cloud Storage URI of tar.gz archive containing Skaffold configuration.",
          "type": "string"
        },
        "skaffoldConfigPath": {
          "description": "Filepath of the Skaffold config inside of the config URI.",
          "type": "string"
        },
        "buildArtifacts": {
          "description": "List of artifacts to pass through to Skaffold command.",
          "type": "array",
          "items": {
            "$ref": "BuildArtifact"
          }
        },
        "deliveryPipelineSnapshot": {
          "description": "Output only. Snapshot of the parent pipeline taken at release creation time.",
          "readOnly": true,
          "$ref": "DeliveryPipeline"
        },
        "targetSnapshots": {
          "description": "Output only. Snapshot of the targets taken at release creation time.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Target"
          }
        },
        "customTargetTypeSnapshots": {
          "description": "Output only. Snapshot of the custom target types referenced by the targets taken at release creation time.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "CustomTargetType"
          }
        },
        "renderState": {
          "description": "Output only. Current state of the render operation.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The render state is unspecified.",
            "All rendering operations have completed successfully.",
            "All rendering operations have completed, and one or more have failed.",
            "Rendering has started and is not complete."
          ],
          "enum": [
            "RENDER_STATE_UNSPECIFIED",
            "SUCCEEDED",
            "FAILED",
            "IN_PROGRESS"
          ]
        },
        "etag": {
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "skaffoldVersion": {
          "description": "The Skaffold version to use when operating on this release, such as \"1.20.0\". Not all versions are valid; Cloud Deploy supports a specific set of versions. If unset, the most recent supported Skaffold version will be used.",
          "type": "string"
        },
        "targetArtifacts": {
          "description": "Output only. Map from target ID to the target artifacts created during the render operation.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "$ref": "TargetArtifact"
          }
        },
        "targetRenders": {
          "description": "Output only. Map from target ID to details of the render operation for that target.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "$ref": "TargetRender"
          }
        },
        "condition": {
          "description": "Output only. Information around the state of the Release.",
          "readOnly": true,
          "$ref": "ReleaseCondition"
        },
        "deployParameters": {
          "description": "Optional. The deploy parameters to use for all targets in this release.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BuildArtifact": {
      "id": "BuildArtifact",
      "description": "Description of an a image to use during Skaffold rendering.",
      "type": "object",
      "properties": {
        "image": {
          "description": "Image name in Skaffold configuration.",
          "type": "string"
        },
        "tag": {
          "description": "Image tag to use. This will generally be the full path to an image, such as \"gcr.io/my-project/busybox:1.2.3\" or \"gcr.io/my-project/busybox@sha256:abc123\".",
          "type": "string"
        }
      }
    },
    "TargetArtifact": {
      "id": "TargetArtifact",
      "description": "The artifacts produced by a target render operation.",
      "type": "object",
      "properties": {
        "artifactUri": {
          "description": "Output only. URI of a directory containing the artifacts. This contains deployment configuration used by Skaffold during a rollout, and all paths are relative to this location.",
          "readOnly": true,
          "type": "string"
        },
        "skaffoldConfigPath": {
          "description": "Output only. File path of the resolved Skaffold configuration relative to the URI.",
          "readOnly": true,
          "type": "string"
        },
        "manifestPath": {
          "description": "Output only. File path of the rendered manifest relative to the URI.",
          "readOnly": true,
          "type": "string"
        },
        "phaseArtifacts": {
          "description": "Output only. Map from the phase ID to the phase artifacts for the `Target`.",
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "$ref": "PhaseArtifact"
          }
        }
      }
    },
    "PhaseArtifact": {
      "id": "PhaseArtifact",
      "description": "Contains the paths to the artifacts, relative to the URI, for a phase.",
      "type": "object",
      "properties": {
        "skaffoldConfigPath": {
          "description": "Output only. File path of the resolved Skaffold configuration relative to the URI.",
          "readOnly": true,
          "type": "string"
        },
        "manifestPath": {
          "description": "Output only. File path of the rendered manifest relative to the URI.",
          "readOnly": true,
          "type": "string"
        },
        "jobManifestsPath": {
          "description": "Output only. File path of the directory of rendered job manifests relative to the URI. This is only set if it is applicable.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "TargetRender": {
      "id": "TargetRender",
      "description": "Details of rendering for a single target.",
      "type": "object",
      "properties": {
        "renderingBuild": {
          "description": "Output only. The resource name of the Cloud Build `Build` object that is used to render the manifest for this target. Format is `projects/{project}/locations/{location}/builds/{build}`.",
          "readOnly": true,
          "type": "string"
        },
        "renderingState": {
          "description": "Output only. Current state of the render operation for this Target.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The render operation state is unspecified.",
            "The render operation has completed successfully.",
            "The render operation has failed.",
            "The render operation is in progress."
          ],
          "enum": [
            "TARGET_RENDER_STATE_UNSPECIFIED",
            "SUCCEEDED",
            "FAILED",
            "IN_PROGRESS"
          ]
        },
        "metadata": {
          "description": "Output only. Metadata related to the `Release` render for this Target.",
          "readOnly": true,
          "$ref": "RenderMetadata"
        },
        "failureCause": {
          "description": "Output only. Reason this render failed. This will always be unspecified while the render in progress.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No reason for failure is specified.",
            "Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).",
            "The render operation did not complete successfully; check Cloud Build logs.",
            "Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details.",
            "The render operation did not complete successfully because the verification stanza required for verify was not found on the Skaffold configuration.",
            "The render operation did not complete successfully because the custom action required for predeploy or postdeploy was not found in the Skaffold configuration. See failure_message for additional details.",
            "Release failed during rendering because the release configuration is not supported with the specified deployment strategy.",
            "The render operation had a feature configured that is not supported."
          ],
          "enum": [
            "FAILURE_CAUSE_UNSPECIFIED",
            "CLOUD_BUILD_UNAVAILABLE",
            "EXECUTION_FAILED",
            "CLOUD_BUILD_REQUEST_FAILED",
            "VERIFICATION_CONFIG_NOT_FOUND",
            "CUSTOM_ACTION_NOT_FOUND",
            "DEPLOYMENT_STRATEGY_NOT_SUPPORTED",
            "RENDER_FEATURE_NOT_SUPPORTED"
          ]
        },
        "failureMessage": {
          "description": "Output only. Additional information about the render failure, if available.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "RenderMetadata": {
      "id": "RenderMetadata",
      "description": "RenderMetadata includes information associated with a `Release` render.",
      "type": "object",
      "properties": {
        "cloudRun": {
          "description": "Output only. Metadata associated with rendering for Cloud Run.",
          "readOnly": true,
          "$ref": "CloudRunRenderMetadata"
        },
        "custom": {
          "description": "Output only. Custom metadata provided by user-defined render operation.",
          "readOnly": true,
          "$ref": "CustomMetadata"
        }
      }
    },
    "CloudRunRenderMetadata": {
      "id": "CloudRunRenderMetadata",
      "description": "CloudRunRenderMetadata contains Cloud Run information associated with a `Release` render.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Output only. The name of the Cloud Run Service in the rendered manifest. Format is `projects/{project}/locations/{location}/services/{service}`.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ReleaseCondition": {
      "id": "ReleaseCondition",
      "description": "ReleaseCondition contains all conditions relevant to a Release.",
      "type": "object",
      "properties": {
        "releaseReadyCondition": {
          "description": "Details around the Releases's overall status.",
          "$ref": "ReleaseReadyCondition"
        },
        "skaffoldSupportedCondition": {
          "description": "Details around the support state of the release's Skaffold version.",
          "$ref": "SkaffoldSupportedCondition"
        }
      }
    },
    "ReleaseReadyCondition": {
      "id": "ReleaseReadyCondition",
      "description": "ReleaseReadyCondition contains information around the status of the Release. If a release is not ready, you cannot create a rollout with the release.",
      "type": "object",
      "properties": {
        "status": {
          "description": "True if the Release is in a valid state. Otherwise at least one condition in `ReleaseCondition` is in an invalid state. Iterate over those conditions and see which condition(s) has status = false to find out what is wrong with the Release.",
          "type": "boolean"
        }
      }
    },
    "SkaffoldSupportedCondition": {
      "id": "SkaffoldSupportedCondition",
      "description": "SkaffoldSupportedCondition contains information about when support for the release's version of Skaffold ends.",
      "type": "object",
      "properties": {
        "status": {
          "description": "True if the version of Skaffold used by this release is supported.",
          "type": "boolean"
        },
        "skaffoldSupportState": {
          "description": "The Skaffold support state for this release's version of Skaffold.",
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "This Skaffold version is currently supported.",
            "This Skaffold version is in maintenance mode.",
            "This Skaffold version is no longer supported."
          ],
          "enum": [
            "SKAFFOLD_SUPPORT_STATE_UNSPECIFIED",
            "SKAFFOLD_SUPPORT_STATE_SUPPORTED",
            "SKAFFOLD_SUPPORT_STATE_MAINTENANCE_MODE",
            "SKAFFOLD_SUPPORT_STATE_UNSUPPORTED"
          ]
        },
        "maintenanceModeTime": {
          "description": "The time at which this release's version of Skaffold will enter maintenance mode.",
          "type": "string",
          "format": "google-datetime"
        },
        "supportExpirationTime": {
          "description": "The time at which this release's version of Skaffold will no longer be supported.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "AbandonReleaseRequest": {
      "id": "AbandonReleaseRequest",
      "description": "The request object used by `AbandonRelease`.",
      "type": "object",
      "properties": {}
    },
    "AbandonReleaseResponse": {
      "id": "AbandonReleaseResponse",
      "description": "The response object for `AbandonRelease`.",
      "type": "object",
      "properties": {}
    },
    "ApproveRolloutRequest": {
      "id": "ApproveRolloutRequest",
      "description": "The request object used by `ApproveRollout`.",
      "type": "object",
      "properties": {
        "approved": {
          "description": "Required. True = approve; false = reject",
          "type": "boolean"
        }
      }
    },
    "ApproveRolloutResponse": {
      "id": "ApproveRolloutResponse",
      "description": "The response object from `ApproveRollout`.",
      "type": "object",
      "properties": {}
    },
    "AdvanceRolloutRequest": {
      "id": "AdvanceRolloutRequest",
      "description": "The request object used by `AdvanceRollout`.",
      "type": "object",
      "properties": {
        "phaseId": {
          "description": "Required. The phase ID to advance the `Rollout` to.",
          "type": "string"
        }
      }
    },
    "AdvanceRolloutResponse": {
      "id": "AdvanceRolloutResponse",
      "description": "The response object from `AdvanceRollout`.",
      "type": "object",
      "properties": {}
    },
    "CancelRolloutRequest": {
      "id": "CancelRolloutRequest",
      "description": "The request object used by `CancelRollout`.",
      "type": "object",
      "properties": {}
    },
    "CancelRolloutResponse": {
      "id": "CancelRolloutResponse",
      "description": "The response object from `CancelRollout`.",
      "type": "object",
      "properties": {}
    },
    "ListRolloutsResponse": {
      "id": "ListRolloutsResponse",
      "description": "ListRolloutsResponse is the response object reutrned by `ListRollouts`.",
      "type": "object",
      "properties": {
        "rollouts": {
          "description": "The `Rollout` objects.",
          "type": "array",
          "items": {
            "$ref": "Rollout"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IgnoreJobRequest": {
      "id": "IgnoreJobRequest",
      "description": "The request object used by `IgnoreJob`.",
      "type": "object",
      "properties": {
        "phaseId": {
          "description": "Required. The phase ID the Job to ignore belongs to.",
          "type": "string"
        },
        "jobId": {
          "description": "Required. The job ID for the Job to ignore.",
          "type": "string"
        }
      }
    },
    "IgnoreJobResponse": {
      "id": "IgnoreJobResponse",
      "description": "The response object from `IgnoreJob`.",
      "type": "object",
      "properties": {}
    },
    "RetryJobRequest": {
      "id": "RetryJobRequest",
      "description": "RetryJobRequest is the request object used by `RetryJob`.",
      "type": "object",
      "properties": {
        "phaseId": {
          "description": "Required. The phase ID the Job to retry belongs to.",
          "type": "string"
        },
        "jobId": {
          "description": "Required. The job ID for the Job to retry.",
          "type": "string"
        }
      }
    },
    "RetryJobResponse": {
      "id": "RetryJobResponse",
      "description": "The response object from 'RetryJob'.",
      "type": "object",
      "properties": {}
    },
    "ListJobRunsResponse": {
      "id": "ListJobRunsResponse",
      "description": "ListJobRunsResponse is the response object returned by `ListJobRuns`.",
      "type": "object",
      "properties": {
        "jobRuns": {
          "description": "The `JobRun` objects.",
          "type": "array",
          "items": {
            "$ref": "JobRun"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "JobRun": {
      "id": "JobRun",
      "description": "A `JobRun` resource in the Cloud Deploy API. A `JobRun` contains information of a single `Rollout` job evaluation.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Optional. Name of the `JobRun`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{releases}/rollouts/{rollouts}/jobRuns/{uuid}`.",
          "type": "string"
        },
        "uid": {
          "description": "Output only. Unique identifier of the `JobRun`.",
          "readOnly": true,
          "type": "string"
        },
        "phaseId": {
          "description": "Output only. ID of the `Rollout` phase this `JobRun` belongs in.",
          "readOnly": true,
          "type": "string"
        },
        "jobId": {
          "description": "Output only. ID of the `Rollout` job this `JobRun` corresponds to.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time at which the `JobRun` was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "startTime": {
          "description": "Output only. Time at which the `JobRun` was started.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. Time at which the `JobRun` ended.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "description": "Output only. The current state of the `JobRun`.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The `JobRun` has an unspecified state.",
            "The `JobRun` is in progress.",
            "The `JobRun` has succeeded.",
            "The `JobRun` has failed.",
            "The `JobRun` is terminating.",
            "The `JobRun` was terminated."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "IN_PROGRESS",
            "SUCCEEDED",
            "FAILED",
            "TERMINATING",
            "TERMINATED"
          ]
        },
        "deployJobRun": {
          "description": "Output only. Information specific to a deploy `JobRun`.",
          "readOnly": true,
          "$ref": "DeployJobRun"
        },
        "verifyJobRun": {
          "description": "Output only. Information specific to a verify `JobRun`.",
          "readOnly": true,
          "$ref": "VerifyJobRun"
        },
        "predeployJobRun": {
          "description": "Output only. Information specific to a predeploy `JobRun`.",
          "readOnly": true,
          "$ref": "PredeployJobRun"
        },
        "postdeployJobRun": {
          "description": "Output only. Information specific to a postdeploy `JobRun`.",
          "readOnly": true,
          "$ref": "PostdeployJobRun"
        },
        "createChildRolloutJobRun": {
          "description": "Output only. Information specific to a createChildRollout `JobRun`.",
          "readOnly": true,
          "$ref": "CreateChildRolloutJobRun"
        },
        "advanceChildRolloutJobRun": {
          "description": "Output only. Information specific to an advanceChildRollout `JobRun`",
          "readOnly": true,
          "$ref": "AdvanceChildRolloutJobRun"
        },
        "etag": {
          "description": "Output only. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "DeployJobRun": {
      "id": "DeployJobRun",
      "description": "DeployJobRun contains information specific to a deploy `JobRun`.",
      "type": "object",
      "properties": {
        "build": {
          "description": "Output only. The resource name of the Cloud Build `Build` object that is used to deploy. Format is `projects/{project}/locations/{location}/builds/{build}`.",
          "readOnly": true,
          "type": "string"
        },
        "failureCause": {
          "description": "Output only. The reason the deploy failed. This will always be unspecified while the deploy is in progress or if it succeeded.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No reason for failure is specified.",
            "Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [Required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).",
            "The deploy operation did not complete successfully; check Cloud Build logs.",
            "The deploy job run did not complete within the alloted time.",
            "There were missing resources in the runtime environment required for a canary deployment. Check the Cloud Build logs for more information.",
            "Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details.",
            "The deploy operation had a feature configured that is not supported."
          ],
          "enum": [
            "FAILURE_CAUSE_UNSPECIFIED",
            "CLOUD_BUILD_UNAVAILABLE",
            "EXECUTION_FAILED",
            "DEADLINE_EXCEEDED",
            "MISSING_RESOURCES_FOR_CANARY",
            "CLOUD_BUILD_REQUEST_FAILED",
            "DEPLOY_FEATURE_NOT_SUPPORTED"
          ]
        },
        "failureMessage": {
          "description": "Output only. Additional information about the deploy failure, if available.",
          "readOnly": true,
          "type": "string"
        },
        "metadata": {
          "description": "Output only. Metadata containing information about the deploy job run.",
          "readOnly": true,
          "$ref": "DeployJobRunMetadata"
        },
        "artifact": {
          "description": "Output only. The artifact of a deploy job run, if available.",
          "readOnly": true,
          "$ref": "DeployArtifact"
        }
      }
    },
    "DeployJobRunMetadata": {
      "id": "DeployJobRunMetadata",
      "description": "DeployJobRunMetadata surfaces information associated with a `DeployJobRun` to the user.",
      "type": "object",
      "properties": {
        "cloudRun": {
          "description": "Output only. The name of the Cloud Run Service that is associated with a `DeployJobRun`.",
          "readOnly": true,
          "$ref": "CloudRunMetadata"
        },
        "customTarget": {
          "description": "Output only. Custom Target metadata associated with a `DeployJobRun`.",
          "readOnly": true,
          "$ref": "CustomTargetDeployMetadata"
        },
        "custom": {
          "description": "Output only. Custom metadata provided by user-defined deploy operation.",
          "readOnly": true,
          "$ref": "CustomMetadata"
        }
      }
    },
    "CustomTargetDeployMetadata": {
      "id": "CustomTargetDeployMetadata",
      "description": "CustomTargetDeployMetadata contains information from a Custom Target deploy operation.",
      "type": "object",
      "properties": {
        "skipMessage": {
          "description": "Output only. Skip message provided in the results of a custom deploy operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "DeployArtifact": {
      "id": "DeployArtifact",
      "description": "The artifacts produced by a deploy operation.",
      "type": "object",
      "properties": {
        "artifactUri": {
          "description": "Output only. URI of a directory containing the artifacts. All paths are relative to this location.",
          "readOnly": true,
          "type": "string"
        },
        "manifestPaths": {
          "description": "Output only. File paths of the manifests applied during the deploy operation relative to the URI.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VerifyJobRun": {
      "id": "VerifyJobRun",
      "description": "VerifyJobRun contains information specific to a verify `JobRun`.",
      "type": "object",
      "properties": {
        "build": {
          "description": "Output only. The resource name of the Cloud Build `Build` object that is used to verify. Format is `projects/{project}/locations/{location}/builds/{build}`.",
          "readOnly": true,
          "type": "string"
        },
        "artifactUri": {
          "description": "Output only. URI of a directory containing the verify artifacts. This contains the Skaffold event log.",
          "readOnly": true,
          "type": "string"
        },
        "eventLogPath": {
          "description": "Output only. File path of the Skaffold event log relative to the artifact URI.",
          "readOnly": true,
          "type": "string"
        },
        "failureCause": {
          "description": "Output only. The reason the verify failed. This will always be unspecified while the verify is in progress or if it succeeded.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No reason for failure is specified.",
            "Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).",
            "The verify operation did not complete successfully; check Cloud Build logs.",
            "The verify job run did not complete within the alloted time.",
            "No Skaffold verify configuration was found.",
            "Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details."
          ],
          "enum": [
            "FAILURE_CAUSE_UNSPECIFIED",
            "CLOUD_BUILD_UNAVAILABLE",
            "EXECUTION_FAILED",
            "DEADLINE_EXCEEDED",
            "VERIFICATION_CONFIG_NOT_FOUND",
            "CLOUD_BUILD_REQUEST_FAILED"
          ]
        },
        "failureMessage": {
          "description": "Output only. Additional information about the verify failure, if available.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "PredeployJobRun": {
      "id": "PredeployJobRun",
      "description": "PredeployJobRun contains information specific to a predeploy `JobRun`.",
      "type": "object",
      "properties": {
        "build": {
          "description": "Output only. The resource name of the Cloud Build `Build` object that is used to execute the custom actions associated with the predeploy Job. Format is `projects/{project}/locations/{location}/builds/{build}`.",
          "readOnly": true,
          "type": "string"
        },
        "failureCause": {
          "description": "Output only. The reason the predeploy failed. This will always be unspecified while the predeploy is in progress or if it succeeded.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No reason for failure is specified.",
            "Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).",
            "The predeploy operation did not complete successfully; check Cloud Build logs.",
            "The predeploy job run did not complete within the alloted time.",
            "Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details."
          ],
          "enum": [
            "FAILURE_CAUSE_UNSPECIFIED",
            "CLOUD_BUILD_UNAVAILABLE",
            "EXECUTION_FAILED",
            "DEADLINE_EXCEEDED",
            "CLOUD_BUILD_REQUEST_FAILED"
          ]
        },
        "failureMessage": {
          "description": "Output only. Additional information about the predeploy failure, if available.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "PostdeployJobRun": {
      "id": "PostdeployJobRun",
      "description": "PostdeployJobRun contains information specific to a postdeploy `JobRun`.",
      "type": "object",
      "properties": {
        "build": {
          "description": "Output only. The resource name of the Cloud Build `Build` object that is used to execute the custom actions associated with the postdeploy Job. Format is `projects/{project}/locations/{location}/builds/{build}`.",
          "readOnly": true,
          "type": "string"
        },
        "failureCause": {
          "description": "Output only. The reason the postdeploy failed. This will always be unspecified while the postdeploy is in progress or if it succeeded.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No reason for failure is specified.",
            "Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).",
            "The postdeploy operation did not complete successfully; check Cloud Build logs.",
            "The postdeploy job run did not complete within the alloted time.",
            "Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details."
          ],
          "enum": [
            "FAILURE_CAUSE_UNSPECIFIED",
            "CLOUD_BUILD_UNAVAILABLE",
            "EXECUTION_FAILED",
            "DEADLINE_EXCEEDED",
            "CLOUD_BUILD_REQUEST_FAILED"
          ]
        },
        "failureMessage": {
          "description": "Output only. Additional information about the postdeploy failure, if available.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "CreateChildRolloutJobRun": {
      "id": "CreateChildRolloutJobRun",
      "description": "CreateChildRolloutJobRun contains information specific to a createChildRollout `JobRun`.",
      "type": "object",
      "properties": {
        "rollout": {
          "description": "Output only. Name of the `ChildRollout`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.",
          "readOnly": true,
          "type": "string"
        },
        "rolloutPhaseId": {
          "description": "Output only. The ID of the childRollout Phase initiated by this JobRun.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "AdvanceChildRolloutJobRun": {
      "id": "AdvanceChildRolloutJobRun",
      "description": "AdvanceChildRolloutJobRun contains information specific to a advanceChildRollout `JobRun`.",
      "type": "object",
      "properties": {
        "rollout": {
          "description": "Output only. Name of the `ChildRollout`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.",
          "readOnly": true,
          "type": "string"
        },
        "rolloutPhaseId": {
          "description": "Output only. the ID of the ChildRollout's Phase.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "TerminateJobRunRequest": {
      "id": "TerminateJobRunRequest",
      "description": "The request object used by `TerminateJobRun`.",
      "type": "object",
      "properties": {}
    },
    "TerminateJobRunResponse": {
      "id": "TerminateJobRunResponse",
      "description": "The response object from `TerminateJobRun`.",
      "type": "object",
      "properties": {}
    },
    "Config": {
      "id": "Config",
      "description": "Service-wide configuration.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the configuration.",
          "type": "string"
        },
        "supportedVersions": {
          "description": "All supported versions of Skaffold.",
          "type": "array",
          "items": {
            "$ref": "SkaffoldVersion"
          }
        },
        "defaultSkaffoldVersion": {
          "description": "Default Skaffold version that is assigned when a Release is created without specifying a Skaffold version.",
          "type": "string"
        }
      }
    },
    "SkaffoldVersion": {
      "id": "SkaffoldVersion",
      "description": "Details of a supported Skaffold version.",
      "type": "object",
      "properties": {
        "version": {
          "description": "Release version number. For example, \"1.20.3\".",
          "type": "string"
        },
        "maintenanceModeTime": {
          "description": "The time at which this version of Skaffold will enter maintenance mode.",
          "type": "string",
          "format": "google-datetime"
        },
        "supportExpirationTime": {
          "description": "The time at which this version of Skaffold will no longer be supported.",
          "type": "string",
          "format": "google-datetime"
        },
        "supportEndDate": {
          "description": "Date when this version is expected to no longer be supported.",
          "$ref": "Date"
        }
      }
    },
    "Date": {
      "id": "Date",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "type": "object",
      "properties": {
        "year": {
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Automation": {
      "id": "Automation",
      "description": "An `Automation` resource in the Cloud Deploy API. An `Automation` enables the automation of manually driven actions for a Delivery Pipeline, which includes Release promotion among Targets, Rollout repair and Rollout deployment strategy advancement. The intention of Automation is to reduce manual intervention in the continuous delivery process.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Name of the `Automation`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automations/{automation}`.",
          "readOnly": true,
          "type": "string"
        },
        "uid": {
          "description": "Output only. Unique identifier of the `Automation`.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the `Automation`. Max length is 255 characters.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time at which the automation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time at which the automation was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "annotations": {
          "description": "Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. Annotations must meet the following constraints: * Annotations are key/value pairs. * Valid annotation keys have two segments: an optional prefix and name, separated by a slash (`/`). * The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between. * The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots(`.`), not longer than 253 characters in total, followed by a slash (`/`). See https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set for more details.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be \u003c= 63 characters.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "description": "Optional. The weak etag of the `Automation` resource. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "suspended": {
          "description": "Optional. When Suspended, automation is deactivated from execution.",
          "type": "boolean"
        },
        "serviceAccount": {
          "description": "Required. Email address of the user-managed IAM service account that creates Cloud Deploy release and rollout resources.",
          "type": "string"
        },
        "selector": {
          "description": "Required. Selected resources to which the automation will be applied.",
          "$ref": "AutomationResourceSelector"
        },
        "rules": {
          "description": "Required. List of Automation rules associated with the Automation resource. Must have at least one rule and limited to 250 rules per Delivery Pipeline. Note: the order of the rules here is not the same as the order of execution.",
          "type": "array",
          "items": {
            "$ref": "AutomationRule"
          }
        }
      }
    },
    "AutomationResourceSelector": {
      "id": "AutomationResourceSelector",
      "description": "AutomationResourceSelector contains the information to select the resources to which an Automation is going to be applied.",
      "type": "object",
      "properties": {
        "targets": {
          "description": "Contains attributes about a target.",
          "type": "array",
          "items": {
            "$ref": "TargetAttribute"
          }
        }
      }
    },
    "TargetAttribute": {
      "id": "TargetAttribute",
      "description": "Contains criteria for selecting Targets.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the `Target`. The value of this field could be one of the following: * The last segment of a target name. It only needs the ID to determine which target is being referred to * \"*\", all targets in a location.",
          "type": "string"
        },
        "labels": {
          "description": "Target labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AutomationRule": {
      "id": "AutomationRule",
      "description": "`AutomationRule` defines the automation activities.",
      "type": "object",
      "properties": {
        "promoteReleaseRule": {
          "description": "Optional. `PromoteReleaseRule` will automatically promote a release from the current target to a specified target.",
          "$ref": "PromoteReleaseRule"
        },
        "advanceRolloutRule": {
          "description": "Optional. The `AdvanceRolloutRule` will automatically advance a successful Rollout.",
          "$ref": "AdvanceRolloutRule"
        },
        "repairRolloutRule": {
          "description": "Optional. The `RepairRolloutRule` will automatically repair a failed rollout.",
          "$ref": "RepairRolloutRule"
        }
      }
    },
    "PromoteReleaseRule": {
      "id": "PromoteReleaseRule",
      "description": "`PromoteRelease` rule will automatically promote a release from the current target to a specified target.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
          "type": "string"
        },
        "wait": {
          "description": "Optional. How long the release need to be paused until being promoted to the next target.",
          "type": "string",
          "format": "google-duration"
        },
        "destinationTargetId": {
          "description": "Optional. The ID of the stage in the pipeline to which this `Release` is deploying. If unspecified, default it to the next stage in the promotion flow. The value of this field could be one of the following: * The last segment of a target name. It only needs the ID to determine if the target is one of the stages in the promotion sequence defined in the pipeline. * \"@next\", the next target in the promotion sequence.",
          "type": "string"
        },
        "condition": {
          "description": "Output only. Information around the state of the Automation rule.",
          "readOnly": true,
          "$ref": "AutomationRuleCondition"
        },
        "destinationPhase": {
          "description": "Optional. The starting phase of the rollout created by this operation. Default to the first phase.",
          "type": "string"
        }
      }
    },
    "AutomationRuleCondition": {
      "id": "AutomationRuleCondition",
      "description": "`AutomationRuleCondition` contains conditions relevant to an `Automation` rule.",
      "type": "object",
      "properties": {
        "targetsPresentCondition": {
          "description": "Optional. Details around targets enumerated in the rule.",
          "$ref": "TargetsPresentCondition"
        }
      }
    },
    "AdvanceRolloutRule": {
      "id": "AdvanceRolloutRule",
      "description": "The `AdvanceRollout` automation rule will automatically advance a successful Rollout to the next phase.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
          "type": "string"
        },
        "sourcePhases": {
          "description": "Optional. Proceeds only after phase name matched any one in the list. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "wait": {
          "description": "Optional. How long to wait after a rollout is finished.",
          "type": "string",
          "format": "google-duration"
        },
        "condition": {
          "description": "Output only. Information around the state of the Automation rule.",
          "readOnly": true,
          "$ref": "AutomationRuleCondition"
        }
      }
    },
    "RepairRolloutRule": {
      "id": "RepairRolloutRule",
      "description": "The `RepairRolloutRule` automation rule will automatically repair a failed `Rollout`.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
          "type": "string"
        },
        "jobs": {
          "description": "Optional. Jobs to repair. Proceeds only after job name matched any one in the list, or for all jobs if unspecified or empty. The phase that includes the job must match the phase ID specified in `source_phase`. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "Output only. Information around the state of the 'Automation' rule.",
          "readOnly": true,
          "$ref": "AutomationRuleCondition"
        }
      }
    },
    "ListAutomationsResponse": {
      "id": "ListAutomationsResponse",
      "description": "The response object from `ListAutomations`.",
      "type": "object",
      "properties": {
        "automations": {
          "description": "The `Automation` objects.",
          "type": "array",
          "items": {
            "$ref": "Automation"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AutomationRun": {
      "id": "AutomationRun",
      "description": "An `AutomationRun` resource in the Cloud Deploy API. An `AutomationRun` represents an execution instance of an automation rule.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Name of the `AutomationRun`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}`.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time at which the `AutomationRun` was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time at which the automationRun was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "etag": {
          "description": "Output only. The weak etag of the `AutomationRun` resource. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "readOnly": true,
          "type": "string"
        },
        "serviceAccount": {
          "description": "Output only. Email address of the user-managed IAM service account that performs the operations against Cloud Deploy resources.",
          "readOnly": true,
          "type": "string"
        },
        "automationSnapshot": {
          "description": "Output only. Snapshot of the Automation taken at AutomationRun creation time.",
          "readOnly": true,
          "$ref": "Automation"
        },
        "targetId": {
          "description": "Output only. The ID of the target that represents the promotion stage that initiates the `AutomationRun`. The value of this field is the last segment of a target name.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "Output only. Current state of the `AutomationRun`.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The `AutomationRun` has an unspecified state.",
            "The `AutomationRun` has succeeded.",
            "The `AutomationRun` was cancelled.",
            "The `AutomationRun` has failed.",
            "The `AutomationRun` is in progress.",
            "The `AutomationRun` is pending.",
            "The `AutomationRun` was aborted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED",
            "IN_PROGRESS",
            "PENDING",
            "ABORTED"
          ]
        },
        "stateDescription": {
          "description": "Output only. Explains the current state of the `AutomationRun`. Present only when an explanation is needed.",
          "readOnly": true,
          "type": "string"
        },
        "expireTime": {
          "description": "Output only. Time the `AutomationRun` expires. An `AutomationRun` expires after 14 days from its creation date.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "ruleId": {
          "description": "Output only. The ID of the automation rule that initiated the operation.",
          "readOnly": true,
          "type": "string"
        },
        "automationId": {
          "description": "Output only. The ID of the automation that initiated the operation.",
          "readOnly": true,
          "type": "string"
        },
        "promoteReleaseOperation": {
          "description": "Output only. Promotes a release to a specified 'Target'.",
          "readOnly": true,
          "$ref": "PromoteReleaseOperation"
        },
        "advanceRolloutOperation": {
          "description": "Output only. Advances a rollout to the next phase.",
          "readOnly": true,
          "$ref": "AdvanceRolloutOperation"
        },
        "repairRolloutOperation": {
          "description": "Output only. Repairs a failed 'Rollout'.",
          "readOnly": true,
          "$ref": "RepairRolloutOperation"
        },
        "waitUntilTime": {
          "description": "Output only. Earliest time the `AutomationRun` will attempt to resume. Wait-time is configured by `wait` in automation rule.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "PromoteReleaseOperation": {
      "id": "PromoteReleaseOperation",
      "description": "Contains the information of an automated promote-release operation.",
      "type": "object",
      "properties": {
        "targetId": {
          "description": "Output only. The ID of the target that represents the promotion stage to which the release will be promoted. The value of this field is the last segment of a target name.",
          "readOnly": true,
          "type": "string"
        },
        "wait": {
          "description": "Output only. How long the operation will be paused.",
          "readOnly": true,
          "type": "string",
          "format": "google-duration"
        },
        "rollout": {
          "description": "Output only. The name of the rollout that initiates the `AutomationRun`.",
          "readOnly": true,
          "type": "string"
        },
        "phase": {
          "description": "Output only. The starting phase of the rollout created by this operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "AdvanceRolloutOperation": {
      "id": "AdvanceRolloutOperation",
      "description": "Contains the information of an automated advance-rollout operation.",
      "type": "object",
      "properties": {
        "sourcePhase": {
          "description": "Output only. The phase of a deployment that initiated the operation.",
          "readOnly": true,
          "type": "string"
        },
        "wait": {
          "description": "Output only. How long the operation will be paused.",
          "readOnly": true,
          "type": "string",
          "format": "google-duration"
        },
        "rollout": {
          "description": "Output only. The name of the rollout that initiates the `AutomationRun`.",
          "readOnly": true,
          "type": "string"
        },
        "destinationPhase": {
          "description": "Output only. The phase the rollout will be advanced to.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "RepairRolloutOperation": {
      "id": "RepairRolloutOperation",
      "description": "Contains the information for an automated `repair rollout` operation.",
      "type": "object",
      "properties": {
        "rollout": {
          "description": "Output only. The name of the rollout that initiates the `AutomationRun`.",
          "readOnly": true,
          "type": "string"
        },
        "repairPhases": {
          "description": "Output only. Records of the repair attempts. Each repair phase may have multiple retry attempts or single rollback attempt.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "RepairPhase"
          }
        },
        "phaseId": {
          "description": "Output only. The phase ID of the phase that includes the job being repaired.",
          "readOnly": true,
          "type": "string"
        },
        "jobId": {
          "description": "Output only. The job ID for the Job to repair.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "RepairPhase": {
      "id": "RepairPhase",
      "description": "RepairPhase tracks the repair attempts that have been made for each `RepairPhaseConfig` specified in the `Automation` resource.",
      "type": "object",
      "properties": {
        "retry": {
          "description": "Output only. Records of the retry attempts for retry repair mode.",
          "readOnly": true,
          "$ref": "RetryPhase"
        },
        "rollback": {
          "description": "Output only. Rollback attempt for rollback repair mode .",
          "readOnly": true,
          "$ref": "RollbackAttempt"
        }
      }
    },
    "RetryPhase": {
      "id": "RetryPhase",
      "description": "RetryPhase contains the retry attempts and the metadata for initiating a new attempt.",
      "type": "object",
      "properties": {
        "totalAttempts": {
          "description": "Output only. The number of attempts that have been made.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "backoffMode": {
          "description": "Output only. The pattern of how the wait time of the retry attempt is calculated.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No WaitMode is specified.",
            "Increases the wait time linearly.",
            "Increases the wait time exponentially."
          ],
          "enum": [
            "BACKOFF_MODE_UNSPECIFIED",
            "BACKOFF_MODE_LINEAR",
            "BACKOFF_MODE_EXPONENTIAL"
          ]
        },
        "attempts": {
          "description": "Output only. Detail of a retry action.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "RetryAttempt"
          }
        }
      }
    },
    "RetryAttempt": {
      "id": "RetryAttempt",
      "description": "RetryAttempt represents an action of retrying the failed Cloud Deploy job.",
      "type": "object",
      "properties": {
        "attempt": {
          "description": "Output only. The index of this retry attempt.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "wait": {
          "description": "Output only. How long the operation will be paused.",
          "readOnly": true,
          "type": "string",
          "format": "google-duration"
        },
        "state": {
          "description": "Output only. Valid state of this retry action.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The `repair` has an unspecified state.",
            "The `repair` action has succeeded.",
            "The `repair` action was cancelled.",
            "The `repair` action has failed.",
            "The `repair` action is in progress.",
            "The `repair` action is pending.",
            "The `repair` action was aborted."
          ],
          "enum": [
            "REPAIR_STATE_UNSPECIFIED",
            "REPAIR_STATE_SUCCEEDED",
            "REPAIR_STATE_CANCELLED",
            "REPAIR_STATE_FAILED",
            "REPAIR_STATE_IN_PROGRESS",
            "REPAIR_STATE_PENDING",
            "REPAIR_STATE_ABORTED"
          ]
        },
        "stateDesc": {
          "description": "Output only. Description of the state of the Retry.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "RollbackAttempt": {
      "id": "RollbackAttempt",
      "description": "RollbackAttempt represents an action of rolling back a Cloud Deploy 'Target'.",
      "type": "object",
      "properties": {
        "destinationPhase": {
          "description": "Output only. The phase to which the rollout will be rolled back to.",
          "readOnly": true,
          "type": "string"
        },
        "rolloutId": {
          "description": "Output only. ID of the rollback `Rollout` to create.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "Output only. Valid state of this rollback action.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The `repair` has an unspecified state.",
            "The `repair` action has succeeded.",
            "The `repair` action was cancelled.",
            "The `repair` action has failed.",
            "The `repair` action is in progress.",
            "The `repair` action is pending.",
            "The `repair` action was aborted."
          ],
          "enum": [
            "REPAIR_STATE_UNSPECIFIED",
            "REPAIR_STATE_SUCCEEDED",
            "REPAIR_STATE_CANCELLED",
            "REPAIR_STATE_FAILED",
            "REPAIR_STATE_IN_PROGRESS",
            "REPAIR_STATE_PENDING",
            "REPAIR_STATE_ABORTED"
          ]
        },
        "stateDesc": {
          "description": "Output only. Description of the state of the Rollback.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ListAutomationRunsResponse": {
      "id": "ListAutomationRunsResponse",
      "description": "The response object from `ListAutomationRuns`.",
      "type": "object",
      "properties": {
        "automationRuns": {
          "description": "The `AutomationRuns` objects.",
          "type": "array",
          "items": {
            "$ref": "AutomationRun"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CancelAutomationRunRequest": {
      "id": "CancelAutomationRunRequest",
      "description": "The request object used by `CancelAutomationRun`.",
      "type": "object",
      "properties": {}
    },
    "CancelAutomationRunResponse": {
      "id": "CancelAutomationRunResponse",
      "description": "The response object from `CancelAutomationRun`.",
      "type": "object",
      "properties": {}
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents a Google Cloud location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).",
          "type": "string"
        },
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "DeliveryPipelineNotificationEvent": {
      "id": "DeliveryPipelineNotificationEvent",
      "description": "Payload proto for \"clouddeploy.googleapis.com/deliverypipeline_notification\" Platform Log event that describes the failure to send delivery pipeline status change Pub/Sub notification.",
      "type": "object",
      "properties": {
        "message": {
          "description": "Debug message for when a notification fails to send.",
          "type": "string"
        },
        "pipelineUid": {
          "description": "Unique identifier of the `DeliveryPipeline`.",
          "type": "string"
        },
        "deliveryPipeline": {
          "description": "The name of the `Delivery Pipeline`.",
          "type": "string"
        },
        "type": {
          "description": "Type of this notification, e.g. for a Pub/Sub failure.",
          "type": "string",
          "enumDescriptions": [
            "Type is unspecified.",
            "A Pub/Sub notification failed to be sent.",
            "Resource state changed.",
            "A process aborted.",
            "Restriction check failed.",
            "Resource deleted.",
            "Rollout updated.",
            "Deprecated: This field is never used. Use release_render log type instead."
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PUBSUB_NOTIFICATION_FAILURE",
            "TYPE_RESOURCE_STATE_CHANGE",
            "TYPE_PROCESS_ABORTED",
            "TYPE_RESTRICTION_VIOLATED",
            "TYPE_RESOURCE_DELETED",
            "TYPE_ROLLOUT_UPDATE",
            "TYPE_RENDER_STATUES_CHANGE"
          ]
        }
      }
    },
    "ReleaseNotificationEvent": {
      "id": "ReleaseNotificationEvent",
      "description": "Payload proto for \"clouddeploy.googleapis.com/release_notification\" Platform Log event that describes the failure to send release status change Pub/Sub notification.",
      "type": "object",
      "properties": {
        "message": {
          "description": "Debug message for when a notification fails to send.",
          "type": "string"
        },
        "pipelineUid": {
          "description": "Unique identifier of the `DeliveryPipeline`.",
          "type": "string"
        },
        "releaseUid": {
          "description": "Unique identifier of the `Release`.",
          "type": "string"
        },
        "release": {
          "description": "The name of the `Release`.",
          "type": "string"
        },
        "type": {
          "description": "Type of this notification, e.g. for a Pub/Sub failure.",
          "type": "string",
          "enumDescriptions": [
            "Type is unspecified.",
            "A Pub/Sub notification failed to be sent.",
            "Resource state changed.",
            "A process aborted.",
            "Restriction check failed.",
            "Resource deleted.",
            "Rollout updated.",
            "Deprecated: This field is never used. Use release_render log type instead."
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PUBSUB_NOTIFICATION_FAILURE",
            "TYPE_RESOURCE_STATE_CHANGE",
            "TYPE_PROCESS_ABORTED",
            "TYPE_RESTRICTION_VIOLATED",
            "TYPE_RESOURCE_DELETED",
            "TYPE_ROLLOUT_UPDATE",
            "TYPE_RENDER_STATUES_CHANGE"
          ]
        }
      }
    },
    "ReleaseRenderEvent": {
      "id": "ReleaseRenderEvent",
      "description": "Payload proto for \"clouddeploy.googleapis.com/release_render\" Platform Log event that describes the render status change.",
      "type": "object",
      "properties": {
        "message": {
          "description": "Debug message for when a render transition occurs. Provides further details as rendering progresses through render states.",
          "type": "string"
        },
        "pipelineUid": {
          "description": "Unique identifier of the `DeliveryPipeline`.",
          "type": "string"
        },
        "release": {
          "description": "The name of the release. release_uid is not in this log message because we write some of these log messages at release creation time, before we've generated the uid.",
          "type": "string"
        },
        "type": {
          "description": "Type of this notification, e.g. for a release render state change event.",
          "type": "string",
          "enumDescriptions": [
            "Type is unspecified.",
            "A Pub/Sub notification failed to be sent.",
            "Resource state changed.",
            "A process aborted.",
            "Restriction check failed.",
            "Resource deleted.",
            "Rollout updated.",
            "Deprecated: This field is never used. Use release_render log type instead."
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PUBSUB_NOTIFICATION_FAILURE",
            "TYPE_RESOURCE_STATE_CHANGE",
            "TYPE_PROCESS_ABORTED",
            "TYPE_RESTRICTION_VIOLATED",
            "TYPE_RESOURCE_DELETED",
            "TYPE_ROLLOUT_UPDATE",
            "TYPE_RENDER_STATUES_CHANGE"
          ]
        },
        "releaseRenderState": {
          "description": "The state of the release render.",
          "type": "string",
          "enumDescriptions": [
            "The render state is unspecified.",
            "All rendering operations have completed successfully.",
            "All rendering operations have completed, and one or more have failed.",
            "Rendering has started and is not complete."
          ],
          "enum": [
            "RENDER_STATE_UNSPECIFIED",
            "SUCCEEDED",
            "FAILED",
            "IN_PROGRESS"
          ]
        }
      }
    },
    "RolloutNotificationEvent": {
      "id": "RolloutNotificationEvent",
      "description": "Payload proto for \"clouddeploy.googleapis.com/rollout_notification\" Platform Log event that describes the failure to send rollout status change Pub/Sub notification.",
      "type": "object",
      "properties": {
        "message": {
          "description": "Debug message for when a notification fails to send.",
          "type": "string"
        },
        "pipelineUid": {
          "description": "Unique identifier of the `DeliveryPipeline`.",
          "type": "string"
        },
        "releaseUid": {
          "description": "Unique identifier of the `Release`.",
          "type": "string"
        },
        "release": {
          "description": "The name of the `Release`.",
          "type": "string"
        },
        "rolloutUid": {
          "description": "Unique identifier of the `Rollout`.",
          "type": "string"
        },
        "rollout": {
          "description": "The name of the `Rollout`.",
          "type": "string"
        },
        "targetId": {
          "description": "ID of the `Target` that the rollout is deployed to.",
          "type": "string"
        },
        "type": {
          "description": "Type of this notification, e.g. for a Pub/Sub failure.",
          "type": "string",
          "enumDescriptions": [
            "Type is unspecified.",
            "A Pub/Sub notification failed to be sent.",
            "Resource state changed.",
            "A process aborted.",
            "Restriction check failed.",
            "Resource deleted.",
            "Rollout updated.",
            "Deprecated: This field is never used. Use release_render log type instead."
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PUBSUB_NOTIFICATION_FAILURE",
            "TYPE_RESOURCE_STATE_CHANGE",
            "TYPE_PROCESS_ABORTED",
            "TYPE_RESTRICTION_VIOLATED",
            "TYPE_RESOURCE_DELETED",
            "TYPE_ROLLOUT_UPDATE",
            "TYPE_RENDER_STATUES_CHANGE"
          ]
        }
      }
    },
    "RolloutUpdateEvent": {
      "id": "RolloutUpdateEvent",
      "description": "Payload proto for \"clouddeploy.googleapis.com/rollout_update\" Platform Log event that describes the rollout update event.",
      "type": "object",
      "properties": {
        "message": {
          "description": "Debug message for when a rollout update event occurs.",
          "type": "string"
        },
        "pipelineUid": {
          "description": "Unique identifier of the pipeline.",
          "type": "string"
        },
        "releaseUid": {
          "description": "Unique identifier of the release.",
          "type": "string"
        },
        "release": {
          "description": "The name of the `Release`.",
          "type": "string"
        },
        "rollout": {
          "description": "The name of the rollout. rollout_uid is not in this log message because we write some of these log messages at rollout creation time, before we've generated the uid.",
          "type": "string"
        },
        "targetId": {
          "description": "ID of the target.",
          "type": "string"
        },
        "type": {
          "description": "Type of this notification, e.g. for a rollout update event.",
          "type": "string",
          "enumDescriptions": [
            "Type is unspecified.",
            "A Pub/Sub notification failed to be sent.",
            "Resource state changed.",
            "A process aborted.",
            "Restriction check failed.",
            "Resource deleted.",
            "Rollout updated.",
            "Deprecated: This field is never used. Use release_render log type instead."
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PUBSUB_NOTIFICATION_FAILURE",
            "TYPE_RESOURCE_STATE_CHANGE",
            "TYPE_PROCESS_ABORTED",
            "TYPE_RESTRICTION_VIOLATED",
            "TYPE_RESOURCE_DELETED",
            "TYPE_ROLLOUT_UPDATE",
            "TYPE_RENDER_STATUES_CHANGE"
          ]
        },
        "rolloutUpdateType": {
          "description": "The type of the rollout update.",
          "type": "string",
          "enumDescriptions": [
            "Rollout update type unspecified.",
            "rollout state updated to pending.",
            "Rollout state updated to pending release.",
            "Rollout state updated to in progress.",
            "Rollout state updated to cancelling.",
            "Rollout state updated to cancelled.",
            "Rollout state updated to halted.",
            "Rollout state updated to succeeded.",
            "Rollout state updated to failed.",
            "Rollout requires approval.",
            "Rollout has been approved.",
            "Rollout has been rejected.",
            "Rollout requires advance to the next phase.",
            "Rollout has been advanced."
          ],
          "enum": [
            "ROLLOUT_UPDATE_TYPE_UNSPECIFIED",
            "PENDING",
            "PENDING_RELEASE",
            "IN_PROGRESS",
            "CANCELLING",
            "CANCELLED",
            "HALTED",
            "SUCCEEDED",
            "FAILED",
            "APPROVAL_REQUIRED",
            "APPROVED",
            "REJECTED",
            "ADVANCE_REQUIRED",
            "ADVANCED"
          ]
        }
      }
    },
    "TargetNotificationEvent": {
      "id": "TargetNotificationEvent",
      "description": "Payload proto for \"clouddeploy.googleapis.com/target_notification\" Platform Log event that describes the failure to send target status change Pub/Sub notification.",
      "type": "object",
      "properties": {
        "message": {
          "description": "Debug message for when a notification fails to send.",
          "type": "string"
        },
        "target": {
          "description": "The name of the `Target`.",
          "type": "string"
        },
        "type": {
          "description": "Type of this notification, e.g. for a Pub/Sub failure.",
          "type": "string",
          "enumDescriptions": [
            "Type is unspecified.",
            "A Pub/Sub notification failed to be sent.",
            "Resource state changed.",
            "A process aborted.",
            "Restriction check failed.",
            "Resource deleted.",
            "Rollout updated.",
            "Deprecated: This field is never used. Use release_render log type instead."
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PUBSUB_NOTIFICATION_FAILURE",
            "TYPE_RESOURCE_STATE_CHANGE",
            "TYPE_PROCESS_ABORTED",
            "TYPE_RESTRICTION_VIOLATED",
            "TYPE_RESOURCE_DELETED",
            "TYPE_ROLLOUT_UPDATE",
            "TYPE_RENDER_STATUES_CHANGE"
          ]
        }
      }
    },
    "JobRunNotificationEvent": {
      "id": "JobRunNotificationEvent",
      "description": "Payload proto for \"clouddeploy.googleapis.com/jobrun_notification\" Platform Log event that describes the failure to send JobRun resource update Pub/Sub notification.",
      "type": "object",
      "properties": {
        "message": {
          "description": "Debug message for when a notification fails to send.",
          "type": "string"
        },
        "jobRun": {
          "description": "The name of the `JobRun`.",
          "type": "string"
        },
        "pipelineUid": {
          "description": "Unique identifier of the `DeliveryPipeline`.",
          "type": "string"
        },
        "releaseUid": {
          "description": "Unique identifier of the `Release`.",
          "type": "string"
        },
        "release": {
          "description": "The name of the `Release`.",
          "type": "string"
        },
        "rolloutUid": {
          "description": "Unique identifier of the `Rollout`.",
          "type": "string"
        },
        "rollout": {
          "description": "The name of the `Rollout`.",
          "type": "string"
        },
        "targetId": {
          "description": "ID of the `Target`.",
          "type": "string"
        },
        "type": {
          "description": "Type of this notification, e.g. for a Pub/Sub failure.",
          "type": "string",
          "enumDescriptions": [
            "Type is unspecified.",
            "A Pub/Sub notification failed to be sent.",
            "Resource state changed.",
            "A process aborted.",
            "Restriction check failed.",
            "Resource deleted.",
            "Rollout updated.",
            "Deprecated: This field is never used. Use release_render log type instead."
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PUBSUB_NOTIFICATION_FAILURE",
            "TYPE_RESOURCE_STATE_CHANGE",
            "TYPE_PROCESS_ABORTED",
            "TYPE_RESTRICTION_VIOLATED",
            "TYPE_RESOURCE_DELETED",
            "TYPE_ROLLOUT_UPDATE",
            "TYPE_RENDER_STATUES_CHANGE"
          ]
        }
      }
    },
    "AutomationEvent": {
      "id": "AutomationEvent",
      "description": "Payload proto for \"clouddeploy.googleapis.com/automation\" Platform Log event that describes the Automation related events.",
      "type": "object",
      "properties": {
        "message": {
          "description": "Debug message for when there is an update on the AutomationRun. Provides further details about the resource creation or state change.",
          "type": "string"
        },
        "automation": {
          "description": "The name of the `AutomationRun`.",
          "type": "string"
        },
        "pipelineUid": {
          "description": "Unique identifier of the `DeliveryPipeline`.",
          "type": "string"
        },
        "type": {
          "description": "Type of this notification, e.g. for a Pub/Sub failure.",
          "type": "string",
          "enumDescriptions": [
            "Type is unspecified.",
            "A Pub/Sub notification failed to be sent.",
            "Resource state changed.",
            "A process aborted.",
            "Restriction check failed.",
            "Resource deleted.",
            "Rollout updated.",
            "Deprecated: This field is never used. Use release_render log type instead."
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PUBSUB_NOTIFICATION_FAILURE",
            "TYPE_RESOURCE_STATE_CHANGE",
            "TYPE_PROCESS_ABORTED",
            "TYPE_RESTRICTION_VIOLATED",
            "TYPE_RESOURCE_DELETED",
            "TYPE_ROLLOUT_UPDATE",
            "TYPE_RENDER_STATUES_CHANGE"
          ]
        }
      }
    },
    "AutomationRunEvent": {
      "id": "AutomationRunEvent",
      "description": "Payload proto for \"clouddeploy.googleapis.com/automation_run\" Platform Log event that describes the AutomationRun related events.",
      "type": "object",
      "properties": {
        "message": {
          "description": "Debug message for when there is an update on the AutomationRun. Provides further details about the resource creation or state change.",
          "type": "string"
        },
        "automationRun": {
          "description": "The name of the `AutomationRun`.",
          "type": "string"
        },
        "pipelineUid": {
          "description": "Unique identifier of the `DeliveryPipeline`.",
          "type": "string"
        },
        "automationId": {
          "description": "Identifier of the `Automation`.",
          "type": "string"
        },
        "ruleId": {
          "description": "Identifier of the `Automation` rule.",
          "type": "string"
        },
        "destinationTargetId": {
          "description": "ID of the `Target` to which the `AutomationRun` is created.",
          "type": "string"
        },
        "type": {
          "description": "Type of this notification, e.g. for a Pub/Sub failure.",
          "type": "string",
          "enumDescriptions": [
            "Type is unspecified.",
            "A Pub/Sub notification failed to be sent.",
            "Resource state changed.",
            "A process aborted.",
            "Restriction check failed.",
            "Resource deleted.",
            "Rollout updated.",
            "Deprecated: This field is never used. Use release_render log type instead."
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PUBSUB_NOTIFICATION_FAILURE",
            "TYPE_RESOURCE_STATE_CHANGE",
            "TYPE_PROCESS_ABORTED",
            "TYPE_RESTRICTION_VIOLATED",
            "TYPE_RESOURCE_DELETED",
            "TYPE_ROLLOUT_UPDATE",
            "TYPE_RENDER_STATUES_CHANGE"
          ]
        }
      }
    }
  },
  "version_module": true,
  "title": "Cloud Deploy API",
  "ownerName": "Google",
  "mtlsRootUrl": "https://clouddeploy.mtls.googleapis.com/",
  "documentationLink": "https://cloud.google.com/deploy/",
  "description": "",
  "discoveryVersion": "v1",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "getConfig": {
              "id": "clouddeploy.projects.locations.getConfig",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/config",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. Name of requested configuration.",
                  "pattern": "^projects/[^/]+/locations/[^/]+/config$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Config"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the configuration for a location."
            },
            "list": {
              "id": "clouddeploy.projects.locations.list",
              "path": "v1/{+name}/locations",
              "flatPath": "v1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "clouddeploy.projects.locations.get",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "clouddeploy.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`."
                },
                "get": {
                  "id": "clouddeploy.projects.locations.operations.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "clouddeploy.projects.locations.operations.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "clouddeploy.projects.locations.operations.cancel",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "deliveryPipelines": {
              "methods": {
                "list": {
                  "id": "clouddeploy.projects.locations.deliveryPipelines.list",
                  "path": "v1/{+parent}/deliveryPipelines",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent, which owns this collection of pipelines. Format must be `projects/{project_id}/locations/{location_name}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of pipelines to return. The service may return fewer than this value. If unspecified, at most 50 pipelines will be returned. The maximum value is 1000; values above 1000 will be set to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A page token, received from a previous `ListDeliveryPipelines` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filter pipelines to be returned. See https://google.aip.dev/160 for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListDeliveryPipelinesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists DeliveryPipelines in a given project and location."
                },
                "get": {
                  "id": "clouddeploy.projects.locations.deliveryPipelines.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the `DeliveryPipeline`. Format must be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "DeliveryPipeline"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single DeliveryPipeline."
                },
                "create": {
                  "id": "clouddeploy.projects.locations.deliveryPipelines.create",
                  "path": "v1/{+parent}/deliveryPipelines",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent collection in which the `DeliveryPipeline` should be created. Format should be `projects/{project_id}/locations/{location_name}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "deliveryPipelineId": {
                      "description": "Required. ID of the `DeliveryPipeline`.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "DeliveryPipeline"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new DeliveryPipeline in a given project and location."
                },
                "patch": {
                  "id": "clouddeploy.projects.locations.deliveryPipelines.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Optional. Name of the `DeliveryPipeline`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}`. The `deliveryPipeline` component must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `DeliveryPipeline` resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it's in the mask. If the user doesn't provide a mask then all fields are overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "allowMissing": {
                      "description": "Optional. If set to true, updating a `DeliveryPipeline` that does not exist will result in the creation of a new `DeliveryPipeline`.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "validateOnly": {
                      "description": "Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "DeliveryPipeline"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single DeliveryPipeline."
                },
                "delete": {
                  "id": "clouddeploy.projects.locations.deliveryPipelines.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the `DeliveryPipeline` to delete. Format should be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "allowMissing": {
                      "description": "Optional. If set to true, then deleting an already deleted or non-existing `DeliveryPipeline` will succeed.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "validateOnly": {
                      "description": "Optional. If set, validate the request and preview the review, but do not actually post it.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "force": {
                      "description": "Optional. If set to true, all child resources under this pipeline will also be deleted. Otherwise, the request will only work if the pipeline has no child resources.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "etag": {
                      "description": "Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single DeliveryPipeline."
                },
                "rollbackTarget": {
                  "id": "clouddeploy.projects.locations.deliveryPipelines.rollbackTarget",
                  "path": "v1/{+name}:rollbackTarget",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:rollbackTarget",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The `DeliveryPipeline` for which the rollback `Rollout` should be created. Format should be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "RollbackTargetRequest"
                  },
                  "response": {
                    "$ref": "RollbackTargetResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a `Rollout` to roll back the specified target."
                },
                "setIamPolicy": {
                  "id": "clouddeploy.projects.locations.deliveryPipelines.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "clouddeploy.projects.locations.deliveryPipelines.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "clouddeploy.projects.locations.deliveryPipelines.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              },
              "resources": {
                "releases": {
                  "methods": {
                    "list": {
                      "id": "clouddeploy.projects.locations.deliveryPipelines.releases.list",
                      "path": "v1/{+parent}/releases",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The `DeliveryPipeline` which owns this collection of `Release` objects.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of `Release` objects to return. The service may return fewer than this value. If unspecified, at most 50 `Release` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Optional. A page token, received from a previous `ListReleases` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Optional. Filter releases to be returned. See https://google.aip.dev/160 for more details.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListReleasesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists Releases in a given project and location."
                    },
                    "get": {
                      "id": "clouddeploy.projects.locations.deliveryPipelines.releases.get",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the `Release`. Format must be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Release"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single Release."
                    },
                    "create": {
                      "id": "clouddeploy.projects.locations.deliveryPipelines.releases.create",
                      "path": "v1/{+parent}/releases",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent collection in which the `Release` should be created. Format should be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "releaseId": {
                          "description": "Required. ID of the `Release`.",
                          "location": "query",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "validateOnly": {
                          "description": "Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.",
                          "location": "query",
                          "type": "boolean"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Release"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new Release in a given project and location."
                    },
                    "abandon": {
                      "id": "clouddeploy.projects.locations.deliveryPipelines.releases.abandon",
                      "path": "v1/{+name}:abandon",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}:abandon",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the Release. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "AbandonReleaseRequest"
                      },
                      "response": {
                        "$ref": "AbandonReleaseResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Abandons a Release in the Delivery Pipeline."
                    }
                  },
                  "resources": {
                    "rollouts": {
                      "methods": {
                        "approve": {
                          "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.approve",
                          "path": "v1/{+name}:approve",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:approve",
                          "httpMethod": "POST",
                          "parameters": {
                            "name": {
                              "description": "Required. Name of the Rollout. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "ApproveRolloutRequest"
                          },
                          "response": {
                            "$ref": "ApproveRolloutResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Approves a Rollout."
                        },
                        "advance": {
                          "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.advance",
                          "path": "v1/{+name}:advance",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:advance",
                          "httpMethod": "POST",
                          "parameters": {
                            "name": {
                              "description": "Required. Name of the Rollout. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "AdvanceRolloutRequest"
                          },
                          "response": {
                            "$ref": "AdvanceRolloutResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Advances a Rollout in a given project and location."
                        },
                        "cancel": {
                          "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.cancel",
                          "path": "v1/{+name}:cancel",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:cancel",
                          "httpMethod": "POST",
                          "parameters": {
                            "name": {
                              "description": "Required. Name of the Rollout. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "CancelRolloutRequest"
                          },
                          "response": {
                            "$ref": "CancelRolloutResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Cancels a Rollout in a given project and location."
                        },
                        "list": {
                          "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.list",
                          "path": "v1/{+parent}/rollouts",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "Required. The `Release` which owns this collection of `Rollout` objects.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "Optional. The maximum number of `Rollout` objects to return. The service may return fewer than this value. If unspecified, at most 50 `Rollout` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "Optional. A page token, received from a previous `ListRollouts` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.",
                              "location": "query",
                              "type": "string"
                            },
                            "filter": {
                              "description": "Optional. Filter rollouts to be returned. See https://google.aip.dev/160 for more details.",
                              "location": "query",
                              "type": "string"
                            },
                            "orderBy": {
                              "description": "Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListRolloutsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Lists Rollouts in a given project and location."
                        },
                        "get": {
                          "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.get",
                          "path": "v1/{+name}",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "description": "Required. Name of the `Rollout`. Format must be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}/rollouts/{rollout_name}`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Rollout"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets details of a single Rollout."
                        },
                        "create": {
                          "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.create",
                          "path": "v1/{+parent}/rollouts",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts",
                          "httpMethod": "POST",
                          "parameters": {
                            "parent": {
                              "description": "Required. The parent collection in which the `Rollout` should be created. Format should be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "rolloutId": {
                              "description": "Required. ID of the `Rollout`.",
                              "location": "query",
                              "type": "string"
                            },
                            "requestId": {
                              "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                              "location": "query",
                              "type": "string"
                            },
                            "validateOnly": {
                              "description": "Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.",
                              "location": "query",
                              "type": "boolean"
                            },
                            "startingPhaseId": {
                              "description": "Optional. The starting phase ID for the `Rollout`. If empty the `Rollout` will start at the first phase.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "request": {
                            "$ref": "Rollout"
                          },
                          "response": {
                            "$ref": "Operation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Creates a new Rollout in a given project and location."
                        },
                        "ignoreJob": {
                          "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.ignoreJob",
                          "path": "v1/{+rollout}:ignoreJob",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:ignoreJob",
                          "httpMethod": "POST",
                          "parameters": {
                            "rollout": {
                              "description": "Required. Name of the Rollout. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "rollout"
                          ],
                          "request": {
                            "$ref": "IgnoreJobRequest"
                          },
                          "response": {
                            "$ref": "IgnoreJobResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Ignores the specified Job in a Rollout."
                        },
                        "retryJob": {
                          "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.retryJob",
                          "path": "v1/{+rollout}:retryJob",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:retryJob",
                          "httpMethod": "POST",
                          "parameters": {
                            "rollout": {
                              "description": "Required. Name of the Rollout. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "rollout"
                          ],
                          "request": {
                            "$ref": "RetryJobRequest"
                          },
                          "response": {
                            "$ref": "RetryJobResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Retries the specified Job in a Rollout."
                        }
                      },
                      "resources": {
                        "jobRuns": {
                          "methods": {
                            "list": {
                              "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.list",
                              "path": "v1/{+parent}/jobRuns",
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}/jobRuns",
                              "httpMethod": "GET",
                              "parameters": {
                                "parent": {
                                  "description": "Required. The `Rollout` which owns this collection of `JobRun` objects.",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+$",
                                  "location": "path",
                                  "required": true,
                                  "type": "string"
                                },
                                "pageSize": {
                                  "description": "Optional. The maximum number of `JobRun` objects to return. The service may return fewer than this value. If unspecified, at most 50 `JobRun` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000.",
                                  "location": "query",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "pageToken": {
                                  "description": "Optional. A page token, received from a previous `ListJobRuns` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.",
                                  "location": "query",
                                  "type": "string"
                                },
                                "filter": {
                                  "description": "Optional. Filter results to be returned. See https://google.aip.dev/160 for more details.",
                                  "location": "query",
                                  "type": "string"
                                },
                                "orderBy": {
                                  "description": "Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                                  "location": "query",
                                  "type": "string"
                                }
                              },
                              "parameterOrder": [
                                "parent"
                              ],
                              "response": {
                                "$ref": "ListJobRunsResponse"
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "description": "Lists JobRuns in a given project and location."
                            },
                            "get": {
                              "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.get",
                              "path": "v1/{+name}",
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}/jobRuns/{jobRunsId}",
                              "httpMethod": "GET",
                              "parameters": {
                                "name": {
                                  "description": "Required. Name of the `JobRun`. Format must be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}/rollouts/{rollout_name}/jobRuns/{job_run_name}`.",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+/jobRuns/[^/]+$",
                                  "location": "path",
                                  "required": true,
                                  "type": "string"
                                }
                              },
                              "parameterOrder": [
                                "name"
                              ],
                              "response": {
                                "$ref": "JobRun"
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "description": "Gets details of a single JobRun."
                            },
                            "terminate": {
                              "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.terminate",
                              "path": "v1/{+name}:terminate",
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}/jobRuns/{jobRunsId}:terminate",
                              "httpMethod": "POST",
                              "parameters": {
                                "name": {
                                  "description": "Required. Name of the `JobRun`. Format must be `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}/jobRuns/{jobRun}`.",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+/jobRuns/[^/]+$",
                                  "location": "path",
                                  "required": true,
                                  "type": "string"
                                }
                              },
                              "parameterOrder": [
                                "name"
                              ],
                              "request": {
                                "$ref": "TerminateJobRunRequest"
                              },
                              "response": {
                                "$ref": "TerminateJobRunResponse"
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "description": "Terminates a Job Run in a given project and location."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "automations": {
                  "methods": {
                    "create": {
                      "id": "clouddeploy.projects.locations.deliveryPipelines.automations.create",
                      "path": "v1/{+parent}/automations",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/automations",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent collection in which the `Automation` should be created. Format should be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "automationId": {
                          "description": "Required. ID of the `Automation`.",
                          "location": "query",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "validateOnly": {
                          "description": "Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.",
                          "location": "query",
                          "type": "boolean"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Automation"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new Automation in a given project and location."
                    },
                    "patch": {
                      "id": "clouddeploy.projects.locations.deliveryPipelines.automations.patch",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/automations/{automationsId}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "description": "Output only. Name of the `Automation`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automations/{automation}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/automations/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "updateMask": {
                          "description": "Required. Field mask is used to specify the fields to be overwritten in the `Automation` resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it's in the mask. If the user doesn't provide a mask then all fields are overwritten.",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        },
                        "requestId": {
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "allowMissing": {
                          "description": "Optional. If set to true, updating a `Automation` that does not exist will result in the creation of a new `Automation`.",
                          "location": "query",
                          "type": "boolean"
                        },
                        "validateOnly": {
                          "description": "Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.",
                          "location": "query",
                          "type": "boolean"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "Automation"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates the parameters of a single Automation resource."
                    },
                    "delete": {
                      "id": "clouddeploy.projects.locations.deliveryPipelines.automations.delete",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/automations/{automationsId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the `Automation` to delete. Format should be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/automations/{automation_name}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/automations/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "allowMissing": {
                          "description": "Optional. If set to true, then deleting an already deleted or non-existing `Automation` will succeed.",
                          "location": "query",
                          "type": "boolean"
                        },
                        "validateOnly": {
                          "description": "Optional. If set, validate the request and verify whether the resource exists, but do not actually post it.",
                          "location": "query",
                          "type": "boolean"
                        },
                        "etag": {
                          "description": "Optional. The weak etag of the request. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a single Automation resource."
                    },
                    "get": {
                      "id": "clouddeploy.projects.locations.deliveryPipelines.automations.get",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/automations/{automationsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the `Automation`. Format must be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/automations/{automation_name}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/automations/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Automation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single Automation."
                    },
                    "list": {
                      "id": "clouddeploy.projects.locations.deliveryPipelines.automations.list",
                      "path": "v1/{+parent}/automations",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/automations",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent `Delivery Pipeline`, which owns this collection of automations. Format must be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of automations to return. The service may return fewer than this value. If unspecified, at most 50 automations will be returned. The maximum value is 1000; values above 1000 will be set to 1000.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "A page token, received from a previous `ListAutomations` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Filter automations to be returned. All fields can be used in the filter.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Field to sort by.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListAutomationsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists Automations in a given project and location."
                    }
                  }
                },
                "automationRuns": {
                  "methods": {
                    "get": {
                      "id": "clouddeploy.projects.locations.deliveryPipelines.automationRuns.get",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/automationRuns/{automationRunsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the `AutomationRun`. Format must be `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/automationRuns/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "AutomationRun"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single AutomationRun."
                    },
                    "list": {
                      "id": "clouddeploy.projects.locations.deliveryPipelines.automationRuns.list",
                      "path": "v1/{+parent}/automationRuns",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/automationRuns",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent `Delivery Pipeline`, which owns this collection of automationRuns. Format must be `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of automationRuns to return. The service may return fewer than this value. If unspecified, at most 50 automationRuns will be returned. The maximum value is 1000; values above 1000 will be set to 1000.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "A page token, received from a previous `ListAutomationRuns` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Filter automationRuns to be returned. All fields can be used in the filter.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Field to sort by.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListAutomationRunsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists AutomationRuns in a given project and location."
                    },
                    "cancel": {
                      "id": "clouddeploy.projects.locations.deliveryPipelines.automationRuns.cancel",
                      "path": "v1/{+name}:cancel",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/automationRuns/{automationRunsId}:cancel",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the `AutomationRun`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/automationRuns/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "CancelAutomationRunRequest"
                      },
                      "response": {
                        "$ref": "CancelAutomationRunResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Cancels an AutomationRun. The `state` of the `AutomationRun` after cancelling is `CANCELLED`. `CancelAutomationRun` can be called on AutomationRun in the state `IN_PROGRESS` and `PENDING`; AutomationRun in a different state returns an `FAILED_PRECONDITION` error."
                    }
                  }
                }
              }
            },
            "targets": {
              "methods": {
                "list": {
                  "id": "clouddeploy.projects.locations.targets.list",
                  "path": "v1/{+parent}/targets",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targets",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent, which owns this collection of targets. Format must be `projects/{project_id}/locations/{location_name}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of `Target` objects to return. The service may return fewer than this value. If unspecified, at most 50 `Target` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. A page token, received from a previous `ListTargets` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. Filter targets to be returned. See https://google.aip.dev/160 for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListTargetsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Targets in a given project and location."
                },
                "get": {
                  "id": "clouddeploy.projects.locations.targets.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the `Target`. Format must be `projects/{project_id}/locations/{location_name}/targets/{target_name}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targets/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Target"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single Target."
                },
                "create": {
                  "id": "clouddeploy.projects.locations.targets.create",
                  "path": "v1/{+parent}/targets",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targets",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent collection in which the `Target` should be created. Format should be `projects/{project_id}/locations/{location_name}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "targetId": {
                      "description": "Required. ID of the `Target`.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Target"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Target in a given project and location."
                },
                "patch": {
                  "id": "clouddeploy.projects.locations.targets.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Optional. Name of the `Target`. Format is `projects/{project}/locations/{location}/targets/{target}`. The `target` component must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targets/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the Target resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it's in the mask. If the user doesn't provide a mask then all fields are overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "allowMissing": {
                      "description": "Optional. If set to true, updating a `Target` that does not exist will result in the creation of a new `Target`.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "validateOnly": {
                      "description": "Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Target"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single Target."
                },
                "delete": {
                  "id": "clouddeploy.projects.locations.targets.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the `Target` to delete. Format should be `projects/{project_id}/locations/{location_name}/targets/{target_name}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targets/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "allowMissing": {
                      "description": "Optional. If set to true, then deleting an already deleted or non-existing `Target` will succeed.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "validateOnly": {
                      "description": "Optional. If set, validate the request and preview the review, but do not actually post it.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "etag": {
                      "description": "Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Target."
                },
                "setIamPolicy": {
                  "id": "clouddeploy.projects.locations.targets.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targets/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "clouddeploy.projects.locations.targets.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targets/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "clouddeploy.projects.locations.targets.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targets/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "customTargetTypes": {
              "methods": {
                "list": {
                  "id": "clouddeploy.projects.locations.customTargetTypes.list",
                  "path": "v1/{+parent}/customTargetTypes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/customTargetTypes",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent that owns this collection of custom target types. Format must be `projects/{project_id}/locations/{location_name}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of `CustomTargetType` objects to return. The service may return fewer than this value. If unspecified, at most 50 `CustomTargetType` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. A page token, received from a previous `ListCustomTargetTypes` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. Filter custom target types to be returned. See https://google.aip.dev/160 for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListCustomTargetTypesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists CustomTargetTypes in a given project and location."
                },
                "get": {
                  "id": "clouddeploy.projects.locations.customTargetTypes.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/customTargetTypes/{customTargetTypesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the `CustomTargetType`. Format must be `projects/{project_id}/locations/{location_name}/customTargetTypes/{custom_target_type}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/customTargetTypes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "CustomTargetType"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single CustomTargetType."
                },
                "create": {
                  "id": "clouddeploy.projects.locations.customTargetTypes.create",
                  "path": "v1/{+parent}/customTargetTypes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/customTargetTypes",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent collection in which the `CustomTargetType` should be created. Format should be `projects/{project_id}/locations/{location_name}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "customTargetTypeId": {
                      "description": "Required. ID of the `CustomTargetType`.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "CustomTargetType"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new CustomTargetType in a given project and location."
                },
                "patch": {
                  "id": "clouddeploy.projects.locations.customTargetTypes.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/customTargetTypes/{customTargetTypesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Optional. Name of the `CustomTargetType`. Format is `projects/{project}/locations/{location}/customTargetTypes/{customTargetType}`. The `customTargetType` component must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/customTargetTypes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `CustomTargetType` resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it's in the mask. If the user doesn't provide a mask then all fields are overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "allowMissing": {
                      "description": "Optional. If set to true, updating a `CustomTargetType` that does not exist will result in the creation of a new `CustomTargetType`.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "validateOnly": {
                      "description": "Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CustomTargetType"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a single CustomTargetType."
                },
                "delete": {
                  "id": "clouddeploy.projects.locations.customTargetTypes.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/customTargetTypes/{customTargetTypesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the `CustomTargetType` to delete. Format must be `projects/{project_id}/locations/{location_name}/customTargetTypes/{custom_target_type}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/customTargetTypes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "allowMissing": {
                      "description": "Optional. If set to true, then deleting an already deleted or non-existing `CustomTargetType` will succeed.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "validateOnly": {
                      "description": "Optional. If set to true, the request is validated but no actual change is made.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "etag": {
                      "description": "Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single CustomTargetType."
                },
                "setIamPolicy": {
                  "id": "clouddeploy.projects.locations.customTargetTypes.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/customTargetTypes/{customTargetTypesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/customTargetTypes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "clouddeploy.projects.locations.customTargetTypes.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/customTargetTypes/{customTargetTypesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/customTargetTypes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                }
              }
            }
          }
        }
      }
    }
  },
  "batchPath": "batch",
  "id": "clouddeploy:v1",
  "revision": "20240614",
  "servicePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "basePath": "",
  "canonicalName": "Cloud Deploy",
  "ownerDomain": "google.com",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "rootUrl": "https://clouddeploy.googleapis.com/",
  "name": "clouddeploy",
  "baseUrl": "https://clouddeploy.googleapis.com/"
}

{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "schemas": {
    "ListTargetsResponse": {
      "description": "The response object from `ListTargets`.",
      "type": "object",
      "id": "ListTargetsResponse",
      "properties": {
        "targets": {
          "items": {
            "$ref": "Target"
          },
          "type": "array",
          "description": "The `Target` objects."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "DeployJobRunMetadata": {
      "description": "DeployJobRunMetadata surfaces information associated with a `DeployJobRun` to the user.",
      "type": "object",
      "id": "DeployJobRunMetadata",
      "properties": {
        "cloudRun": {
          "description": "Output only. The name of the Cloud Run Service that is associated with a `DeployJobRun`.",
          "readOnly": true,
          "$ref": "CloudRunMetadata"
        }
      }
    },
    "DeployJobRun": {
      "properties": {
        "artifact": {
          "readOnly": true,
          "description": "Output only. The artifact of a deploy job run, if available.",
          "$ref": "DeployArtifact"
        },
        "failureCause": {
          "description": "Output only. The reason the deploy failed. This will always be unspecified while the deploy is in progress or if it succeeded.",
          "type": "string",
          "enum": [
            "FAILURE_CAUSE_UNSPECIFIED",
            "CLOUD_BUILD_UNAVAILABLE",
            "EXECUTION_FAILED",
            "DEADLINE_EXCEEDED",
            "MISSING_RESOURCES_FOR_CANARY",
            "CLOUD_BUILD_REQUEST_FAILED"
          ],
          "enumDescriptions": [
            "No reason for failure is specified.",
            "Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [Required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).",
            "The deploy operation did not complete successfully; check Cloud Build logs.",
            "The deploy job run did not complete within the alloted time.",
            "There were missing resources in the runtime environment required for a canary deployment. Check the Cloud Build logs for more information.",
            "Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details."
          ],
          "readOnly": true
        },
        "build": {
          "description": "Output only. The resource name of the Cloud Build `Build` object that is used to deploy. Format is projects/{project}/locations/{location}/builds/{build}.",
          "type": "string",
          "readOnly": true
        },
        "failureMessage": {
          "type": "string",
          "description": "Output only. Additional information about the deploy failure, if available.",
          "readOnly": true
        },
        "metadata": {
          "readOnly": true,
          "description": "Output only. Metadata containing information about the deploy job run.",
          "$ref": "DeployJobRunMetadata"
        }
      },
      "type": "object",
      "description": "DeployJobRun contains information specific to a deploy `JobRun`.",
      "id": "DeployJobRun"
    },
    "SkaffoldSupportedCondition": {
      "properties": {
        "maintenanceModeTime": {
          "description": "The time at which this release's version of skaffold will enter maintenance mode.",
          "type": "string",
          "format": "google-datetime"
        },
        "status": {
          "type": "boolean",
          "description": "True if the version of skaffold used by this release is supported."
        },
        "skaffoldSupportState": {
          "description": "The skaffold support state for this release's version of skaffold.",
          "enum": [
            "SKAFFOLD_SUPPORT_STATE_UNSPECIFIED",
            "SKAFFOLD_SUPPORT_STATE_SUPPORTED",
            "SKAFFOLD_SUPPORT_STATE_MAINTENANCE_MODE",
            "SKAFFOLD_SUPPORT_STATE_UNSUPPORTED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "This skaffold version is currently supported.",
            "This skaffold version is in maintenance mode.",
            "This skaffold version is no longer supported."
          ]
        },
        "supportExpirationTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time at which this release's version of skaffold will no longer be supported."
        }
      },
      "description": "SkaffoldSupportedCondition contains information about when support for the release's version of skaffold ends.",
      "id": "SkaffoldSupportedCondition",
      "type": "object"
    },
    "AdvanceChildRolloutJob": {
      "type": "object",
      "id": "AdvanceChildRolloutJob",
      "description": "An advanceChildRollout Job.",
      "properties": {}
    },
    "PredeployJobRun": {
      "type": "object",
      "description": "PredeployJobRun contains information specific to a predeploy `JobRun`.",
      "id": "PredeployJobRun",
      "properties": {
        "failureCause": {
          "description": "Output only. The reason the predeploy failed. This will always be unspecified while the predeploy is in progress or if it succeeded.",
          "enum": [
            "FAILURE_CAUSE_UNSPECIFIED",
            "CLOUD_BUILD_UNAVAILABLE",
            "EXECUTION_FAILED",
            "DEADLINE_EXCEEDED",
            "CLOUD_BUILD_REQUEST_FAILED"
          ],
          "type": "string",
          "readOnly": true,
          "enumDescriptions": [
            "No reason for failure is specified.",
            "Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).",
            "The predeploy operation did not complete successfully; check Cloud Build logs.",
            "The predeploy job run did not complete within the alloted time.",
            "Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details."
          ]
        },
        "failureMessage": {
          "readOnly": true,
          "description": "Output only. Additional information about the predeploy failure, if available.",
          "type": "string"
        },
        "build": {
          "description": "Output only. The resource name of the Cloud Build `Build` object that is used to execute the custom actions associated with the predeploy Job. Format is projects/{project}/locations/{location}/builds/{build}.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Phase": {
      "id": "Phase",
      "properties": {
        "skipMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Additional information on why the Phase was skipped, if available."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The Phase has an unspecified state.",
            "The Phase is waiting for an earlier Phase(s) to complete.",
            "The Phase is in progress.",
            "The Phase has succeeded.",
            "The Phase has failed.",
            "The Phase was aborted.",
            "The Phase was skipped."
          ],
          "description": "Output only. Current state of the Phase.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "IN_PROGRESS",
            "SUCCEEDED",
            "FAILED",
            "ABORTED",
            "SKIPPED"
          ]
        },
        "deploymentJobs": {
          "$ref": "DeploymentJobs",
          "readOnly": true,
          "description": "Output only. Deployment job composition."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The ID of the Phase."
        },
        "childRolloutJobs": {
          "description": "Output only. ChildRollout job composition.",
          "$ref": "ChildRolloutJobs",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Phase represents a collection of jobs that are logically grouped together for a `Rollout`."
    },
    "DeliveryPipelineNotificationEvent": {
      "description": "Payload proto for \"clouddeploy.googleapis.com/deliverypipeline_notification\" Platform Log event that describes the failure to send delivery pipeline status change Pub/Sub notification.",
      "id": "DeliveryPipelineNotificationEvent",
      "type": "object",
      "properties": {
        "deliveryPipeline": {
          "type": "string",
          "description": "The name of the `Delivery Pipeline`."
        },
        "message": {
          "type": "string",
          "description": "Debug message for when a notification fails to send."
        },
        "type": {
          "enumDescriptions": [
            "Type is unspecified.",
            "A Pub/Sub notification failed to be sent.",
            "Resource state changed.",
            "A process aborted.",
            "Restriction check failed.",
            "Resource deleted.",
            "Rollout updated.",
            "Deprecated: This field is never used. Use release_render log type instead."
          ],
          "description": "Type of this notification, e.g. for a Pub/Sub failure.",
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PUBSUB_NOTIFICATION_FAILURE",
            "TYPE_RESOURCE_STATE_CHANGE",
            "TYPE_PROCESS_ABORTED",
            "TYPE_RESTRICTION_VIOLATED",
            "TYPE_RESOURCE_DELETED",
            "TYPE_ROLLOUT_UPDATE",
            "TYPE_RENDER_STATUES_CHANGE"
          ]
        }
      }
    },
    "DeliveryPipeline": {
      "type": "object",
      "id": "DeliveryPipeline",
      "properties": {
        "createTime": {
          "readOnly": true,
          "description": "Output only. Time at which the pipeline was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "annotations": {
          "type": "object",
          "description": "User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. Most recent time at which the pipeline was updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
        },
        "condition": {
          "$ref": "PipelineCondition",
          "description": "Output only. Information around the state of the Delivery Pipeline.",
          "readOnly": true
        },
        "serialPipeline": {
          "description": "SerialPipeline defines a sequential set of stages for a `DeliveryPipeline`.",
          "$ref": "SerialPipeline"
        },
        "suspended": {
          "description": "When suspended, no new releases or rollouts can be created, but in-progress ones will complete.",
          "type": "boolean"
        },
        "uid": {
          "description": "Output only. Unique identifier of the `DeliveryPipeline`.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Description of the `DeliveryPipeline`. Max length is 255 characters.",
          "type": "string"
        },
        "name": {
          "description": "Optional. Name of the `DeliveryPipeline`. Format is projects/{project}/ locations/{location}/deliveryPipelines/a-z{0,62}.",
          "type": "string"
        },
        "labels": {
          "description": "Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be \u003c= 128 bytes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "A `DeliveryPipeline` resource in the Cloud Deploy API. A `DeliveryPipeline` defines a pipeline through which a Skaffold configuration can progress."
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        }
      }
    },
    "TargetArtifact": {
      "id": "TargetArtifact",
      "description": "The artifacts produced by a target render operation.",
      "properties": {
        "manifestPath": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. File path of the rendered manifest relative to the URI."
        },
        "artifactUri": {
          "type": "string",
          "description": "Output only. URI of a directory containing the artifacts. This contains deployment configuration used by Skaffold during a rollout, and all paths are relative to this location.",
          "readOnly": true
        },
        "phaseArtifacts": {
          "additionalProperties": {
            "$ref": "PhaseArtifact"
          },
          "type": "object",
          "description": "Output only. Map from the phase ID to the phase artifacts for the `Target`.",
          "readOnly": true
        },
        "skaffoldConfigPath": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. File path of the resolved Skaffold configuration relative to the URI."
        }
      },
      "type": "object"
    },
    "DefaultPool": {
      "type": "object",
      "properties": {
        "serviceAccount": {
          "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) will be used.",
          "type": "string"
        },
        "artifactStorage": {
          "description": "Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used.",
          "type": "string"
        }
      },
      "description": "Execution using the default Cloud Build pool.",
      "id": "DefaultPool"
    },
    "SerialPipeline": {
      "type": "object",
      "description": "SerialPipeline defines a sequential set of stages for a `DeliveryPipeline`.",
      "properties": {
        "stages": {
          "items": {
            "$ref": "Stage"
          },
          "type": "array",
          "description": "Each stage specifies configuration for a `Target`. The ordering of this list defines the promotion flow."
        }
      },
      "id": "SerialPipeline"
    },
    "CloudRunRenderMetadata": {
      "type": "object",
      "description": "CloudRunRenderMetadata contains Cloud Run information associated with a `Release` render.",
      "properties": {
        "service": {
          "readOnly": true,
          "description": "Output only. The name of the Cloud Run Service in the rendered manifest. Format is projects/{project}/locations/{location}/services/{service}.",
          "type": "string"
        }
      },
      "id": "CloudRunRenderMetadata"
    },
    "ReleaseRenderEvent": {
      "description": "Payload proto for \"clouddeploy.googleapis.com/release_render\" Platform Log event that describes the render status change.",
      "id": "ReleaseRenderEvent",
      "properties": {
        "release": {
          "description": "The name of the `Release`.",
          "type": "string"
        },
        "message": {
          "type": "string",
          "description": "Debug message for when a render transition occurs. Provides further details as rendering progresses through render states."
        }
      },
      "type": "object"
    },
    "CloudRunMetadata": {
      "description": "CloudRunMetadata contains information from a Cloud Run deployment.",
      "type": "object",
      "id": "CloudRunMetadata",
      "properties": {
        "revision": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The Cloud Run Revision id associated with a `Rollout`."
        },
        "serviceUrls": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. The Cloud Run Service urls that are associated with a `Rollout`.",
          "readOnly": true
        },
        "service": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the Cloud Run Service that is associated with a `Rollout`. Format is projects/{project}/locations/{location}/services/{service}."
        }
      }
    },
    "SkaffoldVersion": {
      "properties": {
        "supportExpirationTime": {
          "type": "string",
          "description": "The time at which this version of skaffold will no longer be supported.",
          "format": "google-datetime"
        },
        "maintenanceModeTime": {
          "format": "google-datetime",
          "description": "The time at which this version of skaffold will enter maintenance mode.",
          "type": "string"
        },
        "version": {
          "description": "Release version number. For example, \"1.20.3\".",
          "type": "string"
        },
        "supportEndDate": {
          "description": "Date when this version is expected to no longer be supported.",
          "$ref": "Date"
        }
      },
      "description": "Details of a supported Skaffold version.",
      "id": "SkaffoldVersion",
      "type": "object"
    },
    "PredeployJob": {
      "type": "object",
      "id": "PredeployJob",
      "properties": {
        "actions": {
          "readOnly": true,
          "description": "Output only. The custom actions that the predeploy Job executes.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "A predeploy Job."
    },
    "GatewayServiceMesh": {
      "type": "object",
      "id": "GatewayServiceMesh",
      "description": "Information about the Kubernetes Gateway API service mesh configuration.",
      "properties": {
        "httpRoute": {
          "type": "string",
          "description": "Required. Name of the Gateway API HTTPRoute."
        },
        "routeUpdateWaitTime": {
          "description": "Optional. The time to wait for route updates to propagate. The maximum configurable time is 3 hours, in seconds format. If unspecified, there is no wait time.",
          "type": "string",
          "format": "google-duration"
        },
        "deployment": {
          "type": "string",
          "description": "Required. Name of the Kubernetes Deployment whose traffic is managed by the specified HTTPRoute and Service."
        },
        "service": {
          "type": "string",
          "description": "Required. Name of the Kubernetes Service."
        }
      }
    },
    "AnthosCluster": {
      "properties": {
        "membership": {
          "type": "string",
          "description": "Membership of the GKE Hub-registered cluster to which to apply the Skaffold configuration. Format is `projects/{project}/locations/{location}/memberships/{membership_name}`."
        }
      },
      "type": "object",
      "id": "AnthosCluster",
      "description": "Information specifying an Anthos Cluster."
    },
    "TestIamPermissionsResponse": {
      "type": "object",
      "description": "Response message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsResponse"
    },
    "IgnoreJobRequest": {
      "type": "object",
      "description": "The request object used by `IgnoreJob`.",
      "properties": {
        "jobId": {
          "description": "Required. The job ID for the Job to ignore.",
          "type": "string"
        },
        "phaseId": {
          "description": "Required. The phase ID the Job to ignore belongs to.",
          "type": "string"
        }
      },
      "id": "IgnoreJobRequest"
    },
    "ReleaseReadyCondition": {
      "id": "ReleaseReadyCondition",
      "type": "object",
      "properties": {
        "status": {
          "description": "True if the Release is in a valid state. Otherwise at least one condition in `ReleaseCondition` is in an invalid state. Iterate over those conditions and see which condition(s) has status = false to find out what is wrong with the Release.",
          "type": "boolean"
        }
      },
      "description": "ReleaseReadyCondition contains information around the status of the Release. If a release is not ready, you cannot create a rollout with the release."
    },
    "RolloutNotificationEvent": {
      "properties": {
        "type": {
          "description": "Type of this notification, e.g. for a Pub/Sub failure.",
          "enumDescriptions": [
            "Type is unspecified.",
            "A Pub/Sub notification failed to be sent.",
            "Resource state changed.",
            "A process aborted.",
            "Restriction check failed.",
            "Resource deleted.",
            "Rollout updated.",
            "Deprecated: This field is never used. Use release_render log type instead."
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PUBSUB_NOTIFICATION_FAILURE",
            "TYPE_RESOURCE_STATE_CHANGE",
            "TYPE_PROCESS_ABORTED",
            "TYPE_RESTRICTION_VIOLATED",
            "TYPE_RESOURCE_DELETED",
            "TYPE_ROLLOUT_UPDATE",
            "TYPE_RENDER_STATUES_CHANGE"
          ],
          "type": "string"
        },
        "message": {
          "description": "Debug message for when a notification fails to send.",
          "type": "string"
        },
        "releaseUid": {
          "type": "string",
          "description": "Unique identifier of the `Release`."
        },
        "rollout": {
          "type": "string",
          "description": "The name of the `Rollout`."
        },
        "targetId": {
          "type": "string",
          "description": "ID of the `Target` that the rollout is deployed to."
        },
        "pipelineUid": {
          "description": "Unique identifier of the `DeliveryPipeline`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "RolloutNotificationEvent",
      "description": "Payload proto for \"clouddeploy.googleapis.com/rollout_notification\" Platform Log event that describes the failure to send rollout status change Pub/Sub notification."
    },
    "CancelRolloutRequest": {
      "type": "object",
      "description": "The request object used by `CancelRollout`.",
      "id": "CancelRolloutRequest",
      "properties": {}
    },
    "PhaseArtifact": {
      "properties": {
        "manifestPath": {
          "readOnly": true,
          "description": "Output only. File path of the rendered manifest relative to the URI.",
          "type": "string"
        },
        "jobManifestsPath": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. File path of the directory of rendered job manifests relative to the URI. This is only set if it is applicable."
        },
        "skaffoldConfigPath": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. File path of the resolved Skaffold configuration relative to the URI."
        }
      },
      "id": "PhaseArtifact",
      "type": "object",
      "description": "Contains the paths to the artifacts, relative to the URI, for a phase."
    },
    "Stage": {
      "type": "object",
      "properties": {
        "strategy": {
          "description": "Optional. The strategy to use for a `Rollout` to this stage.",
          "$ref": "Strategy"
        },
        "deployParameters": {
          "description": "Optional. The deploy parameters to use for the target in this stage.",
          "items": {
            "$ref": "DeployParameters"
          },
          "type": "array"
        },
        "targetId": {
          "description": "The target_id to which this stage points. This field refers exclusively to the last segment of a target name. For example, this field would just be `my-target` (rather than `projects/project/locations/location/targets/my-target`). The location of the `Target` is inferred to be the same as the location of the `DeliveryPipeline` that contains this `Stage`.",
          "type": "string"
        },
        "profiles": {
          "type": "array",
          "description": "Skaffold profiles to use when rendering the manifest for this stage's `Target`.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "Stage",
      "description": "Stage specifies a location to which to deploy."
    },
    "DeployArtifact": {
      "type": "object",
      "description": "The artifacts produced by a deploy operation.",
      "properties": {
        "manifestPaths": {
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "Output only. File paths of the manifests applied during the deploy operation relative to the URI.",
          "type": "array"
        },
        "artifactUri": {
          "readOnly": true,
          "description": "Output only. URI of a directory containing the artifacts. All paths are relative to this location.",
          "type": "string"
        }
      },
      "id": "DeployArtifact"
    },
    "PostdeployJobRun": {
      "id": "PostdeployJobRun",
      "type": "object",
      "properties": {
        "failureCause": {
          "type": "string",
          "description": "Output only. The reason the postdeploy failed. This will always be unspecified while the postdeploy is in progress or if it succeeded.",
          "enumDescriptions": [
            "No reason for failure is specified.",
            "Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).",
            "The postdeploy operation did not complete successfully; check Cloud Build logs.",
            "The postdeploy job run did not complete within the alloted time.",
            "Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details."
          ],
          "readOnly": true,
          "enum": [
            "FAILURE_CAUSE_UNSPECIFIED",
            "CLOUD_BUILD_UNAVAILABLE",
            "EXECUTION_FAILED",
            "DEADLINE_EXCEEDED",
            "CLOUD_BUILD_REQUEST_FAILED"
          ]
        },
        "failureMessage": {
          "description": "Output only. Additional information about the postdeploy failure, if available.",
          "type": "string",
          "readOnly": true
        },
        "build": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of the Cloud Build `Build` object that is used to execute the custom actions associated with the postdeploy Job. Format is projects/{project}/locations/{location}/builds/{build}."
        }
      },
      "description": "PostdeployJobRun contains information specific to a postdeploy `JobRun`."
    },
    "DeployParameters": {
      "properties": {
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Required. Values are deploy parameters in key-value pairs."
        },
        "matchTargetLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Deploy parameters are applied to targets with match labels. If unspecified, deploy parameters are applied to all targets (including child targets of a multi-target)."
        }
      },
      "type": "object",
      "id": "DeployParameters",
      "description": "DeployParameters contains deploy parameters information."
    },
    "AbandonReleaseRequest": {
      "type": "object",
      "description": "The request object used by `AbandonRelease`.",
      "properties": {},
      "id": "AbandonReleaseRequest"
    },
    "SetIamPolicyRequest": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        },
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
        }
      },
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method."
    },
    "Standard": {
      "description": "Standard represents the standard deployment strategy.",
      "properties": {
        "predeploy": {
          "$ref": "Predeploy",
          "description": "Optional. Configuration for the predeploy job. If this is not configured, predeploy job will not be present."
        },
        "postdeploy": {
          "description": "Optional. Configuration for the postdeploy job. If this is not configured, postdeploy job will not be present.",
          "$ref": "Postdeploy"
        },
        "verify": {
          "description": "Whether to verify a deployment.",
          "type": "boolean"
        }
      },
      "id": "Standard",
      "type": "object"
    },
    "PostdeployJob": {
      "type": "object",
      "id": "PostdeployJob",
      "properties": {
        "actions": {
          "type": "array",
          "description": "Output only. The custom actions that the postdeploy Job executes.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "description": "A postdeploy Job."
    },
    "PipelineCondition": {
      "id": "PipelineCondition",
      "properties": {
        "pipelineReadyCondition": {
          "description": "Details around the Pipeline's overall status.",
          "$ref": "PipelineReadyCondition"
        },
        "targetsTypeCondition": {
          "description": "Details on the whether the targets enumerated in the pipeline are of the same type.",
          "$ref": "TargetsTypeCondition"
        },
        "targetsPresentCondition": {
          "description": "Details around targets enumerated in the pipeline.",
          "$ref": "TargetsPresentCondition"
        }
      },
      "description": "PipelineCondition contains all conditions relevant to a Delivery Pipeline.",
      "type": "object"
    },
    "DeploymentJobs": {
      "id": "DeploymentJobs",
      "properties": {
        "verifyJob": {
          "$ref": "Job",
          "description": "Output only. The verify Job. Runs after a deploy if the deploy succeeds.",
          "readOnly": true
        },
        "postdeployJob": {
          "readOnly": true,
          "description": "Output only. The postdeploy Job, which is the last job on the phase.",
          "$ref": "Job"
        },
        "predeployJob": {
          "description": "Output only. The predeploy Job, which is the first job on the phase.",
          "readOnly": true,
          "$ref": "Job"
        },
        "deployJob": {
          "readOnly": true,
          "description": "Output only. The deploy Job. This is the deploy job in the phase.",
          "$ref": "Job"
        }
      },
      "description": "Deployment job composition.",
      "type": "object"
    },
    "RollbackTargetRequest": {
      "description": "The request object for `RollbackTarget`.",
      "properties": {
        "validateOnly": {
          "description": "Optional. If set to true, the request is validated and the user is provided with a `RollbackTargetResponse`.",
          "type": "boolean"
        },
        "targetId": {
          "description": "Required. ID of the `Target` that is being rolled back.",
          "type": "string"
        },
        "releaseId": {
          "description": "Optional. ID of the `Release` to roll back to. If this isn't specified, the previous successful `Rollout` to the specified target will be used to determine the `Release`.",
          "type": "string"
        },
        "rolloutId": {
          "type": "string",
          "description": "Required. ID of the rollback `Rollout` to create."
        },
        "rollbackConfig": {
          "$ref": "RollbackTargetConfig",
          "description": "Optional. Configs for the rollback `Rollout`."
        },
        "rolloutToRollBack": {
          "type": "string",
          "description": "Optional. If provided, this must be the latest `Rollout` that is on the `Target`."
        }
      },
      "type": "object",
      "id": "RollbackTargetRequest"
    },
    "ListRolloutsResponse": {
      "properties": {
        "rollouts": {
          "items": {
            "$ref": "Rollout"
          },
          "type": "array",
          "description": "The `Rollout` objects."
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "ListRolloutsResponse is the response object reutrned by `ListRollouts`.",
      "id": "ListRolloutsResponse"
    },
    "AutomationEvent": {
      "id": "AutomationEvent",
      "properties": {
        "message": {
          "description": "Debug message for when there is an update on the AutomationRun. Provides further details about the resource creation or state change.",
          "type": "string"
        },
        "automation": {
          "type": "string",
          "description": "The name of the `AutomationRun`."
        },
        "pipelineUid": {
          "description": "Unique identifier of the `DeliveryPipeline`.",
          "type": "string"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PUBSUB_NOTIFICATION_FAILURE",
            "TYPE_RESOURCE_STATE_CHANGE",
            "TYPE_PROCESS_ABORTED",
            "TYPE_RESTRICTION_VIOLATED",
            "TYPE_RESOURCE_DELETED",
            "TYPE_ROLLOUT_UPDATE",
            "TYPE_RENDER_STATUES_CHANGE"
          ],
          "enumDescriptions": [
            "Type is unspecified.",
            "A Pub/Sub notification failed to be sent.",
            "Resource state changed.",
            "A process aborted.",
            "Restriction check failed.",
            "Resource deleted.",
            "Rollout updated.",
            "Deprecated: This field is never used. Use release_render log type instead."
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
          ],
          "type": "string",
          "description": "Type of this notification, e.g. for a Pub/Sub failure."
        }
      },
      "description": "Payload proto for \"clouddeploy.googleapis.com/automation\" Platform Log event that describes the Automation related events.",
      "type": "object"
    },
    "RollbackTargetConfig": {
      "description": "Configs for the Rollback rollout.",
      "type": "object",
      "properties": {
        "rollout": {
          "description": "Optional. The rollback `Rollout` to create.",
          "$ref": "Rollout"
        },
        "startingPhaseId": {
          "description": "Optional. The starting phase ID for the `Rollout`. If unspecified, the `Rollout` will start in the stable phase.",
          "type": "string"
        }
      },
      "id": "RollbackTargetConfig"
    },
    "RuntimeConfig": {
      "description": "RuntimeConfig contains the runtime specific configurations for a deployment strategy.",
      "properties": {
        "kubernetes": {
          "description": "Kubernetes runtime configuration.",
          "$ref": "KubernetesConfig"
        },
        "cloudRun": {
          "$ref": "CloudRunConfig",
          "description": "Cloud Run runtime configuration."
        }
      },
      "type": "object",
      "id": "RuntimeConfig"
    },
    "TargetsPresentCondition": {
      "properties": {
        "status": {
          "type": "boolean",
          "description": "True if there aren't any missing Targets."
        },
        "missingTargets": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of Target names that do not exist. For example, projects/{project_id}/locations/{location_name}/targets/{target_name}."
        },
        "updateTime": {
          "description": "Last time the condition was updated.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object",
      "id": "TargetsPresentCondition",
      "description": "TargetsPresentCondition contains information on any Targets defined in the Delivery Pipeline that do not actually exist."
    },
    "TargetsTypeCondition": {
      "type": "object",
      "id": "TargetsTypeCondition",
      "properties": {
        "status": {
          "type": "boolean",
          "description": "True if the targets are all a comparable type. For example this is true if all targets are GKE clusters. This is false if some targets are Cloud Run targets and others are GKE clusters."
        },
        "errorDetails": {
          "type": "string",
          "description": "Human readable error message."
        }
      },
      "description": "TargetsTypeCondition contains information on whether the Targets defined in the Delivery Pipeline are of the same type."
    },
    "CustomCanaryDeployment": {
      "properties": {
        "phaseConfigs": {
          "items": {
            "$ref": "PhaseConfig"
          },
          "description": "Required. Configuration for each phase in the canary deployment in the order executed.",
          "type": "array"
        }
      },
      "id": "CustomCanaryDeployment",
      "description": "CustomCanaryDeployment represents the custom canary deployment configuration.",
      "type": "object"
    },
    "Binding": {
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding."
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        }
      },
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object",
      "id": "Binding"
    },
    "ReleaseCondition": {
      "properties": {
        "releaseReadyCondition": {
          "$ref": "ReleaseReadyCondition",
          "description": "Details around the Releases's overall status."
        },
        "skaffoldSupportedCondition": {
          "$ref": "SkaffoldSupportedCondition",
          "description": "Details around the support state of the release's skaffold version."
        }
      },
      "id": "ReleaseCondition",
      "type": "object",
      "description": "ReleaseCondition contains all conditions relevant to a Release."
    },
    "AdvanceRolloutResponse": {
      "properties": {},
      "description": "The response object from `AdvanceRollout`.",
      "id": "AdvanceRolloutResponse",
      "type": "object"
    },
    "PipelineReadyCondition": {
      "id": "PipelineReadyCondition",
      "description": "PipelineReadyCondition contains information around the status of the Pipeline.",
      "properties": {
        "updateTime": {
          "description": "Last time the condition was updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "status": {
          "description": "True if the Pipeline is in a valid state. Otherwise at least one condition in `PipelineCondition` is in an invalid state. Iterate over those conditions and see which condition(s) has status = false to find out what is wrong with the Pipeline.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "id": "CancelOperationRequest",
      "type": "object"
    },
    "CloudRunLocation": {
      "description": "Information specifying where to deploy a Cloud Run Service.",
      "id": "CloudRunLocation",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Required. The location for the Cloud Run Service. Format must be `projects/{project}/locations/{location}`."
        }
      }
    },
    "CreateChildRolloutJob": {
      "id": "CreateChildRolloutJob",
      "description": "A createChildRollout Job.",
      "type": "object",
      "properties": {}
    },
    "Policy": {
      "type": "object",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "properties": {
        "auditConfigs": {
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          },
          "description": "Specifies cloud audit logging configuration for this policy."
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "etag": {
          "format": "byte",
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        },
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Policy"
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "properties": {
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        },
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        }
      },
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "type": "object"
    },
    "Strategy": {
      "description": "Strategy contains deployment strategy information.",
      "id": "Strategy",
      "properties": {
        "canary": {
          "$ref": "Canary",
          "description": "Canary deployment strategy provides progressive percentage based deployments to a Target."
        },
        "standard": {
          "$ref": "Standard",
          "description": "Standard deployment strategy executes a single deploy and allows verifying the deployment."
        }
      },
      "type": "object"
    },
    "RetryJobRequest": {
      "properties": {
        "jobId": {
          "type": "string",
          "description": "Required. The job ID for the Job to retry."
        },
        "phaseId": {
          "description": "Required. The phase ID the Job to retry belongs to.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "RetryJobRequest is the request object used by `RetryJob`.",
      "id": "RetryJobRequest"
    },
    "TestIamPermissionsRequest": {
      "type": "object",
      "description": "Request message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsRequest",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Date": {
      "id": "Date",
      "type": "object",
      "properties": {
        "month": {
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "type": "integer",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "format": "int32"
        },
        "year": {
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer"
        }
      },
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
    },
    "MultiTarget": {
      "id": "MultiTarget",
      "type": "object",
      "properties": {
        "targetIds": {
          "description": "Required. The target_ids of this multiTarget.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Information specifying a multiTarget."
    },
    "TerminateJobRunRequest": {
      "description": "The request object used by `TerminateJobRun`.",
      "properties": {},
      "id": "TerminateJobRunRequest",
      "type": "object"
    },
    "Config": {
      "type": "object",
      "description": "Service-wide configuration.",
      "id": "Config",
      "properties": {
        "name": {
          "description": "Name of the configuration.",
          "type": "string"
        },
        "defaultSkaffoldVersion": {
          "type": "string",
          "description": "Default Skaffold version that is assigned when a Release is created without specifying a Skaffold version."
        },
        "supportedVersions": {
          "type": "array",
          "items": {
            "$ref": "SkaffoldVersion"
          },
          "description": "All supported versions of Skaffold."
        }
      }
    },
    "CloudRunConfig": {
      "type": "object",
      "id": "CloudRunConfig",
      "properties": {
        "automaticTrafficControl": {
          "description": "Whether Cloud Deploy should update the traffic stanza in a Cloud Run Service on the user's behalf to facilitate traffic splitting. This is required to be true for CanaryDeployments, but optional for CustomCanaryDeployments.",
          "type": "boolean"
        }
      },
      "description": "CloudRunConfig contains the Cloud Run runtime configuration."
    },
    "ListReleasesResponse": {
      "id": "ListReleasesResponse",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "releases": {
          "type": "array",
          "description": "The `Release` objects.",
          "items": {
            "$ref": "Release"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "description": "The response object from `ListReleases`.",
      "type": "object"
    },
    "ReleaseNotificationEvent": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Debug message for when a notification fails to send."
        },
        "release": {
          "type": "string",
          "description": "The name of the `Release`."
        },
        "type": {
          "enumDescriptions": [
            "Type is unspecified.",
            "A Pub/Sub notification failed to be sent.",
            "Resource state changed.",
            "A process aborted.",
            "Restriction check failed.",
            "Resource deleted.",
            "Rollout updated.",
            "Deprecated: This field is never used. Use release_render log type instead."
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PUBSUB_NOTIFICATION_FAILURE",
            "TYPE_RESOURCE_STATE_CHANGE",
            "TYPE_PROCESS_ABORTED",
            "TYPE_RESTRICTION_VIOLATED",
            "TYPE_RESOURCE_DELETED",
            "TYPE_ROLLOUT_UPDATE",
            "TYPE_RENDER_STATUES_CHANGE"
          ],
          "description": "Type of this notification, e.g. for a Pub/Sub failure.",
          "type": "string"
        }
      },
      "description": "Payload proto for \"clouddeploy.googleapis.com/release_notification\" Platform Log event that describes the failure to send release status change Pub/Sub notification.",
      "id": "ReleaseNotificationEvent",
      "type": "object"
    },
    "Status": {
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "type": "array"
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status"
    },
    "Target": {
      "id": "Target",
      "properties": {
        "description": {
          "description": "Optional. Description of the `Target`. Max length is 255 characters.",
          "type": "string"
        },
        "executionConfigs": {
          "description": "Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used in a single configuration; using the same value multiple times is an error. When one or more configurations are specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are specified, execution will use the default specified in `DefaultPool`.",
          "items": {
            "$ref": "ExecutionConfig"
          },
          "type": "array"
        },
        "requireApproval": {
          "description": "Optional. Whether or not the `Target` requires approval.",
          "type": "boolean"
        },
        "anthosCluster": {
          "$ref": "AnthosCluster",
          "description": "Optional. Information specifying an Anthos Cluster."
        },
        "etag": {
          "type": "string",
          "description": "Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
        },
        "updateTime": {
          "description": "Output only. Most recent time at which the `Target` was updated.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "deployParameters": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The deploy parameters to use for this target.",
          "type": "object"
        },
        "labels": {
          "type": "object",
          "description": "Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be \u003c= 128 bytes.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "gke": {
          "$ref": "GkeCluster",
          "description": "Optional. Information specifying a GKE Cluster."
        },
        "name": {
          "type": "string",
          "description": "Optional. Name of the `Target`. Format is projects/{project}/locations/{location}/targets/a-z{0,62}."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Time at which the `Target` was created."
        },
        "run": {
          "description": "Optional. Information specifying a Cloud Run deployment target.",
          "$ref": "CloudRunLocation"
        },
        "multiTarget": {
          "description": "Optional. Information specifying a multiTarget.",
          "$ref": "MultiTarget"
        },
        "annotations": {
          "description": "Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. Unique identifier of the `Target`.",
          "type": "string"
        },
        "targetId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Resource id of the `Target`."
        }
      },
      "description": "A `Target` resource in the Cloud Deploy API. A `Target` defines a location to which a Skaffold configuration can be deployed.",
      "type": "object"
    },
    "RenderMetadata": {
      "type": "object",
      "properties": {
        "cloudRun": {
          "description": "Output only. Metadata associated with rendering for Cloud Run.",
          "$ref": "CloudRunRenderMetadata",
          "readOnly": true
        }
      },
      "id": "RenderMetadata",
      "description": "RenderMetadata includes information associated with a `Release` render."
    },
    "CancelRolloutResponse": {
      "type": "object",
      "properties": {},
      "description": "The response object from `CancelRollout`.",
      "id": "CancelRolloutResponse"
    },
    "ListLocationsResponse": {
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListLocationsResponse"
    },
    "ApproveRolloutResponse": {
      "description": "The response object from `ApproveRollout`.",
      "id": "ApproveRolloutResponse",
      "type": "object",
      "properties": {}
    },
    "TargetNotificationEvent": {
      "type": "object",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Type is unspecified.",
            "A Pub/Sub notification failed to be sent.",
            "Resource state changed.",
            "A process aborted.",
            "Restriction check failed.",
            "Resource deleted.",
            "Rollout updated.",
            "Deprecated: This field is never used. Use release_render log type instead."
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PUBSUB_NOTIFICATION_FAILURE",
            "TYPE_RESOURCE_STATE_CHANGE",
            "TYPE_PROCESS_ABORTED",
            "TYPE_RESTRICTION_VIOLATED",
            "TYPE_RESOURCE_DELETED",
            "TYPE_ROLLOUT_UPDATE",
            "TYPE_RENDER_STATUES_CHANGE"
          ],
          "description": "Type of this notification, e.g. for a Pub/Sub failure."
        },
        "message": {
          "description": "Debug message for when a notification fails to send.",
          "type": "string"
        },
        "target": {
          "description": "The name of the `Target`.",
          "type": "string"
        }
      },
      "description": "Payload proto for \"clouddeploy.googleapis.com/target_notification\" Platform Log event that describes the failure to send target status change Pub/Sub notification.",
      "id": "TargetNotificationEvent"
    },
    "IgnoreJobResponse": {
      "id": "IgnoreJobResponse",
      "properties": {},
      "type": "object",
      "description": "The response object from `IgnoreJob`."
    },
    "JobRun": {
      "properties": {
        "verifyJobRun": {
          "$ref": "VerifyJobRun",
          "readOnly": true,
          "description": "Output only. Information specific to a verify `JobRun`."
        },
        "name": {
          "description": "Optional. Name of the `JobRun`. Format is projects/{project}/locations/{location}/ deliveryPipelines/{deliveryPipeline}/releases/{releases}/rollouts/ {rollouts}/jobRuns/{uuid}.",
          "type": "string"
        },
        "jobId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. ID of the `Rollout` job this `JobRun` corresponds to."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "IN_PROGRESS",
            "SUCCEEDED",
            "FAILED",
            "TERMINATING",
            "TERMINATED"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "The `JobRun` has an unspecified state.",
            "The `JobRun` is in progress.",
            "The `JobRun` has succeeded.",
            "The `JobRun` has failed.",
            "The `JobRun` is terminating.",
            "The `JobRun` was terminated."
          ],
          "description": "Output only. The current state of the `JobRun`.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Time at which the `JobRun` was created."
        },
        "uid": {
          "description": "Output only. Unique identifier of the `JobRun`.",
          "readOnly": true,
          "type": "string"
        },
        "postdeployJobRun": {
          "$ref": "PostdeployJobRun",
          "readOnly": true,
          "description": "Output only. Information specific to a postdeploy `JobRun`."
        },
        "etag": {
          "description": "Output only. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string",
          "readOnly": true
        },
        "createChildRolloutJobRun": {
          "readOnly": true,
          "description": "Output only. Information specific to a createChildRollout `JobRun`.",
          "$ref": "CreateChildRolloutJobRun"
        },
        "predeployJobRun": {
          "description": "Output only. Information specific to a predeploy `JobRun`.",
          "$ref": "PredeployJobRun",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "Output only. Time at which the `JobRun` ended.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "deployJobRun": {
          "$ref": "DeployJobRun",
          "description": "Output only. Information specific to a deploy `JobRun`.",
          "readOnly": true
        },
        "phaseId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. ID of the `Rollout` phase this `JobRun` belongs in."
        },
        "startTime": {
          "type": "string",
          "description": "Output only. Time at which the `JobRun` was started.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "advanceChildRolloutJobRun": {
          "$ref": "AdvanceChildRolloutJobRun",
          "description": "Output only. Information specific to an advanceChildRollout `JobRun`",
          "readOnly": true
        }
      },
      "id": "JobRun",
      "description": "A `JobRun` resource in the Cloud Deploy API. A `JobRun` contains information of a single `Rollout` job evaluation.",
      "type": "object"
    },
    "JobRunNotificationEvent": {
      "description": "Payload proto for \"clouddeploy.googleapis.com/jobrun_notification\" Platform Log event that describes the failure to send JobRun resource update Pub/Sub notification.",
      "id": "JobRunNotificationEvent",
      "properties": {
        "targetId": {
          "description": "ID of the `Target`.",
          "type": "string"
        },
        "releaseUid": {
          "type": "string",
          "description": "Unique identifier of the `Release`."
        },
        "pipelineUid": {
          "description": "Unique identifier of the `DeliveryPipeline`.",
          "type": "string"
        },
        "rolloutUid": {
          "type": "string",
          "description": "Unique identifier of the `Rollout`."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Type is unspecified.",
            "A Pub/Sub notification failed to be sent.",
            "Resource state changed.",
            "A process aborted.",
            "Restriction check failed.",
            "Resource deleted.",
            "Rollout updated.",
            "Deprecated: This field is never used. Use release_render log type instead."
          ],
          "description": "Type of this notification, e.g. for a Pub/Sub failure.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PUBSUB_NOTIFICATION_FAILURE",
            "TYPE_RESOURCE_STATE_CHANGE",
            "TYPE_PROCESS_ABORTED",
            "TYPE_RESTRICTION_VIOLATED",
            "TYPE_RESOURCE_DELETED",
            "TYPE_ROLLOUT_UPDATE",
            "TYPE_RENDER_STATUES_CHANGE"
          ],
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
          ]
        },
        "jobRun": {
          "type": "string",
          "description": "The name of the `JobRun`."
        },
        "message": {
          "type": "string",
          "description": "Debug message for when a notification fails to send."
        }
      },
      "type": "object"
    },
    "Location": {
      "id": "Location",
      "type": "object",
      "description": "A resource that represents a Google Cloud location.",
      "properties": {
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        }
      }
    },
    "TargetRender": {
      "properties": {
        "renderingState": {
          "description": "Output only. Current state of the render operation for this Target.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The render operation state is unspecified.",
            "The render operation has completed successfully.",
            "The render operation has failed.",
            "The render operation is in progress."
          ],
          "enum": [
            "TARGET_RENDER_STATE_UNSPECIFIED",
            "SUCCEEDED",
            "FAILED",
            "IN_PROGRESS"
          ]
        },
        "metadata": {
          "$ref": "RenderMetadata",
          "description": "Output only. Metadata related to the `Release` render for this Target.",
          "readOnly": true
        },
        "renderingBuild": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of the Cloud Build `Build` object that is used to render the manifest for this target. Format is `projects/{project}/locations/{location}/builds/{build}`."
        },
        "failureMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Additional information about the render failure, if available."
        },
        "failureCause": {
          "enumDescriptions": [
            "No reason for failure is specified.",
            "Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).",
            "The render operation did not complete successfully; check Cloud Build logs.",
            "Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details.",
            "The render operation did not complete successfully because the verification stanza required for verify was not found on the skaffold configuration.",
            "The render operation did not complete successfully because the custom action required for predeploy or postdeploy was not found in the skaffold configuration. See failure_message for additional details."
          ],
          "type": "string",
          "enum": [
            "FAILURE_CAUSE_UNSPECIFIED",
            "CLOUD_BUILD_UNAVAILABLE",
            "EXECUTION_FAILED",
            "CLOUD_BUILD_REQUEST_FAILED",
            "VERIFICATION_CONFIG_NOT_FOUND",
            "CUSTOM_ACTION_NOT_FOUND"
          ],
          "description": "Output only. Reason this render failed. This will always be unspecified while the render in progress.",
          "readOnly": true
        }
      },
      "id": "TargetRender",
      "type": "object",
      "description": "Details of rendering for a single target."
    },
    "GkeCluster": {
      "type": "object",
      "properties": {
        "internalIp": {
          "description": "Optional. If true, `cluster` is accessed using the private IP address of the control plane endpoint. Otherwise, the default IP address of the control plane endpoint is used. The default IP address is the private IP address for clusters with private control-plane endpoints and the public IP address otherwise. Only specify this option when `cluster` is a [private GKE cluster](https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept).",
          "type": "boolean"
        },
        "cluster": {
          "type": "string",
          "description": "Information specifying a GKE Cluster. Format is `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}."
        }
      },
      "id": "GkeCluster",
      "description": "Information specifying a GKE Cluster."
    },
    "Postdeploy": {
      "properties": {
        "actions": {
          "description": "Optional. A sequence of Skaffold custom actions to invoke during execution of the postdeploy job.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "Postdeploy",
      "description": "Postdeploy contains the postdeploy job configuration information."
    },
    "ListJobRunsResponse": {
      "properties": {
        "jobRuns": {
          "type": "array",
          "description": "The `JobRun` objects.",
          "items": {
            "$ref": "JobRun"
          }
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListJobRunsResponse",
      "description": "ListJobRunsResponse is the response object returned by `ListJobRuns`."
    },
    "Canary": {
      "id": "Canary",
      "type": "object",
      "properties": {
        "runtimeConfig": {
          "$ref": "RuntimeConfig",
          "description": "Optional. Runtime specific configurations for the deployment strategy. The runtime configuration is used to determine how Cloud Deploy will split traffic to enable a progressive deployment."
        },
        "canaryDeployment": {
          "$ref": "CanaryDeployment",
          "description": "Configures the progressive based deployment for a Target."
        },
        "customCanaryDeployment": {
          "$ref": "CustomCanaryDeployment",
          "description": "Configures the progressive based deployment for a Target, but allows customizing at the phase level where a phase represents each of the percentage deployments."
        }
      },
      "description": "Canary represents the canary deployment strategy."
    },
    "CreateChildRolloutJobRun": {
      "type": "object",
      "id": "CreateChildRolloutJobRun",
      "description": "CreateChildRolloutJobRun contains information specific to a createChildRollout `JobRun`.",
      "properties": {
        "rollout": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the `ChildRollout`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/a-z{0,62}."
        },
        "rolloutPhaseId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The ID of the childRollout Phase initiated by this JobRun."
        }
      }
    },
    "ExecutionConfig": {
      "description": "Configuration of the environment to use when calling Skaffold.",
      "id": "ExecutionConfig",
      "type": "object",
      "properties": {
        "executionTimeout": {
          "type": "string",
          "format": "google-duration",
          "description": "Optional. Execution timeout for a Cloud Build Execution. This must be between 10m and 24h in seconds format. If unspecified, a default timeout of 1h is used."
        },
        "defaultPool": {
          "description": "Optional. Use default Cloud Build pool.",
          "$ref": "DefaultPool"
        },
        "serviceAccount": {
          "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) is used.",
          "type": "string"
        },
        "workerPool": {
          "description": "Optional. The resource name of the `WorkerPool`, with the format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. If this optional field is unspecified, the default Cloud Build pool will be used.",
          "type": "string"
        },
        "artifactStorage": {
          "type": "string",
          "description": "Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used."
        },
        "privatePool": {
          "$ref": "PrivatePool",
          "description": "Optional. Use private Cloud Build pool."
        },
        "usages": {
          "description": "Required. Usages when this configuration should be applied.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Default value. This value is unused.",
              "Use for rendering.",
              "Use for deploying and deployment hooks.",
              "Use for deployment verification.",
              "Use for predeploy job execution.",
              "Use for postdeploy job execution."
            ],
            "enum": [
              "EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED",
              "RENDER",
              "DEPLOY",
              "VERIFY",
              "PREDEPLOY",
              "POSTDEPLOY"
            ]
          }
        }
      }
    },
    "ChildRolloutJobs": {
      "properties": {
        "advanceRolloutJobs": {
          "items": {
            "$ref": "Job"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. List of AdvanceChildRolloutJobs"
        },
        "createRolloutJobs": {
          "description": "Output only. List of CreateChildRolloutJobs",
          "items": {
            "$ref": "Job"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "description": "ChildRollouts job composition",
      "id": "ChildRolloutJobs",
      "type": "object"
    },
    "BuildArtifact": {
      "description": "Description of an a image to use during Skaffold rendering.",
      "properties": {
        "image": {
          "type": "string",
          "description": "Image name in Skaffold configuration."
        },
        "tag": {
          "type": "string",
          "description": "Image tag to use. This will generally be the full path to an image, such as \"gcr.io/my-project/busybox:1.2.3\" or \"gcr.io/my-project/busybox@sha256:abc123\"."
        }
      },
      "id": "BuildArtifact",
      "type": "object"
    },
    "Empty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty",
      "properties": {}
    },
    "TerminateJobRunResponse": {
      "properties": {},
      "description": "The response object from `TerminateJobRun`.",
      "type": "object",
      "id": "TerminateJobRunResponse"
    },
    "AutomationRunEvent": {
      "id": "AutomationRunEvent",
      "description": "Payload proto for \"clouddeploy.googleapis.com/automation_run\" Platform Log event that describes the AutomationRun related events.",
      "properties": {
        "ruleId": {
          "description": "Identifier of the `Automation` rule.",
          "type": "string"
        },
        "pipelineUid": {
          "description": "Unique identifier of the `DeliveryPipeline`.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PUBSUB_NOTIFICATION_FAILURE",
            "TYPE_RESOURCE_STATE_CHANGE",
            "TYPE_PROCESS_ABORTED",
            "TYPE_RESTRICTION_VIOLATED",
            "TYPE_RESOURCE_DELETED",
            "TYPE_ROLLOUT_UPDATE",
            "TYPE_RENDER_STATUES_CHANGE"
          ],
          "enumDescriptions": [
            "Type is unspecified.",
            "A Pub/Sub notification failed to be sent.",
            "Resource state changed.",
            "A process aborted.",
            "Restriction check failed.",
            "Resource deleted.",
            "Rollout updated.",
            "Deprecated: This field is never used. Use release_render log type instead."
          ],
          "description": "Type of this notification, e.g. for a Pub/Sub failure.",
          "enumDeprecated": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true
          ]
        },
        "destinationTargetId": {
          "description": "ID of the `Target` to which the `AutomationRun` is created.",
          "type": "string"
        },
        "automationId": {
          "description": "Identifier of the `Automation`.",
          "type": "string"
        },
        "message": {
          "description": "Debug message for when there is an update on the AutomationRun. Provides further details about the resource creation or state change.",
          "type": "string"
        },
        "automationRun": {
          "description": "The name of the `AutomationRun`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuditLogConfig": {
      "type": "object",
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "properties": {
        "exemptedMembers": {
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array"
        },
        "logType": {
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "description": "The log type that this config enables."
        }
      }
    },
    "AdvanceChildRolloutJobRun": {
      "properties": {
        "rollout": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the `ChildRollout`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/a-z{0,62}."
        },
        "rolloutPhaseId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. the ID of the ChildRollout's Phase."
        }
      },
      "type": "object",
      "description": "AdvanceChildRolloutJobRun contains information specific to a advanceChildRollout `JobRun`.",
      "id": "AdvanceChildRolloutJobRun"
    },
    "VerifyJobRun": {
      "description": "VerifyJobRun contains information specific to a verify `JobRun`.",
      "properties": {
        "failureMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Additional information about the verify failure, if available."
        },
        "build": {
          "type": "string",
          "description": "Output only. The resource name of the Cloud Build `Build` object that is used to verify. Format is projects/{project}/locations/{location}/builds/{build}.",
          "readOnly": true
        },
        "failureCause": {
          "type": "string",
          "description": "Output only. The reason the verify failed. This will always be unspecified while the verify is in progress or if it succeeded.",
          "readOnly": true,
          "enumDescriptions": [
            "No reason for failure is specified.",
            "Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).",
            "The verify operation did not complete successfully; check Cloud Build logs.",
            "The verify job run did not complete within the alloted time.",
            "No Skaffold verify configuration was found.",
            "Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details."
          ],
          "enum": [
            "FAILURE_CAUSE_UNSPECIFIED",
            "CLOUD_BUILD_UNAVAILABLE",
            "EXECUTION_FAILED",
            "DEADLINE_EXCEEDED",
            "VERIFICATION_CONFIG_NOT_FOUND",
            "CLOUD_BUILD_REQUEST_FAILED"
          ]
        },
        "eventLogPath": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. File path of the Skaffold event log relative to the artifact URI."
        },
        "artifactUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. URI of a directory containing the verify artifacts. This contains the Skaffold event log."
        }
      },
      "type": "object",
      "id": "VerifyJobRun"
    },
    "Release": {
      "description": "A `Release` resource in the Cloud Deploy API. A `Release` defines a specific Skaffold configuration instance that can be deployed.",
      "properties": {
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.",
          "type": "object"
        },
        "targetSnapshots": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. Snapshot of the targets taken at release creation time.",
          "items": {
            "$ref": "Target"
          }
        },
        "abandoned": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Indicates whether this is an abandoned release."
        },
        "renderEndTime": {
          "format": "google-datetime",
          "description": "Output only. Time at which the render completed.",
          "readOnly": true,
          "type": "string"
        },
        "condition": {
          "description": "Output only. Information around the state of the Release.",
          "$ref": "ReleaseCondition",
          "readOnly": true
        },
        "renderStartTime": {
          "description": "Output only. Time at which the render began.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "type": "string",
          "description": "Description of the `Release`. Max length is 255 characters."
        },
        "targetRenders": {
          "type": "object",
          "readOnly": true,
          "description": "Output only. Map from target ID to details of the render operation for that target.",
          "additionalProperties": {
            "$ref": "TargetRender"
          }
        },
        "buildArtifacts": {
          "items": {
            "$ref": "BuildArtifact"
          },
          "type": "array",
          "description": "List of artifacts to pass through to Skaffold command."
        },
        "etag": {
          "type": "string",
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
        },
        "skaffoldConfigPath": {
          "description": "Filepath of the Skaffold config inside of the config URI.",
          "type": "string"
        },
        "skaffoldConfigUri": {
          "type": "string",
          "description": "Cloud Storage URI of tar.gz archive containing Skaffold configuration."
        },
        "deliveryPipelineSnapshot": {
          "$ref": "DeliveryPipeline",
          "readOnly": true,
          "description": "Output only. Snapshot of the parent pipeline taken at release creation time."
        },
        "skaffoldVersion": {
          "type": "string",
          "description": "The Skaffold version to use when operating on this release, such as \"1.20.0\". Not all versions are valid; Cloud Deploy supports a specific set of versions. If unset, the most recent supported Skaffold version will be used."
        },
        "deployParameters": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The deploy parameters to use for all targets in this release.",
          "type": "object"
        },
        "renderState": {
          "readOnly": true,
          "enumDescriptions": [
            "The render state is unspecified.",
            "All rendering operations have completed successfully.",
            "All rendering operations have completed, and one or more have failed.",
            "Rendering has started and is not complete."
          ],
          "description": "Output only. Current state of the render operation.",
          "type": "string",
          "enum": [
            "RENDER_STATE_UNSPECIFIED",
            "SUCCEEDED",
            "FAILED",
            "IN_PROGRESS"
          ]
        },
        "targetArtifacts": {
          "type": "object",
          "additionalProperties": {
            "$ref": "TargetArtifact"
          },
          "readOnly": true,
          "description": "Output only. Map from target ID to the target artifacts created during the render operation."
        },
        "uid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Unique identifier of the `Release`."
        },
        "createTime": {
          "description": "Output only. Time at which the `Release` was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Optional. Name of the `Release`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/a-z{0,62}.",
          "type": "string"
        },
        "labels": {
          "description": "Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be \u003c= 128 bytes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "Release"
    },
    "PrivatePool": {
      "id": "PrivatePool",
      "type": "object",
      "properties": {
        "artifactStorage": {
          "type": "string",
          "description": "Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket (\"gs://my-bucket\") or a path within a bucket (\"gs://my-bucket/my-dir\"). If unspecified, a default bucket located in the same region will be used."
        },
        "serviceAccount": {
          "type": "string",
          "description": "Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) will be used."
        },
        "workerPool": {
          "type": "string",
          "description": "Required. Resource name of the Cloud Build worker pool to use. The format is `projects/{project}/locations/{location}/workerPools/{pool}`."
        }
      },
      "description": "Execution using a private Cloud Build pool."
    },
    "DeployJob": {
      "properties": {},
      "description": "A deploy Job.",
      "type": "object",
      "id": "DeployJob"
    },
    "AdvanceRolloutRequest": {
      "description": "The request object used by `AdvanceRollout`.",
      "type": "object",
      "properties": {
        "phaseId": {
          "type": "string",
          "description": "Required. The phase ID to advance the `Rollout` to."
        }
      },
      "id": "AdvanceRolloutRequest"
    },
    "Expr": {
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        }
      },
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "id": "Expr"
    },
    "RollbackTargetResponse": {
      "properties": {
        "rollbackConfig": {
          "description": "The config of the rollback `Rollout` created or will be created.",
          "$ref": "RollbackTargetConfig"
        }
      },
      "type": "object",
      "id": "RollbackTargetResponse",
      "description": "The response object from `RollbackTarget`."
    },
    "VerifyJob": {
      "properties": {},
      "description": "A verify Job.",
      "type": "object",
      "id": "VerifyJob"
    },
    "PhaseConfig": {
      "description": "PhaseConfig represents the configuration for a phase in the custom canary deployment.",
      "id": "PhaseConfig",
      "type": "object",
      "properties": {
        "verify": {
          "type": "boolean",
          "description": "Whether to run verify tests after the deployment."
        },
        "postdeploy": {
          "description": "Optional. Configuration for the postdeploy job of this phase. If this is not configured, there will be no postdeploy job for this phase.",
          "$ref": "Postdeploy"
        },
        "percentage": {
          "type": "integer",
          "description": "Required. Percentage deployment for the phase.",
          "format": "int32"
        },
        "predeploy": {
          "$ref": "Predeploy",
          "description": "Optional. Configuration for the predeploy job of this phase. If this is not configured, there will be no predeploy job for this phase."
        },
        "phaseId": {
          "type": "string",
          "description": "Required. The ID to assign to the `Rollout` phase. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`."
        },
        "profiles": {
          "description": "Skaffold profiles to use when rendering the manifest for this phase. These are in addition to the profiles list specified in the `DeliveryPipeline` stage.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "Job": {
      "id": "Job",
      "description": "Job represents an operation for a `Rollout`.",
      "type": "object",
      "properties": {
        "predeployJob": {
          "readOnly": true,
          "description": "Output only. A predeploy Job.",
          "$ref": "PredeployJob"
        },
        "skipMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Additional information on why the Job was skipped, if available."
        },
        "advanceChildRolloutJob": {
          "$ref": "AdvanceChildRolloutJob",
          "readOnly": true,
          "description": "Output only. An advanceChildRollout Job."
        },
        "deployJob": {
          "readOnly": true,
          "$ref": "DeployJob",
          "description": "Output only. A deploy Job."
        },
        "id": {
          "description": "Output only. The ID of the Job.",
          "type": "string",
          "readOnly": true
        },
        "postdeployJob": {
          "description": "Output only. A postdeploy Job.",
          "readOnly": true,
          "$ref": "PostdeployJob"
        },
        "verifyJob": {
          "$ref": "VerifyJob",
          "description": "Output only. A verify Job.",
          "readOnly": true
        },
        "createChildRolloutJob": {
          "description": "Output only. A createChildRollout Job.",
          "$ref": "CreateChildRolloutJob",
          "readOnly": true
        },
        "jobRun": {
          "readOnly": true,
          "description": "Output only. The name of the `JobRun` responsible for the most recent invocation of this Job.",
          "type": "string"
        },
        "state": {
          "readOnly": true,
          "description": "Output only. The current state of the Job.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "DISABLED",
            "IN_PROGRESS",
            "SUCCEEDED",
            "FAILED",
            "ABORTED",
            "SKIPPED",
            "IGNORED"
          ],
          "enumDescriptions": [
            "The Job has an unspecified state.",
            "The Job is waiting for an earlier Phase(s) or Job(s) to complete.",
            "The Job is disabled.",
            "The Job is in progress.",
            "The Job succeeded.",
            "The Job failed.",
            "The Job was aborted.",
            "The Job was skipped.",
            "The Job was ignored."
          ],
          "type": "string"
        }
      }
    },
    "ListDeliveryPipelinesResponse": {
      "properties": {
        "deliveryPipelines": {
          "type": "array",
          "description": "The `DeliveryPipeline` objects.",
          "items": {
            "$ref": "DeliveryPipeline"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "The response object from `ListDeliveryPipelines`.",
      "type": "object",
      "id": "ListDeliveryPipelinesResponse"
    },
    "KubernetesConfig": {
      "properties": {
        "serviceNetworking": {
          "$ref": "ServiceNetworking",
          "description": "Kubernetes Service networking configuration."
        },
        "gatewayServiceMesh": {
          "description": "Kubernetes Gateway API service mesh configuration.",
          "$ref": "GatewayServiceMesh"
        }
      },
      "description": "KubernetesConfig contains the Kubernetes runtime configuration.",
      "type": "object",
      "id": "KubernetesConfig"
    },
    "ServiceNetworking": {
      "type": "object",
      "properties": {
        "deployment": {
          "type": "string",
          "description": "Required. Name of the Kubernetes Deployment whose traffic is managed by the specified Service."
        },
        "disablePodOverprovisioning": {
          "type": "boolean",
          "description": "Optional. Whether to disable Pod overprovisioning. If Pod overprovisioning is disabled then Cloud Deploy will limit the number of total Pods used for the deployment strategy to the number of Pods the Deployment has on the cluster."
        },
        "service": {
          "type": "string",
          "description": "Required. Name of the Kubernetes Service."
        }
      },
      "id": "ServiceNetworking",
      "description": "Information about the Kubernetes Service networking configuration."
    },
    "AbandonReleaseResponse": {
      "description": "The response object for `AbandonRelease`.",
      "id": "AbandonReleaseResponse",
      "properties": {},
      "type": "object"
    },
    "CanaryDeployment": {
      "properties": {
        "postdeploy": {
          "$ref": "Postdeploy",
          "description": "Optional. Configuration for the postdeploy job of the last phase. If this is not configured, there will be no postdeploy job for this phase."
        },
        "percentages": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "Required. The percentage based deployments that will occur as a part of a `Rollout`. List is expected in ascending order and each integer n is 0 \u003c= n \u003c 100."
        },
        "verify": {
          "type": "boolean",
          "description": "Whether to run verify tests after each percentage deployment."
        },
        "predeploy": {
          "$ref": "Predeploy",
          "description": "Optional. Configuration for the predeploy job of the first phase. If this is not configured, there will be no predeploy job for this phase."
        }
      },
      "description": "CanaryDeployment represents the canary deployment configuration",
      "id": "CanaryDeployment",
      "type": "object"
    },
    "RetryJobResponse": {
      "type": "object",
      "id": "RetryJobResponse",
      "properties": {},
      "description": "The response object from 'RetryJob'."
    },
    "ApproveRolloutRequest": {
      "id": "ApproveRolloutRequest",
      "type": "object",
      "properties": {
        "approved": {
          "description": "Required. True = approve; false = reject",
          "type": "boolean"
        }
      },
      "description": "The request object used by `ApproveRollout`."
    },
    "Metadata": {
      "description": "Metadata includes information associated with a `Rollout`.",
      "type": "object",
      "properties": {
        "cloudRun": {
          "readOnly": true,
          "$ref": "CloudRunMetadata",
          "description": "Output only. The name of the Cloud Run Service that is associated with a `Rollout`."
        }
      },
      "id": "Metadata"
    },
    "OperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation finished running."
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created."
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "apiVersion": {
          "type": "string",
          "description": "Output only. API version used to start the operation.",
          "readOnly": true
        }
      },
      "id": "OperationMetadata"
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "type": "object",
      "properties": {
        "operations": {
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "description": "The response message for Operations.ListOperations."
    },
    "Predeploy": {
      "description": "Predeploy contains the predeploy job configuration information.",
      "id": "Predeploy",
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "description": "Optional. A sequence of Skaffold custom actions to invoke during execution of the predeploy job.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Rollout": {
      "description": "A `Rollout` resource in the Cloud Deploy API. A `Rollout` contains information around a specific deployment to a `Target`.",
      "type": "object",
      "id": "Rollout",
      "properties": {
        "deployEndTime": {
          "readOnly": true,
          "description": "Output only. Time at which the `Rollout` finished deploying.",
          "type": "string",
          "format": "google-datetime"
        },
        "deployingBuild": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource name of the Cloud Build `Build` object that is used to deploy the Rollout. Format is `projects/{project}/locations/{location}/builds/{build}`."
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. Unique identifier of the `Rollout`.",
          "type": "string"
        },
        "controllerRollout": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the `ControllerRollout`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/a-z{0,62}."
        },
        "rollbackOfRollout": {
          "readOnly": true,
          "description": "Output only. Name of the `Rollout` that is rolled back by this `Rollout`. Empty if this `Rollout` wasn't created as a rollback.",
          "type": "string"
        },
        "failureReason": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Additional information about the rollout failure, if available."
        },
        "targetId": {
          "description": "Required. The ID of Target to which this `Rollout` is deploying.",
          "type": "string"
        },
        "description": {
          "description": "Description of the `Rollout` for user purposes. Max length is 255 characters.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Time at which the `Rollout` was created."
        },
        "approveTime": {
          "description": "Output only. Time at which the `Rollout` was approved.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "Optional. Name of the `Rollout`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/a-z{0,62}."
        },
        "metadata": {
          "description": "Output only. Metadata contains information about the rollout.",
          "$ref": "Metadata",
          "readOnly": true
        },
        "approvalState": {
          "enumDescriptions": [
            "The `Rollout` has an unspecified approval state.",
            "The `Rollout` requires approval.",
            "The `Rollout` does not require approval.",
            "The `Rollout` has been approved.",
            "The `Rollout` has been rejected."
          ],
          "description": "Output only. Approval state of the `Rollout`.",
          "enum": [
            "APPROVAL_STATE_UNSPECIFIED",
            "NEEDS_APPROVAL",
            "DOES_NOT_NEED_APPROVAL",
            "APPROVED",
            "REJECTED"
          ],
          "type": "string",
          "readOnly": true
        },
        "labels": {
          "description": "Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be \u003c= 128 bytes.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "deployStartTime": {
          "description": "Output only. Time at which the `Rollout` started deploying.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "etag": {
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "SUCCEEDED",
            "FAILED",
            "IN_PROGRESS",
            "PENDING_APPROVAL",
            "APPROVAL_REJECTED",
            "PENDING",
            "PENDING_RELEASE",
            "CANCELLING",
            "CANCELLED",
            "HALTED"
          ],
          "readOnly": true,
          "description": "Output only. Current state of the `Rollout`.",
          "enumDescriptions": [
            "The `Rollout` has an unspecified state.",
            "The `Rollout` has completed successfully.",
            "The `Rollout` has failed.",
            "The `Rollout` is being deployed.",
            "The `Rollout` needs approval.",
            "An approver rejected the `Rollout`.",
            "The `Rollout` is waiting for an earlier Rollout(s) to complete on this `Target`.",
            "The `Rollout` is waiting for the `Release` to be fully rendered.",
            "The `Rollout` is in the process of being cancelled.",
            "The `Rollout` has been cancelled.",
            "The `Rollout` is halted."
          ],
          "type": "string"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations."
        },
        "deployFailureCause": {
          "enumDescriptions": [
            "No reason for failure is specified.",
            "Cloud Build is not available, either because it is not enabled or because Cloud Deploy has insufficient permissions. See [required permission](https://cloud.google.com/deploy/docs/cloud-deploy-service-account#required_permissions).",
            "The deploy operation did not complete successfully; check Cloud Build logs.",
            "Deployment did not complete within the alloted time.",
            "Release is in a failed state.",
            "Release is abandoned.",
            "No skaffold verify configuration was found.",
            "Cloud Build failed to fulfill Cloud Deploy's request. See failure_message for additional details."
          ],
          "type": "string",
          "enum": [
            "FAILURE_CAUSE_UNSPECIFIED",
            "CLOUD_BUILD_UNAVAILABLE",
            "EXECUTION_FAILED",
            "DEADLINE_EXCEEDED",
            "RELEASE_FAILED",
            "RELEASE_ABANDONED",
            "VERIFICATION_CONFIG_NOT_FOUND",
            "CLOUD_BUILD_REQUEST_FAILED"
          ],
          "description": "Output only. The reason this rollout failed. This will always be unspecified while the rollout is in progress.",
          "readOnly": true
        },
        "rolledBackByRollouts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. Names of `Rollouts` that rolled back this `Rollout`.",
          "readOnly": true
        },
        "phases": {
          "items": {
            "$ref": "Phase"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. The phases that represent the workflows of this `Rollout`."
        },
        "enqueueTime": {
          "type": "string",
          "description": "Output only. Time at which the `Rollout` was enqueued.",
          "format": "google-datetime",
          "readOnly": true
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "ownerDomain": "google.com",
  "documentationLink": "https://cloud.google.com/deploy/",
  "version_module": true,
  "parameters": {
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "location": "query",
      "description": "Data format for response.",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    }
  },
  "revision": "20231004",
  "rootUrl": "https://clouddeploy.googleapis.com/",
  "servicePath": "",
  "basePath": "",
  "ownerName": "Google",
  "protocol": "rest",
  "kind": "discovery#restDescription",
  "version": "v1",
  "baseUrl": "https://clouddeploy.googleapis.com/",
  "batchPath": "batch",
  "canonicalName": "Cloud Deploy",
  "id": "clouddeploy:v1",
  "discoveryVersion": "v1",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "description": "",
  "title": "Cloud Deploy API",
  "name": "clouddeploy",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "deliveryPipelines": {
              "resources": {
                "releases": {
                  "methods": {
                    "get": {
                      "description": "Gets details of a single Release.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}",
                      "response": {
                        "$ref": "Release"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "clouddeploy.projects.locations.deliveryPipelines.releases.get",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the `Release`. Format must be projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}"
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a new Release in a given project and location.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "releaseId": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. ID of the `Release`."
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                          "description": "Required. The parent collection in which the `Release` should be created. Format should be projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}."
                        },
                        "validateOnly": {
                          "type": "boolean",
                          "location": "query",
                          "description": "Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made."
                        },
                        "requestId": {
                          "location": "query",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+parent}/releases",
                      "request": {
                        "$ref": "Release"
                      },
                      "httpMethod": "POST",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "clouddeploy.projects.locations.deliveryPipelines.releases.create"
                    },
                    "list": {
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "Required. The `DeliveryPipeline` which owns this collection of `Release` objects.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                          "required": true
                        },
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. Filter releases to be returned. See https://google.aip.dev/160 for more details."
                        },
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details."
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Optional. A page token, received from a previous `ListReleases` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.",
                          "location": "query"
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "Optional. The maximum number of `Release` objects to return. The service may return fewer than this value. If unspecified, at most 50 `Release` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000.",
                          "location": "query",
                          "format": "int32"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists Releases in a given project and location.",
                      "response": {
                        "$ref": "ListReleasesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "path": "v1/{+parent}/releases",
                      "id": "clouddeploy.projects.locations.deliveryPipelines.releases.list",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases"
                    },
                    "abandon": {
                      "path": "v1/{+name}:abandon",
                      "request": {
                        "$ref": "AbandonReleaseRequest"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}:abandon",
                      "response": {
                        "$ref": "AbandonReleaseResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Abandons a Release in the Delivery Pipeline.",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the Release. Format is projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "httpMethod": "POST",
                      "id": "clouddeploy.projects.locations.deliveryPipelines.releases.abandon",
                      "parameterOrder": [
                        "name"
                      ]
                    }
                  },
                  "resources": {
                    "rollouts": {
                      "methods": {
                        "approve": {
                          "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.approve",
                          "request": {
                            "$ref": "ApproveRolloutRequest"
                          },
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+$",
                              "description": "Required. Name of the Rollout. Format is projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/{rollout}.",
                              "required": true,
                              "type": "string",
                              "location": "path"
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:approve",
                          "response": {
                            "$ref": "ApproveRolloutResponse"
                          },
                          "path": "v1/{+name}:approve",
                          "description": "Approves a Rollout."
                        },
                        "ignoreJob": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:ignoreJob",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+rollout}:ignoreJob",
                          "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.ignoreJob",
                          "description": "Ignores the specified Job in a Rollout.",
                          "request": {
                            "$ref": "IgnoreJobRequest"
                          },
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "rollout"
                          ],
                          "parameters": {
                            "rollout": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+$",
                              "required": true,
                              "type": "string",
                              "description": "Required. Name of the Rollout. Format is projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/{rollout}."
                            }
                          },
                          "response": {
                            "$ref": "IgnoreJobResponse"
                          }
                        },
                        "get": {
                          "parameters": {
                            "name": {
                              "type": "string",
                              "description": "Required. Name of the `Rollout`. Format must be projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}/rollouts/{rollout_name}.",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+$",
                              "location": "path"
                            }
                          },
                          "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.get",
                          "httpMethod": "GET",
                          "path": "v1/{+name}",
                          "parameterOrder": [
                            "name"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}",
                          "response": {
                            "$ref": "Rollout"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets details of a single Rollout."
                        },
                        "cancel": {
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.cancel",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "CancelRolloutResponse"
                          },
                          "description": "Cancels a Rollout in a given project and location.",
                          "path": "v1/{+name}:cancel",
                          "parameters": {
                            "name": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "description": "Required. Name of the Rollout. Format is projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/{rollout}."
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:cancel",
                          "request": {
                            "$ref": "CancelRolloutRequest"
                          }
                        },
                        "advance": {
                          "description": "Advances a Rollout in a given project and location.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "request": {
                            "$ref": "AdvanceRolloutRequest"
                          },
                          "httpMethod": "POST",
                          "path": "v1/{+name}:advance",
                          "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.advance",
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+$",
                              "description": "Required. Name of the Rollout. Format is projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/{rollout}.",
                              "type": "string",
                              "required": true,
                              "location": "path"
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:advance",
                          "response": {
                            "$ref": "AdvanceRolloutResponse"
                          }
                        },
                        "retryJob": {
                          "parameterOrder": [
                            "rollout"
                          ],
                          "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.retryJob",
                          "httpMethod": "POST",
                          "request": {
                            "$ref": "RetryJobRequest"
                          },
                          "path": "v1/{+rollout}:retryJob",
                          "response": {
                            "$ref": "RetryJobResponse"
                          },
                          "description": "Retries the specified Job in a Rollout.",
                          "parameters": {
                            "rollout": {
                              "required": true,
                              "description": "Required. Name of the Rollout. Format is projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/{rollout}.",
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+$"
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:retryJob",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "create": {
                          "httpMethod": "POST",
                          "parameters": {
                            "requestId": {
                              "location": "query",
                              "type": "string",
                              "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                            },
                            "rolloutId": {
                              "description": "Required. ID of the `Rollout`.",
                              "type": "string",
                              "location": "query"
                            },
                            "startingPhaseId": {
                              "description": "Optional. The starting phase ID for the `Rollout`. If empty the `Rollout` will start at the first phase.",
                              "type": "string",
                              "location": "query"
                            },
                            "parent": {
                              "required": true,
                              "description": "Required. The parent collection in which the `Rollout` should be created. Format should be projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+$",
                              "location": "path",
                              "type": "string"
                            },
                            "validateOnly": {
                              "description": "Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.",
                              "type": "boolean",
                              "location": "query"
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts",
                          "description": "Creates a new Rollout in a given project and location.",
                          "response": {
                            "$ref": "Operation"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "path": "v1/{+parent}/rollouts",
                          "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.create",
                          "request": {
                            "$ref": "Rollout"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts",
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "Lists Rollouts in a given project and location.",
                          "response": {
                            "$ref": "ListRolloutsResponse"
                          },
                          "parameters": {
                            "parent": {
                              "required": true,
                              "description": "Required. The `Release` which owns this collection of `Rollout` objects.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+$",
                              "location": "path",
                              "type": "string"
                            },
                            "filter": {
                              "type": "string",
                              "description": "Optional. Filter rollouts to be returned. See https://google.aip.dev/160 for more details.",
                              "location": "query"
                            },
                            "orderBy": {
                              "location": "query",
                              "type": "string",
                              "description": "Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details."
                            },
                            "pageSize": {
                              "format": "int32",
                              "description": "Optional. The maximum number of `Rollout` objects to return. The service may return fewer than this value. If unspecified, at most 50 `Rollout` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000.",
                              "type": "integer",
                              "location": "query"
                            },
                            "pageToken": {
                              "description": "Optional. A page token, received from a previous `ListRollouts` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "httpMethod": "GET",
                          "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.list",
                          "path": "v1/{+parent}/rollouts"
                        }
                      },
                      "resources": {
                        "jobRuns": {
                          "methods": {
                            "terminate": {
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}/jobRuns/{jobRunsId}:terminate",
                              "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.terminate",
                              "response": {
                                "$ref": "TerminateJobRunResponse"
                              },
                              "path": "v1/{+name}:terminate",
                              "httpMethod": "POST",
                              "request": {
                                "$ref": "TerminateJobRunRequest"
                              },
                              "parameterOrder": [
                                "name"
                              ],
                              "description": "Terminates a Job Run in a given project and location.",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "parameters": {
                                "name": {
                                  "description": "Required. Name of the `JobRun`. Format must be projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/{rollout}/jobRuns/{jobRun}.",
                                  "required": true,
                                  "location": "path",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+/jobRuns/[^/]+$",
                                  "type": "string"
                                }
                              }
                            },
                            "list": {
                              "parameters": {
                                "orderBy": {
                                  "description": "Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details.",
                                  "type": "string",
                                  "location": "query"
                                },
                                "pageToken": {
                                  "location": "query",
                                  "description": "Optional. A page token, received from a previous `ListJobRuns` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.",
                                  "type": "string"
                                },
                                "parent": {
                                  "description": "Required. The `Rollout` which owns this collection of `JobRun` objects.",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+$",
                                  "type": "string",
                                  "required": true,
                                  "location": "path"
                                },
                                "filter": {
                                  "type": "string",
                                  "description": "Optional. Filter results to be returned. See https://google.aip.dev/160 for more details.",
                                  "location": "query"
                                },
                                "pageSize": {
                                  "format": "int32",
                                  "type": "integer",
                                  "location": "query",
                                  "description": "Optional. The maximum number of `JobRun` objects to return. The service may return fewer than this value. If unspecified, at most 50 `JobRun` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000."
                                }
                              },
                              "description": "Lists JobRuns in a given project and location.",
                              "path": "v1/{+parent}/jobRuns",
                              "parameterOrder": [
                                "parent"
                              ],
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}/jobRuns",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.list",
                              "httpMethod": "GET",
                              "response": {
                                "$ref": "ListJobRunsResponse"
                              }
                            },
                            "get": {
                              "parameters": {
                                "name": {
                                  "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+/releases/[^/]+/rollouts/[^/]+/jobRuns/[^/]+$",
                                  "required": true,
                                  "type": "string",
                                  "location": "path",
                                  "description": "Required. Name of the `JobRun`. Format must be projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}/rollouts/{rollout_name}/jobRuns/{job_run_name}."
                                }
                              },
                              "description": "Gets details of a single JobRun.",
                              "httpMethod": "GET",
                              "parameterOrder": [
                                "name"
                              ],
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}/jobRuns/{jobRunsId}",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "response": {
                                "$ref": "JobRun"
                              },
                              "path": "v1/{+name}",
                              "id": "clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.get"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "create": {
                  "request": {
                    "$ref": "DeliveryPipeline"
                  },
                  "id": "clouddeploy.projects.locations.deliveryPipelines.create",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new DeliveryPipeline in a given project and location.",
                  "path": "v1/{+parent}/deliveryPipelines",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.",
                      "location": "query"
                    },
                    "deliveryPipelineId": {
                      "description": "Required. ID of the `DeliveryPipeline`.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent collection in which the `DeliveryPipeline` should be created. Format should be projects/{project_id}/locations/{location_name}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}",
                  "id": "clouddeploy.projects.locations.deliveryPipelines.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "DeliveryPipeline"
                  },
                  "parameters": {
                    "allowMissing": {
                      "location": "query",
                      "description": "Optional. If set to true, updating a `DeliveryPipeline` that does not exist will result in the creation of a new `DeliveryPipeline`.",
                      "type": "boolean"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "validateOnly": {
                      "location": "query",
                      "description": "Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.",
                      "type": "boolean"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Optional. Name of the `DeliveryPipeline`. Format is projects/{project}/ locations/{location}/deliveryPipelines/a-z{0,62}.",
                      "required": true
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the `DeliveryPipeline` resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the parameters of a single DeliveryPipeline."
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single DeliveryPipeline.",
                  "response": {
                    "$ref": "DeliveryPipeline"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the `DeliveryPipeline`. Format must be projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                      "type": "string"
                    }
                  },
                  "id": "clouddeploy.projects.locations.deliveryPipelines.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}"
                },
                "list": {
                  "description": "Lists DeliveryPipelines in a given project and location.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent, which owns this collection of pipelines. Format must be projects/{project_id}/locations/{location_name}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filter pipelines to be returned. See https://google.aip.dev/160 for more details."
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of pipelines to return. The service may return fewer than this value. If unspecified, at most 50 pipelines will be returned. The maximum value is 1000; values above 1000 will be set to 1000."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A page token, received from a previous `ListDeliveryPipelines` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/deliveryPipelines",
                  "response": {
                    "$ref": "ListDeliveryPipelinesResponse"
                  },
                  "httpMethod": "GET",
                  "id": "clouddeploy.projects.locations.deliveryPipelines.list"
                },
                "rollbackTarget": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:rollbackTarget",
                  "id": "clouddeploy.projects.locations.deliveryPipelines.rollbackTarget",
                  "description": "Creates a `Rollout` to roll back the specified target.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:rollbackTarget",
                  "request": {
                    "$ref": "RollbackTargetRequest"
                  },
                  "response": {
                    "$ref": "RollbackTargetResponse"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                      "description": "Required. The `DeliveryPipeline` for which the rollback `Rollout` should be created. Format should be projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setIamPolicy": {
                  "path": "v1/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string"
                    }
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "id": "clouddeploy.projects.locations.deliveryPipelines.setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Policy"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:setIamPolicy"
                },
                "delete": {
                  "id": "clouddeploy.projects.locations.deliveryPipelines.delete",
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "validateOnly": {
                      "description": "Optional. If set, validate the request and preview the review, but do not actually post it.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "etag": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
                    },
                    "allowMissing": {
                      "location": "query",
                      "description": "Optional. If set to true, then deleting an already deleted or non-existing `DeliveryPipeline` will succeed.",
                      "type": "boolean"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the `DeliveryPipeline` to delete. Format should be projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}."
                    },
                    "force": {
                      "location": "query",
                      "description": "Optional. If set to true, all child resources under this pipeline will also be deleted. Otherwise, the request will only work if the pipeline has no child resources.",
                      "type": "boolean"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}",
                  "description": "Deletes a single DeliveryPipeline.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "clouddeploy.projects.locations.deliveryPipelines.testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:testIamPermissions"
                },
                "getIamPolicy": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:getIamPolicy",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/deliveryPipelines/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path"
                    },
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    }
                  },
                  "id": "clouddeploy.projects.locations.deliveryPipelines.getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameterOrder": [
                    "resource"
                  ]
                }
              }
            },
            "targets": {
              "methods": {
                "patch": {
                  "description": "Updates the parameters of a single Target.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Optional. Name of the `Target`. Format is projects/{project}/locations/{location}/targets/a-z{0,62}.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/targets/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "allowMissing": {
                      "location": "query",
                      "description": "Optional. If set to true, updating a `Target` that does not exist will result in the creation of a new `Target`.",
                      "type": "boolean"
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the Target resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made."
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}",
                  "id": "clouddeploy.projects.locations.targets.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "Target"
                  }
                },
                "getIamPolicy": {
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "clouddeploy.projects.locations.targets.getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/targets/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true
                    },
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "create": {
                  "request": {
                    "$ref": "Target"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targets",
                  "id": "clouddeploy.projects.locations.targets.create",
                  "parameters": {
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made."
                    },
                    "targetId": {
                      "description": "Required. ID of the `Target`.",
                      "type": "string",
                      "location": "query"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent collection in which the `Target` should be created. Format should be projects/{project_id}/locations/{location_name}.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/targets",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new Target in a given project and location.",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "get": {
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/targets/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the `Target`. Format must be projects/{project_id}/locations/{location_name}/targets/{target_name}."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}",
                  "response": {
                    "$ref": "Target"
                  },
                  "id": "clouddeploy.projects.locations.targets.get",
                  "description": "Gets details of a single Target."
                },
                "testIamPermissions": {
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "id": "clouddeploy.projects.locations.targets.testIamPermissions",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/targets/[^/]+$",
                      "location": "path"
                    }
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                },
                "setIamPolicy": {
                  "id": "clouddeploy.projects.locations.targets.setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targets/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v1/{+resource}:setIamPolicy"
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targets",
                  "path": "v1/{+parent}/targets",
                  "id": "clouddeploy.projects.locations.targets.list",
                  "response": {
                    "$ref": "ListTargetsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent, which owns this collection of targets. Format must be projects/{project_id}/locations/{location_name}.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A page token, received from a previous `ListTargets` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token."
                    },
                    "filter": {
                      "description": "Optional. Filter targets to be returned. See https://google.aip.dev/160 for more details.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. The maximum number of `Target` objects to return. The service may return fewer than this value. If unspecified, at most 50 `Target` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000."
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details."
                    }
                  },
                  "description": "Lists Targets in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "description": "Deletes a single Target.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "clouddeploy.projects.locations.targets.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the `Target` to delete. Format should be projects/{project_id}/locations/{location_name}/targets/{target_name}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/targets/[^/]+$"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "validateOnly": {
                      "location": "query",
                      "description": "Optional. If set, validate the request and preview the review, but do not actually post it.",
                      "type": "boolean"
                    },
                    "allowMissing": {
                      "location": "query",
                      "description": "Optional. If set to true, then deleting an already deleted or non-existing `Target` will succeed.",
                      "type": "boolean"
                    },
                    "etag": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "id": "clouddeploy.projects.locations.operations.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "id": "clouddeploy.projects.locations.operations.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The standard list page size.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The standard list page token.",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations"
                },
                "cancel": {
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path"
                    }
                  },
                  "id": "clouddeploy.projects.locations.operations.cancel",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "path": "v1/{+name}:cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                },
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation resource to be deleted."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "path": "v1/{+name}",
                  "id": "clouddeploy.projects.locations.operations.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE"
                }
              }
            }
          },
          "methods": {
            "list": {
              "path": "v1/{+name}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string"
                },
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations",
              "id": "clouddeploy.projects.locations.list"
            },
            "get": {
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location.",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "id": "clouddeploy.projects.locations.get",
              "response": {
                "$ref": "Location"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "getConfig": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+/config$",
                  "description": "Required. Name of requested configuration."
                }
              },
              "description": "Gets the configuration for a location.",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/config",
              "response": {
                "$ref": "Config"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "id": "clouddeploy.projects.locations.getConfig",
              "path": "v1/{+name}"
            }
          }
        }
      }
    }
  },
  "mtlsRootUrl": "https://clouddeploy.mtls.googleapis.com/"
}

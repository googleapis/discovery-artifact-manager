{
  "documentationLink": "https://mapsplatform.google.com/maps-products/#places-section",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "batchPath": "batch",
  "basePath": "",
  "revision": "20231024",
  "discoveryVersion": "v1",
  "rootUrl": "https://places.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "name": "places",
  "mtlsRootUrl": "https://places.mtls.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        },
        "https://www.googleapis.com/auth/maps-platform.places": {
          "description": "Private Service: https://www.googleapis.com/auth/maps-platform.places"
        },
        "https://www.googleapis.com/auth/maps-platform.places.nearbysearch": {
          "description": "Private Service: https://www.googleapis.com/auth/maps-platform.places.nearbysearch"
        },
        "https://www.googleapis.com/auth/maps-platform.places.textsearch": {
          "description": "Private Service: https://www.googleapis.com/auth/maps-platform.places.textsearch"
        },
        "https://www.googleapis.com/auth/maps-platform.places.details": {
          "description": "Private Service: https://www.googleapis.com/auth/maps-platform.places.details"
        }
      }
    }
  },
  "servicePath": "",
  "baseUrl": "https://places.googleapis.com/",
  "title": "Places API (New)",
  "id": "places:v1",
  "canonicalName": "Maps Places",
  "ownerDomain": "google.com",
  "kind": "discovery#restDescription",
  "schemas": {
    "GoogleMapsPlacesV1Review": {
      "id": "GoogleMapsPlacesV1Review",
      "type": "object",
      "properties": {
        "originalText": {
          "$ref": "GoogleTypeLocalizedText",
          "description": "The review text in its original language."
        },
        "publishTime": {
          "description": "Timestamp for the review.",
          "type": "string",
          "format": "google-datetime"
        },
        "rating": {
          "format": "double",
          "type": "number",
          "description": "A number between 1.0 and 5.0, also called the number of stars."
        },
        "relativePublishTimeDescription": {
          "description": "A string of formatted recent time, expressing the review time relative to the current time in a form appropriate for the language and country.",
          "type": "string"
        },
        "authorAttribution": {
          "$ref": "GoogleMapsPlacesV1AuthorAttribution",
          "description": "This review's author."
        },
        "name": {
          "type": "string",
          "description": "A reference representing this place review which may be used to look up this place review again (also called the API \"resource\" name: places/place_id/reviews/review)."
        },
        "text": {
          "description": "The localized text of the review.",
          "$ref": "GoogleTypeLocalizedText"
        }
      },
      "description": "Information about a review of a place."
    },
    "GoogleMapsPlacesV1SearchTextRequestLocationRestriction": {
      "properties": {
        "rectangle": {
          "description": "A rectangle box defined by northeast and southwest corner.",
          "$ref": "GoogleGeoTypeViewport"
        }
      },
      "description": "The region to search. This location serves as a restriction which means results outside given location will not be returned.",
      "id": "GoogleMapsPlacesV1SearchTextRequestLocationRestriction",
      "type": "object"
    },
    "GoogleMapsPlacesV1SearchTextRequestLocationBias": {
      "description": "The region to search. This location serves as a bias which means results around given location might be returned.",
      "id": "GoogleMapsPlacesV1SearchTextRequestLocationBias",
      "type": "object",
      "properties": {
        "circle": {
          "$ref": "GoogleMapsPlacesV1Circle",
          "description": "A circle defined by center point and radius."
        },
        "rectangle": {
          "$ref": "GoogleGeoTypeViewport",
          "description": "A rectangle box defined by northeast and southwest corner."
        }
      }
    },
    "GoogleMapsPlacesV1PlaceOpeningHoursPeriodPoint": {
      "description": "Status changing points.",
      "id": "GoogleMapsPlacesV1PlaceOpeningHoursPeriodPoint",
      "type": "object",
      "properties": {
        "hour": {
          "description": "The hour in 2 digits. Ranges from 00 to 23.",
          "format": "int32",
          "type": "integer"
        },
        "truncated": {
          "description": "Whether or not this endpoint was truncated. Truncation occurs when the real hours are outside the times we are willing to return hours between, so we truncate the hours back to these boundaries. This ensures that at most 24 * 7 hours from midnight of the day of the request are returned.",
          "type": "boolean"
        },
        "day": {
          "description": "A day of the week, as an integer in the range 0-6. 0 is Sunday, 1 is Monday, etc.",
          "format": "int32",
          "type": "integer"
        },
        "minute": {
          "type": "integer",
          "description": "The minute in 2 digits. Ranges from 00 to 59.",
          "format": "int32"
        },
        "date": {
          "description": "Date in the local timezone for the place.",
          "$ref": "GoogleTypeDate"
        }
      }
    },
    "GoogleMapsPlacesV1FuelOptionsFuelPrice": {
      "properties": {
        "price": {
          "$ref": "GoogleTypeMoney",
          "description": "The price of the fuel."
        },
        "type": {
          "type": "string",
          "description": "The type of fuel.",
          "enumDescriptions": [
            "Unspecified fuel type.",
            "Diesel fuel.",
            "Regular unleaded.",
            "Midgrade.",
            "Premium.",
            "SP 91.",
            "SP 91 E10.",
            "SP 92.",
            "SP 95.",
            "SP95 E10.",
            "SP 98.",
            "SP 99.",
            "SP 100.",
            "LPG.",
            "E 80.",
            "E 85.",
            "Methane.",
            "Bio-diesel.",
            "Truck diesel."
          ],
          "enum": [
            "FUEL_TYPE_UNSPECIFIED",
            "DIESEL",
            "REGULAR_UNLEADED",
            "MIDGRADE",
            "PREMIUM",
            "SP91",
            "SP91_E10",
            "SP92",
            "SP95",
            "SP95_E10",
            "SP98",
            "SP99",
            "SP100",
            "LPG",
            "E80",
            "E85",
            "METHANE",
            "BIO_DIESEL",
            "TRUCK_DIESEL"
          ]
        },
        "updateTime": {
          "type": "string",
          "description": "The time the fuel price was last updated.",
          "format": "google-datetime"
        }
      },
      "id": "GoogleMapsPlacesV1FuelOptionsFuelPrice",
      "type": "object",
      "description": "Fuel price information for a given type."
    },
    "GoogleMapsPlacesV1PhotoMedia": {
      "properties": {
        "photoUri": {
          "type": "string",
          "description": "A short-lived uri that can be used to render the photo."
        },
        "name": {
          "description": "The resource name of a photo in the format: places/place_id/photos/photo_reference.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleMapsPlacesV1PhotoMedia",
      "description": "A photo media from Places API."
    },
    "GoogleGeoTypeViewport": {
      "properties": {
        "low": {
          "description": "Required. The low point of the viewport.",
          "$ref": "GoogleTypeLatLng"
        },
        "high": {
          "$ref": "GoogleTypeLatLng",
          "description": "Required. The high point of the viewport."
        }
      },
      "type": "object",
      "id": "GoogleGeoTypeViewport",
      "description": "A latitude-longitude viewport, represented as two diagonally opposite `low` and `high` points. A viewport is considered a closed region, i.e. it includes its boundary. The latitude bounds must range between -90 to 90 degrees inclusive, and the longitude bounds must range between -180 to 180 degrees inclusive. Various cases include: - If `low` = `high`, the viewport consists of that single point. - If `low.longitude` \u003e `high.longitude`, the longitude range is inverted (the viewport crosses the 180 degree longitude line). - If `low.longitude` = -180 degrees and `high.longitude` = 180 degrees, the viewport includes all longitudes. - If `low.longitude` = 180 degrees and `high.longitude` = -180 degrees, the longitude range is empty. - If `low.latitude` \u003e `high.latitude`, the latitude range is empty. Both `low` and `high` must be populated, and the represented box cannot be empty (as specified by the definitions above). An empty viewport will result in an error. For example, this viewport fully encloses New York City: { \"low\": { \"latitude\": 40.477398, \"longitude\": -74.259087 }, \"high\": { \"latitude\": 40.91618, \"longitude\": -73.70018 } }"
    },
    "GoogleMapsPlacesV1SearchNearbyRequestLocationRestriction": {
      "properties": {
        "circle": {
          "$ref": "GoogleMapsPlacesV1Circle",
          "description": "A circle defined by center point and radius."
        }
      },
      "type": "object",
      "id": "GoogleMapsPlacesV1SearchNearbyRequestLocationRestriction",
      "description": "The region to search."
    },
    "GoogleMapsPlacesV1Circle": {
      "id": "GoogleMapsPlacesV1Circle",
      "type": "object",
      "properties": {
        "radius": {
          "type": "number",
          "format": "double",
          "description": "Required. Radius measured in meters. The radius must be within [0.0, 50000.0]."
        },
        "center": {
          "description": "Required. Center latitude and longitude. The range of latitude must be within [-90.0, 90.0]. The range of the longitude must be within [-180.0, 180.0].",
          "$ref": "GoogleTypeLatLng"
        }
      },
      "description": "Circle with a LatLng as center and radius."
    },
    "GoogleMapsPlacesV1PlaceOpeningHours": {
      "id": "GoogleMapsPlacesV1PlaceOpeningHours",
      "description": "Information about business hour of the place.",
      "properties": {
        "specialDays": {
          "description": "Structured information for special days that fall within the period that the returned opening hours cover. Special days are days that could impact the business hours of a place, e.g. Christmas day. Set for current_opening_hours and current_secondary_opening_hours if there are exceptional hours.",
          "items": {
            "$ref": "GoogleMapsPlacesV1PlaceOpeningHoursSpecialDay"
          },
          "type": "array"
        },
        "weekdayDescriptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Localized strings describing the opening hours of this place, one string for each day of the week. Will be empty if the hours are unknown or could not be converted to localized text. Example: \"Sun: 18:00–06:00\""
        },
        "periods": {
          "type": "array",
          "items": {
            "$ref": "GoogleMapsPlacesV1PlaceOpeningHoursPeriod"
          },
          "description": "The periods that this place is open during the week. The periods are in chronological order, starting with Sunday in the place-local timezone. An empty (but not absent) value indicates a place that is never open, e.g. because it is closed temporarily for renovations."
        },
        "openNow": {
          "description": "Is this place open right now? Always present unless we lack time-of-day or timezone data for these opening hours.",
          "type": "boolean"
        },
        "secondaryHoursType": {
          "enumDescriptions": [
            "Default value when secondary hour type is not specified.",
            "The drive-through hour for banks, restaurants, or pharmacies.",
            "The happy hour.",
            "The delivery hour.",
            "The takeout hour.",
            "The kitchen hour.",
            "The breakfast hour.",
            "The lunch hour.",
            "The dinner hour.",
            "The brunch hour.",
            "The pickup hour.",
            "The access hours for storage places.",
            "The special hours for seniors.",
            "The online service hours."
          ],
          "enum": [
            "SECONDARY_HOURS_TYPE_UNSPECIFIED",
            "DRIVE_THROUGH",
            "HAPPY_HOUR",
            "DELIVERY",
            "TAKEOUT",
            "KITCHEN",
            "BREAKFAST",
            "LUNCH",
            "DINNER",
            "BRUNCH",
            "PICKUP",
            "ACCESS",
            "SENIOR_HOURS",
            "ONLINE_SERVICE_HOURS"
          ],
          "type": "string",
          "description": "A type string used to identify the type of secondary hours."
        }
      },
      "type": "object"
    },
    "GoogleMapsPlacesV1PlacePaymentOptions": {
      "description": "Payment options the place accepts.",
      "id": "GoogleMapsPlacesV1PlacePaymentOptions",
      "properties": {
        "acceptsNfc": {
          "description": "Place accepts NFC payments.",
          "type": "boolean"
        },
        "acceptsDebitCards": {
          "type": "boolean",
          "description": "Place accepts debit cards as payment."
        },
        "acceptsCreditCards": {
          "type": "boolean",
          "description": "Place accepts credit cards as payment."
        },
        "acceptsCashOnly": {
          "description": "Place accepts cash only as payment. Places with this attribute may still accept other payment methods.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GoogleMapsPlacesV1PlaceOpeningHoursPeriod": {
      "type": "object",
      "id": "GoogleMapsPlacesV1PlaceOpeningHoursPeriod",
      "properties": {
        "close": {
          "description": "The time that the place starts to be closed.",
          "$ref": "GoogleMapsPlacesV1PlaceOpeningHoursPeriodPoint"
        },
        "open": {
          "$ref": "GoogleMapsPlacesV1PlaceOpeningHoursPeriodPoint",
          "description": "The time that the place starts to be open."
        }
      },
      "description": "A period the place remains in open_now status."
    },
    "GoogleMapsPlacesV1SearchTextResponse": {
      "type": "object",
      "description": "Response proto for SearchText. ",
      "id": "GoogleMapsPlacesV1SearchTextResponse",
      "properties": {
        "places": {
          "items": {
            "$ref": "GoogleMapsPlacesV1Place"
          },
          "description": "A list of places that meet the user's text search criteria.",
          "type": "array"
        }
      }
    },
    "GoogleTypeDate": {
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "id": "GoogleTypeDate",
      "type": "object",
      "properties": {
        "day": {
          "type": "integer",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "format": "int32"
        },
        "year": {
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer"
        },
        "month": {
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer"
        }
      }
    },
    "GoogleMapsPlacesV1SearchNearbyRequest": {
      "properties": {
        "includedTypes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Included Place type (eg, \"restaurant\" or \"gas_station\") from https://developers.google.com/maps/documentation/places/web-service/place-types. If there are any conflicting types, i.e. a type appears in both included_types and excluded_types, an INVALID_ARGUMENT error is returned. If a Place type is specified with multiple type restrictions, only places that satisfy all of the restrictions are returned. For example, if we have {included_types = [\"restaurant\"], excluded_primary_types = [\"restaurant\"]}, the returned places provide \"restaurant\" related services but do not operate primarily as \"restaurants\"."
        },
        "rankPreference": {
          "enum": [
            "RANK_PREFERENCE_UNSPECIFIED",
            "DISTANCE",
            "POPULARITY"
          ],
          "description": "How results will be ranked in the response.",
          "enumDescriptions": [
            "RankPreference value not set. Will use rank by POPULARITY by default.",
            "Ranks results by distance.",
            "Ranks results by popularity."
          ],
          "type": "string"
        },
        "languageCode": {
          "type": "string",
          "description": "Place details will be displayed with the preferred language if available. If the language code is unspecified or unrecognized, place details of any language may be returned, with a preference for English if such details exist. Current list of supported languages: https://developers.google.com/maps/faq#languagesupport."
        },
        "excludedTypes": {
          "description": "Excluded Place type (eg, \"restaurant\" or \"gas_station\") from https://developers.google.com/maps/documentation/places/web-service/place-types. If the client provides both included_types (e.g. restaurant) and excluded_types (e.g. cafe), then the response should include places that are restaurant but not cafe. The response includes places that match at least one of the included_types and none of the excluded_types. If there are any conflicting types, i.e. a type appears in both included_types and excluded_types, an INVALID_ARGUMENT error is returned. If a Place type is specified with multiple type restrictions, only places that satisfy all of the restrictions are returned. For example, if we have {included_types = [\"restaurant\"], excluded_primary_types = [\"restaurant\"]}, the returned places provide \"restaurant\" related services but do not operate primarily as \"restaurants\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regionCode": {
          "type": "string",
          "description": "The Unicode country/region code (CLDR) of the location where the request is coming from. This parameter is used to display the place details, like region-specific place name, if available. The parameter can affect results based on applicable law. For more information, see https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html. Note that 3-digit region codes are not currently supported."
        },
        "locationRestriction": {
          "description": "Required. The region to search.",
          "$ref": "GoogleMapsPlacesV1SearchNearbyRequestLocationRestriction"
        },
        "includedPrimaryTypes": {
          "type": "array",
          "description": "Included primary Place type (e.g. \"restaurant\" or \"gas_station\") from https://developers.google.com/maps/documentation/places/web-service/place-types. A place can only have a single primary type from the supported types table associated with it. If there are any conflicting primary types, i.e. a type appears in both included_primary_types and excluded_primary_types, an INVALID_ARGUMENT error is returned. If a Place type is specified with multiple type restrictions, only places that satisfy all of the restrictions are returned. For example, if we have {included_types = [\"restaurant\"], excluded_primary_types = [\"restaurant\"]}, the returned places provide \"restaurant\" related services but do not operate primarily as \"restaurants\".",
          "items": {
            "type": "string"
          }
        },
        "maxResultCount": {
          "description": "Maximum number of results to return. It must be between 1 and 20 (default), inclusively. If the number is unset, it falls back to the upper limit. If the number is set to negative or exceeds the upper limit, an INVALID_ARGUMENT error is returned.",
          "type": "integer",
          "format": "int32"
        },
        "excludedPrimaryTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Excluded primary Place type (e.g. \"restaurant\" or \"gas_station\") from https://developers.google.com/maps/documentation/places/web-service/place-types. If there are any conflicting primary types, i.e. a type appears in both included_primary_types and excluded_primary_types, an INVALID_ARGUMENT error is returned. If a Place type is specified with multiple type restrictions, only places that satisfy all of the restrictions are returned. For example, if we have {included_types = [\"restaurant\"], excluded_primary_types = [\"restaurant\"]}, the returned places provide \"restaurant\" related services but do not operate primarily as \"restaurants\"."
        }
      },
      "type": "object",
      "id": "GoogleMapsPlacesV1SearchNearbyRequest",
      "description": "Request proto for Search Nearby. "
    },
    "GoogleMapsPlacesV1PlaceAccessibilityOptions": {
      "description": "Information about the accessibility options a place offers.",
      "type": "object",
      "id": "GoogleMapsPlacesV1PlaceAccessibilityOptions",
      "properties": {
        "wheelchairAccessibleRestroom": {
          "type": "boolean",
          "description": "Place has wheelchair accessible restroom."
        },
        "wheelchairAccessibleSeating": {
          "type": "boolean",
          "description": "Place has wheelchair accessible seating."
        },
        "wheelchairAccessibleEntrance": {
          "type": "boolean",
          "description": "Places has wheelchair accessible entrance."
        },
        "wheelchairAccessibleParking": {
          "type": "boolean",
          "description": "Place offers wheelchair accessible parking."
        }
      }
    },
    "GoogleMapsPlacesV1Photo": {
      "properties": {
        "heightPx": {
          "description": "The maximum available height, in pixels.",
          "type": "integer",
          "format": "int32"
        },
        "authorAttributions": {
          "type": "array",
          "items": {
            "$ref": "GoogleMapsPlacesV1AuthorAttribution"
          },
          "description": "This photo's authors."
        },
        "widthPx": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum available width, in pixels."
        },
        "name": {
          "type": "string",
          "description": "Identifier. A reference representing this place photo which may be used to look up this place photo again (a.k.a. the API \"resource\" name: places/{place_id}/photos/{photo})."
        }
      },
      "description": "Information about a photo of a place.",
      "id": "GoogleMapsPlacesV1Photo",
      "type": "object"
    },
    "GoogleMapsPlacesV1PlaceParkingOptions": {
      "type": "object",
      "description": "Information about parking options for the place. A parking lot could support more than one option at the same time.",
      "properties": {
        "freeStreetParking": {
          "description": "Place offers free street parking.",
          "type": "boolean"
        },
        "paidParkingLot": {
          "description": "Place offers paid parking lots.",
          "type": "boolean"
        },
        "freeParkingLot": {
          "type": "boolean",
          "description": "Place offers free parking lots."
        },
        "valetParking": {
          "type": "boolean",
          "description": "Place offers valet parking."
        },
        "paidGarageParking": {
          "type": "boolean",
          "description": "Place offers paid garage parking."
        },
        "paidStreetParking": {
          "type": "boolean",
          "description": "Place offers paid street parking."
        },
        "freeGarageParking": {
          "description": "Place offers free garage parking.",
          "type": "boolean"
        }
      },
      "id": "GoogleMapsPlacesV1PlaceParkingOptions"
    },
    "GoogleMapsPlacesV1PlaceAddressComponent": {
      "description": "The structured components that form the formatted address, if this information is available.",
      "type": "object",
      "properties": {
        "shortText": {
          "type": "string",
          "description": "An abbreviated textual name for the address component, if available. For example, an address component for the country of Australia may have a short_name of \"AU\"."
        },
        "types": {
          "items": {
            "type": "string"
          },
          "description": "An array indicating the type(s) of the address component.",
          "type": "array"
        },
        "longText": {
          "description": "The full text description or name of the address component. For example, an address component for the country Australia may have a long_name of \"Australia\".",
          "type": "string"
        },
        "languageCode": {
          "description": "The language used to format this components, in CLDR notation.",
          "type": "string"
        }
      },
      "id": "GoogleMapsPlacesV1PlaceAddressComponent"
    },
    "GoogleMapsPlacesV1SearchNearbyResponse": {
      "type": "object",
      "description": "Response proto for Search Nearby. ",
      "id": "GoogleMapsPlacesV1SearchNearbyResponse",
      "properties": {
        "places": {
          "items": {
            "$ref": "GoogleMapsPlacesV1Place"
          },
          "type": "array",
          "description": "A list of places that meets user's requirements like places types, number of places and specific location restriction."
        }
      }
    },
    "GoogleMapsPlacesV1EVChargeOptions": {
      "description": "Information about the EV Charge Station hosted in Place. Terminology follows https://afdc.energy.gov/fuels/electricity_infrastructure.html One port could charge one car at a time. One port has one or more connectors. One station has one or more ports.",
      "properties": {
        "connectorCount": {
          "format": "int32",
          "description": "Number of connectors at this station. However, because some ports can have multiple connectors but only be able to charge one car at a time (e.g.) the number of connectors may be greater than the total number of cars which can charge simultaneously.",
          "type": "integer"
        },
        "connectorAggregation": {
          "items": {
            "$ref": "GoogleMapsPlacesV1EVChargeOptionsConnectorAggregation"
          },
          "type": "array",
          "description": "A list of EV charging connector aggregations that contain connectors of the same type and same charge rate."
        }
      },
      "type": "object",
      "id": "GoogleMapsPlacesV1EVChargeOptions"
    },
    "GoogleTypeLatLng": {
      "properties": {
        "longitude": {
          "format": "double",
          "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
          "type": "number"
        },
        "latitude": {
          "format": "double",
          "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
          "type": "number"
        }
      },
      "id": "GoogleTypeLatLng",
      "description": "An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.",
      "type": "object"
    },
    "GoogleMapsPlacesV1PlaceAttribution": {
      "properties": {
        "provider": {
          "type": "string",
          "description": "Name of the Place's data provider."
        },
        "providerUri": {
          "description": "URI to the Place's data provider.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Information about data providers of this place.",
      "id": "GoogleMapsPlacesV1PlaceAttribution"
    },
    "GoogleMapsPlacesV1EVChargeOptionsConnectorAggregation": {
      "id": "GoogleMapsPlacesV1EVChargeOptionsConnectorAggregation",
      "properties": {
        "availableCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of connectors in this aggregation that are currently available."
        },
        "count": {
          "description": "Number of connectors in this aggregation.",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string",
          "enum": [
            "EV_CONNECTOR_TYPE_UNSPECIFIED",
            "EV_CONNECTOR_TYPE_OTHER",
            "EV_CONNECTOR_TYPE_J1772",
            "EV_CONNECTOR_TYPE_TYPE_2",
            "EV_CONNECTOR_TYPE_CHADEMO",
            "EV_CONNECTOR_TYPE_CCS_COMBO_1",
            "EV_CONNECTOR_TYPE_CCS_COMBO_2",
            "EV_CONNECTOR_TYPE_TESLA",
            "EV_CONNECTOR_TYPE_UNSPECIFIED_GB_T",
            "EV_CONNECTOR_TYPE_UNSPECIFIED_WALL_OUTLET"
          ],
          "enumDescriptions": [
            "Unspecified connector.",
            "Other connector types.",
            "J1772 type 1 connector.",
            "IEC 62196 type 2 connector. Often referred to as MENNEKES.",
            "CHAdeMO type connector.",
            "Combined Charging System (AC and DC). Based on SAE. Type-1 J-1772 connector",
            "Combined Charging System (AC and DC). Based on Type-2 Mennekes connector",
            "The generic TESLA connector. This is NACS in the North America but can be non-NACS in other parts of the world (e.g. CCS Combo 2 (CCS2) or GB/T). This value is less representative of an actual connector type, and more represents the ability to charge a Tesla brand vehicle at a Tesla owned charging station.",
            "GB/T type corresponds to the GB/T standard in China. This type covers all GB_T types.",
            "Unspecified wall outlet."
          ],
          "description": "The connector type of this aggregation."
        },
        "availabilityLastUpdateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp when the connector availability information in this aggregation was last updated."
        },
        "maxChargeRateKw": {
          "type": "number",
          "format": "double",
          "description": "The static max charging rate in kw of each connector in the aggregation."
        },
        "outOfServiceCount": {
          "type": "integer",
          "description": "Number of connectors in this aggregation that are currently out of service.",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "EV charging information grouped by [type, max_charge_rate_kw]. Shows EV charge aggregation of connectors that have the same type and max charge rate in kw."
    },
    "GoogleMapsPlacesV1SearchTextRequest": {
      "type": "object",
      "id": "GoogleMapsPlacesV1SearchTextRequest",
      "description": "Request proto for SearchText. ",
      "properties": {
        "locationRestriction": {
          "description": "The region to search. This location serves as a restriction which means results outside given location will not be returned. Cannot be set along with location_bias.",
          "$ref": "GoogleMapsPlacesV1SearchTextRequestLocationRestriction"
        },
        "rankPreference": {
          "type": "string",
          "enum": [
            "RANK_PREFERENCE_UNSPECIFIED",
            "DISTANCE",
            "RELEVANCE"
          ],
          "enumDescriptions": [
            "RankPreference value not set. Will default to DISTANCE.",
            "Ranks results by distance.",
            "Ranks results by relevance. Sort order determined by normal ranking stack. See SortRefinement::RELEVANCE."
          ],
          "description": "How results will be ranked in the response."
        },
        "languageCode": {
          "type": "string",
          "description": "Place details will be displayed with the preferred language if available. If the language code is unspecified or unrecognized, place details of any language may be returned, with a preference for English if such details exist. Current list of supported languages: https://developers.google.com/maps/faq#languagesupport."
        },
        "textQuery": {
          "description": "Required. The text query for textual search.",
          "type": "string"
        },
        "locationBias": {
          "$ref": "GoogleMapsPlacesV1SearchTextRequestLocationBias",
          "description": "The region to search. This location serves as a bias which means results around given location might be returned. Cannot be set along with location_restriction."
        },
        "regionCode": {
          "description": "The Unicode country/region code (CLDR) of the location where the request is coming from. This parameter is used to display the place details, like region-specific place name, if available. The parameter can affect results based on applicable law. For more information, see https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html. Note that 3-digit region codes are not currently supported.",
          "type": "string"
        },
        "openNow": {
          "type": "boolean",
          "description": "Used to restrict the search to places that are currently open."
        },
        "maxResultCount": {
          "type": "integer",
          "description": "Maximum number of results to return. It must be between 1 and 20, inclusively. If the number is unset, it falls back to the upper limit. If the number is set to negative or exceeds the upper limit, an INVALID_ARGUMENT error is returned.",
          "format": "int32"
        },
        "strictTypeFiltering": {
          "type": "boolean",
          "description": "Used to set strict type filtering for included_type. If set to true, only results of the same type will be returned. Default to false."
        },
        "minRating": {
          "description": "Filter out results whose average user rating is strictly less than this limit. A valid value must be an float between 0 and 5 (inclusively) at a 0.5 cadence i.e. [0, 0.5, 1.0, ... , 5.0] inclusively. This is to keep parity with LocalRefinement_UserRating. The input rating will round up to the nearest 0.5(ceiling). For instance, a rating of 0.6 will eliminate all results with a less than 1.0 rating.",
          "type": "number",
          "format": "double"
        },
        "includedType": {
          "type": "string",
          "description": "The requested place type. Full list of types supported: https://developers.google.com/maps/documentation/places/web-service/place-types. Only support one included type."
        },
        "priceLevels": {
          "items": {
            "enum": [
              "PRICE_LEVEL_UNSPECIFIED",
              "PRICE_LEVEL_FREE",
              "PRICE_LEVEL_INEXPENSIVE",
              "PRICE_LEVEL_MODERATE",
              "PRICE_LEVEL_EXPENSIVE",
              "PRICE_LEVEL_VERY_EXPENSIVE"
            ],
            "type": "string",
            "enumDescriptions": [
              "Place price level is unspecified or unknown.",
              "Place provides free services.",
              "Place provides inexpensive services.",
              "Place provides moderately priced services.",
              "Place provides expensive services.",
              "Place provides very expensive service s."
            ]
          },
          "type": "array",
          "description": "Used to restrict the search to places that are marked as certain price levels. Users can choose any combinations of price levels. Default to select all price levels."
        }
      }
    },
    "GoogleMapsPlacesV1AuthorAttribution": {
      "description": "Information about the author of the UGC data. Used in Photo, and Review.",
      "properties": {
        "uri": {
          "description": "URI of the author of the Photo or Review.",
          "type": "string"
        },
        "photoUri": {
          "type": "string",
          "description": "Profile photo URI of the author of the Photo or Review."
        },
        "displayName": {
          "description": "Name of the author of the Photo or Review.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleMapsPlacesV1AuthorAttribution"
    },
    "GoogleTypeMoney": {
      "description": "Represents an amount of money with its currency type.",
      "properties": {
        "units": {
          "format": "int64",
          "type": "string",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
        },
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        }
      },
      "type": "object",
      "id": "GoogleTypeMoney"
    },
    "GoogleTypeLocalizedText": {
      "properties": {
        "text": {
          "type": "string",
          "description": "Localized string in the language corresponding to language_code below."
        },
        "languageCode": {
          "description": "The text's BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Localized variant of a text in a particular language.",
      "id": "GoogleTypeLocalizedText"
    },
    "GoogleMapsPlacesV1PlaceSubDestination": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name of the sub destination."
        },
        "id": {
          "description": "The place id of the sub destination.",
          "type": "string"
        }
      },
      "description": "Place resource name and id of sub destinations that relate to the place. For example, different terminals are different destinations of an airport.",
      "id": "GoogleMapsPlacesV1PlaceSubDestination"
    },
    "GoogleMapsPlacesV1FuelOptions": {
      "type": "object",
      "description": "The most recent information about fuel options in a gas station. This information is updated regularly.",
      "properties": {
        "fuelPrices": {
          "type": "array",
          "description": "The last known fuel price for each type of fuel this station has. There is one entry per fuel type this station has. Order is not important.",
          "items": {
            "$ref": "GoogleMapsPlacesV1FuelOptionsFuelPrice"
          }
        }
      },
      "id": "GoogleMapsPlacesV1FuelOptions"
    },
    "GoogleMapsPlacesV1PlaceOpeningHoursSpecialDay": {
      "description": "Structured information for special days that fall within the period that the returned opening hours cover. Special days are days that could impact the business hours of a place, e.g. Christmas day.",
      "type": "object",
      "properties": {
        "date": {
          "description": "The date of this special day.",
          "$ref": "GoogleTypeDate"
        }
      },
      "id": "GoogleMapsPlacesV1PlaceOpeningHoursSpecialDay"
    },
    "GoogleMapsPlacesV1PlacePlusCode": {
      "description": "Plus code (http://plus.codes) is a location reference with two formats: global code defining a 14mx14m (1/8000th of a degree) or smaller rectangle, and compound code, replacing the prefix with a reference location.",
      "properties": {
        "globalCode": {
          "type": "string",
          "description": "Place's global (full) code, such as \"9FWM33GV+HQ\", representing an 1/8000 by 1/8000 degree area (~14 by 14 meters)."
        },
        "compoundCode": {
          "description": "Place's compound code, such as \"33GV+HQ, Ramberg, Norway\", containing the suffix of the global code and replacing the prefix with a formatted name of a reference entity.",
          "type": "string"
        }
      },
      "id": "GoogleMapsPlacesV1PlacePlusCode",
      "type": "object"
    },
    "GoogleMapsPlacesV1Place": {
      "id": "GoogleMapsPlacesV1Place",
      "type": "object",
      "properties": {
        "servesDessert": {
          "description": "Place serves dessert.",
          "type": "boolean"
        },
        "primaryType": {
          "type": "string",
          "description": "The primary type of the given result. This type must one of the Places API supported types. For example, \"restaurant\", \"cafe\", \"airport\", etc. A place can only have a single primary type. For the complete list of possible values, see Table A and Table B at https://developers.google.com/maps/documentation/places/web-service/place-types"
        },
        "servesBreakfast": {
          "type": "boolean",
          "description": "Specifies if the place serves breakfast."
        },
        "regularSecondaryOpeningHours": {
          "items": {
            "$ref": "GoogleMapsPlacesV1PlaceOpeningHours"
          },
          "description": "Contains an array of entries for information about regular secondary hours of a business. Secondary hours are different from a business's main hours. For example, a restaurant can specify drive through hours or delivery hours as its secondary hours. This field populates the type subfield, which draws from a predefined list of opening hours types (such as DRIVE_THROUGH, PICKUP, or TAKEOUT) based on the types of the place.",
          "type": "array"
        },
        "location": {
          "$ref": "GoogleTypeLatLng",
          "description": "The position of this place."
        },
        "fuelOptions": {
          "description": "The most recent information about fuel options in a gas station. This information is updated regularly.",
          "$ref": "GoogleMapsPlacesV1FuelOptions"
        },
        "servesWine": {
          "description": "Specifies if the place serves wine.",
          "type": "boolean"
        },
        "subDestinations": {
          "items": {
            "$ref": "GoogleMapsPlacesV1PlaceSubDestination"
          },
          "type": "array",
          "description": "A list of sub destinations related to the place."
        },
        "regularOpeningHours": {
          "$ref": "GoogleMapsPlacesV1PlaceOpeningHours",
          "description": "The regular hours of operation."
        },
        "servesCoffee": {
          "type": "boolean",
          "description": "Place serves coffee."
        },
        "servesVegetarianFood": {
          "type": "boolean",
          "description": "Specifies if the place serves vegetarian food."
        },
        "name": {
          "description": "An ID representing this place which may be used to look up this place again (a.k.a. the API \"resource\" name: places/place_id).",
          "type": "string"
        },
        "restroom": {
          "type": "boolean",
          "description": "Place has restroom."
        },
        "accessibilityOptions": {
          "$ref": "GoogleMapsPlacesV1PlaceAccessibilityOptions",
          "description": "Information about the accessibility options a place offers."
        },
        "googleMapsUri": {
          "description": "A URL providing more information about this place.",
          "type": "string"
        },
        "goodForGroups": {
          "type": "boolean",
          "description": "Place accommodates groups."
        },
        "primaryTypeDisplayName": {
          "$ref": "GoogleTypeLocalizedText",
          "description": "The display name of the primary type, localized to the request language if applicable. For the complete list of possible values, see Table A and Table B at https://developers.google.com/maps/documentation/places/web-service/place-types"
        },
        "utcOffsetMinutes": {
          "format": "int32",
          "description": "Number of minutes this place's timezone is currently offset from UTC. This is expressed in minutes to support timezones that are offset by fractions of an hour, e.g. X hours and 15 minutes.",
          "type": "integer"
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of a place."
        },
        "liveMusic": {
          "type": "boolean",
          "description": "Place provides live music."
        },
        "rating": {
          "description": "A rating between 1.0 and 5.0, based on user reviews of this place.",
          "format": "double",
          "type": "number"
        },
        "displayName": {
          "$ref": "GoogleTypeLocalizedText",
          "description": "The localized name of the place, suitable as a short human-readable description. For example, \"Google Sydney\", \"Starbucks\", \"Pyrmont\", etc."
        },
        "adrFormatAddress": {
          "type": "string",
          "description": "The place's address in adr microformat: http://microformats.org/wiki/adr."
        },
        "goodForWatchingSports": {
          "description": "Place is suitable for watching sports.",
          "type": "boolean"
        },
        "outdoorSeating": {
          "type": "boolean",
          "description": "Place provides outdoor seating."
        },
        "evChargeOptions": {
          "$ref": "GoogleMapsPlacesV1EVChargeOptions",
          "description": "Information of ev charging options."
        },
        "attributions": {
          "description": "A set of data provider that must be shown with this result.",
          "items": {
            "$ref": "GoogleMapsPlacesV1PlaceAttribution"
          },
          "type": "array"
        },
        "allowsDogs": {
          "type": "boolean",
          "description": "Place allows dogs."
        },
        "goodForChildren": {
          "type": "boolean",
          "description": "Place is good for children."
        },
        "internationalPhoneNumber": {
          "description": "A human-readable phone number for the place, in international format.",
          "type": "string"
        },
        "iconBackgroundColor": {
          "type": "string",
          "description": "Background color for icon_mask in hex format, e.g. #909CE1."
        },
        "delivery": {
          "description": "Specifies if the business supports delivery.",
          "type": "boolean"
        },
        "currentOpeningHours": {
          "description": "The hours of operation for the next seven days (including today). The time period starts at midnight on the date of the request and ends at 11:59 pm six days later. This field includes the special_days subfield of all hours, set for dates that have exceptional hours.",
          "$ref": "GoogleMapsPlacesV1PlaceOpeningHours"
        },
        "formattedAddress": {
          "type": "string",
          "description": "A full, human-readable address for this place."
        },
        "paymentOptions": {
          "$ref": "GoogleMapsPlacesV1PlacePaymentOptions",
          "description": "Payment options the place accepts. If a payment option data is not available, the payment option field will be unset."
        },
        "reservable": {
          "type": "boolean",
          "description": "Specifies if the place supports reservations."
        },
        "reviews": {
          "type": "array",
          "items": {
            "$ref": "GoogleMapsPlacesV1Review"
          },
          "description": "List of reviews about this place, sorted by relevance."
        },
        "plusCode": {
          "description": "Plus code of the place location lat/long.",
          "$ref": "GoogleMapsPlacesV1PlacePlusCode"
        },
        "businessStatus": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The establishment is operational, not necessarily open now.",
            "The establishment is temporarily closed.",
            "The establishment is permanently closed."
          ],
          "type": "string",
          "enum": [
            "BUSINESS_STATUS_UNSPECIFIED",
            "OPERATIONAL",
            "CLOSED_TEMPORARILY",
            "CLOSED_PERMANENTLY"
          ],
          "description": "The business status for the place."
        },
        "currentSecondaryOpeningHours": {
          "type": "array",
          "items": {
            "$ref": "GoogleMapsPlacesV1PlaceOpeningHours"
          },
          "description": "Contains an array of entries for the next seven days including information about secondary hours of a business. Secondary hours are different from a business's main hours. For example, a restaurant can specify drive through hours or delivery hours as its secondary hours. This field populates the type subfield, which draws from a predefined list of opening hours types (such as DRIVE_THROUGH, PICKUP, or TAKEOUT) based on the types of the place. This field includes the special_days subfield of all hours, set for dates that have exceptional hours."
        },
        "servesLunch": {
          "description": "Specifies if the place serves lunch.",
          "type": "boolean"
        },
        "takeout": {
          "type": "boolean",
          "description": "Specifies if the business supports takeout."
        },
        "priceLevel": {
          "enumDescriptions": [
            "Place price level is unspecified or unknown.",
            "Place provides free services.",
            "Place provides inexpensive services.",
            "Place provides moderately priced services.",
            "Place provides expensive services.",
            "Place provides very expensive service s."
          ],
          "enum": [
            "PRICE_LEVEL_UNSPECIFIED",
            "PRICE_LEVEL_FREE",
            "PRICE_LEVEL_INEXPENSIVE",
            "PRICE_LEVEL_MODERATE",
            "PRICE_LEVEL_EXPENSIVE",
            "PRICE_LEVEL_VERY_EXPENSIVE"
          ],
          "description": "Price level of the place.",
          "type": "string"
        },
        "editorialSummary": {
          "description": "Contains a summary of the place. A summary is comprised of a textual overview, and also includes the language code for these if applicable. Summary text must be presented as-is and can not be modified or altered.",
          "$ref": "GoogleTypeLocalizedText"
        },
        "nationalPhoneNumber": {
          "description": "A human-readable phone number for the place, in national format.",
          "type": "string"
        },
        "userRatingCount": {
          "description": "The total number of reviews (with or without text) for this place.",
          "type": "integer",
          "format": "int32"
        },
        "viewport": {
          "$ref": "GoogleGeoTypeViewport",
          "description": "A viewport suitable for displaying the place on an average-sized map."
        },
        "iconMaskBaseUri": {
          "description": "A truncated URL to an v2 icon mask. User can access different icon type by appending type suffix to the end (eg, \".svg\" or \".png\").",
          "type": "string"
        },
        "types": {
          "description": "A set of type tags for this result. For example, \"political\" and \"locality\". For the complete list of possible values, see Table A and Table B at https://developers.google.com/maps/documentation/places/web-service/place-types",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "dineIn": {
          "description": "Specifies if the business supports indoor or outdoor seating options.",
          "type": "boolean"
        },
        "servesBeer": {
          "type": "boolean",
          "description": "Specifies if the place serves beer."
        },
        "menuForChildren": {
          "type": "boolean",
          "description": "Place has a children's menu."
        },
        "servesCocktails": {
          "description": "Place serves cocktails.",
          "type": "boolean"
        },
        "curbsidePickup": {
          "description": "Specifies if the business supports curbside pickup.",
          "type": "boolean"
        },
        "photos": {
          "items": {
            "$ref": "GoogleMapsPlacesV1Photo"
          },
          "type": "array",
          "description": "Information (including references) about photos of this place."
        },
        "servesBrunch": {
          "description": "Specifies if the place serves brunch.",
          "type": "boolean"
        },
        "websiteUri": {
          "type": "string",
          "description": "The authoritative website for this place, e.g. a business' homepage. Note that for places that are part of a chain (e.g. an IKEA store), this will usually be the website for the individual store, not the overall chain."
        },
        "parkingOptions": {
          "$ref": "GoogleMapsPlacesV1PlaceParkingOptions",
          "description": "Options of parking provided by the place."
        },
        "addressComponents": {
          "items": {
            "$ref": "GoogleMapsPlacesV1PlaceAddressComponent"
          },
          "type": "array",
          "description": "Repeated components for each locality level. Note the following facts about the address_components[] array: - The array of address components may contain more components than the formatted_address. - The array does not necessarily include all the political entities that contain an address, apart from those included in the formatted_address. To retrieve all the political entities that contain a specific address, you should use reverse geocoding, passing the latitude/longitude of the address as a parameter to the request. - The format of the response is not guaranteed to remain the same between requests. In particular, the number of address_components varies based on the address requested and can change over time for the same address. A component can change position in the array. The type of the component can change. A particular component may be missing in a later response."
        },
        "servesDinner": {
          "description": "Specifies if the place serves dinner.",
          "type": "boolean"
        },
        "shortFormattedAddress": {
          "description": "A short, human-readable address for this place.",
          "type": "string"
        }
      },
      "description": "All the information representing a Place."
    }
  },
  "ownerName": "Google",
  "resources": {
    "places": {
      "methods": {
        "searchNearby": {
          "response": {
            "$ref": "GoogleMapsPlacesV1SearchNearbyResponse"
          },
          "path": "v1/places:searchNearby",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/maps-platform.places",
            "https://www.googleapis.com/auth/maps-platform.places.nearbysearch"
          ],
          "description": "Search for places near locations.",
          "id": "places.places.searchNearby",
          "parameterOrder": [],
          "httpMethod": "POST",
          "flatPath": "v1/places:searchNearby",
          "parameters": {},
          "request": {
            "$ref": "GoogleMapsPlacesV1SearchNearbyRequest"
          }
        },
        "get": {
          "flatPath": "v1/places/{placesId}",
          "description": "Get a Place with a place id (in a name) string.",
          "parameters": {
            "languageCode": {
              "type": "string",
              "description": "Optional. Place details will be displayed with the preferred language if available. Current list of supported languages: https://developers.google.com/maps/faq#languagesupport.",
              "location": "query"
            },
            "name": {
              "required": true,
              "description": "Required. A place ID returned in a Place (with \"places/\" prefix), or equivalently the name in the same Place. Format: places/place_id.",
              "pattern": "^places/[^/]+$",
              "type": "string",
              "location": "path"
            },
            "regionCode": {
              "location": "query",
              "description": "Optional. The Unicode country/region code (CLDR) of the location where the request is coming from. This parameter is used to display the place details, like region-specific place name, if available. The parameter can affect results based on applicable law. For more information, see https://www.unicode.org/cldr/charts/latest/supplemental/territory_language_information.html. Note that 3-digit region codes are not currently supported.",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "GoogleMapsPlacesV1Place"
          },
          "id": "places.places.get",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/maps-platform.places",
            "https://www.googleapis.com/auth/maps-platform.places.details"
          ],
          "httpMethod": "GET",
          "path": "v1/{+name}"
        },
        "searchText": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/maps-platform.places",
            "https://www.googleapis.com/auth/maps-platform.places.textsearch"
          ],
          "id": "places.places.searchText",
          "httpMethod": "POST",
          "parameters": {},
          "parameterOrder": [],
          "response": {
            "$ref": "GoogleMapsPlacesV1SearchTextResponse"
          },
          "request": {
            "$ref": "GoogleMapsPlacesV1SearchTextRequest"
          },
          "flatPath": "v1/places:searchText",
          "description": "Text query based place search.",
          "path": "v1/places:searchText"
        }
      },
      "resources": {
        "photos": {
          "methods": {
            "getMedia": {
              "httpMethod": "GET",
              "description": "Get a photo media with a photo reference string.",
              "id": "places.places.photos.getMedia",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/places/{placesId}/photos/{photosId}/media",
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/maps-platform.places"
              ],
              "parameters": {
                "name": {
                  "pattern": "^places/[^/]+/photos/[^/]+/media$",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Required. The resource name of a photo as returned in a Place object's photos.name field. Format: places/place_id/photos/photo_reference."
                },
                "maxHeightPx": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Optional. Specifies the maximum desired height, in pixels, of the image. If the image is smaller than the values specified, the original image will be returned. If the image is larger in either dimension, it will be scaled to match the smaller of the two dimensions, restricted to its original aspect ratio. Both the max_height_px and max_width_px properties accept an integer between 1 and 4800, inclusively. If the value is not within the allowed range, an INVALID_ARGUMENT error will be returned. At least one of max_height_px or max_width_px needs to be specified. If neither max_height_px nor max_width_px is specified, an INVALID_ARGUMENT error will be returned.",
                  "location": "query"
                },
                "skipHttpRedirect": {
                  "description": "Optional. If set, skip the default HTTP redirect behavior and render a text format (for example, in JSON format for HTTP use case) response. If not set, an HTTP redirect will be issued to redirect the call to the image midea. This option is ignored for non-HTTP requests.",
                  "location": "query",
                  "type": "boolean"
                },
                "maxWidthPx": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "Optional. Specifies the maximum desired width, in pixels, of the image. If the image is smaller than the values specified, the original image will be returned. If the image is larger in either dimension, it will be scaled to match the smaller of the two dimensions, restricted to its original aspect ratio. Both the max_height_px and max_width_px properties accept an integer between 1 and 4800, inclusively. If the value is not within the allowed range, an INVALID_ARGUMENT error will be returned. At least one of max_height_px or max_width_px needs to be specified. If neither max_height_px nor max_width_px is specified, an INVALID_ARGUMENT error will be returned."
                }
              },
              "response": {
                "$ref": "GoogleMapsPlacesV1PhotoMedia"
              }
            }
          }
        }
      }
    }
  },
  "version_module": true,
  "description": "",
  "parameters": {
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "type": "string",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    }
  },
  "version": "v1"
}

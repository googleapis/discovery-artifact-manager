{
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/text-to-speech/",
  "batchPath": "batch",
  "baseUrl": "https://texttospeech.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "name": "texttospeech",
  "version": "v1beta1",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "revision": "20240419",
  "version_module": true,
  "description": "Synthesizes natural-sounding speech by applying powerful neural network models.",
  "ownerDomain": "google.com",
  "rootUrl": "https://texttospeech.googleapis.com/",
  "mtlsRootUrl": "https://texttospeech.mtls.googleapis.com/",
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "ListVoicesResponse": {
      "id": "ListVoicesResponse",
      "description": "The message returned to the client by the `ListVoices` method.",
      "type": "object",
      "properties": {
        "voices": {
          "description": "The list of voices.",
          "type": "array",
          "items": {
            "$ref": "Voice"
          }
        }
      }
    },
    "Voice": {
      "id": "Voice",
      "description": "Description of a voice supported by the TTS service.",
      "type": "object",
      "properties": {
        "languageCodes": {
          "description": "The languages that this voice supports, expressed as [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tags (e.g. \"en-US\", \"es-419\", \"cmn-tw\").",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "The name of this voice. Each distinct voice has a unique name.",
          "type": "string"
        },
        "ssmlGender": {
          "description": "The gender of this voice.",
          "type": "string",
          "enumDescriptions": [
            "An unspecified gender. In VoiceSelectionParams, this means that the client doesn't care which gender the selected voice will have. In the Voice field of ListVoicesResponse, this may mean that the voice doesn't fit any of the other categories in this enum, or that the gender of the voice isn't known.",
            "A male voice.",
            "A female voice.",
            "A gender-neutral voice. This voice is not yet supported."
          ],
          "enum": [
            "SSML_VOICE_GENDER_UNSPECIFIED",
            "MALE",
            "FEMALE",
            "NEUTRAL"
          ]
        },
        "naturalSampleRateHertz": {
          "description": "The natural sample rate (in hertz) for this voice.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SynthesizeSpeechRequest": {
      "id": "SynthesizeSpeechRequest",
      "description": "The top-level message sent by the client for the `SynthesizeSpeech` method.",
      "type": "object",
      "properties": {
        "input": {
          "description": "Required. The Synthesizer requires either plain text or SSML as input.",
          "$ref": "SynthesisInput"
        },
        "voice": {
          "description": "Required. The desired voice of the synthesized audio.",
          "$ref": "VoiceSelectionParams"
        },
        "audioConfig": {
          "description": "Required. The configuration of the synthesized audio.",
          "$ref": "AudioConfig"
        },
        "enableTimePointing": {
          "description": "Whether and what timepoints are returned in the response.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Not specified. No timepoint information will be returned.",
              "Timepoint information of `` tags in SSML input will be returned."
            ],
            "enum": [
              "TIMEPOINT_TYPE_UNSPECIFIED",
              "SSML_MARK"
            ]
          }
        }
      }
    },
    "SynthesisInput": {
      "id": "SynthesisInput",
      "description": "Contains text input to be synthesized. Either `text` or `ssml` must be supplied. Supplying both or neither returns google.rpc.Code.INVALID_ARGUMENT. The input size is limited to 5000 bytes.",
      "type": "object",
      "properties": {
        "text": {
          "description": "The raw text to be synthesized.",
          "type": "string"
        },
        "ssml": {
          "description": "The SSML document to be synthesized. The SSML document must be valid and well-formed. Otherwise the RPC will fail and return google.rpc.Code.INVALID_ARGUMENT. For more information, see [SSML](https://cloud.google.com/text-to-speech/docs/ssml).",
          "type": "string"
        }
      }
    },
    "VoiceSelectionParams": {
      "id": "VoiceSelectionParams",
      "description": "Description of which voice to use for a synthesis request.",
      "type": "object",
      "properties": {
        "languageCode": {
          "description": "Required. The language (and potentially also the region) of the voice expressed as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag, e.g. \"en-US\". This should not include a script tag (e.g. use \"cmn-cn\" rather than \"cmn-Hant-cn\"), because the script will be inferred from the input provided in the SynthesisInput. The TTS service will use this parameter to help choose an appropriate voice. Note that the TTS service may choose a voice with a slightly different language code than the one selected; it may substitute a different region (e.g. using en-US rather than en-CA if there isn't a Canadian voice available), or even a different language, e.g. using \"nb\" (Norwegian Bokmal) instead of \"no\" (Norwegian)\".",
          "type": "string"
        },
        "name": {
          "description": "The name of the voice. If both the name and the gender are not set, the service will choose a voice based on the other parameters such as language_code.",
          "type": "string"
        },
        "ssmlGender": {
          "description": "The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement; if a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request.",
          "type": "string",
          "enumDescriptions": [
            "An unspecified gender. In VoiceSelectionParams, this means that the client doesn't care which gender the selected voice will have. In the Voice field of ListVoicesResponse, this may mean that the voice doesn't fit any of the other categories in this enum, or that the gender of the voice isn't known.",
            "A male voice.",
            "A female voice.",
            "A gender-neutral voice. This voice is not yet supported."
          ],
          "enum": [
            "SSML_VOICE_GENDER_UNSPECIFIED",
            "MALE",
            "FEMALE",
            "NEUTRAL"
          ]
        },
        "customVoice": {
          "description": "The configuration for a custom voice. If [CustomVoiceParams.model] is set, the service will choose the custom voice matching the specified configuration.",
          "$ref": "CustomVoiceParams"
        }
      }
    },
    "CustomVoiceParams": {
      "id": "CustomVoiceParams",
      "description": "Description of the custom voice to be synthesized.",
      "type": "object",
      "properties": {
        "model": {
          "description": "Required. The name of the AutoML model that synthesizes the custom voice.",
          "type": "string"
        },
        "reportedUsage": {
          "description": "Optional. Deprecated. The usage of the synthesized audio to be reported.",
          "deprecated": true,
          "type": "string",
          "enumDescriptions": [
            "Request with reported usage unspecified will be rejected.",
            "For scenarios where the synthesized audio is not downloadable and can only be used once. For example, real-time request in IVR system.",
            "For scenarios where the synthesized audio is downloadable and can be reused. For example, the synthesized audio is downloaded, stored in customer service system and played repeatedly."
          ],
          "enum": [
            "REPORTED_USAGE_UNSPECIFIED",
            "REALTIME",
            "OFFLINE"
          ]
        }
      }
    },
    "AudioConfig": {
      "id": "AudioConfig",
      "description": "Description of audio data to be synthesized.",
      "type": "object",
      "properties": {
        "audioEncoding": {
          "description": "Required. The format of the audio byte stream.",
          "type": "string",
          "enumDescriptions": [
            "Not specified. Will return result google.rpc.Code.INVALID_ARGUMENT.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM). Audio content returned as LINEAR16 also contains a WAV header.",
            "MP3 audio at 32kbps.",
            "MP3 at 64kbps.",
            "Opus encoded audio wrapped in an ogg container. The result will be a file which can be played natively on Android, and in browsers (at least Chrome and Firefox). The quality of the encoding is considerably higher than MP3 while using approximately the same bitrate.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law. Audio content returned as MULAW also contains a WAV header.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/A-law. Audio content returned as ALAW also contains a WAV header."
          ],
          "enum": [
            "AUDIO_ENCODING_UNSPECIFIED",
            "LINEAR16",
            "MP3",
            "MP3_64_KBPS",
            "OGG_OPUS",
            "MULAW",
            "ALAW"
          ]
        },
        "speakingRate": {
          "description": "Optional. Input only. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values \u003c 0.25 or \u003e 4.0 will return an error.",
          "type": "number",
          "format": "double"
        },
        "pitch": {
          "description": "Optional. Input only. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.",
          "type": "number",
          "format": "double"
        },
        "volumeGainDb": {
          "description": "Optional. Input only. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. Strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.",
          "type": "number",
          "format": "double"
        },
        "sampleRateHertz": {
          "description": "Optional. The synthesis sample rate (in hertz) for this audio. When this is specified in SynthesizeSpeechRequest, if this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality), unless the specified sample rate is not supported for the encoding chosen, in which case it will fail the request and return google.rpc.Code.INVALID_ARGUMENT.",
          "type": "integer",
          "format": "int32"
        },
        "effectsProfileId": {
          "description": "Optional. Input only. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given. See [audio profiles](https://cloud.google.com/text-to-speech/docs/audio-profiles) for current supported profile ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SynthesizeSpeechResponse": {
      "id": "SynthesizeSpeechResponse",
      "description": "The message returned to the client by the `SynthesizeSpeech` method.",
      "type": "object",
      "properties": {
        "audioContent": {
          "description": "The audio data bytes encoded as specified in the request, including the header for encodings that are wrapped in containers (e.g. MP3, OGG_OPUS). For LINEAR16 audio, we include the WAV header. Note: as with all bytes fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
          "type": "string",
          "format": "byte"
        },
        "timepoints": {
          "description": "A link between a position in the original request input and a corresponding time in the output audio. It's only supported via `` of SSML input.",
          "type": "array",
          "items": {
            "$ref": "Timepoint"
          }
        },
        "audioConfig": {
          "description": "The audio metadata of `audio_content`.",
          "$ref": "AudioConfig"
        }
      }
    },
    "Timepoint": {
      "id": "Timepoint",
      "description": "This contains a mapping between a certain point in the input text and a corresponding time in the output audio.",
      "type": "object",
      "properties": {
        "markName": {
          "description": "Timepoint name as received from the client within `` tag.",
          "type": "string"
        },
        "timeSeconds": {
          "description": "Time offset in seconds from the start of the synthesized audio.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "SynthesizeLongAudioRequest": {
      "id": "SynthesizeLongAudioRequest",
      "description": "The top-level message sent by the client for the `SynthesizeLongAudio` method.",
      "type": "object",
      "properties": {
        "input": {
          "description": "Required. The Synthesizer requires either plain text or SSML as input. While Long Audio is in preview, SSML is temporarily unsupported.",
          "$ref": "SynthesisInput"
        },
        "audioConfig": {
          "description": "Required. The configuration of the synthesized audio.",
          "$ref": "AudioConfig"
        },
        "outputGcsUri": {
          "description": "Required. Specifies a Cloud Storage URI for the synthesis results. Must be specified in the format: `gs://bucket_name/object_name`, and the bucket must already exist.",
          "type": "string"
        },
        "voice": {
          "description": "Required. The desired voice of the synthesized audio.",
          "$ref": "VoiceSelectionParams"
        }
      }
    },
    "GoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata": {
      "id": "GoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata",
      "description": "Metadata for response returned by the `SynthesizeLongAudio` method.",
      "type": "object",
      "properties": {
        "startTime": {
          "description": "Time when the request was received.",
          "type": "string",
          "format": "google-datetime"
        },
        "lastUpdateTime": {
          "description": "Deprecated. Do not use.",
          "deprecated": true,
          "type": "string",
          "format": "google-datetime"
        },
        "progressPercentage": {
          "description": "The progress of the most recent processing update in percentage, ie. 70.0%.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "SynthesizeLongAudioMetadata": {
      "id": "SynthesizeLongAudioMetadata",
      "description": "Metadata for response returned by the `SynthesizeLongAudio` method.",
      "type": "object",
      "properties": {
        "startTime": {
          "description": "Time when the request was received.",
          "type": "string",
          "format": "google-datetime"
        },
        "lastUpdateTime": {
          "description": "Deprecated. Do not use.",
          "deprecated": true,
          "type": "string",
          "format": "google-datetime"
        },
        "progressPercentage": {
          "description": "The progress of the most recent processing update in percentage, ie. 70.0%.",
          "type": "number",
          "format": "double"
        }
      }
    }
  },
  "canonicalName": "Texttospeech",
  "ownerName": "Google",
  "protocol": "rest",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "synthesizeLongAudio": {
              "id": "texttospeech.projects.locations.synthesizeLongAudio",
              "path": "v1beta1/{+parent}:synthesizeLongAudio",
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}:synthesizeLongAudio",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "The resource states of the request in the form of `projects/*/locations/*`.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "SynthesizeLongAudioRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Synthesizes long form text asynchronously."
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "texttospeech.projects.locations.operations.list",
                  "path": "v1beta1/{+name}/operations",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`."
                },
                "get": {
                  "id": "texttospeech.projects.locations.operations.get",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                }
              }
            }
          }
        }
      }
    },
    "voices": {
      "methods": {
        "list": {
          "id": "texttospeech.voices.list",
          "path": "v1beta1/voices",
          "flatPath": "v1beta1/voices",
          "httpMethod": "GET",
          "parameters": {
            "languageCode": {
              "description": "Optional. Recommended. [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. If not specified, the API will return all supported voices. If specified, the ListVoices call will only return voices that can be used to synthesize this language_code. For example, if you specify `\"en-NZ\"`, all `\"en-NZ\"` voices will be returned. If you specify `\"no\"`, both `\"no-\\*\"` (Norwegian) and `\"nb-\\*\"` (Norwegian Bokmal) voices will be returned.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [],
          "response": {
            "$ref": "ListVoicesResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Returns a list of Voice supported for synthesis."
        }
      }
    },
    "text": {
      "methods": {
        "synthesize": {
          "id": "texttospeech.text.synthesize",
          "path": "v1beta1/text:synthesize",
          "flatPath": "v1beta1/text:synthesize",
          "httpMethod": "POST",
          "parameters": {},
          "parameterOrder": [],
          "request": {
            "$ref": "SynthesizeSpeechRequest"
          },
          "response": {
            "$ref": "SynthesizeSpeechResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Synthesizes speech synchronously: receive results after all text input has been processed."
        }
      }
    }
  },
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "id": "texttospeech:v1beta1",
  "servicePath": "",
  "basePath": "",
  "kind": "discovery#restDescription",
  "title": "Cloud Text-to-Speech API"
}

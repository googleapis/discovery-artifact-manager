{
  "ownerDomain": "google.com",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "resources": {
    "projects": {
      "resources": {
        "occurrences": {
          "methods": {
            "batchCreate": {
              "request": {
                "$ref": "BatchCreateOccurrencesRequest"
              },
              "response": {
                "$ref": "BatchCreateOccurrencesResponse"
              },
              "httpMethod": "POST",
              "description": "Creates new occurrences in batch.",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences:batchCreate",
              "id": "containeranalysis.projects.occurrences.batchCreate",
              "path": "v1beta1/{+parent}/occurrences:batchCreate",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "Required. The name of the project in the form of `projects/[PROJECT_ID]`, under which the occurrences are to be created.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true
                }
              }
            },
            "testIamPermissions": {
              "parameters": {
                "resource": {
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$",
                  "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "id": "containeranalysis.projects.occurrences.testIamPermissions",
              "path": "v1beta1/{+resource}:testIamPermissions",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}:testIamPermissions",
              "parameterOrder": [
                "resource"
              ],
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "description": "Returns the permissions that a caller has on the specified note or occurrence. Requires list permission on the project (for example, `containeranalysis.notes.list`). The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "request": {
                "$ref": "TestIamPermissionsRequest"
              }
            },
            "list": {
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of occurrences to return in the list. Must be positive. Max allowed page size is 1000. If not specified, page size defaults to 20.",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The filter expression."
                },
                "pageToken": {
                  "description": "Token to provide to skip to a particular spot in the list.",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "description": "Required. The name of the project to list occurrences for in the form of `projects/[PROJECT_ID]`.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/occurrences",
              "response": {
                "$ref": "ListOccurrencesResponse"
              },
              "id": "containeranalysis.projects.occurrences.list",
              "path": "v1beta1/{+parent}/occurrences",
              "description": "Lists occurrences for the specified project.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "get": {
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}",
              "description": "Gets the specified occurrence.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Occurrence"
              },
              "id": "containeranalysis.projects.occurrences.get",
              "parameters": {
                "name": {
                  "description": "Required. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.",
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "path": "v1beta1/{+name}"
            },
            "getNotes": {
              "path": "v1beta1/{+name}/notes",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "description": "Gets the note attached to the specified occurrence. Consumer projects can use this method to get a note that belongs to a provider project.",
              "id": "containeranalysis.projects.occurrences.getNotes",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`."
                }
              },
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}/notes",
              "response": {
                "$ref": "Note"
              }
            },
            "patch": {
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "description": "The fields to update.",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "description": "Required. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1beta1/{+name}",
              "request": {
                "$ref": "Occurrence"
              },
              "response": {
                "$ref": "Occurrence"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "containeranalysis.projects.occurrences.patch",
              "description": "Updates the specified occurrence.",
              "httpMethod": "PATCH",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}"
            },
            "setIamPolicy": {
              "id": "containeranalysis.projects.occurrences.setIamPolicy",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}:setIamPolicy",
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "description": "Sets the access control policy on the specified note or occurrence. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or an occurrence, respectively. The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "parameterOrder": [
                "resource"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Policy"
              },
              "parameters": {
                "resource": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$",
                  "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                }
              },
              "httpMethod": "POST",
              "path": "v1beta1/{+resource}:setIamPolicy"
            },
            "delete": {
              "httpMethod": "DELETE",
              "id": "containeranalysis.projects.occurrences.delete",
              "description": "Deletes the specified occurrence. For example, use this method to delete an occurrence when the occurrence is no longer applicable for the given resource.",
              "path": "v1beta1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$",
                  "type": "string",
                  "description": "Required. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`."
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}",
              "parameterOrder": [
                "name"
              ]
            },
            "create": {
              "flatPath": "v1beta1/projects/{projectsId}/occurrences",
              "description": "Creates a new occurrence.",
              "parameterOrder": [
                "parent"
              ],
              "id": "containeranalysis.projects.occurrences.create",
              "response": {
                "$ref": "Occurrence"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "Occurrence"
              },
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the project in the form of `projects/[PROJECT_ID]`, under which the occurrence is to be created.",
                  "location": "path"
                }
              },
              "path": "v1beta1/{+parent}/occurrences",
              "httpMethod": "POST"
            },
            "getIamPolicy": {
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}:getIamPolicy",
              "parameterOrder": [
                "resource"
              ],
              "path": "v1beta1/{+resource}:getIamPolicy",
              "request": {
                "$ref": "GetIamPolicyRequest"
              },
              "description": "Gets the access control policy for a note or an occurrence resource. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or occurrence, respectively. The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "id": "containeranalysis.projects.occurrences.getIamPolicy",
              "response": {
                "$ref": "Policy"
              },
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "getVulnerabilitySummary": {
              "path": "v1beta1/{+parent}/occurrences:vulnerabilitySummary",
              "description": "Gets a summary of the number and severity of occurrences.",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences:vulnerabilitySummary",
              "parameters": {
                "filter": {
                  "location": "query",
                  "description": "The filter expression.",
                  "type": "string"
                },
                "parent": {
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The name of the project to get a vulnerability summary for in the form of `projects/[PROJECT_ID]`.",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "VulnerabilityOccurrencesSummary"
              },
              "httpMethod": "GET",
              "id": "containeranalysis.projects.occurrences.getVulnerabilitySummary"
            }
          }
        },
        "notes": {
          "resources": {
            "occurrences": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListNoteOccurrencesResponse"
                  },
                  "description": "Lists occurrences referencing the specified note. Provider projects can use this method to get all occurrences across consumer projects referencing the specified note.",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the note to list occurrences for in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.",
                      "pattern": "^projects/[^/]+/notes/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of occurrences to return in the list."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Token to provide to skip to a particular spot in the list.",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The filter expression."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}/occurrences",
                  "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}/occurrences",
                  "id": "containeranalysis.projects.notes.occurrences.list"
                }
              }
            }
          },
          "methods": {
            "testIamPermissions": {
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}:testIamPermissions",
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "description": "Returns the permissions that a caller has on the specified note or occurrence. Requires list permission on the project (for example, `containeranalysis.notes.list`). The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "path": "v1beta1/{+resource}:testIamPermissions",
              "parameters": {
                "resource": {
                  "pattern": "^projects/[^/]+/notes/[^/]+$",
                  "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "id": "containeranalysis.projects.notes.testIamPermissions"
            },
            "setIamPolicy": {
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Sets the access control policy on the specified note or occurrence. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or an occurrence, respectively. The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}:setIamPolicy",
              "response": {
                "$ref": "Policy"
              },
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/notes/[^/]+$",
                  "type": "string"
                }
              },
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "path": "v1beta1/{+resource}:setIamPolicy",
              "id": "containeranalysis.projects.notes.setIamPolicy"
            },
            "patch": {
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}",
              "id": "containeranalysis.projects.notes.patch",
              "description": "Updates the specified note.",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "Required. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/notes/[^/]+$"
                },
                "updateMask": {
                  "location": "query",
                  "type": "string",
                  "description": "The fields to update.",
                  "format": "google-fieldmask"
                }
              },
              "path": "v1beta1/{+name}",
              "request": {
                "$ref": "Note"
              },
              "httpMethod": "PATCH",
              "response": {
                "$ref": "Note"
              }
            },
            "create": {
              "httpMethod": "POST",
              "request": {
                "$ref": "Note"
              },
              "response": {
                "$ref": "Note"
              },
              "flatPath": "v1beta1/projects/{projectsId}/notes",
              "path": "v1beta1/{+parent}/notes",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "noteId": {
                  "description": "Required. The ID to use for this note.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The name of the project in the form of `projects/[PROJECT_ID]`, under which the note is to be created.",
                  "location": "path"
                }
              },
              "id": "containeranalysis.projects.notes.create",
              "description": "Creates a new note."
            },
            "getIamPolicy": {
              "response": {
                "$ref": "Policy"
              },
              "description": "Gets the access control policy for a note or an occurrence resource. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or occurrence, respectively. The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "request": {
                "$ref": "GetIamPolicyRequest"
              },
              "id": "containeranalysis.projects.notes.getIamPolicy",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "resource"
              ],
              "path": "v1beta1/{+resource}:getIamPolicy",
              "httpMethod": "POST",
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}:getIamPolicy",
              "parameters": {
                "resource": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "pattern": "^projects/[^/]+/notes/[^/]+$"
                }
              }
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "DELETE",
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}",
              "path": "v1beta1/{+name}",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.",
                  "pattern": "^projects/[^/]+/notes/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "name"
              ],
              "id": "containeranalysis.projects.notes.delete",
              "description": "Deletes the specified note."
            },
            "get": {
              "id": "containeranalysis.projects.notes.get",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/notes/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Note"
              },
              "httpMethod": "GET",
              "description": "Gets the specified note.",
              "path": "v1beta1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}"
            },
            "list": {
              "path": "v1beta1/{+parent}/notes",
              "description": "Lists notes for the specified project.",
              "id": "containeranalysis.projects.notes.list",
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the project to list notes for in the form of `projects/[PROJECT_ID]`.",
                  "pattern": "^projects/[^/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Number of notes to return in the list. Must be positive. Max allowed page size is 1000. If not specified, page size defaults to 20.",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The filter expression."
                },
                "pageToken": {
                  "location": "query",
                  "description": "Token to provide to skip to a particular spot in the list.",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "ListNotesResponse"
              },
              "flatPath": "v1beta1/projects/{projectsId}/notes"
            },
            "batchCreate": {
              "description": "Creates new notes in batch.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "BatchCreateNotesResponse"
              },
              "path": "v1beta1/{+parent}/notes:batchCreate",
              "id": "containeranalysis.projects.notes.batchCreate",
              "flatPath": "v1beta1/projects/{projectsId}/notes:batchCreate",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The name of the project in the form of `projects/[PROJECT_ID]`, under which the notes are to be created."
                }
              },
              "request": {
                "$ref": "BatchCreateNotesRequest"
              }
            }
          }
        }
      }
    }
  },
  "version_module": true,
  "basePath": "",
  "servicePath": "",
  "description": "An implementation of the Grafeas API, which stores, and enables querying and retrieval of critical metadata about all of your software artifacts.",
  "title": "Container Analysis API",
  "schemas": {
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts": {
      "properties": {
        "mavenArtifacts": {
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact"
          },
          "description": "A list of Maven artifacts to be uploaded to Artifact Registry upon successful completion of all build steps. Artifacts in the workspace matching specified paths globs will be uploaded to the specified Artifact Registry repository using the builder service account's credentials. If any artifacts fail to be pushed, the build is marked FAILURE.",
          "type": "array"
        },
        "pythonPackages": {
          "description": "A list of Python packages to be uploaded to Artifact Registry upon successful completion of all build steps. The build service account credentials will be used to perform the upload. If any objects fail to be pushed, the build is marked FAILURE.",
          "type": "array",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage"
          }
        },
        "objects": {
          "description": "A list of objects to be uploaded to Cloud Storage upon successful completion of all build steps. Files in the workspace matching specified paths globs will be uploaded to the specified Cloud Storage location using the builder service account's credentials. The location and generation of the uploaded objects will be stored in the Build resource's results field. If any objects fail to be pushed, the build is marked FAILURE.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects"
        },
        "images": {
          "type": "array",
          "description": "A list of images to be pushed upon the successful completion of all build steps. The images will be pushed using the builder service account's credentials. The digests of the pushed images will be stored in the Build resource's results field. If any of the images fail to be pushed, the build is marked FAILURE.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Artifacts produced by a build that should be uploaded upon successful completion of all build steps.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts",
      "type": "object"
    },
    "Layer": {
      "type": "object",
      "properties": {
        "arguments": {
          "description": "The recovered arguments to the Dockerfile directive.",
          "type": "string"
        },
        "directive": {
          "type": "string",
          "enumDescriptions": [
            "Default value for unsupported/missing directive.",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/"
          ],
          "enum": [
            "DIRECTIVE_UNSPECIFIED",
            "MAINTAINER",
            "RUN",
            "CMD",
            "LABEL",
            "EXPOSE",
            "ENV",
            "ADD",
            "COPY",
            "ENTRYPOINT",
            "VOLUME",
            "USER",
            "WORKDIR",
            "ARG",
            "ONBUILD",
            "STOPSIGNAL",
            "HEALTHCHECK",
            "SHELL"
          ],
          "description": "Required. The recovered Dockerfile directive used to construct this layer."
        }
      },
      "id": "Layer",
      "description": "Layer holds metadata specific to a layer of a Docker image."
    },
    "ListOccurrencesResponse": {
      "properties": {
        "occurrences": {
          "items": {
            "$ref": "Occurrence"
          },
          "type": "array",
          "description": "The occurrences requested."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The next pagination token in the list response. It should be used as `page_token` for the following request. An empty value means no more results."
        }
      },
      "description": "Response for listing occurrences.",
      "id": "ListOccurrencesResponse",
      "type": "object"
    },
    "Command": {
      "type": "object",
      "id": "Command",
      "description": "Command describes a step performed as part of the build pipeline.",
      "properties": {
        "id": {
          "description": "Optional unique identifier for this command, used in wait_for to reference this command as a dependency.",
          "type": "string"
        },
        "waitFor": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The ID(s) of the command(s) that this command depends on."
        },
        "env": {
          "type": "array",
          "description": "Environment variables set before running this command.",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Required. Name of the command, as presented on the command line, or if the command is packaged as a Docker container, as presented to `docker pull`.",
          "type": "string"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Command-line arguments used when executing this command."
        },
        "dir": {
          "type": "string",
          "description": "Working directory (relative to project source root) used when running this command."
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1SourceProvenance": {
      "type": "object",
      "properties": {
        "resolvedRepoSource": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource",
          "description": "A copy of the build's `source.repo_source`, if exists, with any revisions resolved."
        },
        "resolvedStorageSourceManifest": {
          "description": "A copy of the build's `source.storage_source_manifest`, if exists, with any revisions resolved. This feature is in Preview.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest"
        },
        "fileHashes": {
          "additionalProperties": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes"
          },
          "description": "Output only. Hash(es) of the build source, which can be used to verify that the original source integrity was maintained in the build. Note that `FileHashes` will only be populated if `BuildOptions` has requested a `SourceProvenanceHash`. The keys to this map are file paths used as build source and the values contain the hash values for those files. If the build source came in a single package such as a gzipped tarfile (`.tar.gz`), the `FileHash` will be for the single path to that file.",
          "readOnly": true,
          "type": "object"
        },
        "resolvedStorageSource": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource",
          "description": "A copy of the build's `source.storage_source`, if exists, with any generations resolved."
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1SourceProvenance",
      "description": "Provenance of the source. Ways to find the original source, or verify that some source was used for this build."
    },
    "GerritSourceContext": {
      "properties": {
        "aliasContext": {
          "$ref": "AliasContext",
          "description": "An alias, which may be a branch or tag."
        },
        "gerritProject": {
          "type": "string",
          "description": "The full project name within the host. Projects may be nested, so \"project/subproject\" is a valid project name. The \"repo name\" is the hostURI/project."
        },
        "hostUri": {
          "description": "The URI of a running Gerrit instance.",
          "type": "string"
        },
        "revisionId": {
          "type": "string",
          "description": "A revision (commit) ID."
        }
      },
      "id": "GerritSourceContext",
      "type": "object",
      "description": "A SourceContext referring to a Gerrit project."
    },
    "DocumentNote": {
      "id": "DocumentNote",
      "properties": {
        "spdxVersion": {
          "description": "Provide a reference number that can be used to understand how to parse and interpret the rest of the file",
          "type": "string"
        },
        "dataLicence": {
          "type": "string",
          "description": "Compliance with the SPDX specification includes populating the SPDX fields therein with data related to such fields (\"SPDX-Metadata\")"
        }
      },
      "description": "DocumentNote represents an SPDX Document Creation Information section: https://spdx.github.io/spdx-spec/v2.3/document-creation-information/",
      "type": "object"
    },
    "Vulnerability": {
      "id": "Vulnerability",
      "description": "Vulnerability provides metadata about a security vulnerability in a Note.",
      "type": "object",
      "properties": {
        "sourceUpdateTime": {
          "type": "string",
          "description": "The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.",
          "format": "google-datetime"
        },
        "windowsDetails": {
          "type": "array",
          "description": "Windows details get their own format because the information format and model don't match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version.",
          "items": {
            "$ref": "WindowsDetail"
          }
        },
        "cvssV3": {
          "description": "The full description of the CVSS for version 3.",
          "$ref": "CVSSv3"
        },
        "details": {
          "items": {
            "$ref": "Detail"
          },
          "type": "array",
          "description": "All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in."
        },
        "cwe": {
          "description": "A list of CWE for this vulnerability. For details, see: https://cwe.mitre.org/index.html",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "cvssV2": {
          "$ref": "CVSS",
          "description": "The full description of the CVSS for version 2."
        },
        "cvssVersion": {
          "enum": [
            "CVSS_VERSION_UNSPECIFIED",
            "CVSS_VERSION_2",
            "CVSS_VERSION_3"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "CVSS version used to populate cvss_score and severity."
        },
        "severity": {
          "type": "string",
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ],
          "description": "Note provider assigned impact of the vulnerability.",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ]
        },
        "cvssScore": {
          "format": "float",
          "type": "number",
          "description": "The CVSS score for this vulnerability."
        }
      }
    },
    "Binding": {
      "properties": {
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "members": {
          "items": {
            "type": "string"
          },
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "type": "array"
        }
      },
      "id": "Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object"
    },
    "Envelope": {
      "type": "object",
      "properties": {
        "payload": {
          "format": "byte",
          "type": "string"
        },
        "payloadType": {
          "type": "string"
        },
        "signatures": {
          "items": {
            "$ref": "EnvelopeSignature"
          },
          "type": "array"
        }
      },
      "id": "Envelope",
      "description": "MUST match https://github.com/secure-systems-lab/dsse/blob/master/envelope.proto. An authenticated message of arbitrary type."
    },
    "AnalysisCompleted": {
      "properties": {
        "analysisType": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Indicates which analysis completed successfully. Multiple types of analysis can be performed on a single resource.",
      "type": "object",
      "id": "AnalysisCompleted"
    },
    "VexAssessment": {
      "id": "VexAssessment",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "AFFECTED",
            "NOT_AFFECTED",
            "FIXED",
            "UNDER_INVESTIGATION"
          ],
          "type": "string",
          "description": "Provides the state of this Vulnerability assessment.",
          "enumDescriptions": [
            "No state is specified.",
            "This product is known to be affected by this vulnerability.",
            "This product is known to be not affected by this vulnerability.",
            "This product contains a fix for this vulnerability.",
            "It is not known yet whether these versions are or are not affected by the vulnerability. However, it is still under investigation."
          ]
        },
        "noteName": {
          "description": "The VulnerabilityAssessment note from which this VexAssessment was generated. This will be of the form: `projects/[PROJECT_ID]/notes/[NOTE_ID]`.",
          "type": "string"
        },
        "justification": {
          "description": "Justification provides the justification when the state of the assessment if NOT_AFFECTED.",
          "$ref": "Justification"
        },
        "relatedUris": {
          "type": "array",
          "description": "Holds a list of references associated with this vulnerability item and assessment.",
          "items": {
            "$ref": "RelatedUrl"
          }
        },
        "remediations": {
          "description": "Specifies details on how to handle (and presumably, fix) a vulnerability.",
          "items": {
            "$ref": "Remediation"
          },
          "type": "array"
        },
        "impacts": {
          "type": "array",
          "description": "Contains information about the impact of this vulnerability, this will change with time.",
          "items": {
            "type": "string"
          }
        },
        "cve": {
          "type": "string",
          "description": "Holds the MITRE standard Common Vulnerabilities and Exposures (CVE) tracking number for the vulnerability."
        }
      },
      "type": "object",
      "description": "VexAssessment provides all publisher provided Vex information that is related to this vulnerability."
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource": {
      "type": "object",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource",
      "description": "Location of the source in a Google Cloud Source Repository.",
      "properties": {
        "invertRegex": {
          "type": "boolean",
          "description": "Only trigger a build if the revision regex does NOT match the revision regex."
        },
        "commitSha": {
          "type": "string",
          "description": "Explicit commit SHA to build."
        },
        "repoName": {
          "description": "Name of the Cloud Source Repository.",
          "type": "string"
        },
        "substitutions": {
          "type": "object",
          "description": "Substitutions to use in a triggered build. Should only be used with RunBuildTrigger",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dir": {
          "type": "string",
          "description": "Directory, relative to the source root, in which to run the build. This must be a relative path. If a step's `dir` is specified and is an absolute path, this value is ignored for that step's execution."
        },
        "tagName": {
          "description": "Regex matching tags to build. The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax",
          "type": "string"
        },
        "branchName": {
          "type": "string",
          "description": "Regex matching branches to build. The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax"
        },
        "projectId": {
          "description": "ID of the project that owns the Cloud Source Repository. If omitted, the project ID requesting the build is assumed.",
          "type": "string"
        }
      }
    },
    "GrafeasV1beta1IntotoDetails": {
      "properties": {
        "signatures": {
          "items": {
            "$ref": "GrafeasV1beta1IntotoSignature"
          },
          "type": "array"
        },
        "signed": {
          "$ref": "Link"
        }
      },
      "id": "GrafeasV1beta1IntotoDetails",
      "type": "object",
      "description": "This corresponds to a signed in-toto link - it is made up of one or more signatures and the in-toto link itself. This is used for occurrences of a Grafeas in-toto note."
    },
    "Hint": {
      "type": "object",
      "properties": {
        "humanReadableName": {
          "description": "Required. The human readable name of this attestation authority, for example \"qa\".",
          "type": "string"
        }
      },
      "id": "Hint",
      "description": "This submessage provides human-readable hints about the purpose of the authority. Because the name of a note acts as its resource reference, it is important to disambiguate the canonical name of the Note (which might be a UUID for security purposes) from \"readable\" names more suitable for debug output. Note that these hints should not be used to look up authorities in security sensitive contexts, such as when looking up attestations to verify."
    },
    "TestIamPermissionsResponse": {
      "type": "object",
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
        }
      },
      "description": "Response message for `TestIamPermissions` method."
    },
    "Build": {
      "description": "Note holding the version of the provider's builder and the signature of the provenance message in the build details occurrence.",
      "id": "Build",
      "properties": {
        "signature": {
          "$ref": "BuildSignature",
          "description": "Signature of the build in occurrences pointing to this build note containing build details."
        },
        "builderVersion": {
          "type": "string",
          "description": "Required. Immutable. Version of the builder which produced this build."
        }
      },
      "type": "object"
    },
    "ListNoteOccurrencesResponse": {
      "type": "object",
      "properties": {
        "occurrences": {
          "items": {
            "$ref": "Occurrence"
          },
          "description": "The occurrences attached to the specified note.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to provide to skip to a particular spot in the list.",
          "type": "string"
        }
      },
      "description": "Response for listing occurrences for a note.",
      "id": "ListNoteOccurrencesResponse"
    },
    "Assessment": {
      "properties": {
        "remediations": {
          "items": {
            "$ref": "Remediation"
          },
          "type": "array",
          "description": "Specifies details on how to handle (and presumably, fix) a vulnerability."
        },
        "impacts": {
          "items": {
            "type": "string"
          },
          "description": "Contains information about the impact of this vulnerability, this will change with time.",
          "type": "array"
        },
        "longDescription": {
          "description": "A detailed description of this Vex.",
          "type": "string"
        },
        "state": {
          "description": "Provides the state of this Vulnerability assessment.",
          "enumDescriptions": [
            "No state is specified.",
            "This product is known to be affected by this vulnerability.",
            "This product is known to be not affected by this vulnerability.",
            "This product contains a fix for this vulnerability.",
            "It is not known yet whether these versions are or are not affected by the vulnerability. However, it is still under investigation."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "AFFECTED",
            "NOT_AFFECTED",
            "FIXED",
            "UNDER_INVESTIGATION"
          ]
        },
        "relatedUris": {
          "type": "array",
          "description": "Holds a list of references associated with this vulnerability item and assessment. These uris have additional information about the vulnerability and the assessment itself. E.g. Link to a document which details how this assessment concluded the state of this vulnerability.",
          "items": {
            "$ref": "RelatedUrl"
          }
        },
        "cve": {
          "type": "string",
          "description": "Holds the MITRE standard Common Vulnerabilities and Exposures (CVE) tracking number for the vulnerability."
        },
        "shortDescription": {
          "type": "string",
          "description": "A one sentence description of this Vex."
        },
        "justification": {
          "description": "Justification provides the justification when the state of the assessment if NOT_AFFECTED.",
          "$ref": "Justification"
        }
      },
      "id": "Assessment",
      "type": "object",
      "description": "Assessment provides all information that is related to a single vulnerability for this product."
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage": {
      "type": "object",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage",
      "description": "Python package to upload to Artifact Registry upon successful completion of all build steps. A package can encapsulate multiple objects to be uploaded to a single repository.",
      "properties": {
        "paths": {
          "description": "Path globs used to match files in the build's workspace. For Python/ Twine, this is usually `dist/*`, and sometimes additionally an `.asc` file.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "repository": {
          "description": "Artifact Registry repository, in the form \"https://$REGION-python.pkg.dev/$PROJECT/$REPOSITORY\" Files in the workspace matching any path pattern will be uploaded to Artifact Registry with this location as a prefix.",
          "type": "string"
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Source": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Source",
      "type": "object",
      "properties": {
        "storageSourceManifest": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest",
          "description": "If provided, get the source from this manifest in Google Cloud Storage. This feature is in Preview; see description [here](https://github.com/GoogleCloudPlatform/cloud-builders/tree/master/gcs-fetcher)."
        },
        "repoSource": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource",
          "description": "If provided, get the source from this location in a Cloud Source Repository."
        },
        "storageSource": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource",
          "description": "If provided, get the source from this location in Google Cloud Storage."
        }
      },
      "description": "Location of the source in a supported storage service."
    },
    "Signature": {
      "id": "Signature",
      "description": "Verifiers (e.g. Kritis implementations) MUST verify signatures with respect to the trust anchors defined in policy (e.g. a Kritis policy). Typically this means that the verifier has been configured with a map from `public_key_id` to public key material (and any required parameters, e.g. signing algorithm). In particular, verification implementations MUST NOT treat the signature `public_key_id` as anything more than a key lookup hint. The `public_key_id` DOES NOT validate or authenticate a public key; it only provides a mechanism for quickly selecting a public key ALREADY CONFIGURED on the verifier through a trusted channel. Verification implementations MUST reject signatures in any of the following circumstances: * The `public_key_id` is not recognized by the verifier. * The public key that `public_key_id` refers to does not verify the signature with respect to the payload. The `signature` contents SHOULD NOT be \"attached\" (where the payload is included with the serialized `signature` bytes). Verifiers MUST ignore any \"attached\" payload and only verify signatures with respect to explicitly provided payload (e.g. a `payload` field on the proto message that holds this Signature, or the canonical serialization of the proto message that holds this signature).",
      "type": "object",
      "properties": {
        "publicKeyId": {
          "type": "string",
          "description": "The identifier for the public key that verifies this signature. * The `public_key_id` is required. * The `public_key_id` SHOULD be an RFC3986 conformant URI. * When possible, the `public_key_id` SHOULD be an immutable reference, such as a cryptographic digest. Examples of valid `public_key_id`s: OpenPGP V4 public key fingerprint: * \"openpgp4fpr:74FAF3B861BDA0870C7B6DEF607E48D2A663AEEA\" See https://www.iana.org/assignments/uri-schemes/prov/openpgp4fpr for more details on this scheme. RFC6920 digest-named SubjectPublicKeyInfo (digest of the DER serialization): * \"ni:///sha-256;cD9o9Cq6LG3jD0iKXqEi_vdjJGecm_iXkbqVoScViaU\" * \"nih:///sha-256;703f68f42aba2c6de30f488a5ea122fef76324679c9bf89791ba95a1271589a5\""
        },
        "signature": {
          "type": "string",
          "description": "The content of the signature, an opaque bytestring. The payload that this signature verifies MUST be unambiguously provided with the Signature during verification. A wrapper message might provide the payload explicitly. Alternatively, a message might have a canonical serialization that can always be unambiguously computed to derive the payload.",
          "format": "byte"
        }
      }
    },
    "GrafeasV1beta1PackageDetails": {
      "properties": {
        "installation": {
          "description": "Required. Where the package was installed.",
          "$ref": "Installation"
        }
      },
      "id": "GrafeasV1beta1PackageDetails",
      "description": "Details of a package occurrence.",
      "type": "object"
    },
    "Hash": {
      "properties": {
        "value": {
          "description": "Required. The hash value.",
          "type": "string",
          "format": "byte"
        },
        "type": {
          "type": "string",
          "description": "Required. The type of hash that was performed.",
          "enumDescriptions": [
            "Unknown.",
            "A SHA-256 hash."
          ],
          "enum": [
            "HASH_TYPE_UNSPECIFIED",
            "SHA256"
          ]
        }
      },
      "type": "object",
      "id": "Hash",
      "description": "Container message for hash values."
    },
    "Environment": {
      "description": "Defines an object for the environment field in in-toto links. The suggested fields are \"variables\", \"filesystem\", and \"workdir\".",
      "id": "Environment",
      "type": "object",
      "properties": {
        "customValues": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      }
    },
    "Package": {
      "type": "object",
      "properties": {
        "version": {
          "description": "The version of the package.",
          "$ref": "Version"
        },
        "distribution": {
          "items": {
            "$ref": "Distribution"
          },
          "description": "The various channels by which a package is distributed.",
          "type": "array"
        },
        "description": {
          "type": "string",
          "description": "The description of this package."
        },
        "digest": {
          "type": "array",
          "description": "Hash value, typically a file digest, that allows unique identification a specific package.",
          "items": {
            "$ref": "Digest"
          }
        },
        "maintainer": {
          "type": "string",
          "description": "A freeform text denoting the maintainer of this package."
        },
        "architecture": {
          "enumDescriptions": [
            "Unknown architecture.",
            "X86 architecture.",
            "X64 architecture."
          ],
          "type": "string",
          "description": "The CPU architecture for which packages in this distribution channel were built. Architecture will be blank for language packages.",
          "enum": [
            "ARCHITECTURE_UNSPECIFIED",
            "X86",
            "X64"
          ]
        },
        "url": {
          "type": "string",
          "description": "The homepage for this package."
        },
        "cpeUri": {
          "type": "string",
          "description": "The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package. The cpe_uri will be blank for language packages."
        },
        "license": {
          "description": "Licenses that have been declared by the authors of the package.",
          "$ref": "License"
        },
        "name": {
          "type": "string",
          "description": "Required. Immutable. The name of the package."
        },
        "packageType": {
          "type": "string",
          "description": "The type of package; whether native or non native (e.g., ruby gems, node.js packages, etc.)."
        }
      },
      "id": "Package",
      "description": "Package represents a particular package version."
    },
    "ArtifactRule": {
      "description": "Defines an object to declare an in-toto artifact rule",
      "type": "object",
      "id": "ArtifactRule",
      "properties": {
        "artifactRule": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes",
      "description": "Container message for hashes of byte content of files, used in SourceProvenance messages to verify integrity of source input to the build.",
      "properties": {
        "fileHash": {
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Hash"
          },
          "type": "array",
          "description": "Collection of file hashes."
        }
      },
      "type": "object"
    },
    "GrafeasV1beta1BuildDetails": {
      "id": "GrafeasV1beta1BuildDetails",
      "type": "object",
      "properties": {
        "provenanceBytes": {
          "type": "string",
          "description": "Serialized JSON representation of the provenance, used in generating the build signature in the corresponding build note. After verifying the signature, `provenance_bytes` can be unmarshalled and compared to the provenance to confirm that it is unchanged. A base64-encoded string representation of the provenance bytes is used for the signature in order to interoperate with openssl which expects this format for signature verification. The serialized form is captured both to avoid ambiguity in how the provenance is marshalled to json as well to prevent incompatibilities with future changes."
        },
        "provenance": {
          "description": "Required. The actual provenance for the build.",
          "$ref": "BuildProvenance"
        }
      },
      "description": "Details of a build occurrence."
    },
    "GrafeasV1beta1IntotoArtifact": {
      "type": "object",
      "properties": {
        "hashes": {
          "$ref": "ArtifactHashes"
        },
        "resourceUri": {
          "type": "string"
        }
      },
      "id": "GrafeasV1beta1IntotoArtifact"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The `WorkerPool` resource to execute the build on. You must have `cloudbuild.workerpools.use` on the project hosting the WorkerPool. Format projects/{project}/locations/{location}/workerPools/{workerPoolId}"
        }
      },
      "type": "object",
      "description": "Details about how a build should be executed on a `WorkerPool`. See [running builds in a private pool](https://cloud.google.com/build/docs/private-pools/run-builds-in-private-pool) for more information.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption"
    },
    "GetIamPolicyRequest": {
      "properties": {
        "options": {
          "$ref": "GetPolicyOptions",
          "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
        }
      },
      "description": "Request message for `GetIamPolicy` method.",
      "type": "object",
      "id": "GetIamPolicyRequest"
    },
    "ArtifactHashes": {
      "id": "ArtifactHashes",
      "properties": {
        "sha256": {
          "type": "string"
        }
      },
      "description": "Defines a hash object for use in Materials and Products.",
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildFailureInfo": {
      "description": "A fatal problem encountered during the execution of the build.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The name of the failure.",
          "enumDescriptions": [
            "Type unspecified",
            "Unable to push the image to the repository.",
            "Final image not found.",
            "Unauthorized push of the final image.",
            "Backend logging failures. Should retry.",
            "A build step has failed.",
            "The source fetching has failed."
          ],
          "enum": [
            "FAILURE_TYPE_UNSPECIFIED",
            "PUSH_FAILED",
            "PUSH_IMAGE_NOT_FOUND",
            "PUSH_NOT_AUTHORIZED",
            "LOGGING_FAILURE",
            "USER_BUILD_STEP",
            "FETCH_SOURCE_FAILED"
          ],
          "type": "string"
        },
        "detail": {
          "description": "Explains the failure issue in more detail using hard-coded text.",
          "type": "string"
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildFailureInfo"
    },
    "Volume": {
      "id": "Volume",
      "type": "object",
      "description": "Volume describes a Docker container volume which is mounted into build steps in order to persist files across build step execution. Next ID: 3",
      "properties": {
        "name": {
          "description": "Name of the volume to mount. Volume names must be unique per build step and must be valid names for Docker volumes. Each named volume must be used by at least two build steps.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "Path at which to mount the volume. Paths must be absolute and cannot conflict with other volume paths on the same build step or with certain reserved volume paths."
        }
      }
    },
    "Digest": {
      "id": "Digest",
      "type": "object",
      "description": "Digest information.",
      "properties": {
        "digestBytes": {
          "type": "string",
          "format": "byte",
          "description": "Value of the digest."
        },
        "algo": {
          "type": "string",
          "description": "`SHA1`, `SHA512` etc."
        }
      }
    },
    "Deployment": {
      "id": "Deployment",
      "type": "object",
      "properties": {
        "undeployTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "End of the lifetime of this deployment."
        },
        "userEmail": {
          "type": "string",
          "description": "Identity of the user that triggered this deployment."
        },
        "config": {
          "type": "string",
          "description": "Configuration used to create this deployment."
        },
        "platform": {
          "type": "string",
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "GKE",
            "FLEX",
            "CUSTOM"
          ],
          "enumDescriptions": [
            "Unknown.",
            "Google Container Engine.",
            "Google App Engine: Flexible Environment.",
            "Custom user-defined platform."
          ],
          "description": "Platform hosting this deployment."
        },
        "resourceUri": {
          "items": {
            "type": "string"
          },
          "description": "Output only. Resource URI for the artifact being deployed taken from the deployable field with the same name.",
          "type": "array"
        },
        "deployTime": {
          "description": "Required. Beginning of the lifetime of this deployment.",
          "format": "google-datetime",
          "type": "string"
        },
        "address": {
          "type": "string",
          "description": "Address of the runtime element hosting this deployment."
        }
      },
      "description": "The period during which some deployable was active in a runtime."
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions": {
      "type": "object",
      "description": "Optional arguments to enable specific features of builds.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions",
      "properties": {
        "logging": {
          "description": "Option to specify the logging mode, which determines if and where build logs are stored.",
          "enum": [
            "LOGGING_UNSPECIFIED",
            "LEGACY",
            "GCS_ONLY",
            "STACKDRIVER_ONLY",
            "CLOUD_LOGGING_ONLY",
            "NONE"
          ],
          "type": "string",
          "enumDescriptions": [
            "The service determines the logging mode. The default is `LEGACY`. Do not rely on the default logging behavior as it may change in the future.",
            "Build logs are stored in Cloud Logging and Cloud Storage.",
            "Build logs are stored in Cloud Storage.",
            "This option is the same as CLOUD_LOGGING_ONLY.",
            "Build logs are stored in Cloud Logging. Selecting this option will not allow [logs streaming](https://cloud.google.com/sdk/gcloud/reference/builds/log).",
            "Turn off all logging. No build logs will be captured."
          ]
        },
        "machineType": {
          "enum": [
            "UNSPECIFIED",
            "N1_HIGHCPU_8",
            "N1_HIGHCPU_32",
            "E2_HIGHCPU_8",
            "E2_HIGHCPU_32"
          ],
          "enumDescriptions": [
            "Standard machine type.",
            "Highcpu machine with 8 CPUs.",
            "Highcpu machine with 32 CPUs.",
            "Highcpu e2 machine with 8 CPUs.",
            "Highcpu e2 machine with 32 CPUs."
          ],
          "type": "string",
          "description": "Compute Engine machine type on which to run the build."
        },
        "sourceProvenanceHash": {
          "items": {
            "enumDescriptions": [
              "No hash requested.",
              "Use a sha256 hash.",
              "Use a md5 hash."
            ],
            "type": "string",
            "enum": [
              "NONE",
              "SHA256",
              "MD5"
            ]
          },
          "description": "Requested hash for SourceProvenance.",
          "type": "array"
        },
        "diskSizeGb": {
          "description": "Requested disk size for the VM that runs the build. Note that this is *NOT* \"disk free\"; some of the space will be used by the operating system and build utilities. Also note that this is the minimum disk size that will be allocated for the build -- the build may run with a larger disk than requested. At present, the maximum disk size is 2000GB; builds that request more than the maximum are rejected with an error.",
          "format": "int64",
          "type": "string"
        },
        "logStreamingOption": {
          "enumDescriptions": [
            "Service may automatically determine build log streaming behavior.",
            "Build logs should be streamed to Google Cloud Storage.",
            "Build logs should not be streamed to Google Cloud Storage; they will be written when the build is completed."
          ],
          "description": "Option to define build log streaming behavior to Google Cloud Storage.",
          "type": "string",
          "enum": [
            "STREAM_DEFAULT",
            "STREAM_ON",
            "STREAM_OFF"
          ]
        },
        "secretEnv": {
          "description": "A list of global environment variables, which are encrypted using a Cloud Key Management Service crypto key. These values must be specified in the build's `Secret`. These variables will be available to all build steps in this build.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "pool": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption",
          "description": "Optional. Specification for execution on a `WorkerPool`. See [running builds in a private pool](https://cloud.google.com/build/docs/private-pools/run-builds-in-private-pool) for more information."
        },
        "env": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of global environment variable definitions that will exist for all build steps in this build. If a variable is defined in both globally and in a build step, the variable will use the build step value. The elements are of the form \"KEY=VALUE\" for the environment variable \"KEY\" being given the value \"VALUE\"."
        },
        "volumes": {
          "description": "Global list of volumes to mount for ALL build steps Each volume is created as an empty volume prior to starting the build process. Upon completion of the build, volumes and their contents are discarded. Global volume names and paths cannot conflict with the volumes defined a build step. Using a global volume in a build with only one step is not valid as it is indicative of a build request with an incorrect configuration.",
          "type": "array",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Volume"
          }
        },
        "workerPool": {
          "description": "This field deprecated; please use `pool.name` instead.",
          "type": "string"
        },
        "requestedVerifyOption": {
          "enum": [
            "NOT_VERIFIED",
            "VERIFIED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not a verifiable build (the default).",
            "Build must be verified."
          ],
          "description": "Requested verifiability options."
        },
        "substitutionOption": {
          "description": "Option to specify behavior when there is an error in the substitution checks. NOTE: this is always set to ALLOW_LOOSE for triggered builds and cannot be overridden in the build configuration file.",
          "enumDescriptions": [
            "Fails the build if error in substitutions checks, like missing a substitution in the template or in the map.",
            "Do not fail the build if error in substitutions checks."
          ],
          "type": "string",
          "enum": [
            "MUST_MATCH",
            "ALLOW_LOOSE"
          ]
        },
        "dynamicSubstitutions": {
          "type": "boolean",
          "description": "Option to specify whether or not to apply bash style string operations to the substitutions. NOTE: this is always enabled for triggered builds and cannot be overridden in the build configuration file."
        }
      }
    },
    "BuildSignature": {
      "properties": {
        "publicKey": {
          "description": "Public key of the builder which can be used to verify that the related findings are valid and unchanged. If `key_type` is empty, this defaults to PEM encoded public keys. This field may be empty if `key_id` references an external key. For Cloud Build based signatures, this is a PEM encoded public key. To verify the Cloud Build signature, place the contents of this field into a file (public.pem). The signature field is base64-decoded into its binary representation in signature.bin, and the provenance bytes from `BuildDetails` are base64-decoded into a binary representation in signed.bin. OpenSSL can then verify the signature: `openssl sha256 -verify public.pem -signature signature.bin signed.bin`",
          "type": "string"
        },
        "keyType": {
          "enum": [
            "KEY_TYPE_UNSPECIFIED",
            "PGP_ASCII_ARMORED",
            "PKIX_PEM"
          ],
          "enumDescriptions": [
            "`KeyType` is not set.",
            "`PGP ASCII Armored` public key.",
            "`PKIX PEM` public key."
          ],
          "description": "The type of the key, either stored in `public_key` or referenced in `key_id`.",
          "type": "string"
        },
        "signature": {
          "description": "Required. Signature of the related `BuildProvenance`. In JSON, this is base-64 encoded.",
          "type": "string",
          "format": "byte"
        },
        "keyId": {
          "type": "string",
          "description": "An ID for the key used to sign. This could be either an ID for the key stored in `public_key` (such as the ID or fingerprint for a PGP key, or the CN for a cert), or a reference to an external key (such as a reference to a key in Cloud Key Management Service)."
        }
      },
      "type": "object",
      "description": "Message encapsulating the signature of the verified build.",
      "id": "BuildSignature"
    },
    "Discovery": {
      "type": "object",
      "description": "A note that indicates a type of analysis a provider would perform. This note exists in a provider's project. A `Discovery` occurrence is created in a consumer's project at the start of analysis.",
      "id": "Discovery",
      "properties": {
        "analysisKind": {
          "description": "Required. Immutable. The kind of analysis that is handled by this discovery.",
          "enum": [
            "NOTE_KIND_UNSPECIFIED",
            "VULNERABILITY",
            "BUILD",
            "IMAGE",
            "PACKAGE",
            "DEPLOYMENT",
            "DISCOVERY",
            "ATTESTATION",
            "INTOTO",
            "SBOM",
            "SPDX_PACKAGE",
            "SPDX_FILE",
            "SPDX_RELATIONSHIP",
            "VULNERABILITY_ASSESSMENT"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The note and occurrence represent a package vulnerability.",
            "The note and occurrence assert build provenance.",
            "This represents an image basis relationship.",
            "This represents a package installed via a package manager.",
            "The note and occurrence track deployment events.",
            "The note and occurrence track the initial discovery status of a resource.",
            "This represents a logical \"role\" that can attest to artifacts.",
            "This represents an in-toto link.",
            "This represents a software bill of materials.",
            "This represents an SPDX Package.",
            "This represents an SPDX File.",
            "This represents an SPDX Relationship.",
            "This represents a Vulnerability Assessment."
          ],
          "type": "string"
        }
      }
    },
    "TimeSpan": {
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "End of time span."
        },
        "startTime": {
          "format": "google-datetime",
          "description": "Start of time span.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Start and end times for a build execution phase. Next ID: 3",
      "id": "TimeSpan"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Secret": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Secret",
      "description": "Pairs a set of secret environment variables containing encrypted values with the Cloud KMS key to use to decrypt the value. Note: Use `kmsKeyName` with `available_secrets` instead of using `kmsKeyName` with `secret`. For instructions see: https://cloud.google.com/cloud-build/docs/securing-builds/use-encrypted-credentials.",
      "properties": {
        "kmsKeyName": {
          "type": "string",
          "description": "Cloud KMS key name to use to decrypt these envs."
        },
        "secretEnv": {
          "description": "Map of environment variable name to its encrypted value. Secret environment variables must be unique across all of a build's secrets, and must be used by at least one build step. Values can be at most 64 KB in size. There can be at most 100 secret values across all of a build's secrets.",
          "additionalProperties": {
            "format": "byte",
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "Source": {
      "type": "object",
      "description": "Source describes the location of the source used for the build.",
      "properties": {
        "artifactStorageSourceUri": {
          "description": "If provided, the input binary artifacts for the build came from this location.",
          "type": "string"
        },
        "additionalContexts": {
          "items": {
            "$ref": "SourceContext"
          },
          "type": "array",
          "description": "If provided, some of the source code used for the build may be found in these locations, in the case where the source repository had multiple remotes or submodules. This list will not include the context specified in the context field."
        },
        "context": {
          "description": "If provided, the source code used for the build came from this location.",
          "$ref": "SourceContext"
        },
        "fileHashes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "FileHashes"
          },
          "description": "Hash(es) of the build source, which can be used to verify that the original source integrity was maintained in the build. The keys to this map are file paths used as build source and the values contain the hash values for those files. If the build source came in a single package such as a gzipped tarfile (.tar.gz), the FileHash will be for the single path to that file."
        }
      },
      "id": "Source"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects": {
      "description": "Files in the workspace to upload to Cloud Storage upon successful completion of all build steps.",
      "type": "object",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects",
      "properties": {
        "timing": {
          "description": "Output only. Stores timing information for pushing all artifact objects.",
          "readOnly": true,
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan"
        },
        "location": {
          "type": "string",
          "description": "Cloud Storage bucket and optional object path, in the form \"gs://bucket/path/to/somewhere/\". (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)). Files in the workspace matching any path pattern will be uploaded to Cloud Storage with this location as a prefix."
        },
        "paths": {
          "description": "Path globs used to match files in the build's workspace.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "BatchCreateOccurrencesResponse": {
      "type": "object",
      "properties": {
        "occurrences": {
          "items": {
            "$ref": "Occurrence"
          },
          "description": "The occurrences that were created.",
          "type": "array"
        }
      },
      "id": "BatchCreateOccurrencesResponse",
      "description": "Response for creating occurrences in batch."
    },
    "GrafeasV1beta1IntotoSignature": {
      "type": "object",
      "properties": {
        "keyid": {
          "type": "string"
        },
        "sig": {
          "type": "string"
        }
      },
      "description": "A signature object consists of the KeyID used and the signature itself.",
      "id": "GrafeasV1beta1IntotoSignature"
    },
    "AliasContext": {
      "properties": {
        "name": {
          "description": "The alias name.",
          "type": "string"
        },
        "kind": {
          "enum": [
            "KIND_UNSPECIFIED",
            "FIXED",
            "MOVABLE",
            "OTHER"
          ],
          "description": "The alias kind.",
          "enumDescriptions": [
            "Unknown.",
            "Git tag.",
            "Git branch.",
            "Used to specify non-standard aliases. For example, if a Git repo has a ref named \"refs/foo/bar\"."
          ],
          "type": "string"
        }
      },
      "description": "An alias to a repo revision.",
      "type": "object",
      "id": "AliasContext"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan": {
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Start of time span."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "End of time span.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Start and end times for a build execution phase.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan"
    },
    "Product": {
      "type": "object",
      "description": "Product contains information about a product and how to uniquely identify it.",
      "id": "Product",
      "properties": {
        "id": {
          "type": "string",
          "description": "Token that identifies a product so that it can be referred to from other parts in the document. There is no predefined format as long as it uniquely identifies a group in the context of the current document."
        },
        "genericUri": {
          "description": "Contains a URI which is vendor-specific. Example: The artifact repository URL of an image.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of the product."
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult": {
      "description": "ApprovalResult describes the decision and associated metadata of a manual approval of a build.",
      "properties": {
        "comment": {
          "description": "Optional. An optional comment for this manual approval result.",
          "type": "string"
        },
        "decision": {
          "enum": [
            "DECISION_UNSPECIFIED",
            "APPROVED",
            "REJECTED"
          ],
          "description": "Required. The decision of this manual approval.",
          "type": "string",
          "enumDescriptions": [
            "Default enum type. This should not be used.",
            "Build is approved.",
            "Build is rejected."
          ]
        },
        "url": {
          "type": "string",
          "description": "Optional. An optional URL tied to this manual approval result. This field is essentially the same as comment, except that it will be rendered by the UI differently. An example use case is a link to an external job that approved this Build."
        },
        "approvalTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time when the approval decision was made.",
          "type": "string"
        },
        "approverAccount": {
          "type": "string",
          "description": "Output only. Email of the user that called the ApproveBuild API to approve or reject a build at the time that the API was called.",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult"
    },
    "RelationshipOccurrence": {
      "id": "RelationshipOccurrence",
      "description": "RelationshipOccurrence represents an SPDX Relationship section: https://spdx.github.io/spdx-spec/7-relationships-between-SPDX-elements/",
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "A place for the SPDX file creator to record any general comments about the relationship"
        },
        "source": {
          "description": "Also referred to as SPDXRef-A The source SPDX element (file, package, etc)",
          "type": "string"
        },
        "target": {
          "type": "string",
          "description": "Also referred to as SPDXRef-B The target SPDC element (file, package, etc) In cases where there are \"known unknowns\", the use of the keyword NOASSERTION can be used The keywords NONE can be used to indicate that an SPDX element (package/file/snippet) has no other elements connected by some relationship to it"
        },
        "type": {
          "enumDescriptions": [
            "Unspecified",
            "Is to be used when SPDXRef-DOCUMENT describes SPDXRef-A",
            "Is to be used when SPDXRef-A is described by SPDXREF-Document",
            "Is to be used when SPDXRef-A contains SPDXRef-B",
            "Is to be used when SPDXRef-A is contained by SPDXRef-B",
            "Is to be used when SPDXRef-A depends on SPDXRef-B",
            "Is to be used when SPDXRef-A is dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a manifest file that lists a set of dependencies for SPDXRef-B",
            "Is to be used when SPDXRef-A is a build dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a development dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is an optional dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a to be provided dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a test dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a dependency required for the execution of SPDXRef-B",
            "Is to be used when SPDXRef-A is an example of SPDXRef-B",
            "Is to be used when SPDXRef-A generates SPDXRef-B",
            "Is to be used when SPDXRef-A was generated from SPDXRef-B",
            "Is to be used when SPDXRef-A is an ancestor (same lineage but pre-dates) SPDXRef-B",
            "Is to be used when SPDXRef-A is a descendant of (same lineage but postdates) SPDXRef-B",
            "Is to be used when SPDXRef-A is a variant of (same lineage but not clear which came first) SPDXRef-B",
            "Is to be used when distributing SPDXRef-A requires that SPDXRef-B also be distributed",
            "Is to be used when SPDXRef-A is a patch file for (to be applied to) SPDXRef-B",
            "Is to be used when SPDXRef-A is a patch file that has been applied to SPDXRef-B",
            "Is to be used when SPDXRef-A is an exact copy of SPDXRef-B",
            "Is to be used when SPDXRef-A is a file that was added to SPDXRef-B",
            "Is to be used when SPDXRef-A is a file that was deleted from SPDXRef-B",
            "Is to be used when SPDXRef-A is a file that was modified from SPDXRef-B",
            "Is to be used when SPDXRef-A is expanded from the archive SPDXRef-B",
            "Is to be used when SPDXRef-A dynamically links to SPDXRef-B",
            "Is to be used when SPDXRef-A statically links to SPDXRef-B",
            "Is to be used when SPDXRef-A is a data file used in SPDXRef-B",
            "Is to be used when SPDXRef-A is a test case used in testing SPDXRef-B",
            "Is to be used when SPDXRef-A is used to build SPDXRef-B",
            "Is to be used when SPDXRef-A is used as a development tool for SPDXRef-B",
            "Is to be used when SPDXRef-A is used for testing SPDXRef-B",
            "Is to be used when SPDXRef-A is used as a test tool for SPDXRef-B",
            "Is to be used when SPDXRef-A provides documentation of SPDXRef-B",
            "Is to be used when SPDXRef-A is an optional component of SPDXRef-B",
            "Is to be used when SPDXRef-A is a metafile of SPDXRef-B",
            "Is to be used when SPDXRef-A is used as a package as part of SPDXRef-B",
            "Is to be used when (current) SPDXRef-DOCUMENT amends the SPDX information in SPDXRef-B",
            "Is to be used when SPDXRef-A is a prerequisite for SPDXRef-B",
            "Is to be used when SPDXRef-A has as a prerequisite SPDXRef-B",
            "Is to be used for a relationship which has not been defined in the formal SPDX specification. A description of the relationship should be included in the Relationship comments field"
          ],
          "readOnly": true,
          "enum": [
            "RELATIONSHIP_TYPE_UNSPECIFIED",
            "DESCRIBES",
            "DESCRIBED_BY",
            "CONTAINS",
            "CONTAINED_BY",
            "DEPENDS_ON",
            "DEPENDENCY_OF",
            "DEPENDENCY_MANIFEST_OF",
            "BUILD_DEPENDENCY_OF",
            "DEV_DEPENDENCY_OF",
            "OPTIONAL_DEPENDENCY_OF",
            "PROVIDED_DEPENDENCY_OF",
            "TEST_DEPENDENCY_OF",
            "RUNTIME_DEPENDENCY_OF",
            "EXAMPLE_OF",
            "GENERATES",
            "GENERATED_FROM",
            "ANCESTOR_OF",
            "DESCENDANT_OF",
            "VARIANT_OF",
            "DISTRIBUTION_ARTIFACT",
            "PATCH_FOR",
            "PATCH_APPLIED",
            "COPY_OF",
            "FILE_ADDED",
            "FILE_DELETED",
            "FILE_MODIFIED",
            "EXPANDED_FROM_ARCHIVE",
            "DYNAMIC_LINK",
            "STATIC_LINK",
            "DATA_FILE_OF",
            "TEST_CASE_OF",
            "BUILD_TOOL_OF",
            "DEV_TOOL_OF",
            "TEST_OF",
            "TEST_TOOL_OF",
            "DOCUMENTATION_OF",
            "OPTIONAL_COMPONENT_OF",
            "METAFILE_OF",
            "PACKAGE_OF",
            "AMENDS",
            "PREREQUISITE_FOR",
            "HAS_PREREQUISITE",
            "OTHER"
          ],
          "type": "string",
          "description": "Output only. The type of relationship between the source and target SPDX elements"
        }
      }
    },
    "Status": {
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "id": "Status"
    },
    "Resource": {
      "description": "An entity that can have metadata. For example, a Docker image.",
      "properties": {
        "contentHash": {
          "$ref": "Hash",
          "description": "Deprecated, do not use. Use uri instead. The hash of the resource content. For example, the Docker digest."
        },
        "uri": {
          "type": "string",
          "description": "Required. The unique URI of the resource. For example, `https://gcr.io/project/image@sha256:foo` for a Docker image."
        },
        "name": {
          "type": "string",
          "description": "Deprecated, do not use. Use uri instead. The name of the resource. For example, the name of a Docker image - \"Debian\"."
        }
      },
      "id": "Resource",
      "type": "object"
    },
    "Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "id": "Policy",
      "properties": {
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        },
        "etag": {
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        }
      },
      "type": "object"
    },
    "Artifact": {
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Related artifact names. This may be the path to a binary or jar file, or in the case of a container build, the name used to push the container image to Google Container Registry, as presented to `docker push`. Note that a single Artifact ID can have multiple names, for example if two tags are applied to one image."
        },
        "id": {
          "description": "Artifact ID, if any; for container images, this will be a URL by digest like `gcr.io/projectID/imagename@sha256:123456`.",
          "type": "string"
        },
        "checksum": {
          "type": "string",
          "description": "Hash or checksum value of a binary, or Docker Registry 2.0 digest of a container."
        }
      },
      "description": "Artifact describes a build product.",
      "type": "object",
      "id": "Artifact"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildStep": {
      "type": "object",
      "description": "A step in the build pipeline.",
      "properties": {
        "dir": {
          "type": "string",
          "description": "Working directory to use when running this step's container. If this value is a relative path, it is relative to the build's working directory. If this value is absolute, it may be outside the build's working directory, in which case the contents of the path may not be persisted across build step executions, unless a `volume` for that path is specified. If the build specifies a `RepoSource` with `dir` and a step with a `dir`, which specifies an absolute path, the `RepoSource` `dir` is ignored for the step's execution."
        },
        "allowFailure": {
          "type": "boolean",
          "description": "Allow this build step to fail without failing the entire build. If false, the entire build will fail if this step fails. Otherwise, the build will succeed, but this step will still have a failure status. Error information will be reported in the failure_detail field."
        },
        "entrypoint": {
          "type": "string",
          "description": "Entrypoint to be used instead of the build step image's default entrypoint. If unset, the image's default entrypoint is used."
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Volume"
          },
          "description": "List of volumes to mount into the build step. Each volume is created as an empty volume prior to execution of the build step. Upon completion of the build, volumes and their contents are discarded. Using a named volume in only one step is not valid as it is indicative of a build request with an incorrect configuration."
        },
        "name": {
          "description": "Required. The name of the container image that will run this particular build step. If the image is available in the host's Docker daemon's cache, it will be run directly. If not, the host will attempt to pull the image first, using the builder service account's credentials if necessary. The Docker daemon's cache will already have the latest versions of all of the officially supported build steps ([https://github.com/GoogleCloudPlatform/cloud-builders](https://github.com/GoogleCloudPlatform/cloud-builders)). The Docker daemon will also have cached many of the layers for some popular images, like \"ubuntu\", \"debian\", but they will be refreshed at the time you attempt to use them. If you built an image in a previous build step, it will be stored in the host's Docker daemon's cache and is available to use as the name for a later build step.",
          "type": "string"
        },
        "exitCode": {
          "readOnly": true,
          "format": "int32",
          "type": "integer",
          "description": "Output only. Return code from running the step."
        },
        "args": {
          "description": "A list of arguments that will be presented to the step when it is started. If the image used to run the step's container has an entrypoint, the `args` are used as arguments to that entrypoint. If the image does not define an entrypoint, the first element in args is used as the entrypoint, and the remainder will be used as arguments.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "readOnly": true,
          "enumDescriptions": [
            "Status of the build is unknown.",
            "Build has been created and is pending execution and queuing. It has not been queued.",
            "Build or step is queued; work has not yet begun.",
            "Build or step is being executed.",
            "Build or step finished successfully.",
            "Build or step failed to complete successfully.",
            "Build or step failed due to an internal cause.",
            "Build or step took longer than was allowed.",
            "Build or step was canceled by a user.",
            "Build was enqueued for longer than the value of `queue_ttl`."
          ],
          "enum": [
            "STATUS_UNKNOWN",
            "PENDING",
            "QUEUED",
            "WORKING",
            "SUCCESS",
            "FAILURE",
            "INTERNAL_ERROR",
            "TIMEOUT",
            "CANCELLED",
            "EXPIRED"
          ],
          "type": "string",
          "description": "Output only. Status of the build step. At this time, build step status is only updated on build completion; step status is not updated in real-time as the build progresses."
        },
        "timing": {
          "readOnly": true,
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan",
          "description": "Output only. Stores timing information for executing this build step."
        },
        "timeout": {
          "description": "Time limit for executing this build step. If not defined, the step has no time limit and will be allowed to continue to run until either it completes or the build itself times out.",
          "format": "google-duration",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for this build step, used in `wait_for` to reference this build step as a dependency."
        },
        "allowExitCodes": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array",
          "description": "Allow this build step to fail without failing the entire build if and only if the exit code is one of the specified codes. If allow_failure is also specified, this field will take precedence."
        },
        "env": {
          "items": {
            "type": "string"
          },
          "description": "A list of environment variable definitions to be used when running a step. The elements are of the form \"KEY=VALUE\" for the environment variable \"KEY\" being given the value \"VALUE\".",
          "type": "array"
        },
        "secretEnv": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of environment variables which are encrypted using a Cloud Key Management Service crypto key. These values must be specified in the build's `Secret`."
        },
        "waitFor": {
          "description": "The ID(s) of the step(s) that this build step depends on. This build step will not start until all the build steps in `wait_for` have completed successfully. If `wait_for` is empty, this build step will start when all previous build steps in the `Build.Steps` list have completed successfully.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "script": {
          "type": "string",
          "description": "A shell script to be executed in the step. When script is provided, the user cannot specify the entrypoint or args."
        },
        "pullTiming": {
          "readOnly": true,
          "description": "Output only. Stores timing information for pulling this build step's builder image only.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan"
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildStep"
    },
    "GitSourceContext": {
      "properties": {
        "url": {
          "description": "Git repository URL.",
          "type": "string"
        },
        "revisionId": {
          "type": "string",
          "description": "Git commit hash."
        }
      },
      "type": "object",
      "id": "GitSourceContext",
      "description": "A GitSourceContext denotes a particular revision in a third party Git repository (e.g., GitHub)."
    },
    "GrafeasV1beta1DeploymentDetails": {
      "properties": {
        "deployment": {
          "description": "Required. Deployment history for the resource.",
          "$ref": "Deployment"
        }
      },
      "type": "object",
      "id": "GrafeasV1beta1DeploymentDetails",
      "description": "Details of a deployment occurrence."
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource": {
      "description": "Location of the source in an archive file in Google Cloud Storage.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource",
      "properties": {
        "object": {
          "type": "string",
          "description": "Google Cloud Storage object containing the source. This object must be a zipped (`.zip`) or gzipped archive file (`.tar.gz`) containing source to build."
        },
        "generation": {
          "type": "string",
          "format": "int64",
          "description": "Google Cloud Storage generation for the object. If the generation is omitted, the latest generation will be used."
        },
        "bucket": {
          "description": "Google Cloud Storage bucket containing the source (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Justification": {
      "properties": {
        "justificationType": {
          "enumDescriptions": [
            "JUSTIFICATION_TYPE_UNSPECIFIED.",
            "The vulnerable component is not present in the product.",
            "The vulnerable code is not present. Typically this case occurs when source code is configured or built in a way that excludes the vulnerable code.",
            "The vulnerable code can not be executed. Typically this case occurs when the product includes the vulnerable code but does not call or use the vulnerable code.",
            "The vulnerable code cannot be controlled by an attacker to exploit the vulnerability.",
            "The product includes built-in protections or features that prevent exploitation of the vulnerability. These built-in protections cannot be subverted by the attacker and cannot be configured or disabled by the user. These mitigations completely prevent exploitation based on known attack vectors."
          ],
          "type": "string",
          "description": "The justification type for this vulnerability.",
          "enum": [
            "JUSTIFICATION_TYPE_UNSPECIFIED",
            "COMPONENT_NOT_PRESENT",
            "VULNERABLE_CODE_NOT_PRESENT",
            "VULNERABLE_CODE_NOT_IN_EXECUTE_PATH",
            "VULNERABLE_CODE_CANNOT_BE_CONTROLLED_BY_ADVERSARY",
            "INLINE_MITIGATIONS_ALREADY_EXIST"
          ]
        },
        "details": {
          "description": "Additional details on why this justification was chosen.",
          "type": "string"
        }
      },
      "id": "Justification",
      "type": "object",
      "description": "Justification provides the justification when the state of the assessment if NOT_AFFECTED."
    },
    "BuildStep": {
      "type": "object",
      "id": "BuildStep",
      "properties": {
        "exitCode": {
          "type": "integer",
          "format": "int32",
          "description": "Output only. Return code from running the step."
        },
        "entrypoint": {
          "description": "Entrypoint to be used instead of the build step image's default entrypoint. If unset, the image's default entrypoint is used.",
          "type": "string"
        },
        "timeout": {
          "type": "string",
          "description": "Time limit for executing this build step. If not defined, the step has no time limit and will be allowed to continue to run until either it completes or the build itself times out.",
          "format": "google-duration"
        },
        "allowFailure": {
          "description": "Allow this build step to fail without failing the entire build. If false, the entire build will fail if this step fails. Otherwise, the build will succeed, but this step will still have a failure status. Error information will be reported in the failure_detail field.",
          "type": "boolean"
        },
        "timing": {
          "$ref": "TimeSpan",
          "description": "Output only. Stores timing information for executing this build step."
        },
        "status": {
          "enum": [
            "STATUS_UNKNOWN",
            "PENDING",
            "QUEUING",
            "QUEUED",
            "WORKING",
            "SUCCESS",
            "FAILURE",
            "INTERNAL_ERROR",
            "TIMEOUT",
            "CANCELLED",
            "EXPIRED"
          ],
          "description": "Output only. Status of the build step. At this time, build step status is only updated on build completion; step status is not updated in real-time as the build progresses.",
          "type": "string",
          "enumDescriptions": [
            "Status of the build is unknown.",
            "Build has been created and is pending execution and queuing. It has not been queued.",
            "Build has been received and is being queued.",
            "Build or step is queued; work has not yet begun.",
            "Build or step is being executed.",
            "Build or step finished successfully.",
            "Build or step failed to complete successfully.",
            "Build or step failed due to an internal cause.",
            "Build or step took longer than was allowed.",
            "Build or step was canceled by a user.",
            "Build was enqueued for longer than the value of `queue_ttl`."
          ]
        },
        "pullTiming": {
          "$ref": "TimeSpan",
          "description": "Output only. Stores timing information for pulling this build step's builder image only."
        },
        "dir": {
          "description": "Working directory to use when running this step's container. If this value is a relative path, it is relative to the build's working directory. If this value is absolute, it may be outside the build's working directory, in which case the contents of the path may not be persisted across build step executions, unless a `volume` for that path is specified. If the build specifies a `RepoSource` with `dir` and a step with a `dir`, which specifies an absolute path, the `RepoSource` `dir` is ignored for the step's execution.",
          "type": "string"
        },
        "args": {
          "items": {
            "type": "string"
          },
          "description": "A list of arguments that will be presented to the step when it is started. If the image used to run the step's container has an entrypoint, the `args` are used as arguments to that entrypoint. If the image does not define an entrypoint, the first element in args is used as the entrypoint, and the remainder will be used as arguments.",
          "type": "array"
        },
        "name": {
          "description": "Required. The name of the container image that will run this particular build step. If the image is available in the host's Docker daemon's cache, it will be run directly. If not, the host will attempt to pull the image first, using the builder service account's credentials if necessary. The Docker daemon's cache will already have the latest versions of all of the officially supported build steps ([https://github.com/GoogleCloudPlatform/cloud-builders](https://github.com/GoogleCloudPlatform/cloud-builders)). The Docker daemon will also have cached many of the layers for some popular images, like \"ubuntu\", \"debian\", but they will be refreshed at the time you attempt to use them. If you built an image in a previous build step, it will be stored in the host's Docker daemon's cache and is available to use as the name for a later build step.",
          "type": "string"
        },
        "waitFor": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The ID(s) of the step(s) that this build step depends on. This build step will not start until all the build steps in `wait_for` have completed successfully. If `wait_for` is empty, this build step will start when all previous build steps in the `Build.Steps` list have completed successfully."
        },
        "id": {
          "description": "Unique identifier for this build step, used in `wait_for` to reference this build step as a dependency.",
          "type": "string"
        },
        "env": {
          "type": "array",
          "description": "A list of environment variable definitions to be used when running a step. The elements are of the form \"KEY=VALUE\" for the environment variable \"KEY\" being given the value \"VALUE\".",
          "items": {
            "type": "string"
          }
        },
        "script": {
          "description": "A shell script to be executed in the step. When script is provided, the user cannot specify the entrypoint or args.",
          "type": "string"
        },
        "allowExitCodes": {
          "type": "array",
          "description": "Allow this build step to fail without failing the entire build if and only if the exit code is one of the specified codes. If allow_failure is also specified, this field will take precedence.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "volumes": {
          "type": "array",
          "description": "List of volumes to mount into the build step. Each volume is created as an empty volume prior to execution of the build step. Upon completion of the build, volumes and their contents are discarded. Using a named volume in only one step is not valid as it is indicative of a build request with an incorrect configuration.",
          "items": {
            "$ref": "Volume"
          }
        },
        "secretEnv": {
          "items": {
            "type": "string"
          },
          "description": "A list of environment variables which are encrypted using a Cloud Key Management Service crypto key. These values must be specified in the build's `Secret`.",
          "type": "array"
        }
      },
      "description": "A step in the build pipeline. Next ID: 20"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Secrets": {
      "properties": {
        "secretManager": {
          "type": "array",
          "description": "Secrets in Secret Manager and associated secret environment variable.",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret"
          }
        },
        "inline": {
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret"
          },
          "description": "Secrets encrypted with KMS key and the associated secret environment variable.",
          "type": "array"
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Secrets",
      "description": "Secrets and secret environment variables.",
      "type": "object"
    },
    "Deployable": {
      "properties": {
        "resourceUri": {
          "description": "Required. Resource URI for the artifact being deployed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "An artifact that can be deployed in some runtime.",
      "id": "Deployable",
      "type": "object"
    },
    "Authority": {
      "id": "Authority",
      "properties": {
        "hint": {
          "description": "Hint hints at the purpose of the attestation authority.",
          "$ref": "Hint"
        }
      },
      "description": "Note kind that represents a logical attestation \"role\" or \"authority\". For example, an organization might have one `Authority` for \"QA\" and one for \"build\". This note is intended to act strictly as a grouping mechanism for the attached occurrences (Attestations). This grouping mechanism also provides a security boundary, since IAM ACLs gate the ability for a principle to attach an occurrence to a given note. It also provides a single point of lookup to find all attached attestation occurrences, even if they don't all live in the same project.",
      "type": "object"
    },
    "Details": {
      "type": "object",
      "properties": {
        "attestation": {
          "$ref": "Attestation",
          "description": "Required. Attestation for the resource."
        }
      },
      "description": "Details of an attestation occurrence.",
      "id": "Details"
    },
    "GrafeasV1beta1VulnerabilityDetails": {
      "id": "GrafeasV1beta1VulnerabilityDetails",
      "type": "object",
      "properties": {
        "severity": {
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ],
          "type": "string",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "description": "Output only. The note provider assigned Severity of the vulnerability."
        },
        "longDescription": {
          "type": "string",
          "description": "Output only. A detailed description of this vulnerability."
        },
        "cvssScore": {
          "type": "number",
          "description": "Output only. The CVSS score of this vulnerability. CVSS score is on a scale of 0-10 where 0 indicates low severity and 10 indicates high severity.",
          "format": "float"
        },
        "type": {
          "type": "string",
          "description": "The type of package; whether native or non native(ruby gems, node.js packages etc)"
        },
        "cvssV3": {
          "$ref": "CVSS",
          "description": "The cvss v3 score for the vulnerability."
        },
        "cvssVersion": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "Output only. CVSS version used to populate cvss_score and severity.",
          "enum": [
            "CVSS_VERSION_UNSPECIFIED",
            "CVSS_VERSION_2",
            "CVSS_VERSION_3"
          ]
        },
        "vexAssessment": {
          "$ref": "VexAssessment"
        },
        "cvssV2": {
          "$ref": "CVSS",
          "description": "The cvss v2 score for the vulnerability."
        },
        "relatedUrls": {
          "description": "Output only. URLs related to this vulnerability.",
          "items": {
            "$ref": "RelatedUrl"
          },
          "type": "array"
        },
        "packageIssue": {
          "description": "Required. The set of affected locations and their fixes (if available) within the associated resource.",
          "type": "array",
          "items": {
            "$ref": "PackageIssue"
          }
        },
        "effectiveSeverity": {
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "description": "The distro assigned severity for this vulnerability when it is available, and note provider assigned severity when distro has not yet assigned a severity for this vulnerability. When there are multiple PackageIssues for this vulnerability, they can have different effective severities because some might be provided by the distro while others are provided by the language ecosystem for a language pack. For this reason, it is advised to use the effective severity on the PackageIssue level. In the case where multiple PackageIssues have differing effective severities, this field should be the highest severity for any of the PackageIssues.",
          "type": "string",
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ]
        },
        "shortDescription": {
          "description": "Output only. A one sentence description of this vulnerability.",
          "type": "string"
        }
      },
      "description": "Details of a vulnerability Occurrence."
    },
    "PackageIssue": {
      "id": "PackageIssue",
      "type": "object",
      "description": "This message wraps a location affected by a vulnerability and its associated fix (if one is available).",
      "properties": {
        "effectiveSeverity": {
          "description": "Output only. The distro or language system assigned severity for this vulnerability when that is available and note provider assigned severity when it is not available.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ]
        },
        "severityName": {
          "type": "string",
          "description": "Deprecated, use Details.effective_severity instead The severity (e.g., distro assigned severity) for this vulnerability."
        },
        "packageType": {
          "type": "string",
          "description": "The type of package (e.g. OS, MAVEN, GO)."
        },
        "affectedLocation": {
          "$ref": "VulnerabilityLocation",
          "description": "Required. The location of the vulnerability."
        },
        "fixedLocation": {
          "$ref": "VulnerabilityLocation",
          "description": "The location of the available fix for vulnerability."
        }
      }
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "type": "object",
      "id": "Empty"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalConfig": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalConfig",
      "description": "ApprovalConfig describes configuration for manual approval of a build.",
      "type": "object",
      "properties": {
        "approvalRequired": {
          "description": "Whether or not approval is needed. If this is set on a build, it will become pending when created, and will need to be explicitly approved to start.",
          "type": "boolean"
        }
      }
    },
    "BatchCreateNotesResponse": {
      "description": "Response for creating notes in batch.",
      "id": "BatchCreateNotesResponse",
      "type": "object",
      "properties": {
        "notes": {
          "type": "array",
          "items": {
            "$ref": "Note"
          },
          "description": "The notes that were created."
        }
      }
    },
    "Version": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Required only when version kind is NORMAL. The main part of the version name."
        },
        "kind": {
          "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
          "enum": [
            "VERSION_KIND_UNSPECIFIED",
            "NORMAL",
            "MINIMUM",
            "MAXIMUM"
          ],
          "enumDescriptions": [
            "Unknown.",
            "A standard package version.",
            "A special version representing negative infinity.",
            "A special version representing positive infinity."
          ],
          "type": "string"
        },
        "revision": {
          "type": "string",
          "description": "The iteration of the package build from the above version."
        },
        "epoch": {
          "format": "int32",
          "description": "Used to correct mistakes in the version numbering scheme.",
          "type": "integer"
        },
        "inclusive": {
          "type": "boolean",
          "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
        }
      },
      "id": "Version",
      "description": "Version contains structured information about the version of a package.",
      "type": "object"
    },
    "Attestation": {
      "type": "object",
      "id": "Attestation",
      "properties": {
        "pgpSignedAttestation": {
          "$ref": "PgpSignedAttestation",
          "description": "A PGP signed attestation."
        },
        "genericSignedAttestation": {
          "$ref": "GenericSignedAttestation"
        }
      },
      "description": "Occurrence that represents a single \"attestation\". The authenticity of an attestation can be verified using the attached signature. If the verifier trusts the public key of the signer, then verifying the signature is sufficient to establish trust. In this circumstance, the authority to which this attestation is attached is primarily useful for look-up (how to find this attestation if you already know the authority and artifact to be verified) and intent (which authority was this attestation intended to sign for)."
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning": {
      "properties": {
        "text": {
          "description": "Explanation of the warning generated.",
          "type": "string"
        },
        "priority": {
          "enumDescriptions": [
            "Should not be used.",
            "e.g. deprecation warnings and alternative feature highlights.",
            "e.g. automated detection of possible issues with the build.",
            "e.g. alerts that a feature used in the build is pending removal"
          ],
          "enum": [
            "PRIORITY_UNSPECIFIED",
            "INFO",
            "WARNING",
            "ALERT"
          ],
          "description": "The priority for this warning.",
          "type": "string"
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning",
      "type": "object",
      "description": "A non-fatal problem encountered during the execution of the build."
    },
    "WindowsDetail": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the vulnerability.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The description of the vulnerability."
        },
        "fixingKbs": {
          "type": "array",
          "items": {
            "$ref": "KnowledgeBase"
          },
          "description": "Required. The names of the KBs which have hotfixes to mitigate this vulnerability. Note that there may be multiple hotfixes (and thus multiple KBs) that mitigate a given vulnerability. Currently any listed kb's presence is considered a fix."
        },
        "cpeUri": {
          "type": "string",
          "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar."
        }
      },
      "id": "WindowsDetail"
    },
    "InToto": {
      "description": "This contains the fields corresponding to the definition of a software supply chain step in an in-toto layout. This information goes into a Grafeas note.",
      "id": "InToto",
      "properties": {
        "expectedMaterials": {
          "description": "The following fields contain in-toto artifact rules identifying the artifacts that enter this supply chain step, and exit the supply chain step, i.e. materials and products of the step.",
          "type": "array",
          "items": {
            "$ref": "ArtifactRule"
          }
        },
        "expectedProducts": {
          "type": "array",
          "items": {
            "$ref": "ArtifactRule"
          }
        },
        "threshold": {
          "type": "string",
          "description": "This field contains a value that indicates the minimum number of keys that need to be used to sign the step's in-toto link.",
          "format": "int64"
        },
        "stepName": {
          "description": "This field identifies the name of the step in the supply chain.",
          "type": "string"
        },
        "expectedCommand": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "This field contains the expected command used to perform the step."
        },
        "signingKeys": {
          "items": {
            "$ref": "SigningKey"
          },
          "description": "This field contains the public keys that can be used to verify the signatures on the step metadata.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "Expr": {
      "type": "object",
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        }
      }
    },
    "RepoId": {
      "id": "RepoId",
      "type": "object",
      "properties": {
        "projectRepoId": {
          "$ref": "ProjectRepoId",
          "description": "A combination of a project ID and a repo name."
        },
        "uid": {
          "type": "string",
          "description": "A server-assigned, globally unique identifier."
        }
      },
      "description": "A unique identifier for a Cloud Repo."
    },
    "PackageInfoOccurrence": {
      "type": "object",
      "id": "PackageInfoOccurrence",
      "description": "PackageInfoOccurrence represents an SPDX Package Information section: https://spdx.github.io/spdx-spec/3-package-information/",
      "properties": {
        "sourceInfo": {
          "type": "string",
          "description": "Provide a place for the SPDX file creator to record any relevant background information or additional comments about the origin of the package"
        },
        "filename": {
          "type": "string",
          "description": "Provide the actual file name of the package, or path of the directory being treated as a package"
        },
        "summaryDescription": {
          "description": "Output only. A short description of the package",
          "type": "string",
          "readOnly": true
        },
        "title": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Identify the full name of the package as given by the Package Originator"
        },
        "comment": {
          "description": "A place for the SPDX file creator to record any general comments about the package being described",
          "type": "string"
        },
        "version": {
          "readOnly": true,
          "description": "Output only. Identify the version of the package",
          "type": "string"
        },
        "packageType": {
          "type": "string",
          "description": "Output only. The type of package: OS, MAVEN, GO, GO_STDLIB, etc.",
          "readOnly": true
        },
        "homePage": {
          "description": "Output only. Provide a place for the SPDX file creator to record a web site that serves as the package's home page",
          "type": "string",
          "readOnly": true
        },
        "licenseConcluded": {
          "description": "package or alternative values, if the governing license cannot be determined",
          "$ref": "License"
        },
        "id": {
          "type": "string",
          "description": "Uniquely identify any element in an SPDX document which may be referenced by other elements"
        }
      }
    },
    "CVSS": {
      "description": "Common Vulnerability Scoring System. This message is compatible with CVSS v2 and v3. For CVSS v2 details, see https://www.first.org/cvss/v2/guide CVSS v2 calculator: https://nvd.nist.gov/vuln-metrics/cvss/v2-calculator For CVSS v3 details, see https://www.first.org/cvss/specification-document CVSS v3 calculator: https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator",
      "id": "CVSS",
      "type": "object",
      "properties": {
        "integrityImpact": {
          "type": "string",
          "enumDescriptions": [
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3",
            "Defined in CVSS v3",
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v2",
            "Defined in CVSS v2"
          ],
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE",
            "IMPACT_PARTIAL",
            "IMPACT_COMPLETE"
          ],
          "description": "Defined in CVSS v3, CVSS v2"
        },
        "exploitabilityScore": {
          "format": "float",
          "type": "number"
        },
        "attackVector": {
          "description": "Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments. Defined in CVSS v3, CVSS v2",
          "type": "string",
          "enumDescriptions": [
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3"
          ],
          "enum": [
            "ATTACK_VECTOR_UNSPECIFIED",
            "ATTACK_VECTOR_NETWORK",
            "ATTACK_VECTOR_ADJACENT",
            "ATTACK_VECTOR_LOCAL",
            "ATTACK_VECTOR_PHYSICAL"
          ]
        },
        "baseScore": {
          "description": "The base score is a function of the base metric scores.",
          "format": "float",
          "type": "number"
        },
        "userInteraction": {
          "type": "string",
          "enum": [
            "USER_INTERACTION_UNSPECIFIED",
            "USER_INTERACTION_NONE",
            "USER_INTERACTION_REQUIRED"
          ],
          "enumDescriptions": [
            "Defined in CVSS v3",
            "Defined in CVSS v3",
            "Defined in CVSS v3"
          ],
          "description": "Defined in CVSS v3"
        },
        "attackComplexity": {
          "enum": [
            "ATTACK_COMPLEXITY_UNSPECIFIED",
            "ATTACK_COMPLEXITY_LOW",
            "ATTACK_COMPLEXITY_HIGH",
            "ATTACK_COMPLEXITY_MEDIUM"
          ],
          "enumDescriptions": [
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v2"
          ],
          "type": "string",
          "description": "Defined in CVSS v3, CVSS v2"
        },
        "authentication": {
          "enum": [
            "AUTHENTICATION_UNSPECIFIED",
            "AUTHENTICATION_MULTIPLE",
            "AUTHENTICATION_SINGLE",
            "AUTHENTICATION_NONE"
          ],
          "description": "Defined in CVSS v2",
          "enumDescriptions": [
            "Defined in CVSS v2",
            "Defined in CVSS v2",
            "Defined in CVSS v2",
            "Defined in CVSS v2"
          ],
          "type": "string"
        },
        "confidentialityImpact": {
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE",
            "IMPACT_PARTIAL",
            "IMPACT_COMPLETE"
          ],
          "enumDescriptions": [
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3",
            "Defined in CVSS v3",
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v2",
            "Defined in CVSS v2"
          ],
          "description": "Defined in CVSS v3, CVSS v2",
          "type": "string"
        },
        "scope": {
          "description": "Defined in CVSS v3",
          "enumDescriptions": [
            "Defined in CVSS v3",
            "Defined in CVSS v3",
            "Defined in CVSS v3"
          ],
          "type": "string",
          "enum": [
            "SCOPE_UNSPECIFIED",
            "SCOPE_UNCHANGED",
            "SCOPE_CHANGED"
          ]
        },
        "privilegesRequired": {
          "description": "Defined in CVSS v3",
          "enum": [
            "PRIVILEGES_REQUIRED_UNSPECIFIED",
            "PRIVILEGES_REQUIRED_NONE",
            "PRIVILEGES_REQUIRED_LOW",
            "PRIVILEGES_REQUIRED_HIGH"
          ],
          "enumDescriptions": [
            "Defined in CVSS v3",
            "Defined in CVSS v3",
            "Defined in CVSS v3",
            "Defined in CVSS v3"
          ],
          "type": "string"
        },
        "availabilityImpact": {
          "enumDescriptions": [
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3",
            "Defined in CVSS v3",
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v2",
            "Defined in CVSS v2"
          ],
          "type": "string",
          "description": "Defined in CVSS v3, CVSS v2",
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE",
            "IMPACT_PARTIAL",
            "IMPACT_COMPLETE"
          ]
        },
        "impactScore": {
          "format": "float",
          "type": "number"
        }
      }
    },
    "DocumentOccurrence": {
      "properties": {
        "title": {
          "description": "Identify name of this document as designated by creator",
          "type": "string"
        },
        "namespace": {
          "description": "Provide an SPDX document specific namespace as a unique absolute Uniform Resource Identifier (URI) as specified in RFC-3986, with the exception of the ‘#’ delimiter",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Identify the current SPDX document which may be referenced in relationships by other files, packages internally and documents externally"
        },
        "documentComment": {
          "description": "A field for creators of the SPDX file content to provide comments to the consumers of the SPDX document",
          "type": "string"
        },
        "creators": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Identify who (or what, in the case of a tool) created the SPDX file. If the SPDX file was created by an individual, indicate the person's name"
        },
        "licenseListVersion": {
          "description": "A field for creators of the SPDX file to provide the version of the SPDX License List used when the SPDX file was created",
          "type": "string"
        },
        "creatorComment": {
          "type": "string",
          "description": "A field for creators of the SPDX file to provide general comments about the creation of the SPDX file or any other relevant comment not included in the other fields"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Identify when the SPDX file was originally created. The date is to be specified according to combined date and time in UTC format as specified in ISO 8601 standard",
          "type": "string"
        },
        "externalDocumentRefs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Identify any external SPDX documents referenced within this SPDX document"
        }
      },
      "description": "DocumentOccurrence represents an SPDX Document Creation Information section: https://spdx.github.io/spdx-spec/v2.3/document-creation-information/",
      "type": "object",
      "id": "DocumentOccurrence"
    },
    "Occurrence": {
      "description": "An instance of an analysis type that has been found on a resource.",
      "id": "Occurrence",
      "properties": {
        "updateTime": {
          "description": "Output only. The time this occurrence was last updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "deployment": {
          "$ref": "GrafeasV1beta1DeploymentDetails",
          "description": "Describes the deployment of an artifact on a runtime."
        },
        "remediation": {
          "type": "string",
          "description": "A description of actions that can be taken to remedy the note."
        },
        "spdxPackage": {
          "$ref": "PackageInfoOccurrence",
          "description": "Describes a specific SPDX Package."
        },
        "envelope": {
          "$ref": "Envelope",
          "description": "https://github.com/secure-systems-lab/dsse"
        },
        "name": {
          "description": "Output only. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.",
          "type": "string"
        },
        "discovered": {
          "description": "Describes when a resource was discovered.",
          "$ref": "GrafeasV1beta1DiscoveryDetails"
        },
        "noteName": {
          "description": "Required. Immutable. The analysis note associated with this occurrence, in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be used as a filter in list requests.",
          "type": "string"
        },
        "derivedImage": {
          "$ref": "GrafeasV1beta1ImageDetails",
          "description": "Describes how this resource derives from the basis in the associated note."
        },
        "build": {
          "$ref": "GrafeasV1beta1BuildDetails",
          "description": "Describes a verifiable build."
        },
        "spdxRelationship": {
          "description": "Describes a specific SPDX Relationship.",
          "$ref": "RelationshipOccurrence"
        },
        "sbom": {
          "description": "Describes a specific software bill of materials document.",
          "$ref": "DocumentOccurrence"
        },
        "vulnerability": {
          "$ref": "GrafeasV1beta1VulnerabilityDetails",
          "description": "Describes a security vulnerability."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time this occurrence was created.",
          "format": "google-datetime"
        },
        "intoto": {
          "description": "Describes a specific in-toto link.",
          "$ref": "GrafeasV1beta1IntotoDetails"
        },
        "resource": {
          "description": "Required. Immutable. The resource for which the occurrence applies.",
          "$ref": "Resource"
        },
        "installation": {
          "$ref": "GrafeasV1beta1PackageDetails",
          "description": "Describes the installation of a package on the linked resource."
        },
        "kind": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The note and occurrence represent a package vulnerability.",
            "The note and occurrence assert build provenance.",
            "This represents an image basis relationship.",
            "This represents a package installed via a package manager.",
            "The note and occurrence track deployment events.",
            "The note and occurrence track the initial discovery status of a resource.",
            "This represents a logical \"role\" that can attest to artifacts.",
            "This represents an in-toto link.",
            "This represents a software bill of materials.",
            "This represents an SPDX Package.",
            "This represents an SPDX File.",
            "This represents an SPDX Relationship.",
            "This represents a Vulnerability Assessment."
          ],
          "description": "Output only. This explicitly denotes which of the occurrence details are specified. This field can be used as a filter in list requests.",
          "type": "string",
          "enum": [
            "NOTE_KIND_UNSPECIFIED",
            "VULNERABILITY",
            "BUILD",
            "IMAGE",
            "PACKAGE",
            "DEPLOYMENT",
            "DISCOVERY",
            "ATTESTATION",
            "INTOTO",
            "SBOM",
            "SPDX_PACKAGE",
            "SPDX_FILE",
            "SPDX_RELATIONSHIP",
            "VULNERABILITY_ASSESSMENT"
          ]
        },
        "attestation": {
          "description": "Describes an attestation of an artifact.",
          "$ref": "Details"
        },
        "spdxFile": {
          "description": "Describes a specific SPDX File.",
          "$ref": "FileOccurrence"
        }
      },
      "type": "object"
    },
    "FileOccurrence": {
      "id": "FileOccurrence",
      "description": "FileOccurrence represents an SPDX File Information section: https://spdx.github.io/spdx-spec/4-file-information/",
      "properties": {
        "contributors": {
          "items": {
            "type": "string"
          },
          "description": "This field provides a place for the SPDX file creator to record file contributors",
          "type": "array"
        },
        "licenseConcluded": {
          "description": "This field contains the license the SPDX file creator has concluded as governing the file or alternative values if the governing license cannot be determined",
          "$ref": "License"
        },
        "attributions": {
          "type": "array",
          "description": "This field provides a place for the SPDX data creator to record, at the file level, acknowledgements that may be needed to be communicated in some contexts",
          "items": {
            "type": "string"
          }
        },
        "comment": {
          "type": "string",
          "description": "This field provides a place for the SPDX file creator to record any general comments about the file"
        },
        "copyright": {
          "type": "string",
          "description": "Identify the copyright holder of the file, as well as any dates present"
        },
        "id": {
          "description": "Uniquely identify any element in an SPDX document which may be referenced by other elements",
          "type": "string"
        },
        "filesLicenseInfo": {
          "description": "This field contains the license information actually found in the file, if any",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notice": {
          "description": "This field provides a place for the SPDX file creator to record license notices or other such related notices found in the file",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GrafeasV1beta1ImageDetails": {
      "type": "object",
      "properties": {
        "derivedImage": {
          "$ref": "Derived",
          "description": "Required. Immutable. The child image derived from the base image."
        }
      },
      "description": "Details of an image occurrence.",
      "id": "GrafeasV1beta1ImageDetails"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact",
      "properties": {
        "artifactId": {
          "type": "string",
          "description": "Maven `artifactId` value used when uploading the artifact to Artifact Registry."
        },
        "repository": {
          "description": "Artifact Registry repository, in the form \"https://$REGION-maven.pkg.dev/$PROJECT/$REPOSITORY\" Artifact in the workspace specified by path will be uploaded to Artifact Registry with this location as a prefix.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "Path to an artifact in the build's workspace to be uploaded to Artifact Registry. This can be either an absolute path, e.g. /workspace/my-app/target/my-app-1.0.SNAPSHOT.jar or a relative path from /workspace, e.g. my-app/target/my-app-1.0.SNAPSHOT.jar."
        },
        "version": {
          "description": "Maven `version` value used when uploading the artifact to Artifact Registry.",
          "type": "string"
        },
        "groupId": {
          "type": "string",
          "description": "Maven `groupId` value used when uploading the artifact to Artifact Registry."
        }
      },
      "description": "A Maven artifact to upload to Artifact Registry upon successful completion of all build steps.",
      "type": "object"
    },
    "VulnerabilityLocation": {
      "properties": {
        "package": {
          "description": "Required. The package being described.",
          "type": "string"
        },
        "cpeUri": {
          "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) format. Examples include distro or storage location for vulnerable jar.",
          "type": "string"
        },
        "version": {
          "$ref": "Version",
          "description": "Required. The version of the package being described."
        }
      },
      "id": "VulnerabilityLocation",
      "description": "The location of the vulnerability.",
      "type": "object"
    },
    "Location": {
      "id": "Location",
      "properties": {
        "cpeUri": {
          "description": "Deprecated. The CPE URI in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "The path from which we gathered that this package/version is installed."
        },
        "version": {
          "$ref": "Version",
          "description": "Deprecated. The version installed at this location."
        }
      },
      "type": "object",
      "description": "An occurrence of a particular package installation found within a system's filesystem. E.g., glibc was found in `/var/lib/dpkg/status`."
    },
    "Discovered": {
      "description": "Provides information about the analysis status of a discovered resource.",
      "id": "Discovered",
      "properties": {
        "continuousAnalysis": {
          "type": "string",
          "enum": [
            "CONTINUOUS_ANALYSIS_UNSPECIFIED",
            "ACTIVE",
            "INACTIVE"
          ],
          "enumDescriptions": [
            "Unknown.",
            "The resource is continuously analyzed.",
            "The resource is ignored for continuous analysis."
          ],
          "description": "Whether the resource is continuously analyzed."
        },
        "analysisCompleted": {
          "$ref": "AnalysisCompleted"
        },
        "analysisError": {
          "items": {
            "$ref": "Status"
          },
          "description": "Indicates any errors encountered during analysis of a resource. There could be 0 or more of these errors.",
          "type": "array"
        },
        "analysisStatus": {
          "enumDescriptions": [
            "Unknown.",
            "Resource is known but no action has been taken yet.",
            "Resource is being analyzed.",
            "Analysis has finished successfully.",
            "Analysis has completed.",
            "Analysis has finished unsuccessfully, the analysis itself is in a bad state.",
            "The resource is known not to be supported"
          ],
          "description": "The status of discovery for the resource.",
          "type": "string",
          "enum": [
            "ANALYSIS_STATUS_UNSPECIFIED",
            "PENDING",
            "SCANNING",
            "FINISHED_SUCCESS",
            "COMPLETE",
            "FINISHED_FAILED",
            "FINISHED_UNSUPPORTED"
          ]
        },
        "lastAnalysisTime": {
          "type": "string",
          "description": "The last time continuous analysis was done for this resource. Deprecated, do not use.",
          "format": "google-datetime"
        },
        "analysisStatusError": {
          "$ref": "Status",
          "description": "When an error is encountered this will contain a LocalizedMessage under details to show to the user. The LocalizedMessage is output only and populated by the API."
        }
      },
      "type": "object"
    },
    "FixableTotalByDigest": {
      "type": "object",
      "id": "FixableTotalByDigest",
      "description": "Per resource and severity counts of fixable and total vulnerabilities.",
      "properties": {
        "fixableCount": {
          "type": "string",
          "format": "int64",
          "description": "The number of fixable vulnerabilities associated with this resource."
        },
        "totalCount": {
          "format": "int64",
          "type": "string",
          "description": "The total number of vulnerabilities associated with this resource."
        },
        "severity": {
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ],
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "description": "The severity for this count. SEVERITY_UNSPECIFIED indicates total across all severities.",
          "type": "string"
        },
        "resource": {
          "description": "The affected resource.",
          "$ref": "Resource"
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedPythonPackage": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedPythonPackage",
      "properties": {
        "uri": {
          "description": "URI of the uploaded artifact.",
          "type": "string"
        },
        "fileHashes": {
          "description": "Hash types and values of the Python Artifact.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes"
        },
        "pushTiming": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan",
          "readOnly": true,
          "description": "Output only. Stores timing information for pushing the specified artifact."
        }
      },
      "type": "object",
      "description": "Artifact uploaded using the PythonPackage directive."
    },
    "EnvelopeSignature": {
      "properties": {
        "keyid": {
          "type": "string"
        },
        "sig": {
          "format": "byte",
          "type": "string"
        }
      },
      "type": "object",
      "id": "EnvelopeSignature"
    },
    "Link": {
      "type": "object",
      "description": "This corresponds to an in-toto link.",
      "id": "Link",
      "properties": {
        "materials": {
          "type": "array",
          "items": {
            "$ref": "GrafeasV1beta1IntotoArtifact"
          },
          "description": "Materials are the supply chain artifacts that go into the step and are used for the operation performed. The key of the map is the path of the artifact and the structure contains the recorded hash information. An example is: \"materials\": [ { \"resource_uri\": \"foo/bar\", \"hashes\": { \"sha256\": \"ebebf...\", : } } ]"
        },
        "command": {
          "items": {
            "type": "string"
          },
          "description": "This field contains the full command executed for the step. This can also be empty if links are generated for operations that aren't directly mapped to a specific command. Each term in the command is an independent string in the list. An example of a command in the in-toto metadata field is: \"command\": [\"git\", \"clone\", \"https://github.com/in-toto/demo-project.git\"]",
          "type": "array"
        },
        "products": {
          "type": "array",
          "description": "Products are the supply chain artifacts generated as a result of the step. The structure is identical to that of materials.",
          "items": {
            "$ref": "GrafeasV1beta1IntotoArtifact"
          }
        },
        "environment": {
          "description": "This is a field that can be used to capture information about the environment. It is suggested for this field to contain information that details environment variables, filesystem information, and the present working directory. The recommended structure of this field is: \"environment\": { \"custom_values\": { \"variables\": \"\", \"filesystem\": \"\", \"workdir\": \"\", \"\": \"...\" } }",
          "$ref": "Environment"
        },
        "byproducts": {
          "$ref": "ByProducts",
          "description": "ByProducts are data generated as part of a software supply chain step, but are not the actual result of the step."
        }
      }
    },
    "PgpSignedAttestation": {
      "type": "object",
      "id": "PgpSignedAttestation",
      "description": "An attestation wrapper with a PGP-compatible signature. This message only supports `ATTACHED` signatures, where the payload that is signed is included alongside the signature itself in the same file.",
      "properties": {
        "pgpKeyId": {
          "description": "The cryptographic fingerprint of the key used to generate the signature, as output by, e.g. `gpg --list-keys`. This should be the version 4, full 160-bit fingerprint, expressed as a 40 character hexadecimal string. See https://tools.ietf.org/html/rfc4880#section-12.2 for details. Implementations may choose to acknowledge \"LONG\", \"SHORT\", or other abbreviated key IDs, but only the full fingerprint is guaranteed to work. In gpg, the full fingerprint can be retrieved from the `fpr` field returned when calling --list-keys with --with-colons. For example: ``` gpg --with-colons --with-fingerprint --force-v4-certs \\ --list-keys attester@example.com tru::1:1513631572:0:3:1:5 pub:...... fpr:::::::::24FF6481B76AC91E66A00AC657A93A81EF3AE6FB: ``` Above, the fingerprint is `24FF6481B76AC91E66A00AC657A93A81EF3AE6FB`.",
          "type": "string"
        },
        "contentType": {
          "enum": [
            "CONTENT_TYPE_UNSPECIFIED",
            "SIMPLE_SIGNING_JSON"
          ],
          "description": "Type (for example schema) of the attestation payload that was signed. The verifier must ensure that the provided type is one that the verifier supports, and that the attestation payload is a valid instantiation of that type (for example by validating a JSON schema).",
          "enumDescriptions": [
            "`ContentType` is not set.",
            "Atomic format attestation signature. See https://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md The payload extracted from `signature` is a JSON blob conforming to the linked schema."
          ],
          "type": "string"
        },
        "signature": {
          "type": "string",
          "description": "Required. The raw content of the signature, as output by GNU Privacy Guard (GPG) or equivalent. Since this message only supports attached signatures, the payload that was signed must be attached. While the signature format supported is dependent on the verification implementation, currently only ASCII-armored (`--armor` to gpg), non-clearsigned (`--sign` rather than `--clearsign` to gpg) are supported. Concretely, `gpg --sign --armor --output=signature.gpg payload.json` will create the signature content expected in this field in `signature.gpg` for the `payload.json` attestation payload."
        }
      }
    },
    "CloudRepoSourceContext": {
      "type": "object",
      "properties": {
        "aliasContext": {
          "description": "An alias, which may be a branch or tag.",
          "$ref": "AliasContext"
        },
        "repoId": {
          "description": "The ID of the repo.",
          "$ref": "RepoId"
        },
        "revisionId": {
          "description": "A revision ID.",
          "type": "string"
        }
      },
      "id": "CloudRepoSourceContext",
      "description": "A CloudRepoSourceContext denotes a particular revision in a Google Cloud Source Repo."
    },
    "VulnerabilityOccurrencesSummary": {
      "description": "A summary of how many vulnerability occurrences there are per resource and severity type.",
      "id": "VulnerabilityOccurrencesSummary",
      "properties": {
        "counts": {
          "description": "A listing by resource of the number of fixable and total vulnerabilities.",
          "items": {
            "$ref": "FixableTotalByDigest"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Build": {
      "properties": {
        "substitutions": {
          "type": "object",
          "description": "Substitutions data for `Build` resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status": {
          "enumDescriptions": [
            "Status of the build is unknown.",
            "Build has been created and is pending execution and queuing. It has not been queued.",
            "Build or step is queued; work has not yet begun.",
            "Build or step is being executed.",
            "Build or step finished successfully.",
            "Build or step failed to complete successfully.",
            "Build or step failed due to an internal cause.",
            "Build or step took longer than was allowed.",
            "Build or step was canceled by a user.",
            "Build was enqueued for longer than the value of `queue_ttl`."
          ],
          "enum": [
            "STATUS_UNKNOWN",
            "PENDING",
            "QUEUED",
            "WORKING",
            "SUCCESS",
            "FAILURE",
            "INTERNAL_ERROR",
            "TIMEOUT",
            "CANCELLED",
            "EXPIRED"
          ],
          "readOnly": true,
          "description": "Output only. Status of the build.",
          "type": "string"
        },
        "images": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of images to be pushed upon the successful completion of all build steps. The images are pushed using the builder service account's credentials. The digests of the pushed images will be stored in the `Build` resource's results field. If any of the images fail to be pushed, the build status is marked `FAILURE`."
        },
        "failureInfo": {
          "description": "Output only. Contains information about the build when status=FAILURE.",
          "readOnly": true,
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildFailureInfo"
        },
        "tags": {
          "description": "Tags for annotation of a `Build`. These are not docker tags.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "steps": {
          "description": "Required. The operations to be performed on the workspace.",
          "type": "array",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildStep"
          }
        },
        "buildTriggerId": {
          "description": "Output only. The ID of the `BuildTrigger` that triggered this build, if it was triggered automatically.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The 'Build' name with format: `projects/{project}/locations/{location}/builds/{build}`, where {build} is a unique identifier generated by the service."
        },
        "options": {
          "description": "Special options for this build.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions"
        },
        "statusDetail": {
          "type": "string",
          "description": "Output only. Customer-readable message about the current status.",
          "readOnly": true
        },
        "serviceAccount": {
          "type": "string",
          "description": "IAM service account whose credentials will be used at build runtime. Must be of the format `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. ACCOUNT can be email address or uniqueId of the service account. "
        },
        "availableSecrets": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Secrets",
          "description": "Secrets and secret environment variables."
        },
        "source": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Source",
          "description": "The location of the source files to build."
        },
        "startTime": {
          "description": "Output only. Time at which execution of the build was started.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "logsBucket": {
          "type": "string",
          "description": "Google Cloud Storage bucket where logs should be written (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)). Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`."
        },
        "projectId": {
          "readOnly": true,
          "description": "Output only. ID of the project.",
          "type": "string"
        },
        "timing": {
          "description": "Output only. Stores timing information for phases of the build. Valid keys are: * BUILD: time to execute all build steps. * PUSH: time to push all artifacts including docker images and non docker artifacts. * FETCHSOURCE: time to fetch source. * SETUPBUILD: time to set up build. If the build does not specify source or images, these keys will not be included.",
          "additionalProperties": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan"
          },
          "readOnly": true,
          "type": "object"
        },
        "timeout": {
          "format": "google-duration",
          "description": "Amount of time that this build should be allowed to run, to second granularity. If this amount of time elapses, work on the build will cease and the build status will be `TIMEOUT`. `timeout` starts ticking from `startTime`. Default time is 60 minutes.",
          "type": "string"
        },
        "sourceProvenance": {
          "description": "Output only. A permanent fixed identifier for source.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1SourceProvenance",
          "readOnly": true
        },
        "artifacts": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts",
          "description": "Artifacts produced by the build that should be uploaded upon successful completion of all build steps."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. Time at which the request to create the build was received.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "queueTtl": {
          "type": "string",
          "format": "google-duration",
          "description": "TTL in queue for this build. If provided and the build is enqueued longer than this value, the build will expire and the build status will be `EXPIRED`. The TTL starts ticking from create_time."
        },
        "secrets": {
          "description": "Secrets to decrypt using Cloud Key Management Service. Note: Secret Manager is the recommended technique for managing sensitive data with Cloud Build. Use `available_secrets` to configure builds to access secrets from Secret Manager. For instructions, see: https://cloud.google.com/cloud-build/docs/securing-builds/use-secrets",
          "type": "array",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Secret"
          }
        },
        "warnings": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. Non-fatal problems encountered during the execution of the build.",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning"
          }
        },
        "id": {
          "readOnly": true,
          "description": "Output only. Unique identifier of the build.",
          "type": "string"
        },
        "approval": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildApproval",
          "readOnly": true,
          "description": "Output only. Describes this build's approval configuration, status, and result."
        },
        "logUrl": {
          "description": "Output only. URL to logs for this build in Google Cloud Console.",
          "type": "string",
          "readOnly": true
        },
        "finishTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Time at which execution of the build was finished. The difference between finish_time and start_time is the duration of the build's execution."
        },
        "results": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Results",
          "description": "Output only. Results of the build.",
          "readOnly": true
        }
      },
      "description": "A build resource in the Cloud Build API. At a high level, a `Build` describes where to find source code, how to build it (for example, the builder image to run on the source), and where to store the built artifacts. Fields can include the following variables, which will be expanded when the build is created: - $PROJECT_ID: the project ID of the build. - $PROJECT_NUMBER: the project number of the build. - $LOCATION: the location/region of the build. - $BUILD_ID: the autogenerated ID of the build. - $REPO_NAME: the source repository name specified by RepoSource. - $BRANCH_NAME: the branch name specified by RepoSource. - $TAG_NAME: the tag name specified by RepoSource. - $REVISION_ID or $COMMIT_SHA: the commit SHA specified by RepoSource or resolved from the specified branch or tag. - $SHORT_SHA: first 7 characters of $REVISION_ID or $COMMIT_SHA.",
      "type": "object",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Build"
    },
    "Publisher": {
      "type": "object",
      "description": "Publisher contains information about the publisher of this Note.",
      "properties": {
        "name": {
          "description": "Name of the publisher. Examples: 'Google', 'Google Cloud Platform'.",
          "type": "string"
        },
        "issuingAuthority": {
          "type": "string",
          "description": "Provides information about the authority of the issuing party to release the document, in particular, the party's constituency and responsibilities or other obligations."
        },
        "context": {
          "description": "The context or namespace. Contains a URL which is under control of the issuing party and can be used as a globally unique identifier for that issuing party. Example: https://csaf.io",
          "type": "string"
        }
      },
      "id": "Publisher"
    },
    "ListNotesResponse": {
      "id": "ListNotesResponse",
      "type": "object",
      "description": "Response for listing notes.",
      "properties": {
        "notes": {
          "items": {
            "$ref": "Note"
          },
          "description": "The notes requested.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The next pagination token in the list response. It should be used as `page_token` for the following request. An empty value means no more results."
        }
      }
    },
    "FileNote": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Identify the full path and filename that corresponds to the file information in this section"
        },
        "checksum": {
          "items": {
            "type": "string"
          },
          "description": "Provide a unique identifier to match analysis information on each specific file in a package",
          "type": "array"
        },
        "fileType": {
          "description": "This field provides information about the type of file identified",
          "type": "string",
          "enum": [
            "FILE_TYPE_UNSPECIFIED",
            "SOURCE",
            "BINARY",
            "ARCHIVE",
            "APPLICATION",
            "AUDIO",
            "IMAGE",
            "TEXT",
            "VIDEO",
            "DOCUMENTATION",
            "SPDX",
            "OTHER"
          ],
          "enumDescriptions": [
            "Unspecified",
            "The file is human readable source code (.c, .html, etc.)",
            "The file is a compiled object, target image or binary executable (.o, .a, etc.)",
            "The file represents an archive (.tar, .jar, etc.)",
            "The file is associated with a specific application type (MIME type of application/*)",
            "The file is associated with an audio file (MIME type of audio/* , e.g. .mp3)",
            "The file is associated with an picture image file (MIME type of image/*, e.g., .jpg, .gif)",
            "The file is human readable text file (MIME type of text/*)",
            "The file is associated with a video file type (MIME type of video/*)",
            "The file serves as documentation",
            "The file is an SPDX document",
            "The file doesn't fit into the above categories (generated artifacts, data files, etc.)"
          ]
        }
      },
      "id": "FileNote",
      "description": "FileNote represents an SPDX File Information section: https://spdx.github.io/spdx-spec/4-file-information/",
      "type": "object"
    },
    "License": {
      "type": "object",
      "description": "License information.",
      "properties": {
        "expression": {
          "description": "Often a single license can be used to represent the licensing terms. Sometimes it is necessary to include a choice of one or more licenses or some combination of license identifiers. Examples: \"LGPL-2.1-only OR MIT\", \"LGPL-2.1-only AND MIT\", \"GPL-2.0-or-later WITH Bison-exception-2.2\".",
          "type": "string"
        },
        "comments": {
          "type": "string",
          "description": "Comments"
        }
      },
      "id": "License"
    },
    "Basis": {
      "type": "object",
      "description": "Basis describes the base image portion (Note) of the DockerImage relationship. Linked occurrences are derived from this or an equivalent image via: FROM Or an equivalent reference, e.g. a tag of the resource_url.",
      "id": "Basis",
      "properties": {
        "fingerprint": {
          "description": "Required. Immutable. The fingerprint of the base image.",
          "$ref": "Fingerprint"
        },
        "resourceUrl": {
          "type": "string",
          "description": "Required. Immutable. The resource_url for the resource representing the basis of associated occurrence images."
        }
      }
    },
    "BatchCreateOccurrencesRequest": {
      "properties": {
        "occurrences": {
          "type": "array",
          "items": {
            "$ref": "Occurrence"
          },
          "description": "Required. The occurrences to create. Max allowed length is 1000."
        }
      },
      "id": "BatchCreateOccurrencesRequest",
      "type": "object",
      "description": "Request to create occurrences in batch."
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage",
      "description": "An image built by the pipeline.",
      "properties": {
        "name": {
          "description": "Name used to push the container image to Google Container Registry, as presented to `docker push`.",
          "type": "string"
        },
        "pushTiming": {
          "readOnly": true,
          "description": "Output only. Stores timing information for pushing the specified image.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan"
        },
        "digest": {
          "type": "string",
          "description": "Docker Registry 2.0 digest."
        }
      },
      "type": "object"
    },
    "GrafeasV1beta1DiscoveryDetails": {
      "id": "GrafeasV1beta1DiscoveryDetails",
      "description": "Details of a discovery occurrence.",
      "properties": {
        "discovered": {
          "description": "Required. Analysis status for the discovered resource.",
          "$ref": "Discovered"
        }
      },
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      },
      "description": "Request message for `SetIamPolicy` method."
    },
    "Detail": {
      "properties": {
        "cpeUri": {
          "type": "string",
          "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar."
        },
        "vendor": {
          "type": "string",
          "description": "The name of the vendor of the product."
        },
        "isObsolete": {
          "description": "Whether this detail is obsolete. Occurrences are expected not to point to obsolete details.",
          "type": "boolean"
        },
        "packageType": {
          "description": "The type of package; whether native or non native(ruby gems, node.js packages etc).",
          "type": "string"
        },
        "package": {
          "description": "Required. The name of the package where the vulnerability was found.",
          "type": "string"
        },
        "minAffectedVersion": {
          "description": "The min version of the package in which the vulnerability exists.",
          "$ref": "Version"
        },
        "sourceUpdateTime": {
          "format": "google-datetime",
          "description": "The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.",
          "type": "string"
        },
        "maxAffectedVersion": {
          "description": "The max version of the package in which the vulnerability exists.",
          "$ref": "Version"
        },
        "severityName": {
          "type": "string",
          "description": "The severity (eg: distro assigned severity) for this vulnerability."
        },
        "source": {
          "type": "string",
          "description": "The source from which the information in this Detail was obtained."
        },
        "description": {
          "description": "A vendor-specific description of this note.",
          "type": "string"
        },
        "fixedLocation": {
          "$ref": "VulnerabilityLocation",
          "description": "The fix for this specific package version."
        }
      },
      "description": "Identifies all appearances of this vulnerability in the package for a specific distro/location. For example: glibc in cpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2",
      "id": "Detail",
      "type": "object"
    },
    "SigningKey": {
      "description": "This defines the format used to record keys used in the software supply chain. An in-toto link is attested using one or more keys defined in the in-toto layout. An example of this is: { \"key_id\": \"776a00e29f3559e0141b3b096f696abc6cfb0c657ab40f441132b345b0...\", \"key_type\": \"rsa\", \"public_key_value\": \"-----BEGIN PUBLIC KEY-----\\nMIIBojANBgkqhkiG9w0B...\", \"key_scheme\": \"rsassa-pss-sha256\" } The format for in-toto's key definition can be found in section 4.2 of the in-toto specification.",
      "properties": {
        "keyId": {
          "type": "string",
          "description": "key_id is an identifier for the signing key."
        },
        "publicKeyValue": {
          "type": "string",
          "description": "This field contains the actual public key."
        },
        "keyType": {
          "description": "This field identifies the specific signing method. Eg: \"rsa\", \"ed25519\", and \"ecdsa\".",
          "type": "string"
        },
        "keyScheme": {
          "description": "This field contains the corresponding signature scheme. Eg: \"rsassa-pss-sha256\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SigningKey"
    },
    "Distribution": {
      "description": "This represents a particular channel of distribution for a given package. E.g., Debian's jessie-backports dpkg mirror.",
      "id": "Distribution",
      "properties": {
        "maintainer": {
          "type": "string",
          "description": "A freeform string denoting the maintainer of this package."
        },
        "url": {
          "type": "string",
          "description": "The distribution channel-specific homepage for this package."
        },
        "cpeUri": {
          "description": "Required. The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package.",
          "type": "string"
        },
        "description": {
          "description": "The distribution channel-specific description of this package.",
          "type": "string"
        },
        "latestVersion": {
          "$ref": "Version",
          "description": "The latest available version of this package in this distribution channel."
        },
        "architecture": {
          "type": "string",
          "enumDescriptions": [
            "Unknown architecture.",
            "X86 architecture.",
            "X64 architecture."
          ],
          "enum": [
            "ARCHITECTURE_UNSPECIFIED",
            "X86",
            "X64"
          ],
          "description": "The CPU architecture for which packages in this distribution channel were built."
        }
      },
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      },
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "id": "TestIamPermissionsRequest"
    },
    "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata": {
      "description": "Metadata for all operations used and required for all operations that created by Container Analysis Providers",
      "properties": {
        "createTime": {
          "description": "Output only. The time this operation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "description": "Output only. The time that this operation was marked completed or failed.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata",
      "type": "object"
    },
    "Remediation": {
      "id": "Remediation",
      "properties": {
        "remediationTime": {
          "description": "Contains the date from which the remediation is available.",
          "type": "string",
          "format": "google-datetime"
        },
        "details": {
          "type": "string",
          "description": "Contains a comprehensive human-readable discussion of the remediation."
        },
        "remediationType": {
          "enum": [
            "REMEDIATION_TYPE_UNSPECIFIED",
            "MITIGATION",
            "NO_FIX_PLANNED",
            "NONE_AVAILABLE",
            "VENDOR_FIX",
            "WORKAROUND"
          ],
          "enumDescriptions": [
            "No remediation type specified.",
            "A MITIGATION is available.",
            "No fix is planned.",
            "Not available.",
            "A vendor fix is available.",
            "A workaround is available."
          ],
          "description": "The type of remediation that can be applied.",
          "type": "string"
        },
        "remediationUri": {
          "description": "Contains the URL where to obtain the remediation.",
          "$ref": "RelatedUrl"
        }
      },
      "description": "Specifies details on how to handle (and presumably, fix) a vulnerability.",
      "type": "object"
    },
    "VulnerabilityAssessmentNote": {
      "id": "VulnerabilityAssessmentNote",
      "properties": {
        "languageCode": {
          "description": "Identifies the language used by this document, corresponding to IETF BCP 47 / RFC 5646.",
          "type": "string"
        },
        "publisher": {
          "description": "Publisher details of this Note.",
          "$ref": "Publisher"
        },
        "title": {
          "description": "The title of the note. E.g. `Vex-Debian-11.4`",
          "type": "string"
        },
        "longDescription": {
          "description": "A detailed description of this Vex.",
          "type": "string"
        },
        "assessment": {
          "description": "Represents a vulnerability assessment for the product.",
          "$ref": "Assessment"
        },
        "product": {
          "description": "The product affected by this vex.",
          "$ref": "Product"
        },
        "shortDescription": {
          "description": "A one sentence description of this Vex.",
          "type": "string"
        }
      },
      "description": "A single VulnerabilityAssessmentNote represents one particular product's vulnerability assessment for one CVE.",
      "type": "object"
    },
    "GetPolicyOptions": {
      "description": "Encapsulates settings provided to GetIamPolicy.",
      "properties": {
        "requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GetPolicyOptions",
      "type": "object"
    },
    "BuildProvenance": {
      "id": "BuildProvenance",
      "type": "object",
      "properties": {
        "triggerId": {
          "type": "string",
          "description": "Trigger identifier if the build was triggered automatically; empty if not."
        },
        "sourceProvenance": {
          "$ref": "Source",
          "description": "Details of the Source input to the build."
        },
        "projectId": {
          "description": "ID of the project.",
          "type": "string"
        },
        "id": {
          "description": "Required. Unique identifier of the build.",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "description": "Time at which execution of the build was started.",
          "format": "google-datetime"
        },
        "creator": {
          "description": "E-mail address of the user who initiated this build. Note that this was the user's e-mail address at the time the build was initiated; this address may not represent the same end-user for all time.",
          "type": "string"
        },
        "logsUri": {
          "type": "string",
          "description": "URI where any logs for this provenance were written."
        },
        "builderVersion": {
          "type": "string",
          "description": "Version string of the builder at the time this build was executed."
        },
        "createTime": {
          "description": "Time at which the build was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "builtArtifacts": {
          "items": {
            "$ref": "Artifact"
          },
          "type": "array",
          "description": "Output of the build."
        },
        "commands": {
          "description": "Commands requested by the build.",
          "type": "array",
          "items": {
            "$ref": "Command"
          }
        },
        "buildOptions": {
          "description": "Special options applied to this build. This is a catch-all field where build providers can enter any desired additional details.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Time at which execution of the build was finished."
        }
      },
      "description": "Provenance of a build. Contains all information needed to verify the full details about the build from source to completion."
    },
    "PackageInfoNote": {
      "id": "PackageInfoNote",
      "description": "PackageInfoNote represents an SPDX Package Information section: https://spdx.github.io/spdx-spec/3-package-information/",
      "properties": {
        "summaryDescription": {
          "type": "string",
          "description": "A short description of the package"
        },
        "detailedDescription": {
          "description": "A more detailed description of the package",
          "type": "string"
        },
        "checksum": {
          "description": "Provide an independently reproducible mechanism that permits unique identification of a specific package that correlates to the data in this SPDX file",
          "type": "string"
        },
        "copyright": {
          "type": "string",
          "description": "Identify the copyright holders of the package, as well as any dates present"
        },
        "analyzed": {
          "description": "Indicates whether the file content of this package has been available for or subjected to analysis when creating the SPDX document",
          "type": "boolean"
        },
        "packageType": {
          "description": "The type of package: OS, MAVEN, GO, GO_STDLIB, etc.",
          "type": "string"
        },
        "version": {
          "description": "Identify the version of the package",
          "type": "string"
        },
        "attribution": {
          "type": "string",
          "description": "A place for the SPDX data creator to record, at the package level, acknowledgements that may be needed to be communicated in some contexts"
        },
        "homePage": {
          "type": "string",
          "description": "Provide a place for the SPDX file creator to record a web site that serves as the package's home page"
        },
        "verificationCode": {
          "type": "string",
          "description": "This field provides an independently reproducible mechanism identifying specific contents of a package based on the actual files (except the SPDX file itself, if it is included in the package) that make up each package and that correlates to the data in this SPDX file"
        },
        "title": {
          "type": "string",
          "description": "Identify the full name of the package as given by the Package Originator"
        },
        "downloadLocation": {
          "description": "This section identifies the download Universal Resource Locator (URL), or a specific location within a version control system (VCS) for the package at the time that the SPDX file was created",
          "type": "string"
        },
        "originator": {
          "type": "string",
          "description": "If the package identified in the SPDX file originated from a different person or organization than identified as Package Supplier, this field identifies from where or whom the package originally came"
        },
        "filesLicenseInfo": {
          "items": {
            "type": "string"
          },
          "description": "Contain the license the SPDX file creator has concluded as governing the This field is to contain a list of all licenses found in the package. The relationship between licenses (i.e., conjunctive, disjunctive) is not specified in this field – it is simply a listing of all licenses found",
          "type": "array"
        },
        "externalRefs": {
          "type": "array",
          "description": "ExternalRef",
          "items": {
            "$ref": "ExternalRef"
          }
        },
        "licenseDeclared": {
          "description": "List the licenses that have been declared by the authors of the package",
          "$ref": "License"
        },
        "supplier": {
          "description": "Identify the actual distribution source for the package/directory identified in the SPDX file",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret",
      "type": "object",
      "properties": {
        "envMap": {
          "additionalProperties": {
            "format": "byte",
            "type": "string"
          },
          "description": "Map of environment variable name to its encrypted value. Secret environment variables must be unique across all of a build's secrets, and must be used by at least one build step. Values can be at most 64 KB in size. There can be at most 100 secret values across all of a build's secrets.",
          "type": "object"
        },
        "kmsKeyName": {
          "type": "string",
          "description": "Resource name of Cloud KMS crypto key to decrypt the encrypted value. In format: projects/*/locations/*/keyRings/*/cryptoKeys/*"
        }
      },
      "description": "Pairs a set of secret environment variables mapped to encrypted values with the Cloud KMS key to use to decrypt the value."
    },
    "ExternalRef": {
      "id": "ExternalRef",
      "properties": {
        "comment": {
          "type": "string",
          "description": "Human-readable information about the purpose and target of the reference"
        },
        "type": {
          "type": "string",
          "description": "Type of category (e.g. 'npm' for the PACKAGE_MANAGER category)"
        },
        "locator": {
          "type": "string",
          "description": "The unique string with no spaces necessary to access the package-specific information, metadata, or content within the target location"
        },
        "category": {
          "enumDescriptions": [
            "Unspecified",
            "Security (e.g. cpe22Type, cpe23Type)",
            "Package Manager (e.g. maven-central, npm, nuget, bower, purl)",
            "Persistent-Id (e.g. swh)",
            "Other"
          ],
          "description": "An External Reference allows a Package to reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package",
          "type": "string",
          "enum": [
            "CATEGORY_UNSPECIFIED",
            "SECURITY",
            "PACKAGE_MANAGER",
            "PERSISTENT_ID",
            "OTHER"
          ]
        }
      },
      "type": "object",
      "description": "An External Reference allows a Package to reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Volume": {
      "properties": {
        "path": {
          "description": "Path at which to mount the volume. Paths must be absolute and cannot conflict with other volume paths on the same build step or with certain reserved volume paths.",
          "type": "string"
        },
        "name": {
          "description": "Name of the volume to mount. Volume names must be unique per build step and must be valid names for Docker volumes. Each named volume must be used by at least two build steps.",
          "type": "string"
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Volume",
      "type": "object",
      "description": "Volume describes a Docker container volume which is mounted into build steps in order to persist files across build step execution."
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildApproval": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildApproval",
      "properties": {
        "result": {
          "description": "Output only. Result of manual approval for this Build.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "APPROVED",
            "REJECTED",
            "CANCELLED"
          ],
          "description": "Output only. The state of this build's approval.",
          "readOnly": true,
          "enumDescriptions": [
            "Default enum type. This should not be used.",
            "Build approval is pending.",
            "Build approval has been approved.",
            "Build approval has been rejected.",
            "Build was cancelled while it was still pending approval."
          ]
        },
        "config": {
          "readOnly": true,
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalConfig",
          "description": "Output only. Configuration for manual approval of this build."
        }
      },
      "description": "BuildApproval describes a build's approval configuration, state, and result.",
      "type": "object"
    },
    "Installation": {
      "type": "object",
      "description": "This represents how a particular software package may be installed on a system.",
      "properties": {
        "architecture": {
          "type": "string",
          "enum": [
            "ARCHITECTURE_UNSPECIFIED",
            "X86",
            "X64"
          ],
          "description": "Output only. The CPU architecture for which packages in this distribution channel were built. Architecture will be blank for language packages.",
          "readOnly": true,
          "enumDescriptions": [
            "Unknown architecture.",
            "X86 architecture.",
            "X64 architecture."
          ]
        },
        "version": {
          "readOnly": true,
          "$ref": "Version",
          "description": "Output only. The version of the package."
        },
        "license": {
          "description": "Licenses that have been declared by the authors of the package.",
          "$ref": "License"
        },
        "packageType": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The type of package; whether native or non native (e.g., ruby gems, node.js packages, etc.)."
        },
        "location": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "All of the places within the filesystem versions of this package have been found."
        },
        "cpeUri": {
          "type": "string",
          "description": "Output only. The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package. The cpe_uri will be blank for language packages.",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Required. Output only. The name of the installed package."
        }
      },
      "id": "Installation"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Results": {
      "type": "object",
      "description": "Artifacts created by the build pipeline.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Results",
      "properties": {
        "buildStepOutputs": {
          "description": "List of build step outputs, produced by builder images, in the order corresponding to build step indices. [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders) can produce this output by writing to `$BUILDER_OUTPUT/output`. Only the first 4KB of data is stored.",
          "items": {
            "format": "byte",
            "type": "string"
          },
          "type": "array"
        },
        "pythonPackages": {
          "type": "array",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedPythonPackage"
          },
          "description": "Python artifacts uploaded to Artifact Registry at the end of the build."
        },
        "mavenArtifacts": {
          "description": "Maven artifacts uploaded to Artifact Registry at the end of the build.",
          "type": "array",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact"
          }
        },
        "numArtifacts": {
          "format": "int64",
          "description": "Number of non-container artifacts uploaded to Cloud Storage. Only populated when artifacts are uploaded to Cloud Storage.",
          "type": "string"
        },
        "buildStepImages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of build step digests, in the order corresponding to build step indices."
        },
        "artifactManifest": {
          "type": "string",
          "description": "Path to the artifact manifest for non-container artifacts uploaded to Cloud Storage. Only populated when artifacts are uploaded to Cloud Storage."
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage"
          },
          "description": "Container images that were built as a part of the build."
        },
        "artifactTiming": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan",
          "description": "Time to push all non-container artifacts to Cloud Storage."
        }
      }
    },
    "FileHashes": {
      "type": "object",
      "properties": {
        "fileHash": {
          "description": "Required. Collection of file hashes.",
          "type": "array",
          "items": {
            "$ref": "Hash"
          }
        }
      },
      "id": "FileHashes",
      "description": "Container message for hashes of byte content of files, used in source messages to verify integrity of source input to the build."
    },
    "RelatedUrl": {
      "id": "RelatedUrl",
      "description": "Metadata for any related URL information.",
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label to describe usage of the URL."
        },
        "url": {
          "description": "Specific URL associated with the resource.",
          "type": "string"
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "URI of the uploaded artifact."
        },
        "fileHashes": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes",
          "description": "Hash types and values of the Maven Artifact."
        },
        "pushTiming": {
          "readOnly": true,
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan",
          "description": "Output only. Stores timing information for pushing the specified artifact."
        }
      },
      "description": "A Maven artifact uploaded using the MavenArtifact directive.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact"
    },
    "Fingerprint": {
      "id": "Fingerprint",
      "description": "A set of properties that uniquely identify a given Docker image.",
      "type": "object",
      "properties": {
        "v2Name": {
          "type": "string",
          "description": "Output only. The name of the image's v2 blobs computed via: [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1]) Only the name of the final blob is kept."
        },
        "v2Blob": {
          "type": "array",
          "description": "Required. The ordered list of v2 blobs that represent a given image.",
          "items": {
            "type": "string"
          }
        },
        "v1Name": {
          "description": "Required. The layer ID of the final layer in the Docker image's v1 representation.",
          "type": "string"
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Hash": {
      "description": "Container message for hash values.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Hash",
      "properties": {
        "type": {
          "enum": [
            "NONE",
            "SHA256",
            "MD5"
          ],
          "description": "The type of hash that was performed.",
          "type": "string",
          "enumDescriptions": [
            "No hash requested.",
            "Use a sha256 hash.",
            "Use a md5 hash."
          ]
        },
        "value": {
          "description": "The hash value.",
          "format": "byte",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ByProducts": {
      "id": "ByProducts",
      "description": "Defines an object for the byproducts field in in-toto links. The suggested fields are \"stderr\", \"stdout\", and \"return-value\".",
      "properties": {
        "customValues": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest",
      "properties": {
        "generation": {
          "description": "Google Cloud Storage generation for the object. If the generation is omitted, the latest generation will be used.",
          "format": "int64",
          "type": "string"
        },
        "bucket": {
          "description": "Google Cloud Storage bucket containing the source manifest (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).",
          "type": "string"
        },
        "object": {
          "type": "string",
          "description": "Google Cloud Storage object containing the source manifest. This object must be a JSON file."
        }
      },
      "type": "object",
      "description": "Location of the source manifest in Google Cloud Storage. This feature is in Preview; see description [here](https://github.com/GoogleCloudPlatform/cloud-builders/tree/master/gcs-fetcher)."
    },
    "BatchCreateNotesRequest": {
      "properties": {
        "notes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "Note"
          },
          "description": "Required. The notes to create, the key is expected to be the note ID. Max allowed length is 1000."
        }
      },
      "description": "Request to create notes in batch.",
      "type": "object",
      "id": "BatchCreateNotesRequest"
    },
    "SourceContext": {
      "properties": {
        "gerrit": {
          "$ref": "GerritSourceContext",
          "description": "A SourceContext referring to a Gerrit project."
        },
        "cloudRepo": {
          "$ref": "CloudRepoSourceContext",
          "description": "A SourceContext referring to a revision in a Google Cloud Source Repo."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels with user defined metadata."
        },
        "git": {
          "description": "A SourceContext referring to any third party Git repo (e.g., GitHub).",
          "$ref": "GitSourceContext"
        }
      },
      "type": "object",
      "id": "SourceContext",
      "description": "A SourceContext is a reference to a tree of files. A SourceContext together with a path point to a unique revision of a single file or directory."
    },
    "KnowledgeBase": {
      "properties": {
        "url": {
          "description": "A link to the KB in the Windows update catalog - https://www.catalog.update.microsoft.com/",
          "type": "string"
        },
        "name": {
          "description": "The KB name (generally of the form KB[0-9]+ i.e. KB123456).",
          "type": "string"
        }
      },
      "id": "KnowledgeBase",
      "type": "object"
    },
    "Note": {
      "type": "object",
      "properties": {
        "discovery": {
          "description": "A note describing the initial analysis of a resource.",
          "$ref": "Discovery"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time this note was last updated. This field can be used as a filter in list requests."
        },
        "shortDescription": {
          "type": "string",
          "description": "A one sentence description of this note."
        },
        "relatedUrl": {
          "items": {
            "$ref": "RelatedUrl"
          },
          "description": "URLs associated with this note.",
          "type": "array"
        },
        "vulnerability": {
          "$ref": "Vulnerability",
          "description": "A note describing a package vulnerability."
        },
        "kind": {
          "description": "Output only. The type of analysis. This field can be used as a filter in list requests.",
          "enum": [
            "NOTE_KIND_UNSPECIFIED",
            "VULNERABILITY",
            "BUILD",
            "IMAGE",
            "PACKAGE",
            "DEPLOYMENT",
            "DISCOVERY",
            "ATTESTATION",
            "INTOTO",
            "SBOM",
            "SPDX_PACKAGE",
            "SPDX_FILE",
            "SPDX_RELATIONSHIP",
            "VULNERABILITY_ASSESSMENT"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The note and occurrence represent a package vulnerability.",
            "The note and occurrence assert build provenance.",
            "This represents an image basis relationship.",
            "This represents a package installed via a package manager.",
            "The note and occurrence track deployment events.",
            "The note and occurrence track the initial discovery status of a resource.",
            "This represents a logical \"role\" that can attest to artifacts.",
            "This represents an in-toto link.",
            "This represents a software bill of materials.",
            "This represents an SPDX Package.",
            "This represents an SPDX File.",
            "This represents an SPDX Relationship.",
            "This represents a Vulnerability Assessment."
          ],
          "type": "string"
        },
        "spdxFile": {
          "$ref": "FileNote",
          "description": "A note describing an SPDX File."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time this note was created. This field can be used as a filter in list requests.",
          "format": "google-datetime"
        },
        "deployable": {
          "description": "A note describing something that can be deployed.",
          "$ref": "Deployable"
        },
        "intoto": {
          "description": "A note describing an in-toto link.",
          "$ref": "InToto"
        },
        "baseImage": {
          "$ref": "Basis",
          "description": "A note describing a base image."
        },
        "sbom": {
          "description": "A note describing a software bill of materials.",
          "$ref": "DocumentNote"
        },
        "longDescription": {
          "type": "string",
          "description": "A detailed description of this note."
        },
        "relatedNoteNames": {
          "description": "Other notes related to this note.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vulnerabilityAssessment": {
          "description": "A note describing a vulnerability assessment.",
          "$ref": "VulnerabilityAssessmentNote"
        },
        "attestationAuthority": {
          "description": "A note describing an attestation role.",
          "$ref": "Authority"
        },
        "spdxRelationship": {
          "description": "A note describing an SPDX File.",
          "$ref": "RelationshipNote"
        },
        "expirationTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Time of expiration for this note. Empty if note does not expire."
        },
        "spdxPackage": {
          "description": "A note describing an SPDX Package.",
          "$ref": "PackageInfoNote"
        },
        "package": {
          "description": "A note describing a package hosted by various package managers.",
          "$ref": "Package"
        },
        "name": {
          "description": "Output only. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.",
          "type": "string"
        },
        "build": {
          "description": "A note describing build provenance for a verifiable build.",
          "$ref": "Build"
        }
      },
      "id": "Note",
      "description": "A type of analysis that can be done for a resource."
    },
    "GenericSignedAttestation": {
      "properties": {
        "contentType": {
          "enumDescriptions": [
            "`ContentType` is not set.",
            "Atomic format attestation signature. See https://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md The payload extracted in `plaintext` is a JSON blob conforming to the linked schema."
          ],
          "description": "Type (for example schema) of the attestation payload that was signed. The verifier must ensure that the provided type is one that the verifier supports, and that the attestation payload is a valid instantiation of that type (for example by validating a JSON schema).",
          "type": "string",
          "enum": [
            "CONTENT_TYPE_UNSPECIFIED",
            "SIMPLE_SIGNING_JSON"
          ]
        },
        "signatures": {
          "type": "array",
          "description": "One or more signatures over `serialized_payload`. Verifier implementations should consider this attestation message verified if at least one `signature` verifies `serialized_payload`. See `Signature` in common.proto for more details on signature structure and verification.",
          "items": {
            "$ref": "Signature"
          }
        },
        "serializedPayload": {
          "format": "byte",
          "description": "The serialized payload that is verified by one or more `signatures`. The encoding and semantic meaning of this payload must match what is set in `content_type`.",
          "type": "string"
        }
      },
      "description": "An attestation wrapper that uses the Grafeas `Signature` message. This attestation must define the `serialized_payload` that the `signatures` verify and any metadata necessary to interpret that plaintext. The signatures should always be over the `serialized_payload` bytestring.",
      "id": "GenericSignedAttestation",
      "type": "object"
    },
    "ProjectRepoId": {
      "properties": {
        "projectId": {
          "description": "The ID of the project.",
          "type": "string"
        },
        "repoName": {
          "type": "string",
          "description": "The name of the repo. Leave empty for the default repo."
        }
      },
      "description": "Selects a repo using a Google Cloud Platform project ID (e.g., winged-cargo-31) and a repo name within that project.",
      "type": "object",
      "id": "ProjectRepoId"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret": {
      "type": "object",
      "description": "Pairs a secret environment variable with a SecretVersion in Secret Manager.",
      "properties": {
        "env": {
          "type": "string",
          "description": "Environment variable name to associate with the secret. Secret environment variables must be unique across all of a build's secrets, and must be used by at least one build step."
        },
        "versionName": {
          "description": "Resource name of the SecretVersion. In format: projects/*/secrets/*/versions/*",
          "type": "string"
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret"
    },
    "RelationshipNote": {
      "id": "RelationshipNote",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "RELATIONSHIP_TYPE_UNSPECIFIED",
            "DESCRIBES",
            "DESCRIBED_BY",
            "CONTAINS",
            "CONTAINED_BY",
            "DEPENDS_ON",
            "DEPENDENCY_OF",
            "DEPENDENCY_MANIFEST_OF",
            "BUILD_DEPENDENCY_OF",
            "DEV_DEPENDENCY_OF",
            "OPTIONAL_DEPENDENCY_OF",
            "PROVIDED_DEPENDENCY_OF",
            "TEST_DEPENDENCY_OF",
            "RUNTIME_DEPENDENCY_OF",
            "EXAMPLE_OF",
            "GENERATES",
            "GENERATED_FROM",
            "ANCESTOR_OF",
            "DESCENDANT_OF",
            "VARIANT_OF",
            "DISTRIBUTION_ARTIFACT",
            "PATCH_FOR",
            "PATCH_APPLIED",
            "COPY_OF",
            "FILE_ADDED",
            "FILE_DELETED",
            "FILE_MODIFIED",
            "EXPANDED_FROM_ARCHIVE",
            "DYNAMIC_LINK",
            "STATIC_LINK",
            "DATA_FILE_OF",
            "TEST_CASE_OF",
            "BUILD_TOOL_OF",
            "DEV_TOOL_OF",
            "TEST_OF",
            "TEST_TOOL_OF",
            "DOCUMENTATION_OF",
            "OPTIONAL_COMPONENT_OF",
            "METAFILE_OF",
            "PACKAGE_OF",
            "AMENDS",
            "PREREQUISITE_FOR",
            "HAS_PREREQUISITE",
            "OTHER"
          ],
          "description": "The type of relationship between the source and target SPDX elements",
          "enumDescriptions": [
            "Unspecified",
            "Is to be used when SPDXRef-DOCUMENT describes SPDXRef-A",
            "Is to be used when SPDXRef-A is described by SPDXREF-Document",
            "Is to be used when SPDXRef-A contains SPDXRef-B",
            "Is to be used when SPDXRef-A is contained by SPDXRef-B",
            "Is to be used when SPDXRef-A depends on SPDXRef-B",
            "Is to be used when SPDXRef-A is dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a manifest file that lists a set of dependencies for SPDXRef-B",
            "Is to be used when SPDXRef-A is a build dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a development dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is an optional dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a to be provided dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a test dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a dependency required for the execution of SPDXRef-B",
            "Is to be used when SPDXRef-A is an example of SPDXRef-B",
            "Is to be used when SPDXRef-A generates SPDXRef-B",
            "Is to be used when SPDXRef-A was generated from SPDXRef-B",
            "Is to be used when SPDXRef-A is an ancestor (same lineage but pre-dates) SPDXRef-B",
            "Is to be used when SPDXRef-A is a descendant of (same lineage but postdates) SPDXRef-B",
            "Is to be used when SPDXRef-A is a variant of (same lineage but not clear which came first) SPDXRef-B",
            "Is to be used when distributing SPDXRef-A requires that SPDXRef-B also be distributed",
            "Is to be used when SPDXRef-A is a patch file for (to be applied to) SPDXRef-B",
            "Is to be used when SPDXRef-A is a patch file that has been applied to SPDXRef-B",
            "Is to be used when SPDXRef-A is an exact copy of SPDXRef-B",
            "Is to be used when SPDXRef-A is a file that was added to SPDXRef-B",
            "Is to be used when SPDXRef-A is a file that was deleted from SPDXRef-B",
            "Is to be used when SPDXRef-A is a file that was modified from SPDXRef-B",
            "Is to be used when SPDXRef-A is expanded from the archive SPDXRef-B",
            "Is to be used when SPDXRef-A dynamically links to SPDXRef-B",
            "Is to be used when SPDXRef-A statically links to SPDXRef-B",
            "Is to be used when SPDXRef-A is a data file used in SPDXRef-B",
            "Is to be used when SPDXRef-A is a test case used in testing SPDXRef-B",
            "Is to be used when SPDXRef-A is used to build SPDXRef-B",
            "Is to be used when SPDXRef-A is used as a development tool for SPDXRef-B",
            "Is to be used when SPDXRef-A is used for testing SPDXRef-B",
            "Is to be used when SPDXRef-A is used as a test tool for SPDXRef-B",
            "Is to be used when SPDXRef-A provides documentation of SPDXRef-B",
            "Is to be used when SPDXRef-A is an optional component of SPDXRef-B",
            "Is to be used when SPDXRef-A is a metafile of SPDXRef-B",
            "Is to be used when SPDXRef-A is used as a package as part of SPDXRef-B",
            "Is to be used when (current) SPDXRef-DOCUMENT amends the SPDX information in SPDXRef-B",
            "Is to be used when SPDXRef-A is a prerequisite for SPDXRef-B",
            "Is to be used when SPDXRef-A has as a prerequisite SPDXRef-B",
            "Is to be used for a relationship which has not been defined in the formal SPDX specification. A description of the relationship should be included in the Relationship comments field"
          ]
        }
      },
      "description": "RelationshipNote represents an SPDX Relationship section: https://spdx.github.io/spdx-spec/7-relationships-between-SPDX-elements/"
    },
    "CVSSv3": {
      "description": "Deprecated. Common Vulnerability Scoring System version 3. For details, see https://www.first.org/cvss/specification-document",
      "properties": {
        "exploitabilityScore": {
          "type": "number",
          "format": "float"
        },
        "baseScore": {
          "format": "float",
          "description": "The base score is a function of the base metric scores.",
          "type": "number"
        },
        "impactScore": {
          "type": "number",
          "format": "float"
        },
        "attackVector": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments.",
          "enum": [
            "ATTACK_VECTOR_UNSPECIFIED",
            "ATTACK_VECTOR_NETWORK",
            "ATTACK_VECTOR_ADJACENT",
            "ATTACK_VECTOR_LOCAL",
            "ATTACK_VECTOR_PHYSICAL"
          ]
        },
        "integrityImpact": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ]
        },
        "confidentialityImpact": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ]
        },
        "privilegesRequired": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "PRIVILEGES_REQUIRED_UNSPECIFIED",
            "PRIVILEGES_REQUIRED_NONE",
            "PRIVILEGES_REQUIRED_LOW",
            "PRIVILEGES_REQUIRED_HIGH"
          ]
        },
        "scope": {
          "enum": [
            "SCOPE_UNSPECIFIED",
            "SCOPE_UNCHANGED",
            "SCOPE_CHANGED"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        },
        "availabilityImpact": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ]
        },
        "userInteraction": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "USER_INTERACTION_UNSPECIFIED",
            "USER_INTERACTION_NONE",
            "USER_INTERACTION_REQUIRED"
          ],
          "type": "string"
        },
        "attackComplexity": {
          "enum": [
            "ATTACK_COMPLEXITY_UNSPECIFIED",
            "ATTACK_COMPLEXITY_LOW",
            "ATTACK_COMPLEXITY_HIGH"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        }
      },
      "type": "object",
      "id": "CVSSv3"
    },
    "Derived": {
      "description": "Derived describes the derived image portion (Occurrence) of the DockerImage relationship. This image would be produced from a Dockerfile with FROM .",
      "properties": {
        "fingerprint": {
          "description": "Required. The fingerprint of the derived image.",
          "$ref": "Fingerprint"
        },
        "distance": {
          "format": "int32",
          "type": "integer",
          "description": "Output only. The number of layers by which this image differs from the associated image basis."
        },
        "layerInfo": {
          "type": "array",
          "description": "This contains layer-specific metadata, if populated it has length \"distance\" and is ordered with [distance] being the layer immediately following the base image and [1] being the final layer.",
          "items": {
            "$ref": "Layer"
          }
        },
        "baseResourceUrl": {
          "type": "string",
          "description": "Output only. This contains the base image URL for the derived image occurrence."
        }
      },
      "id": "Derived",
      "type": "object"
    }
  },
  "documentationLink": "https://cloud.google.com/container-analysis/api/reference/rest/",
  "baseUrl": "https://containeranalysis.googleapis.com/",
  "discoveryVersion": "v1",
  "canonicalName": "Container Analysis",
  "id": "containeranalysis:v1beta1",
  "ownerName": "Google",
  "revision": "20230303",
  "kind": "discovery#restDescription",
  "rootUrl": "https://containeranalysis.googleapis.com/",
  "version": "v1beta1",
  "name": "containeranalysis",
  "fullyEncodeReservedExpansion": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "mtlsRootUrl": "https://containeranalysis.mtls.googleapis.com/",
  "protocol": "rest",
  "parameters": {
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    }
  },
  "batchPath": "batch"
}

{
  "name": "containeranalysis",
  "description": "An implementation of the Grafeas API, which stores, and enables querying and retrieval of critical metadata about all of your software artifacts.",
  "batchPath": "batch",
  "parameters": {
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "description": "Data format for response.",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true",
      "type": "boolean"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    }
  },
  "protocol": "rest",
  "revision": "20220923",
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "version": "v1beta1",
  "ownerDomain": "google.com",
  "mtlsRootUrl": "https://containeranalysis.mtls.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "scanConfigs": {
          "methods": {
            "list": {
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "The number of scan configs to return in the list."
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Token to provide to skip to a particular spot in the list."
                },
                "filter": {
                  "description": "Required. The filter expression.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the project to list scan configurations for in the form of `projects/[PROJECT_ID]`.",
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists scan configurations for the specified project.",
              "response": {
                "$ref": "ListScanConfigsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "id": "containeranalysis.projects.scanConfigs.list",
              "path": "v1beta1/{+parent}/scanConfigs",
              "flatPath": "v1beta1/projects/{projectsId}/scanConfigs"
            },
            "get": {
              "id": "containeranalysis.projects.scanConfigs.get",
              "description": "Gets the specified scan configuration.",
              "response": {
                "$ref": "ScanConfig"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/scanConfigs/[^/]+$",
                  "description": "Required. The name of the scan configuration in the form of `projects/[PROJECT_ID]/scanConfigs/[SCAN_CONFIG_ID]`.",
                  "location": "path"
                }
              },
              "path": "v1beta1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "flatPath": "v1beta1/projects/{projectsId}/scanConfigs/{scanConfigsId}"
            },
            "update": {
              "httpMethod": "PUT",
              "path": "v1beta1/{+name}",
              "description": "Updates the specified scan configuration.",
              "flatPath": "v1beta1/projects/{projectsId}/scanConfigs/{scanConfigsId}",
              "request": {
                "$ref": "ScanConfig"
              },
              "response": {
                "$ref": "ScanConfig"
              },
              "id": "containeranalysis.projects.scanConfigs.update",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/scanConfigs/[^/]+$",
                  "description": "Required. The name of the scan configuration in the form of `projects/[PROJECT_ID]/scanConfigs/[SCAN_CONFIG_ID]`.",
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ]
            }
          }
        },
        "notes": {
          "resources": {
            "occurrences": {
              "methods": {
                "list": {
                  "parameters": {
                    "filter": {
                      "description": "The filter expression.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "Number of occurrences to return in the list.",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Required. The name of the note to list occurrences for in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/notes/[^/]+$",
                      "required": true
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Token to provide to skip to a particular spot in the list."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListNoteOccurrencesResponse"
                  },
                  "id": "containeranalysis.projects.notes.occurrences.list",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}/occurrences",
                  "path": "v1beta1/{+name}/occurrences",
                  "description": "Lists occurrences referencing the specified note. Provider projects can use this method to get all occurrences across consumer projects referencing the specified note."
                }
              }
            }
          },
          "methods": {
            "batchCreate": {
              "parameterOrder": [
                "parent"
              ],
              "id": "containeranalysis.projects.notes.batchCreate",
              "httpMethod": "POST",
              "description": "Creates new notes in batch.",
              "flatPath": "v1beta1/projects/{projectsId}/notes:batchCreate",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the project in the form of `projects/[PROJECT_ID]`, under which the notes are to be created.",
                  "type": "string"
                }
              },
              "path": "v1beta1/{+parent}/notes:batchCreate",
              "response": {
                "$ref": "BatchCreateNotesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "BatchCreateNotesRequest"
              }
            },
            "setIamPolicy": {
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}:setIamPolicy",
              "parameters": {
                "resource": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/notes/[^/]+$",
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Policy"
              },
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "description": "Sets the access control policy on the specified note or occurrence. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or an occurrence, respectively. The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "httpMethod": "POST",
              "id": "containeranalysis.projects.notes.setIamPolicy",
              "parameterOrder": [
                "resource"
              ],
              "path": "v1beta1/{+resource}:setIamPolicy"
            },
            "create": {
              "parameterOrder": [
                "parent"
              ],
              "description": "Creates a new note.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "Note"
              },
              "parameters": {
                "noteId": {
                  "description": "Required. The ID to use for this note.",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the project in the form of `projects/[PROJECT_ID]`, under which the note is to be created.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Note"
              },
              "id": "containeranalysis.projects.notes.create",
              "flatPath": "v1beta1/projects/{projectsId}/notes",
              "httpMethod": "POST",
              "path": "v1beta1/{+parent}/notes"
            },
            "delete": {
              "httpMethod": "DELETE",
              "id": "containeranalysis.projects.notes.delete",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/notes/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`."
                }
              },
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}",
              "path": "v1beta1/{+name}",
              "description": "Deletes the specified note.",
              "response": {
                "$ref": "Empty"
              }
            },
            "testIamPermissions": {
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "path": "v1beta1/{+resource}:testIamPermissions",
              "id": "containeranalysis.projects.notes.testIamPermissions",
              "description": "Returns the permissions that a caller has on the specified note or occurrence. Requires list permission on the project (for example, `containeranalysis.notes.list`). The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}:testIamPermissions",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "parameters": {
                "resource": {
                  "pattern": "^projects/[^/]+/notes/[^/]+$",
                  "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              }
            },
            "list": {
              "parameters": {
                "filter": {
                  "type": "string",
                  "description": "The filter expression.",
                  "location": "query"
                },
                "pageToken": {
                  "description": "Token to provide to skip to a particular spot in the list.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "description": "Number of notes to return in the list. Must be positive. Max allowed page size is 1000. If not specified, page size defaults to 20.",
                  "location": "query",
                  "type": "integer"
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The name of the project to list notes for in the form of `projects/[PROJECT_ID]`.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "flatPath": "v1beta1/projects/{projectsId}/notes",
              "path": "v1beta1/{+parent}/notes",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists notes for the specified project.",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListNotesResponse"
              },
              "id": "containeranalysis.projects.notes.list"
            },
            "patch": {
              "response": {
                "$ref": "Note"
              },
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask",
                  "description": "The fields to update."
                },
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/notes/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`."
                }
              },
              "id": "containeranalysis.projects.notes.patch",
              "httpMethod": "PATCH",
              "description": "Updates the specified note.",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}",
              "request": {
                "$ref": "Note"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "getIamPolicy": {
              "description": "Gets the access control policy for a note or an occurrence resource. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or occurrence, respectively. The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "response": {
                "$ref": "Policy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "containeranalysis.projects.notes.getIamPolicy",
              "request": {
                "$ref": "GetIamPolicyRequest"
              },
              "httpMethod": "POST",
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}:getIamPolicy",
              "parameters": {
                "resource": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "pattern": "^projects/[^/]+/notes/[^/]+$"
                }
              },
              "path": "v1beta1/{+resource}:getIamPolicy",
              "parameterOrder": [
                "resource"
              ]
            },
            "get": {
              "id": "containeranalysis.projects.notes.get",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/notes/[^/]+$"
                }
              },
              "response": {
                "$ref": "Note"
              },
              "path": "v1beta1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the specified note.",
              "flatPath": "v1beta1/projects/{projectsId}/notes/{notesId}",
              "parameterOrder": [
                "name"
              ]
            }
          }
        },
        "occurrences": {
          "methods": {
            "getIamPolicy": {
              "path": "v1beta1/{+resource}:getIamPolicy",
              "httpMethod": "POST",
              "parameterOrder": [
                "resource"
              ],
              "request": {
                "$ref": "GetIamPolicyRequest"
              },
              "response": {
                "$ref": "Policy"
              },
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "id": "containeranalysis.projects.occurrences.getIamPolicy",
              "description": "Gets the access control policy for a note or an occurrence resource. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or occurrence, respectively. The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}:getIamPolicy",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "delete": {
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}",
              "path": "v1beta1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Deletes the specified occurrence. For example, use this method to delete an occurrence when the occurrence is no longer applicable for the given resource.",
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "id": "containeranalysis.projects.occurrences.delete"
            },
            "getVulnerabilitySummary": {
              "id": "containeranalysis.projects.occurrences.getVulnerabilitySummary",
              "path": "v1beta1/{+parent}/occurrences:vulnerabilitySummary",
              "description": "Gets a summary of the number and severity of occurrences.",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences:vulnerabilitySummary",
              "response": {
                "$ref": "VulnerabilityOccurrencesSummary"
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. The name of the project to get a vulnerability summary for in the form of `projects/[PROJECT_ID]`.",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "filter": {
                  "type": "string",
                  "description": "The filter expression.",
                  "location": "query"
                }
              },
              "httpMethod": "GET"
            },
            "patch": {
              "path": "v1beta1/{+name}",
              "description": "Updates the specified occurrence.",
              "httpMethod": "PATCH",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}",
              "parameterOrder": [
                "name"
              ],
              "id": "containeranalysis.projects.occurrences.patch",
              "response": {
                "$ref": "Occurrence"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "Occurrence"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$",
                  "type": "string",
                  "description": "Required. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.",
                  "required": true
                },
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "type": "string",
                  "description": "The fields to update."
                }
              }
            },
            "get": {
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}",
              "description": "Gets the specified occurrence.",
              "parameterOrder": [
                "name"
              ],
              "path": "v1beta1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Occurrence"
              },
              "id": "containeranalysis.projects.occurrences.get",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.",
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$",
                  "type": "string"
                }
              },
              "httpMethod": "GET"
            },
            "setIamPolicy": {
              "path": "v1beta1/{+resource}:setIamPolicy",
              "response": {
                "$ref": "Policy"
              },
              "description": "Sets the access control policy on the specified note or occurrence. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or an occurrence, respectively. The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                }
              },
              "parameterOrder": [
                "resource"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}:setIamPolicy",
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "id": "containeranalysis.projects.occurrences.setIamPolicy",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "getNotes": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.",
                  "type": "string"
                }
              },
              "description": "Gets the note attached to the specified occurrence. Consumer projects can use this method to get a note that belongs to a provider project.",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}/notes",
              "id": "containeranalysis.projects.occurrences.getNotes",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "path": "v1beta1/{+name}/notes",
              "response": {
                "$ref": "Note"
              }
            },
            "batchCreate": {
              "parameters": {
                "parent": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The name of the project in the form of `projects/[PROJECT_ID]`, under which the occurrences are to be created."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/occurrences:batchCreate",
              "path": "v1beta1/{+parent}/occurrences:batchCreate",
              "response": {
                "$ref": "BatchCreateOccurrencesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "description": "Creates new occurrences in batch.",
              "request": {
                "$ref": "BatchCreateOccurrencesRequest"
              },
              "id": "containeranalysis.projects.occurrences.batchCreate",
              "httpMethod": "POST"
            },
            "testIamPermissions": {
              "path": "v1beta1/{+resource}:testIamPermissions",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "parameterOrder": [
                "resource"
              ],
              "parameters": {
                "resource": {
                  "required": true,
                  "pattern": "^projects/[^/]+/occurrences/[^/]+$",
                  "type": "string",
                  "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "id": "containeranalysis.projects.occurrences.testIamPermissions",
              "description": "Returns the permissions that a caller has on the specified note or occurrence. Requires list permission on the project (for example, `containeranalysis.notes.list`). The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.",
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "flatPath": "v1beta1/projects/{projectsId}/occurrences/{occurrencesId}:testIamPermissions"
            },
            "list": {
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the project to list occurrences for in the form of `projects/[PROJECT_ID]`."
                },
                "pageSize": {
                  "description": "Number of occurrences to return in the list. Must be positive. Max allowed page size is 1000. If not specified, page size defaults to 20.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                },
                "filter": {
                  "description": "The filter expression.",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Token to provide to skip to a particular spot in the list."
                }
              },
              "id": "containeranalysis.projects.occurrences.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists occurrences for the specified project.",
              "flatPath": "v1beta1/projects/{projectsId}/occurrences",
              "path": "v1beta1/{+parent}/occurrences",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListOccurrencesResponse"
              }
            },
            "create": {
              "id": "containeranalysis.projects.occurrences.create",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "Occurrence"
              },
              "flatPath": "v1beta1/projects/{projectsId}/occurrences",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "description": "Creates a new occurrence.",
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The name of the project in the form of `projects/[PROJECT_ID]`, under which the occurrence is to be created.",
                  "required": true,
                  "location": "path"
                }
              },
              "path": "v1beta1/{+parent}/occurrences",
              "response": {
                "$ref": "Occurrence"
              }
            }
          }
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "canonicalName": "Container Analysis",
  "title": "Container Analysis API",
  "ownerName": "Google",
  "basePath": "",
  "rootUrl": "https://containeranalysis.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://containeranalysis.googleapis.com/",
  "schemas": {
    "AnalysisCompleted": {
      "id": "AnalysisCompleted",
      "type": "object",
      "properties": {
        "analysisType": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Indicates which analysis completed successfully. Multiple types of analysis can be performed on a single resource."
    },
    "RelationshipOccurrence": {
      "id": "RelationshipOccurrence",
      "description": "RelationshipOccurrence represents an SPDX Relationship section: https://spdx.github.io/spdx-spec/7-relationships-between-SPDX-elements/",
      "properties": {
        "target": {
          "description": "Also referred to as SPDXRef-B The target SPDC element (file, package, etc) In cases where there are \"known unknowns\", the use of the keyword NOASSERTION can be used The keywords NONE can be used to indicate that an SPDX element (package/file/snippet) has no other elements connected by some relationship to it",
          "type": "string"
        },
        "comment": {
          "description": "A place for the SPDX file creator to record any general comments about the relationship",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "Unspecified",
            "Is to be used when SPDXRef-DOCUMENT describes SPDXRef-A",
            "Is to be used when SPDXRef-A is described by SPDXREF-Document",
            "Is to be used when SPDXRef-A contains SPDXRef-B",
            "Is to be used when SPDXRef-A is contained by SPDXRef-B",
            "Is to be used when SPDXRef-A depends on SPDXRef-B",
            "Is to be used when SPDXRef-A is dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a manifest file that lists a set of dependencies for SPDXRef-B",
            "Is to be used when SPDXRef-A is a build dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a development dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is an optional dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a to be provided dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a test dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a dependency required for the execution of SPDXRef-B",
            "Is to be used when SPDXRef-A is an example of SPDXRef-B",
            "Is to be used when SPDXRef-A generates SPDXRef-B",
            "Is to be used when SPDXRef-A was generated from SPDXRef-B",
            "Is to be used when SPDXRef-A is an ancestor (same lineage but pre-dates) SPDXRef-B",
            "Is to be used when SPDXRef-A is a descendant of (same lineage but postdates) SPDXRef-B",
            "Is to be used when SPDXRef-A is a variant of (same lineage but not clear which came first) SPDXRef-B",
            "Is to be used when distributing SPDXRef-A requires that SPDXRef-B also be distributed",
            "Is to be used when SPDXRef-A is a patch file for (to be applied to) SPDXRef-B",
            "Is to be used when SPDXRef-A is a patch file that has been applied to SPDXRef-B",
            "Is to be used when SPDXRef-A is an exact copy of SPDXRef-B",
            "Is to be used when SPDXRef-A is a file that was added to SPDXRef-B",
            "Is to be used when SPDXRef-A is a file that was deleted from SPDXRef-B",
            "Is to be used when SPDXRef-A is a file that was modified from SPDXRef-B",
            "Is to be used when SPDXRef-A is expanded from the archive SPDXRef-B",
            "Is to be used when SPDXRef-A dynamically links to SPDXRef-B",
            "Is to be used when SPDXRef-A statically links to SPDXRef-B",
            "Is to be used when SPDXRef-A is a data file used in SPDXRef-B",
            "Is to be used when SPDXRef-A is a test case used in testing SPDXRef-B",
            "Is to be used when SPDXRef-A is used to build SPDXRef-B",
            "Is to be used when SPDXRef-A is used as a development tool for SPDXRef-B",
            "Is to be used when SPDXRef-A is used for testing SPDXRef-B",
            "Is to be used when SPDXRef-A is used as a test tool for SPDXRef-B",
            "Is to be used when SPDXRef-A provides documentation of SPDXRef-B",
            "Is to be used when SPDXRef-A is an optional component of SPDXRef-B",
            "Is to be used when SPDXRef-A is a metafile of SPDXRef-B",
            "Is to be used when SPDXRef-A is used as a package as part of SPDXRef-B",
            "Is to be used when (current) SPDXRef-DOCUMENT amends the SPDX information in SPDXRef-B",
            "Is to be used when SPDXRef-A is a prerequisite for SPDXRef-B",
            "Is to be used when SPDXRef-A has as a prerequisite SPDXRef-B",
            "Is to be used for a relationship which has not been defined in the formal SPDX specification. A description of the relationship should be included in the Relationship comments field"
          ],
          "type": "string",
          "description": "Output only. The type of relationship between the source and target SPDX elements",
          "enum": [
            "RELATIONSHIP_TYPE_UNSPECIFIED",
            "DESCRIBES",
            "DESCRIBED_BY",
            "CONTAINS",
            "CONTAINED_BY",
            "DEPENDS_ON",
            "DEPENDENCY_OF",
            "DEPENDENCY_MANIFEST_OF",
            "BUILD_DEPENDENCY_OF",
            "DEV_DEPENDENCY_OF",
            "OPTIONAL_DEPENDENCY_OF",
            "PROVIDED_DEPENDENCY_OF",
            "TEST_DEPENDENCY_OF",
            "RUNTIME_DEPENDENCY_OF",
            "EXAMPLE_OF",
            "GENERATES",
            "GENERATED_FROM",
            "ANCESTOR_OF",
            "DESCENDANT_OF",
            "VARIANT_OF",
            "DISTRIBUTION_ARTIFACT",
            "PATCH_FOR",
            "PATCH_APPLIED",
            "COPY_OF",
            "FILE_ADDED",
            "FILE_DELETED",
            "FILE_MODIFIED",
            "EXPANDED_FROM_ARCHIVE",
            "DYNAMIC_LINK",
            "STATIC_LINK",
            "DATA_FILE_OF",
            "TEST_CASE_OF",
            "BUILD_TOOL_OF",
            "DEV_TOOL_OF",
            "TEST_OF",
            "TEST_TOOL_OF",
            "DOCUMENTATION_OF",
            "OPTIONAL_COMPONENT_OF",
            "METAFILE_OF",
            "PACKAGE_OF",
            "AMENDS",
            "PREREQUISITE_FOR",
            "HAS_PREREQUISITE",
            "OTHER"
          ],
          "readOnly": true
        },
        "source": {
          "type": "string",
          "description": "Also referred to as SPDXRef-A The source SPDX element (file, package, etc)"
        }
      },
      "type": "object"
    },
    "FileHashes": {
      "description": "Container message for hashes of byte content of files, used in source messages to verify integrity of source input to the build.",
      "properties": {
        "fileHash": {
          "description": "Required. Collection of file hashes.",
          "items": {
            "$ref": "Hash"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "FileHashes"
    },
    "Derived": {
      "properties": {
        "fingerprint": {
          "$ref": "Fingerprint",
          "description": "Required. The fingerprint of the derived image."
        },
        "distance": {
          "type": "integer",
          "description": "Output only. The number of layers by which this image differs from the associated image basis.",
          "format": "int32"
        },
        "layerInfo": {
          "items": {
            "$ref": "Layer"
          },
          "type": "array",
          "description": "This contains layer-specific metadata, if populated it has length \"distance\" and is ordered with [distance] being the layer immediately following the base image and [1] being the final layer."
        },
        "baseResourceUrl": {
          "type": "string",
          "description": "Output only. This contains the base image URL for the derived image occurrence."
        }
      },
      "description": "Derived describes the derived image portion (Occurrence) of the DockerImage relationship. This image would be produced from a Dockerfile with FROM .",
      "type": "object",
      "id": "Derived"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning",
      "type": "object",
      "description": "A non-fatal problem encountered during the execution of the build.",
      "properties": {
        "priority": {
          "description": "The priority for this warning.",
          "enumDescriptions": [
            "Should not be used.",
            "e.g. deprecation warnings and alternative feature highlights.",
            "e.g. automated detection of possible issues with the build.",
            "e.g. alerts that a feature used in the build is pending removal"
          ],
          "enum": [
            "PRIORITY_UNSPECIFIED",
            "INFO",
            "WARNING",
            "ALERT"
          ],
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "Explanation of the warning generated."
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Secret": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Secret",
      "type": "object",
      "description": "Pairs a set of secret environment variables containing encrypted values with the Cloud KMS key to use to decrypt the value. Note: Use `kmsKeyName` with `available_secrets` instead of using `kmsKeyName` with `secret`. For instructions see: https://cloud.google.com/cloud-build/docs/securing-builds/use-encrypted-credentials.",
      "properties": {
        "kmsKeyName": {
          "type": "string",
          "description": "Cloud KMS key name to use to decrypt these envs."
        },
        "secretEnv": {
          "type": "object",
          "additionalProperties": {
            "format": "byte",
            "type": "string"
          },
          "description": "Map of environment variable name to its encrypted value. Secret environment variables must be unique across all of a build's secrets, and must be used by at least one build step. Values can be at most 64 KB in size. There can be at most 100 secret values across all of a build's secrets."
        }
      }
    },
    "ListNoteOccurrencesResponse": {
      "id": "ListNoteOccurrencesResponse",
      "description": "Response for listing occurrences for a note.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to provide to skip to a particular spot in the list."
        },
        "occurrences": {
          "type": "array",
          "items": {
            "$ref": "Occurrence"
          },
          "description": "The occurrences attached to the specified note."
        }
      }
    },
    "GerritSourceContext": {
      "type": "object",
      "properties": {
        "hostUri": {
          "description": "The URI of a running Gerrit instance.",
          "type": "string"
        },
        "revisionId": {
          "type": "string",
          "description": "A revision (commit) ID."
        },
        "aliasContext": {
          "$ref": "AliasContext",
          "description": "An alias, which may be a branch or tag."
        },
        "gerritProject": {
          "description": "The full project name within the host. Projects may be nested, so \"project/subproject\" is a valid project name. The \"repo name\" is the hostURI/project.",
          "type": "string"
        }
      },
      "description": "A SourceContext referring to a Gerrit project.",
      "id": "GerritSourceContext"
    },
    "GrafeasV1beta1ImageDetails": {
      "type": "object",
      "id": "GrafeasV1beta1ImageDetails",
      "description": "Details of an image occurrence.",
      "properties": {
        "derivedImage": {
          "$ref": "Derived",
          "description": "Required. Immutable. The child image derived from the base image."
        }
      }
    },
    "Envelope": {
      "type": "object",
      "id": "Envelope",
      "description": "MUST match https://github.com/secure-systems-lab/dsse/blob/master/envelope.proto. An authenticated message of arbitrary type.",
      "properties": {
        "payloadType": {
          "type": "string"
        },
        "payload": {
          "format": "byte",
          "type": "string"
        },
        "signatures": {
          "type": "array",
          "items": {
            "$ref": "EnvelopeSignature"
          }
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan": {
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "End of time span.",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Start of time span."
        }
      },
      "type": "object",
      "description": "Start and end times for a build execution phase.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan"
    },
    "ArtifactHashes": {
      "id": "ArtifactHashes",
      "properties": {
        "sha256": {
          "type": "string"
        }
      },
      "description": "Defines a hash object for use in Materials and Products.",
      "type": "object"
    },
    "GenericSignedAttestation": {
      "properties": {
        "contentType": {
          "description": "Type (for example schema) of the attestation payload that was signed. The verifier must ensure that the provided type is one that the verifier supports, and that the attestation payload is a valid instantiation of that type (for example by validating a JSON schema).",
          "enumDescriptions": [
            "`ContentType` is not set.",
            "Atomic format attestation signature. See https://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md The payload extracted in `plaintext` is a JSON blob conforming to the linked schema."
          ],
          "enum": [
            "CONTENT_TYPE_UNSPECIFIED",
            "SIMPLE_SIGNING_JSON"
          ],
          "type": "string"
        },
        "signatures": {
          "items": {
            "$ref": "Signature"
          },
          "description": "One or more signatures over `serialized_payload`. Verifier implementations should consider this attestation message verified if at least one `signature` verifies `serialized_payload`. See `Signature` in common.proto for more details on signature structure and verification.",
          "type": "array"
        },
        "serializedPayload": {
          "type": "string",
          "format": "byte",
          "description": "The serialized payload that is verified by one or more `signatures`. The encoding and semantic meaning of this payload must match what is set in `content_type`."
        }
      },
      "type": "object",
      "description": "An attestation wrapper that uses the Grafeas `Signature` message. This attestation must define the `serialized_payload` that the `signatures` verify and any metadata necessary to interpret that plaintext. The signatures should always be over the `serialized_payload` bytestring.",
      "id": "GenericSignedAttestation"
    },
    "GrafeasV1beta1IntotoSignature": {
      "type": "object",
      "properties": {
        "keyid": {
          "type": "string"
        },
        "sig": {
          "type": "string"
        }
      },
      "description": "A signature object consists of the KeyID used and the signature itself.",
      "id": "GrafeasV1beta1IntotoSignature"
    },
    "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata": {
      "description": "Metadata for all operations used and required for all operations that created by Container Analysis Providers",
      "id": "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time this operation was created."
        },
        "endTime": {
          "description": "Output only. The time that this operation was marked completed or failed.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object"
    },
    "Binding": {
      "id": "Binding",
      "type": "object",
      "description": "Associates `members`, or principals, with a `role`.",
      "properties": {
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        },
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "members": {
          "items": {
            "type": "string"
          },
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "type": "array"
        }
      }
    },
    "RelatedUrl": {
      "id": "RelatedUrl",
      "properties": {
        "url": {
          "description": "Specific URL associated with the resource.",
          "type": "string"
        },
        "label": {
          "description": "Label to describe usage of the URL.",
          "type": "string"
        }
      },
      "description": "Metadata for any related URL information.",
      "type": "object"
    },
    "ExternalRef": {
      "id": "ExternalRef",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of category (e.g. 'npm' for the PACKAGE_MANAGER category)"
        },
        "locator": {
          "description": "The unique string with no spaces necessary to access the package-specific information, metadata, or content within the target location",
          "type": "string"
        },
        "comment": {
          "description": "Human-readable information about the purpose and target of the reference",
          "type": "string"
        },
        "category": {
          "enum": [
            "CATEGORY_UNSPECIFIED",
            "SECURITY",
            "PACKAGE_MANAGER",
            "PERSISTENT_ID",
            "OTHER"
          ],
          "description": "An External Reference allows a Package to reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package",
          "enumDescriptions": [
            "Unspecified",
            "Security (e.g. cpe22Type, cpe23Type)",
            "Package Manager (e.g. maven-central, npm, nuget, bower, purl)",
            "Persistent-Id (e.g. swh)",
            "Other"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "description": "An External Reference allows a Package to reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package"
    },
    "ArtifactRule": {
      "id": "ArtifactRule",
      "description": "Defines an object to declare an in-toto artifact rule",
      "properties": {
        "artifactRule": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Secrets": {
      "properties": {
        "inline": {
          "type": "array",
          "description": "Secrets encrypted with KMS key and the associated secret environment variable.",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret"
          }
        },
        "secretManager": {
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret"
          },
          "description": "Secrets in Secret Manager and associated secret environment variable.",
          "type": "array"
        }
      },
      "description": "Secrets and secret environment variables.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Secrets",
      "type": "object"
    },
    "Details": {
      "id": "Details",
      "description": "Details of an attestation occurrence.",
      "type": "object",
      "properties": {
        "attestation": {
          "description": "Required. Attestation for the resource.",
          "$ref": "Attestation"
        }
      }
    },
    "PackageInfoNote": {
      "properties": {
        "detailedDescription": {
          "description": "A more detailed description of the package",
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "Identify the version of the package"
        },
        "homePage": {
          "type": "string",
          "description": "Provide a place for the SPDX file creator to record a web site that serves as the package's home page"
        },
        "verificationCode": {
          "type": "string",
          "description": "This field provides an independently reproducible mechanism identifying specific contents of a package based on the actual files (except the SPDX file itself, if it is included in the package) that make up each package and that correlates to the data in this SPDX file"
        },
        "supplier": {
          "type": "string",
          "description": "Identify the actual distribution source for the package/directory identified in the SPDX file"
        },
        "downloadLocation": {
          "type": "string",
          "description": "This section identifies the download Universal Resource Locator (URL), or a specific location within a version control system (VCS) for the package at the time that the SPDX file was created"
        },
        "originator": {
          "type": "string",
          "description": "If the package identified in the SPDX file originated from a different person or organization than identified as Package Supplier, this field identifies from where or whom the package originally came"
        },
        "summaryDescription": {
          "type": "string",
          "description": "A short description of the package"
        },
        "filesLicenseInfo": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Contain the license the SPDX file creator has concluded as governing the This field is to contain a list of all licenses found in the package. The relationship between licenses (i.e., conjunctive, disjunctive) is not specified in this field – it is simply a listing of all licenses found"
        },
        "copyright": {
          "description": "Identify the copyright holders of the package, as well as any dates present",
          "type": "string"
        },
        "packageType": {
          "type": "string",
          "description": "The type of package: OS, MAVEN, GO, GO_STDLIB, etc."
        },
        "licenseDeclared": {
          "description": "List the licenses that have been declared by the authors of the package",
          "$ref": "License"
        },
        "title": {
          "description": "Identify the full name of the package as given by the Package Originator",
          "type": "string"
        },
        "checksum": {
          "description": "Provide an independently reproducible mechanism that permits unique identification of a specific package that correlates to the data in this SPDX file",
          "type": "string"
        },
        "analyzed": {
          "type": "boolean",
          "description": "Indicates whether the file content of this package has been available for or subjected to analysis when creating the SPDX document"
        },
        "externalRefs": {
          "items": {
            "$ref": "ExternalRef"
          },
          "type": "array",
          "description": "ExternalRef"
        },
        "attribution": {
          "description": "A place for the SPDX data creator to record, at the package level, acknowledgements that may be needed to be communicated in some contexts",
          "type": "string"
        }
      },
      "id": "PackageInfoNote",
      "description": "PackageInfoNote represents an SPDX Package Information section: https://spdx.github.io/spdx-spec/3-package-information/",
      "type": "object"
    },
    "GrafeasV1beta1DiscoveryDetails": {
      "type": "object",
      "properties": {
        "discovered": {
          "$ref": "Discovered",
          "description": "Required. Analysis status for the discovered resource."
        }
      },
      "id": "GrafeasV1beta1DiscoveryDetails",
      "description": "Details of a discovery occurrence."
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Hash": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Hash",
      "description": "Container message for hash values.",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "NONE",
            "SHA256",
            "MD5"
          ],
          "enumDescriptions": [
            "No hash requested.",
            "Use a sha256 hash.",
            "Use a md5 hash."
          ],
          "type": "string",
          "description": "The type of hash that was performed."
        },
        "value": {
          "description": "The hash value.",
          "format": "byte",
          "type": "string"
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource": {
      "properties": {
        "projectId": {
          "description": "ID of the project that owns the Cloud Source Repository. If omitted, the project ID requesting the build is assumed.",
          "type": "string"
        },
        "commitSha": {
          "type": "string",
          "description": "Explicit commit SHA to build."
        },
        "dir": {
          "type": "string",
          "description": "Directory, relative to the source root, in which to run the build. This must be a relative path. If a step's `dir` is specified and is an absolute path, this value is ignored for that step's execution."
        },
        "substitutions": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Substitutions to use in a triggered build. Should only be used with RunBuildTrigger"
        },
        "tagName": {
          "type": "string",
          "description": "Regex matching tags to build. The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax"
        },
        "invertRegex": {
          "description": "Only trigger a build if the revision regex does NOT match the revision regex.",
          "type": "boolean"
        },
        "branchName": {
          "type": "string",
          "description": "Regex matching branches to build. The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax"
        },
        "repoName": {
          "type": "string",
          "description": "Name of the Cloud Source Repository."
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource",
      "type": "object",
      "description": "Location of the source in a Google Cloud Source Repository."
    },
    "FileNote": {
      "description": "FileNote represents an SPDX File Information section: https://spdx.github.io/spdx-spec/4-file-information/",
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Identify the full path and filename that corresponds to the file information in this section"
        },
        "fileType": {
          "description": "This field provides information about the type of file identified",
          "type": "string",
          "enum": [
            "FILE_TYPE_UNSPECIFIED",
            "SOURCE",
            "BINARY",
            "ARCHIVE",
            "APPLICATION",
            "AUDIO",
            "IMAGE",
            "TEXT",
            "VIDEO",
            "DOCUMENTATION",
            "SPDX",
            "OTHER"
          ],
          "enumDescriptions": [
            "Unspecified",
            "The file is human readable source code (.c, .html, etc.)",
            "The file is a compiled object, target image or binary executable (.o, .a, etc.)",
            "The file represents an archive (.tar, .jar, etc.)",
            "The file is associated with a specific application type (MIME type of application/*)",
            "The file is associated with an audio file (MIME type of audio/* , e.g. .mp3)",
            "The file is associated with an picture image file (MIME type of image/*, e.g., .jpg, .gif)",
            "The file is human readable text file (MIME type of text/*)",
            "The file is associated with a video file type (MIME type of video/*)",
            "The file serves as documentation",
            "The file is an SPDX document",
            "The file doesn't fit into the above categories (generated artifacts, data files, etc.)"
          ]
        },
        "checksum": {
          "items": {
            "type": "string"
          },
          "description": "Provide a unique identifier to match analysis information on each specific file in a package",
          "type": "array"
        }
      },
      "id": "FileNote"
    },
    "BatchCreateNotesRequest": {
      "type": "object",
      "description": "Request to create notes in batch.",
      "id": "BatchCreateNotesRequest",
      "properties": {
        "notes": {
          "description": "Required. The notes to create, the key is expected to be the note ID. Max allowed length is 1000.",
          "additionalProperties": {
            "$ref": "Note"
          },
          "type": "object"
        }
      }
    },
    "SetIamPolicyRequest": {
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      },
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object"
    },
    "FixableTotalByDigest": {
      "properties": {
        "fixableCount": {
          "format": "int64",
          "type": "string",
          "description": "The number of fixable vulnerabilities associated with this resource."
        },
        "resource": {
          "$ref": "Resource",
          "description": "The affected resource."
        },
        "totalCount": {
          "type": "string",
          "description": "The total number of vulnerabilities associated with this resource.",
          "format": "int64"
        },
        "severity": {
          "description": "The severity for this count. SEVERITY_UNSPECIFIED indicates total across all severities.",
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ],
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "type": "string"
        }
      },
      "description": "Per resource and severity counts of fixable and total vulnerabilities.",
      "type": "object",
      "id": "FixableTotalByDigest"
    },
    "Deployment": {
      "properties": {
        "undeployTime": {
          "format": "google-datetime",
          "description": "End of the lifetime of this deployment.",
          "type": "string"
        },
        "userEmail": {
          "description": "Identity of the user that triggered this deployment.",
          "type": "string"
        },
        "platform": {
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "GKE",
            "FLEX",
            "CUSTOM"
          ],
          "enumDescriptions": [
            "Unknown.",
            "Google Container Engine.",
            "Google App Engine: Flexible Environment.",
            "Custom user-defined platform."
          ],
          "type": "string",
          "description": "Platform hosting this deployment."
        },
        "deployTime": {
          "description": "Required. Beginning of the lifetime of this deployment.",
          "format": "google-datetime",
          "type": "string"
        },
        "resourceUri": {
          "description": "Output only. Resource URI for the artifact being deployed taken from the deployable field with the same name.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "address": {
          "type": "string",
          "description": "Address of the runtime element hosting this deployment."
        },
        "config": {
          "type": "string",
          "description": "Configuration used to create this deployment."
        }
      },
      "type": "object",
      "id": "Deployment",
      "description": "The period during which some deployable was active in a runtime."
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildFailureInfo": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildFailureInfo",
      "properties": {
        "detail": {
          "type": "string",
          "description": "Explains the failure issue in more detail using hard-coded text."
        },
        "type": {
          "description": "The name of the failure.",
          "type": "string",
          "enum": [
            "FAILURE_TYPE_UNSPECIFIED",
            "PUSH_FAILED",
            "PUSH_IMAGE_NOT_FOUND",
            "PUSH_NOT_AUTHORIZED",
            "LOGGING_FAILURE",
            "USER_BUILD_STEP",
            "FETCH_SOURCE_FAILED"
          ],
          "enumDescriptions": [
            "Type unspecified",
            "Unable to push the image to the repository.",
            "Final image not found.",
            "Unauthorized push of the final image.",
            "Backend logging failures. Should retry.",
            "A build step has failed.",
            "The source fetching has failed."
          ]
        }
      },
      "type": "object",
      "description": "A fatal problem encountered during the execution of the build."
    },
    "TestIamPermissionsRequest": {
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "id": "TestIamPermissionsRequest"
    },
    "ProjectRepoId": {
      "description": "Selects a repo using a Google Cloud Platform project ID (e.g., winged-cargo-31) and a repo name within that project.",
      "properties": {
        "projectId": {
          "type": "string",
          "description": "The ID of the project."
        },
        "repoName": {
          "type": "string",
          "description": "The name of the repo. Leave empty for the default repo."
        }
      },
      "id": "ProjectRepoId",
      "type": "object"
    },
    "Vulnerability": {
      "properties": {
        "sourceUpdateTime": {
          "description": "The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.",
          "format": "google-datetime",
          "type": "string"
        },
        "windowsDetails": {
          "description": "Windows details get their own format because the information format and model don't match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version.",
          "type": "array",
          "items": {
            "$ref": "WindowsDetail"
          }
        },
        "cvssScore": {
          "format": "float",
          "type": "number",
          "description": "The CVSS score for this vulnerability."
        },
        "cvssV3": {
          "description": "The full description of the CVSS for version 3.",
          "$ref": "CVSSv3"
        },
        "cvssV2": {
          "$ref": "CVSS",
          "description": "The full description of the CVSS for version 2."
        },
        "severity": {
          "type": "string",
          "description": "Note provider assigned impact of the vulnerability.",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ]
        },
        "cwe": {
          "items": {
            "type": "string"
          },
          "description": "A list of CWE for this vulnerability. For details, see: https://cwe.mitre.org/index.html",
          "type": "array"
        },
        "cvssVersion": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "CVSS version used to populate cvss_score and severity.",
          "enum": [
            "CVSS_VERSION_UNSPECIFIED",
            "CVSS_VERSION_2",
            "CVSS_VERSION_3"
          ]
        },
        "details": {
          "description": "All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.",
          "items": {
            "$ref": "Detail"
          },
          "type": "array"
        }
      },
      "description": "Vulnerability provides metadata about a security vulnerability in a Note.",
      "id": "Vulnerability",
      "type": "object"
    },
    "GitSourceContext": {
      "type": "object",
      "id": "GitSourceContext",
      "properties": {
        "url": {
          "type": "string",
          "description": "Git repository URL."
        },
        "revisionId": {
          "description": "Git commit hash.",
          "type": "string"
        }
      },
      "description": "A GitSourceContext denotes a particular revision in a third party Git repository (e.g., GitHub)."
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Volume": {
      "description": "Volume describes a Docker container volume which is mounted into build steps in order to persist files across build step execution.",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path at which to mount the volume. Paths must be absolute and cannot conflict with other volume paths on the same build step or with certain reserved volume paths."
        },
        "name": {
          "type": "string",
          "description": "Name of the volume to mount. Volume names must be unique per build step and must be valid names for Docker volumes. Each named volume must be used by at least two build steps."
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Volume",
      "type": "object"
    },
    "Fingerprint": {
      "type": "object",
      "description": "A set of properties that uniquely identify a given Docker image.",
      "id": "Fingerprint",
      "properties": {
        "v2Blob": {
          "description": "Required. The ordered list of v2 blobs that represent a given image.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "v2Name": {
          "description": "Output only. The name of the image's v2 blobs computed via: [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1]) Only the name of the final blob is kept.",
          "type": "string"
        },
        "v1Name": {
          "description": "Required. The layer ID of the final layer in the Docker image's v1 representation.",
          "type": "string"
        }
      }
    },
    "SigningKey": {
      "type": "object",
      "properties": {
        "publicKeyValue": {
          "description": "This field contains the actual public key.",
          "type": "string"
        },
        "keyScheme": {
          "type": "string",
          "description": "This field contains the corresponding signature scheme. Eg: \"rsassa-pss-sha256\"."
        },
        "keyId": {
          "description": "key_id is an identifier for the signing key.",
          "type": "string"
        },
        "keyType": {
          "description": "This field identifies the specific signing method. Eg: \"rsa\", \"ed25519\", and \"ecdsa\".",
          "type": "string"
        }
      },
      "description": "This defines the format used to record keys used in the software supply chain. An in-toto link is attested using one or more keys defined in the in-toto layout. An example of this is: { \"key_id\": \"776a00e29f3559e0141b3b096f696abc6cfb0c657ab40f441132b345b0...\", \"key_type\": \"rsa\", \"public_key_value\": \"-----BEGIN PUBLIC KEY-----\\nMIIBojANBgkqhkiG9w0B...\", \"key_scheme\": \"rsassa-pss-sha256\" } The format for in-toto's key definition can be found in section 4.2 of the in-toto specification.",
      "id": "SigningKey"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Build": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Build",
      "description": "A build resource in the Cloud Build API. At a high level, a `Build` describes where to find source code, how to build it (for example, the builder image to run on the source), and where to store the built artifacts. Fields can include the following variables, which will be expanded when the build is created: - $PROJECT_ID: the project ID of the build. - $PROJECT_NUMBER: the project number of the build. - $LOCATION: the location/region of the build. - $BUILD_ID: the autogenerated ID of the build. - $REPO_NAME: the source repository name specified by RepoSource. - $BRANCH_NAME: the branch name specified by RepoSource. - $TAG_NAME: the tag name specified by RepoSource. - $REVISION_ID or $COMMIT_SHA: the commit SHA specified by RepoSource or resolved from the specified branch or tag. - $SHORT_SHA: first 7 characters of $REVISION_ID or $COMMIT_SHA.",
      "properties": {
        "availableSecrets": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Secrets",
          "description": "Secrets and secret environment variables."
        },
        "buildTriggerId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The ID of the `BuildTrigger` that triggered this build, if it was triggered automatically."
        },
        "secrets": {
          "description": "Secrets to decrypt using Cloud Key Management Service. Note: Secret Manager is the recommended technique for managing sensitive data with Cloud Build. Use `available_secrets` to configure builds to access secrets from Secret Manager. For instructions, see: https://cloud.google.com/cloud-build/docs/securing-builds/use-secrets",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Secret"
          },
          "type": "array"
        },
        "logsBucket": {
          "description": "Google Cloud Storage bucket where logs should be written (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)). Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.",
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Unique identifier of the build."
        },
        "steps": {
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildStep"
          },
          "description": "Required. The operations to be performed on the workspace.",
          "type": "array"
        },
        "approval": {
          "readOnly": true,
          "description": "Output only. Describes this build's approval configuration, status, and result.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildApproval"
        },
        "options": {
          "description": "Special options for this build.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions"
        },
        "results": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Results",
          "description": "Output only. Results of the build.",
          "readOnly": true
        },
        "substitutions": {
          "description": "Substitutions data for `Build` resource.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "logUrl": {
          "readOnly": true,
          "description": "Output only. URL to logs for this build in Google Cloud Console.",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags for annotation of a `Build`. These are not docker tags."
        },
        "startTime": {
          "description": "Output only. Time at which execution of the build was started.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "enumDescriptions": [
            "Status of the build is unknown.",
            "Build has been created and is pending execution and queuing. It has not been queued.",
            "Build or step is queued; work has not yet begun.",
            "Build or step is being executed.",
            "Build or step finished successfully.",
            "Build or step failed to complete successfully.",
            "Build or step failed due to an internal cause.",
            "Build or step took longer than was allowed.",
            "Build or step was canceled by a user.",
            "Build was enqueued for longer than the value of `queue_ttl`."
          ],
          "enum": [
            "STATUS_UNKNOWN",
            "PENDING",
            "QUEUED",
            "WORKING",
            "SUCCESS",
            "FAILURE",
            "INTERNAL_ERROR",
            "TIMEOUT",
            "CANCELLED",
            "EXPIRED"
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. Status of the build."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Time at which the request to create the build was received.",
          "type": "string"
        },
        "finishTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Time at which execution of the build was finished. The difference between finish_time and start_time is the duration of the build's execution."
        },
        "statusDetail": {
          "readOnly": true,
          "description": "Output only. Customer-readable message about the current status.",
          "type": "string"
        },
        "queueTtl": {
          "type": "string",
          "description": "TTL in queue for this build. If provided and the build is enqueued longer than this value, the build will expire and the build status will be `EXPIRED`. The TTL starts ticking from create_time.",
          "format": "google-duration"
        },
        "serviceAccount": {
          "description": "IAM service account whose credentials will be used at build runtime. Must be of the format `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. ACCOUNT can be email address or uniqueId of the service account. ",
          "type": "string"
        },
        "sourceProvenance": {
          "readOnly": true,
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1SourceProvenance",
          "description": "Output only. A permanent fixed identifier for source."
        },
        "name": {
          "type": "string",
          "description": "Output only. The 'Build' name with format: `projects/{project}/locations/{location}/builds/{build}`, where {build} is a unique identifier generated by the service.",
          "readOnly": true
        },
        "warnings": {
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. Non-fatal problems encountered during the execution of the build."
        },
        "failureInfo": {
          "description": "Output only. Contains information about the build when status=FAILURE.",
          "readOnly": true,
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildFailureInfo"
        },
        "projectId": {
          "type": "string",
          "description": "Output only. ID of the project.",
          "readOnly": true
        },
        "source": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Source",
          "description": "The location of the source files to build."
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of images to be pushed upon the successful completion of all build steps. The images are pushed using the builder service account's credentials. The digests of the pushed images will be stored in the `Build` resource's results field. If any of the images fail to be pushed, the build status is marked `FAILURE`."
        },
        "timing": {
          "type": "object",
          "description": "Output only. Stores timing information for phases of the build. Valid keys are: * BUILD: time to execute all build steps. * PUSH: time to push all specified images. * FETCHSOURCE: time to fetch source. * SETUPBUILD: time to set up build. If the build does not specify source or images, these keys will not be included.",
          "additionalProperties": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan"
          },
          "readOnly": true
        },
        "timeout": {
          "type": "string",
          "description": "Amount of time that this build should be allowed to run, to second granularity. If this amount of time elapses, work on the build will cease and the build status will be `TIMEOUT`. `timeout` starts ticking from `startTime`. Default time is ten minutes.",
          "format": "google-duration"
        },
        "artifacts": {
          "description": "Artifacts produced by the build that should be uploaded upon successful completion of all build steps.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts"
        }
      },
      "type": "object"
    },
    "GrafeasV1beta1IntotoArtifact": {
      "id": "GrafeasV1beta1IntotoArtifact",
      "properties": {
        "hashes": {
          "$ref": "ArtifactHashes"
        },
        "resourceUri": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Basis": {
      "type": "object",
      "description": "Basis describes the base image portion (Note) of the DockerImage relationship. Linked occurrences are derived from this or an equivalent image via: FROM Or an equivalent reference, e.g. a tag of the resource_url.",
      "id": "Basis",
      "properties": {
        "resourceUrl": {
          "description": "Required. Immutable. The resource_url for the resource representing the basis of associated occurrence images.",
          "type": "string"
        },
        "fingerprint": {
          "$ref": "Fingerprint",
          "description": "Required. Immutable. The fingerprint of the base image."
        }
      }
    },
    "GrafeasV1beta1IntotoDetails": {
      "properties": {
        "signed": {
          "$ref": "Link"
        },
        "signatures": {
          "items": {
            "$ref": "GrafeasV1beta1IntotoSignature"
          },
          "type": "array"
        }
      },
      "description": "This corresponds to a signed in-toto link - it is made up of one or more signatures and the in-toto link itself. This is used for occurrences of a Grafeas in-toto note.",
      "type": "object",
      "id": "GrafeasV1beta1IntotoDetails"
    },
    "GrafeasV1beta1VulnerabilityDetails": {
      "id": "GrafeasV1beta1VulnerabilityDetails",
      "properties": {
        "longDescription": {
          "description": "Output only. A detailed description of this vulnerability.",
          "type": "string"
        },
        "effectiveSeverity": {
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ],
          "description": "The distro assigned severity for this vulnerability when it is available, and note provider assigned severity when distro has not yet assigned a severity for this vulnerability. When there are multiple PackageIssues for this vulnerability, they can have different effective severities because some might be provided by the distro while others are provided by the language ecosystem for a language pack. For this reason, it is advised to use the effective severity on the PackageIssue level. In the case where multiple PackageIssues have differing effective severities, this field should be the highest severity for any of the PackageIssues."
        },
        "type": {
          "description": "The type of package; whether native or non native(ruby gems, node.js packages etc)",
          "type": "string"
        },
        "cvssVersion": {
          "description": "Output only. CVSS version used to populate cvss_score and severity.",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "CVSS_VERSION_UNSPECIFIED",
            "CVSS_VERSION_2",
            "CVSS_VERSION_3"
          ]
        },
        "shortDescription": {
          "description": "Output only. A one sentence description of this vulnerability.",
          "type": "string"
        },
        "severity": {
          "description": "Output only. The note provider assigned Severity of the vulnerability.",
          "type": "string",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ]
        },
        "cvssScore": {
          "description": "Output only. The CVSS score of this vulnerability. CVSS score is on a scale of 0-10 where 0 indicates low severity and 10 indicates high severity.",
          "format": "float",
          "type": "number"
        },
        "relatedUrls": {
          "type": "array",
          "items": {
            "$ref": "RelatedUrl"
          },
          "description": "Output only. URLs related to this vulnerability."
        },
        "packageIssue": {
          "description": "Required. The set of affected locations and their fixes (if available) within the associated resource.",
          "items": {
            "$ref": "PackageIssue"
          },
          "type": "array"
        }
      },
      "description": "Details of a vulnerability Occurrence.",
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret",
      "properties": {
        "env": {
          "description": "Environment variable name to associate with the secret. Secret environment variables must be unique across all of a build's secrets, and must be used by at least one build step.",
          "type": "string"
        },
        "versionName": {
          "type": "string",
          "description": "Resource name of the SecretVersion. In format: projects/*/secrets/*/versions/*"
        }
      },
      "description": "Pairs a secret environment variable with a SecretVersion in Secret Manager.",
      "type": "object"
    },
    "BuildProvenance": {
      "description": "Provenance of a build. Contains all information needed to verify the full details about the build from source to completion.",
      "id": "BuildProvenance",
      "properties": {
        "builderVersion": {
          "description": "Version string of the builder at the time this build was executed.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Required. Unique identifier of the build."
        },
        "triggerId": {
          "type": "string",
          "description": "Trigger identifier if the build was triggered automatically; empty if not."
        },
        "commands": {
          "description": "Commands requested by the build.",
          "items": {
            "$ref": "Command"
          },
          "type": "array"
        },
        "createTime": {
          "type": "string",
          "description": "Time at which the build was created.",
          "format": "google-datetime"
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Time at which execution of the build was started."
        },
        "builtArtifacts": {
          "type": "array",
          "items": {
            "$ref": "Artifact"
          },
          "description": "Output of the build."
        },
        "sourceProvenance": {
          "$ref": "Source",
          "description": "Details of the Source input to the build."
        },
        "logsUri": {
          "description": "URI where any logs for this provenance were written.",
          "type": "string"
        },
        "creator": {
          "type": "string",
          "description": "E-mail address of the user who initiated this build. Note that this was the user's e-mail address at the time the build was initiated; this address may not represent the same end-user for all time."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Time at which execution of the build was finished."
        },
        "buildOptions": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Special options applied to this build. This is a catch-all field where build providers can enter any desired additional details."
        },
        "projectId": {
          "description": "ID of the project.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CVSS": {
      "description": "Common Vulnerability Scoring System. This message is compatible with CVSS v2 and v3. For CVSS v2 details, see https://www.first.org/cvss/v2/guide CVSS v2 calculator: https://nvd.nist.gov/vuln-metrics/cvss/v2-calculator For CVSS v3 details, see https://www.first.org/cvss/specification-document CVSS v3 calculator: https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator",
      "properties": {
        "attackComplexity": {
          "enum": [
            "ATTACK_COMPLEXITY_UNSPECIFIED",
            "ATTACK_COMPLEXITY_LOW",
            "ATTACK_COMPLEXITY_HIGH",
            "ATTACK_COMPLEXITY_MEDIUM"
          ],
          "description": "Defined in CVSS v3, CVSS v2",
          "enumDescriptions": [
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v2"
          ],
          "type": "string"
        },
        "attackVector": {
          "enumDescriptions": [
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3"
          ],
          "type": "string",
          "enum": [
            "ATTACK_VECTOR_UNSPECIFIED",
            "ATTACK_VECTOR_NETWORK",
            "ATTACK_VECTOR_ADJACENT",
            "ATTACK_VECTOR_LOCAL",
            "ATTACK_VECTOR_PHYSICAL"
          ],
          "description": "Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments. Defined in CVSS v3, CVSS v2"
        },
        "scope": {
          "enum": [
            "SCOPE_UNSPECIFIED",
            "SCOPE_UNCHANGED",
            "SCOPE_CHANGED"
          ],
          "enumDescriptions": [
            "Defined in CVSS v3",
            "Defined in CVSS v3",
            "Defined in CVSS v3"
          ],
          "description": "Defined in CVSS v3",
          "type": "string"
        },
        "baseScore": {
          "format": "float",
          "description": "The base score is a function of the base metric scores.",
          "type": "number"
        },
        "availabilityImpact": {
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE",
            "IMPACT_PARTIAL",
            "IMPACT_COMPLETE"
          ],
          "enumDescriptions": [
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3",
            "Defined in CVSS v3",
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v2",
            "Defined in CVSS v2"
          ],
          "type": "string",
          "description": "Defined in CVSS v3, CVSS v2"
        },
        "confidentialityImpact": {
          "type": "string",
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE",
            "IMPACT_PARTIAL",
            "IMPACT_COMPLETE"
          ],
          "description": "Defined in CVSS v3, CVSS v2",
          "enumDescriptions": [
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3",
            "Defined in CVSS v3",
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v2",
            "Defined in CVSS v2"
          ]
        },
        "exploitabilityScore": {
          "type": "number",
          "format": "float"
        },
        "impactScore": {
          "type": "number",
          "format": "float"
        },
        "userInteraction": {
          "type": "string",
          "description": "Defined in CVSS v3",
          "enumDescriptions": [
            "Defined in CVSS v3",
            "Defined in CVSS v3",
            "Defined in CVSS v3"
          ],
          "enum": [
            "USER_INTERACTION_UNSPECIFIED",
            "USER_INTERACTION_NONE",
            "USER_INTERACTION_REQUIRED"
          ]
        },
        "privilegesRequired": {
          "enumDescriptions": [
            "Defined in CVSS v3",
            "Defined in CVSS v3",
            "Defined in CVSS v3",
            "Defined in CVSS v3"
          ],
          "type": "string",
          "description": "Defined in CVSS v3",
          "enum": [
            "PRIVILEGES_REQUIRED_UNSPECIFIED",
            "PRIVILEGES_REQUIRED_NONE",
            "PRIVILEGES_REQUIRED_LOW",
            "PRIVILEGES_REQUIRED_HIGH"
          ]
        },
        "authentication": {
          "enum": [
            "AUTHENTICATION_UNSPECIFIED",
            "AUTHENTICATION_MULTIPLE",
            "AUTHENTICATION_SINGLE",
            "AUTHENTICATION_NONE"
          ],
          "type": "string",
          "description": "Defined in CVSS v2",
          "enumDescriptions": [
            "Defined in CVSS v2",
            "Defined in CVSS v2",
            "Defined in CVSS v2",
            "Defined in CVSS v2"
          ]
        },
        "integrityImpact": {
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE",
            "IMPACT_PARTIAL",
            "IMPACT_COMPLETE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v3",
            "Defined in CVSS v3",
            "Defined in CVSS v3, CVSS v2",
            "Defined in CVSS v2",
            "Defined in CVSS v2"
          ],
          "description": "Defined in CVSS v3, CVSS v2"
        }
      },
      "type": "object",
      "id": "CVSS"
    },
    "Signature": {
      "properties": {
        "publicKeyId": {
          "description": "The identifier for the public key that verifies this signature. * The `public_key_id` is required. * The `public_key_id` SHOULD be an RFC3986 conformant URI. * When possible, the `public_key_id` SHOULD be an immutable reference, such as a cryptographic digest. Examples of valid `public_key_id`s: OpenPGP V4 public key fingerprint: * \"openpgp4fpr:74FAF3B861BDA0870C7B6DEF607E48D2A663AEEA\" See https://www.iana.org/assignments/uri-schemes/prov/openpgp4fpr for more details on this scheme. RFC6920 digest-named SubjectPublicKeyInfo (digest of the DER serialization): * \"ni:///sha-256;cD9o9Cq6LG3jD0iKXqEi_vdjJGecm_iXkbqVoScViaU\" * \"nih:///sha-256;703f68f42aba2c6de30f488a5ea122fef76324679c9bf89791ba95a1271589a5\"",
          "type": "string"
        },
        "signature": {
          "format": "byte",
          "description": "The content of the signature, an opaque bytestring. The payload that this signature verifies MUST be unambiguously provided with the Signature during verification. A wrapper message might provide the payload explicitly. Alternatively, a message might have a canonical serialization that can always be unambiguously computed to derive the payload.",
          "type": "string"
        }
      },
      "description": "Verifiers (e.g. Kritis implementations) MUST verify signatures with respect to the trust anchors defined in policy (e.g. a Kritis policy). Typically this means that the verifier has been configured with a map from `public_key_id` to public key material (and any required parameters, e.g. signing algorithm). In particular, verification implementations MUST NOT treat the signature `public_key_id` as anything more than a key lookup hint. The `public_key_id` DOES NOT validate or authenticate a public key; it only provides a mechanism for quickly selecting a public key ALREADY CONFIGURED on the verifier through a trusted channel. Verification implementations MUST reject signatures in any of the following circumstances: * The `public_key_id` is not recognized by the verifier. * The public key that `public_key_id` refers to does not verify the signature with respect to the payload. The `signature` contents SHOULD NOT be \"attached\" (where the payload is included with the serialized `signature` bytes). Verifiers MUST ignore any \"attached\" payload and only verify signatures with respect to explicitly provided payload (e.g. a `payload` field on the proto message that holds this Signature, or the canonical serialization of the proto message that holds this signature).",
      "id": "Signature",
      "type": "object"
    },
    "BuildSignature": {
      "type": "object",
      "properties": {
        "signature": {
          "type": "string",
          "format": "byte",
          "description": "Required. Signature of the related `BuildProvenance`. In JSON, this is base-64 encoded."
        },
        "keyType": {
          "description": "The type of the key, either stored in `public_key` or referenced in `key_id`.",
          "enumDescriptions": [
            "`KeyType` is not set.",
            "`PGP ASCII Armored` public key.",
            "`PKIX PEM` public key."
          ],
          "type": "string",
          "enum": [
            "KEY_TYPE_UNSPECIFIED",
            "PGP_ASCII_ARMORED",
            "PKIX_PEM"
          ]
        },
        "keyId": {
          "description": "An ID for the key used to sign. This could be either an ID for the key stored in `public_key` (such as the ID or fingerprint for a PGP key, or the CN for a cert), or a reference to an external key (such as a reference to a key in Cloud Key Management Service).",
          "type": "string"
        },
        "publicKey": {
          "description": "Public key of the builder which can be used to verify that the related findings are valid and unchanged. If `key_type` is empty, this defaults to PEM encoded public keys. This field may be empty if `key_id` references an external key. For Cloud Build based signatures, this is a PEM encoded public key. To verify the Cloud Build signature, place the contents of this field into a file (public.pem). The signature field is base64-decoded into its binary representation in signature.bin, and the provenance bytes from `BuildDetails` are base64-decoded into a binary representation in signed.bin. OpenSSL can then verify the signature: `openssl sha256 -verify public.pem -signature signature.bin signed.bin`",
          "type": "string"
        }
      },
      "id": "BuildSignature",
      "description": "Message encapsulating the signature of the verified build."
    },
    "WindowsDetail": {
      "type": "object",
      "id": "WindowsDetail",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the vulnerability."
        },
        "cpeUri": {
          "type": "string",
          "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar."
        },
        "description": {
          "description": "The description of the vulnerability.",
          "type": "string"
        },
        "fixingKbs": {
          "type": "array",
          "description": "Required. The names of the KBs which have hotfixes to mitigate this vulnerability. Note that there may be multiple hotfixes (and thus multiple KBs) that mitigate a given vulnerability. Currently any listed kb's presence is considered a fix.",
          "items": {
            "$ref": "KnowledgeBase"
          }
        }
      }
    },
    "GrafeasV1beta1DeploymentDetails": {
      "properties": {
        "deployment": {
          "$ref": "Deployment",
          "description": "Required. Deployment history for the resource."
        }
      },
      "id": "GrafeasV1beta1DeploymentDetails",
      "description": "Details of a deployment occurrence.",
      "type": "object"
    },
    "Environment": {
      "description": "Defines an object for the environment field in in-toto links. The suggested fields are \"variables\", \"filesystem\", and \"workdir\".",
      "id": "Environment",
      "type": "object",
      "properties": {
        "customValues": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      }
    },
    "EnvelopeSignature": {
      "properties": {
        "keyid": {
          "type": "string"
        },
        "sig": {
          "type": "string",
          "format": "byte"
        }
      },
      "type": "object",
      "id": "EnvelopeSignature"
    },
    "BatchCreateNotesResponse": {
      "id": "BatchCreateNotesResponse",
      "properties": {
        "notes": {
          "type": "array",
          "items": {
            "$ref": "Note"
          },
          "description": "The notes that were created."
        }
      },
      "type": "object",
      "description": "Response for creating notes in batch."
    },
    "InToto": {
      "type": "object",
      "description": "This contains the fields corresponding to the definition of a software supply chain step in an in-toto layout. This information goes into a Grafeas note.",
      "properties": {
        "signingKeys": {
          "items": {
            "$ref": "SigningKey"
          },
          "description": "This field contains the public keys that can be used to verify the signatures on the step metadata.",
          "type": "array"
        },
        "expectedProducts": {
          "type": "array",
          "items": {
            "$ref": "ArtifactRule"
          }
        },
        "expectedCommand": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "This field contains the expected command used to perform the step."
        },
        "threshold": {
          "description": "This field contains a value that indicates the minimum number of keys that need to be used to sign the step's in-toto link.",
          "format": "int64",
          "type": "string"
        },
        "expectedMaterials": {
          "items": {
            "$ref": "ArtifactRule"
          },
          "description": "The following fields contain in-toto artifact rules identifying the artifacts that enter this supply chain step, and exit the supply chain step, i.e. materials and products of the step.",
          "type": "array"
        },
        "stepName": {
          "description": "This field identifies the name of the step in the supply chain.",
          "type": "string"
        }
      },
      "id": "InToto"
    },
    "DocumentNote": {
      "type": "object",
      "id": "DocumentNote",
      "description": "DocumentNote represents an SPDX Document Creation Information section: https://spdx.github.io/spdx-spec/2-document-creation-information/",
      "properties": {
        "spdxVersion": {
          "type": "string",
          "description": "Provide a reference number that can be used to understand how to parse and interpret the rest of the file"
        },
        "dataLicence": {
          "type": "string",
          "description": "Compliance with the SPDX specification includes populating the SPDX fields therein with data related to such fields (\"SPDX-Metadata\")"
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions": {
      "type": "object",
      "description": "Optional arguments to enable specific features of builds.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions",
      "properties": {
        "workerPool": {
          "description": "This field deprecated; please use `pool.name` instead.",
          "type": "string"
        },
        "logging": {
          "type": "string",
          "enum": [
            "LOGGING_UNSPECIFIED",
            "LEGACY",
            "GCS_ONLY",
            "STACKDRIVER_ONLY",
            "CLOUD_LOGGING_ONLY",
            "NONE"
          ],
          "description": "Option to specify the logging mode, which determines if and where build logs are stored.",
          "enumDescriptions": [
            "The service determines the logging mode. The default is `LEGACY`. Do not rely on the default logging behavior as it may change in the future.",
            "Build logs are stored in Cloud Logging and Cloud Storage.",
            "Build logs are stored in Cloud Storage.",
            "This option is the same as CLOUD_LOGGING_ONLY.",
            "Build logs are stored in Cloud Logging. Selecting this option will not allow [logs streaming](https://cloud.google.com/sdk/gcloud/reference/builds/log).",
            "Turn off all logging. No build logs will be captured."
          ]
        },
        "pool": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption",
          "description": "Optional. Specification for execution on a `WorkerPool`. See [running builds in a private pool](https://cloud.google.com/build/docs/private-pools/run-builds-in-private-pool) for more information."
        },
        "machineType": {
          "type": "string",
          "enumDescriptions": [
            "Standard machine type.",
            "Highcpu machine with 8 CPUs.",
            "Highcpu machine with 32 CPUs.",
            "Highcpu e2 machine with 8 CPUs.",
            "Highcpu e2 machine with 32 CPUs."
          ],
          "enum": [
            "UNSPECIFIED",
            "N1_HIGHCPU_8",
            "N1_HIGHCPU_32",
            "E2_HIGHCPU_8",
            "E2_HIGHCPU_32"
          ],
          "description": "Compute Engine machine type on which to run the build."
        },
        "secretEnv": {
          "items": {
            "type": "string"
          },
          "description": "A list of global environment variables, which are encrypted using a Cloud Key Management Service crypto key. These values must be specified in the build's `Secret`. These variables will be available to all build steps in this build.",
          "type": "array"
        },
        "dynamicSubstitutions": {
          "description": "Option to specify whether or not to apply bash style string operations to the substitutions. NOTE: this is always enabled for triggered builds and cannot be overridden in the build configuration file.",
          "type": "boolean"
        },
        "diskSizeGb": {
          "format": "int64",
          "description": "Requested disk size for the VM that runs the build. Note that this is *NOT* \"disk free\"; some of the space will be used by the operating system and build utilities. Also note that this is the minimum disk size that will be allocated for the build -- the build may run with a larger disk than requested. At present, the maximum disk size is 1000GB; builds that request more than the maximum are rejected with an error.",
          "type": "string"
        },
        "substitutionOption": {
          "enumDescriptions": [
            "Fails the build if error in substitutions checks, like missing a substitution in the template or in the map.",
            "Do not fail the build if error in substitutions checks."
          ],
          "description": "Option to specify behavior when there is an error in the substitution checks. NOTE: this is always set to ALLOW_LOOSE for triggered builds and cannot be overridden in the build configuration file.",
          "enum": [
            "MUST_MATCH",
            "ALLOW_LOOSE"
          ],
          "type": "string"
        },
        "sourceProvenanceHash": {
          "type": "array",
          "description": "Requested hash for SourceProvenance.",
          "items": {
            "enumDescriptions": [
              "No hash requested.",
              "Use a sha256 hash.",
              "Use a md5 hash."
            ],
            "type": "string",
            "enum": [
              "NONE",
              "SHA256",
              "MD5"
            ]
          }
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Volume"
          },
          "description": "Global list of volumes to mount for ALL build steps Each volume is created as an empty volume prior to starting the build process. Upon completion of the build, volumes and their contents are discarded. Global volume names and paths cannot conflict with the volumes defined a build step. Using a global volume in a build with only one step is not valid as it is indicative of a build request with an incorrect configuration."
        },
        "logStreamingOption": {
          "enum": [
            "STREAM_DEFAULT",
            "STREAM_ON",
            "STREAM_OFF"
          ],
          "type": "string",
          "description": "Option to define build log streaming behavior to Google Cloud Storage.",
          "enumDescriptions": [
            "Service may automatically determine build log streaming behavior.",
            "Build logs should be streamed to Google Cloud Storage.",
            "Build logs should not be streamed to Google Cloud Storage; they will be written when the build is completed."
          ]
        },
        "requestedVerifyOption": {
          "enum": [
            "NOT_VERIFIED",
            "VERIFIED"
          ],
          "description": "Requested verifiability options.",
          "enumDescriptions": [
            "Not a verifiable build (the default).",
            "Build must be verified."
          ],
          "type": "string"
        },
        "env": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of global environment variable definitions that will exist for all build steps in this build. If a variable is defined in both globally and in a build step, the variable will use the build step value. The elements are of the form \"KEY=VALUE\" for the environment variable \"KEY\" being given the value \"VALUE\"."
        }
      }
    },
    "Hint": {
      "type": "object",
      "description": "This submessage provides human-readable hints about the purpose of the authority. Because the name of a note acts as its resource reference, it is important to disambiguate the canonical name of the Note (which might be a UUID for security purposes) from \"readable\" names more suitable for debug output. Note that these hints should not be used to look up authorities in security sensitive contexts, such as when looking up attestations to verify.",
      "id": "Hint",
      "properties": {
        "humanReadableName": {
          "description": "Required. The human readable name of this attestation authority, for example \"qa\".",
          "type": "string"
        }
      }
    },
    "Detail": {
      "id": "Detail",
      "properties": {
        "packageType": {
          "description": "The type of package; whether native or non native(ruby gems, node.js packages etc).",
          "type": "string"
        },
        "vendor": {
          "type": "string",
          "description": "The name of the vendor of the product."
        },
        "severityName": {
          "type": "string",
          "description": "The severity (eg: distro assigned severity) for this vulnerability."
        },
        "source": {
          "type": "string",
          "description": "The source from which the information in this Detail was obtained."
        },
        "description": {
          "type": "string",
          "description": "A vendor-specific description of this note."
        },
        "fixedLocation": {
          "description": "The fix for this specific package version.",
          "$ref": "VulnerabilityLocation"
        },
        "cpeUri": {
          "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar.",
          "type": "string"
        },
        "sourceUpdateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker."
        },
        "isObsolete": {
          "description": "Whether this detail is obsolete. Occurrences are expected not to point to obsolete details.",
          "type": "boolean"
        },
        "package": {
          "type": "string",
          "description": "Required. The name of the package where the vulnerability was found."
        },
        "minAffectedVersion": {
          "$ref": "Version",
          "description": "The min version of the package in which the vulnerability exists."
        },
        "maxAffectedVersion": {
          "description": "The max version of the package in which the vulnerability exists.",
          "$ref": "Version"
        }
      },
      "type": "object",
      "description": "Identifies all appearances of this vulnerability in the package for a specific distro/location. For example: glibc in cpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes": {
      "description": "Container message for hashes of byte content of files, used in SourceProvenance messages to verify integrity of source input to the build.",
      "properties": {
        "fileHash": {
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Hash"
          },
          "description": "Collection of file hashes.",
          "type": "array"
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes",
      "type": "object"
    },
    "License": {
      "description": "License information.",
      "properties": {
        "comments": {
          "type": "string",
          "description": "Comments"
        },
        "expression": {
          "description": "Often a single license can be used to represent the licensing terms. Sometimes it is necessary to include a choice of one or more licenses or some combination of license identifiers. Examples: \"LGPL-2.1-only OR MIT\", \"LGPL-2.1-only AND MIT\", \"GPL-2.0-or-later WITH Bison-exception-2.2\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "License"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects": {
      "description": "Files in the workspace to upload to Cloud Storage upon successful completion of all build steps.",
      "type": "object",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects",
      "properties": {
        "location": {
          "description": "Cloud Storage bucket and optional object path, in the form \"gs://bucket/path/to/somewhere/\". (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)). Files in the workspace matching any path pattern will be uploaded to Cloud Storage with this location as a prefix.",
          "type": "string"
        },
        "paths": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Path globs used to match files in the build's workspace."
        },
        "timing": {
          "description": "Output only. Stores timing information for pushing all artifact objects.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan",
          "readOnly": true
        }
      }
    },
    "KnowledgeBase": {
      "type": "object",
      "id": "KnowledgeBase",
      "properties": {
        "name": {
          "type": "string",
          "description": "The KB name (generally of the form KB[0-9]+ i.e. KB123456)."
        },
        "url": {
          "description": "A link to the KB in the Windows update catalog - https://www.catalog.update.microsoft.com/",
          "type": "string"
        }
      }
    },
    "VulnerabilityOccurrencesSummary": {
      "type": "object",
      "properties": {
        "counts": {
          "type": "array",
          "items": {
            "$ref": "FixableTotalByDigest"
          },
          "description": "A listing by resource of the number of fixable and total vulnerabilities."
        }
      },
      "description": "A summary of how many vulnerability occurrences there are per resource and severity type.",
      "id": "VulnerabilityOccurrencesSummary"
    },
    "Authority": {
      "type": "object",
      "id": "Authority",
      "description": "Note kind that represents a logical attestation \"role\" or \"authority\". For example, an organization might have one `Authority` for \"QA\" and one for \"build\". This note is intended to act strictly as a grouping mechanism for the attached occurrences (Attestations). This grouping mechanism also provides a security boundary, since IAM ACLs gate the ability for a principle to attach an occurrence to a given note. It also provides a single point of lookup to find all attached attestation occurrences, even if they don't all live in the same project.",
      "properties": {
        "hint": {
          "description": "Hint hints at the purpose of the attestation authority.",
          "$ref": "Hint"
        }
      }
    },
    "Distribution": {
      "type": "object",
      "properties": {
        "architecture": {
          "enum": [
            "ARCHITECTURE_UNSPECIFIED",
            "X86",
            "X64"
          ],
          "enumDescriptions": [
            "Unknown architecture.",
            "X86 architecture.",
            "X64 architecture."
          ],
          "type": "string",
          "description": "The CPU architecture for which packages in this distribution channel were built."
        },
        "url": {
          "description": "The distribution channel-specific homepage for this package.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The distribution channel-specific description of this package."
        },
        "cpeUri": {
          "description": "Required. The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package.",
          "type": "string"
        },
        "latestVersion": {
          "$ref": "Version",
          "description": "The latest available version of this package in this distribution channel."
        },
        "maintainer": {
          "description": "A freeform string denoting the maintainer of this package.",
          "type": "string"
        }
      },
      "id": "Distribution",
      "description": "This represents a particular channel of distribution for a given package. E.g., Debian's jessie-backports dpkg mirror."
    },
    "Link": {
      "type": "object",
      "id": "Link",
      "properties": {
        "byproducts": {
          "description": "ByProducts are data generated as part of a software supply chain step, but are not the actual result of the step.",
          "$ref": "ByProducts"
        },
        "environment": {
          "$ref": "Environment",
          "description": "This is a field that can be used to capture information about the environment. It is suggested for this field to contain information that details environment variables, filesystem information, and the present working directory. The recommended structure of this field is: \"environment\": { \"custom_values\": { \"variables\": \"\", \"filesystem\": \"\", \"workdir\": \"\", \"\": \"...\" } }"
        },
        "command": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "This field contains the full command executed for the step. This can also be empty if links are generated for operations that aren't directly mapped to a specific command. Each term in the command is an independent string in the list. An example of a command in the in-toto metadata field is: \"command\": [\"git\", \"clone\", \"https://github.com/in-toto/demo-project.git\"]"
        },
        "products": {
          "items": {
            "$ref": "GrafeasV1beta1IntotoArtifact"
          },
          "description": "Products are the supply chain artifacts generated as a result of the step. The structure is identical to that of materials.",
          "type": "array"
        },
        "materials": {
          "type": "array",
          "items": {
            "$ref": "GrafeasV1beta1IntotoArtifact"
          },
          "description": "Materials are the supply chain artifacts that go into the step and are used for the operation performed. The key of the map is the path of the artifact and the structure contains the recorded hash information. An example is: \"materials\": [ { \"resource_uri\": \"foo/bar\", \"hashes\": { \"sha256\": \"ebebf...\", : } } ]"
        }
      },
      "description": "This corresponds to an in-toto link."
    },
    "Version": {
      "description": "Version contains structured information about the version of a package.",
      "type": "object",
      "id": "Version",
      "properties": {
        "inclusive": {
          "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "Required only when version kind is NORMAL. The main part of the version name."
        },
        "epoch": {
          "type": "integer",
          "format": "int32",
          "description": "Used to correct mistakes in the version numbering scheme."
        },
        "revision": {
          "description": "The iteration of the package build from the above version.",
          "type": "string"
        },
        "kind": {
          "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
          "type": "string",
          "enumDescriptions": [
            "Unknown.",
            "A standard package version.",
            "A special version representing negative infinity.",
            "A special version representing positive infinity."
          ],
          "enum": [
            "VERSION_KIND_UNSPECIFIED",
            "NORMAL",
            "MINIMUM",
            "MAXIMUM"
          ]
        }
      }
    },
    "Location": {
      "description": "An occurrence of a particular package installation found within a system's filesystem. E.g., glibc was found in `/var/lib/dpkg/status`.",
      "properties": {
        "path": {
          "description": "The path from which we gathered that this package/version is installed.",
          "type": "string"
        },
        "version": {
          "description": "Deprecated. The version installed at this location.",
          "$ref": "Version"
        },
        "cpeUri": {
          "description": "Deprecated. The CPE URI in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Location"
    },
    "ListScanConfigsResponse": {
      "properties": {
        "scanConfigs": {
          "type": "array",
          "items": {
            "$ref": "ScanConfig"
          },
          "description": "The scan configurations requested."
        },
        "nextPageToken": {
          "description": "The next pagination token in the list response. It should be used as `page_token` for the following request. An empty value means no more results.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListScanConfigsResponse",
      "description": "Response for listing scan configurations."
    },
    "RepoId": {
      "type": "object",
      "description": "A unique identifier for a Cloud Repo.",
      "id": "RepoId",
      "properties": {
        "uid": {
          "description": "A server-assigned, globally unique identifier.",
          "type": "string"
        },
        "projectRepoId": {
          "description": "A combination of a project ID and a repo name.",
          "$ref": "ProjectRepoId"
        }
      }
    },
    "Resource": {
      "description": "An entity that can have metadata. For example, a Docker image.",
      "type": "object",
      "id": "Resource",
      "properties": {
        "contentHash": {
          "$ref": "Hash",
          "description": "Deprecated, do not use. Use uri instead. The hash of the resource content. For example, the Docker digest."
        },
        "uri": {
          "type": "string",
          "description": "Required. The unique URI of the resource. For example, `https://gcr.io/project/image@sha256:foo` for a Docker image."
        },
        "name": {
          "description": "Deprecated, do not use. Use uri instead. The name of the resource. For example, the name of a Docker image - \"Debian\".",
          "type": "string"
        }
      }
    },
    "CVSSv3": {
      "id": "CVSSv3",
      "properties": {
        "scope": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "SCOPE_UNSPECIFIED",
            "SCOPE_UNCHANGED",
            "SCOPE_CHANGED"
          ]
        },
        "impactScore": {
          "format": "float",
          "type": "number"
        },
        "privilegesRequired": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "PRIVILEGES_REQUIRED_UNSPECIFIED",
            "PRIVILEGES_REQUIRED_NONE",
            "PRIVILEGES_REQUIRED_LOW",
            "PRIVILEGES_REQUIRED_HIGH"
          ]
        },
        "integrityImpact": {
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        },
        "availabilityImpact": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ],
          "type": "string"
        },
        "attackComplexity": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "ATTACK_COMPLEXITY_UNSPECIFIED",
            "ATTACK_COMPLEXITY_LOW",
            "ATTACK_COMPLEXITY_HIGH"
          ]
        },
        "baseScore": {
          "type": "number",
          "format": "float",
          "description": "The base score is a function of the base metric scores."
        },
        "attackVector": {
          "description": "Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments.",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "ATTACK_VECTOR_UNSPECIFIED",
            "ATTACK_VECTOR_NETWORK",
            "ATTACK_VECTOR_ADJACENT",
            "ATTACK_VECTOR_LOCAL",
            "ATTACK_VECTOR_PHYSICAL"
          ]
        },
        "userInteraction": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "USER_INTERACTION_UNSPECIFIED",
            "USER_INTERACTION_NONE",
            "USER_INTERACTION_REQUIRED"
          ]
        },
        "confidentialityImpact": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "IMPACT_UNSPECIFIED",
            "IMPACT_HIGH",
            "IMPACT_LOW",
            "IMPACT_NONE"
          ]
        },
        "exploitabilityScore": {
          "format": "float",
          "type": "number"
        }
      },
      "type": "object",
      "description": "Deprecated. Common Vulnerability Scoring System version 3. For details, see https://www.first.org/cvss/specification-document"
    },
    "Discovered": {
      "properties": {
        "lastAnalysisTime": {
          "description": "The last time continuous analysis was done for this resource. Deprecated, do not use.",
          "type": "string",
          "format": "google-datetime"
        },
        "analysisError": {
          "description": "Indicates any errors encountered during analysis of a resource. There could be 0 or more of these errors.",
          "items": {
            "$ref": "Status"
          },
          "type": "array"
        },
        "analysisStatus": {
          "type": "string",
          "enum": [
            "ANALYSIS_STATUS_UNSPECIFIED",
            "PENDING",
            "SCANNING",
            "FINISHED_SUCCESS",
            "COMPLETE",
            "FINISHED_FAILED",
            "FINISHED_UNSUPPORTED"
          ],
          "description": "The status of discovery for the resource.",
          "enumDescriptions": [
            "Unknown.",
            "Resource is known but no action has been taken yet.",
            "Resource is being analyzed.",
            "Analysis has finished successfully.",
            "Analysis has completed.",
            "Analysis has finished unsuccessfully, the analysis itself is in a bad state.",
            "The resource is known not to be supported"
          ]
        },
        "analysisCompleted": {
          "$ref": "AnalysisCompleted"
        },
        "continuousAnalysis": {
          "enum": [
            "CONTINUOUS_ANALYSIS_UNSPECIFIED",
            "ACTIVE",
            "INACTIVE"
          ],
          "enumDescriptions": [
            "Unknown.",
            "The resource is continuously analyzed.",
            "The resource is ignored for continuous analysis."
          ],
          "type": "string",
          "description": "Whether the resource is continuously analyzed."
        },
        "analysisStatusError": {
          "description": "When an error is encountered this will contain a LocalizedMessage under details to show to the user. The LocalizedMessage is output only and populated by the API.",
          "$ref": "Status"
        }
      },
      "type": "object",
      "description": "Provides information about the analysis status of a discovered resource.",
      "id": "Discovered"
    },
    "AliasContext": {
      "description": "An alias to a repo revision.",
      "type": "object",
      "id": "AliasContext",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "KIND_UNSPECIFIED",
            "FIXED",
            "MOVABLE",
            "OTHER"
          ],
          "description": "The alias kind.",
          "enumDescriptions": [
            "Unknown.",
            "Git tag.",
            "Git branch.",
            "Used to specify non-standard aliases. For example, if a Git repo has a ref named \"refs/foo/bar\"."
          ]
        },
        "name": {
          "description": "The alias name.",
          "type": "string"
        }
      }
    },
    "GrafeasV1beta1BuildDetails": {
      "properties": {
        "provenance": {
          "$ref": "BuildProvenance",
          "description": "Required. The actual provenance for the build."
        },
        "provenanceBytes": {
          "type": "string",
          "description": "Serialized JSON representation of the provenance, used in generating the build signature in the corresponding build note. After verifying the signature, `provenance_bytes` can be unmarshalled and compared to the provenance to confirm that it is unchanged. A base64-encoded string representation of the provenance bytes is used for the signature in order to interoperate with openssl which expects this format for signature verification. The serialized form is captured both to avoid ambiguity in how the provenance is marshalled to json as well to prevent incompatibilities with future changes."
        }
      },
      "id": "GrafeasV1beta1BuildDetails",
      "type": "object",
      "description": "Details of a build occurrence."
    },
    "Layer": {
      "type": "object",
      "description": "Layer holds metadata specific to a layer of a Docker image.",
      "id": "Layer",
      "properties": {
        "arguments": {
          "description": "The recovered arguments to the Dockerfile directive.",
          "type": "string"
        },
        "directive": {
          "type": "string",
          "description": "Required. The recovered Dockerfile directive used to construct this layer.",
          "enum": [
            "DIRECTIVE_UNSPECIFIED",
            "MAINTAINER",
            "RUN",
            "CMD",
            "LABEL",
            "EXPOSE",
            "ENV",
            "ADD",
            "COPY",
            "ENTRYPOINT",
            "VOLUME",
            "USER",
            "WORKDIR",
            "ARG",
            "ONBUILD",
            "STOPSIGNAL",
            "HEALTHCHECK",
            "SHELL"
          ],
          "enumDescriptions": [
            "Default value for unsupported/missing directive.",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/",
            "https://docs.docker.com/engine/reference/builder/"
          ]
        }
      }
    },
    "DocumentOccurrence": {
      "description": "DocumentOccurrence represents an SPDX Document Creation Information section: https://spdx.github.io/spdx-spec/2-document-creation-information/",
      "properties": {
        "creators": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Identify who (or what, in the case of a tool) created the SPDX file. If the SPDX file was created by an individual, indicate the person's name"
        },
        "creatorComment": {
          "description": "A field for creators of the SPDX file to provide general comments about the creation of the SPDX file or any other relevant comment not included in the other fields",
          "type": "string"
        },
        "namespace": {
          "type": "string",
          "description": "Provide an SPDX document specific namespace as a unique absolute Uniform Resource Identifier (URI) as specified in RFC-3986, with the exception of the ‘#’ delimiter"
        },
        "documentComment": {
          "type": "string",
          "description": "A field for creators of the SPDX file content to provide comments to the consumers of the SPDX document"
        },
        "licenseListVersion": {
          "description": "A field for creators of the SPDX file to provide the version of the SPDX License List used when the SPDX file was created",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Identify the current SPDX document which may be referenced in relationships by other files, packages internally and documents externally"
        },
        "title": {
          "type": "string",
          "description": "Identify name of this document as designated by creator"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Identify when the SPDX file was originally created. The date is to be specified according to combined date and time in UTC format as specified in ISO 8601 standard"
        },
        "externalDocumentRefs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Identify any external SPDX documents referenced within this SPDX document"
        }
      },
      "type": "object",
      "id": "DocumentOccurrence"
    },
    "Command": {
      "description": "Command describes a step performed as part of the build pipeline.",
      "properties": {
        "args": {
          "type": "array",
          "description": "Command-line arguments used when executing this command.",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "Optional unique identifier for this command, used in wait_for to reference this command as a dependency.",
          "type": "string"
        },
        "waitFor": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The ID(s) of the command(s) that this command depends on."
        },
        "env": {
          "type": "array",
          "description": "Environment variables set before running this command.",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Required. Name of the command, as presented on the command line, or if the command is packaged as a Docker container, as presented to `docker pull`.",
          "type": "string"
        },
        "dir": {
          "description": "Working directory (relative to project source root) used when running this command.",
          "type": "string"
        }
      },
      "id": "Command",
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1SourceProvenance": {
      "properties": {
        "resolvedStorageSourceManifest": {
          "description": "A copy of the build's `source.storage_source_manifest`, if exists, with any revisions resolved. This feature is in Preview.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest"
        },
        "resolvedRepoSource": {
          "description": "A copy of the build's `source.repo_source`, if exists, with any revisions resolved.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource"
        },
        "fileHashes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes"
          },
          "description": "Output only. Hash(es) of the build source, which can be used to verify that the original source integrity was maintained in the build. Note that `FileHashes` will only be populated if `BuildOptions` has requested a `SourceProvenanceHash`. The keys to this map are file paths used as build source and the values contain the hash values for those files. If the build source came in a single package such as a gzipped tarfile (`.tar.gz`), the `FileHash` will be for the single path to that file.",
          "readOnly": true
        },
        "resolvedStorageSource": {
          "description": "A copy of the build's `source.storage_source`, if exists, with any generations resolved.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource"
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1SourceProvenance",
      "description": "Provenance of the source. Ways to find the original source, or verify that some source was used for this build.",
      "type": "object"
    },
    "BatchCreateOccurrencesResponse": {
      "properties": {
        "occurrences": {
          "items": {
            "$ref": "Occurrence"
          },
          "type": "array",
          "description": "The occurrences that were created."
        }
      },
      "id": "BatchCreateOccurrencesResponse",
      "description": "Response for creating occurrences in batch.",
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Results": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Results",
      "properties": {
        "buildStepImages": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of build step digests, in the order corresponding to build step indices."
        },
        "images": {
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage"
          },
          "type": "array",
          "description": "Container images that were built as a part of the build."
        },
        "numArtifacts": {
          "type": "string",
          "description": "Number of artifacts uploaded. Only populated when artifacts are uploaded.",
          "format": "int64"
        },
        "buildStepOutputs": {
          "type": "array",
          "description": "List of build step outputs, produced by builder images, in the order corresponding to build step indices. [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders) can produce this output by writing to `$BUILDER_OUTPUT/output`. Only the first 4KB of data is stored.",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "artifactManifest": {
          "type": "string",
          "description": "Path to the artifact manifest. Only populated when artifacts are uploaded."
        },
        "artifactTiming": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan",
          "description": "Time to push all non-container artifacts."
        }
      },
      "description": "Artifacts created by the build pipeline.",
      "type": "object"
    },
    "Note": {
      "properties": {
        "relatedUrl": {
          "type": "array",
          "items": {
            "$ref": "RelatedUrl"
          },
          "description": "URLs associated with this note."
        },
        "spdxPackage": {
          "description": "A note describing an SPDX Package.",
          "$ref": "PackageInfoNote"
        },
        "expirationTime": {
          "type": "string",
          "description": "Time of expiration for this note. Empty if note does not expire.",
          "format": "google-datetime"
        },
        "longDescription": {
          "description": "A detailed description of this note.",
          "type": "string"
        },
        "kind": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The note and occurrence represent a package vulnerability.",
            "The note and occurrence assert build provenance.",
            "This represents an image basis relationship.",
            "This represents a package installed via a package manager.",
            "The note and occurrence track deployment events.",
            "The note and occurrence track the initial discovery status of a resource.",
            "This represents a logical \"role\" that can attest to artifacts.",
            "This represents an in-toto link.",
            "This represents a software bill of materials.",
            "This represents an SPDX Package.",
            "This represents an SPDX File.",
            "This represents an SPDX Relationship."
          ],
          "enum": [
            "NOTE_KIND_UNSPECIFIED",
            "VULNERABILITY",
            "BUILD",
            "IMAGE",
            "PACKAGE",
            "DEPLOYMENT",
            "DISCOVERY",
            "ATTESTATION",
            "INTOTO",
            "SBOM",
            "SPDX_PACKAGE",
            "SPDX_FILE",
            "SPDX_RELATIONSHIP"
          ],
          "type": "string",
          "description": "Output only. The type of analysis. This field can be used as a filter in list requests."
        },
        "discovery": {
          "$ref": "Discovery",
          "description": "A note describing the initial analysis of a resource."
        },
        "build": {
          "$ref": "Build",
          "description": "A note describing build provenance for a verifiable build."
        },
        "spdxFile": {
          "$ref": "FileNote",
          "description": "A note describing an SPDX File."
        },
        "spdxRelationship": {
          "description": "A note describing an SPDX File.",
          "$ref": "RelationshipNote"
        },
        "deployable": {
          "$ref": "Deployable",
          "description": "A note describing something that can be deployed."
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`."
        },
        "intoto": {
          "description": "A note describing an in-toto link.",
          "$ref": "InToto"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time this note was created. This field can be used as a filter in list requests."
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The time this note was last updated. This field can be used as a filter in list requests.",
          "format": "google-datetime"
        },
        "baseImage": {
          "description": "A note describing a base image.",
          "$ref": "Basis"
        },
        "attestationAuthority": {
          "$ref": "Authority",
          "description": "A note describing an attestation role."
        },
        "package": {
          "description": "A note describing a package hosted by various package managers.",
          "$ref": "Package"
        },
        "vulnerability": {
          "$ref": "Vulnerability",
          "description": "A note describing a package vulnerability."
        },
        "relatedNoteNames": {
          "type": "array",
          "description": "Other notes related to this note.",
          "items": {
            "type": "string"
          }
        },
        "sbom": {
          "$ref": "DocumentNote",
          "description": "A note describing a software bill of materials."
        },
        "shortDescription": {
          "description": "A one sentence description of this note.",
          "type": "string"
        }
      },
      "description": "A type of analysis that can be done for a resource.",
      "id": "Note",
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult",
      "type": "object",
      "description": "ApprovalResult describes the decision and associated metadata of a manual approval of a build.",
      "properties": {
        "approvalTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time when the approval decision was made.",
          "type": "string"
        },
        "decision": {
          "type": "string",
          "description": "Required. The decision of this manual approval.",
          "enum": [
            "DECISION_UNSPECIFIED",
            "APPROVED",
            "REJECTED"
          ],
          "enumDescriptions": [
            "Default enum type. This should not be used.",
            "Build is approved.",
            "Build is rejected."
          ]
        },
        "approverAccount": {
          "description": "Output only. Email of the user that called the ApproveBuild API to approve or reject a build at the time that the API was called.",
          "type": "string",
          "readOnly": true
        },
        "url": {
          "type": "string",
          "description": "Optional. An optional URL tied to this manual approval result. This field is essentially the same as comment, except that it will be rendered by the UI differently. An example use case is a link to an external job that approved this Build."
        },
        "comment": {
          "description": "Optional. An optional comment for this manual approval result.",
          "type": "string"
        }
      }
    },
    "ScanConfig": {
      "type": "object",
      "description": "A scan configuration specifies whether Cloud components in a project have a particular type of analysis being run. For example, it can configure whether vulnerability scanning is being done on Docker images or not.",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. The time this scan config was last updated.",
          "format": "google-datetime"
        },
        "createTime": {
          "description": "Output only. The time this scan config was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether the scan is enabled."
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the scan configuration in the form of `projects/[PROJECT_ID]/scanConfigs/[SCAN_CONFIG_ID]`."
        },
        "description": {
          "type": "string",
          "description": "Output only. A human-readable description of what the scan configuration does."
        }
      },
      "id": "ScanConfig"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource": {
      "description": "Location of the source in an archive file in Google Cloud Storage.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource",
      "type": "object",
      "properties": {
        "generation": {
          "type": "string",
          "description": "Google Cloud Storage generation for the object. If the generation is omitted, the latest generation will be used.",
          "format": "int64"
        },
        "object": {
          "description": "Google Cloud Storage object containing the source. This object must be a zipped (`.zip`) or gzipped archive file (`.tar.gz`) containing source to build.",
          "type": "string"
        },
        "bucket": {
          "description": "Google Cloud Storage bucket containing the source (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).",
          "type": "string"
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest": {
      "description": "Location of the source manifest in Google Cloud Storage. This feature is in Preview; see description [here](https://github.com/GoogleCloudPlatform/cloud-builders/tree/master/gcs-fetcher).",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest",
      "properties": {
        "generation": {
          "type": "string",
          "format": "int64",
          "description": "Google Cloud Storage generation for the object. If the generation is omitted, the latest generation will be used."
        },
        "bucket": {
          "description": "Google Cloud Storage bucket containing the source manifest (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).",
          "type": "string"
        },
        "object": {
          "type": "string",
          "description": "Google Cloud Storage object containing the source manifest. This object must be a JSON file."
        }
      },
      "type": "object"
    },
    "Policy": {
      "properties": {
        "etag": {
          "format": "byte",
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "items": {
            "$ref": "Binding"
          },
          "type": "array"
        },
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
    },
    "VulnerabilityLocation": {
      "description": "The location of the vulnerability.",
      "type": "object",
      "properties": {
        "package": {
          "type": "string",
          "description": "Required. The package being described."
        },
        "version": {
          "$ref": "Version",
          "description": "Required. The version of the package being described."
        },
        "cpeUri": {
          "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) format. Examples include distro or storage location for vulnerable jar.",
          "type": "string"
        }
      },
      "id": "VulnerabilityLocation"
    },
    "Discovery": {
      "description": "A note that indicates a type of analysis a provider would perform. This note exists in a provider's project. A `Discovery` occurrence is created in a consumer's project at the start of analysis.",
      "id": "Discovery",
      "properties": {
        "analysisKind": {
          "description": "Required. Immutable. The kind of analysis that is handled by this discovery.",
          "enum": [
            "NOTE_KIND_UNSPECIFIED",
            "VULNERABILITY",
            "BUILD",
            "IMAGE",
            "PACKAGE",
            "DEPLOYMENT",
            "DISCOVERY",
            "ATTESTATION",
            "INTOTO",
            "SBOM",
            "SPDX_PACKAGE",
            "SPDX_FILE",
            "SPDX_RELATIONSHIP"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The note and occurrence represent a package vulnerability.",
            "The note and occurrence assert build provenance.",
            "This represents an image basis relationship.",
            "This represents a package installed via a package manager.",
            "The note and occurrence track deployment events.",
            "The note and occurrence track the initial discovery status of a resource.",
            "This represents a logical \"role\" that can attest to artifacts.",
            "This represents an in-toto link.",
            "This represents a software bill of materials.",
            "This represents an SPDX Package.",
            "This represents an SPDX File.",
            "This represents an SPDX Relationship."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetIamPolicyRequest": {
      "description": "Request message for `GetIamPolicy` method.",
      "type": "object",
      "properties": {
        "options": {
          "$ref": "GetPolicyOptions",
          "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
        }
      },
      "id": "GetIamPolicyRequest"
    },
    "PgpSignedAttestation": {
      "id": "PgpSignedAttestation",
      "description": "An attestation wrapper with a PGP-compatible signature. This message only supports `ATTACHED` signatures, where the payload that is signed is included alongside the signature itself in the same file.",
      "type": "object",
      "properties": {
        "contentType": {
          "description": "Type (for example schema) of the attestation payload that was signed. The verifier must ensure that the provided type is one that the verifier supports, and that the attestation payload is a valid instantiation of that type (for example by validating a JSON schema).",
          "type": "string",
          "enumDescriptions": [
            "`ContentType` is not set.",
            "Atomic format attestation signature. See https://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md The payload extracted from `signature` is a JSON blob conforming to the linked schema."
          ],
          "enum": [
            "CONTENT_TYPE_UNSPECIFIED",
            "SIMPLE_SIGNING_JSON"
          ]
        },
        "pgpKeyId": {
          "type": "string",
          "description": "The cryptographic fingerprint of the key used to generate the signature, as output by, e.g. `gpg --list-keys`. This should be the version 4, full 160-bit fingerprint, expressed as a 40 character hexadecimal string. See https://tools.ietf.org/html/rfc4880#section-12.2 for details. Implementations may choose to acknowledge \"LONG\", \"SHORT\", or other abbreviated key IDs, but only the full fingerprint is guaranteed to work. In gpg, the full fingerprint can be retrieved from the `fpr` field returned when calling --list-keys with --with-colons. For example: ``` gpg --with-colons --with-fingerprint --force-v4-certs \\ --list-keys attester@example.com tru::1:1513631572:0:3:1:5 pub:...... fpr:::::::::24FF6481B76AC91E66A00AC657A93A81EF3AE6FB: ``` Above, the fingerprint is `24FF6481B76AC91E66A00AC657A93A81EF3AE6FB`."
        },
        "signature": {
          "type": "string",
          "description": "Required. The raw content of the signature, as output by GNU Privacy Guard (GPG) or equivalent. Since this message only supports attached signatures, the payload that was signed must be attached. While the signature format supported is dependent on the verification implementation, currently only ASCII-armored (`--armor` to gpg), non-clearsigned (`--sign` rather than `--clearsign` to gpg) are supported. Concretely, `gpg --sign --armor --output=signature.gpg payload.json` will create the signature content expected in this field in `signature.gpg` for the `payload.json` attestation payload."
        }
      }
    },
    "RelationshipNote": {
      "description": "RelationshipNote represents an SPDX Relationship section: https://spdx.github.io/spdx-spec/7-relationships-between-SPDX-elements/",
      "id": "RelationshipNote",
      "properties": {
        "type": {
          "description": "The type of relationship between the source and target SPDX elements",
          "type": "string",
          "enum": [
            "RELATIONSHIP_TYPE_UNSPECIFIED",
            "DESCRIBES",
            "DESCRIBED_BY",
            "CONTAINS",
            "CONTAINED_BY",
            "DEPENDS_ON",
            "DEPENDENCY_OF",
            "DEPENDENCY_MANIFEST_OF",
            "BUILD_DEPENDENCY_OF",
            "DEV_DEPENDENCY_OF",
            "OPTIONAL_DEPENDENCY_OF",
            "PROVIDED_DEPENDENCY_OF",
            "TEST_DEPENDENCY_OF",
            "RUNTIME_DEPENDENCY_OF",
            "EXAMPLE_OF",
            "GENERATES",
            "GENERATED_FROM",
            "ANCESTOR_OF",
            "DESCENDANT_OF",
            "VARIANT_OF",
            "DISTRIBUTION_ARTIFACT",
            "PATCH_FOR",
            "PATCH_APPLIED",
            "COPY_OF",
            "FILE_ADDED",
            "FILE_DELETED",
            "FILE_MODIFIED",
            "EXPANDED_FROM_ARCHIVE",
            "DYNAMIC_LINK",
            "STATIC_LINK",
            "DATA_FILE_OF",
            "TEST_CASE_OF",
            "BUILD_TOOL_OF",
            "DEV_TOOL_OF",
            "TEST_OF",
            "TEST_TOOL_OF",
            "DOCUMENTATION_OF",
            "OPTIONAL_COMPONENT_OF",
            "METAFILE_OF",
            "PACKAGE_OF",
            "AMENDS",
            "PREREQUISITE_FOR",
            "HAS_PREREQUISITE",
            "OTHER"
          ],
          "enumDescriptions": [
            "Unspecified",
            "Is to be used when SPDXRef-DOCUMENT describes SPDXRef-A",
            "Is to be used when SPDXRef-A is described by SPDXREF-Document",
            "Is to be used when SPDXRef-A contains SPDXRef-B",
            "Is to be used when SPDXRef-A is contained by SPDXRef-B",
            "Is to be used when SPDXRef-A depends on SPDXRef-B",
            "Is to be used when SPDXRef-A is dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a manifest file that lists a set of dependencies for SPDXRef-B",
            "Is to be used when SPDXRef-A is a build dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a development dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is an optional dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a to be provided dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a test dependency of SPDXRef-B",
            "Is to be used when SPDXRef-A is a dependency required for the execution of SPDXRef-B",
            "Is to be used when SPDXRef-A is an example of SPDXRef-B",
            "Is to be used when SPDXRef-A generates SPDXRef-B",
            "Is to be used when SPDXRef-A was generated from SPDXRef-B",
            "Is to be used when SPDXRef-A is an ancestor (same lineage but pre-dates) SPDXRef-B",
            "Is to be used when SPDXRef-A is a descendant of (same lineage but postdates) SPDXRef-B",
            "Is to be used when SPDXRef-A is a variant of (same lineage but not clear which came first) SPDXRef-B",
            "Is to be used when distributing SPDXRef-A requires that SPDXRef-B also be distributed",
            "Is to be used when SPDXRef-A is a patch file for (to be applied to) SPDXRef-B",
            "Is to be used when SPDXRef-A is a patch file that has been applied to SPDXRef-B",
            "Is to be used when SPDXRef-A is an exact copy of SPDXRef-B",
            "Is to be used when SPDXRef-A is a file that was added to SPDXRef-B",
            "Is to be used when SPDXRef-A is a file that was deleted from SPDXRef-B",
            "Is to be used when SPDXRef-A is a file that was modified from SPDXRef-B",
            "Is to be used when SPDXRef-A is expanded from the archive SPDXRef-B",
            "Is to be used when SPDXRef-A dynamically links to SPDXRef-B",
            "Is to be used when SPDXRef-A statically links to SPDXRef-B",
            "Is to be used when SPDXRef-A is a data file used in SPDXRef-B",
            "Is to be used when SPDXRef-A is a test case used in testing SPDXRef-B",
            "Is to be used when SPDXRef-A is used to build SPDXRef-B",
            "Is to be used when SPDXRef-A is used as a development tool for SPDXRef-B",
            "Is to be used when SPDXRef-A is used for testing SPDXRef-B",
            "Is to be used when SPDXRef-A is used as a test tool for SPDXRef-B",
            "Is to be used when SPDXRef-A provides documentation of SPDXRef-B",
            "Is to be used when SPDXRef-A is an optional component of SPDXRef-B",
            "Is to be used when SPDXRef-A is a metafile of SPDXRef-B",
            "Is to be used when SPDXRef-A is used as a package as part of SPDXRef-B",
            "Is to be used when (current) SPDXRef-DOCUMENT amends the SPDX information in SPDXRef-B",
            "Is to be used when SPDXRef-A is a prerequisite for SPDXRef-B",
            "Is to be used when SPDXRef-A has as a prerequisite SPDXRef-B",
            "Is to be used for a relationship which has not been defined in the formal SPDX specification. A description of the relationship should be included in the Relationship comments field"
          ]
        }
      },
      "type": "object"
    },
    "GetPolicyOptions": {
      "properties": {
        "requestedPolicyVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        }
      },
      "id": "GetPolicyOptions",
      "description": "Encapsulates settings provided to GetIamPolicy.",
      "type": "object"
    },
    "ListOccurrencesResponse": {
      "id": "ListOccurrencesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The next pagination token in the list response. It should be used as `page_token` for the following request. An empty value means no more results.",
          "type": "string"
        },
        "occurrences": {
          "items": {
            "$ref": "Occurrence"
          },
          "type": "array",
          "description": "The occurrences requested."
        }
      },
      "description": "Response for listing occurrences."
    },
    "PackageIssue": {
      "id": "PackageIssue",
      "type": "object",
      "description": "This message wraps a location affected by a vulnerability and its associated fix (if one is available).",
      "properties": {
        "fixedLocation": {
          "$ref": "VulnerabilityLocation",
          "description": "The location of the available fix for vulnerability."
        },
        "effectiveSeverity": {
          "description": "Output only. The distro or language system assigned severity for this vulnerability when that is available and note provider assigned severity when it is not available.",
          "type": "string",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "MINIMAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Unknown.",
            "Minimal severity.",
            "Low severity.",
            "Medium severity.",
            "High severity.",
            "Critical severity."
          ]
        },
        "packageType": {
          "type": "string",
          "description": "The type of package (e.g. OS, MAVEN, GO)."
        },
        "severityName": {
          "description": "Deprecated, use Details.effective_severity instead The severity (e.g., distro assigned severity) for this vulnerability.",
          "type": "string"
        },
        "affectedLocation": {
          "description": "Required. The location of the vulnerability.",
          "$ref": "VulnerabilityLocation"
        }
      }
    },
    "Deployable": {
      "id": "Deployable",
      "properties": {
        "resourceUri": {
          "items": {
            "type": "string"
          },
          "description": "Required. Resource URI for the artifact being deployed.",
          "type": "array"
        }
      },
      "description": "An artifact that can be deployed in some runtime.",
      "type": "object"
    },
    "Artifact": {
      "type": "object",
      "description": "Artifact describes a build product.",
      "id": "Artifact",
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Related artifact names. This may be the path to a binary or jar file, or in the case of a container build, the name used to push the container image to Google Container Registry, as presented to `docker push`. Note that a single Artifact ID can have multiple names, for example if two tags are applied to one image."
        },
        "id": {
          "description": "Artifact ID, if any; for container images, this will be a URL by digest like `gcr.io/projectID/imagename@sha256:123456`.",
          "type": "string"
        },
        "checksum": {
          "type": "string",
          "description": "Hash or checksum value of a binary, or Docker Registry 2.0 digest of a container."
        }
      }
    },
    "BatchCreateOccurrencesRequest": {
      "properties": {
        "occurrences": {
          "description": "Required. The occurrences to create. Max allowed length is 1000.",
          "items": {
            "$ref": "Occurrence"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "BatchCreateOccurrencesRequest",
      "description": "Request to create occurrences in batch."
    },
    "Hash": {
      "type": "object",
      "description": "Container message for hash values.",
      "id": "Hash",
      "properties": {
        "value": {
          "type": "string",
          "description": "Required. The hash value.",
          "format": "byte"
        },
        "type": {
          "enumDescriptions": [
            "Unknown.",
            "A SHA-256 hash."
          ],
          "description": "Required. The type of hash that was performed.",
          "type": "string",
          "enum": [
            "HASH_TYPE_UNSPECIFIED",
            "SHA256"
          ]
        }
      }
    },
    "CloudRepoSourceContext": {
      "type": "object",
      "description": "A CloudRepoSourceContext denotes a particular revision in a Google Cloud Source Repo.",
      "properties": {
        "revisionId": {
          "description": "A revision ID.",
          "type": "string"
        },
        "aliasContext": {
          "$ref": "AliasContext",
          "description": "An alias, which may be a branch or tag."
        },
        "repoId": {
          "$ref": "RepoId",
          "description": "The ID of the repo."
        }
      },
      "id": "CloudRepoSourceContext"
    },
    "ByProducts": {
      "properties": {
        "customValues": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "ByProducts",
      "description": "Defines an object for the byproducts field in in-toto links. The suggested fields are \"stderr\", \"stdout\", and \"return-value\".",
      "type": "object"
    },
    "SourceContext": {
      "type": "object",
      "id": "SourceContext",
      "description": "A SourceContext is a reference to a tree of files. A SourceContext together with a path point to a unique revision of a single file or directory.",
      "properties": {
        "cloudRepo": {
          "description": "A SourceContext referring to a revision in a Google Cloud Source Repo.",
          "$ref": "CloudRepoSourceContext"
        },
        "gerrit": {
          "description": "A SourceContext referring to a Gerrit project.",
          "$ref": "GerritSourceContext"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels with user defined metadata."
        },
        "git": {
          "description": "A SourceContext referring to any third party Git repo (e.g., GitHub).",
          "$ref": "GitSourceContext"
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildStep": {
      "description": "A step in the build pipeline.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildStep",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the container image that will run this particular build step. If the image is available in the host's Docker daemon's cache, it will be run directly. If not, the host will attempt to pull the image first, using the builder service account's credentials if necessary. The Docker daemon's cache will already have the latest versions of all of the officially supported build steps ([https://github.com/GoogleCloudPlatform/cloud-builders](https://github.com/GoogleCloudPlatform/cloud-builders)). The Docker daemon will also have cached many of the layers for some popular images, like \"ubuntu\", \"debian\", but they will be refreshed at the time you attempt to use them. If you built an image in a previous build step, it will be stored in the host's Docker daemon's cache and is available to use as the name for a later build step."
        },
        "script": {
          "description": "A shell script to be executed in the step. When script is provided, the user cannot specify the entrypoint or args.",
          "type": "string"
        },
        "waitFor": {
          "type": "array",
          "description": "The ID(s) of the step(s) that this build step depends on. This build step will not start until all the build steps in `wait_for` have completed successfully. If `wait_for` is empty, this build step will start when all previous build steps in the `Build.Steps` list have completed successfully.",
          "items": {
            "type": "string"
          }
        },
        "pullTiming": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan",
          "description": "Output only. Stores timing information for pulling this build step's builder image only.",
          "readOnly": true
        },
        "allowExitCodes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "Allow this build step to fail without failing the entire build if and only if the exit code is one of the specified codes. If allow_failure is also specified, this field will take precedence."
        },
        "allowFailure": {
          "description": "Allow this build step to fail without failing the entire build. If false, the entire build will fail if this step fails. Otherwise, the build will succeed, but this step will still have a failure status. Error information will be reported in the failure_detail field.",
          "type": "boolean"
        },
        "timeout": {
          "type": "string",
          "format": "google-duration",
          "description": "Time limit for executing this build step. If not defined, the step has no time limit and will be allowed to continue to run until either it completes or the build itself times out."
        },
        "entrypoint": {
          "type": "string",
          "description": "Entrypoint to be used instead of the build step image's default entrypoint. If unset, the image's default entrypoint is used."
        },
        "env": {
          "items": {
            "type": "string"
          },
          "description": "A list of environment variable definitions to be used when running a step. The elements are of the form \"KEY=VALUE\" for the environment variable \"KEY\" being given the value \"VALUE\".",
          "type": "array"
        },
        "volumes": {
          "items": {
            "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1Volume"
          },
          "description": "List of volumes to mount into the build step. Each volume is created as an empty volume prior to execution of the build step. Upon completion of the build, volumes and their contents are discarded. Using a named volume in only one step is not valid as it is indicative of a build request with an incorrect configuration.",
          "type": "array"
        },
        "timing": {
          "description": "Output only. Stores timing information for executing this build step.",
          "readOnly": true,
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan"
        },
        "status": {
          "enum": [
            "STATUS_UNKNOWN",
            "PENDING",
            "QUEUED",
            "WORKING",
            "SUCCESS",
            "FAILURE",
            "INTERNAL_ERROR",
            "TIMEOUT",
            "CANCELLED",
            "EXPIRED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Status of the build is unknown.",
            "Build has been created and is pending execution and queuing. It has not been queued.",
            "Build or step is queued; work has not yet begun.",
            "Build or step is being executed.",
            "Build or step finished successfully.",
            "Build or step failed to complete successfully.",
            "Build or step failed due to an internal cause.",
            "Build or step took longer than was allowed.",
            "Build or step was canceled by a user.",
            "Build was enqueued for longer than the value of `queue_ttl`."
          ],
          "description": "Output only. Status of the build step. At this time, build step status is only updated on build completion; step status is not updated in real-time as the build progresses.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for this build step, used in `wait_for` to reference this build step as a dependency."
        },
        "secretEnv": {
          "items": {
            "type": "string"
          },
          "description": "A list of environment variables which are encrypted using a Cloud Key Management Service crypto key. These values must be specified in the build's `Secret`.",
          "type": "array"
        },
        "exitCode": {
          "description": "Output only. Return code from running the step.",
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "dir": {
          "description": "Working directory to use when running this step's container. If this value is a relative path, it is relative to the build's working directory. If this value is absolute, it may be outside the build's working directory, in which case the contents of the path may not be persisted across build step executions, unless a `volume` for that path is specified. If the build specifies a `RepoSource` with `dir` and a step with a `dir`, which specifies an absolute path, the `RepoSource` `dir` is ignored for the step's execution.",
          "type": "string"
        },
        "args": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of arguments that will be presented to the step when it is started. If the image used to run the step's container has an entrypoint, the `args` are used as arguments to that entrypoint. If the image does not define an entrypoint, the first element in args is used as the entrypoint, and the remainder will be used as arguments."
        }
      },
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption": {
      "description": "Details about how a build should be executed on a `WorkerPool`. See [running builds in a private pool](https://cloud.google.com/build/docs/private-pools/run-builds-in-private-pool) for more information.",
      "properties": {
        "name": {
          "description": "The `WorkerPool` resource to execute the build on. You must have `cloudbuild.workerpools.use` on the project hosting the WorkerPool. Format projects/{project}/locations/{location}/workerPools/{workerPoolId}",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Source": {
      "type": "object",
      "properties": {
        "storageSourceManifest": {
          "description": "If provided, get the source from this manifest in Google Cloud Storage. This feature is in Preview; see description [here](https://github.com/GoogleCloudPlatform/cloud-builders/tree/master/gcs-fetcher).",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest"
        },
        "repoSource": {
          "description": "If provided, get the source from this location in a Cloud Source Repository.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource"
        },
        "storageSource": {
          "description": "If provided, get the source from this location in Google Cloud Storage.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource"
        }
      },
      "description": "Location of the source in a supported storage service.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Source"
    },
    "PackageInfoOccurrence": {
      "type": "object",
      "description": "PackageInfoOccurrence represents an SPDX Package Information section: https://spdx.github.io/spdx-spec/3-package-information/",
      "id": "PackageInfoOccurrence",
      "properties": {
        "homePage": {
          "description": "Output only. Provide a place for the SPDX file creator to record a web site that serves as the package's home page",
          "readOnly": true,
          "type": "string"
        },
        "licenseConcluded": {
          "description": "package or alternative values, if the governing license cannot be determined",
          "$ref": "License"
        },
        "filename": {
          "description": "Provide the actual file name of the package, or path of the directory being treated as a package",
          "type": "string"
        },
        "comment": {
          "type": "string",
          "description": "A place for the SPDX file creator to record any general comments about the package being described"
        },
        "id": {
          "description": "Uniquely identify any element in an SPDX document which may be referenced by other elements",
          "type": "string"
        },
        "packageType": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The type of package: OS, MAVEN, GO, GO_STDLIB, etc."
        },
        "version": {
          "type": "string",
          "description": "Output only. Identify the version of the package",
          "readOnly": true
        },
        "summaryDescription": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. A short description of the package"
        },
        "sourceInfo": {
          "type": "string",
          "description": "Provide a place for the SPDX file creator to record any relevant background information or additional comments about the origin of the package"
        },
        "title": {
          "type": "string",
          "description": "Output only. Identify the full name of the package as given by the Package Originator",
          "readOnly": true
        }
      }
    },
    "Attestation": {
      "properties": {
        "pgpSignedAttestation": {
          "$ref": "PgpSignedAttestation",
          "description": "A PGP signed attestation."
        },
        "genericSignedAttestation": {
          "$ref": "GenericSignedAttestation"
        }
      },
      "type": "object",
      "description": "Occurrence that represents a single \"attestation\". The authenticity of an attestation can be verified using the attached signature. If the verifier trusts the public key of the signer, then verifying the signature is sufficient to establish trust. In this circumstance, the authority to which this attestation is attached is primarily useful for look-up (how to find this attestation if you already know the authority and artifact to be verified) and intent (which authority was this attestation intended to sign for).",
      "id": "Attestation"
    },
    "GrafeasV1beta1PackageDetails": {
      "description": "Details of a package occurrence.",
      "id": "GrafeasV1beta1PackageDetails",
      "properties": {
        "installation": {
          "$ref": "Installation",
          "description": "Required. Where the package was installed."
        }
      },
      "type": "object"
    },
    "Source": {
      "type": "object",
      "id": "Source",
      "description": "Source describes the location of the source used for the build.",
      "properties": {
        "fileHashes": {
          "description": "Hash(es) of the build source, which can be used to verify that the original source integrity was maintained in the build. The keys to this map are file paths used as build source and the values contain the hash values for those files. If the build source came in a single package such as a gzipped tarfile (.tar.gz), the FileHash will be for the single path to that file.",
          "type": "object",
          "additionalProperties": {
            "$ref": "FileHashes"
          }
        },
        "additionalContexts": {
          "description": "If provided, some of the source code used for the build may be found in these locations, in the case where the source repository had multiple remotes or submodules. This list will not include the context specified in the context field.",
          "items": {
            "$ref": "SourceContext"
          },
          "type": "array"
        },
        "context": {
          "$ref": "SourceContext",
          "description": "If provided, the source code used for the build came from this location."
        },
        "artifactStorageSourceUri": {
          "description": "If provided, the input binary artifacts for the build came from this location.",
          "type": "string"
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage": {
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name used to push the container image to Google Container Registry, as presented to `docker push`."
        },
        "pushTiming": {
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan",
          "readOnly": true,
          "description": "Output only. Stores timing information for pushing the specified image."
        },
        "digest": {
          "description": "Docker Registry 2.0 digest.",
          "type": "string"
        }
      },
      "description": "An image built by the pipeline.",
      "type": "object"
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        }
      },
      "type": "object",
      "id": "Expr"
    },
    "Occurrence": {
      "properties": {
        "remediation": {
          "type": "string",
          "description": "A description of actions that can be taken to remedy the note."
        },
        "spdxFile": {
          "$ref": "FileOccurrence",
          "description": "Describes a specific SPDX File."
        },
        "resource": {
          "description": "Required. Immutable. The resource for which the occurrence applies.",
          "$ref": "Resource"
        },
        "noteName": {
          "description": "Required. Immutable. The analysis note associated with this occurrence, in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be used as a filter in list requests.",
          "type": "string"
        },
        "attestation": {
          "description": "Describes an attestation of an artifact.",
          "$ref": "Details"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`."
        },
        "spdxRelationship": {
          "$ref": "RelationshipOccurrence",
          "description": "Describes a specific SPDX Relationship."
        },
        "vulnerability": {
          "description": "Describes a security vulnerability.",
          "$ref": "GrafeasV1beta1VulnerabilityDetails"
        },
        "deployment": {
          "description": "Describes the deployment of an artifact on a runtime.",
          "$ref": "GrafeasV1beta1DeploymentDetails"
        },
        "envelope": {
          "description": "https://github.com/secure-systems-lab/dsse",
          "$ref": "Envelope"
        },
        "discovered": {
          "$ref": "GrafeasV1beta1DiscoveryDetails",
          "description": "Describes when a resource was discovered."
        },
        "build": {
          "description": "Describes a verifiable build.",
          "$ref": "GrafeasV1beta1BuildDetails"
        },
        "kind": {
          "enum": [
            "NOTE_KIND_UNSPECIFIED",
            "VULNERABILITY",
            "BUILD",
            "IMAGE",
            "PACKAGE",
            "DEPLOYMENT",
            "DISCOVERY",
            "ATTESTATION",
            "INTOTO",
            "SBOM",
            "SPDX_PACKAGE",
            "SPDX_FILE",
            "SPDX_RELATIONSHIP"
          ],
          "description": "Output only. This explicitly denotes which of the occurrence details are specified. This field can be used as a filter in list requests.",
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The note and occurrence represent a package vulnerability.",
            "The note and occurrence assert build provenance.",
            "This represents an image basis relationship.",
            "This represents a package installed via a package manager.",
            "The note and occurrence track deployment events.",
            "The note and occurrence track the initial discovery status of a resource.",
            "This represents a logical \"role\" that can attest to artifacts.",
            "This represents an in-toto link.",
            "This represents a software bill of materials.",
            "This represents an SPDX Package.",
            "This represents an SPDX File.",
            "This represents an SPDX Relationship."
          ]
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time this occurrence was last updated."
        },
        "sbom": {
          "description": "Describes a specific software bill of materials document.",
          "$ref": "DocumentOccurrence"
        },
        "derivedImage": {
          "description": "Describes how this resource derives from the basis in the associated note.",
          "$ref": "GrafeasV1beta1ImageDetails"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time this occurrence was created."
        },
        "installation": {
          "description": "Describes the installation of a package on the linked resource.",
          "$ref": "GrafeasV1beta1PackageDetails"
        },
        "intoto": {
          "description": "Describes a specific in-toto link.",
          "$ref": "GrafeasV1beta1IntotoDetails"
        },
        "spdxPackage": {
          "$ref": "PackageInfoOccurrence",
          "description": "Describes a specific SPDX Package."
        }
      },
      "type": "object",
      "id": "Occurrence",
      "description": "An instance of an analysis type that has been found on a resource."
    },
    "Installation": {
      "id": "Installation",
      "properties": {
        "cpeUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package. The cpe_uri will be blank for language packages."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Required. Output only. The name of the installed package."
        },
        "license": {
          "description": "Licenses that have been declared by the authors of the package.",
          "$ref": "License"
        },
        "location": {
          "description": "All of the places within the filesystem versions of this package have been found.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "packageType": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The type of package; whether native or non native (e.g., ruby gems, node.js packages, etc.)."
        },
        "architecture": {
          "enumDescriptions": [
            "Unknown architecture.",
            "X86 architecture.",
            "X64 architecture."
          ],
          "readOnly": true,
          "description": "Output only. The CPU architecture for which packages in this distribution channel were built. Architecture will be blank for language packages.",
          "enum": [
            "ARCHITECTURE_UNSPECIFIED",
            "X86",
            "X64"
          ],
          "type": "string"
        },
        "version": {
          "description": "Output only. The version of the package.",
          "$ref": "Version",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "This represents how a particular software package may be installed on a system."
    },
    "FileOccurrence": {
      "description": "FileOccurrence represents an SPDX File Information section: https://spdx.github.io/spdx-spec/4-file-information/",
      "properties": {
        "contributors": {
          "description": "This field provides a place for the SPDX file creator to record file contributors",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "attributions": {
          "description": "This field provides a place for the SPDX data creator to record, at the file level, acknowledgements that may be needed to be communicated in some contexts",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "comment": {
          "description": "This field provides a place for the SPDX file creator to record any general comments about the file",
          "type": "string"
        },
        "id": {
          "description": "Uniquely identify any element in an SPDX document which may be referenced by other elements",
          "type": "string"
        },
        "licenseConcluded": {
          "description": "This field contains the license the SPDX file creator has concluded as governing the file or alternative values if the governing license cannot be determined",
          "$ref": "License"
        },
        "copyright": {
          "type": "string",
          "description": "Identify the copyright holder of the file, as well as any dates present"
        },
        "notice": {
          "description": "This field provides a place for the SPDX file creator to record license notices or other such related notices found in the file",
          "type": "string"
        },
        "filesLicenseInfo": {
          "description": "This field contains the license information actually found in the file, if any",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "FileOccurrence"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts": {
      "description": "Artifacts produced by a build that should be uploaded upon successful completion of all build steps.",
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "description": "A list of images to be pushed upon the successful completion of all build steps. The images will be pushed using the builder service account's credentials. The digests of the pushed images will be stored in the Build resource's results field. If any of the images fail to be pushed, the build is marked FAILURE.",
          "items": {
            "type": "string"
          }
        },
        "objects": {
          "description": "A list of objects to be uploaded to Cloud Storage upon successful completion of all build steps. Files in the workspace matching specified paths globs will be uploaded to the specified Cloud Storage location using the builder service account's credentials. The location and generation of the uploaded objects will be stored in the Build resource's results field. If any objects fail to be pushed, the build is marked FAILURE.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects"
        }
      },
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts"
    },
    "Build": {
      "properties": {
        "builderVersion": {
          "type": "string",
          "description": "Required. Immutable. Version of the builder which produced this build."
        },
        "signature": {
          "description": "Signature of the build in occurrences pointing to this build note containing build details.",
          "$ref": "BuildSignature"
        }
      },
      "id": "Build",
      "description": "Note holding the version of the provider's builder and the signature of the provenance message in the build details occurrence.",
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildApproval": {
      "type": "object",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1BuildApproval",
      "description": "BuildApproval describes a build's approval configuration, state, and result.",
      "properties": {
        "result": {
          "description": "Output only. Result of manual approval for this Build.",
          "readOnly": true,
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult"
        },
        "state": {
          "enumDescriptions": [
            "Default enum type. This should not be used.",
            "Build approval is pending.",
            "Build approval has been approved.",
            "Build approval has been rejected.",
            "Build was cancelled while it was still pending approval."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "APPROVED",
            "REJECTED",
            "CANCELLED"
          ],
          "type": "string",
          "description": "Output only. The state of this build's approval.",
          "readOnly": true
        },
        "config": {
          "readOnly": true,
          "description": "Output only. Configuration for manual approval of this build.",
          "$ref": "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalConfig"
        }
      }
    },
    "Package": {
      "type": "object",
      "properties": {
        "url": {
          "description": "The homepage for this package.",
          "type": "string"
        },
        "digest": {
          "type": "array",
          "description": "Hash value, typically a file digest, that allows unique identification a specific package.",
          "items": {
            "$ref": "Digest"
          }
        },
        "maintainer": {
          "type": "string",
          "description": "A freeform text denoting the maintainer of this package."
        },
        "packageType": {
          "type": "string",
          "description": "The type of package; whether native or non native (e.g., ruby gems, node.js packages, etc.)."
        },
        "name": {
          "description": "Required. Immutable. The name of the package.",
          "type": "string"
        },
        "architecture": {
          "type": "string",
          "enum": [
            "ARCHITECTURE_UNSPECIFIED",
            "X86",
            "X64"
          ],
          "description": "The CPU architecture for which packages in this distribution channel were built. Architecture will be blank for language packages.",
          "enumDescriptions": [
            "Unknown architecture.",
            "X86 architecture.",
            "X64 architecture."
          ]
        },
        "license": {
          "description": "Licenses that have been declared by the authors of the package.",
          "$ref": "License"
        },
        "distribution": {
          "description": "The various channels by which a package is distributed.",
          "type": "array",
          "items": {
            "$ref": "Distribution"
          }
        },
        "version": {
          "$ref": "Version",
          "description": "The version of the package."
        },
        "cpeUri": {
          "description": "The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package. The cpe_uri will be blank for language packages.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The description of this package."
        }
      },
      "description": "Package represents a particular package version.",
      "id": "Package"
    },
    "TestIamPermissionsResponse": {
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
        }
      },
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object"
    },
    "ListNotesResponse": {
      "id": "ListNotesResponse",
      "description": "Response for listing notes.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The next pagination token in the list response. It should be used as `page_token` for the following request. An empty value means no more results."
        },
        "notes": {
          "items": {
            "$ref": "Note"
          },
          "type": "array",
          "description": "The notes requested."
        }
      },
      "type": "object"
    },
    "Digest": {
      "type": "object",
      "description": "Digest information.",
      "id": "Digest",
      "properties": {
        "algo": {
          "type": "string",
          "description": "`SHA1`, `SHA512` etc."
        },
        "digestBytes": {
          "format": "byte",
          "type": "string",
          "description": "Value of the digest."
        }
      }
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalConfig": {
      "description": "ApprovalConfig describes configuration for manual approval of a build.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalConfig",
      "properties": {
        "approvalRequired": {
          "type": "boolean",
          "description": "Whether or not approval is needed. If this is set on a build, it will become pending when created, and will need to be explicitly approved to start."
        }
      },
      "type": "object"
    },
    "Status": {
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        }
      },
      "type": "object",
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "id": "Empty",
      "type": "object"
    },
    "ContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret": {
      "type": "object",
      "description": "Pairs a set of secret environment variables mapped to encrypted values with the Cloud KMS key to use to decrypt the value.",
      "id": "ContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret",
      "properties": {
        "kmsKeyName": {
          "type": "string",
          "description": "Resource name of Cloud KMS crypto key to decrypt the encrypted value. In format: projects/*/locations/*/keyRings/*/cryptoKeys/*"
        },
        "envMap": {
          "type": "object",
          "description": "Map of environment variable name to its encrypted value. Secret environment variables must be unique across all of a build's secrets, and must be used by at least one build step. Values can be at most 64 KB in size. There can be at most 100 secret values across all of a build's secrets.",
          "additionalProperties": {
            "format": "byte",
            "type": "string"
          }
        }
      }
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "containeranalysis:v1beta1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version_module": true,
  "documentationLink": "https://cloud.google.com/container-analysis/api/reference/rest/"
}

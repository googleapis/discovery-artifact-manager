{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/androidpublisher": {
          "description": "View and manage your Google Play Developer account"
        }
      }
    }
  },
  "protocol": "rest",
  "discoveryVersion": "v1",
  "revision": "20230921",
  "resources": {
    "orders": {
      "methods": {
        "refund": {
          "parameterOrder": [
            "packageName",
            "orderId"
          ],
          "path": "androidpublisher/v3/applications/{packageName}/orders/{orderId}:refund",
          "id": "androidpublisher.orders.refund",
          "description": "Refunds a user's subscription or in-app purchase order. Orders older than 1 year cannot be refunded.",
          "flatPath": "androidpublisher/v3/applications/{packageName}/orders/{orderId}:refund",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "httpMethod": "POST",
          "parameters": {
            "orderId": {
              "description": "The order ID provided to the user when the subscription or in-app order was purchased.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "revoke": {
              "description": "Whether to revoke the purchased item. If set to true, access to the subscription or in-app item will be terminated immediately. If the item is a recurring subscription, all future payments will also be terminated. Consumed in-app items need to be handled by developer's app. (optional).",
              "type": "boolean",
              "location": "query"
            },
            "packageName": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The package name of the application for which this subscription or in-app item was purchased (for example, 'com.some.thing')."
            }
          }
        }
      }
    },
    "internalappsharingartifacts": {
      "methods": {
        "uploadbundle": {
          "flatPath": "androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "path": "androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle",
          "id": "androidpublisher.internalappsharingartifacts.uploadbundle",
          "parameterOrder": [
            "packageName"
          ],
          "response": {
            "$ref": "InternalAppSharingArtifact"
          },
          "httpMethod": "POST",
          "mediaUpload": {
            "protocols": {
              "resumable": {
                "path": "/resumable/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle",
                "multipart": true
              },
              "simple": {
                "path": "/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle",
                "multipart": true
              }
            },
            "accept": [
              "application/octet-stream"
            ],
            "maxSize": "10737418240"
          },
          "supportsMediaUpload": true,
          "parameters": {
            "packageName": {
              "location": "path",
              "type": "string",
              "description": "Package name of the app.",
              "required": true
            }
          },
          "description": "Uploads an app bundle to internal app sharing. If you are using the Google API client libraries, please increase the timeout of the http request before calling this endpoint (a timeout of 2 minutes is recommended). See [Timeouts and Errors](https://developers.google.com/api-client-library/java/google-api-java-client/errors) for an example in java."
        },
        "uploadapk": {
          "path": "androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk",
          "description": "Uploads an APK to internal app sharing. If you are using the Google API client libraries, please increase the timeout of the http request before calling this endpoint (a timeout of 2 minutes is recommended). See [Timeouts and Errors](https://developers.google.com/api-client-library/java/google-api-java-client/errors) for an example in java.",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameterOrder": [
            "packageName"
          ],
          "supportsMediaUpload": true,
          "httpMethod": "POST",
          "flatPath": "androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk",
          "id": "androidpublisher.internalappsharingartifacts.uploadapk",
          "mediaUpload": {
            "maxSize": "1073741824",
            "protocols": {
              "resumable": {
                "path": "/resumable/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk",
                "multipart": true
              },
              "simple": {
                "multipart": true,
                "path": "/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk"
              }
            },
            "accept": [
              "application/octet-stream",
              "application/vnd.android.package-archive"
            ]
          },
          "response": {
            "$ref": "InternalAppSharingArtifact"
          },
          "parameters": {
            "packageName": {
              "location": "path",
              "description": "Package name of the app.",
              "type": "string",
              "required": true
            }
          }
        }
      }
    },
    "edits": {
      "methods": {
        "insert": {
          "request": {
            "$ref": "AppEdit"
          },
          "path": "androidpublisher/v3/applications/{packageName}/edits",
          "parameterOrder": [
            "packageName"
          ],
          "flatPath": "androidpublisher/v3/applications/{packageName}/edits",
          "response": {
            "$ref": "AppEdit"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameters": {
            "packageName": {
              "description": "Package name of the app.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "description": "Creates a new edit for an app.",
          "id": "androidpublisher.edits.insert"
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}",
          "parameters": {
            "editId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Identifier of the edit."
            },
            "packageName": {
              "description": "Package name of the app.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}",
          "httpMethod": "DELETE",
          "parameterOrder": [
            "packageName",
            "editId"
          ],
          "id": "androidpublisher.edits.delete",
          "description": "Deletes an app edit."
        },
        "validate": {
          "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}:validate",
          "response": {
            "$ref": "AppEdit"
          },
          "id": "androidpublisher.edits.validate",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "httpMethod": "POST",
          "description": "Validates an app edit.",
          "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}:validate",
          "parameterOrder": [
            "packageName",
            "editId"
          ],
          "parameters": {
            "packageName": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Package name of the app."
            },
            "editId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Identifier of the edit."
            }
          }
        },
        "get": {
          "description": "Gets an app edit.",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}",
          "response": {
            "$ref": "AppEdit"
          },
          "id": "androidpublisher.edits.get",
          "parameters": {
            "editId": {
              "required": true,
              "description": "Identifier of the edit.",
              "type": "string",
              "location": "path"
            },
            "packageName": {
              "type": "string",
              "description": "Package name of the app.",
              "required": true,
              "location": "path"
            }
          },
          "parameterOrder": [
            "packageName",
            "editId"
          ],
          "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}"
        },
        "commit": {
          "description": "Commits an app edit.",
          "parameterOrder": [
            "packageName",
            "editId"
          ],
          "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}:commit",
          "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}:commit",
          "httpMethod": "POST",
          "id": "androidpublisher.edits.commit",
          "response": {
            "$ref": "AppEdit"
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameters": {
            "packageName": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Package name of the app."
            },
            "editId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Identifier of the edit."
            },
            "changesNotSentForReview": {
              "location": "query",
              "description": "Indicates that the changes in this edit will not be reviewed until they are explicitly sent for review from the Google Play Console UI. These changes will be added to any other changes that are not yet sent for review.",
              "type": "boolean"
            }
          }
        }
      },
      "resources": {
        "deobfuscationfiles": {
          "methods": {
            "upload": {
              "supportsMediaUpload": true,
              "mediaUpload": {
                "protocols": {
                  "resumable": {
                    "multipart": true,
                    "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}"
                  },
                  "simple": {
                    "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}",
                    "multipart": true
                  }
                },
                "accept": [
                  "application/octet-stream"
                ],
                "maxSize": "1258291200"
              },
              "description": "Uploads a new deobfuscation file and attaches to the specified APK.",
              "id": "androidpublisher.edits.deobfuscationfiles.upload",
              "parameterOrder": [
                "packageName",
                "editId",
                "apkVersionCode",
                "deobfuscationFileType"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "httpMethod": "POST",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}",
              "parameters": {
                "deobfuscationFileType": {
                  "enumDescriptions": [
                    "Unspecified deobfuscation file type.",
                    "Proguard deobfuscation file type.",
                    "Native debugging symbols file type."
                  ],
                  "required": true,
                  "enum": [
                    "deobfuscationFileTypeUnspecified",
                    "proguard",
                    "nativeCode"
                  ],
                  "type": "string",
                  "location": "path",
                  "description": "The type of the deobfuscation file."
                },
                "packageName": {
                  "location": "path",
                  "description": "Unique identifier for the Android app.",
                  "type": "string",
                  "required": true
                },
                "apkVersionCode": {
                  "type": "integer",
                  "format": "int32",
                  "location": "path",
                  "required": true,
                  "description": "The version code of the APK whose Deobfuscation File is being uploaded."
                },
                "editId": {
                  "required": true,
                  "description": "Unique identifier for this edit.",
                  "location": "path",
                  "type": "string"
                }
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}",
              "response": {
                "$ref": "DeobfuscationFilesUploadResponse"
              }
            }
          }
        },
        "testers": {
          "methods": {
            "patch": {
              "parameters": {
                "track": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The track to update."
                },
                "editId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Identifier of the edit."
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "request": {
                "$ref": "Testers"
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}",
              "httpMethod": "PATCH",
              "id": "androidpublisher.edits.testers.patch",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "description": "Patches testers. Note: Testers resource does not support email lists.",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}",
              "response": {
                "$ref": "Testers"
              },
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ]
            },
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "Testers"
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "description": "Gets testers. Note: Testers resource does not support email lists.",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}",
              "id": "androidpublisher.edits.testers.get",
              "parameters": {
                "packageName": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Package name of the app."
                },
                "editId": {
                  "type": "string",
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "required": true
                },
                "track": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The track to read from."
                }
              }
            },
            "update": {
              "request": {
                "$ref": "Testers"
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}",
              "response": {
                "$ref": "Testers"
              },
              "parameters": {
                "packageName": {
                  "description": "Package name of the app.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "track": {
                  "location": "path",
                  "description": "The track to update.",
                  "required": true,
                  "type": "string"
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}",
              "description": "Updates testers. Note: Testers resource does not support email lists.",
              "id": "androidpublisher.edits.testers.update",
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ]
            }
          }
        },
        "tracks": {
          "methods": {
            "list": {
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks",
              "response": {
                "$ref": "TracksListResponse"
              },
              "httpMethod": "GET",
              "id": "androidpublisher.edits.tracks.list",
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameters": {
                "editId": {
                  "type": "string",
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "required": true
                },
                "packageName": {
                  "type": "string",
                  "description": "Package name of the app.",
                  "location": "path",
                  "required": true
                }
              },
              "description": "Lists all tracks."
            },
            "update": {
              "parameters": {
                "track": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Identifier of the track. [More on track name](https://developers.google.com/android-publisher/tracks#ff-track-name)"
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "packageName": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Package name of the app."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.edits.tracks.update",
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "response": {
                "$ref": "Track"
              },
              "httpMethod": "PUT",
              "request": {
                "$ref": "Track"
              },
              "description": "Updates a track.",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}"
            },
            "patch": {
              "description": "Patches a track.",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}",
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "httpMethod": "PATCH",
              "id": "androidpublisher.edits.tracks.patch",
              "request": {
                "$ref": "Track"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameters": {
                "editId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Identifier of the edit."
                },
                "packageName": {
                  "location": "path",
                  "required": true,
                  "description": "Package name of the app.",
                  "type": "string"
                },
                "track": {
                  "description": "Identifier of the track. [More on track name](https://developers.google.com/android-publisher/tracks#ff-track-name)",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "response": {
                "$ref": "Track"
              }
            },
            "get": {
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}",
              "description": "Gets a track.",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "httpMethod": "GET",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}",
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "parameters": {
                "editId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Identifier of the edit."
                },
                "packageName": {
                  "location": "path",
                  "description": "Package name of the app.",
                  "required": true,
                  "type": "string"
                },
                "track": {
                  "required": true,
                  "description": "Identifier of the track. [More on track name](https://developers.google.com/android-publisher/tracks#ff-track-name)",
                  "type": "string",
                  "location": "path"
                }
              },
              "id": "androidpublisher.edits.tracks.get",
              "response": {
                "$ref": "Track"
              }
            }
          }
        },
        "expansionfiles": {
          "methods": {
            "upload": {
              "description": "Uploads a new expansion file and attaches to the specified APK.",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "id": "androidpublisher.edits.expansionfiles.upload",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "mediaUpload": {
                "maxSize": "2147483648",
                "accept": [
                  "application/octet-stream"
                ],
                "protocols": {
                  "simple": {
                    "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
                    "multipart": true
                  },
                  "resumable": {
                    "multipart": true,
                    "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}"
                  }
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName",
                "editId",
                "apkVersionCode",
                "expansionFileType"
              ],
              "supportsMediaUpload": true,
              "httpMethod": "POST",
              "response": {
                "$ref": "ExpansionFilesUploadResponse"
              },
              "parameters": {
                "packageName": {
                  "description": "Package name of the app.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "expansionFileType": {
                  "required": true,
                  "location": "path",
                  "enumDescriptions": [
                    "Unspecified expansion file type.",
                    "Main expansion file.",
                    "Patch expansion file."
                  ],
                  "type": "string",
                  "enum": [
                    "expansionFileTypeUnspecified",
                    "main",
                    "patch"
                  ],
                  "description": "The file type of the expansion file configuration which is being updated."
                },
                "editId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Identifier of the edit."
                },
                "apkVersionCode": {
                  "format": "int32",
                  "description": "The version code of the APK whose expansion file configuration is being read or modified.",
                  "location": "path",
                  "required": true,
                  "type": "integer"
                }
              }
            },
            "update": {
              "response": {
                "$ref": "ExpansionFile"
              },
              "parameters": {
                "editId": {
                  "required": true,
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "type": "string"
                },
                "apkVersionCode": {
                  "location": "path",
                  "required": true,
                  "type": "integer",
                  "description": "The version code of the APK whose expansion file configuration is being read or modified.",
                  "format": "int32"
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "expansionFileType": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "enumDescriptions": [
                    "Unspecified expansion file type.",
                    "Main expansion file.",
                    "Patch expansion file."
                  ],
                  "enum": [
                    "expansionFileTypeUnspecified",
                    "main",
                    "patch"
                  ],
                  "description": "The file type of the file configuration which is being read or modified."
                }
              },
              "id": "androidpublisher.edits.expansionfiles.update",
              "httpMethod": "PUT",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "description": "Updates the APK's expansion file configuration to reference another APK's expansion file. To add a new expansion file use the Upload method.",
              "request": {
                "$ref": "ExpansionFile"
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName",
                "editId",
                "apkVersionCode",
                "expansionFileType"
              ]
            },
            "get": {
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "httpMethod": "GET",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName",
                "editId",
                "apkVersionCode",
                "expansionFileType"
              ],
              "description": "Fetches the expansion file configuration for the specified APK.",
              "response": {
                "$ref": "ExpansionFile"
              },
              "id": "androidpublisher.edits.expansionfiles.get",
              "parameters": {
                "apkVersionCode": {
                  "description": "The version code of the APK whose expansion file configuration is being read or modified.",
                  "type": "integer",
                  "location": "path",
                  "format": "int32",
                  "required": true
                },
                "packageName": {
                  "location": "path",
                  "required": true,
                  "description": "Package name of the app.",
                  "type": "string"
                },
                "editId": {
                  "type": "string",
                  "required": true,
                  "description": "Identifier of the edit.",
                  "location": "path"
                },
                "expansionFileType": {
                  "description": "The file type of the file configuration which is being read or modified.",
                  "type": "string",
                  "location": "path",
                  "enumDescriptions": [
                    "Unspecified expansion file type.",
                    "Main expansion file.",
                    "Patch expansion file."
                  ],
                  "required": true,
                  "enum": [
                    "expansionFileTypeUnspecified",
                    "main",
                    "patch"
                  ]
                }
              }
            },
            "patch": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName",
                "editId",
                "apkVersionCode",
                "expansionFileType"
              ],
              "request": {
                "$ref": "ExpansionFile"
              },
              "id": "androidpublisher.edits.expansionfiles.patch",
              "httpMethod": "PATCH",
              "description": "Patches the APK's expansion file configuration to reference another APK's expansion file. To add a new expansion file use the Upload method.",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "response": {
                "$ref": "ExpansionFile"
              },
              "parameters": {
                "apkVersionCode": {
                  "required": true,
                  "format": "int32",
                  "description": "The version code of the APK whose expansion file configuration is being read or modified.",
                  "type": "integer",
                  "location": "path"
                },
                "packageName": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Package name of the app."
                },
                "editId": {
                  "type": "string",
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "required": true
                },
                "expansionFileType": {
                  "type": "string",
                  "description": "The file type of the expansion file configuration which is being updated.",
                  "location": "path",
                  "enumDescriptions": [
                    "Unspecified expansion file type.",
                    "Main expansion file.",
                    "Patch expansion file."
                  ],
                  "required": true,
                  "enum": [
                    "expansionFileTypeUnspecified",
                    "main",
                    "patch"
                  ]
                }
              }
            }
          }
        },
        "listings": {
          "methods": {
            "delete": {
              "parameterOrder": [
                "packageName",
                "editId",
                "language"
              ],
              "id": "androidpublisher.edits.listings.delete",
              "httpMethod": "DELETE",
              "parameters": {
                "packageName": {
                  "description": "Package name of the app.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "editId": {
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "type": "string",
                  "required": true
                },
                "language": {
                  "type": "string",
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).",
                  "location": "path",
                  "required": true
                }
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "description": "Deletes a localized store listing.",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}"
            },
            "deleteall": {
              "parameters": {
                "packageName": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Package name of the app."
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "httpMethod": "DELETE",
              "id": "androidpublisher.edits.listings.deleteall",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings",
              "description": "Deletes all store listings.",
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ]
            },
            "patch": {
              "id": "androidpublisher.edits.listings.patch",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName",
                "editId",
                "language"
              ],
              "description": "Patches a localized store listing.",
              "response": {
                "$ref": "Listing"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "parameters": {
                "editId": {
                  "required": true,
                  "type": "string",
                  "description": "Identifier of the edit.",
                  "location": "path"
                },
                "language": {
                  "required": true,
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).",
                  "location": "path",
                  "type": "string"
                },
                "packageName": {
                  "type": "string",
                  "location": "path",
                  "description": "Package name of the app.",
                  "required": true
                }
              },
              "request": {
                "$ref": "Listing"
              },
              "httpMethod": "PATCH"
            },
            "get": {
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName",
                "editId",
                "language"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "parameters": {
                "packageName": {
                  "location": "path",
                  "required": true,
                  "description": "Package name of the app.",
                  "type": "string"
                },
                "language": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German)."
                },
                "editId": {
                  "type": "string",
                  "required": true,
                  "description": "Identifier of the edit.",
                  "location": "path"
                }
              },
              "id": "androidpublisher.edits.listings.get",
              "description": "Gets a localized store listing.",
              "httpMethod": "GET",
              "response": {
                "$ref": "Listing"
              }
            },
            "update": {
              "id": "androidpublisher.edits.listings.update",
              "parameters": {
                "language": {
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "editId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Identifier of the edit."
                }
              },
              "response": {
                "$ref": "Listing"
              },
              "parameterOrder": [
                "packageName",
                "editId",
                "language"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "request": {
                "$ref": "Listing"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "description": "Creates or updates a localized store listing."
            },
            "list": {
              "parameters": {
                "packageName": {
                  "required": true,
                  "description": "Package name of the app.",
                  "location": "path",
                  "type": "string"
                },
                "editId": {
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "required": true,
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings",
              "id": "androidpublisher.edits.listings.list",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "ListingsListResponse"
              },
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "description": "Lists all localized store listings.",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings"
            }
          }
        },
        "bundles": {
          "methods": {
            "list": {
              "description": "Lists all current Android App Bundles of the app and edit.",
              "parameters": {
                "editId": {
                  "required": true,
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "type": "string"
                },
                "packageName": {
                  "required": true,
                  "location": "path",
                  "description": "Package name of the app.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "BundlesListResponse"
              },
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "id": "androidpublisher.edits.bundles.list",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles",
              "httpMethod": "GET",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ]
            },
            "upload": {
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "supportsMediaUpload": true,
              "id": "androidpublisher.edits.bundles.upload",
              "parameters": {
                "ackBundleInstallationWarning": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Must be set to true if the app bundle installation may trigger a warning on user devices (for example, if installation size may be over a threshold, typically 100 MB)."
                },
                "editId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Identifier of the edit."
                },
                "deviceTierConfigId": {
                  "location": "query",
                  "description": "Device tier config (DTC) to be used for generating deliverables (APKs). Contains id of the DTC or \"LATEST\" for last uploaded DTC.",
                  "type": "string"
                },
                "packageName": {
                  "required": true,
                  "description": "Package name of the app.",
                  "type": "string",
                  "location": "path"
                }
              },
              "mediaUpload": {
                "maxSize": "10737418240",
                "accept": [
                  "application/octet-stream"
                ],
                "protocols": {
                  "resumable": {
                    "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles",
                    "multipart": true
                  },
                  "simple": {
                    "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles",
                    "multipart": true
                  }
                }
              },
              "description": "Uploads a new Android App Bundle to this edit. If you are using the Google API client libraries, please increase the timeout of the http request before calling this endpoint (a timeout of 2 minutes is recommended). See [Timeouts and Errors](https://developers.google.com/api-client-library/java/google-api-java-client/errors) for an example in java.",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "Bundle"
              },
              "httpMethod": "POST"
            }
          }
        },
        "details": {
          "methods": {
            "update": {
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details",
              "response": {
                "$ref": "AppDetails"
              },
              "httpMethod": "PUT",
              "parameters": {
                "packageName": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Package name of the app."
                },
                "editId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Identifier of the edit."
                }
              },
              "description": "Updates details of an app.",
              "request": {
                "$ref": "AppDetails"
              },
              "id": "androidpublisher.edits.details.update",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details"
            },
            "get": {
              "description": "Gets details of an app.",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details",
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "id": "androidpublisher.edits.details.get",
              "response": {
                "$ref": "AppDetails"
              },
              "parameters": {
                "editId": {
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "packageName": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Package name of the app."
                }
              }
            },
            "patch": {
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "parameters": {
                "packageName": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Package name of the app."
                },
                "editId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Identifier of the edit."
                }
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details",
              "id": "androidpublisher.edits.details.patch",
              "description": "Patches details of an app.",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "request": {
                "$ref": "AppDetails"
              },
              "httpMethod": "PATCH",
              "response": {
                "$ref": "AppDetails"
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details"
            }
          }
        },
        "apks": {
          "methods": {
            "upload": {
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "id": "androidpublisher.edits.apks.upload",
              "parameters": {
                "editId": {
                  "location": "path",
                  "type": "string",
                  "description": "Identifier of the edit.",
                  "required": true
                },
                "packageName": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Package name of the app."
                }
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks",
              "description": "Uploads an APK and adds to the current edit.",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "mediaUpload": {
                "maxSize": "10737418240",
                "protocols": {
                  "resumable": {
                    "multipart": true,
                    "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks"
                  },
                  "simple": {
                    "multipart": true,
                    "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks"
                  }
                },
                "accept": [
                  "application/octet-stream",
                  "application/vnd.android.package-archive"
                ]
              },
              "response": {
                "$ref": "Apk"
              },
              "supportsMediaUpload": true,
              "httpMethod": "POST",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks"
            },
            "list": {
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.edits.apks.list",
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "parameters": {
                "packageName": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Package name of the app."
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "description": "Lists all current APKs of the app and edit.",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks",
              "httpMethod": "GET",
              "response": {
                "$ref": "ApksListResponse"
              }
            },
            "addexternallyhosted": {
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/externallyHosted",
              "id": "androidpublisher.edits.apks.addexternallyhosted",
              "parameters": {
                "editId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Identifier of the edit."
                },
                "packageName": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Package name of the app."
                }
              },
              "response": {
                "$ref": "ApksAddExternallyHostedResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "httpMethod": "POST",
              "description": "Creates a new APK without uploading the APK itself to Google Play, instead hosting the APK at a specified URL. This function is only available to organizations using Managed Play whose application is configured to restrict distribution to the organizations.",
              "request": {
                "$ref": "ApksAddExternallyHostedRequest"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/externallyHosted"
            }
          }
        },
        "images": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "id": "androidpublisher.edits.images.list",
              "response": {
                "$ref": "ImagesListResponse"
              },
              "parameters": {
                "imageType": {
                  "enumDescriptions": [
                    "Unspecified type. Do not use.",
                    "Phone screenshot.",
                    "Seven inch screenshot.",
                    "Ten inch screenshot.",
                    "TV screenshot.",
                    "Wear screenshot.",
                    "Icon.",
                    "Feature graphic.",
                    "TV banner."
                  ],
                  "location": "path",
                  "enum": [
                    "appImageTypeUnspecified",
                    "phoneScreenshots",
                    "sevenInchScreenshots",
                    "tenInchScreenshots",
                    "tvScreenshots",
                    "wearScreenshots",
                    "icon",
                    "featureGraphic",
                    "tvBanner"
                  ],
                  "required": true,
                  "type": "string",
                  "description": "Type of the Image. Providing an image type that refers to no images will return an empty response."
                },
                "editId": {
                  "required": true,
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "type": "string"
                },
                "language": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). There must be a store listing for the specified language."
                },
                "packageName": {
                  "type": "string",
                  "description": "Package name of the app.",
                  "location": "path",
                  "required": true
                }
              },
              "description": "Lists all images. The response may be empty.",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
              "parameterOrder": [
                "packageName",
                "editId",
                "language",
                "imageType"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ]
            },
            "delete": {
              "description": "Deletes the image (specified by id) from the edit.",
              "parameterOrder": [
                "packageName",
                "editId",
                "language",
                "imageType",
                "imageId"
              ],
              "id": "androidpublisher.edits.images.delete",
              "parameters": {
                "imageId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Unique identifier an image within the set of images attached to this edit."
                },
                "editId": {
                  "location": "path",
                  "type": "string",
                  "description": "Identifier of the edit.",
                  "required": true
                },
                "language": {
                  "type": "string",
                  "location": "path",
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).",
                  "required": true
                },
                "imageType": {
                  "type": "string",
                  "enumDescriptions": [
                    "Unspecified type. Do not use.",
                    "Phone screenshot.",
                    "Seven inch screenshot.",
                    "Ten inch screenshot.",
                    "TV screenshot.",
                    "Wear screenshot.",
                    "Icon.",
                    "Feature graphic.",
                    "TV banner."
                  ],
                  "location": "path",
                  "description": "Type of the Image.",
                  "enum": [
                    "appImageTypeUnspecified",
                    "phoneScreenshots",
                    "sevenInchScreenshots",
                    "tenInchScreenshots",
                    "tvScreenshots",
                    "wearScreenshots",
                    "icon",
                    "featureGraphic",
                    "tvBanner"
                  ],
                  "required": true
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}/{imageId}",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}/{imageId}",
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ]
            },
            "deleteall": {
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
              "description": "Deletes all images for the specified language and image type. Returns an empty response if no images are found.",
              "parameterOrder": [
                "packageName",
                "editId",
                "language",
                "imageType"
              ],
              "httpMethod": "DELETE",
              "id": "androidpublisher.edits.images.deleteall",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "ImagesDeleteAllResponse"
              },
              "parameters": {
                "language": {
                  "location": "path",
                  "type": "string",
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). Providing a language that is not supported by the App is a no-op.",
                  "required": true
                },
                "imageType": {
                  "required": true,
                  "enum": [
                    "appImageTypeUnspecified",
                    "phoneScreenshots",
                    "sevenInchScreenshots",
                    "tenInchScreenshots",
                    "tvScreenshots",
                    "wearScreenshots",
                    "icon",
                    "featureGraphic",
                    "tvBanner"
                  ],
                  "location": "path",
                  "type": "string",
                  "enumDescriptions": [
                    "Unspecified type. Do not use.",
                    "Phone screenshot.",
                    "Seven inch screenshot.",
                    "Ten inch screenshot.",
                    "TV screenshot.",
                    "Wear screenshot.",
                    "Icon.",
                    "Feature graphic.",
                    "TV banner."
                  ],
                  "description": "Type of the Image. Providing an image type that refers to no images is a no-op."
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              }
            },
            "upload": {
              "mediaUpload": {
                "maxSize": "15728640",
                "protocols": {
                  "resumable": {
                    "multipart": true,
                    "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}"
                  },
                  "simple": {
                    "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
                    "multipart": true
                  }
                },
                "accept": [
                  "image/*"
                ]
              },
              "httpMethod": "POST",
              "description": "Uploads an image of the specified language and image type, and adds to the edit.",
              "response": {
                "$ref": "ImagesUploadResponse"
              },
              "id": "androidpublisher.edits.images.upload",
              "supportsMediaUpload": true,
              "parameterOrder": [
                "packageName",
                "editId",
                "language",
                "imageType"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
              "parameters": {
                "language": {
                  "required": true,
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). Providing a language that is not supported by the App is a no-op.",
                  "location": "path",
                  "type": "string"
                },
                "imageType": {
                  "enumDescriptions": [
                    "Unspecified type. Do not use.",
                    "Phone screenshot.",
                    "Seven inch screenshot.",
                    "Ten inch screenshot.",
                    "TV screenshot.",
                    "Wear screenshot.",
                    "Icon.",
                    "Feature graphic.",
                    "TV banner."
                  ],
                  "enum": [
                    "appImageTypeUnspecified",
                    "phoneScreenshots",
                    "sevenInchScreenshots",
                    "tenInchScreenshots",
                    "tvScreenshots",
                    "wearScreenshots",
                    "icon",
                    "featureGraphic",
                    "tvBanner"
                  ],
                  "type": "string",
                  "description": "Type of the Image.",
                  "required": true,
                  "location": "path"
                },
                "packageName": {
                  "type": "string",
                  "location": "path",
                  "description": "Package name of the app.",
                  "required": true
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              }
            }
          }
        },
        "countryavailability": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "description": "Gets country availability.",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameters": {
                "editId": {
                  "description": "Identifier of the edit.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "track": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The track to read from."
                },
                "packageName": {
                  "type": "string",
                  "description": "Package name of the app.",
                  "location": "path",
                  "required": true
                }
              },
              "response": {
                "$ref": "TrackCountryAvailability"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/countryAvailability/{track}",
              "id": "androidpublisher.edits.countryavailability.get",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/countryAvailability/{track}",
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ]
            }
          }
        }
      }
    },
    "inappproducts": {
      "methods": {
        "update": {
          "httpMethod": "PUT",
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "parameters": {
            "allowMissing": {
              "description": "If set to true, and the in-app product with the given package_name and sku doesn't exist, the in-app product will be created.",
              "type": "boolean",
              "location": "query"
            },
            "sku": {
              "type": "string",
              "required": true,
              "description": "Unique identifier for the in-app product.",
              "location": "path"
            },
            "autoConvertMissingPrices": {
              "description": "If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false.",
              "location": "query",
              "type": "boolean"
            },
            "packageName": {
              "location": "path",
              "required": true,
              "description": "Package name of the app.",
              "type": "string"
            }
          },
          "id": "androidpublisher.inappproducts.update",
          "parameterOrder": [
            "packageName",
            "sku"
          ],
          "description": "Updates an in-app product (a managed product or a subscription). This method should no longer be used to update subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.",
          "response": {
            "$ref": "InAppProduct"
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "request": {
            "$ref": "InAppProduct"
          },
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}"
        },
        "delete": {
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "httpMethod": "DELETE",
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameterOrder": [
            "packageName",
            "sku"
          ],
          "id": "androidpublisher.inappproducts.delete",
          "parameters": {
            "sku": {
              "description": "Unique identifier for the in-app product.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "packageName": {
              "location": "path",
              "description": "Package name of the app.",
              "type": "string",
              "required": true
            }
          },
          "description": "Deletes an in-app product (a managed product or a subscription). This method should no longer be used to delete subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information."
        },
        "list": {
          "id": "androidpublisher.inappproducts.list",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "description": "Lists all in-app products - both managed products and subscriptions. If an app has a large number of in-app products, the response may be paginated. In this case the response field `tokenPagination.nextPageToken` will be set and the caller should provide its value as a `token` request parameter to retrieve the next page. This method should no longer be used to retrieve subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.",
          "parameterOrder": [
            "packageName"
          ],
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts",
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts",
          "parameters": {
            "startIndex": {
              "deprecated": true,
              "location": "query",
              "format": "uint32",
              "description": "Deprecated and ignored. Set the `token` parameter to retrieve the next page.",
              "type": "integer"
            },
            "maxResults": {
              "format": "uint32",
              "location": "query",
              "type": "integer",
              "description": "Deprecated and ignored. The page size is determined by the server.",
              "deprecated": true
            },
            "token": {
              "description": "Pagination token. If empty, list starts at the first product.",
              "location": "query",
              "type": "string"
            },
            "packageName": {
              "required": true,
              "type": "string",
              "description": "Package name of the app.",
              "location": "path"
            }
          },
          "response": {
            "$ref": "InappproductsListResponse"
          },
          "httpMethod": "GET"
        },
        "patch": {
          "request": {
            "$ref": "InAppProduct"
          },
          "parameterOrder": [
            "packageName",
            "sku"
          ],
          "parameters": {
            "autoConvertMissingPrices": {
              "type": "boolean",
              "location": "query",
              "description": "If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false."
            },
            "sku": {
              "required": true,
              "description": "Unique identifier for the in-app product.",
              "location": "path",
              "type": "string"
            },
            "packageName": {
              "location": "path",
              "description": "Package name of the app.",
              "type": "string",
              "required": true
            }
          },
          "response": {
            "$ref": "InAppProduct"
          },
          "id": "androidpublisher.inappproducts.patch",
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "httpMethod": "PATCH",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "description": "Patches an in-app product (a managed product or a subscription). This method should no longer be used to update subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information."
        },
        "insert": {
          "description": "Creates an in-app product (a managed product or a subscription). This method should no longer be used to create subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.",
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts",
          "parameterOrder": [
            "packageName"
          ],
          "request": {
            "$ref": "InAppProduct"
          },
          "parameters": {
            "autoConvertMissingPrices": {
              "type": "boolean",
              "location": "query",
              "description": "If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false."
            },
            "packageName": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Package name of the app."
            }
          },
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts",
          "httpMethod": "POST",
          "response": {
            "$ref": "InAppProduct"
          },
          "id": "androidpublisher.inappproducts.insert",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ]
        },
        "get": {
          "id": "androidpublisher.inappproducts.get",
          "httpMethod": "GET",
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "parameterOrder": [
            "packageName",
            "sku"
          ],
          "parameters": {
            "packageName": {
              "location": "path",
              "description": "Package name of the app.",
              "required": true,
              "type": "string"
            },
            "sku": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Unique identifier for the in-app product."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "description": "Gets an in-app product, which can be a managed product or a subscription. This method should no longer be used to retrieve subscriptions. See [this article](https://android-developers.googleblog.com/2023/06/changes-to-google-play-developer-api-june-2023.html) for more information.",
          "response": {
            "$ref": "InAppProduct"
          }
        }
      }
    },
    "users": {
      "methods": {
        "create": {
          "flatPath": "androidpublisher/v3/developers/{developersId}/users",
          "id": "androidpublisher.users.create",
          "description": "Grant access for a user to the given developer account.",
          "response": {
            "$ref": "User"
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "request": {
            "$ref": "User"
          },
          "parameterOrder": [
            "parent"
          ],
          "path": "androidpublisher/v3/{+parent}/users",
          "parameters": {
            "parent": {
              "type": "string",
              "location": "path",
              "required": true,
              "pattern": "^developers/[^/]+$",
              "description": "Required. The developer account to add the user to. Format: developers/{developer}"
            }
          },
          "httpMethod": "POST"
        },
        "delete": {
          "id": "androidpublisher.users.delete",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "path": "androidpublisher/v3/{+name}",
          "httpMethod": "DELETE",
          "parameterOrder": [
            "name"
          ],
          "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}",
          "description": "Removes all access for the user to the given developer account.",
          "parameters": {
            "name": {
              "location": "path",
              "description": "Required. The name of the user to delete. Format: developers/{developer}/users/{email}",
              "pattern": "^developers/[^/]+/users/[^/]+$",
              "type": "string",
              "required": true
            }
          }
        },
        "patch": {
          "path": "androidpublisher/v3/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "pattern": "^developers/[^/]+/users/[^/]+$",
              "description": "Required. Resource name for this user, following the pattern \"developers/{developer}/users/{email}\".",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "updateMask": {
              "location": "query",
              "type": "string",
              "description": "Optional. The list of fields to be updated.",
              "format": "google-fieldmask"
            }
          },
          "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}",
          "id": "androidpublisher.users.patch",
          "request": {
            "$ref": "User"
          },
          "httpMethod": "PATCH",
          "description": "Updates access for the user to the developer account.",
          "response": {
            "$ref": "User"
          }
        },
        "list": {
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "path": "androidpublisher/v3/{+parent}/users",
          "response": {
            "$ref": "ListUsersResponse"
          },
          "parameterOrder": [
            "parent"
          ],
          "parameters": {
            "parent": {
              "required": true,
              "description": "Required. The developer account to fetch users from. Format: developers/{developer}",
              "pattern": "^developers/[^/]+$",
              "location": "path",
              "type": "string"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum number of results to return. This must be set to -1 to disable pagination.",
              "location": "query"
            },
            "pageToken": {
              "description": "A token received from a previous call to this method, in order to retrieve further results.",
              "location": "query",
              "type": "string"
            }
          },
          "id": "androidpublisher.users.list",
          "flatPath": "androidpublisher/v3/developers/{developersId}/users",
          "description": "Lists all users with access to a developer account."
        }
      }
    },
    "reviews": {
      "methods": {
        "list": {
          "response": {
            "$ref": "ReviewsListResponse"
          },
          "flatPath": "androidpublisher/v3/applications/{packageName}/reviews",
          "path": "androidpublisher/v3/applications/{packageName}/reviews",
          "parameters": {
            "translationLanguage": {
              "description": "Language localization code.",
              "location": "query",
              "type": "string"
            },
            "packageName": {
              "required": true,
              "location": "path",
              "description": "Package name of the app.",
              "type": "string"
            },
            "startIndex": {
              "type": "integer",
              "format": "uint32",
              "location": "query",
              "description": "The index of the first element to return."
            },
            "token": {
              "location": "query",
              "description": "Pagination token. If empty, list starts at the first review.",
              "type": "string"
            },
            "maxResults": {
              "location": "query",
              "format": "uint32",
              "description": "How many results the list operation should return.",
              "type": "integer"
            }
          },
          "httpMethod": "GET",
          "id": "androidpublisher.reviews.list",
          "parameterOrder": [
            "packageName"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "description": "Lists all reviews."
        },
        "reply": {
          "path": "androidpublisher/v3/applications/{packageName}/reviews/{reviewId}:reply",
          "httpMethod": "POST",
          "flatPath": "androidpublisher/v3/applications/{packageName}/reviews/{reviewId}:reply",
          "request": {
            "$ref": "ReviewsReplyRequest"
          },
          "description": "Replies to a single review, or updates an existing reply.",
          "parameterOrder": [
            "packageName",
            "reviewId"
          ],
          "parameters": {
            "reviewId": {
              "description": "Unique identifier for a review.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "packageName": {
              "type": "string",
              "location": "path",
              "description": "Package name of the app.",
              "required": true
            }
          },
          "response": {
            "$ref": "ReviewsReplyResponse"
          },
          "id": "androidpublisher.reviews.reply",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ]
        },
        "get": {
          "path": "androidpublisher/v3/applications/{packageName}/reviews/{reviewId}",
          "response": {
            "$ref": "Review"
          },
          "description": "Gets a single review.",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameterOrder": [
            "packageName",
            "reviewId"
          ],
          "httpMethod": "GET",
          "flatPath": "androidpublisher/v3/applications/{packageName}/reviews/{reviewId}",
          "id": "androidpublisher.reviews.get",
          "parameters": {
            "packageName": {
              "required": true,
              "description": "Package name of the app.",
              "location": "path",
              "type": "string"
            },
            "translationLanguage": {
              "description": "Language localization code.",
              "location": "query",
              "type": "string"
            },
            "reviewId": {
              "location": "path",
              "description": "Unique identifier for a review.",
              "required": true,
              "type": "string"
            }
          }
        }
      }
    },
    "systemapks": {
      "resources": {
        "variants": {
          "methods": {
            "create": {
              "path": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants",
              "request": {
                "$ref": "Variant"
              },
              "response": {
                "$ref": "Variant"
              },
              "parameterOrder": [
                "packageName",
                "versionCode"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameters": {
                "versionCode": {
                  "format": "int64",
                  "description": "The version code of the App Bundle.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "packageName": {
                  "required": true,
                  "description": "Package name of the app.",
                  "type": "string",
                  "location": "path"
                }
              },
              "description": "Creates an APK which is suitable for inclusion in a system image from an already uploaded Android App Bundle.",
              "id": "androidpublisher.systemapks.variants.create",
              "httpMethod": "POST"
            },
            "get": {
              "description": "Returns a previously created system APK variant.",
              "parameterOrder": [
                "packageName",
                "versionCode",
                "variantId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}",
              "response": {
                "$ref": "Variant"
              },
              "id": "androidpublisher.systemapks.variants.get",
              "path": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}",
              "parameters": {
                "versionCode": {
                  "location": "path",
                  "description": "The version code of the App Bundle.",
                  "required": true,
                  "format": "int64",
                  "type": "string"
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "variantId": {
                  "format": "uint32",
                  "description": "The ID of a previously created system APK variant.",
                  "location": "path",
                  "type": "integer",
                  "required": true
                }
              }
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "SystemApksListResponse"
              },
              "parameters": {
                "versionCode": {
                  "format": "int64",
                  "description": "The version code of the App Bundle.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "packageName": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Package name of the app."
                }
              },
              "httpMethod": "GET",
              "path": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants",
              "description": "Returns the list of previously created system APK variants.",
              "parameterOrder": [
                "packageName",
                "versionCode"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants",
              "id": "androidpublisher.systemapks.variants.list"
            },
            "download": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "supportsMediaDownload": true,
              "parameters": {
                "packageName": {
                  "description": "Package name of the app.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "versionCode": {
                  "required": true,
                  "type": "string",
                  "format": "int64",
                  "location": "path",
                  "description": "The version code of the App Bundle."
                },
                "variantId": {
                  "format": "uint32",
                  "location": "path",
                  "required": true,
                  "type": "integer",
                  "description": "The ID of a previously created system APK variant."
                }
              },
              "useMediaDownloadService": true,
              "httpMethod": "GET",
              "id": "androidpublisher.systemapks.variants.download",
              "flatPath": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}:download",
              "description": "Downloads a previously created system APK which is suitable for inclusion in a system image.",
              "path": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}:download",
              "parameterOrder": [
                "packageName",
                "versionCode",
                "variantId"
              ]
            }
          }
        }
      }
    },
    "monetization": {
      "methods": {
        "convertRegionPrices": {
          "httpMethod": "POST",
          "flatPath": "androidpublisher/v3/applications/{packageName}/pricing:convertRegionPrices",
          "response": {
            "$ref": "ConvertRegionPricesResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "description": "Calculates the region prices, using today's exchange rate and country-specific pricing patterns, based on the price in the request for a set of regions.",
          "id": "androidpublisher.monetization.convertRegionPrices",
          "request": {
            "$ref": "ConvertRegionPricesRequest"
          },
          "parameterOrder": [
            "packageName"
          ],
          "path": "androidpublisher/v3/applications/{packageName}/pricing:convertRegionPrices",
          "parameters": {
            "packageName": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Required. The app package name."
            }
          }
        }
      },
      "resources": {
        "subscriptions": {
          "resources": {
            "basePlans": {
              "resources": {
                "offers": {
                  "methods": {
                    "activate": {
                      "id": "androidpublisher.monetization.subscriptions.basePlans.offers.activate",
                      "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}:activate",
                      "response": {
                        "$ref": "SubscriptionOffer"
                      },
                      "parameters": {
                        "packageName": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The parent app (package name) of the offer to activate.",
                          "type": "string"
                        },
                        "offerId": {
                          "required": true,
                          "description": "Required. The unique offer ID of the offer to activate.",
                          "type": "string",
                          "location": "path"
                        },
                        "productId": {
                          "type": "string",
                          "description": "Required. The parent subscription (ID) of the offer to activate.",
                          "location": "path",
                          "required": true
                        },
                        "basePlanId": {
                          "required": true,
                          "description": "Required. The parent base plan (ID) of the offer to activate.",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}:activate",
                      "request": {
                        "$ref": "ActivateSubscriptionOfferRequest"
                      },
                      "parameterOrder": [
                        "packageName",
                        "productId",
                        "basePlanId",
                        "offerId"
                      ],
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/androidpublisher"
                      ],
                      "description": "Activates a subscription offer. Once activated, subscription offers will be available to new subscribers."
                    },
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/androidpublisher"
                      ],
                      "id": "androidpublisher.monetization.subscriptions.basePlans.offers.patch",
                      "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}",
                      "parameters": {
                        "basePlanId": {
                          "location": "path",
                          "description": "Required. Immutable. The ID of the base plan to which this offer is an extension.",
                          "required": true,
                          "type": "string"
                        },
                        "offerId": {
                          "required": true,
                          "type": "string",
                          "description": "Required. Immutable. Unique ID of this subscription offer. Must be unique within the base plan.",
                          "location": "path"
                        },
                        "regionsVersion.version": {
                          "type": "string",
                          "description": "Required. The latest version is 2022/02.",
                          "location": "query"
                        },
                        "packageName": {
                          "description": "Required. Immutable. The package name of the app the parent subscription belongs to.",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        },
                        "productId": {
                          "location": "path",
                          "description": "Required. Immutable. The ID of the parent subscription this offer belongs to.",
                          "required": true,
                          "type": "string"
                        },
                        "updateMask": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. The list of fields to be updated.",
                          "format": "google-fieldmask"
                        }
                      },
                      "description": "Updates an existing subscription offer.",
                      "request": {
                        "$ref": "SubscriptionOffer"
                      },
                      "httpMethod": "PATCH",
                      "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}",
                      "response": {
                        "$ref": "SubscriptionOffer"
                      },
                      "parameterOrder": [
                        "packageName",
                        "productId",
                        "basePlanId",
                        "offerId"
                      ]
                    },
                    "list": {
                      "parameters": {
                        "basePlanId": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The parent base plan (ID) for which the offers should be read. May be specified as '-' to read all offers under a subscription or an app. Must be specified as '-' if product_id is specified as '-'.",
                          "type": "string"
                        },
                        "productId": {
                          "description": "Required. The parent subscription (ID) for which the offers should be read. May be specified as '-' to read all offers under an app.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "A page token, received from a previous `ListSubscriptionsOffers` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSubscriptionOffers` must match the call that provided the page token.",
                          "location": "query"
                        },
                        "packageName": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The parent app (package name) for which the subscriptions should be read.",
                          "location": "path"
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "type": "integer",
                          "description": "The maximum number of subscriptions to return. The service may return fewer than this value. If unspecified, at most 50 subscriptions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                        }
                      },
                      "description": "Lists all offers under a given subscription.",
                      "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/androidpublisher"
                      ],
                      "parameterOrder": [
                        "packageName",
                        "productId",
                        "basePlanId"
                      ],
                      "response": {
                        "$ref": "ListSubscriptionOffersResponse"
                      },
                      "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers",
                      "id": "androidpublisher.monetization.subscriptions.basePlans.offers.list"
                    },
                    "delete": {
                      "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}",
                      "description": "Deletes a subscription offer. Can only be done for draft offers. This action is irreversible.",
                      "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}",
                      "parameterOrder": [
                        "packageName",
                        "productId",
                        "basePlanId",
                        "offerId"
                      ],
                      "httpMethod": "DELETE",
                      "id": "androidpublisher.monetization.subscriptions.basePlans.offers.delete",
                      "parameters": {
                        "packageName": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The parent app (package name) of the offer to delete."
                        },
                        "basePlanId": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. The parent base plan (ID) of the offer to delete."
                        },
                        "productId": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. The parent subscription (ID) of the offer to delete.",
                          "required": true
                        },
                        "offerId": {
                          "location": "path",
                          "description": "Required. The unique offer ID of the offer to delete.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/androidpublisher"
                      ]
                    },
                    "deactivate": {
                      "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}:deactivate",
                      "description": "Deactivates a subscription offer. Once deactivated, existing subscribers will maintain their subscription, but the offer will become unavailable to new subscribers.",
                      "parameters": {
                        "packageName": {
                          "description": "Required. The parent app (package name) of the offer to deactivate.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "basePlanId": {
                          "type": "string",
                          "description": "Required. The parent base plan (ID) of the offer to deactivate.",
                          "required": true,
                          "location": "path"
                        },
                        "offerId": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The unique offer ID of the offer to deactivate.",
                          "type": "string"
                        },
                        "productId": {
                          "description": "Required. The parent subscription (ID) of the offer to deactivate.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "SubscriptionOffer"
                      },
                      "id": "androidpublisher.monetization.subscriptions.basePlans.offers.deactivate",
                      "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}:deactivate",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/androidpublisher"
                      ],
                      "parameterOrder": [
                        "packageName",
                        "productId",
                        "basePlanId",
                        "offerId"
                      ],
                      "request": {
                        "$ref": "DeactivateSubscriptionOfferRequest"
                      }
                    },
                    "create": {
                      "description": "Creates a new subscription offer. Only auto-renewing base plans can have subscription offers. The offer state will be DRAFT until it is activated.",
                      "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers",
                      "id": "androidpublisher.monetization.subscriptions.basePlans.offers.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/androidpublisher"
                      ],
                      "response": {
                        "$ref": "SubscriptionOffer"
                      },
                      "parameterOrder": [
                        "packageName",
                        "productId",
                        "basePlanId"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "packageName": {
                          "location": "path",
                          "description": "Required. The parent app (package name) for which the offer should be created. Must be equal to the package_name field on the Subscription resource.",
                          "required": true,
                          "type": "string"
                        },
                        "basePlanId": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The parent base plan (ID) for which the offer should be created. Must be equal to the base_plan_id field on the SubscriptionOffer resource.",
                          "type": "string"
                        },
                        "regionsVersion.version": {
                          "location": "query",
                          "description": "Required. The latest version is 2022/02.",
                          "type": "string"
                        },
                        "offerId": {
                          "type": "string",
                          "description": "Required. The ID to use for the offer. For the requirements on this format, see the documentation of the offer_id field on the SubscriptionOffer resource.",
                          "location": "query"
                        },
                        "productId": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The parent subscription (ID) for which the offer should be created. Must be equal to the product_id field on the SubscriptionOffer resource.",
                          "location": "path"
                        }
                      },
                      "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers",
                      "request": {
                        "$ref": "SubscriptionOffer"
                      }
                    },
                    "get": {
                      "parameters": {
                        "basePlanId": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The parent base plan (ID) of the offer to get."
                        },
                        "offerId": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The unique offer ID of the offer to get."
                        },
                        "productId": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. The parent subscription (ID) of the offer to get.",
                          "required": true
                        },
                        "packageName": {
                          "type": "string",
                          "description": "Required. The parent app (package name) of the offer to get.",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "packageName",
                        "productId",
                        "basePlanId",
                        "offerId"
                      ],
                      "httpMethod": "GET",
                      "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}",
                      "id": "androidpublisher.monetization.subscriptions.basePlans.offers.get",
                      "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}/offers/{offerId}",
                      "description": "Reads a single offer",
                      "response": {
                        "$ref": "SubscriptionOffer"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/androidpublisher"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "activate": {
                  "response": {
                    "$ref": "Subscription"
                  },
                  "parameterOrder": [
                    "packageName",
                    "productId",
                    "basePlanId"
                  ],
                  "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:activate",
                  "description": "Activates a base plan. Once activated, base plans will be available to new subscribers.",
                  "parameters": {
                    "productId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent subscription (ID) of the base plan to activate."
                    },
                    "basePlanId": {
                      "description": "Required. The unique base plan ID of the base plan to activate.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "packageName": {
                      "location": "path",
                      "description": "Required. The parent app (package name) of the base plan to activate.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ActivateBasePlanRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/androidpublisher"
                  ],
                  "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:activate",
                  "id": "androidpublisher.monetization.subscriptions.basePlans.activate"
                },
                "deactivate": {
                  "description": "Deactivates a base plan. Once deactivated, the base plan will become unavailable to new subscribers, but existing subscribers will maintain their subscription",
                  "request": {
                    "$ref": "DeactivateBasePlanRequest"
                  },
                  "parameterOrder": [
                    "packageName",
                    "productId",
                    "basePlanId"
                  ],
                  "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:deactivate",
                  "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:deactivate",
                  "scopes": [
                    "https://www.googleapis.com/auth/androidpublisher"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Subscription"
                  },
                  "id": "androidpublisher.monetization.subscriptions.basePlans.deactivate",
                  "parameters": {
                    "productId": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent subscription (ID) of the base plan to deactivate.",
                      "required": true
                    },
                    "basePlanId": {
                      "description": "Required. The unique base plan ID of the base plan to deactivate.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "packageName": {
                      "description": "Required. The parent app (package name) of the base plan to deactivate.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  }
                },
                "delete": {
                  "id": "androidpublisher.monetization.subscriptions.basePlans.delete",
                  "parameters": {
                    "productId": {
                      "description": "Required. The parent subscription (ID) of the base plan to delete.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "basePlanId": {
                      "required": true,
                      "description": "Required. The unique offer ID of the base plan to delete.",
                      "type": "string",
                      "location": "path"
                    },
                    "packageName": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent app (package name) of the base plan to delete."
                    }
                  },
                  "parameterOrder": [
                    "packageName",
                    "productId",
                    "basePlanId"
                  ],
                  "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}",
                  "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/androidpublisher"
                  ],
                  "description": "Deletes a base plan. Can only be done for draft base plans. This action is irreversible."
                },
                "migratePrices": {
                  "id": "androidpublisher.monetization.subscriptions.basePlans.migratePrices",
                  "parameterOrder": [
                    "packageName",
                    "productId",
                    "basePlanId"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/androidpublisher"
                  ],
                  "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:migratePrices",
                  "request": {
                    "$ref": "MigrateBasePlanPricesRequest"
                  },
                  "response": {
                    "$ref": "MigrateBasePlanPricesResponse"
                  },
                  "parameters": {
                    "productId": {
                      "location": "path",
                      "description": "Required. The ID of the subscription to update. Must be equal to the product_id field on the Subscription resource.",
                      "required": true,
                      "type": "string"
                    },
                    "basePlanId": {
                      "required": true,
                      "description": "Required. The unique base plan ID of the base plan to update prices on.",
                      "location": "path",
                      "type": "string"
                    },
                    "packageName": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Package name of the parent app. Must be equal to the package_name field on the Subscription resource.",
                      "type": "string"
                    }
                  },
                  "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}/basePlans/{basePlanId}:migratePrices",
                  "description": "Migrates subscribers who are receiving an historical subscription price to the currently-offered price for the specified region. Requests will cause price change notifications to be sent to users who are currently receiving an historical price older than the supplied timestamp. Subscribers who do not agree to the new price will have their subscription ended at the next renewal."
                }
              }
            }
          },
          "methods": {
            "delete": {
              "parameters": {
                "packageName": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The parent app (package name) of the app of the subscription to delete."
                },
                "productId": {
                  "type": "string",
                  "description": "Required. The unique product ID of the subscription to delete.",
                  "location": "path",
                  "required": true
                }
              },
              "id": "androidpublisher.monetization.subscriptions.delete",
              "description": "Deletes a subscription. A subscription can only be deleted if it has never had a base plan published.",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName",
                "productId"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}",
              "httpMethod": "DELETE",
              "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}"
            },
            "get": {
              "description": "Reads a single subscription.",
              "response": {
                "$ref": "Subscription"
              },
              "id": "androidpublisher.monetization.subscriptions.get",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}",
              "httpMethod": "GET",
              "parameterOrder": [
                "packageName",
                "productId"
              ],
              "parameters": {
                "productId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The unique product ID of the subscription to get."
                },
                "packageName": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The parent app (package name) of the subscription to get."
                }
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}"
            },
            "list": {
              "id": "androidpublisher.monetization.subscriptions.list",
              "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions",
              "httpMethod": "GET",
              "description": "Lists all subscriptions under a given app.",
              "parameterOrder": [
                "packageName"
              ],
              "parameters": {
                "packageName": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The parent app (package name) for which the subscriptions should be read.",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of subscriptions to return. The service may return fewer than this value. If unspecified, at most 50 subscriptions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                  "location": "query",
                  "format": "int32"
                },
                "showArchived": {
                  "description": "Whether archived subscriptions should be included in the response. Defaults to false.",
                  "location": "query",
                  "type": "boolean"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A page token, received from a previous `ListSubscriptions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSubscriptions` must match the call that provided the page token.",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "ListSubscriptionsResponse"
              },
              "path": "androidpublisher/v3/applications/{packageName}/subscriptions"
            },
            "create": {
              "parameters": {
                "packageName": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The parent app (package name) for which the subscription should be created. Must be equal to the package_name field on the Subscription resource.",
                  "required": true
                },
                "productId": {
                  "description": "Required. The ID to use for the subscription. For the requirements on this format, see the documentation of the product_id field on the Subscription resource.",
                  "location": "query",
                  "type": "string"
                },
                "regionsVersion.version": {
                  "location": "query",
                  "type": "string",
                  "description": "Required. The latest version is 2022/02."
                }
              },
              "parameterOrder": [
                "packageName"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions",
              "path": "androidpublisher/v3/applications/{packageName}/subscriptions",
              "httpMethod": "POST",
              "description": "Creates a new subscription. Newly added base plans will remain in draft state until activated.",
              "request": {
                "$ref": "Subscription"
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "Subscription"
              },
              "id": "androidpublisher.monetization.subscriptions.create"
            },
            "archive": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "httpMethod": "POST",
              "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}:archive",
              "request": {
                "$ref": "ArchiveSubscriptionRequest"
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}:archive",
              "parameters": {
                "packageName": {
                  "description": "Required. The parent app (package name) of the app of the subscription to delete.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "productId": {
                  "type": "string",
                  "description": "Required. The unique product ID of the subscription to delete.",
                  "required": true,
                  "location": "path"
                }
              },
              "description": "Archives a subscription. Can only be done if at least one base plan was active in the past, and no base plan is available for new or existing subscribers currently. This action is irreversible, and the subscription ID will remain reserved.",
              "response": {
                "$ref": "Subscription"
              },
              "parameterOrder": [
                "packageName",
                "productId"
              ],
              "id": "androidpublisher.monetization.subscriptions.archive"
            },
            "patch": {
              "flatPath": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}",
              "description": "Updates an existing subscription.",
              "parameterOrder": [
                "packageName",
                "productId"
              ],
              "httpMethod": "PATCH",
              "parameters": {
                "productId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Immutable. Unique product ID of the product. Unique within the parent app. Product IDs must be composed of lower-case letters (a-z), numbers (0-9), underscores (_) and dots (.). It must start with a lower-case letter or number, and be between 1 and 40 (inclusive) characters in length."
                },
                "regionsVersion.version": {
                  "location": "query",
                  "type": "string",
                  "description": "Required. The latest version is 2022/02."
                },
                "packageName": {
                  "description": "Immutable. Package name of the parent app.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "updateMask": {
                  "description": "Required. The list of fields to be updated.",
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "Subscription"
              },
              "path": "androidpublisher/v3/applications/{packageName}/subscriptions/{productId}",
              "request": {
                "$ref": "Subscription"
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.monetization.subscriptions.patch"
            }
          }
        }
      }
    },
    "grants": {
      "methods": {
        "delete": {
          "httpMethod": "DELETE",
          "path": "androidpublisher/v3/{+name}",
          "description": "Removes all access for the user to the given package or developer account.",
          "id": "androidpublisher.grants.delete",
          "parameters": {
            "name": {
              "description": "Required. The name of the grant to delete. Format: developers/{developer}/users/{email}/grants/{package_name}",
              "required": true,
              "pattern": "^developers/[^/]+/users/[^/]+/grants/[^/]+$",
              "location": "path",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}/grants/{grantsId}",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ]
        },
        "create": {
          "request": {
            "$ref": "Grant"
          },
          "parameterOrder": [
            "parent"
          ],
          "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}/grants",
          "id": "androidpublisher.grants.create",
          "httpMethod": "POST",
          "path": "androidpublisher/v3/{+parent}/grants",
          "parameters": {
            "parent": {
              "location": "path",
              "pattern": "^developers/[^/]+/users/[^/]+$",
              "type": "string",
              "required": true,
              "description": "Required. The user which needs permission. Format: developers/{developer}/users/{user}"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "description": "Grant access for a user to the given package.",
          "response": {
            "$ref": "Grant"
          }
        },
        "patch": {
          "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}/grants/{grantsId}",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "response": {
            "$ref": "Grant"
          },
          "parameters": {
            "name": {
              "pattern": "^developers/[^/]+/users/[^/]+/grants/[^/]+$",
              "required": true,
              "type": "string",
              "description": "Required. Resource name for this grant, following the pattern \"developers/{developer}/users/{email}/grants/{package_name}\". If this grant is for a draft app, the app ID will be used in this resource name instead of the package name.",
              "location": "path"
            },
            "updateMask": {
              "format": "google-fieldmask",
              "description": "Optional. The list of fields to be updated.",
              "location": "query",
              "type": "string"
            }
          },
          "httpMethod": "PATCH",
          "parameterOrder": [
            "name"
          ],
          "id": "androidpublisher.grants.patch",
          "path": "androidpublisher/v3/{+name}",
          "description": "Updates access for the user to the given package.",
          "request": {
            "$ref": "Grant"
          }
        }
      }
    },
    "externaltransactions": {
      "methods": {
        "createexternaltransaction": {
          "flatPath": "androidpublisher/v3/applications/{applicationsId}/externalTransactions",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "httpMethod": "POST",
          "description": "Creates a new external transaction.",
          "request": {
            "$ref": "ExternalTransaction"
          },
          "response": {
            "$ref": "ExternalTransaction"
          },
          "id": "androidpublisher.externaltransactions.createexternaltransaction",
          "parameterOrder": [
            "parent"
          ],
          "parameters": {
            "externalTransactionId": {
              "location": "query",
              "description": "Required. The id to use for the external transaction. Must be unique across all other transactions for the app. This value should be 1-63 characters and valid characters are /a-z0-9_-/. Do not use this field to store any Personally Identifiable Information (PII) such as emails. Attempting to store PII in this field may result in requests being blocked.",
              "type": "string"
            },
            "parent": {
              "description": "Required. The parent resource where this external transaction will be created. Format: applications/{package_name}",
              "type": "string",
              "location": "path",
              "required": true,
              "pattern": "^applications/[^/]+$"
            }
          },
          "path": "androidpublisher/v3/{+parent}/externalTransactions"
        },
        "getexternaltransaction": {
          "id": "androidpublisher.externaltransactions.getexternaltransaction",
          "description": "Gets an existing external transaction.",
          "path": "androidpublisher/v3/{+name}",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameters": {
            "name": {
              "required": true,
              "location": "path",
              "type": "string",
              "pattern": "^applications/[^/]+/externalTransactions/[^/]+$",
              "description": "Required. The name of the external transaction to retrieve. Format: applications/{package_name}/externalTransactions/{external_transaction}"
            }
          },
          "flatPath": "androidpublisher/v3/applications/{applicationsId}/externalTransactions/{externalTransactionsId}",
          "response": {
            "$ref": "ExternalTransaction"
          },
          "parameterOrder": [
            "name"
          ]
        },
        "refundexternaltransaction": {
          "description": "Refunds or partially refunds an existing external transaction.",
          "response": {
            "$ref": "ExternalTransaction"
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "id": "androidpublisher.externaltransactions.refundexternaltransaction",
          "httpMethod": "POST",
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "RefundExternalTransactionRequest"
          },
          "parameters": {
            "name": {
              "location": "path",
              "description": "Required. The name of the external transaction that will be refunded. Format: applications/{package_name}/externalTransactions/{external_transaction}",
              "required": true,
              "type": "string",
              "pattern": "^applications/[^/]+/externalTransactions/[^/]+$"
            }
          },
          "path": "androidpublisher/v3/{+name}:refund",
          "flatPath": "androidpublisher/v3/applications/{applicationsId}/externalTransactions/{externalTransactionsId}:refund"
        }
      }
    },
    "generatedapks": {
      "methods": {
        "download": {
          "description": "Downloads a single signed APK generated from an app bundle.",
          "httpMethod": "GET",
          "parameterOrder": [
            "packageName",
            "versionCode",
            "downloadId"
          ],
          "id": "androidpublisher.generatedapks.download",
          "useMediaDownloadService": true,
          "path": "androidpublisher/v3/applications/{packageName}/generatedApks/{versionCode}/downloads/{downloadId}:download",
          "flatPath": "androidpublisher/v3/applications/{packageName}/generatedApks/{versionCode}/downloads/{downloadId}:download",
          "supportsMediaDownload": true,
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameters": {
            "versionCode": {
              "location": "path",
              "description": "Version code of the app bundle.",
              "required": true,
              "format": "int32",
              "type": "integer"
            },
            "packageName": {
              "description": "Package name of the app.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "downloadId": {
              "location": "path",
              "description": "Download ID, which uniquely identifies the APK to download. Can be obtained from the response of `generatedapks.list` method.",
              "type": "string",
              "required": true
            }
          }
        },
        "list": {
          "description": "Returns download metadata for all APKs that were generated from a given app bundle.",
          "response": {
            "$ref": "GeneratedApksListResponse"
          },
          "httpMethod": "GET",
          "parameters": {
            "versionCode": {
              "type": "integer",
              "location": "path",
              "format": "int32",
              "description": "Version code of the app bundle.",
              "required": true
            },
            "packageName": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Package name of the app."
            }
          },
          "id": "androidpublisher.generatedapks.list",
          "path": "androidpublisher/v3/applications/{packageName}/generatedApks/{versionCode}",
          "parameterOrder": [
            "packageName",
            "versionCode"
          ],
          "flatPath": "androidpublisher/v3/applications/{packageName}/generatedApks/{versionCode}",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ]
        }
      }
    },
    "purchases": {
      "resources": {
        "subscriptions": {
          "methods": {
            "get": {
              "parameters": {
                "subscriptionId": {
                  "description": "The purchased subscription ID (for example, 'monthly001').",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "token": {
                  "type": "string",
                  "location": "path",
                  "description": "The token provided to the user's device when the subscription was purchased.",
                  "required": true
                },
                "packageName": {
                  "location": "path",
                  "type": "string",
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "httpMethod": "GET",
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}",
              "id": "androidpublisher.purchases.subscriptions.get",
              "description": "Checks whether a user's subscription purchase is valid and returns its expiry time.",
              "response": {
                "$ref": "SubscriptionPurchase"
              },
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}"
            },
            "refund": {
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:refund",
              "id": "androidpublisher.purchases.subscriptions.refund",
              "parameters": {
                "token": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The token provided to the user's device when the subscription was purchased."
                },
                "subscriptionId": {
                  "required": true,
                  "type": "string",
                  "description": "\"The purchased subscription ID (for example, 'monthly001').",
                  "location": "path"
                },
                "packageName": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing')."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:refund",
              "httpMethod": "POST",
              "description": "Refunds a user's subscription purchase, but the subscription remains valid until its expiration time and it will continue to recur.",
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ]
            },
            "cancel": {
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:cancel",
              "description": "Cancels a user's subscription purchase. The subscription remains valid until its expiration time.",
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.purchases.subscriptions.cancel",
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:cancel",
              "parameters": {
                "packageName": {
                  "location": "path",
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "required": true,
                  "type": "string"
                },
                "subscriptionId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The purchased subscription ID (for example, 'monthly001')."
                },
                "token": {
                  "required": true,
                  "location": "path",
                  "description": "The token provided to the user's device when the subscription was purchased.",
                  "type": "string"
                }
              }
            },
            "revoke": {
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:revoke",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.purchases.subscriptions.revoke",
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:revoke",
              "parameters": {
                "packageName": {
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "subscriptionId": {
                  "required": true,
                  "description": "The purchased subscription ID (for example, 'monthly001').",
                  "type": "string",
                  "location": "path"
                },
                "token": {
                  "description": "The token provided to the user's device when the subscription was purchased.",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "httpMethod": "POST",
              "description": "Refunds and immediately revokes a user's subscription purchase. Access to the subscription will be terminated immediately and it will stop recurring.",
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ]
            },
            "acknowledge": {
              "httpMethod": "POST",
              "id": "androidpublisher.purchases.subscriptions.acknowledge",
              "request": {
                "$ref": "SubscriptionPurchasesAcknowledgeRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameters": {
                "subscriptionId": {
                  "type": "string",
                  "description": "The purchased subscription ID (for example, 'monthly001').",
                  "required": true,
                  "location": "path"
                },
                "packageName": {
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "token": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The token provided to the user's device when the subscription was purchased."
                }
              },
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:acknowledge",
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:acknowledge",
              "description": "Acknowledges a subscription purchase.",
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ]
            },
            "defer": {
              "response": {
                "$ref": "SubscriptionPurchasesDeferResponse"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ],
              "description": "Defers a user's subscription purchase until a specified future expiration time.",
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:defer",
              "request": {
                "$ref": "SubscriptionPurchasesDeferRequest"
              },
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:defer",
              "id": "androidpublisher.purchases.subscriptions.defer",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameters": {
                "packageName": {
                  "location": "path",
                  "type": "string",
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "required": true
                },
                "token": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The token provided to the user's device when the subscription was purchased."
                },
                "subscriptionId": {
                  "location": "path",
                  "type": "string",
                  "description": "The purchased subscription ID (for example, 'monthly001').",
                  "required": true
                }
              }
            }
          }
        },
        "products": {
          "methods": {
            "acknowledge": {
              "description": "Acknowledges a purchase of an inapp item.",
              "id": "androidpublisher.purchases.products.acknowledge",
              "httpMethod": "POST",
              "parameterOrder": [
                "packageName",
                "productId",
                "token"
              ],
              "request": {
                "$ref": "ProductPurchasesAcknowledgeRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameters": {
                "productId": {
                  "type": "string",
                  "location": "path",
                  "description": "The inapp product SKU (for example, 'com.some.thing.inapp1').",
                  "required": true
                },
                "packageName": {
                  "type": "string",
                  "description": "The package name of the application the inapp product was sold in (for example, 'com.some.thing').",
                  "required": true,
                  "location": "path"
                },
                "token": {
                  "description": "The token provided to the user's device when the inapp product was purchased.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "path": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}:acknowledge",
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}:acknowledge"
            },
            "consume": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "httpMethod": "POST",
              "parameters": {
                "packageName": {
                  "type": "string",
                  "required": true,
                  "description": "The package name of the application the inapp product was sold in (for example, 'com.some.thing').",
                  "location": "path"
                },
                "token": {
                  "required": true,
                  "location": "path",
                  "description": "The token provided to the user's device when the inapp product was purchased.",
                  "type": "string"
                },
                "productId": {
                  "description": "The inapp product SKU (for example, 'com.some.thing.inapp1').",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "path": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}:consume",
              "description": "Consumes a purchase for an inapp item.",
              "id": "androidpublisher.purchases.products.consume",
              "parameterOrder": [
                "packageName",
                "productId",
                "token"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}:consume"
            },
            "get": {
              "httpMethod": "GET",
              "path": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}",
              "parameterOrder": [
                "packageName",
                "productId",
                "token"
              ],
              "description": "Checks the purchase and consumption status of an inapp item.",
              "id": "androidpublisher.purchases.products.get",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "ProductPurchase"
              },
              "parameters": {
                "productId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The inapp product SKU (for example, 'com.some.thing.inapp1')."
                },
                "packageName": {
                  "location": "path",
                  "required": true,
                  "description": "The package name of the application the inapp product was sold in (for example, 'com.some.thing').",
                  "type": "string"
                },
                "token": {
                  "required": true,
                  "description": "The token provided to the user's device when the inapp product was purchased.",
                  "type": "string",
                  "location": "path"
                }
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}"
            }
          }
        },
        "voidedpurchases": {
          "methods": {
            "list": {
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/voidedpurchases",
              "parameters": {
                "token": {
                  "type": "string",
                  "location": "query",
                  "description": "Defines the token of the page to return, usually taken from TokenPagination. This can only be used if token paging is enabled."
                },
                "endTime": {
                  "format": "int64",
                  "description": "The time, in milliseconds since the Epoch, of the newest voided purchase that you want to see in the response. The value of this parameter cannot be greater than the current time and is ignored if a pagination token is set. Default value is current time. Note: This filter is applied on the time at which the record is seen as voided by our systems and not the actual voided time returned in the response.",
                  "type": "string",
                  "location": "query"
                },
                "type": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "The type of voided purchases that you want to see in the response. Possible values are: 0. Only voided in-app product purchases will be returned in the response. This is the default value. 1. Both voided in-app purchases and voided subscription purchases will be returned in the response. Note: Before requesting to receive voided subscription purchases, you must switch to use orderId in the response which uniquely identifies one-time purchases and subscriptions. Otherwise, you will receive multiple subscription orders with the same PurchaseToken, because subscription renewal orders share the same PurchaseToken."
                },
                "packageName": {
                  "description": "The package name of the application for which voided purchases need to be returned (for example, 'com.some.thing').",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "startTime": {
                  "type": "string",
                  "location": "query",
                  "format": "int64",
                  "description": "The time, in milliseconds since the Epoch, of the oldest voided purchase that you want to see in the response. The value of this parameter cannot be older than 30 days and is ignored if a pagination token is set. Default value is current time minus 30 days. Note: This filter is applied on the time at which the record is seen as voided by our systems and not the actual voided time returned in the response."
                },
                "startIndex": {
                  "format": "uint32",
                  "description": "Defines the index of the first element to return. This can only be used if indexed paging is enabled.",
                  "type": "integer",
                  "location": "query"
                },
                "maxResults": {
                  "type": "integer",
                  "format": "uint32",
                  "location": "query",
                  "description": "Defines how many results the list operation should return. The default number depends on the resource collection."
                }
              },
              "httpMethod": "GET",
              "response": {
                "$ref": "VoidedPurchasesListResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName"
              ],
              "id": "androidpublisher.purchases.voidedpurchases.list",
              "path": "androidpublisher/v3/applications/{packageName}/purchases/voidedpurchases",
              "description": "Lists the purchases that were canceled, refunded or charged-back."
            }
          }
        },
        "subscriptionsv2": {
          "methods": {
            "get": {
              "response": {
                "$ref": "SubscriptionPurchaseV2"
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameters": {
                "packageName": {
                  "location": "path",
                  "description": "The package of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "type": "string",
                  "required": true
                },
                "token": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The token provided to the user's device when the subscription was purchased."
                }
              },
              "httpMethod": "GET",
              "id": "androidpublisher.purchases.subscriptionsv2.get",
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptionsv2/tokens/{token}",
              "parameterOrder": [
                "packageName",
                "token"
              ],
              "description": "Get metadata about a subscription",
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptionsv2/tokens/{token}"
            }
          }
        }
      }
    },
    "applications": {
      "resources": {
        "deviceTierConfigs": {
          "methods": {
            "get": {
              "parameters": {
                "deviceTierConfigId": {
                  "type": "string",
                  "description": "Required. Id of an existing device tier config.",
                  "required": true,
                  "format": "int64",
                  "location": "path"
                },
                "packageName": {
                  "type": "string",
                  "description": "Package name of the app.",
                  "location": "path",
                  "required": true
                }
              },
              "httpMethod": "GET",
              "path": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs/{deviceTierConfigId}",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "description": "Returns a particular device tier config.",
              "id": "androidpublisher.applications.deviceTierConfigs.get",
              "response": {
                "$ref": "DeviceTierConfig"
              },
              "parameterOrder": [
                "packageName",
                "deviceTierConfigId"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs/{deviceTierConfigId}"
            },
            "list": {
              "description": "Returns created device tier configs, ordered by descending creation time.",
              "flatPath": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs",
              "id": "androidpublisher.applications.deviceTierConfigs.list",
              "httpMethod": "GET",
              "parameterOrder": [
                "packageName"
              ],
              "response": {
                "$ref": "ListDeviceTierConfigsResponse"
              },
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "A page token, received from a previous `ListDeviceTierConfigs` call. Provide this to retrieve the subsequent page.",
                  "location": "query"
                },
                "packageName": {
                  "required": true,
                  "type": "string",
                  "description": "Package name of the app.",
                  "location": "path"
                },
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of device tier configs to return. The service may return fewer than this value. If unspecified, at most 10 device tier configs will be returned. The maximum value for this field is 100; values above 100 will be coerced to 100. Device tier configs will be ordered by descending creation time.",
                  "location": "query",
                  "type": "integer"
                }
              }
            },
            "create": {
              "httpMethod": "POST",
              "flatPath": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs",
              "response": {
                "$ref": "DeviceTierConfig"
              },
              "id": "androidpublisher.applications.deviceTierConfigs.create",
              "request": {
                "$ref": "DeviceTierConfig"
              },
              "parameters": {
                "allowUnknownDevices": {
                  "description": "Whether the service should accept device IDs that are unknown to Play's device catalog.",
                  "type": "boolean",
                  "location": "query"
                },
                "packageName": {
                  "required": true,
                  "type": "string",
                  "description": "Package name of the app.",
                  "location": "path"
                }
              },
              "description": "Creates a new device tier config for an app."
            }
          }
        }
      }
    }
  },
  "rootUrl": "https://androidpublisher.googleapis.com/",
  "version": "v3",
  "name": "androidpublisher",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "title": "Google Play Android Developer API",
  "schemas": {
    "ScreenDensityTargeting": {
      "id": "ScreenDensityTargeting",
      "description": "Targeting based on screen density.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "ScreenDensity"
          },
          "description": "Value of a screen density."
        },
        "alternatives": {
          "type": "array",
          "items": {
            "$ref": "ScreenDensity"
          },
          "description": "Targeting of other sibling directories that were in the Bundle. For main splits this is targeting of other main splits."
        }
      }
    },
    "BasePlan": {
      "description": "A single base plan for a subscription.",
      "id": "BasePlan",
      "properties": {
        "otherRegionsConfig": {
          "description": "Pricing information for any new locations Play may launch in the future. If omitted, the BasePlan will not be automatically available any new locations Play may launch in the future.",
          "$ref": "OtherRegionsBasePlanConfig"
        },
        "prepaidBasePlanType": {
          "$ref": "PrepaidBasePlanType",
          "description": "Set when the base plan does not automatically renew at the end of the billing period."
        },
        "autoRenewingBasePlanType": {
          "description": "Set when the base plan automatically renews at a regular interval.",
          "$ref": "AutoRenewingBasePlanType"
        },
        "offerTags": {
          "items": {
            "$ref": "OfferTag"
          },
          "description": "List of up to 20 custom tags specified for this base plan, and returned to the app through the billing library. Subscription offers for this base plan will also receive these offer tags in the billing library.",
          "type": "array"
        },
        "basePlanId": {
          "type": "string",
          "description": "Required. Immutable. The unique identifier of this base plan. Must be unique within the subscription, and conform with RFC-1034. That is, this ID can only contain lower-case letters (a-z), numbers (0-9), and hyphens (-), and be at most 63 characters."
        },
        "regionalConfigs": {
          "items": {
            "$ref": "RegionalBasePlanConfig"
          },
          "type": "array",
          "description": "Region-specific information for this base plan."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "ACTIVE",
            "INACTIVE"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified state.",
            "The base plan is currently in a draft state, and hasn't been activated. It can be safely deleted at this point.",
            "The base plan is active and available for new subscribers.",
            "The base plan is inactive and only available for existing subscribers."
          ],
          "type": "string",
          "description": "Output only. The state of the base plan, i.e. whether it's active. Draft and inactive base plans can be activated or deleted. Active base plans can be made inactive. Inactive base plans can be canceled. This field cannot be changed by updating the resource. Use the dedicated endpoints instead."
        }
      },
      "type": "object"
    },
    "DeviceRam": {
      "properties": {
        "maxBytes": {
          "description": "Maximum RAM in bytes (bound excluded).",
          "type": "string",
          "format": "int64"
        },
        "minBytes": {
          "description": "Minimum RAM in bytes (bound included).",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Conditions about a device's RAM capabilities.",
      "id": "DeviceRam",
      "type": "object"
    },
    "SystemApkOptions": {
      "properties": {
        "rotated": {
          "description": "Whether to use the rotated key for signing the system APK.",
          "type": "boolean"
        },
        "uncompressedNativeLibraries": {
          "type": "boolean",
          "description": "Whether system APK was generated with uncompressed native libraries."
        },
        "uncompressedDexFiles": {
          "type": "boolean",
          "description": "Whether system APK was generated with uncompressed dex files."
        }
      },
      "description": "Options for system APKs.",
      "id": "SystemApkOptions",
      "type": "object"
    },
    "ConvertedRegionPrice": {
      "id": "ConvertedRegionPrice",
      "type": "object",
      "description": "A converted region price.",
      "properties": {
        "regionCode": {
          "type": "string",
          "description": "The region code of the region."
        },
        "taxAmount": {
          "$ref": "Money",
          "description": "The tax amount of the converted price."
        },
        "price": {
          "description": "The converted price tax inclusive.",
          "$ref": "Money"
        }
      }
    },
    "AbiTargeting": {
      "properties": {
        "alternatives": {
          "description": "Targeting of other sibling directories that were in the Bundle. For main splits this is targeting of other main splits.",
          "type": "array",
          "items": {
            "$ref": "Abi"
          }
        },
        "value": {
          "description": "Value of an abi.",
          "type": "array",
          "items": {
            "$ref": "Abi"
          }
        }
      },
      "description": "Targeting based on Abi.",
      "id": "AbiTargeting",
      "type": "object"
    },
    "ImagesListResponse": {
      "id": "ImagesListResponse",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "$ref": "Image"
          },
          "description": "All listed Images."
        }
      },
      "description": "Response listing all images.",
      "type": "object"
    },
    "ApkSet": {
      "id": "ApkSet",
      "properties": {
        "apkDescription": {
          "description": "Description of the generated apks.",
          "type": "array",
          "items": {
            "$ref": "ApkDescription"
          }
        },
        "moduleMetadata": {
          "description": "Metadata about the module represented by this ApkSet",
          "$ref": "ModuleMetadata"
        }
      },
      "type": "object",
      "description": "A set of apks representing a module."
    },
    "Listing": {
      "id": "Listing",
      "description": "A localized store listing. The resource for ListingsService.",
      "properties": {
        "title": {
          "description": "Localized title of the app.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description of the app.",
          "type": "string"
        },
        "video": {
          "description": "URL of a promotional YouTube video for the app.",
          "type": "string"
        },
        "language": {
          "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).",
          "type": "string"
        },
        "fullDescription": {
          "description": "Full description of the app.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExternalTransactionTestPurchase": {
      "properties": {},
      "description": "Represents a transaction performed using a test account. These transactions will not be charged by Google.",
      "type": "object",
      "id": "ExternalTransactionTestPurchase"
    },
    "Price": {
      "properties": {
        "priceMicros": {
          "description": "Price in 1/million of the currency base unit, represented as a string.",
          "type": "string"
        },
        "currency": {
          "description": "3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java",
          "type": "string"
        }
      },
      "id": "Price",
      "type": "object",
      "description": "Definition of a price, i.e. currency and units."
    },
    "DeveloperComment": {
      "id": "DeveloperComment",
      "type": "object",
      "description": "Developer entry from conversation between user and developer.",
      "properties": {
        "lastModified": {
          "$ref": "Timestamp",
          "description": "The last time at which this comment was updated."
        },
        "text": {
          "type": "string",
          "description": "The content of the comment, i.e. reply body."
        }
      }
    },
    "ExpansionFilesUploadResponse": {
      "description": "Response for uploading an expansion file.",
      "type": "object",
      "properties": {
        "expansionFile": {
          "description": "The uploaded expansion file configuration.",
          "$ref": "ExpansionFile"
        }
      },
      "id": "ExpansionFilesUploadResponse"
    },
    "AcquisitionTargetingRule": {
      "id": "AcquisitionTargetingRule",
      "description": "Represents a targeting rule of the form: User never had {scope} before.",
      "properties": {
        "scope": {
          "$ref": "TargetingRuleScope",
          "description": "Required. The scope of subscriptions this rule considers. Only allows \"this subscription\" and \"any subscription in app\"."
        }
      },
      "type": "object"
    },
    "OtherRegionsSubscriptionOfferPhaseConfig": {
      "id": "OtherRegionsSubscriptionOfferPhaseConfig",
      "type": "object",
      "properties": {
        "otherRegionsPrices": {
          "description": "The absolute price the user pays for this offer phase. The price must not be smaller than the minimum price allowed for any new locations Play may launch in.",
          "$ref": "OtherRegionsSubscriptionOfferPhasePrices"
        },
        "relativeDiscount": {
          "description": "The fraction of the base plan price prorated over the phase duration that the user pays for this offer phase. For example, if the base plan price for this region is $12 for a period of 1 year, then a 50% discount for a phase of a duration of 3 months would correspond to a price of $1.50. The discount must be specified as a fraction strictly larger than 0 and strictly smaller than 1. The resulting price will be rounded to the nearest billable unit (e.g. cents for USD). The relative discount is considered invalid if the discounted price ends up being smaller than the minimum price allowed in any new locations Play may launch in.",
          "type": "number",
          "format": "double"
        },
        "absoluteDiscounts": {
          "$ref": "OtherRegionsSubscriptionOfferPhasePrices",
          "description": "The absolute amount of money subtracted from the base plan price prorated over the phase duration that the user pays for this offer phase. For example, if the base plan price for this region is $12 for a period of 1 year, then a $1 absolute discount for a phase of a duration of 3 months would correspond to a price of $2. The resulting price may not be smaller than the minimum price allowed for any new locations Play may launch in."
        }
      },
      "description": "Configuration for any new locations Play may launch in for a single offer phase."
    },
    "RegionalPriceMigrationConfig": {
      "description": "Configuration for a price migration.",
      "id": "RegionalPriceMigrationConfig",
      "type": "object",
      "properties": {
        "oldestAllowedPriceVersionTime": {
          "type": "string",
          "description": "Required. The cutoff time for historical prices that subscribers can remain paying. Subscribers who are on a price that was created before this cutoff time will be migrated to the currently-offered price. These subscribers will receive a notification that they will be paying a different price. Subscribers who do not agree to the new price will have their subscription ended at the next renewal.",
          "format": "google-datetime"
        },
        "regionCode": {
          "description": "Required. Region code this configuration applies to, as defined by ISO 3166-2, e.g. \"US\".",
          "type": "string"
        },
        "priceIncreaseType": {
          "enum": [
            "PRICE_INCREASE_TYPE_UNSPECIFIED",
            "PRICE_INCREASE_TYPE_OPT_IN",
            "PRICE_INCREASE_TYPE_OPT_OUT"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Price increase will be presented to users on an opt-in basis.",
            "Price increase will be presented to users on an opt-out basis."
          ],
          "type": "string",
          "description": "Optional. The behavior the caller wants users to see when there is a price increase during migration. If left unset, the behavior defaults to PRICE_INCREASE_TYPE_OPT_IN. Note that the first opt-out price increase migration for each app must be initiated in Play Console."
        }
      }
    },
    "ConvertRegionPricesRequest": {
      "description": "Request message for ConvertRegionPrices.",
      "properties": {
        "price": {
          "description": "The intital price to convert other regions from. Tax exclusive.",
          "$ref": "Money"
        }
      },
      "type": "object",
      "id": "ConvertRegionPricesRequest"
    },
    "Grant": {
      "properties": {
        "appLevelPermissions": {
          "items": {
            "enumDescriptions": [
              "Unknown or unspecified permission.",
              "View app information (read-only). Deprecated: Try defining a more granular capability. Otherwise, check AppLevelPermission.CAN_VIEW_NON_FINANCIAL_DATA.",
              "View financial data.",
              "Admin (all permissions).",
              "Reply to reviews.",
              "Release to production, exclude devices, and use app signing by Google Play.",
              "Release to testing tracks.",
              "Manage testing tracks and edit tester lists.",
              "Manage store presence.",
              "Edit and delete draft apps.",
              "Manage orders and subscriptions.",
              "Manage policy related pages.",
              "View app information (read-only).",
              "View app quality data such as Vitals, Crashes etc."
            ],
            "enumDeprecated": [
              false,
              true,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false,
              false
            ],
            "enum": [
              "APP_LEVEL_PERMISSION_UNSPECIFIED",
              "CAN_ACCESS_APP",
              "CAN_VIEW_FINANCIAL_DATA",
              "CAN_MANAGE_PERMISSIONS",
              "CAN_REPLY_TO_REVIEWS",
              "CAN_MANAGE_PUBLIC_APKS",
              "CAN_MANAGE_TRACK_APKS",
              "CAN_MANAGE_TRACK_USERS",
              "CAN_MANAGE_PUBLIC_LISTING",
              "CAN_MANAGE_DRAFT_APPS",
              "CAN_MANAGE_ORDERS",
              "CAN_MANAGE_APP_CONTENT",
              "CAN_VIEW_NON_FINANCIAL_DATA",
              "CAN_VIEW_APP_QUALITY"
            ],
            "type": "string"
          },
          "type": "array",
          "description": "The permissions granted to the user for this app."
        },
        "name": {
          "type": "string",
          "description": "Required. Resource name for this grant, following the pattern \"developers/{developer}/users/{email}/grants/{package_name}\". If this grant is for a draft app, the app ID will be used in this resource name instead of the package name."
        },
        "packageName": {
          "type": "string",
          "description": "Immutable. The package name of the app. This will be empty for draft apps."
        }
      },
      "type": "object",
      "description": "An access grant resource.",
      "id": "Grant"
    },
    "SubscriptionCancelSurveyResult": {
      "description": "Information provided by the user when they complete the subscription cancellation flow (cancellation reason survey).",
      "type": "object",
      "properties": {
        "cancelSurveyReason": {
          "format": "int32",
          "description": "The cancellation reason the user chose in the survey. Possible values are: 0. Other 1. I don't use this service enough 2. Technical issues 3. Cost-related reasons 4. I found a better app",
          "type": "integer"
        },
        "userInputCancelReason": {
          "description": "The customized input cancel reason from the user. Only present when cancelReason is 0.",
          "type": "string"
        }
      },
      "id": "SubscriptionCancelSurveyResult"
    },
    "UserCountriesTargeting": {
      "description": "Describes an inclusive/exclusive list of country codes that module targets.",
      "id": "UserCountriesTargeting",
      "properties": {
        "countryCodes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of country codes in the two-letter CLDR territory format."
        },
        "exclude": {
          "description": "Indicates if the list above is exclusive.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Review": {
      "description": "An Android app review.",
      "type": "object",
      "id": "Review",
      "properties": {
        "comments": {
          "type": "array",
          "description": "A repeated field containing comments for the review.",
          "items": {
            "$ref": "Comment"
          }
        },
        "reviewId": {
          "type": "string",
          "description": "Unique identifier for this review."
        },
        "authorName": {
          "type": "string",
          "description": "The name of the user who wrote the review."
        }
      }
    },
    "MultiAbiTargeting": {
      "id": "MultiAbiTargeting",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "MultiAbi"
          },
          "description": "Value of a multi abi."
        },
        "alternatives": {
          "type": "array",
          "items": {
            "$ref": "MultiAbi"
          },
          "description": "Targeting of other sibling directories that were in the Bundle. For main splits this is targeting of other main splits."
        }
      },
      "type": "object",
      "description": "Targeting based on multiple abis."
    },
    "ListDeviceTierConfigsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "deviceTierConfigs": {
          "description": "Device tier configs created by the developer.",
          "items": {
            "$ref": "DeviceTierConfig"
          },
          "type": "array"
        }
      },
      "id": "ListDeviceTierConfigsResponse",
      "type": "object",
      "description": "Response listing existing device tier configs."
    },
    "Testers": {
      "id": "Testers",
      "description": "The testers of an app. The resource for TestersService. Note: while it is possible in the Play Console UI to add testers via email lists, email lists are not supported by this resource.",
      "properties": {
        "googleGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "All testing Google Groups, as email addresses."
        }
      },
      "type": "object"
    },
    "BundlesListResponse": {
      "properties": {
        "bundles": {
          "description": "All app bundles.",
          "type": "array",
          "items": {
            "$ref": "Bundle"
          }
        },
        "kind": {
          "description": "The kind of this response (\"androidpublisher#bundlesListResponse\").",
          "type": "string"
        }
      },
      "id": "BundlesListResponse",
      "description": "Response listing all app bundles.",
      "type": "object"
    },
    "ReviewsReplyResponse": {
      "id": "ReviewsReplyResponse",
      "type": "object",
      "properties": {
        "result": {
          "$ref": "ReviewReplyResult",
          "description": "The result of replying/updating a reply to review."
        }
      },
      "description": "Response on status of replying to a review."
    },
    "DeviceFeatureTargeting": {
      "properties": {
        "requiredFeature": {
          "description": "Feature of the device.",
          "$ref": "DeviceFeature"
        }
      },
      "type": "object",
      "description": "Targeting for a device feature.",
      "id": "DeviceFeatureTargeting"
    },
    "VoidedPurchase": {
      "description": "A VoidedPurchase resource indicates a purchase that was either canceled/refunded/charged-back.",
      "id": "VoidedPurchase",
      "properties": {
        "voidedSource": {
          "format": "int32",
          "description": "The initiator of voided purchase, possible values are: 0. User 1. Developer 2. Google",
          "type": "integer"
        },
        "orderId": {
          "description": "The order id which uniquely identifies a one-time purchase, subscription purchase, or subscription renewal.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This kind represents a voided purchase object in the androidpublisher service."
        },
        "purchaseToken": {
          "description": "The token which uniquely identifies a one-time purchase or subscription. To uniquely identify subscription renewals use order_id (available starting from version 3 of the API).",
          "type": "string"
        },
        "voidedReason": {
          "type": "integer",
          "format": "int32",
          "description": "The reason why the purchase was voided, possible values are: 0. Other 1. Remorse 2. Not_received 3. Defective 4. Accidental_purchase 5. Fraud 6. Friendly_fraud 7. Chargeback"
        },
        "voidedTimeMillis": {
          "type": "string",
          "format": "int64",
          "description": "The time at which the purchase was canceled/refunded/charged-back, in milliseconds since the epoch (Jan 1, 1970)."
        },
        "purchaseTimeMillis": {
          "description": "The time at which the purchase was made, in milliseconds since the epoch (Jan 1, 1970).",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "ExternalTransaction": {
      "type": "object",
      "properties": {
        "transactionState": {
          "description": "Output only. The current state of the transaction.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified transaction state. Not used.",
            "The transaction has been successfully reported to Google.",
            "The transaction has been fully refunded."
          ],
          "enum": [
            "TRANSACTION_STATE_UNSPECIFIED",
            "TRANSACTION_REPORTED",
            "TRANSACTION_CANCELED"
          ],
          "readOnly": true
        },
        "externalTransactionId": {
          "description": "Output only. The id of this transaction. All transaction ids under the same package name must be unique. Set when creating the external transaction.",
          "type": "string",
          "readOnly": true
        },
        "transactionTime": {
          "description": "Required. The time when the transaction was completed.",
          "format": "google-datetime",
          "type": "string"
        },
        "currentTaxAmount": {
          "$ref": "Price",
          "description": "Output only. The current tax amount. This represents the current tax amount including any refunds that may have been applied to this transaction.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time when this transaction was created. This is the time when Google was notified of the transaction.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "recurringTransaction": {
          "description": "This transaction is part of a recurring series of transactions.",
          "$ref": "RecurringExternalTransaction"
        },
        "originalTaxAmount": {
          "description": "Required. The original tax amount. This represents the tax amount originally notified to Google before any refunds were applied.",
          "$ref": "Price"
        },
        "currentPreTaxAmount": {
          "$ref": "Price",
          "readOnly": true,
          "description": "Output only. The current transaction amount before tax. This represents the current pre-tax amount including any refunds that may have been applied to this transaction."
        },
        "oneTimeTransaction": {
          "description": "This is a one-time transaction and not part of a subscription.",
          "$ref": "OneTimeExternalTransaction"
        },
        "originalPreTaxAmount": {
          "$ref": "Price",
          "description": "Required. The original transaction amount before taxes. This represents the pre-tax amount originally notified to Google before any refunds were applied."
        },
        "testPurchase": {
          "description": "Output only. If set, this transaction was a test purchase. Google will not charge for a test transaction.",
          "$ref": "ExternalTransactionTestPurchase",
          "readOnly": true
        },
        "userTaxAddress": {
          "$ref": "ExternalTransactionAddress",
          "description": "Required. User address for tax computation."
        },
        "packageName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of the external transaction. The package name of the application the inapp products were sold (for example, 'com.some.app')."
        }
      },
      "id": "ExternalTransaction",
      "description": "The details of an external transaction."
    },
    "ReviewsReplyRequest": {
      "id": "ReviewsReplyRequest",
      "type": "object",
      "properties": {
        "replyText": {
          "type": "string",
          "description": "The text to set as the reply. Replies of more than approximately 350 characters will be rejected. HTML tags will be stripped."
        }
      },
      "description": "Request to reply to review or update existing reply."
    },
    "RegionalSubscriptionOfferPhaseConfig": {
      "type": "object",
      "description": "Configuration for a single phase of a subscription offer in a single region.",
      "properties": {
        "absoluteDiscount": {
          "$ref": "Money",
          "description": "The absolute amount of money subtracted from the base plan price prorated over the phase duration that the user pays for this offer phase. For example, if the base plan price for this region is $12 for a period of 1 year, then a $1 absolute discount for a phase of a duration of 3 months would correspond to a price of $2. The resulting price may not be smaller than the minimum price allowed for this region."
        },
        "price": {
          "$ref": "Money",
          "description": "The absolute price the user pays for this offer phase. The price must not be smaller than the minimum price allowed for this region."
        },
        "relativeDiscount": {
          "format": "double",
          "description": "The fraction of the base plan price prorated over the phase duration that the user pays for this offer phase. For example, if the base plan price for this region is $12 for a period of 1 year, then a 50% discount for a phase of a duration of 3 months would correspond to a price of $1.50. The discount must be specified as a fraction strictly larger than 0 and strictly smaller than 1. The resulting price will be rounded to the nearest billable unit (e.g. cents for USD). The relative discount is considered invalid if the discounted price ends up being smaller than the minimum price allowed in this region.",
          "type": "number"
        },
        "regionCode": {
          "type": "string",
          "description": "Required. Immutable. The region to which this config applies."
        }
      },
      "id": "RegionalSubscriptionOfferPhaseConfig"
    },
    "ApkDescription": {
      "type": "object",
      "properties": {
        "instantApkMetadata": {
          "description": "Set only for Instant split APKs.",
          "$ref": "SplitApkMetadata"
        },
        "targeting": {
          "$ref": "ApkTargeting",
          "description": "Apk-level targeting."
        },
        "path": {
          "description": "Path of the Apk, will be in the following format: .apk where DownloadId is the ID used to download the apk using GeneratedApks.Download API.",
          "type": "string"
        },
        "standaloneApkMetadata": {
          "description": "Set only for standalone APKs.",
          "$ref": "StandaloneApkMetadata"
        },
        "assetSliceMetadata": {
          "$ref": "SplitApkMetadata",
          "description": "Set only for asset slices."
        },
        "splitApkMetadata": {
          "description": "Set only for Split APKs.",
          "$ref": "SplitApkMetadata"
        }
      },
      "id": "ApkDescription",
      "description": "Description of the created apks."
    },
    "ReviewReplyResult": {
      "description": "The result of replying/updating a reply to review.",
      "id": "ReviewReplyResult",
      "type": "object",
      "properties": {
        "lastEdited": {
          "description": "The time at which the reply took effect.",
          "$ref": "Timestamp"
        },
        "replyText": {
          "description": "The reply text that was applied.",
          "type": "string"
        }
      }
    },
    "TestPurchase": {
      "description": "Whether this subscription purchase is a test purchase.",
      "type": "object",
      "properties": {},
      "id": "TestPurchase"
    },
    "ApkTargeting": {
      "id": "ApkTargeting",
      "type": "object",
      "properties": {
        "screenDensityTargeting": {
          "description": "The screen density that this apk supports.",
          "$ref": "ScreenDensityTargeting"
        },
        "abiTargeting": {
          "$ref": "AbiTargeting",
          "description": "The abi that the apk targets"
        },
        "multiAbiTargeting": {
          "$ref": "MultiAbiTargeting",
          "description": "Multi-api-level targeting."
        },
        "textureCompressionFormatTargeting": {
          "description": "Texture-compression-format-level targeting",
          "$ref": "TextureCompressionFormatTargeting"
        },
        "languageTargeting": {
          "description": "The language that the apk targets",
          "$ref": "LanguageTargeting"
        },
        "sdkVersionTargeting": {
          "$ref": "SdkVersionTargeting",
          "description": "The sdk version that the apk targets"
        }
      },
      "description": "Represents a set of apk-level targetings."
    },
    "ReviewsListResponse": {
      "properties": {
        "tokenPagination": {
          "$ref": "TokenPagination",
          "description": "Pagination token, to handle a number of products that is over one page."
        },
        "reviews": {
          "type": "array",
          "description": "List of reviews.",
          "items": {
            "$ref": "Review"
          }
        },
        "pageInfo": {
          "$ref": "PageInfo",
          "description": "Information about the current page."
        }
      },
      "type": "object",
      "description": "Response listing reviews.",
      "id": "ReviewsListResponse"
    },
    "ModuleMetadata": {
      "type": "object",
      "id": "ModuleMetadata",
      "description": "Metadata of a module.",
      "properties": {
        "moduleType": {
          "description": "Indicates the type of this feature module.",
          "type": "string",
          "enum": [
            "UNKNOWN_MODULE_TYPE",
            "FEATURE_MODULE"
          ],
          "enumDescriptions": [
            "Unknown feature module.",
            "Regular feature module."
          ]
        },
        "dependencies": {
          "items": {
            "type": "string"
          },
          "description": "Names of the modules that this module directly depends on. Each module implicitly depends on the base module.",
          "type": "array"
        },
        "deliveryType": {
          "type": "string",
          "description": "Indicates the delivery type (e.g. on-demand) of the module.",
          "enum": [
            "UNKNOWN_DELIVERY_TYPE",
            "INSTALL_TIME",
            "ON_DEMAND",
            "FAST_FOLLOW"
          ],
          "enumDescriptions": [
            "Unspecified delivery type.",
            "This module will always be downloaded as part of the initial install of the app.",
            "This module is requested on-demand, which means it will not be part of the initial install, and will only be sent when requested by the client.",
            "This module will be downloaded immediately after initial install finishes. The app can be opened before these modules are downloaded."
          ]
        },
        "name": {
          "type": "string",
          "description": "Module name."
        },
        "targeting": {
          "description": "The targeting that makes a conditional module installed. Relevant only for Split APKs.",
          "$ref": "ModuleTargeting"
        }
      }
    },
    "SdkVersion": {
      "properties": {
        "min": {
          "type": "integer",
          "format": "int32",
          "description": "Inclusive minimum value of an sdk version."
        }
      },
      "id": "SdkVersion",
      "description": "Represents an sdk version.",
      "type": "object"
    },
    "DeveloperInitiatedCancellation": {
      "properties": {},
      "type": "object",
      "id": "DeveloperInitiatedCancellation",
      "description": "Information specific to cancellations initiated by developers."
    },
    "DeviceTierConfig": {
      "type": "object",
      "properties": {
        "deviceTierSet": {
          "description": "Definition of the set of device tiers for the app.",
          "$ref": "DeviceTierSet"
        },
        "deviceTierConfigId": {
          "format": "int64",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The device tier config ID."
        },
        "userCountrySets": {
          "type": "array",
          "description": "Definition of user country sets for the app.",
          "items": {
            "$ref": "UserCountrySet"
          }
        },
        "deviceGroups": {
          "description": "Definition of device groups for the app.",
          "type": "array",
          "items": {
            "$ref": "DeviceGroup"
          }
        }
      },
      "id": "DeviceTierConfig",
      "description": "Configuration describing device targeting criteria for the content of an app."
    },
    "UserComment": {
      "description": "User entry from conversation between user and developer.",
      "id": "UserComment",
      "type": "object",
      "properties": {
        "originalText": {
          "type": "string",
          "description": "Untranslated text of the review, where the review was translated. If the review was not translated this is left blank."
        },
        "starRating": {
          "format": "int32",
          "type": "integer",
          "description": "The star rating associated with the review, from 1 to 5."
        },
        "lastModified": {
          "description": "The last time at which this comment was updated.",
          "$ref": "Timestamp"
        },
        "thumbsUpCount": {
          "description": "Number of users who have given this review a thumbs up.",
          "format": "int32",
          "type": "integer"
        },
        "text": {
          "description": "The content of the comment, i.e. review body. In some cases users have been able to write a review with separate title and body; in those cases the title and body are concatenated and separated by a tab character.",
          "type": "string"
        },
        "deviceMetadata": {
          "description": "Information about the characteristics of the user's device.",
          "$ref": "DeviceMetadata"
        },
        "device": {
          "type": "string",
          "description": "Codename for the reviewer's device, e.g. klte, flounder. May be absent."
        },
        "appVersionCode": {
          "description": "Integer version code of the app as installed at the time the review was written. May be absent.",
          "format": "int32",
          "type": "integer"
        },
        "thumbsDownCount": {
          "description": "Number of users who have given this review a thumbs down.",
          "type": "integer",
          "format": "int32"
        },
        "androidOsVersion": {
          "format": "int32",
          "description": "Integer Android SDK version of the user's device at the time the review was written, e.g. 23 is Marshmallow. May be absent.",
          "type": "integer"
        },
        "appVersionName": {
          "type": "string",
          "description": "String version name of the app as installed at the time the review was written. May be absent."
        },
        "reviewerLanguage": {
          "type": "string",
          "description": "Language code for the reviewer. This is taken from the device settings so is not guaranteed to match the language the review is written in. May be absent."
        }
      }
    },
    "TargetingRuleScope": {
      "type": "object",
      "description": "Defines the scope of subscriptions which a targeting rule can match to target offers to users based on past or current entitlement.",
      "properties": {
        "specificSubscriptionInApp": {
          "description": "The scope of the current targeting rule is the subscription with the specified subscription ID. Must be a subscription within the same parent app.",
          "type": "string"
        }
      },
      "id": "TargetingRuleScope"
    },
    "GeneratedApksPerSigningKey": {
      "properties": {
        "generatedUniversalApk": {
          "description": "Generated universal APK, signed with a key corresponding to certificate_sha256_hash. This field is not set if no universal APK was generated for this signing key.",
          "$ref": "GeneratedUniversalApk"
        },
        "generatedSplitApks": {
          "type": "array",
          "items": {
            "$ref": "GeneratedSplitApk"
          },
          "description": "List of generated split APKs, signed with a key corresponding to certificate_sha256_hash."
        },
        "targetingInfo": {
          "$ref": "TargetingInfo",
          "description": "Contains targeting information about the generated apks."
        },
        "generatedAssetPackSlices": {
          "type": "array",
          "description": "List of asset pack slices which will be served for this app bundle, signed with a key corresponding to certificate_sha256_hash.",
          "items": {
            "$ref": "GeneratedAssetPackSlice"
          }
        },
        "certificateSha256Hash": {
          "description": "SHA256 hash of the APK signing public key certificate.",
          "type": "string"
        },
        "generatedStandaloneApks": {
          "type": "array",
          "items": {
            "$ref": "GeneratedStandaloneApk"
          },
          "description": "List of generated standalone APKs, signed with a key corresponding to certificate_sha256_hash."
        }
      },
      "id": "GeneratedApksPerSigningKey",
      "description": "Download metadata for split, standalone and universal APKs, as well as asset pack slices, signed with a given key.",
      "type": "object"
    },
    "DeobfuscationFile": {
      "id": "DeobfuscationFile",
      "properties": {
        "symbolType": {
          "type": "string",
          "enum": [
            "deobfuscationFileTypeUnspecified",
            "proguard",
            "nativeCode"
          ],
          "description": "The type of the deobfuscation file.",
          "enumDescriptions": [
            "Unspecified deobfuscation file type.",
            "Proguard deobfuscation file type.",
            "Native debugging symbols file type."
          ]
        }
      },
      "description": "Represents a deobfuscation file.",
      "type": "object"
    },
    "UserCountrySet": {
      "id": "UserCountrySet",
      "description": "A set of user countries. A country set determines what variation of app content gets served to a specific location.",
      "type": "object",
      "properties": {
        "countryCodes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of country codes representing countries. A Country code is represented in ISO 3166 alpha-2 format. For Example:- \"IT\" for Italy, \"GE\" for Georgia."
        },
        "name": {
          "type": "string",
          "description": "Country set name."
        }
      }
    },
    "SubscriptionPurchasesDeferRequest": {
      "id": "SubscriptionPurchasesDeferRequest",
      "properties": {
        "deferralInfo": {
          "description": "The information about the new desired expiry time for the subscription.",
          "$ref": "SubscriptionDeferralInfo"
        }
      },
      "description": "Request for the purchases.subscriptions.defer API.",
      "type": "object"
    },
    "DeactivateBasePlanRequest": {
      "id": "DeactivateBasePlanRequest",
      "properties": {},
      "type": "object",
      "description": "Request message for DeactivateBasePlan."
    },
    "Apk": {
      "type": "object",
      "description": "Information about an APK. The resource for ApksService.",
      "properties": {
        "binary": {
          "$ref": "ApkBinary",
          "description": "Information about the binary payload of this APK."
        },
        "versionCode": {
          "description": "The version code of the APK, as specified in the manifest file.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Apk"
    },
    "MigrateBasePlanPricesRequest": {
      "properties": {
        "regionalPriceMigrations": {
          "type": "array",
          "description": "Required. The regional prices to update.",
          "items": {
            "$ref": "RegionalPriceMigrationConfig"
          }
        },
        "regionsVersion": {
          "description": "Required. The version of the available regions being used for the regional_price_migrations.",
          "$ref": "RegionsVersion"
        }
      },
      "id": "MigrateBasePlanPricesRequest",
      "description": "Request message for MigrateBasePlanPrices.",
      "type": "object"
    },
    "ApksAddExternallyHostedRequest": {
      "properties": {
        "externallyHostedApk": {
          "description": "The definition of the externally-hosted APK and where it is located.",
          "$ref": "ExternallyHostedApk"
        }
      },
      "description": "Request to create a new externally hosted APK.",
      "type": "object",
      "id": "ApksAddExternallyHostedRequest"
    },
    "GeneratedStandaloneApk": {
      "description": "Download metadata for a standalone APK.",
      "id": "GeneratedStandaloneApk",
      "properties": {
        "variantId": {
          "type": "integer",
          "format": "int32",
          "description": "ID of the generated variant."
        },
        "downloadId": {
          "type": "string",
          "description": "Download ID, which uniquely identifies the APK to download. Should be supplied to `generatedapks.download` method."
        }
      },
      "type": "object"
    },
    "TokenPagination": {
      "properties": {
        "previousPageToken": {
          "type": "string"
        },
        "nextPageToken": {
          "description": "Tokens to pass to the standard list field 'page_token'. Whenever available, tokens are preferred over manipulating start_index.",
          "type": "string"
        }
      },
      "description": "Pagination information returned by a List operation when token pagination is enabled. List operations that supports paging return only one \"page\" of results. This protocol buffer message describes the page that has been returned. When using token pagination, clients should use the next/previous token to get another page of the result. The presence or absence of next/previous token indicates whether a next/previous page is available and provides a mean of accessing this page. ListRequest.page_token should be set to either next_page_token or previous_page_token to access another page.",
      "type": "object",
      "id": "TokenPagination"
    },
    "ExternalSubscription": {
      "type": "object",
      "description": "Details of an external subscription.",
      "properties": {
        "subscriptionType": {
          "enumDescriptions": [
            "Unspecified, do not use.",
            "This is a recurring subscription where the user is charged every billing cycle.",
            "This is a prepaid subscription where the user pays up front."
          ],
          "enum": [
            "SUBSCRIPTION_TYPE_UNSPECIFIED",
            "RECURRING",
            "PREPAID"
          ],
          "description": "Required. The type of the external subscription.",
          "type": "string"
        }
      },
      "id": "ExternalSubscription"
    },
    "VoidedPurchasesListResponse": {
      "id": "VoidedPurchasesListResponse",
      "properties": {
        "tokenPagination": {
          "description": "Pagination information for token pagination.",
          "$ref": "TokenPagination"
        },
        "voidedPurchases": {
          "items": {
            "$ref": "VoidedPurchase"
          },
          "type": "array"
        },
        "pageInfo": {
          "$ref": "PageInfo",
          "description": "General pagination information."
        }
      },
      "description": "Response for the voidedpurchases.list API.",
      "type": "object"
    },
    "RegionalTaxRateInfo": {
      "description": "Specified details about taxation in a given geographical region.",
      "id": "RegionalTaxRateInfo",
      "type": "object",
      "properties": {
        "taxTier": {
          "enum": [
            "TAX_TIER_UNSPECIFIED",
            "TAX_TIER_BOOKS_1",
            "TAX_TIER_NEWS_1",
            "TAX_TIER_NEWS_2",
            "TAX_TIER_MUSIC_OR_AUDIO_1",
            "TAX_TIER_LIVE_OR_BROADCAST_1"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "Tax tier to specify reduced tax rate. Developers who sell digital news, magazines, newspapers, books, or audiobooks in various regions may be eligible for reduced tax rates. [Learn more](https://support.google.com/googleplay/android-developer/answer/10463498).",
          "type": "string"
        },
        "eligibleForStreamingServiceTaxRate": {
          "type": "boolean",
          "description": "You must tell us if your app contains streaming products to correctly charge US state and local sales tax. Field only supported in United States."
        },
        "streamingTaxType": {
          "enum": [
            "STREAMING_TAX_TYPE_UNSPECIFIED",
            "STREAMING_TAX_TYPE_TELCO_VIDEO_RENTAL",
            "STREAMING_TAX_TYPE_TELCO_VIDEO_SALES",
            "STREAMING_TAX_TYPE_TELCO_VIDEO_MULTI_CHANNEL",
            "STREAMING_TAX_TYPE_TELCO_AUDIO_RENTAL",
            "STREAMING_TAX_TYPE_TELCO_AUDIO_SALES",
            "STREAMING_TAX_TYPE_TELCO_AUDIO_MULTI_CHANNEL"
          ],
          "type": "string",
          "description": "To collect communications or amusement taxes in the United States, choose the appropriate tax category. [Learn more](https://support.google.com/googleplay/android-developer/answer/10463498#streaming_tax).",
          "enumDescriptions": [
            "No telecommunications tax collected.",
            "US-specific telecommunications tax tier for video streaming, on demand, rentals / subscriptions / pay-per-view.",
            "US-specific telecommunications tax tier for video streaming of pre-recorded content like movies, tv shows.",
            "US-specific telecommunications tax tier for video streaming of multi-channel programming.",
            "US-specific telecommunications tax tier for audio streaming, rental / subscription.",
            "US-specific telecommunications tax tier for audio streaming, sale / permanent download.",
            "US-specific telecommunications tax tier for multi channel audio streaming like radio."
          ]
        }
      }
    },
    "ProductPurchase": {
      "type": "object",
      "properties": {
        "purchaseType": {
          "description": "The type of purchase of the inapp product. This field is only set if this purchase was not made using the standard in-app billing flow. Possible values are: 0. Test (i.e. purchased from a license testing account) 1. Promo (i.e. purchased using a promo code) 2. Rewarded (i.e. from watching a video ad instead of paying)",
          "type": "integer",
          "format": "int32"
        },
        "developerPayload": {
          "description": "A developer-specified string that contains supplemental information about an order.",
          "type": "string"
        },
        "purchaseState": {
          "type": "integer",
          "format": "int32",
          "description": "The purchase state of the order. Possible values are: 0. Purchased 1. Canceled 2. Pending"
        },
        "purchaseToken": {
          "type": "string",
          "description": "The purchase token generated to identify this purchase. May not be present."
        },
        "quantity": {
          "description": "The quantity associated with the purchase of the inapp product. If not present, the quantity is 1.",
          "type": "integer",
          "format": "int32"
        },
        "purchaseTimeMillis": {
          "type": "string",
          "description": "The time the product was purchased, in milliseconds since the epoch (Jan 1, 1970).",
          "format": "int64"
        },
        "productId": {
          "type": "string",
          "description": "The inapp product SKU. May not be present."
        },
        "acknowledgementState": {
          "description": "The acknowledgement state of the inapp product. Possible values are: 0. Yet to be acknowledged 1. Acknowledged",
          "format": "int32",
          "type": "integer"
        },
        "orderId": {
          "description": "The order id associated with the purchase of the inapp product.",
          "type": "string"
        },
        "regionCode": {
          "description": "ISO 3166-1 alpha-2 billing region code of the user at the time the product was granted.",
          "type": "string"
        },
        "obfuscatedExternalProfileId": {
          "type": "string",
          "description": "An obfuscated version of the id that is uniquely associated with the user's profile in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedprofileid when the purchase was made."
        },
        "consumptionState": {
          "type": "integer",
          "format": "int32",
          "description": "The consumption state of the inapp product. Possible values are: 0. Yet to be consumed 1. Consumed"
        },
        "kind": {
          "type": "string",
          "description": "This kind represents an inappPurchase object in the androidpublisher service."
        },
        "obfuscatedExternalAccountId": {
          "description": "An obfuscated version of the id that is uniquely associated with the user's account in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedaccountid when the purchase was made.",
          "type": "string"
        }
      },
      "description": "A ProductPurchase resource indicates the status of a user's inapp product purchase.",
      "id": "ProductPurchase"
    },
    "SdkVersionTargeting": {
      "description": "Targeting based on sdk version.",
      "type": "object",
      "properties": {
        "alternatives": {
          "type": "array",
          "description": "Targeting of other sibling directories that were in the Bundle. For main splits this is targeting of other main splits.",
          "items": {
            "$ref": "SdkVersion"
          }
        },
        "value": {
          "type": "array",
          "description": "Value of an sdk version.",
          "items": {
            "$ref": "SdkVersion"
          }
        }
      },
      "id": "SdkVersionTargeting"
    },
    "FullRefund": {
      "id": "FullRefund",
      "type": "object",
      "description": "A full refund of the remaining amount of a transaction.",
      "properties": {}
    },
    "ListUsersResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token to pass to subsequent calls in order to retrieve subsequent results. This will not be set if there are no more results to return.",
          "type": "string"
        },
        "users": {
          "type": "array",
          "description": "The resulting users.",
          "items": {
            "$ref": "User"
          }
        }
      },
      "id": "ListUsersResponse",
      "description": "A response containing one or more users with access to an account.",
      "type": "object"
    },
    "Subscription": {
      "id": "Subscription",
      "description": "A single subscription for an app.",
      "properties": {
        "archived": {
          "description": "Output only. Whether this subscription is archived. Archived subscriptions are not available to any subscriber any longer, cannot be updated, and are not returned in list requests unless the show archived flag is passed in.",
          "readOnly": true,
          "type": "boolean"
        },
        "packageName": {
          "type": "string",
          "description": "Immutable. Package name of the parent app."
        },
        "listings": {
          "description": "Required. List of localized listings for this subscription. Must contain at least an entry for the default language of the parent app.",
          "items": {
            "$ref": "SubscriptionListing"
          },
          "type": "array"
        },
        "productId": {
          "type": "string",
          "description": "Immutable. Unique product ID of the product. Unique within the parent app. Product IDs must be composed of lower-case letters (a-z), numbers (0-9), underscores (_) and dots (.). It must start with a lower-case letter or number, and be between 1 and 40 (inclusive) characters in length."
        },
        "basePlans": {
          "items": {
            "$ref": "BasePlan"
          },
          "description": "The set of base plans for this subscription. Represents the prices and duration of the subscription if no other offers apply.",
          "type": "array"
        },
        "taxAndComplianceSettings": {
          "$ref": "SubscriptionTaxAndComplianceSettings",
          "description": "Details about taxes and legal compliance."
        }
      },
      "type": "object"
    },
    "SubscriptionItemPriceChangeDetails": {
      "id": "SubscriptionItemPriceChangeDetails",
      "description": "Price change related information of a subscription item.",
      "type": "object",
      "properties": {
        "priceChangeState": {
          "type": "string",
          "enum": [
            "PRICE_CHANGE_STATE_UNSPECIFIED",
            "OUTSTANDING",
            "CONFIRMED",
            "APPLIED"
          ],
          "enumDescriptions": [
            "Price change state unspecified. This value should not be used.",
            "Waiting for the user to agree for the price change.",
            "The price change is confirmed to happen for the user.",
            "The price change is applied, i.e. the user has started being charged the new price."
          ],
          "description": "State the price change is currently in."
        },
        "newPrice": {
          "description": "New recurring price for the subscription item.",
          "$ref": "Money"
        },
        "priceChangeMode": {
          "enum": [
            "PRICE_CHANGE_MODE_UNSPECIFIED",
            "PRICE_DECREASE",
            "PRICE_INCREASE",
            "OPT_OUT_PRICE_INCREASE"
          ],
          "description": "Price change mode specifies how the subscription item price is changing.",
          "type": "string",
          "enumDescriptions": [
            "Price change mode unspecified. This value should never be set.",
            "If the subscription price is decreasing.",
            "If the subscription price is increasing and the user needs to accept it.",
            "If the subscription price is increasing with opt out mode."
          ]
        },
        "expectedNewPriceChargeTime": {
          "type": "string",
          "description": "The renewal time at which the price change will become effective for the user. This is subject to change(to a future time) due to cases where the renewal time shifts like pause.",
          "format": "google-datetime"
        }
      }
    },
    "SplitApkMetadata": {
      "description": "Holds data specific to Split APKs.",
      "id": "SplitApkMetadata",
      "type": "object",
      "properties": {
        "isMasterSplit": {
          "description": "Indicates whether this APK is the main split of the module.",
          "type": "boolean"
        },
        "splitId": {
          "description": "Id of the split.",
          "type": "string"
        }
      }
    },
    "ManagedProductTaxAndComplianceSettings": {
      "properties": {
        "isTokenizedDigitalAsset": {
          "description": "Whether this in-app product is declared as a product representing a tokenized digital asset.",
          "type": "boolean"
        },
        "taxRateInfoByRegionCode": {
          "description": "A mapping from region code to tax rate details. The keys are region codes as defined by Unicode's \"CLDR\".",
          "additionalProperties": {
            "$ref": "RegionalTaxRateInfo"
          },
          "type": "object"
        },
        "eeaWithdrawalRightType": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "WITHDRAWAL_RIGHT_TYPE_UNSPECIFIED",
            "WITHDRAWAL_RIGHT_DIGITAL_CONTENT",
            "WITHDRAWAL_RIGHT_SERVICE"
          ],
          "description": "Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the [Help Center article](https://support.google.com/googleplay/android-developer/answer/10463498) for more information."
        }
      },
      "description": "Details about taxation and legal compliance for managed products.",
      "type": "object",
      "id": "ManagedProductTaxAndComplianceSettings"
    },
    "SubscriptionPurchaseLineItem": {
      "properties": {
        "prepaidPlan": {
          "description": "The item is prepaid.",
          "$ref": "PrepaidPlan"
        },
        "offerDetails": {
          "description": "The offer details for this item.",
          "$ref": "OfferDetails"
        },
        "deferredItemReplacement": {
          "$ref": "DeferredItemReplacement",
          "description": "Information for deferred item replacement."
        },
        "autoRenewingPlan": {
          "description": "The item is auto renewing.",
          "$ref": "AutoRenewingPlan"
        },
        "expiryTime": {
          "description": "Time at which the subscription expired or will expire unless the access is extended (ex. renews).",
          "format": "google-datetime",
          "type": "string"
        },
        "productId": {
          "description": "The purchased product ID (for example, 'monthly001').",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Item-level info for a subscription purchase.",
      "id": "SubscriptionPurchaseLineItem"
    },
    "ImagesDeleteAllResponse": {
      "properties": {
        "deleted": {
          "items": {
            "$ref": "Image"
          },
          "type": "array",
          "description": "The deleted images."
        }
      },
      "type": "object",
      "id": "ImagesDeleteAllResponse",
      "description": "Response for deleting all images."
    },
    "ProductPurchasesAcknowledgeRequest": {
      "properties": {
        "developerPayload": {
          "type": "string",
          "description": "Payload to attach to the purchase."
        }
      },
      "description": "Request for the product.purchases.acknowledge API.",
      "id": "ProductPurchasesAcknowledgeRequest",
      "type": "object"
    },
    "ExternalTransactionAddress": {
      "properties": {
        "regionCode": {
          "type": "string",
          "description": "Required. Two letter region code based on ISO-3166-1 Alpha-2 (UN region codes)."
        }
      },
      "type": "object",
      "id": "ExternalTransactionAddress",
      "description": "User's address for the external transaction."
    },
    "TrackCountryAvailability": {
      "description": "Resource for per-track country availability information.",
      "properties": {
        "syncWithProduction": {
          "description": "Whether this track's availability is synced with the default production track. See https://support.google.com/googleplay/android-developer/answer/7550024 for more information on syncing country availability with production. Note that if this is true, the returned \"countries\" and \"rest_of_world\" fields will reflect the values for the default production track.",
          "type": "boolean"
        },
        "countries": {
          "description": "A list of one or more countries where artifacts in this track are available. This list includes all countries that are targeted by the track, even if only specific carriers are targeted in that country.",
          "items": {
            "$ref": "TrackTargetedCountry"
          },
          "type": "array"
        },
        "restOfWorld": {
          "type": "boolean",
          "description": "Whether artifacts in this track are available to \"rest of the world\" countries."
        }
      },
      "type": "object",
      "id": "TrackCountryAvailability"
    },
    "MigrateBasePlanPricesResponse": {
      "type": "object",
      "id": "MigrateBasePlanPricesResponse",
      "description": "Response message for MigrateBasePlanPrices.",
      "properties": {}
    },
    "SubscriptionPriceChange": {
      "description": "Contains the price change information for a subscription that can be used to control the user journey for the price change in the app. This can be in the form of seeking confirmation from the user or tailoring the experience for a successful conversion.",
      "id": "SubscriptionPriceChange",
      "type": "object",
      "properties": {
        "newPrice": {
          "description": "The new price the subscription will renew with if the price change is accepted by the user.",
          "$ref": "Price"
        },
        "state": {
          "format": "int32",
          "type": "integer",
          "description": "The current state of the price change. Possible values are: 0. Outstanding: State for a pending price change waiting for the user to agree. In this state, you can optionally seek confirmation from the user using the In-App API. 1. Accepted: State for an accepted price change that the subscription will renew with unless it's canceled. The price change takes effect on a future date when the subscription renews. Note that the change might not occur when the subscription is renewed next."
        }
      }
    },
    "GeneratedAssetPackSlice": {
      "type": "object",
      "properties": {
        "sliceId": {
          "type": "string",
          "description": "Asset slice ID."
        },
        "version": {
          "type": "string",
          "format": "int64",
          "description": "Asset module version."
        },
        "downloadId": {
          "type": "string",
          "description": "Download ID, which uniquely identifies the APK to download. Should be supplied to `generatedapks.download` method."
        },
        "moduleName": {
          "type": "string",
          "description": "Name of the module that this asset slice belongs to."
        }
      },
      "id": "GeneratedAssetPackSlice",
      "description": "Download metadata for an asset pack slice."
    },
    "DeviceSpec": {
      "id": "DeviceSpec",
      "type": "object",
      "description": "The device spec used to generate a system APK.",
      "properties": {
        "supportedAbis": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Supported ABI architectures in the order of preference. The values should be the string as reported by the platform, e.g. \"armeabi-v7a\", \"x86_64\"."
        },
        "screenDensity": {
          "format": "uint32",
          "type": "integer",
          "description": "Screen dpi."
        },
        "supportedLocales": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "All installed locales represented as BCP-47 strings, e.g. \"en-US\"."
        }
      }
    },
    "UsesPermission": {
      "properties": {
        "name": {
          "description": "The name of the permission requested.",
          "type": "string"
        },
        "maxSdkVersion": {
          "format": "int32",
          "description": "Optionally, the maximum SDK version for which the permission is required.",
          "type": "integer"
        }
      },
      "description": "A permission used by this APK.",
      "id": "UsesPermission",
      "type": "object"
    },
    "Comment": {
      "description": "An entry of conversation between user and developer.",
      "type": "object",
      "id": "Comment",
      "properties": {
        "developerComment": {
          "description": "A comment from a developer.",
          "$ref": "DeveloperComment"
        },
        "userComment": {
          "description": "A comment from a user.",
          "$ref": "UserComment"
        }
      }
    },
    "TextureCompressionFormatTargeting": {
      "id": "TextureCompressionFormatTargeting",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "TextureCompressionFormat"
          },
          "description": "The list of targeted TCFs. Should not be empty."
        },
        "alternatives": {
          "type": "array",
          "items": {
            "$ref": "TextureCompressionFormat"
          },
          "description": "List of alternative TCFs (TCFs targeted by the sibling splits)."
        }
      },
      "description": "Targeting by a texture compression format."
    },
    "AutoRenewingPlan": {
      "description": "Information related to an auto renewing plan.",
      "id": "AutoRenewingPlan",
      "type": "object",
      "properties": {
        "priceChangeDetails": {
          "$ref": "SubscriptionItemPriceChangeDetails",
          "description": "The information of the last price change for the item since subscription signup."
        },
        "autoRenewEnabled": {
          "type": "boolean",
          "description": "If the subscription is currently set to auto-renew, e.g. the user has not canceled the subscription"
        }
      }
    },
    "SubscriptionPurchase": {
      "properties": {
        "cancelSurveyResult": {
          "description": "Information provided by the user when they complete the subscription cancellation flow (cancellation reason survey).",
          "$ref": "SubscriptionCancelSurveyResult"
        },
        "obfuscatedExternalProfileId": {
          "description": "An obfuscated version of the id that is uniquely associated with the user's profile in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedprofileid when the purchase was made.",
          "type": "string"
        },
        "promotionType": {
          "type": "integer",
          "description": "The type of promotion applied on this purchase. This field is only set if a promotion is applied when the subscription was purchased. Possible values are: 0. One time code 1. Vanity code",
          "format": "int32"
        },
        "externalAccountId": {
          "description": "User account identifier in the third-party service. Only present if account linking happened as part of the subscription purchase flow.",
          "type": "string"
        },
        "profileName": {
          "description": "The profile name of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'.",
          "type": "string"
        },
        "expiryTimeMillis": {
          "format": "int64",
          "type": "string",
          "description": "Time at which the subscription will expire, in milliseconds since the Epoch."
        },
        "startTimeMillis": {
          "format": "int64",
          "type": "string",
          "description": "Time at which the subscription was granted, in milliseconds since the Epoch."
        },
        "linkedPurchaseToken": {
          "type": "string",
          "description": "The purchase token of the originating purchase if this subscription is one of the following: 0. Re-signup of a canceled but non-lapsed subscription 1. Upgrade/downgrade from a previous subscription For example, suppose a user originally signs up and you receive purchase token X, then the user cancels and goes through the resignup flow (before their subscription lapses) and you receive purchase token Y, and finally the user upgrades their subscription and you receive purchase token Z. If you call this API with purchase token Z, this field will be set to Y. If you call this API with purchase token Y, this field will be set to X. If you call this API with purchase token X, this field will not be set."
        },
        "promotionCode": {
          "type": "string",
          "description": "The promotion code applied on this purchase. This field is only set if a vanity code promotion is applied when the subscription was purchased."
        },
        "obfuscatedExternalAccountId": {
          "type": "string",
          "description": "An obfuscated version of the id that is uniquely associated with the user's account in your app. Present for the following purchases: * If account linking happened as part of the subscription purchase flow. * It was specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedaccountid when the purchase was made."
        },
        "autoRenewing": {
          "description": "Whether the subscription will automatically be renewed when it reaches its current expiry time.",
          "type": "boolean"
        },
        "paymentState": {
          "description": "The payment state of the subscription. Possible values are: 0. Payment pending 1. Payment received 2. Free trial 3. Pending deferred upgrade/downgrade Not present for canceled, expired subscriptions.",
          "type": "integer",
          "format": "int32"
        },
        "familyName": {
          "description": "The family name of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'.",
          "type": "string"
        },
        "orderId": {
          "description": "The order id of the latest recurring order associated with the purchase of the subscription. If the subscription was canceled because payment was declined, this will be the order id from the payment declined order.",
          "type": "string"
        },
        "developerPayload": {
          "description": "A developer-specified string that contains supplemental information about an order.",
          "type": "string"
        },
        "priceChange": {
          "$ref": "SubscriptionPriceChange",
          "description": "The latest price change information available. This is present only when there is an upcoming price change for the subscription yet to be applied. Once the subscription renews with the new price or the subscription is canceled, no price change information will be returned."
        },
        "givenName": {
          "description": "The given name of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'.",
          "type": "string"
        },
        "profileId": {
          "type": "string",
          "description": "The Google profile id of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'."
        },
        "kind": {
          "type": "string",
          "description": "This kind represents a subscriptionPurchase object in the androidpublisher service."
        },
        "emailAddress": {
          "description": "The email address of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'.",
          "type": "string"
        },
        "priceAmountMicros": {
          "format": "int64",
          "description": "Price of the subscription, For tax exclusive countries, the price doesn't include tax. For tax inclusive countries, the price includes tax. Price is expressed in micro-units, where 1,000,000 micro-units represents one unit of the currency. For example, if the subscription price is €1.99, price_amount_micros is 1990000.",
          "type": "string"
        },
        "cancelReason": {
          "type": "integer",
          "format": "int32",
          "description": "The reason why a subscription was canceled or is not auto-renewing. Possible values are: 0. User canceled the subscription 1. Subscription was canceled by the system, for example because of a billing problem 2. Subscription was replaced with a new subscription 3. Subscription was canceled by the developer"
        },
        "purchaseType": {
          "description": "The type of purchase of the subscription. This field is only set if this purchase was not made using the standard in-app billing flow. Possible values are: 0. Test (i.e. purchased from a license testing account) 1. Promo (i.e. purchased using a promo code)",
          "format": "int32",
          "type": "integer"
        },
        "priceCurrencyCode": {
          "type": "string",
          "description": "ISO 4217 currency code for the subscription price. For example, if the price is specified in British pounds sterling, price_currency_code is \"GBP\"."
        },
        "introductoryPriceInfo": {
          "$ref": "IntroductoryPriceInfo",
          "description": "Introductory price information of the subscription. This is only present when the subscription was purchased with an introductory price. This field does not indicate the subscription is currently in introductory price period."
        },
        "userCancellationTimeMillis": {
          "type": "string",
          "format": "int64",
          "description": "The time at which the subscription was canceled by the user, in milliseconds since the epoch. Only present if cancelReason is 0."
        },
        "autoResumeTimeMillis": {
          "description": "Time at which the subscription will be automatically resumed, in milliseconds since the Epoch. Only present if the user has requested to pause the subscription.",
          "type": "string",
          "format": "int64"
        },
        "countryCode": {
          "description": "ISO 3166-1 alpha-2 billing country/region code of the user at the time the subscription was granted.",
          "type": "string"
        },
        "acknowledgementState": {
          "format": "int32",
          "type": "integer",
          "description": "The acknowledgement state of the subscription product. Possible values are: 0. Yet to be acknowledged 1. Acknowledged"
        }
      },
      "type": "object",
      "id": "SubscriptionPurchase",
      "description": "A SubscriptionPurchase resource indicates the status of a user's subscription purchase."
    },
    "InAppProduct": {
      "id": "InAppProduct",
      "description": "An in-app product. The resource for InappproductsService.",
      "type": "object",
      "properties": {
        "gracePeriod": {
          "description": "Grace period of the subscription, specified in ISO 8601 format. Allows developers to give their subscribers a grace period when the payment for the new recurrence period is declined. Acceptable values are P0D (zero days), P3D (three days), P7D (seven days), P14D (14 days), and P30D (30 days).",
          "type": "string"
        },
        "managedProductTaxesAndComplianceSettings": {
          "description": "Details about taxes and legal compliance. Only applicable to managed products.",
          "$ref": "ManagedProductTaxAndComplianceSettings"
        },
        "trialPeriod": {
          "type": "string",
          "description": "Trial period, specified in ISO 8601 format. Acceptable values are anything between P7D (seven days) and P999D (999 days)."
        },
        "defaultPrice": {
          "$ref": "Price",
          "description": "Default price. Cannot be zero, as in-app products are never free. Always in the developer's Checkout merchant currency."
        },
        "subscriptionPeriod": {
          "type": "string",
          "description": "Subscription period, specified in ISO 8601 format. Acceptable values are P1W (one week), P1M (one month), P3M (three months), P6M (six months), and P1Y (one year)."
        },
        "subscriptionTaxesAndComplianceSettings": {
          "description": "Details about taxes and legal compliance. Only applicable to subscription products.",
          "$ref": "SubscriptionTaxAndComplianceSettings"
        },
        "defaultLanguage": {
          "description": "Default language of the localized data, as defined by BCP-47. e.g. \"en-US\".",
          "type": "string"
        },
        "sku": {
          "description": "Stock-keeping-unit (SKU) of the product, unique within an app.",
          "type": "string"
        },
        "prices": {
          "description": "Prices per buyer region. None of these can be zero, as in-app products are never free. Map key is region code, as defined by ISO 3166-2.",
          "additionalProperties": {
            "$ref": "Price"
          },
          "type": "object"
        },
        "packageName": {
          "type": "string",
          "description": "Package name of the parent app."
        },
        "status": {
          "description": "The status of the product, e.g. whether it's active.",
          "enum": [
            "statusUnspecified",
            "active",
            "inactive"
          ],
          "enumDescriptions": [
            "Unspecified status.",
            "The product is published and active in the store.",
            "The product is not published and therefore inactive in the store."
          ],
          "type": "string"
        },
        "purchaseType": {
          "enum": [
            "purchaseTypeUnspecified",
            "managedUser",
            "subscription"
          ],
          "description": "The type of the product, e.g. a recurring subscription.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified purchase type.",
            "The default product type - one time purchase.",
            "In-app product with a recurring period."
          ]
        },
        "listings": {
          "additionalProperties": {
            "$ref": "InAppProductListing"
          },
          "description": "List of localized title and description data. Map key is the language of the localized data, as defined by BCP-47, e.g. \"en-US\".",
          "type": "object"
        }
      }
    },
    "RegionalBasePlanConfig": {
      "type": "object",
      "properties": {
        "regionCode": {
          "description": "Required. Region code this configuration applies to, as defined by ISO 3166-2, e.g. \"US\".",
          "type": "string"
        },
        "newSubscriberAvailability": {
          "type": "boolean",
          "description": "Whether the base plan in the specified region is available for new subscribers. Existing subscribers will not have their subscription canceled if this value is set to false. If not specified, this will default to false."
        },
        "price": {
          "description": "The price of the base plan in the specified region. Must be set if the base plan is available to new subscribers. Must be set in the currency that is linked to the specified region.",
          "$ref": "Money"
        }
      },
      "id": "RegionalBasePlanConfig",
      "description": "Configuration for a base plan specific to a region."
    },
    "ReplacementCancellation": {
      "description": "Information specific to cancellations caused by subscription replacement.",
      "id": "ReplacementCancellation",
      "properties": {},
      "type": "object"
    },
    "DeviceSelector": {
      "description": "Selector for a device group. A selector consists of a set of conditions on the device that should all match (logical AND) to determine a device group eligibility. For instance, if a selector specifies RAM conditions, device model inclusion and device model exclusion, a device is considered to match if: device matches RAM conditions AND device matches one of the included device models AND device doesn't match excluded device models",
      "id": "DeviceSelector",
      "type": "object",
      "properties": {
        "deviceRam": {
          "description": "Conditions on the device's RAM.",
          "$ref": "DeviceRam"
        },
        "requiredSystemFeatures": {
          "description": "A device needs to have all these system features to be included by the selector.",
          "items": {
            "$ref": "SystemFeature"
          },
          "type": "array"
        },
        "forbiddenSystemFeatures": {
          "description": "A device that has any of these system features is excluded by this selector, even if it matches all other conditions.",
          "type": "array",
          "items": {
            "$ref": "SystemFeature"
          }
        },
        "includedDeviceIds": {
          "items": {
            "$ref": "DeviceId"
          },
          "description": "Device models included by this selector.",
          "type": "array"
        },
        "excludedDeviceIds": {
          "items": {
            "$ref": "DeviceId"
          },
          "type": "array",
          "description": "Device models excluded by this selector, even if they match all other conditions."
        }
      }
    },
    "SubscriptionDeferralInfo": {
      "type": "object",
      "description": "A SubscriptionDeferralInfo contains the data needed to defer a subscription purchase to a future expiry time.",
      "id": "SubscriptionDeferralInfo",
      "properties": {
        "desiredExpiryTimeMillis": {
          "description": "The desired next expiry time to assign to the subscription, in milliseconds since the Epoch. The given time must be later/greater than the current expiry time for the subscription.",
          "type": "string",
          "format": "int64"
        },
        "expectedExpiryTimeMillis": {
          "type": "string",
          "description": "The expected expiry time for the subscription. If the current expiry time for the subscription is not the value specified here, the deferral will not occur.",
          "format": "int64"
        }
      }
    },
    "TrackRelease": {
      "id": "TrackRelease",
      "type": "object",
      "properties": {
        "userFraction": {
          "description": "Fraction of users who are eligible for a staged release. 0 \u003c fraction \u003c 1. Can only be set when status is \"inProgress\" or \"halted\".",
          "type": "number",
          "format": "double"
        },
        "countryTargeting": {
          "description": "Restricts a release to a specific set of countries.",
          "$ref": "CountryTargeting"
        },
        "name": {
          "type": "string",
          "description": "The release name. Not required to be unique. If not set, the name is generated from the APK's version_name. If the release contains multiple APKs, the name is generated from the date."
        },
        "status": {
          "type": "string",
          "description": "The status of the release.",
          "enum": [
            "statusUnspecified",
            "draft",
            "inProgress",
            "halted",
            "completed"
          ],
          "enumDescriptions": [
            "Unspecified status.",
            "The release's APKs are not being served to users.",
            "The release's APKs are being served to a fraction of users, determined by 'user_fraction'.",
            "The release's APKs will no longer be served to users. Users who already have these APKs are unaffected.",
            "The release will have no further changes. Its APKs are being served to all users, unless they are eligible to APKs of a more recent release."
          ]
        },
        "versionCodes": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "Version codes of all APKs in the release. Must include version codes to retain from previous releases."
        },
        "inAppUpdatePriority": {
          "description": "In-app update priority of the release. All newly added APKs in the release will be considered at this priority. Can take values in the range [0, 5], with 5 the highest priority. Defaults to 0. in_app_update_priority can not be updated once the release is rolled out. See https://developer.android.com/guide/playcore/in-app-updates.",
          "type": "integer",
          "format": "int32"
        },
        "releaseNotes": {
          "description": "A description of what is new in this release.",
          "items": {
            "$ref": "LocalizedText"
          },
          "type": "array"
        }
      },
      "description": "A release within a track."
    },
    "OfferTag": {
      "id": "OfferTag",
      "type": "object",
      "description": "Represents a custom tag specified for base plans and subscription offers.",
      "properties": {
        "tag": {
          "type": "string",
          "description": "Must conform with RFC-1034. That is, this string can only contain lower-case letters (a-z), numbers (0-9), and hyphens (-), and be at most 20 characters."
        }
      }
    },
    "TextureCompressionFormat": {
      "description": "Represents texture compression format.",
      "id": "TextureCompressionFormat",
      "type": "object",
      "properties": {
        "alias": {
          "enumDescriptions": [
            "Unspecified format.",
            "ETC1_RGB8 format.",
            "PALETTED format.",
            "THREE_DC format.",
            "ATC format.",
            "LATC format.",
            "DXT1 format.",
            "S3TC format.",
            "PVRTC format.",
            "ASTC format.",
            "ETC2 format."
          ],
          "enum": [
            "UNSPECIFIED_TEXTURE_COMPRESSION_FORMAT",
            "ETC1_RGB8",
            "PALETTED",
            "THREE_DC",
            "ATC",
            "LATC",
            "DXT1",
            "S3TC",
            "PVRTC",
            "ASTC",
            "ETC2"
          ],
          "type": "string",
          "description": "Alias for texture compression format."
        }
      }
    },
    "ListingsListResponse": {
      "properties": {
        "listings": {
          "type": "array",
          "description": "All localized listings.",
          "items": {
            "$ref": "Listing"
          }
        },
        "kind": {
          "type": "string",
          "description": "The kind of this response (\"androidpublisher#listingsListResponse\")."
        }
      },
      "description": "Response listing all localized listings.",
      "type": "object",
      "id": "ListingsListResponse"
    },
    "PrepaidPlan": {
      "type": "object",
      "description": "Information related to a prepaid plan.",
      "id": "PrepaidPlan",
      "properties": {
        "allowExtendAfterTime": {
          "description": "If present, this is the time after which top up purchases are allowed for the prepaid plan. Will not be present for expired prepaid plans.",
          "format": "google-datetime",
          "type": "string"
        }
      }
    },
    "SystemInitiatedCancellation": {
      "properties": {},
      "type": "object",
      "description": "Information specific to cancellations initiated by Google system.",
      "id": "SystemInitiatedCancellation"
    },
    "DeviceId": {
      "description": "Identifier of a device.",
      "properties": {
        "buildBrand": {
          "description": "Value of Build.BRAND.",
          "type": "string"
        },
        "buildDevice": {
          "description": "Value of Build.DEVICE.",
          "type": "string"
        }
      },
      "id": "DeviceId",
      "type": "object"
    },
    "DeviceFeature": {
      "description": "Represents a device feature.",
      "id": "DeviceFeature",
      "properties": {
        "featureVersion": {
          "type": "integer",
          "description": "The feature version specified by android:glEsVersion or android:version in in the AndroidManifest.",
          "format": "int32"
        },
        "featureName": {
          "description": "Name of the feature.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ModuleTargeting": {
      "id": "ModuleTargeting",
      "properties": {
        "sdkVersionTargeting": {
          "$ref": "SdkVersionTargeting",
          "description": "The sdk version that the variant targets"
        },
        "deviceFeatureTargeting": {
          "description": "Targeting for device features.",
          "items": {
            "$ref": "DeviceFeatureTargeting"
          },
          "type": "array"
        },
        "userCountriesTargeting": {
          "$ref": "UserCountriesTargeting",
          "description": "Countries-level targeting"
        }
      },
      "description": "Targeting on the module level.",
      "type": "object"
    },
    "OfferDetails": {
      "type": "object",
      "description": "Offer details information related to a purchase line item.",
      "id": "OfferDetails",
      "properties": {
        "basePlanId": {
          "description": "The base plan ID. Present for all base plan and offers.",
          "type": "string"
        },
        "offerId": {
          "description": "The offer ID. Only present for discounted offers.",
          "type": "string"
        },
        "offerTags": {
          "type": "array",
          "description": "The latest offer tags associated with the offer. It includes tags inherited from the base plan.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeviceTierSet": {
      "type": "object",
      "description": "A set of device tiers. A tier set determines what variation of app content gets served to a specific device, for device-targeted content. You should assign a priority level to each tier, which determines the ordering by which they are evaluated by Play. See the documentation of DeviceTier.level for more details.",
      "id": "DeviceTierSet",
      "properties": {
        "deviceTiers": {
          "items": {
            "$ref": "DeviceTier"
          },
          "type": "array",
          "description": "Device tiers belonging to the set."
        }
      }
    },
    "UpgradeTargetingRule": {
      "description": "Represents a targeting rule of the form: User currently has {scope} [with billing period {billing_period}].",
      "properties": {
        "scope": {
          "$ref": "TargetingRuleScope",
          "description": "Required. The scope of subscriptions this rule considers. Only allows \"this subscription\" and \"specific subscription in app\"."
        },
        "billingPeriodDuration": {
          "type": "string",
          "description": "The specific billing period duration, specified in ISO 8601 format, that a user must be currently subscribed to to be eligible for this rule. If not specified, users subscribed to any billing period are matched."
        },
        "oncePerUser": {
          "type": "boolean",
          "description": "Limit this offer to only once per user. If set to true, a user can never be eligible for this offer again if they ever subscribed to this offer."
        }
      },
      "id": "UpgradeTargetingRule",
      "type": "object"
    },
    "DeviceGroup": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the group."
        },
        "deviceSelectors": {
          "type": "array",
          "items": {
            "$ref": "DeviceSelector"
          },
          "description": "Device selectors for this group. A device matching any of the selectors is included in this group."
        }
      },
      "type": "object",
      "description": "A group of devices. A group is defined by a set of device selectors. A device belongs to the group if it matches any selector (logical OR).",
      "id": "DeviceGroup"
    },
    "ExternalAccountIdentifiers": {
      "description": "User account identifier in the third-party service.",
      "type": "object",
      "properties": {
        "obfuscatedExternalProfileId": {
          "type": "string",
          "description": "An obfuscated version of the id that is uniquely associated with the user's profile in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedprofileid when the purchase was made."
        },
        "externalAccountId": {
          "type": "string",
          "description": "User account identifier in the third-party service. Only present if account linking happened as part of the subscription purchase flow."
        },
        "obfuscatedExternalAccountId": {
          "type": "string",
          "description": "An obfuscated version of the id that is uniquely associated with the user's account in your app. Present for the following purchases: * If account linking happened as part of the subscription purchase flow. * It was specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedaccountid when the purchase was made."
        }
      },
      "id": "ExternalAccountIdentifiers"
    },
    "SubscriptionTaxAndComplianceSettings": {
      "id": "SubscriptionTaxAndComplianceSettings",
      "properties": {
        "isTokenizedDigitalAsset": {
          "description": "Whether this subscription is declared as a product representing a tokenized digital asset.",
          "type": "boolean"
        },
        "taxRateInfoByRegionCode": {
          "description": "A mapping from region code to tax rate details. The keys are region codes as defined by Unicode's \"CLDR\".",
          "additionalProperties": {
            "$ref": "RegionalTaxRateInfo"
          },
          "type": "object"
        },
        "eeaWithdrawalRightType": {
          "type": "string",
          "enum": [
            "WITHDRAWAL_RIGHT_TYPE_UNSPECIFIED",
            "WITHDRAWAL_RIGHT_DIGITAL_CONTENT",
            "WITHDRAWAL_RIGHT_SERVICE"
          ],
          "description": "Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the [Help Center article](https://support.google.com/googleplay/android-developer/answer/10463498) for more information.",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        }
      },
      "description": "Details about taxation, Google Play policy and legal compliance for subscription products.",
      "type": "object"
    },
    "DeviceTier": {
      "type": "object",
      "id": "DeviceTier",
      "description": "A single device tier. Devices matching any of the device groups in device_group_names are considered to match the tier.",
      "properties": {
        "deviceGroupNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Groups of devices included in this tier. These groups must be defined explicitly under device_groups in this configuration."
        },
        "level": {
          "type": "integer",
          "description": "The priority level of the tier. Tiers are evaluated in descending order of level: the highest level tier has the highest priority. The highest tier matching a given device is selected for that device. You should use a contiguous range of levels for your tiers in a tier set; tier levels in a tier set must be unique. For instance, if your tier set has 4 tiers (including the global fallback), you should define tiers 1, 2 and 3 in this configuration. Note: tier 0 is implicitly defined as a global fallback and selected for devices that don't match any of the tiers explicitly defined here. You mustn't define level 0 explicitly in this configuration.",
          "format": "int32"
        }
      }
    },
    "StandaloneApkMetadata": {
      "properties": {
        "fusedModuleName": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Names of the modules fused in this standalone APK."
        }
      },
      "type": "object",
      "id": "StandaloneApkMetadata",
      "description": "Holds data specific to Standalone APKs."
    },
    "VariantTargeting": {
      "properties": {
        "screenDensityTargeting": {
          "description": "The screen densities that this variant supports",
          "$ref": "ScreenDensityTargeting"
        },
        "textureCompressionFormatTargeting": {
          "$ref": "TextureCompressionFormatTargeting",
          "description": "Texture-compression-format-level targeting"
        },
        "sdkVersionTargeting": {
          "$ref": "SdkVersionTargeting",
          "description": "The sdk version that the variant targets"
        },
        "abiTargeting": {
          "description": "The abi that the variant targets",
          "$ref": "AbiTargeting"
        },
        "multiAbiTargeting": {
          "$ref": "MultiAbiTargeting",
          "description": "Multi-api-level targeting"
        }
      },
      "id": "VariantTargeting",
      "type": "object",
      "description": "Targeting on the level of variants."
    },
    "SubscriptionPurchasesAcknowledgeRequest": {
      "id": "SubscriptionPurchasesAcknowledgeRequest",
      "properties": {
        "developerPayload": {
          "description": "Payload to attach to the purchase.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Request for the purchases.subscriptions.acknowledge API."
    },
    "DeobfuscationFilesUploadResponse": {
      "type": "object",
      "description": "Responses for the upload.",
      "id": "DeobfuscationFilesUploadResponse",
      "properties": {
        "deobfuscationFile": {
          "description": "The uploaded Deobfuscation File configuration.",
          "$ref": "DeobfuscationFile"
        }
      }
    },
    "SubscriptionOfferPhase": {
      "properties": {
        "recurrenceCount": {
          "format": "int32",
          "type": "integer",
          "description": "Required. The number of times this phase repeats. If this offer phase is not free, each recurrence charges the user the price of this offer phase."
        },
        "regionalConfigs": {
          "items": {
            "$ref": "RegionalSubscriptionOfferPhaseConfig"
          },
          "type": "array",
          "description": "Required. The region-specific configuration of this offer phase. This list must contain exactly one entry for each region for which the subscription offer has a regional config."
        },
        "duration": {
          "description": "Required. The duration of a single recurrence of this phase. Specified in ISO 8601 format.",
          "type": "string"
        },
        "otherRegionsConfig": {
          "description": "Pricing information for any new locations Play may launch in.",
          "$ref": "OtherRegionsSubscriptionOfferPhaseConfig"
        }
      },
      "type": "object",
      "id": "SubscriptionOfferPhase",
      "description": "A single phase of a subscription offer."
    },
    "InAppProductListing": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Description for the store listing."
        },
        "benefits": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Localized entitlement benefits for a subscription."
        },
        "title": {
          "description": "Title for the store listing.",
          "type": "string"
        }
      },
      "description": "Store listing of a single in-app product.",
      "id": "InAppProductListing",
      "type": "object"
    },
    "PrepaidBasePlanType": {
      "description": "Represents a base plan that does not automatically renew at the end of the base plan, and must be manually renewed by the user.",
      "id": "PrepaidBasePlanType",
      "properties": {
        "billingPeriodDuration": {
          "description": "Required. Subscription period, specified in ISO 8601 format. For a list of acceptable billing periods, refer to the help center.",
          "type": "string"
        },
        "timeExtension": {
          "enumDescriptions": [
            "Unspecified state.",
            "Time extension is active. Users are allowed to top-up or extend their prepaid plan.",
            "Time extension is inactive. Users cannot top-up or extend their prepaid plan."
          ],
          "description": "Whether users should be able to extend this prepaid base plan in Google Play surfaces. Defaults to TIME_EXTENSION_ACTIVE if not specified.",
          "enum": [
            "TIME_EXTENSION_UNSPECIFIED",
            "TIME_EXTENSION_ACTIVE",
            "TIME_EXTENSION_INACTIVE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubscriptionPurchasesDeferResponse": {
      "properties": {
        "newExpiryTimeMillis": {
          "description": "The new expiry time for the subscription in milliseconds since the Epoch.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "Response for the purchases.subscriptions.defer API.",
      "id": "SubscriptionPurchasesDeferResponse"
    },
    "OtherRegionsSubscriptionOfferConfig": {
      "description": "Configuration for any new locations Play may launch in specified on a subscription offer.",
      "type": "object",
      "id": "OtherRegionsSubscriptionOfferConfig",
      "properties": {
        "otherRegionsNewSubscriberAvailability": {
          "type": "boolean",
          "description": "Whether the subscription offer in any new locations Play may launch in the future. If not specified, this will default to false."
        }
      }
    },
    "IntroductoryPriceInfo": {
      "properties": {
        "introductoryPriceCycles": {
          "description": "The number of billing period to offer introductory pricing.",
          "type": "integer",
          "format": "int32"
        },
        "introductoryPriceCurrencyCode": {
          "description": "ISO 4217 currency code for the introductory subscription price. For example, if the price is specified in British pounds sterling, price_currency_code is \"GBP\".",
          "type": "string"
        },
        "introductoryPricePeriod": {
          "type": "string",
          "description": "Introductory price period, specified in ISO 8601 format. Common values are (but not limited to) \"P1W\" (one week), \"P1M\" (one month), \"P3M\" (three months), \"P6M\" (six months), and \"P1Y\" (one year)."
        },
        "introductoryPriceAmountMicros": {
          "type": "string",
          "description": "Introductory price of the subscription, not including tax. The currency is the same as price_currency_code. Price is expressed in micro-units, where 1,000,000 micro-units represents one unit of the currency. For example, if the subscription price is €1.99, price_amount_micros is 1990000.",
          "format": "int64"
        }
      },
      "description": "Contains the introductory price information for a subscription.",
      "id": "IntroductoryPriceInfo",
      "type": "object"
    },
    "TracksListResponse": {
      "id": "TracksListResponse",
      "type": "object",
      "properties": {
        "tracks": {
          "type": "array",
          "items": {
            "$ref": "Track"
          },
          "description": "All tracks (including tracks with no releases)."
        },
        "kind": {
          "type": "string",
          "description": "The kind of this response (\"androidpublisher#tracksListResponse\")."
        }
      },
      "description": "Response listing all tracks."
    },
    "OneTimeExternalTransaction": {
      "type": "object",
      "description": "Represents a one-time transaction.",
      "id": "OneTimeExternalTransaction",
      "properties": {
        "externalTransactionToken": {
          "type": "string",
          "description": "Input only. Provided during the call to Create. Retrieved from the client when the alternative billing flow is launched."
        }
      }
    },
    "LocalizedText": {
      "type": "object",
      "id": "LocalizedText",
      "properties": {
        "text": {
          "description": "The text in the given language.",
          "type": "string"
        },
        "language": {
          "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).",
          "type": "string"
        }
      },
      "description": "Localized text in given language."
    },
    "Track": {
      "properties": {
        "track": {
          "type": "string",
          "description": "Identifier of the track. Form factor tracks have a special prefix as an identifier, for example `wear:production`, `automotive:production`. [More on track name](https://developers.google.com/android-publisher/tracks#ff-track-name)"
        },
        "releases": {
          "items": {
            "$ref": "TrackRelease"
          },
          "description": "In a read request, represents all active releases in the track. In an update request, represents desired changes.",
          "type": "array"
        }
      },
      "id": "Track",
      "type": "object",
      "description": "A track configuration. The resource for TracksService."
    },
    "Image": {
      "type": "object",
      "id": "Image",
      "description": "An uploaded image. The resource for ImagesService.",
      "properties": {
        "id": {
          "description": "A unique id representing this image.",
          "type": "string"
        },
        "sha1": {
          "description": "A sha1 hash of the image.",
          "type": "string"
        },
        "sha256": {
          "description": "A sha256 hash of the image.",
          "type": "string"
        },
        "url": {
          "type": "string",
          "description": "A URL that will serve a preview of the image."
        }
      }
    },
    "ExternallyHostedApk": {
      "id": "ExternallyHostedApk",
      "description": "Defines an APK available for this application that is hosted externally and not uploaded to Google Play. This function is only available to organizations using Managed Play whose application is configured to restrict distribution to the organizations.",
      "type": "object",
      "properties": {
        "applicationLabel": {
          "type": "string",
          "description": "The application label."
        },
        "minimumSdk": {
          "format": "int32",
          "description": "The minimum SDK targeted by this APK.",
          "type": "integer"
        },
        "fileSha256Base64": {
          "description": "The sha256 checksum of this APK, represented as a base64 encoded byte array.",
          "type": "string"
        },
        "certificateBase64s": {
          "items": {
            "type": "string"
          },
          "description": "A certificate (or array of certificates if a certificate-chain is used) used to sign this APK, represented as a base64 encoded byte array.",
          "type": "array"
        },
        "usesFeatures": {
          "items": {
            "type": "string"
          },
          "description": "The features required by this APK (optional).",
          "type": "array"
        },
        "iconBase64": {
          "type": "string",
          "description": "The icon image from the APK, as a base64 encoded byte array."
        },
        "fileSha1Base64": {
          "type": "string",
          "description": "The sha1 checksum of this APK, represented as a base64 encoded byte array."
        },
        "maximumSdk": {
          "type": "integer",
          "description": "The maximum SDK supported by this APK (optional).",
          "format": "int32"
        },
        "externallyHostedUrl": {
          "type": "string",
          "description": "The URL at which the APK is hosted. This must be an https URL."
        },
        "packageName": {
          "description": "The package name.",
          "type": "string"
        },
        "nativeCodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The native code environments supported by this APK (optional)."
        },
        "versionName": {
          "type": "string",
          "description": "The version name of this APK."
        },
        "fileSize": {
          "description": "The file size in bytes of this APK.",
          "format": "int64",
          "type": "string"
        },
        "versionCode": {
          "description": "The version code of this APK.",
          "format": "int32",
          "type": "integer"
        },
        "usesPermissions": {
          "type": "array",
          "items": {
            "$ref": "UsesPermission"
          },
          "description": "The permissions requested by this APK."
        }
      }
    },
    "AssetSliceSet": {
      "type": "object",
      "description": "Set of asset slices belonging to a single asset module.",
      "id": "AssetSliceSet",
      "properties": {
        "assetModuleMetadata": {
          "$ref": "AssetModuleMetadata",
          "description": "Module level metadata."
        },
        "apkDescription": {
          "items": {
            "$ref": "ApkDescription"
          },
          "type": "array",
          "description": "Asset slices."
        }
      }
    },
    "AppEdit": {
      "id": "AppEdit",
      "type": "object",
      "properties": {
        "expiryTimeSeconds": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time (as seconds since Epoch) at which the edit will expire and will be no longer valid for use."
        },
        "id": {
          "readOnly": true,
          "description": "Output only. Identifier of the edit. Can be used in subsequent API calls.",
          "type": "string"
        }
      },
      "description": "An app edit. The resource for EditsService."
    },
    "ApkBinary": {
      "type": "object",
      "properties": {
        "sha1": {
          "description": "A sha1 hash of the APK payload, encoded as a hex string and matching the output of the sha1sum command.",
          "type": "string"
        },
        "sha256": {
          "description": "A sha256 hash of the APK payload, encoded as a hex string and matching the output of the sha256sum command.",
          "type": "string"
        }
      },
      "description": "Represents the binary payload of an APK.",
      "id": "ApkBinary"
    },
    "ActivateBasePlanRequest": {
      "id": "ActivateBasePlanRequest",
      "type": "object",
      "properties": {},
      "description": "Request message for ActivateBasePlan."
    },
    "UserInitiatedCancellation": {
      "properties": {
        "cancelSurveyResult": {
          "$ref": "CancelSurveyResult",
          "description": "Information provided by the user when they complete the subscription cancellation flow (cancellation reason survey)."
        },
        "cancelTime": {
          "description": "The time at which the subscription was canceled by the user. The user might still have access to the subscription after this time. Use line_items.expiry_time to determine if a user still has access.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object",
      "id": "UserInitiatedCancellation",
      "description": "Information specific to cancellations initiated by users."
    },
    "Timestamp": {
      "properties": {
        "nanos": {
          "description": "Non-negative fractions of a second at nanosecond resolution. Must be from 0 to 999,999,999 inclusive.",
          "format": "int32",
          "type": "integer"
        },
        "seconds": {
          "description": "Represents seconds of UTC time since Unix epoch.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "A Timestamp represents a point in time independent of any time zone or local calendar, encoded as a count of seconds and fractions of seconds at nanosecond resolution. The count is relative to an epoch at UTC midnight on January 1, 1970.",
      "type": "object",
      "id": "Timestamp"
    },
    "ApksListResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of this response (\"androidpublisher#apksListResponse\")."
        },
        "apks": {
          "type": "array",
          "items": {
            "$ref": "Apk"
          },
          "description": "All APKs."
        }
      },
      "type": "object",
      "id": "ApksListResponse",
      "description": "Response listing all APKs."
    },
    "CountryTargeting": {
      "description": "Country targeting specification.",
      "properties": {
        "includeRestOfWorld": {
          "type": "boolean",
          "description": "Include \"rest of world\" as well as explicitly targeted countries."
        },
        "countries": {
          "items": {
            "type": "string"
          },
          "description": "Countries to target, specified as two letter [CLDR codes](https://unicode.org/cldr/charts/latest/supplemental/territory_containment_un_m_49.html).",
          "type": "array"
        }
      },
      "type": "object",
      "id": "CountryTargeting"
    },
    "Money": {
      "properties": {
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "type": "integer",
          "format": "int32"
        },
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        },
        "units": {
          "type": "string",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "format": "int64"
        }
      },
      "id": "Money",
      "description": "Represents an amount of money with its currency type.",
      "type": "object"
    },
    "DeactivateSubscriptionOfferRequest": {
      "id": "DeactivateSubscriptionOfferRequest",
      "description": "Request message for DeactivateSubscriptionOffer.",
      "type": "object",
      "properties": {}
    },
    "SystemApksListResponse": {
      "id": "SystemApksListResponse",
      "type": "object",
      "description": "Response to list previously created system APK variants.",
      "properties": {
        "variants": {
          "type": "array",
          "items": {
            "$ref": "Variant"
          },
          "description": "All system APK variants created."
        }
      }
    },
    "ApksAddExternallyHostedResponse": {
      "id": "ApksAddExternallyHostedResponse",
      "type": "object",
      "properties": {
        "externallyHostedApk": {
          "description": "The definition of the externally-hosted APK and where it is located.",
          "$ref": "ExternallyHostedApk"
        }
      },
      "description": "Response for creating a new externally hosted APK."
    },
    "SubscriptionListing": {
      "description": "The consumer-visible metadata of a subscription.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of this subscription in the language of this listing. Maximum length - 80 characters. Plain text."
        },
        "title": {
          "description": "Required. The title of this subscription in the language of this listing. Plain text.",
          "type": "string"
        },
        "languageCode": {
          "type": "string",
          "description": "Required. The language of this listing, as defined by BCP-47, e.g. \"en-US\"."
        },
        "benefits": {
          "items": {
            "type": "string"
          },
          "description": "A list of benefits shown to the user on platforms such as the Play Store and in restoration flows in the language of this listing. Plain text. Ordered list of at most four benefits.",
          "type": "array"
        }
      },
      "id": "SubscriptionListing",
      "type": "object"
    },
    "SubscribeWithGoogleInfo": {
      "type": "object",
      "properties": {
        "emailAddress": {
          "type": "string",
          "description": "The email address of the user when the subscription was purchased."
        },
        "profileName": {
          "type": "string",
          "description": "The profile name of the user when the subscription was purchased."
        },
        "givenName": {
          "description": "The given name of the user when the subscription was purchased.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name of the user when the subscription was purchased.",
          "type": "string"
        },
        "profileId": {
          "description": "The Google profile id of the user when the subscription was purchased.",
          "type": "string"
        }
      },
      "id": "SubscribeWithGoogleInfo",
      "description": "Information associated with purchases made with 'Subscribe with Google'."
    },
    "RefundExternalTransactionRequest": {
      "type": "object",
      "properties": {
        "fullRefund": {
          "$ref": "FullRefund",
          "description": "A full-amount refund."
        },
        "refundTime": {
          "format": "google-datetime",
          "description": "Required. The time that the transaction was refunded.",
          "type": "string"
        },
        "partialRefund": {
          "$ref": "PartialRefund",
          "description": "A partial refund."
        }
      },
      "description": "A request to refund an existing external transaction.",
      "id": "RefundExternalTransactionRequest"
    },
    "OtherRegionsSubscriptionOfferPhasePrices": {
      "id": "OtherRegionsSubscriptionOfferPhasePrices",
      "description": "Pricing information for any new locations Play may launch in.",
      "properties": {
        "usdPrice": {
          "$ref": "Money",
          "description": "Required. Price in USD to use for any new locations Play may launch in."
        },
        "eurPrice": {
          "$ref": "Money",
          "description": "Required. Price in EUR to use for any new locations Play may launch in."
        }
      },
      "type": "object"
    },
    "RegionsVersion": {
      "properties": {
        "version": {
          "type": "string",
          "description": "Required. The latest version is 2022/02."
        }
      },
      "type": "object",
      "id": "RegionsVersion",
      "description": "The version of the available regions being used for the specified resource. A string representing the version of available regions being used for the specified resource. Regional prices for the resource have to be specified according to the information published in [this article](https://support.google.com/googleplay/android-developer/answer/10532353)."
    },
    "GeneratedApksListResponse": {
      "type": "object",
      "properties": {
        "generatedApks": {
          "type": "array",
          "items": {
            "$ref": "GeneratedApksPerSigningKey"
          },
          "description": "All generated APKs, grouped by the APK signing key."
        }
      },
      "description": "Response to list generated APKs.",
      "id": "GeneratedApksListResponse"
    },
    "SystemFeature": {
      "description": "Representation of a system feature.",
      "id": "SystemFeature",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the feature.",
          "type": "string"
        }
      }
    },
    "ExpansionFile": {
      "type": "object",
      "properties": {
        "fileSize": {
          "format": "int64",
          "type": "string",
          "description": "If set, this field indicates that this APK has an expansion file uploaded to it: this APK does not reference another APK's expansion file. The field's value is the size of the uploaded expansion file in bytes."
        },
        "referencesVersion": {
          "type": "integer",
          "format": "int32",
          "description": "If set, this APK's expansion file references another APK's expansion file. The file_size field will not be set."
        }
      },
      "description": "An expansion file. The resource for ExpansionFilesService.",
      "id": "ExpansionFile"
    },
    "GeneratedSplitApk": {
      "id": "GeneratedSplitApk",
      "type": "object",
      "description": "Download metadata for a split APK.",
      "properties": {
        "variantId": {
          "format": "int32",
          "type": "integer",
          "description": "ID of the generated variant."
        },
        "moduleName": {
          "type": "string",
          "description": "Name of the module that this APK belongs to."
        },
        "downloadId": {
          "description": "Download ID, which uniquely identifies the APK to download. Should be supplied to `generatedapks.download` method.",
          "type": "string"
        },
        "splitId": {
          "type": "string",
          "description": "Split ID. Empty for the main split of the base module."
        }
      }
    },
    "AutoRenewingBasePlanType": {
      "id": "AutoRenewingBasePlanType",
      "description": "Represents a base plan that automatically renews at the end of its subscription period.",
      "properties": {
        "billingPeriodDuration": {
          "type": "string",
          "description": "Required. Subscription period, specified in ISO 8601 format. For a list of acceptable billing periods, refer to the help center."
        },
        "prorationMode": {
          "enum": [
            "SUBSCRIPTION_PRORATION_MODE_UNSPECIFIED",
            "SUBSCRIPTION_PRORATION_MODE_CHARGE_ON_NEXT_BILLING_DATE",
            "SUBSCRIPTION_PRORATION_MODE_CHARGE_FULL_PRICE_IMMEDIATELY"
          ],
          "description": "The proration mode for the base plan determines what happens when a user switches to this plan from another base plan. If unspecified, defaults to CHARGE_ON_NEXT_BILLING_DATE.",
          "enumDescriptions": [
            "Unspecified mode.",
            "Users will be charged for their new base plan at the end of their current billing period.",
            "Users will be charged for their new base plan immediately and in full. Any remaining period of their existing subscription will be used to extend the duration of the new billing plan."
          ],
          "type": "string"
        },
        "legacyCompatibleSubscriptionOfferId": {
          "type": "string",
          "description": "Subscription offer id which is legacy compatible. The backward compatible subscription offer is returned by the Google Play Billing Library deprecated method querySkuDetailsAsync(). Only one subscription offer can be marked as legacy compatible for a given renewing base plan. To have no Subscription offer as legacy compatible set this field as empty string."
        },
        "legacyCompatible": {
          "type": "boolean",
          "description": "Whether the renewing base plan is backward compatible. The backward compatible base plan is returned by the Google Play Billing Library deprecated method querySkuDetailsAsync(). Only one renewing base plan can be marked as legacy compatible for a given subscription."
        },
        "resubscribeState": {
          "enumDescriptions": [
            "Unspecified state.",
            "Resubscribe is active.",
            "Resubscribe is inactive."
          ],
          "description": "Whether users should be able to resubscribe to this base plan in Google Play surfaces. Defaults to RESUBSCRIBE_STATE_ACTIVE if not specified.",
          "enum": [
            "RESUBSCRIBE_STATE_UNSPECIFIED",
            "RESUBSCRIBE_STATE_ACTIVE",
            "RESUBSCRIBE_STATE_INACTIVE"
          ],
          "type": "string"
        },
        "gracePeriodDuration": {
          "type": "string",
          "description": "Grace period of the subscription, specified in ISO 8601 format. Acceptable values are P0D (zero days), P3D (3 days), P7D (7 days), P14D (14 days), and P30D (30 days). If not specified, a default value will be used based on the recurring period duration."
        }
      },
      "type": "object"
    },
    "TargetingInfo": {
      "type": "object",
      "properties": {
        "assetSliceSet": {
          "items": {
            "$ref": "AssetSliceSet"
          },
          "description": "List of created asset slices.",
          "type": "array"
        },
        "variant": {
          "type": "array",
          "description": "List of the created variants.",
          "items": {
            "$ref": "SplitApkVariant"
          }
        },
        "packageName": {
          "type": "string",
          "description": "The package name of this app."
        }
      },
      "id": "TargetingInfo",
      "description": "Targeting information about the generated apks."
    },
    "InappproductsListResponse": {
      "description": "Response listing all in-app products.",
      "id": "InappproductsListResponse",
      "properties": {
        "tokenPagination": {
          "description": "Pagination token, to handle a number of products that is over one page.",
          "$ref": "TokenPagination"
        },
        "inappproduct": {
          "items": {
            "$ref": "InAppProduct"
          },
          "description": "All in-app products.",
          "type": "array"
        },
        "pageInfo": {
          "description": "Deprecated and unset.",
          "$ref": "PageInfo",
          "deprecated": true
        },
        "kind": {
          "type": "string",
          "description": "The kind of this response (\"androidpublisher#inappproductsListResponse\")."
        }
      },
      "type": "object"
    },
    "GeneratedUniversalApk": {
      "description": "Download metadata for a universal APK.",
      "id": "GeneratedUniversalApk",
      "properties": {
        "downloadId": {
          "description": "Download ID, which uniquely identifies the APK to download. Should be supplied to `generatedapks.download` method.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelSurveyResult": {
      "type": "object",
      "description": "Result of the cancel survey when the subscription was canceled by the user.",
      "id": "CancelSurveyResult",
      "properties": {
        "reasonUserInput": {
          "type": "string",
          "description": "Only set for CANCEL_SURVEY_REASON_OTHERS. This is the user's freeform response to the survey."
        },
        "reason": {
          "enum": [
            "CANCEL_SURVEY_REASON_UNSPECIFIED",
            "CANCEL_SURVEY_REASON_NOT_ENOUGH_USAGE",
            "CANCEL_SURVEY_REASON_TECHNICAL_ISSUES",
            "CANCEL_SURVEY_REASON_COST_RELATED",
            "CANCEL_SURVEY_REASON_FOUND_BETTER_APP",
            "CANCEL_SURVEY_REASON_OTHERS"
          ],
          "type": "string",
          "description": "The reason the user selected in the cancel survey.",
          "enumDescriptions": [
            "Unspecified cancel survey reason.",
            "Not enough usage of the subscription.",
            "Technical issues while using the app.",
            "Cost related issues.",
            "The user found a better app.",
            "Other reasons."
          ]
        }
      }
    },
    "ConvertRegionPricesResponse": {
      "description": "Response message for ConvertRegionPrices.",
      "properties": {
        "convertedOtherRegionsPrice": {
          "$ref": "ConvertedOtherRegionsPrice",
          "description": "Converted other regions prices in USD and EUR, to use for countries where Play doesn't support a country's local currency."
        },
        "convertedRegionPrices": {
          "type": "object",
          "additionalProperties": {
            "$ref": "ConvertedRegionPrice"
          },
          "description": "Map from region code to converted region price."
        }
      },
      "type": "object",
      "id": "ConvertRegionPricesResponse"
    },
    "ImagesUploadResponse": {
      "id": "ImagesUploadResponse",
      "type": "object",
      "properties": {
        "image": {
          "description": "The uploaded image.",
          "$ref": "Image"
        }
      },
      "description": "Response for uploading an image."
    },
    "LanguageTargeting": {
      "type": "object",
      "description": "Targeting based on language.",
      "properties": {
        "alternatives": {
          "description": "Alternative languages.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "value": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "ISO-639: 2 or 3 letter language code."
        }
      },
      "id": "LanguageTargeting"
    },
    "ActivateSubscriptionOfferRequest": {
      "properties": {},
      "type": "object",
      "id": "ActivateSubscriptionOfferRequest",
      "description": "Request message for ActivateSubscriptionOffer."
    },
    "AssetModuleMetadata": {
      "id": "AssetModuleMetadata",
      "type": "object",
      "description": "Metadata of an asset module.",
      "properties": {
        "deliveryType": {
          "description": "Indicates the delivery type for persistent install.",
          "enum": [
            "UNKNOWN_DELIVERY_TYPE",
            "INSTALL_TIME",
            "ON_DEMAND",
            "FAST_FOLLOW"
          ],
          "enumDescriptions": [
            "Unspecified delivery type.",
            "This module will always be downloaded as part of the initial install of the app.",
            "This module is requested on-demand, which means it will not be part of the initial install, and will only be sent when requested by the client.",
            "This module will be downloaded immediately after initial install finishes. The app can be opened before these modules are downloaded."
          ],
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Module name."
        }
      }
    },
    "AppDetails": {
      "description": "The app details. The resource for DetailsService.",
      "properties": {
        "contactWebsite": {
          "description": "The user-visible website for this app.",
          "type": "string"
        },
        "defaultLanguage": {
          "type": "string",
          "description": "Default language code, in BCP 47 format (eg \"en-US\")."
        },
        "contactPhone": {
          "description": "The user-visible support telephone number for this app.",
          "type": "string"
        },
        "contactEmail": {
          "type": "string",
          "description": "The user-visible support email for this app."
        }
      },
      "id": "AppDetails",
      "type": "object"
    },
    "InternalAppSharingArtifact": {
      "properties": {
        "certificateFingerprint": {
          "type": "string",
          "description": "The sha256 fingerprint of the certificate used to sign the generated artifact."
        },
        "sha256": {
          "type": "string",
          "description": "The sha256 hash of the artifact represented as a lowercase hexadecimal number, matching the output of the sha256sum command."
        },
        "downloadUrl": {
          "description": "The download URL generated for the uploaded artifact. Users that are authorized to download can follow the link to the Play Store app to install it.",
          "type": "string"
        }
      },
      "id": "InternalAppSharingArtifact",
      "type": "object",
      "description": "An artifact resource which gets created when uploading an APK or Android App Bundle through internal app sharing."
    },
    "ConvertedOtherRegionsPrice": {
      "description": "Converted other regions prices.",
      "id": "ConvertedOtherRegionsPrice",
      "properties": {
        "usdPrice": {
          "$ref": "Money",
          "description": "Price in USD to use for the \"Other regions\" location exclusive of taxes."
        },
        "eurPrice": {
          "$ref": "Money",
          "description": "Price in EUR to use for the \"Other regions\" location exclusive of taxes."
        }
      },
      "type": "object"
    },
    "SubscriptionOfferTargeting": {
      "description": "Defines the rule a user needs to satisfy to receive this offer.",
      "type": "object",
      "id": "SubscriptionOfferTargeting",
      "properties": {
        "acquisitionRule": {
          "description": "Offer targeting rule for new user acquisition.",
          "$ref": "AcquisitionTargetingRule"
        },
        "upgradeRule": {
          "$ref": "UpgradeTargetingRule",
          "description": "Offer targeting rule for upgrading users' existing plans."
        }
      }
    },
    "PartialRefund": {
      "description": "A partial refund of a transaction.",
      "type": "object",
      "properties": {
        "refundId": {
          "description": "Required. A unique id distinguishing this partial refund. If the refund is successful, subsequent refunds with the same id will fail. Must be unique across refunds for one individual transaction.",
          "type": "string"
        },
        "refundPreTaxAmount": {
          "$ref": "Price",
          "description": "Required. The pre-tax amount of the partial refund. Should be less than the remaining pre-tax amount of the transaction."
        }
      },
      "id": "PartialRefund"
    },
    "Abi": {
      "type": "object",
      "id": "Abi",
      "description": "Represents an Abi.",
      "properties": {
        "alias": {
          "enum": [
            "UNSPECIFIED_CPU_ARCHITECTURE",
            "ARMEABI",
            "ARMEABI_V7A",
            "ARM64_V8A",
            "X86",
            "X86_64",
            "RISCV64"
          ],
          "enumDescriptions": [
            "Unspecified abi.",
            "ARMEABI abi.",
            "ARMEABI_V7A abi.",
            "ARM64_V8A abi.",
            "X86 abi.",
            "X86_64 abi.",
            "RISCV64 abi."
          ],
          "type": "string",
          "description": "Alias for an abi."
        }
      }
    },
    "MultiAbi": {
      "id": "MultiAbi",
      "description": "Represents a list of apis.",
      "properties": {
        "abi": {
          "description": "A list of targeted ABIs, as represented by the Android Platform",
          "type": "array",
          "items": {
            "$ref": "Abi"
          }
        }
      },
      "type": "object"
    },
    "User": {
      "id": "User",
      "description": "A user resource.",
      "type": "object",
      "properties": {
        "partial": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether there are more permissions for the user that are not represented here. This can happen if the caller does not have permission to manage all apps in the account. This is also `true` if this user is the account owner. If this field is `true`, it should be taken as a signal that this user cannot be fully managed via the API. That is, the API caller is not be able to manage all of the permissions this user holds, either because it doesn't know about them or because the user is the account owner."
        },
        "grants": {
          "items": {
            "$ref": "Grant"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. Per-app permissions for the user."
        },
        "accessState": {
          "enum": [
            "ACCESS_STATE_UNSPECIFIED",
            "INVITED",
            "INVITATION_EXPIRED",
            "ACCESS_GRANTED",
            "ACCESS_EXPIRED"
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. The state of the user's access to the Play Console.",
          "enumDescriptions": [
            "Unknown or unspecified access state.",
            "User is invited but has not yet accepted the invitation.",
            "Invitation has expired.",
            "User has accepted an invitation and has access to the Play Console.",
            "Account access has expired."
          ]
        },
        "expirationTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which the user's access expires, if set. When setting this value, it must always be in the future."
        },
        "name": {
          "description": "Required. Resource name for this user, following the pattern \"developers/{developer}/users/{email}\".",
          "type": "string"
        },
        "developerAccountPermissions": {
          "items": {
            "type": "string",
            "enum": [
              "DEVELOPER_LEVEL_PERMISSION_UNSPECIFIED",
              "CAN_SEE_ALL_APPS",
              "CAN_VIEW_FINANCIAL_DATA_GLOBAL",
              "CAN_MANAGE_PERMISSIONS_GLOBAL",
              "CAN_EDIT_GAMES_GLOBAL",
              "CAN_PUBLISH_GAMES_GLOBAL",
              "CAN_REPLY_TO_REVIEWS_GLOBAL",
              "CAN_MANAGE_PUBLIC_APKS_GLOBAL",
              "CAN_MANAGE_TRACK_APKS_GLOBAL",
              "CAN_MANAGE_TRACK_USERS_GLOBAL",
              "CAN_MANAGE_PUBLIC_LISTING_GLOBAL",
              "CAN_MANAGE_DRAFT_APPS_GLOBAL",
              "CAN_CREATE_MANAGED_PLAY_APPS_GLOBAL",
              "CAN_CHANGE_MANAGED_PLAY_SETTING_GLOBAL",
              "CAN_MANAGE_ORDERS_GLOBAL",
              "CAN_MANAGE_APP_CONTENT_GLOBAL",
              "CAN_VIEW_NON_FINANCIAL_DATA_GLOBAL",
              "CAN_VIEW_APP_QUALITY_GLOBAL"
            ],
            "enumDescriptions": [
              "Unknown or unspecified permission.",
              "View app information and download bulk reports (read-only).",
              "View financial data, orders, and cancellation survey responses.",
              "Admin (all permissions).",
              "Edit Play Games Services projects.",
              "Publish Play Games Services projects.",
              "Reply to reviews.",
              "Release to production, exclude devices, and use app signing by Google Play.",
              "Release to testing tracks.",
              "Manage testing tracks and edit tester lists.",
              "Manage store presence.",
              "Create, edit, and delete draft apps.",
              "Create and publish private apps to your organization.",
              "Choose whether apps are public, or only available to your organization.",
              "Manage orders and subscriptions.",
              "Manage policy related pages on all apps for the developer.",
              "View app information and download bulk reports (read-only).",
              "View app quality information for all apps for the developer."
            ]
          },
          "description": "Permissions for the user which apply across the developer account.",
          "type": "array"
        },
        "email": {
          "type": "string",
          "description": "Immutable. The user's email address."
        }
      }
    },
    "RegionalSubscriptionOfferConfig": {
      "description": "Configuration for a subscription offer in a single region.",
      "properties": {
        "newSubscriberAvailability": {
          "type": "boolean",
          "description": "Whether the subscription offer in the specified region is available for new subscribers. Existing subscribers will not have their subscription cancelled if this value is set to false. If not specified, this will default to false."
        },
        "regionCode": {
          "type": "string",
          "description": "Required. Immutable. Region code this configuration applies to, as defined by ISO 3166-2, e.g. \"US\"."
        }
      },
      "type": "object",
      "id": "RegionalSubscriptionOfferConfig"
    },
    "Bundle": {
      "description": "Information about an app bundle. The resource for BundlesService.",
      "id": "Bundle",
      "type": "object",
      "properties": {
        "versionCode": {
          "format": "int32",
          "description": "The version code of the Android App Bundle, as specified in the Android App Bundle's base module APK manifest file.",
          "type": "integer"
        },
        "sha256": {
          "type": "string",
          "description": "A sha256 hash of the upload payload, encoded as a hex string and matching the output of the sha256sum command."
        },
        "sha1": {
          "description": "A sha1 hash of the upload payload, encoded as a hex string and matching the output of the sha1sum command.",
          "type": "string"
        }
      }
    },
    "ArchiveSubscriptionRequest": {
      "type": "object",
      "properties": {},
      "id": "ArchiveSubscriptionRequest",
      "description": "Request message for ArchiveSubscription."
    },
    "CanceledStateContext": {
      "properties": {
        "developerInitiatedCancellation": {
          "$ref": "DeveloperInitiatedCancellation",
          "description": "Subscription was canceled by the developer."
        },
        "replacementCancellation": {
          "$ref": "ReplacementCancellation",
          "description": "Subscription was replaced by a new subscription."
        },
        "systemInitiatedCancellation": {
          "$ref": "SystemInitiatedCancellation",
          "description": "Subscription was canceled by the system, for example because of a billing problem."
        },
        "userInitiatedCancellation": {
          "$ref": "UserInitiatedCancellation",
          "description": "Subscription was canceled by user."
        }
      },
      "id": "CanceledStateContext",
      "description": "Information specific to a subscription in canceled state.",
      "type": "object"
    },
    "ScreenDensity": {
      "properties": {
        "densityAlias": {
          "enum": [
            "DENSITY_UNSPECIFIED",
            "NODPI",
            "LDPI",
            "MDPI",
            "TVDPI",
            "HDPI",
            "XHDPI",
            "XXHDPI",
            "XXXHDPI"
          ],
          "description": "Alias for a screen density.",
          "enumDescriptions": [
            "Unspecified screen density.",
            "NODPI screen density.",
            "LDPI screen density.",
            "MDPI screen density.",
            "TVDPI screen density.",
            "HDPI screen density.",
            "XHDPI screen density.",
            "XXHDPI screen density.",
            "XXXHDPI screen density."
          ],
          "type": "string"
        },
        "densityDpi": {
          "type": "integer",
          "format": "int32",
          "description": "Value for density dpi."
        }
      },
      "description": "Represents a screen density.",
      "id": "ScreenDensity",
      "type": "object"
    },
    "Variant": {
      "type": "object",
      "description": "APK that is suitable for inclusion in a system image. The resource of SystemApksService.",
      "id": "Variant",
      "properties": {
        "deviceSpec": {
          "$ref": "DeviceSpec",
          "description": "The device spec used to generate the APK."
        },
        "options": {
          "$ref": "SystemApkOptions",
          "description": "Optional. Options applied to the generated APK."
        },
        "variantId": {
          "description": "Output only. The ID of a previously created system APK variant.",
          "type": "integer",
          "readOnly": true,
          "format": "uint32"
        }
      }
    },
    "SubscriptionOffer": {
      "id": "SubscriptionOffer",
      "properties": {
        "phases": {
          "type": "array",
          "items": {
            "$ref": "SubscriptionOfferPhase"
          },
          "description": "Required. The phases of this subscription offer. Must contain at least one entry, and may contain at most five. Users will always receive all these phases in the specified order. Phases may not be added, removed, or reordered after initial creation."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Default value, should never be used.",
            "The subscription offer is not and has never been available to users.",
            "The subscription offer is available to new and existing users.",
            "The subscription offer is not available to new users. Existing users retain access."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "ACTIVE",
            "INACTIVE"
          ],
          "readOnly": true,
          "description": "Output only. The current state of this offer. Can be changed using Activate and Deactivate actions. NB: the base plan state supersedes this state, so an active offer may not be available if the base plan is not active."
        },
        "regionalConfigs": {
          "items": {
            "$ref": "RegionalSubscriptionOfferConfig"
          },
          "description": "Required. The region-specific configuration of this offer. Must contain at least one entry.",
          "type": "array"
        },
        "offerId": {
          "description": "Required. Immutable. Unique ID of this subscription offer. Must be unique within the base plan.",
          "type": "string"
        },
        "basePlanId": {
          "type": "string",
          "description": "Required. Immutable. The ID of the base plan to which this offer is an extension."
        },
        "packageName": {
          "type": "string",
          "description": "Required. Immutable. The package name of the app the parent subscription belongs to."
        },
        "offerTags": {
          "description": "List of up to 20 custom tags specified for this offer, and returned to the app through the billing library.",
          "type": "array",
          "items": {
            "$ref": "OfferTag"
          }
        },
        "targeting": {
          "$ref": "SubscriptionOfferTargeting",
          "description": "The requirements that users need to fulfil to be eligible for this offer. Represents the requirements that Play will evaluate to decide whether an offer should be returned. Developers may further filter these offers themselves."
        },
        "productId": {
          "type": "string",
          "description": "Required. Immutable. The ID of the parent subscription this offer belongs to."
        },
        "otherRegionsConfig": {
          "$ref": "OtherRegionsSubscriptionOfferConfig",
          "description": "The configuration for any new locations Play may launch in the future."
        }
      },
      "type": "object",
      "description": "A single, temporary offer"
    },
    "PageInfo": {
      "type": "object",
      "properties": {
        "startIndex": {
          "format": "int32",
          "description": "Index of the first result returned in the current page.",
          "type": "integer"
        },
        "resultPerPage": {
          "description": "Maximum number of results returned in one page. ! The number of results included in the API response.",
          "type": "integer",
          "format": "int32"
        },
        "totalResults": {
          "format": "int32",
          "description": "Total number of results available on the backend ! The total number of results in the result set.",
          "type": "integer"
        }
      },
      "id": "PageInfo",
      "description": "Information about the current page. List operations that supports paging return only one \"page\" of results. This protocol buffer message describes the page that has been returned."
    },
    "OtherRegionsBasePlanConfig": {
      "type": "object",
      "id": "OtherRegionsBasePlanConfig",
      "description": "Pricing information for any new locations Play may launch in.",
      "properties": {
        "eurPrice": {
          "$ref": "Money",
          "description": "Required. Price in EUR to use for any new locations Play may launch in."
        },
        "newSubscriberAvailability": {
          "type": "boolean",
          "description": "Whether the base plan is available for new subscribers in any new locations Play may launch in. If not specified, this will default to false."
        },
        "usdPrice": {
          "description": "Required. Price in USD to use for any new locations Play may launch in.",
          "$ref": "Money"
        }
      }
    },
    "TrackTargetedCountry": {
      "description": "Representation of a single country where the contents of a track are available.",
      "id": "TrackTargetedCountry",
      "type": "object",
      "properties": {
        "countryCode": {
          "description": "The country to target, as a two-letter CLDR code.",
          "type": "string"
        }
      }
    },
    "ListSubscriptionsResponse": {
      "id": "ListSubscriptionsResponse",
      "description": "Response message for ListSubscriptions.",
      "type": "object",
      "properties": {
        "subscriptions": {
          "description": "The subscriptions from the specified app.",
          "items": {
            "$ref": "Subscription"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "SplitApkVariant": {
      "properties": {
        "targeting": {
          "$ref": "VariantTargeting",
          "description": "Variant-level targeting."
        },
        "apkSet": {
          "type": "array",
          "description": "Set of APKs, one set per module.",
          "items": {
            "$ref": "ApkSet"
          }
        },
        "variantNumber": {
          "format": "int32",
          "description": "Number of the variant, starting at 0 (unless overridden). A device will receive APKs from the first variant that matches the device configuration, with higher variant numbers having priority over lower variant numbers.",
          "type": "integer"
        }
      },
      "description": "Variant is a group of APKs that covers a part of the device configuration space. APKs from multiple variants are never combined on one device.",
      "id": "SplitApkVariant",
      "type": "object"
    },
    "RecurringExternalTransaction": {
      "properties": {
        "initialExternalTransactionId": {
          "description": "The external transaction id of the first transaction of this recurring series of transactions. For example, for a subscription this would be the transaction id of the first payment. Required when creating recurring external transactions.",
          "type": "string"
        },
        "externalSubscription": {
          "$ref": "ExternalSubscription",
          "description": "Details of an external subscription."
        },
        "externalTransactionToken": {
          "type": "string",
          "description": "Input only. Provided during the call to Create. Retrieved from the client when the alternative billing flow is launched. Required only for the initial purchase."
        }
      },
      "type": "object",
      "description": "Represents a transaction that is part of a recurring series of payments. This can be a subscription or a one-time product with multiple payments (such as preorder).",
      "id": "RecurringExternalTransaction"
    },
    "ListSubscriptionOffersResponse": {
      "description": "Response message for ListSubscriptionOffers.",
      "id": "ListSubscriptionOffersResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "subscriptionOffers": {
          "description": "The subscription offers from the specified subscription.",
          "items": {
            "$ref": "SubscriptionOffer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SubscriptionPurchaseV2": {
      "description": "Indicates the status of a user's subscription purchase.",
      "type": "object",
      "id": "SubscriptionPurchaseV2",
      "properties": {
        "subscriptionState": {
          "description": "The current state of the subscription.",
          "enum": [
            "SUBSCRIPTION_STATE_UNSPECIFIED",
            "SUBSCRIPTION_STATE_PENDING",
            "SUBSCRIPTION_STATE_ACTIVE",
            "SUBSCRIPTION_STATE_PAUSED",
            "SUBSCRIPTION_STATE_IN_GRACE_PERIOD",
            "SUBSCRIPTION_STATE_ON_HOLD",
            "SUBSCRIPTION_STATE_CANCELED",
            "SUBSCRIPTION_STATE_EXPIRED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified subscription state.",
            "Subscription was created but awaiting payment during signup. In this state, all items are awaiting payment.",
            "Subscription is active. - (1) If the subscription is an auto renewing plan, at least one item is auto_renew_enabled and not expired. - (2) If the subscription is a prepaid plan, at least one item is not expired.",
            "Subscription is paused. The state is only available when the subscription is an auto renewing plan. In this state, all items are in paused state.",
            "Subscription is in grace period. The state is only available when the subscription is an auto renewing plan. In this state, all items are in grace period.",
            "Subscription is on hold (suspended). The state is only available when the subscription is an auto renewing plan. In this state, all items are on hold.",
            "Subscription is canceled but not expired yet. The state is only available when the subscription is an auto renewing plan. All items have auto_renew_enabled set to false.",
            "Subscription is expired. All items have expiry_time in the past."
          ]
        },
        "subscribeWithGoogleInfo": {
          "$ref": "SubscribeWithGoogleInfo",
          "description": "User profile associated with purchases made with 'Subscribe with Google'."
        },
        "kind": {
          "type": "string",
          "description": "This kind represents a SubscriptionPurchaseV2 object in the androidpublisher service."
        },
        "externalAccountIdentifiers": {
          "description": "User account identifier in the third-party service.",
          "$ref": "ExternalAccountIdentifiers"
        },
        "startTime": {
          "format": "google-datetime",
          "description": "Time at which the subscription was granted. Not set for pending subscriptions (subscription was created but awaiting payment during signup).",
          "type": "string"
        },
        "regionCode": {
          "description": "ISO 3166-1 alpha-2 billing country/region code of the user at the time the subscription was granted.",
          "type": "string"
        },
        "acknowledgementState": {
          "enumDescriptions": [
            "Unspecified acknowledgement state.",
            "The subscription is not acknowledged yet.",
            "The subscription is acknowledged."
          ],
          "type": "string",
          "description": "The acknowledgement state of the subscription.",
          "enum": [
            "ACKNOWLEDGEMENT_STATE_UNSPECIFIED",
            "ACKNOWLEDGEMENT_STATE_PENDING",
            "ACKNOWLEDGEMENT_STATE_ACKNOWLEDGED"
          ]
        },
        "pausedStateContext": {
          "description": "Additional context around paused subscriptions. Only present if the subscription currently has subscription_state SUBSCRIPTION_STATE_PAUSED.",
          "$ref": "PausedStateContext"
        },
        "canceledStateContext": {
          "description": "Additional context around canceled subscriptions. Only present if the subscription currently has subscription_state SUBSCRIPTION_STATE_CANCELED.",
          "$ref": "CanceledStateContext"
        },
        "testPurchase": {
          "description": "Only present if this subscription purchase is a test purchase.",
          "$ref": "TestPurchase"
        },
        "linkedPurchaseToken": {
          "description": "The purchase token of the old subscription if this subscription is one of the following: * Re-signup of a canceled but non-lapsed subscription * Upgrade/downgrade from a previous subscription. * Convert from prepaid to auto renewing subscription. * Convert from an auto renewing subscription to prepaid. * Topup a prepaid subscription.",
          "type": "string"
        },
        "lineItems": {
          "description": "Item-level info for a subscription purchase. The items in the same purchase should be either all with AutoRenewingPlan or all with PrepaidPlan.",
          "type": "array",
          "items": {
            "$ref": "SubscriptionPurchaseLineItem"
          }
        },
        "latestOrderId": {
          "description": "The order id of the latest order associated with the purchase of the subscription. For autoRenewing subscription, this is the order id of signup order if it is not renewed yet, or the last recurring order id (success, pending, or declined order). For prepaid subscription, this is the order id associated with the queried purchase token.",
          "type": "string"
        }
      }
    },
    "DeferredItemReplacement": {
      "type": "object",
      "id": "DeferredItemReplacement",
      "description": "Information related to deferred item replacement.",
      "properties": {
        "productId": {
          "type": "string",
          "description": "The product_id going to replace the existing product_id."
        }
      }
    },
    "DeviceMetadata": {
      "properties": {
        "cpuMake": {
          "type": "string",
          "description": "Device CPU make, e.g. \"Qualcomm\""
        },
        "screenHeightPx": {
          "format": "int32",
          "description": "Screen height in pixels",
          "type": "integer"
        },
        "screenWidthPx": {
          "type": "integer",
          "description": "Screen width in pixels",
          "format": "int32"
        },
        "screenDensityDpi": {
          "type": "integer",
          "description": "Screen density in DPI",
          "format": "int32"
        },
        "manufacturer": {
          "description": "Device manufacturer (e.g. Motorola)",
          "type": "string"
        },
        "nativePlatform": {
          "description": "Comma separated list of native platforms (e.g. \"arm\", \"arm7\")",
          "type": "string"
        },
        "cpuModel": {
          "description": "Device CPU model, e.g. \"MSM8974\"",
          "type": "string"
        },
        "glEsVersion": {
          "format": "int32",
          "description": "OpenGL version",
          "type": "integer"
        },
        "deviceClass": {
          "type": "string",
          "description": "Device class (e.g. tablet)"
        },
        "productName": {
          "type": "string",
          "description": "Device model name (e.g. Droid)"
        },
        "ramMb": {
          "format": "int32",
          "type": "integer",
          "description": "Device RAM in Megabytes, e.g. \"2048\""
        }
      },
      "type": "object",
      "description": "Characteristics of the user's device.",
      "id": "DeviceMetadata"
    },
    "PausedStateContext": {
      "type": "object",
      "description": "Information specific to a subscription in paused state.",
      "id": "PausedStateContext",
      "properties": {
        "autoResumeTime": {
          "type": "string",
          "description": "Time at which the subscription will be automatically resumed.",
          "format": "google-datetime"
        }
      }
    }
  },
  "description": "Lets Android application developers access their Google Play accounts. At a high level, the expected workflow is to \"insert\" an Edit, make changes as necessary, and then \"commit\" it. ",
  "mtlsRootUrl": "https://androidpublisher.mtls.googleapis.com/",
  "canonicalName": "Android Publisher",
  "parameters": {
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "description": "Data format for response."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    }
  },
  "basePath": "",
  "baseUrl": "https://androidpublisher.googleapis.com/",
  "batchPath": "batch",
  "documentationLink": "https://developers.google.com/android-publisher",
  "id": "androidpublisher:v3",
  "servicePath": ""
}

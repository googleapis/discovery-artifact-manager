{
  "id": "androidpublisher:v3",
  "baseUrl": "https://androidpublisher.googleapis.com/",
  "documentationLink": "https://developers.google.com/android-publisher",
  "description": "Lets Android application developers access their Google Play accounts.",
  "rootUrl": "https://androidpublisher.googleapis.com/",
  "protocol": "rest",
  "mtlsRootUrl": "https://androidpublisher.mtls.googleapis.com/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "servicePath": "",
  "kind": "discovery#restDescription",
  "resources": {
    "reviews": {
      "methods": {
        "list": {
          "description": "Lists all reviews.",
          "id": "androidpublisher.reviews.list",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameters": {
            "packageName": {
              "location": "path",
              "description": "Package name of the app.",
              "type": "string",
              "required": true
            },
            "token": {
              "description": "Pagination token. If empty, list starts at the first review.",
              "type": "string",
              "location": "query"
            },
            "translationLanguage": {
              "type": "string",
              "description": "Language localization code.",
              "location": "query"
            },
            "startIndex": {
              "location": "query",
              "format": "uint32",
              "type": "integer",
              "description": "The index of the first element to return."
            },
            "maxResults": {
              "description": "How many results the list operation should return.",
              "format": "uint32",
              "type": "integer",
              "location": "query"
            }
          },
          "path": "androidpublisher/v3/applications/{packageName}/reviews",
          "flatPath": "androidpublisher/v3/applications/{packageName}/reviews",
          "httpMethod": "GET",
          "parameterOrder": [
            "packageName"
          ],
          "response": {
            "$ref": "ReviewsListResponse"
          }
        },
        "get": {
          "httpMethod": "GET",
          "response": {
            "$ref": "Review"
          },
          "id": "androidpublisher.reviews.get",
          "parameterOrder": [
            "packageName",
            "reviewId"
          ],
          "flatPath": "androidpublisher/v3/applications/{packageName}/reviews/{reviewId}",
          "description": "Gets a single review.",
          "parameters": {
            "packageName": {
              "location": "path",
              "description": "Package name of the app.",
              "required": true,
              "type": "string"
            },
            "translationLanguage": {
              "location": "query",
              "description": "Language localization code.",
              "type": "string"
            },
            "reviewId": {
              "location": "path",
              "description": "Unique identifier for a review.",
              "type": "string",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "path": "androidpublisher/v3/applications/{packageName}/reviews/{reviewId}"
        },
        "reply": {
          "path": "androidpublisher/v3/applications/{packageName}/reviews/{reviewId}:reply",
          "response": {
            "$ref": "ReviewsReplyResponse"
          },
          "request": {
            "$ref": "ReviewsReplyRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameters": {
            "reviewId": {
              "required": true,
              "description": "Unique identifier for a review.",
              "location": "path",
              "type": "string"
            },
            "packageName": {
              "required": true,
              "location": "path",
              "description": "Package name of the app.",
              "type": "string"
            }
          },
          "description": "Replies to a single review, or updates an existing reply.",
          "id": "androidpublisher.reviews.reply",
          "flatPath": "androidpublisher/v3/applications/{packageName}/reviews/{reviewId}:reply",
          "httpMethod": "POST",
          "parameterOrder": [
            "packageName",
            "reviewId"
          ]
        }
      }
    },
    "applications": {
      "resources": {
        "deviceTierConfigs": {
          "methods": {
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "DeviceTierConfig"
              },
              "description": "Creates a new device tier config for an app.",
              "request": {
                "$ref": "DeviceTierConfig"
              },
              "parameters": {
                "packageName": {
                  "description": "Package name of the app.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "allowUnknownDevices": {
                  "location": "query",
                  "description": "Whether the service should accept device IDs that are unknown to Play's device catalog.",
                  "type": "boolean"
                }
              },
              "httpMethod": "POST",
              "id": "androidpublisher.applications.deviceTierConfigs.create",
              "flatPath": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs",
              "parameterOrder": [
                "packageName"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs"
            },
            "list": {
              "path": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs",
              "response": {
                "$ref": "ListDeviceTierConfigsResponse"
              },
              "id": "androidpublisher.applications.deviceTierConfigs.list",
              "description": "Returns created device tier configs, ordered by descending creation time.",
              "flatPath": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs",
              "parameterOrder": [
                "packageName"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token, received from a previous `ListDeviceTierConfigs` call. Provide this to retrieve the subsequent page."
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of device tier configs to return. The service may return fewer than this value. If unspecified, at most 10 device tier configs will be returned. The maximum value for this field is 100; values above 100 will be coerced to 100. Device tier configs will be ordered by descending creation time.",
                  "format": "int32",
                  "location": "query"
                },
                "packageName": {
                  "type": "string",
                  "description": "Package name of the app.",
                  "location": "path",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "httpMethod": "GET"
            },
            "get": {
              "path": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs/{deviceTierConfigId}",
              "response": {
                "$ref": "DeviceTierConfig"
              },
              "httpMethod": "GET",
              "description": "Returns a particular device tier config.",
              "flatPath": "androidpublisher/v3/applications/{packageName}/deviceTierConfigs/{deviceTierConfigId}",
              "parameterOrder": [
                "packageName",
                "deviceTierConfigId"
              ],
              "parameters": {
                "packageName": {
                  "required": true,
                  "location": "path",
                  "description": "Package name of the app.",
                  "type": "string"
                },
                "deviceTierConfigId": {
                  "required": true,
                  "format": "int64",
                  "type": "string",
                  "location": "path",
                  "description": "Required. Id of an existing device tier config."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.applications.deviceTierConfigs.get"
            }
          }
        }
      }
    },
    "purchases": {
      "resources": {
        "products": {
          "methods": {
            "get": {
              "id": "androidpublisher.purchases.products.get",
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}",
              "description": "Checks the purchase and consumption status of an inapp item.",
              "parameters": {
                "productId": {
                  "required": true,
                  "description": "The inapp product SKU (for example, 'com.some.thing.inapp1').",
                  "type": "string",
                  "location": "path"
                },
                "token": {
                  "description": "The token provided to the user's device when the inapp product was purchased.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "packageName": {
                  "required": true,
                  "type": "string",
                  "description": "The package name of the application the inapp product was sold in (for example, 'com.some.thing').",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "packageName",
                "productId",
                "token"
              ],
              "response": {
                "$ref": "ProductPurchase"
              },
              "path": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ]
            },
            "acknowledge": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "request": {
                "$ref": "ProductPurchasesAcknowledgeRequest"
              },
              "parameters": {
                "packageName": {
                  "location": "path",
                  "description": "The package name of the application the inapp product was sold in (for example, 'com.some.thing').",
                  "type": "string",
                  "required": true
                },
                "productId": {
                  "required": true,
                  "location": "path",
                  "description": "The inapp product SKU (for example, 'com.some.thing.inapp1').",
                  "type": "string"
                },
                "token": {
                  "type": "string",
                  "description": "The token provided to the user's device when the inapp product was purchased.",
                  "location": "path",
                  "required": true
                }
              },
              "parameterOrder": [
                "packageName",
                "productId",
                "token"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}:acknowledge",
              "id": "androidpublisher.purchases.products.acknowledge",
              "httpMethod": "POST",
              "description": "Acknowledges a purchase of an inapp item.",
              "path": "androidpublisher/v3/applications/{packageName}/purchases/products/{productId}/tokens/{token}:acknowledge"
            }
          }
        },
        "voidedpurchases": {
          "methods": {
            "list": {
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/voidedpurchases",
              "description": "Lists the purchases that were canceled, refunded or charged-back.",
              "id": "androidpublisher.purchases.voidedpurchases.list",
              "parameters": {
                "endTime": {
                  "format": "int64",
                  "description": "The time, in milliseconds since the Epoch, of the newest voided purchase that you want to see in the response. The value of this parameter cannot be greater than the current time and is ignored if a pagination token is set. Default value is current time. Note: This filter is applied on the time at which the record is seen as voided by our systems and not the actual voided time returned in the response.",
                  "type": "string",
                  "location": "query"
                },
                "packageName": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The package name of the application for which voided purchases need to be returned (for example, 'com.some.thing')."
                },
                "startTime": {
                  "location": "query",
                  "description": "The time, in milliseconds since the Epoch, of the oldest voided purchase that you want to see in the response. The value of this parameter cannot be older than 30 days and is ignored if a pagination token is set. Default value is current time minus 30 days. Note: This filter is applied on the time at which the record is seen as voided by our systems and not the actual voided time returned in the response.",
                  "type": "string",
                  "format": "int64"
                },
                "type": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "The type of voided purchases that you want to see in the response. Possible values are: 0. Only voided in-app product purchases will be returned in the response. This is the default value. 1. Both voided in-app purchases and voided subscription purchases will be returned in the response. Note: Before requesting to receive voided subscription purchases, you must switch to use orderId in the response which uniquely identifies one-time purchases and subscriptions. Otherwise, you will receive multiple subscription orders with the same PurchaseToken, because subscription renewal orders share the same PurchaseToken."
                },
                "maxResults": {
                  "format": "uint32",
                  "type": "integer",
                  "description": "Defines how many results the list operation should return. The default number depends on the resource collection.",
                  "location": "query"
                },
                "token": {
                  "description": "Defines the token of the page to return, usually taken from TokenPagination. This can only be used if token paging is enabled.",
                  "type": "string",
                  "location": "query"
                },
                "startIndex": {
                  "description": "Defines the index of the first element to return. This can only be used if indexed paging is enabled.",
                  "format": "uint32",
                  "type": "integer",
                  "location": "query"
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "packageName"
              ],
              "response": {
                "$ref": "VoidedPurchasesListResponse"
              },
              "path": "androidpublisher/v3/applications/{packageName}/purchases/voidedpurchases",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ]
            }
          }
        },
        "subscriptions": {
          "methods": {
            "refund": {
              "description": "Refunds a user's subscription purchase, but the subscription remains valid until its expiration time and it will continue to recur.",
              "httpMethod": "POST",
              "id": "androidpublisher.purchases.subscriptions.refund",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:refund",
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:refund",
              "parameters": {
                "packageName": {
                  "location": "path",
                  "required": true,
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "type": "string"
                },
                "token": {
                  "required": true,
                  "description": "The token provided to the user's device when the subscription was purchased.",
                  "type": "string",
                  "location": "path"
                },
                "subscriptionId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "\"The purchased subscription ID (for example, 'monthly001')."
                }
              }
            },
            "get": {
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}",
              "parameters": {
                "subscriptionId": {
                  "location": "path",
                  "description": "The purchased subscription ID (for example, 'monthly001').",
                  "type": "string",
                  "required": true
                },
                "token": {
                  "type": "string",
                  "location": "path",
                  "description": "The token provided to the user's device when the subscription was purchased.",
                  "required": true
                },
                "packageName": {
                  "location": "path",
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "type": "string",
                  "required": true
                }
              },
              "description": "Checks whether a user's subscription purchase is valid and returns its expiry time.",
              "response": {
                "$ref": "SubscriptionPurchase"
              },
              "id": "androidpublisher.purchases.subscriptions.get",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}",
              "httpMethod": "GET"
            },
            "defer": {
              "description": "Defers a user's subscription purchase until a specified future expiration time.",
              "request": {
                "$ref": "SubscriptionPurchasesDeferRequest"
              },
              "parameters": {
                "token": {
                  "location": "path",
                  "type": "string",
                  "description": "The token provided to the user's device when the subscription was purchased.",
                  "required": true
                },
                "packageName": {
                  "location": "path",
                  "required": true,
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "type": "string"
                },
                "subscriptionId": {
                  "required": true,
                  "location": "path",
                  "description": "The purchased subscription ID (for example, 'monthly001').",
                  "type": "string"
                }
              },
              "id": "androidpublisher.purchases.subscriptions.defer",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:defer",
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:defer",
              "response": {
                "$ref": "SubscriptionPurchasesDeferResponse"
              },
              "httpMethod": "POST"
            },
            "acknowledge": {
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:acknowledge",
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:acknowledge",
              "parameters": {
                "subscriptionId": {
                  "location": "path",
                  "type": "string",
                  "description": "The purchased subscription ID (for example, 'monthly001').",
                  "required": true
                },
                "token": {
                  "location": "path",
                  "description": "The token provided to the user's device when the subscription was purchased.",
                  "required": true,
                  "type": "string"
                },
                "packageName": {
                  "location": "path",
                  "required": true,
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.purchases.subscriptions.acknowledge",
              "description": "Acknowledges a subscription purchase.",
              "request": {
                "$ref": "SubscriptionPurchasesAcknowledgeRequest"
              },
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ],
              "httpMethod": "POST"
            },
            "revoke": {
              "httpMethod": "POST",
              "description": "Refunds and immediately revokes a user's subscription purchase. Access to the subscription will be terminated immediately and it will stop recurring.",
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ],
              "parameters": {
                "subscriptionId": {
                  "location": "path",
                  "type": "string",
                  "description": "The purchased subscription ID (for example, 'monthly001').",
                  "required": true
                },
                "token": {
                  "location": "path",
                  "required": true,
                  "description": "The token provided to the user's device when the subscription was purchased.",
                  "type": "string"
                },
                "packageName": {
                  "type": "string",
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "required": true,
                  "location": "path"
                }
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:revoke",
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:revoke",
              "id": "androidpublisher.purchases.subscriptions.revoke",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ]
            },
            "cancel": {
              "parameters": {
                "packageName": {
                  "location": "path",
                  "required": true,
                  "description": "The package name of the application for which this subscription was purchased (for example, 'com.some.thing').",
                  "type": "string"
                },
                "token": {
                  "required": true,
                  "description": "The token provided to the user's device when the subscription was purchased.",
                  "type": "string",
                  "location": "path"
                },
                "subscriptionId": {
                  "location": "path",
                  "description": "The purchased subscription ID (for example, 'monthly001').",
                  "required": true,
                  "type": "string"
                }
              },
              "description": "Cancels a user's subscription purchase. The subscription remains valid until its expiration time.",
              "parameterOrder": [
                "packageName",
                "subscriptionId",
                "token"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:cancel",
              "path": "androidpublisher/v3/applications/{packageName}/purchases/subscriptions/{subscriptionId}/tokens/{token}:cancel",
              "id": "androidpublisher.purchases.subscriptions.cancel",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ]
            }
          }
        }
      }
    },
    "orders": {
      "methods": {
        "refund": {
          "path": "androidpublisher/v3/applications/{packageName}/orders/{orderId}:refund",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "id": "androidpublisher.orders.refund",
          "parameters": {
            "revoke": {
              "description": "Whether to revoke the purchased item. If set to true, access to the subscription or in-app item will be terminated immediately. If the item is a recurring subscription, all future payments will also be terminated. Consumed in-app items need to be handled by developer's app. (optional).",
              "location": "query",
              "type": "boolean"
            },
            "orderId": {
              "description": "The order ID provided to the user when the subscription or in-app order was purchased.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "packageName": {
              "required": true,
              "description": "The package name of the application for which this subscription or in-app item was purchased (for example, 'com.some.thing').",
              "type": "string",
              "location": "path"
            }
          },
          "httpMethod": "POST",
          "flatPath": "androidpublisher/v3/applications/{packageName}/orders/{orderId}:refund",
          "description": "Refunds a user's subscription or in-app purchase order. Orders older than 1 year cannot be refunded.",
          "parameterOrder": [
            "packageName",
            "orderId"
          ]
        }
      }
    },
    "edits": {
      "resources": {
        "details": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "id": "androidpublisher.edits.details.get",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details",
              "response": {
                "$ref": "AppDetails"
              },
              "description": "Gets details of an app.",
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameters": {
                "packageName": {
                  "required": true,
                  "description": "Package name of the app.",
                  "type": "string",
                  "location": "path"
                },
                "editId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Identifier of the edit."
                }
              }
            },
            "update": {
              "description": "Updates details of an app.",
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "parameters": {
                "editId": {
                  "description": "Identifier of the edit.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "packageName": {
                  "location": "path",
                  "required": true,
                  "description": "Package name of the app.",
                  "type": "string"
                }
              },
              "request": {
                "$ref": "AppDetails"
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details",
              "httpMethod": "PUT",
              "response": {
                "$ref": "AppDetails"
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details",
              "id": "androidpublisher.edits.details.update"
            },
            "patch": {
              "description": "Patches details of an app.",
              "httpMethod": "PATCH",
              "parameters": {
                "packageName": {
                  "description": "Package name of the app.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "editId": {
                  "required": true,
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "AppDetails"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/details",
              "request": {
                "$ref": "AppDetails"
              },
              "id": "androidpublisher.edits.details.patch",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName",
                "editId"
              ]
            }
          }
        },
        "listings": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "httpMethod": "GET",
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings",
              "parameters": {
                "packageName": {
                  "description": "Package name of the app.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "editId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Identifier of the edit."
                }
              },
              "response": {
                "$ref": "ListingsListResponse"
              },
              "description": "Lists all localized store listings.",
              "id": "androidpublisher.edits.listings.list",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings"
            },
            "update": {
              "httpMethod": "PUT",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "response": {
                "$ref": "Listing"
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "description": "Creates or updates a localized store listing.",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "id": "androidpublisher.edits.listings.update",
              "request": {
                "$ref": "Listing"
              },
              "parameterOrder": [
                "packageName",
                "editId",
                "language"
              ],
              "parameters": {
                "editId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Identifier of the edit."
                },
                "language": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German)."
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              }
            },
            "patch": {
              "request": {
                "$ref": "Listing"
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "httpMethod": "PATCH",
              "parameterOrder": [
                "packageName",
                "editId",
                "language"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "parameters": {
                "editId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Identifier of the edit."
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "language": {
                  "type": "string",
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).",
                  "required": true,
                  "location": "path"
                }
              },
              "description": "Patches a localized store listing.",
              "response": {
                "$ref": "Listing"
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.edits.listings.patch"
            },
            "delete": {
              "parameters": {
                "editId": {
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "required": true,
                  "type": "string"
                },
                "packageName": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Package name of the app."
                },
                "language": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German)."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.edits.listings.delete",
              "description": "Deletes a localized store listing.",
              "parameterOrder": [
                "packageName",
                "editId",
                "language"
              ],
              "httpMethod": "DELETE",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}"
            },
            "deleteall": {
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "parameters": {
                "packageName": {
                  "description": "Package name of the app.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "editId": {
                  "type": "string",
                  "required": true,
                  "description": "Identifier of the edit.",
                  "location": "path"
                }
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings",
              "description": "Deletes all store listings.",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings",
              "id": "androidpublisher.edits.listings.deleteall",
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ]
            },
            "get": {
              "parameters": {
                "packageName": {
                  "description": "Package name of the app.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "language": {
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}",
              "httpMethod": "GET",
              "description": "Gets a localized store listing.",
              "response": {
                "$ref": "Listing"
              },
              "parameterOrder": [
                "packageName",
                "editId",
                "language"
              ],
              "id": "androidpublisher.edits.listings.get"
            }
          }
        },
        "tracks": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks",
              "description": "Lists all tracks.",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks",
              "response": {
                "$ref": "TracksListResponse"
              },
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "parameters": {
                "packageName": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Package name of the app."
                },
                "editId": {
                  "required": true,
                  "type": "string",
                  "description": "Identifier of the edit.",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.edits.tracks.list"
            },
            "update": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "httpMethod": "PUT",
              "response": {
                "$ref": "Track"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}",
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "parameters": {
                "editId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Identifier of the edit."
                },
                "packageName": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Package name of the app."
                },
                "track": {
                  "description": "Identifier of the track.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "id": "androidpublisher.edits.tracks.update",
              "description": "Updates a track.",
              "request": {
                "$ref": "Track"
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}"
            },
            "get": {
              "description": "Gets a track.",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}",
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}",
              "response": {
                "$ref": "Track"
              },
              "httpMethod": "GET",
              "parameters": {
                "track": {
                  "required": true,
                  "description": "Identifier of the track.",
                  "location": "path",
                  "type": "string"
                },
                "packageName": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Package name of the app."
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "id": "androidpublisher.edits.tracks.get"
            },
            "patch": {
              "response": {
                "$ref": "Track"
              },
              "parameters": {
                "packageName": {
                  "type": "string",
                  "location": "path",
                  "description": "Package name of the app.",
                  "required": true
                },
                "editId": {
                  "required": true,
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "type": "string"
                },
                "track": {
                  "type": "string",
                  "location": "path",
                  "description": "Identifier of the track.",
                  "required": true
                }
              },
              "httpMethod": "PATCH",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/tracks/{track}",
              "description": "Patches a track.",
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "id": "androidpublisher.edits.tracks.patch",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "request": {
                "$ref": "Track"
              }
            }
          }
        },
        "images": {
          "methods": {
            "delete": {
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}/{imageId}",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}/{imageId}",
              "httpMethod": "DELETE",
              "id": "androidpublisher.edits.images.delete",
              "parameters": {
                "editId": {
                  "required": true,
                  "description": "Identifier of the edit.",
                  "type": "string",
                  "location": "path"
                },
                "imageId": {
                  "location": "path",
                  "description": "Unique identifier an image within the set of images attached to this edit.",
                  "type": "string",
                  "required": true
                },
                "imageType": {
                  "description": "Type of the Image.",
                  "enum": [
                    "appImageTypeUnspecified",
                    "phoneScreenshots",
                    "sevenInchScreenshots",
                    "tenInchScreenshots",
                    "tvScreenshots",
                    "wearScreenshots",
                    "icon",
                    "featureGraphic",
                    "tvBanner"
                  ],
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "enumDescriptions": [
                    "Unspecified type. Do not use.",
                    "Phone screenshot.",
                    "Seven inch screenshot.",
                    "Ten inch screenshot.",
                    "TV screenshot.",
                    "Wear screenshot.",
                    "Icon.",
                    "Feature graphic.",
                    "TV banner."
                  ]
                },
                "language": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German)."
                },
                "packageName": {
                  "required": true,
                  "description": "Package name of the app.",
                  "location": "path",
                  "type": "string"
                }
              },
              "description": "Deletes the image (specified by id) from the edit.",
              "parameterOrder": [
                "packageName",
                "editId",
                "language",
                "imageType",
                "imageId"
              ]
            },
            "upload": {
              "response": {
                "$ref": "ImagesUploadResponse"
              },
              "id": "androidpublisher.edits.images.upload",
              "httpMethod": "POST",
              "mediaUpload": {
                "accept": [
                  "image/*"
                ],
                "protocols": {
                  "simple": {
                    "multipart": true,
                    "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}"
                  },
                  "resumable": {
                    "multipart": true,
                    "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}"
                  }
                },
                "maxSize": "15728640"
              },
              "parameterOrder": [
                "packageName",
                "editId",
                "language",
                "imageType"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
              "parameters": {
                "imageType": {
                  "enumDescriptions": [
                    "Unspecified type. Do not use.",
                    "Phone screenshot.",
                    "Seven inch screenshot.",
                    "Ten inch screenshot.",
                    "TV screenshot.",
                    "Wear screenshot.",
                    "Icon.",
                    "Feature graphic.",
                    "TV banner."
                  ],
                  "description": "Type of the Image.",
                  "enum": [
                    "appImageTypeUnspecified",
                    "phoneScreenshots",
                    "sevenInchScreenshots",
                    "tenInchScreenshots",
                    "tvScreenshots",
                    "wearScreenshots",
                    "icon",
                    "featureGraphic",
                    "tvBanner"
                  ],
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "language": {
                  "type": "string",
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). Providing a language that is not supported by the App is a no-op.",
                  "location": "path",
                  "required": true
                },
                "editId": {
                  "location": "path",
                  "required": true,
                  "description": "Identifier of the edit.",
                  "type": "string"
                },
                "packageName": {
                  "type": "string",
                  "location": "path",
                  "description": "Package name of the app.",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "supportsMediaUpload": true,
              "description": "Uploads an image of the specified language and image type, and adds to the edit.",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "description": "Lists all images. The response may be empty.",
              "response": {
                "$ref": "ImagesListResponse"
              },
              "parameterOrder": [
                "packageName",
                "editId",
                "language",
                "imageType"
              ],
              "parameters": {
                "editId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Identifier of the edit."
                },
                "imageType": {
                  "description": "Type of the Image. Providing an image type that refers to no images will return an empty response.",
                  "required": true,
                  "type": "string",
                  "enum": [
                    "appImageTypeUnspecified",
                    "phoneScreenshots",
                    "sevenInchScreenshots",
                    "tenInchScreenshots",
                    "tvScreenshots",
                    "wearScreenshots",
                    "icon",
                    "featureGraphic",
                    "tvBanner"
                  ],
                  "location": "path",
                  "enumDescriptions": [
                    "Unspecified type. Do not use.",
                    "Phone screenshot.",
                    "Seven inch screenshot.",
                    "Ten inch screenshot.",
                    "TV screenshot.",
                    "Wear screenshot.",
                    "Icon.",
                    "Feature graphic.",
                    "TV banner."
                  ]
                },
                "packageName": {
                  "required": true,
                  "description": "Package name of the app.",
                  "location": "path",
                  "type": "string"
                },
                "language": {
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). There must be a store listing for the specified language.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "httpMethod": "GET",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
              "id": "androidpublisher.edits.images.list"
            },
            "deleteall": {
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
              "id": "androidpublisher.edits.images.deleteall",
              "parameters": {
                "language": {
                  "type": "string",
                  "location": "path",
                  "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German). Providing a language that is not supported by the App is a no-op.",
                  "required": true
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "imageType": {
                  "enumDescriptions": [
                    "Unspecified type. Do not use.",
                    "Phone screenshot.",
                    "Seven inch screenshot.",
                    "Ten inch screenshot.",
                    "TV screenshot.",
                    "Wear screenshot.",
                    "Icon.",
                    "Feature graphic.",
                    "TV banner."
                  ],
                  "type": "string",
                  "enum": [
                    "appImageTypeUnspecified",
                    "phoneScreenshots",
                    "sevenInchScreenshots",
                    "tenInchScreenshots",
                    "tvScreenshots",
                    "wearScreenshots",
                    "icon",
                    "featureGraphic",
                    "tvBanner"
                  ],
                  "required": true,
                  "location": "path",
                  "description": "Type of the Image. Providing an image type that refers to no images is a no-op."
                },
                "editId": {
                  "required": true,
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "type": "string"
                }
              },
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/listings/{language}/{imageType}",
              "description": "Deletes all images for the specified language and image type. Returns an empty response if no images are found.",
              "response": {
                "$ref": "ImagesDeleteAllResponse"
              },
              "parameterOrder": [
                "packageName",
                "editId",
                "language",
                "imageType"
              ]
            }
          }
        },
        "apks": {
          "methods": {
            "addexternallyhosted": {
              "request": {
                "$ref": "ApksAddExternallyHostedRequest"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/externallyHosted",
              "id": "androidpublisher.edits.apks.addexternallyhosted",
              "description": "Creates a new APK without uploading the APK itself to Google Play, instead hosting the APK at a specified URL. This function is only available to organizations using Managed Play whose application is configured to restrict distribution to the organizations.",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "parameters": {
                "editId": {
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "type": "string",
                  "required": true
                },
                "packageName": {
                  "type": "string",
                  "description": "Package name of the app.",
                  "location": "path",
                  "required": true
                }
              },
              "response": {
                "$ref": "ApksAddExternallyHostedResponse"
              },
              "httpMethod": "POST",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/externallyHosted"
            },
            "upload": {
              "mediaUpload": {
                "maxSize": "10737418240",
                "protocols": {
                  "resumable": {
                    "multipart": true,
                    "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks"
                  },
                  "simple": {
                    "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks",
                    "multipart": true
                  }
                },
                "accept": [
                  "application/octet-stream",
                  "application/vnd.android.package-archive"
                ]
              },
              "description": "Uploads an APK and adds to the current edit.",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.edits.apks.upload",
              "supportsMediaUpload": true,
              "httpMethod": "POST",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks",
              "parameters": {
                "packageName": {
                  "description": "Package name of the app.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "editId": {
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "required": true,
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Apk"
              },
              "parameterOrder": [
                "packageName",
                "editId"
              ]
            },
            "list": {
              "response": {
                "$ref": "ApksListResponse"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks",
              "parameters": {
                "editId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Identifier of the edit."
                },
                "packageName": {
                  "location": "path",
                  "type": "string",
                  "description": "Package name of the app.",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.edits.apks.list",
              "httpMethod": "GET",
              "description": "Lists all current APKs of the app and edit.",
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks"
            }
          }
        },
        "testers": {
          "methods": {
            "patch": {
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "httpMethod": "PATCH",
              "parameters": {
                "packageName": {
                  "type": "string",
                  "required": true,
                  "description": "Package name of the app.",
                  "location": "path"
                },
                "editId": {
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "type": "string",
                  "required": true
                },
                "track": {
                  "type": "string",
                  "description": "The track to update.",
                  "required": true,
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Testers"
              },
              "request": {
                "$ref": "Testers"
              },
              "description": "Patches testers. Note: Testers resource does not support email lists.",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}",
              "id": "androidpublisher.edits.testers.patch",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}"
            },
            "get": {
              "parameters": {
                "editId": {
                  "location": "path",
                  "description": "Identifier of the edit.",
                  "type": "string",
                  "required": true
                },
                "track": {
                  "location": "path",
                  "required": true,
                  "description": "The track to read from.",
                  "type": "string"
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "response": {
                "$ref": "Testers"
              },
              "description": "Gets testers. Note: Testers resource does not support email lists.",
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "id": "androidpublisher.edits.testers.get",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}",
              "httpMethod": "GET",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}"
            },
            "update": {
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}",
              "description": "Updates testers. Note: Testers resource does not support email lists.",
              "parameters": {
                "editId": {
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "packageName": {
                  "type": "string",
                  "required": true,
                  "description": "Package name of the app.",
                  "location": "path"
                },
                "track": {
                  "description": "The track to update.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "request": {
                "$ref": "Testers"
              },
              "id": "androidpublisher.edits.testers.update",
              "httpMethod": "PUT",
              "response": {
                "$ref": "Testers"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/testers/{track}"
            }
          }
        },
        "bundles": {
          "methods": {
            "upload": {
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles",
              "description": "Uploads a new Android App Bundle to this edit. If you are using the Google API client libraries, please increase the timeout of the http request before calling this endpoint (a timeout of 2 minutes is recommended). See [Timeouts and Errors](https://developers.google.com/api-client-library/java/google-api-java-client/errors) for an example in java.",
              "parameters": {
                "ackBundleInstallationWarning": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Must be set to true if the app bundle installation may trigger a warning on user devices (for example, if installation size may be over a threshold, typically 100 MB)."
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "mediaUpload": {
                "protocols": {
                  "resumable": {
                    "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles",
                    "multipart": true
                  },
                  "simple": {
                    "multipart": true,
                    "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles"
                  }
                },
                "maxSize": "10737418240",
                "accept": [
                  "application/octet-stream"
                ]
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "httpMethod": "POST",
              "id": "androidpublisher.edits.bundles.upload",
              "supportsMediaUpload": true,
              "response": {
                "$ref": "Bundle"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles"
            },
            "list": {
              "description": "Lists all current Android App Bundles of the app and edit.",
              "response": {
                "$ref": "BundlesListResponse"
              },
              "id": "androidpublisher.edits.bundles.list",
              "httpMethod": "GET",
              "parameters": {
                "editId": {
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "packageName": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Package name of the app."
                }
              },
              "parameterOrder": [
                "packageName",
                "editId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/bundles"
            }
          }
        },
        "deobfuscationfiles": {
          "methods": {
            "upload": {
              "description": "Uploads a new deobfuscation file and attaches to the specified APK.",
              "supportsMediaUpload": true,
              "response": {
                "$ref": "DeobfuscationFilesUploadResponse"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "httpMethod": "POST",
              "parameterOrder": [
                "packageName",
                "editId",
                "apkVersionCode",
                "deobfuscationFileType"
              ],
              "parameters": {
                "packageName": {
                  "required": true,
                  "description": "Unique identifier for the Android app.",
                  "location": "path",
                  "type": "string"
                },
                "editId": {
                  "required": true,
                  "type": "string",
                  "description": "Unique identifier for this edit.",
                  "location": "path"
                },
                "apkVersionCode": {
                  "required": true,
                  "format": "int32",
                  "location": "path",
                  "description": "The version code of the APK whose Deobfuscation File is being uploaded.",
                  "type": "integer"
                },
                "deobfuscationFileType": {
                  "description": "The type of the deobfuscation file.",
                  "enum": [
                    "deobfuscationFileTypeUnspecified",
                    "proguard",
                    "nativeCode"
                  ],
                  "enumDescriptions": [
                    "Unspecified deobfuscation file type.",
                    "Proguard deobfuscation file type.",
                    "Native debugging symbols file type."
                  ],
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "id": "androidpublisher.edits.deobfuscationfiles.upload",
              "mediaUpload": {
                "maxSize": "629145600",
                "protocols": {
                  "resumable": {
                    "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}",
                    "multipart": true
                  },
                  "simple": {
                    "multipart": true,
                    "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}"
                  }
                },
                "accept": [
                  "application/octet-stream"
                ]
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/deobfuscationFiles/{deobfuscationFileType}"
            }
          }
        },
        "expansionfiles": {
          "methods": {
            "upload": {
              "parameters": {
                "apkVersionCode": {
                  "required": true,
                  "type": "integer",
                  "description": "The version code of the APK whose expansion file configuration is being read or modified.",
                  "format": "int32",
                  "location": "path"
                },
                "expansionFileType": {
                  "location": "path",
                  "enum": [
                    "expansionFileTypeUnspecified",
                    "main",
                    "patch"
                  ],
                  "required": true,
                  "description": "The file type of the expansion file configuration which is being updated.",
                  "enumDescriptions": [
                    "Unspecified expansion file type.",
                    "Main expansion file.",
                    "Patch expansion file."
                  ],
                  "type": "string"
                },
                "editId": {
                  "type": "string",
                  "description": "Identifier of the edit.",
                  "location": "path",
                  "required": true
                },
                "packageName": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Package name of the app."
                }
              },
              "response": {
                "$ref": "ExpansionFilesUploadResponse"
              },
              "id": "androidpublisher.edits.expansionfiles.upload",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "parameterOrder": [
                "packageName",
                "editId",
                "apkVersionCode",
                "expansionFileType"
              ],
              "httpMethod": "POST",
              "description": "Uploads a new expansion file and attaches to the specified APK.",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "mediaUpload": {
                "maxSize": "2147483648",
                "accept": [
                  "application/octet-stream"
                ],
                "protocols": {
                  "resumable": {
                    "path": "/resumable/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
                    "multipart": true
                  },
                  "simple": {
                    "path": "/upload/androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
                    "multipart": true
                  }
                }
              },
              "supportsMediaUpload": true
            },
            "get": {
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "parameterOrder": [
                "packageName",
                "editId",
                "apkVersionCode",
                "expansionFileType"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.edits.expansionfiles.get",
              "parameters": {
                "packageName": {
                  "description": "Package name of the app.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "apkVersionCode": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The version code of the APK whose expansion file configuration is being read or modified.",
                  "location": "path",
                  "required": true
                },
                "expansionFileType": {
                  "description": "The file type of the file configuration which is being read or modified.",
                  "required": true,
                  "type": "string",
                  "enum": [
                    "expansionFileTypeUnspecified",
                    "main",
                    "patch"
                  ],
                  "location": "path",
                  "enumDescriptions": [
                    "Unspecified expansion file type.",
                    "Main expansion file.",
                    "Patch expansion file."
                  ]
                }
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "response": {
                "$ref": "ExpansionFile"
              },
              "description": "Fetches the expansion file configuration for the specified APK.",
              "httpMethod": "GET"
            },
            "update": {
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "description": "Updates the APK's expansion file configuration to reference another APK's expansion file. To add a new expansion file use the Upload method.",
              "parameterOrder": [
                "packageName",
                "editId",
                "apkVersionCode",
                "expansionFileType"
              ],
              "request": {
                "$ref": "ExpansionFile"
              },
              "response": {
                "$ref": "ExpansionFile"
              },
              "parameters": {
                "expansionFileType": {
                  "description": "The file type of the file configuration which is being read or modified.",
                  "type": "string",
                  "location": "path",
                  "enum": [
                    "expansionFileTypeUnspecified",
                    "main",
                    "patch"
                  ],
                  "required": true,
                  "enumDescriptions": [
                    "Unspecified expansion file type.",
                    "Main expansion file.",
                    "Patch expansion file."
                  ]
                },
                "packageName": {
                  "location": "path",
                  "description": "Package name of the app.",
                  "type": "string",
                  "required": true
                },
                "editId": {
                  "description": "Identifier of the edit.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "apkVersionCode": {
                  "required": true,
                  "type": "integer",
                  "format": "int32",
                  "location": "path",
                  "description": "The version code of the APK whose expansion file configuration is being read or modified."
                }
              },
              "id": "androidpublisher.edits.expansionfiles.update",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "httpMethod": "PUT"
            },
            "patch": {
              "response": {
                "$ref": "ExpansionFile"
              },
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "description": "Patches the APK's expansion file configuration to reference another APK's expansion file. To add a new expansion file use the Upload method.",
              "request": {
                "$ref": "ExpansionFile"
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/apks/{apkVersionCode}/expansionFiles/{expansionFileType}",
              "parameters": {
                "apkVersionCode": {
                  "type": "integer",
                  "location": "path",
                  "format": "int32",
                  "description": "The version code of the APK whose expansion file configuration is being read or modified.",
                  "required": true
                },
                "editId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Identifier of the edit."
                },
                "packageName": {
                  "description": "Package name of the app.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "expansionFileType": {
                  "enum": [
                    "expansionFileTypeUnspecified",
                    "main",
                    "patch"
                  ],
                  "location": "path",
                  "type": "string",
                  "description": "The file type of the expansion file configuration which is being updated.",
                  "enumDescriptions": [
                    "Unspecified expansion file type.",
                    "Main expansion file.",
                    "Patch expansion file."
                  ],
                  "required": true
                }
              },
              "parameterOrder": [
                "packageName",
                "editId",
                "apkVersionCode",
                "expansionFileType"
              ],
              "id": "androidpublisher.edits.expansionfiles.patch",
              "httpMethod": "PATCH"
            }
          }
        },
        "countryavailability": {
          "methods": {
            "get": {
              "response": {
                "$ref": "TrackCountryAvailability"
              },
              "description": "Gets country availability.",
              "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}/countryAvailability/{track}",
              "parameterOrder": [
                "packageName",
                "editId",
                "track"
              ],
              "id": "androidpublisher.edits.countryavailability.get",
              "parameters": {
                "editId": {
                  "location": "path",
                  "type": "string",
                  "description": "Identifier of the edit.",
                  "required": true
                },
                "track": {
                  "description": "The track to read from.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "packageName": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Package name of the app."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "httpMethod": "GET",
              "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}/countryAvailability/{track}"
            }
          }
        }
      },
      "methods": {
        "validate": {
          "response": {
            "$ref": "AppEdit"
          },
          "parameters": {
            "editId": {
              "description": "Identifier of the edit.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "packageName": {
              "location": "path",
              "type": "string",
              "description": "Package name of the app.",
              "required": true
            }
          },
          "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}:validate",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "description": "Validates an app edit.",
          "httpMethod": "POST",
          "id": "androidpublisher.edits.validate",
          "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}:validate",
          "parameterOrder": [
            "packageName",
            "editId"
          ]
        },
        "delete": {
          "parameters": {
            "packageName": {
              "description": "Package name of the app.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "editId": {
              "type": "string",
              "description": "Identifier of the edit.",
              "required": true,
              "location": "path"
            }
          },
          "description": "Deletes an app edit.",
          "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}",
          "httpMethod": "DELETE",
          "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}",
          "parameterOrder": [
            "packageName",
            "editId"
          ],
          "id": "androidpublisher.edits.delete",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ]
        },
        "commit": {
          "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}:commit",
          "description": "Commits an app edit.",
          "httpMethod": "POST",
          "response": {
            "$ref": "AppEdit"
          },
          "id": "androidpublisher.edits.commit",
          "parameters": {
            "editId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Identifier of the edit."
            },
            "packageName": {
              "type": "string",
              "description": "Package name of the app.",
              "required": true,
              "location": "path"
            },
            "changesNotSentForReview": {
              "description": "Indicates that the changes in this edit will not be reviewed until they are explicitly sent for review from the Google Play Console UI. These changes will be added to any other changes that are not yet sent for review.",
              "type": "boolean",
              "location": "query"
            }
          },
          "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}:commit",
          "parameterOrder": [
            "packageName",
            "editId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ]
        },
        "get": {
          "parameterOrder": [
            "packageName",
            "editId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "response": {
            "$ref": "AppEdit"
          },
          "flatPath": "androidpublisher/v3/applications/{packageName}/edits/{editId}",
          "httpMethod": "GET",
          "parameters": {
            "packageName": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Package name of the app."
            },
            "editId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Identifier of the edit."
            }
          },
          "id": "androidpublisher.edits.get",
          "path": "androidpublisher/v3/applications/{packageName}/edits/{editId}",
          "description": "Gets an app edit."
        },
        "insert": {
          "flatPath": "androidpublisher/v3/applications/{packageName}/edits",
          "request": {
            "$ref": "AppEdit"
          },
          "description": "Creates a new edit for an app.",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "id": "androidpublisher.edits.insert",
          "response": {
            "$ref": "AppEdit"
          },
          "parameters": {
            "packageName": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Package name of the app."
            }
          },
          "parameterOrder": [
            "packageName"
          ],
          "path": "androidpublisher/v3/applications/{packageName}/edits"
        }
      }
    },
    "generatedapks": {
      "methods": {
        "download": {
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "description": "Downloads a single signed APK generated from an app bundle.",
          "parameters": {
            "versionCode": {
              "type": "integer",
              "required": true,
              "location": "path",
              "description": "Version code of the app bundle.",
              "format": "int32"
            },
            "downloadId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Download ID, which uniquely identifies the APK to download. Can be obtained from the response of `generatedapks.list` method."
            },
            "packageName": {
              "required": true,
              "location": "path",
              "description": "Package name of the app.",
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "supportsMediaDownload": true,
          "useMediaDownloadService": true,
          "flatPath": "androidpublisher/v3/applications/{packageName}/generatedApks/{versionCode}/downloads/{downloadId}:download",
          "path": "androidpublisher/v3/applications/{packageName}/generatedApks/{versionCode}/downloads/{downloadId}:download",
          "parameterOrder": [
            "packageName",
            "versionCode",
            "downloadId"
          ],
          "id": "androidpublisher.generatedapks.download"
        },
        "list": {
          "parameters": {
            "packageName": {
              "location": "path",
              "description": "Package name of the app.",
              "required": true,
              "type": "string"
            },
            "versionCode": {
              "type": "integer",
              "required": true,
              "description": "Version code of the app bundle.",
              "format": "int32",
              "location": "path"
            }
          },
          "httpMethod": "GET",
          "path": "androidpublisher/v3/applications/{packageName}/generatedApks/{versionCode}",
          "description": "Returns download metadata for all APKs that were generated from a given app bundle.",
          "id": "androidpublisher.generatedapks.list",
          "response": {
            "$ref": "GeneratedApksListResponse"
          },
          "flatPath": "androidpublisher/v3/applications/{packageName}/generatedApks/{versionCode}",
          "parameterOrder": [
            "packageName",
            "versionCode"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ]
        }
      }
    },
    "internalappsharingartifacts": {
      "methods": {
        "uploadapk": {
          "supportsMediaUpload": true,
          "parameterOrder": [
            "packageName"
          ],
          "flatPath": "androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk",
          "path": "androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk",
          "response": {
            "$ref": "InternalAppSharingArtifact"
          },
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "id": "androidpublisher.internalappsharingartifacts.uploadapk",
          "parameters": {
            "packageName": {
              "description": "Package name of the app.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "httpMethod": "POST",
          "mediaUpload": {
            "protocols": {
              "resumable": {
                "multipart": true,
                "path": "/resumable/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk"
              },
              "simple": {
                "path": "/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/apk",
                "multipart": true
              }
            },
            "maxSize": "1073741824",
            "accept": [
              "application/octet-stream",
              "application/vnd.android.package-archive"
            ]
          },
          "description": "Uploads an APK to internal app sharing. If you are using the Google API client libraries, please increase the timeout of the http request before calling this endpoint (a timeout of 2 minutes is recommended). See [Timeouts and Errors](https://developers.google.com/api-client-library/java/google-api-java-client/errors) for an example in java."
        },
        "uploadbundle": {
          "parameters": {
            "packageName": {
              "description": "Package name of the app.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "parameterOrder": [
            "packageName"
          ],
          "httpMethod": "POST",
          "response": {
            "$ref": "InternalAppSharingArtifact"
          },
          "id": "androidpublisher.internalappsharingartifacts.uploadbundle",
          "path": "androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle",
          "flatPath": "androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle",
          "mediaUpload": {
            "accept": [
              "application/octet-stream"
            ],
            "maxSize": "10737418240",
            "protocols": {
              "resumable": {
                "multipart": true,
                "path": "/resumable/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle"
              },
              "simple": {
                "path": "/upload/androidpublisher/v3/applications/internalappsharing/{packageName}/artifacts/bundle",
                "multipart": true
              }
            }
          },
          "supportsMediaUpload": true,
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "description": "Uploads an app bundle to internal app sharing. If you are using the Google API client libraries, please increase the timeout of the http request before calling this endpoint (a timeout of 2 minutes is recommended). See [Timeouts and Errors](https://developers.google.com/api-client-library/java/google-api-java-client/errors) for an example in java."
        }
      }
    },
    "systemapks": {
      "resources": {
        "variants": {
          "methods": {
            "create": {
              "flatPath": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants",
              "path": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.systemapks.variants.create",
              "parameters": {
                "packageName": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Package name of the app."
                },
                "versionCode": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The version code of the App Bundle.",
                  "format": "int64"
                }
              },
              "httpMethod": "POST",
              "description": "Creates an APK which is suitable for inclusion in a system image from an already uploaded Android App Bundle.",
              "response": {
                "$ref": "Variant"
              },
              "request": {
                "$ref": "Variant"
              },
              "parameterOrder": [
                "packageName",
                "versionCode"
              ]
            },
            "get": {
              "response": {
                "$ref": "Variant"
              },
              "parameterOrder": [
                "packageName",
                "versionCode",
                "variantId"
              ],
              "flatPath": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}",
              "parameters": {
                "versionCode": {
                  "description": "The version code of the App Bundle.",
                  "type": "string",
                  "format": "int64",
                  "required": true,
                  "location": "path"
                },
                "packageName": {
                  "location": "path",
                  "type": "string",
                  "description": "Package name of the app.",
                  "required": true
                },
                "variantId": {
                  "format": "uint32",
                  "location": "path",
                  "description": "The ID of a previously created system APK variant.",
                  "type": "integer",
                  "required": true
                }
              },
              "path": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}",
              "description": "Returns a previously created system APK variant.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "id": "androidpublisher.systemapks.variants.get"
            },
            "list": {
              "httpMethod": "GET",
              "id": "androidpublisher.systemapks.variants.list",
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants",
              "parameters": {
                "versionCode": {
                  "type": "string",
                  "description": "The version code of the App Bundle.",
                  "format": "int64",
                  "location": "path",
                  "required": true
                },
                "packageName": {
                  "required": true,
                  "description": "Package name of the app.",
                  "location": "path",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "packageName",
                "versionCode"
              ],
              "description": "Returns the list of previously created system APK variants.",
              "response": {
                "$ref": "SystemApksListResponse"
              },
              "flatPath": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants"
            },
            "download": {
              "httpMethod": "GET",
              "description": "Downloads a previously created system APK which is suitable for inclusion in a system image.",
              "id": "androidpublisher.systemapks.variants.download",
              "useMediaDownloadService": true,
              "supportsMediaDownload": true,
              "parameterOrder": [
                "packageName",
                "versionCode",
                "variantId"
              ],
              "path": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}:download",
              "flatPath": "androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}:download",
              "parameters": {
                "versionCode": {
                  "format": "int64",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The version code of the App Bundle."
                },
                "variantId": {
                  "required": true,
                  "location": "path",
                  "description": "The ID of a previously created system APK variant.",
                  "type": "integer",
                  "format": "uint32"
                },
                "packageName": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Package name of the app."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/androidpublisher"
              ]
            }
          }
        }
      }
    },
    "monetization": {
      "methods": {
        "convertRegionPrices": {
          "parameters": {
            "packageName": {
              "description": "Required. The app package name.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "response": {
            "$ref": "ConvertRegionPricesResponse"
          },
          "path": "androidpublisher/v3/applications/{packageName}/pricing:convertRegionPrices",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "request": {
            "$ref": "ConvertRegionPricesRequest"
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "packageName"
          ],
          "flatPath": "androidpublisher/v3/applications/{packageName}/pricing:convertRegionPrices",
          "description": "Calculates the region prices, using today's exchange rate and country-specific pricing patterns, based on the price in the request for a set of regions.",
          "id": "androidpublisher.monetization.convertRegionPrices"
        }
      }
    },
    "inappproducts": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameterOrder": [
            "packageName",
            "sku"
          ],
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "httpMethod": "GET",
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "response": {
            "$ref": "InAppProduct"
          },
          "description": "Gets an in-app product, which can be a managed product or a subscription.",
          "parameters": {
            "sku": {
              "description": "Unique identifier for the in-app product.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "packageName": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Package name of the app."
            }
          },
          "id": "androidpublisher.inappproducts.get"
        },
        "insert": {
          "parameters": {
            "autoConvertMissingPrices": {
              "type": "boolean",
              "location": "query",
              "description": "If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false."
            },
            "packageName": {
              "type": "string",
              "description": "Package name of the app.",
              "location": "path",
              "required": true
            }
          },
          "httpMethod": "POST",
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "request": {
            "$ref": "InAppProduct"
          },
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts",
          "parameterOrder": [
            "packageName"
          ],
          "response": {
            "$ref": "InAppProduct"
          },
          "id": "androidpublisher.inappproducts.insert",
          "description": "Creates an in-app product (i.e. a managed product or a subscriptions)."
        },
        "delete": {
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "description": "Deletes an in-app product (i.e. a managed product or a subscriptions).",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "httpMethod": "DELETE",
          "parameterOrder": [
            "packageName",
            "sku"
          ],
          "parameters": {
            "packageName": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Package name of the app."
            },
            "sku": {
              "required": true,
              "description": "Unique identifier for the in-app product.",
              "location": "path",
              "type": "string"
            }
          },
          "id": "androidpublisher.inappproducts.delete",
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}"
        },
        "patch": {
          "request": {
            "$ref": "InAppProduct"
          },
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "parameters": {
            "sku": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Unique identifier for the in-app product."
            },
            "packageName": {
              "description": "Package name of the app.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "autoConvertMissingPrices": {
              "description": "If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false.",
              "location": "query",
              "type": "boolean"
            }
          },
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "parameterOrder": [
            "packageName",
            "sku"
          ],
          "id": "androidpublisher.inappproducts.patch",
          "response": {
            "$ref": "InAppProduct"
          },
          "httpMethod": "PATCH",
          "description": "Patches an in-app product (i.e. a managed product or a subscriptions)."
        },
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "response": {
            "$ref": "InAppProduct"
          },
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}",
          "description": "Updates an in-app product (i.e. a managed product or a subscriptions).",
          "id": "androidpublisher.inappproducts.update",
          "request": {
            "$ref": "InAppProduct"
          },
          "httpMethod": "PUT",
          "parameterOrder": [
            "packageName",
            "sku"
          ],
          "parameters": {
            "packageName": {
              "location": "path",
              "description": "Package name of the app.",
              "required": true,
              "type": "string"
            },
            "allowMissing": {
              "description": "If set to true, and the in-app product with the given package_name and sku doesn't exist, the in-app product will be created.",
              "location": "query",
              "type": "boolean"
            },
            "autoConvertMissingPrices": {
              "type": "boolean",
              "location": "query",
              "description": "If true the prices for all regions targeted by the parent app that don't have a price specified for this in-app product will be auto converted to the target currency based on the default price. Defaults to false."
            },
            "sku": {
              "required": true,
              "description": "Unique identifier for the in-app product.",
              "location": "path",
              "type": "string"
            }
          },
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts/{sku}"
        },
        "list": {
          "parameterOrder": [
            "packageName"
          ],
          "id": "androidpublisher.inappproducts.list",
          "path": "androidpublisher/v3/applications/{packageName}/inappproducts",
          "response": {
            "$ref": "InappproductsListResponse"
          },
          "parameters": {
            "maxResults": {
              "description": "Deprecated and ignored. The page size is determined by the server.",
              "type": "integer",
              "location": "query",
              "format": "uint32"
            },
            "token": {
              "description": "Pagination token. If empty, list starts at the first product.",
              "type": "string",
              "location": "query"
            },
            "startIndex": {
              "type": "integer",
              "format": "uint32",
              "location": "query",
              "description": "Deprecated and ignored. Set the `token` parameter to rertieve the next page."
            },
            "packageName": {
              "type": "string",
              "location": "path",
              "description": "Package name of the app.",
              "required": true
            }
          },
          "description": "Lists all in-app products - both managed products and subscriptions. If an app has a large number of in-app products, the response may be paginated. In this case the response field `tokenPagination.nextPageToken` will be set and the caller should provide its value as a `token` request parameter to retrieve the next page.",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "flatPath": "androidpublisher/v3/applications/{packageName}/inappproducts",
          "httpMethod": "GET"
        }
      }
    },
    "users": {
      "methods": {
        "delete": {
          "parameters": {
            "name": {
              "description": "Required. The name of the user to delete. Format: developers/{developer}/users/{email}",
              "type": "string",
              "required": true,
              "location": "path",
              "pattern": "^developers/[^/]+/users/[^/]+$"
            }
          },
          "id": "androidpublisher.users.delete",
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "path": "androidpublisher/v3/{+name}",
          "description": "Removes all access for the user to the given developer account.",
          "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}",
          "parameterOrder": [
            "name"
          ]
        },
        "patch": {
          "httpMethod": "PATCH",
          "request": {
            "$ref": "User"
          },
          "description": "Updates access for the user to the developer account.",
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "id": "androidpublisher.users.patch",
          "path": "androidpublisher/v3/{+name}",
          "parameters": {
            "updateMask": {
              "description": "Optional. The list of fields to be updated.",
              "location": "query",
              "format": "google-fieldmask",
              "type": "string"
            },
            "name": {
              "description": "Required. Resource name for this user, following the pattern \"developers/{developer}/users/{email}\".",
              "pattern": "^developers/[^/]+/users/[^/]+$",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}",
          "response": {
            "$ref": "User"
          }
        },
        "list": {
          "id": "androidpublisher.users.list",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "path": "androidpublisher/v3/{+parent}/users",
          "response": {
            "$ref": "ListUsersResponse"
          },
          "flatPath": "androidpublisher/v3/developers/{developersId}/users",
          "description": "Lists all users with access to a developer account.",
          "httpMethod": "GET",
          "parameterOrder": [
            "parent"
          ],
          "parameters": {
            "pageSize": {
              "format": "int32",
              "description": "The maximum number of results to return. This must be set to -1 to disable pagination.",
              "location": "query",
              "type": "integer"
            },
            "pageToken": {
              "description": "A token received from a previous call to this method, in order to retrieve further results.",
              "location": "query",
              "type": "string"
            },
            "parent": {
              "pattern": "^developers/[^/]+$",
              "description": "Required. The developer account to fetch users from. Format: developers/{developer}",
              "required": true,
              "location": "path",
              "type": "string"
            }
          }
        },
        "create": {
          "httpMethod": "POST",
          "request": {
            "$ref": "User"
          },
          "path": "androidpublisher/v3/{+parent}/users",
          "flatPath": "androidpublisher/v3/developers/{developersId}/users",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "response": {
            "$ref": "User"
          },
          "parameterOrder": [
            "parent"
          ],
          "description": "Grant access for a user to the given developer account.",
          "id": "androidpublisher.users.create",
          "parameters": {
            "parent": {
              "location": "path",
              "description": "Required. The developer account to add the user to. Format: developers/{developer}",
              "pattern": "^developers/[^/]+$",
              "type": "string",
              "required": true
            }
          }
        }
      }
    },
    "grants": {
      "methods": {
        "create": {
          "path": "androidpublisher/v3/{+parent}/grants",
          "request": {
            "$ref": "Grant"
          },
          "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}/grants",
          "id": "androidpublisher.grants.create",
          "parameters": {
            "parent": {
              "description": "Required. The user which needs permission. Format: developers/{developer}/users/{user}",
              "type": "string",
              "location": "path",
              "required": true,
              "pattern": "^developers/[^/]+/users/[^/]+$"
            }
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "description": "Grant access for a user to the given package.",
          "response": {
            "$ref": "Grant"
          },
          "parameterOrder": [
            "parent"
          ]
        },
        "patch": {
          "path": "androidpublisher/v3/{+name}",
          "parameters": {
            "name": {
              "description": "Required. Resource name for this grant, following the pattern \"developers/{developer}/users/{email}/grants/{package_name}\". If this grant is for a draft app, the app ID will be used in this resource name instead of the package name.",
              "pattern": "^developers/[^/]+/users/[^/]+/grants/[^/]+$",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "updateMask": {
              "format": "google-fieldmask",
              "type": "string",
              "location": "query",
              "description": "Optional. The list of fields to be updated."
            }
          },
          "description": "Updates access for the user to the given package.",
          "id": "androidpublisher.grants.patch",
          "httpMethod": "PATCH",
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "request": {
            "$ref": "Grant"
          },
          "response": {
            "$ref": "Grant"
          },
          "parameterOrder": [
            "name"
          ],
          "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}/grants/{grantsId}"
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/androidpublisher"
          ],
          "id": "androidpublisher.grants.delete",
          "description": "Removes all access for the user to the given package or developer account.",
          "path": "androidpublisher/v3/{+name}",
          "httpMethod": "DELETE",
          "flatPath": "androidpublisher/v3/developers/{developersId}/users/{usersId}/grants/{grantsId}",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "description": "Required. The name of the grant to delete. Format: developers/{developer}/users/{email}/grants/{package_name}",
              "type": "string",
              "location": "path",
              "pattern": "^developers/[^/]+/users/[^/]+/grants/[^/]+$",
              "required": true
            }
          }
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "canonicalName": "Android Publisher",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/androidpublisher": {
          "description": "View and manage your Google Play Developer account"
        }
      }
    }
  },
  "schemas": {
    "DeviceTierConfig": {
      "description": "LINT.IfChange Configuration describing device targeting criteria for the content of an app.",
      "properties": {
        "deviceTierSet": {
          "$ref": "DeviceTierSet",
          "description": "Definition of the set of device tiers for the app."
        },
        "deviceGroups": {
          "type": "array",
          "description": "Definition of device groups for the app.",
          "items": {
            "$ref": "DeviceGroup"
          }
        },
        "deviceTierConfigId": {
          "format": "int64",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The device tier config ID."
        }
      },
      "type": "object",
      "id": "DeviceTierConfig"
    },
    "DeviceMetadata": {
      "id": "DeviceMetadata",
      "type": "object",
      "properties": {
        "ramMb": {
          "description": "Device RAM in Megabytes, e.g. \"2048\"",
          "type": "integer",
          "format": "int32"
        },
        "manufacturer": {
          "description": "Device manufacturer (e.g. Motorola)",
          "type": "string"
        },
        "deviceClass": {
          "description": "Device class (e.g. tablet)",
          "type": "string"
        },
        "nativePlatform": {
          "description": "Comma separated list of native platforms (e.g. \"arm\", \"arm7\")",
          "type": "string"
        },
        "productName": {
          "type": "string",
          "description": "Device model name (e.g. Droid)"
        },
        "cpuModel": {
          "type": "string",
          "description": "Device CPU model, e.g. \"MSM8974\""
        },
        "cpuMake": {
          "description": "Device CPU make, e.g. \"Qualcomm\"",
          "type": "string"
        },
        "screenHeightPx": {
          "type": "integer",
          "description": "Screen height in pixels",
          "format": "int32"
        },
        "screenWidthPx": {
          "type": "integer",
          "description": "Screen width in pixels",
          "format": "int32"
        },
        "screenDensityDpi": {
          "type": "integer",
          "description": "Screen density in DPI",
          "format": "int32"
        },
        "glEsVersion": {
          "format": "int32",
          "type": "integer",
          "description": "OpenGL version"
        }
      },
      "description": "Characteristics of the user's device."
    },
    "DeobfuscationFilesUploadResponse": {
      "type": "object",
      "description": "Responses for the upload.",
      "id": "DeobfuscationFilesUploadResponse",
      "properties": {
        "deobfuscationFile": {
          "description": "The uploaded Deobfuscation File configuration.",
          "$ref": "DeobfuscationFile"
        }
      }
    },
    "ReviewsReplyRequest": {
      "id": "ReviewsReplyRequest",
      "type": "object",
      "description": "Request to reply to review or update existing reply.",
      "properties": {
        "replyText": {
          "description": "The text to set as the reply. Replies of more than approximately 350 characters will be rejected. HTML tags will be stripped.",
          "type": "string"
        }
      }
    },
    "SystemApksListResponse": {
      "properties": {
        "variants": {
          "items": {
            "$ref": "Variant"
          },
          "description": "All system APK variants created.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response to list previously created system APK variants.",
      "id": "SystemApksListResponse"
    },
    "User": {
      "description": "A user resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Resource name for this user, following the pattern \"developers/{developer}/users/{email}\".",
          "type": "string"
        },
        "grants": {
          "readOnly": true,
          "description": "Output only. Per-app permissions for the user.",
          "items": {
            "$ref": "Grant"
          },
          "type": "array"
        },
        "partial": {
          "description": "Output only. Whether there are more permissions for the user that are not represented here. This can happen if the caller does not have permission to manage all apps in the account. This is also `true` if this user is the account owner. If this field is `true`, it should be taken as a signal that this user cannot be fully managed via the API. That is, the API caller is not be able to manage all of the permissions this user holds, either because it doesn't know about them or because the user is the account owner.",
          "readOnly": true,
          "type": "boolean"
        },
        "email": {
          "type": "string",
          "description": "Immutable. The user's email address."
        },
        "accessState": {
          "enumDescriptions": [
            "Unknown or unspecified access state.",
            "User is invited but has not yet accepted the invitation.",
            "Invitation has expired.",
            "User has accepted an invitation and has access to the Play Console.",
            "Account access has expired."
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. The state of the user's access to the Play Console.",
          "enum": [
            "ACCESS_STATE_UNSPECIFIED",
            "INVITED",
            "INVITATION_EXPIRED",
            "ACCESS_GRANTED",
            "ACCESS_EXPIRED"
          ]
        },
        "developerAccountPermissions": {
          "description": "Permissions for the user which apply across the developer account.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "DEVELOPER_LEVEL_PERMISSION_UNSPECIFIED",
              "CAN_SEE_ALL_APPS",
              "CAN_VIEW_FINANCIAL_DATA_GLOBAL",
              "CAN_MANAGE_PERMISSIONS_GLOBAL",
              "CAN_EDIT_GAMES_GLOBAL",
              "CAN_PUBLISH_GAMES_GLOBAL",
              "CAN_REPLY_TO_REVIEWS_GLOBAL",
              "CAN_MANAGE_PUBLIC_APKS_GLOBAL",
              "CAN_MANAGE_TRACK_APKS_GLOBAL",
              "CAN_MANAGE_TRACK_USERS_GLOBAL",
              "CAN_MANAGE_PUBLIC_LISTING_GLOBAL",
              "CAN_MANAGE_DRAFT_APPS_GLOBAL",
              "CAN_CREATE_MANAGED_PLAY_APPS_GLOBAL",
              "CAN_CHANGE_MANAGED_PLAY_SETTING_GLOBAL",
              "CAN_MANAGE_ORDERS_GLOBAL"
            ],
            "enumDescriptions": [
              "Unknown or unspecified permission.",
              "View app information and download bulk reports (read-only).",
              "View financial data, orders, and cancellation survey responses.",
              "Admin (all permissions).",
              "Edit Play Games Services projects.",
              "Publish Play Games Services projects.",
              "Reply to reviews.",
              "Release to production, exclude devices, and use app signing by Google Play.",
              "Release to testing tracks.",
              "Manage testing tracks and edit tester lists.",
              "Manage store presence.",
              "Create, edit, and delete draft apps.",
              "Create and publish private apps to your organization.",
              "Choose whether apps are public, or only available to your organization.",
              "Manage orders and subscriptions."
            ]
          }
        },
        "expirationTime": {
          "description": "The time at which the user's access expires, if set. When setting this value, it must always be in the future.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "User"
    },
    "IntroductoryPriceInfo": {
      "type": "object",
      "description": "Contains the introductory price information for a subscription.",
      "id": "IntroductoryPriceInfo",
      "properties": {
        "introductoryPricePeriod": {
          "type": "string",
          "description": "Introductory price period, specified in ISO 8601 format. Common values are (but not limited to) \"P1W\" (one week), \"P1M\" (one month), \"P3M\" (three months), \"P6M\" (six months), and \"P1Y\" (one year)."
        },
        "introductoryPriceCycles": {
          "description": "The number of billing period to offer introductory pricing.",
          "format": "int32",
          "type": "integer"
        },
        "introductoryPriceAmountMicros": {
          "format": "int64",
          "description": "Introductory price of the subscription, not including tax. The currency is the same as price_currency_code. Price is expressed in micro-units, where 1,000,000 micro-units represents one unit of the currency. For example, if the subscription price is €1.99, price_amount_micros is 1990000.",
          "type": "string"
        },
        "introductoryPriceCurrencyCode": {
          "type": "string",
          "description": "ISO 4217 currency code for the introductory subscription price. For example, if the price is specified in British pounds sterling, price_currency_code is \"GBP\"."
        }
      }
    },
    "ApksListResponse": {
      "type": "object",
      "id": "ApksListResponse",
      "description": "Response listing all APKs.",
      "properties": {
        "kind": {
          "description": "The kind of this response (\"androidpublisher#apksListResponse\").",
          "type": "string"
        },
        "apks": {
          "items": {
            "$ref": "Apk"
          },
          "type": "array",
          "description": "All APKs."
        }
      }
    },
    "AppEdit": {
      "description": "An app edit. The resource for EditsService.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Output only. Identifier of the edit. Can be used in subsequent API calls.",
          "readOnly": true
        },
        "expiryTimeSeconds": {
          "description": "Output only. The time (as seconds since Epoch) at which the edit will expire and will be no longer valid for use.",
          "type": "string",
          "readOnly": true
        }
      },
      "id": "AppEdit"
    },
    "ReviewReplyResult": {
      "description": "The result of replying/updating a reply to review.",
      "type": "object",
      "id": "ReviewReplyResult",
      "properties": {
        "replyText": {
          "description": "The reply text that was applied.",
          "type": "string"
        },
        "lastEdited": {
          "description": "The time at which the reply took effect.",
          "$ref": "Timestamp"
        }
      }
    },
    "DeviceId": {
      "properties": {
        "buildBrand": {
          "description": "Value of Build.BRAND.",
          "type": "string"
        },
        "buildDevice": {
          "description": "Value of Build.DEVICE.",
          "type": "string"
        }
      },
      "description": "Identifier of a device.",
      "id": "DeviceId",
      "type": "object"
    },
    "GeneratedUniversalApk": {
      "id": "GeneratedUniversalApk",
      "type": "object",
      "properties": {
        "downloadId": {
          "type": "string",
          "description": "Download ID, which uniquely identifies the APK to download. Should be supplied to `generatedapks.download` method."
        }
      },
      "description": "Download metadata for a universal APK."
    },
    "SubscriptionCancelSurveyResult": {
      "properties": {
        "userInputCancelReason": {
          "type": "string",
          "description": "The customized input cancel reason from the user. Only present when cancelReason is 0."
        },
        "cancelSurveyReason": {
          "type": "integer",
          "format": "int32",
          "description": "The cancellation reason the user chose in the survey. Possible values are: 0. Other 1. I don't use this service enough 2. Technical issues 3. Cost-related reasons 4. I found a better app"
        }
      },
      "description": "Information provided by the user when they complete the subscription cancellation flow (cancellation reason survey).",
      "id": "SubscriptionCancelSurveyResult",
      "type": "object"
    },
    "Image": {
      "id": "Image",
      "type": "object",
      "properties": {
        "sha1": {
          "type": "string",
          "description": "A sha1 hash of the image."
        },
        "sha256": {
          "type": "string",
          "description": "A sha256 hash of the image."
        },
        "id": {
          "description": "A unique id representing this image.",
          "type": "string"
        },
        "url": {
          "type": "string",
          "description": "A URL that will serve a preview of the image."
        }
      },
      "description": "An uploaded image. The resource for ImagesService."
    },
    "SubscriptionTaxAndComplianceSettings": {
      "id": "SubscriptionTaxAndComplianceSettings",
      "properties": {
        "taxRateInfoByRegionCode": {
          "type": "object",
          "additionalProperties": {
            "$ref": "RegionalTaxRateInfo"
          },
          "description": "A mapping from region code to tax rate details. The keys are region codes as defined by Unicode's \"CLDR\"."
        },
        "eeaWithdrawalRightType": {
          "enum": [
            "WITHDRAWAL_RIGHT_TYPE_UNSPECIFIED",
            "WITHDRAWAL_RIGHT_DIGITAL_CONTENT",
            "WITHDRAWAL_RIGHT_SERVICE"
          ],
          "type": "string",
          "description": "Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the [Help Center article](https://support.google.com/googleplay/android-developer/answer/10463498) for more information.",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        }
      },
      "description": "Details about taxation, Google Play policy and legal compliance for subscription products.",
      "type": "object"
    },
    "Listing": {
      "properties": {
        "shortDescription": {
          "type": "string",
          "description": "Short description of the app."
        },
        "title": {
          "description": "Localized title of the app.",
          "type": "string"
        },
        "video": {
          "type": "string",
          "description": "URL of a promotional YouTube video for the app."
        },
        "language": {
          "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).",
          "type": "string"
        },
        "fullDescription": {
          "type": "string",
          "description": "Full description of the app."
        }
      },
      "id": "Listing",
      "description": "A localized store listing. The resource for ListingsService.",
      "type": "object"
    },
    "VoidedPurchasesListResponse": {
      "properties": {
        "voidedPurchases": {
          "items": {
            "$ref": "VoidedPurchase"
          },
          "type": "array"
        },
        "tokenPagination": {
          "description": "Pagination information for token pagination.",
          "$ref": "TokenPagination"
        },
        "pageInfo": {
          "$ref": "PageInfo",
          "description": "General pagination information."
        }
      },
      "id": "VoidedPurchasesListResponse",
      "type": "object",
      "description": "Response for the voidedpurchases.list API."
    },
    "ApksAddExternallyHostedResponse": {
      "properties": {
        "externallyHostedApk": {
          "description": "The definition of the externally-hosted APK and where it is located.",
          "$ref": "ExternallyHostedApk"
        }
      },
      "type": "object",
      "description": "Response for creating a new externally hosted APK.",
      "id": "ApksAddExternallyHostedResponse"
    },
    "UsesPermission": {
      "properties": {
        "maxSdkVersion": {
          "format": "int32",
          "description": "Optionally, the maximum SDK version for which the permission is required.",
          "type": "integer"
        },
        "name": {
          "description": "The name of the permission requested.",
          "type": "string"
        }
      },
      "description": "A permission used by this APK.",
      "id": "UsesPermission",
      "type": "object"
    },
    "InappproductsListResponse": {
      "description": "Response listing all in-app products.",
      "properties": {
        "pageInfo": {
          "description": "Deprecated and unset.",
          "$ref": "PageInfo"
        },
        "kind": {
          "type": "string",
          "description": "The kind of this response (\"androidpublisher#inappproductsListResponse\")."
        },
        "inappproduct": {
          "description": "All in-app products.",
          "items": {
            "$ref": "InAppProduct"
          },
          "type": "array"
        },
        "tokenPagination": {
          "$ref": "TokenPagination",
          "description": "Pagination token, to handle a number of products that is over one page."
        }
      },
      "type": "object",
      "id": "InappproductsListResponse"
    },
    "ManagedProductTaxAndComplianceSettings": {
      "description": "Details about taxation and legal compliance for managed products.",
      "id": "ManagedProductTaxAndComplianceSettings",
      "properties": {
        "taxRateInfoByRegionCode": {
          "type": "object",
          "additionalProperties": {
            "$ref": "RegionalTaxRateInfo"
          },
          "description": "A mapping from region code to tax rate details. The keys are region codes as defined by Unicode's \"CLDR\"."
        },
        "eeaWithdrawalRightType": {
          "description": "Digital content or service classification for products distributed to users in the European Economic Area (EEA). The withdrawal regime under EEA consumer laws depends on this classification. Refer to the [Help Center article](https://support.google.com/googleplay/android-developer/answer/10463498) for more information.",
          "enum": [
            "WITHDRAWAL_RIGHT_TYPE_UNSPECIFIED",
            "WITHDRAWAL_RIGHT_DIGITAL_CONTENT",
            "WITHDRAWAL_RIGHT_SERVICE"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConvertRegionPricesResponse": {
      "id": "ConvertRegionPricesResponse",
      "properties": {
        "convertedOtherRegionsPrice": {
          "$ref": "ConvertedOtherRegionsPrice",
          "description": "Converted other regions prices in USD and EUR, to use for countries where Play doesn't support a country's local currency."
        },
        "convertedRegionPrices": {
          "type": "object",
          "additionalProperties": {
            "$ref": "ConvertedRegionPrice"
          },
          "description": "Map from region code to converted region price."
        }
      },
      "description": "Response message for ConvertRegionPrices.",
      "type": "object"
    },
    "DeveloperComment": {
      "id": "DeveloperComment",
      "description": "Developer entry from conversation between user and developer.",
      "properties": {
        "text": {
          "description": "The content of the comment, i.e. reply body.",
          "type": "string"
        },
        "lastModified": {
          "description": "The last time at which this comment was updated.",
          "$ref": "Timestamp"
        }
      },
      "type": "object"
    },
    "ConvertedOtherRegionsPrice": {
      "type": "object",
      "properties": {
        "usdPrice": {
          "description": "Price in USD to use for the \"Other regions\" location exclusive of taxes.",
          "$ref": "Money"
        },
        "eurPrice": {
          "$ref": "Money",
          "description": "Price in EUR to use for the \"Other regions\" location exclusive of taxes."
        }
      },
      "id": "ConvertedOtherRegionsPrice",
      "description": "Converted other regions prices."
    },
    "GeneratedAssetPackSlice": {
      "properties": {
        "sliceId": {
          "type": "string",
          "description": "Asset slice ID."
        },
        "version": {
          "type": "string",
          "format": "int64",
          "description": "Asset module version."
        },
        "downloadId": {
          "type": "string",
          "description": "Download ID, which uniquely identifies the APK to download. Should be supplied to `generatedapks.download` method."
        },
        "moduleName": {
          "type": "string",
          "description": "Name of the module that this asset slice belongs to."
        }
      },
      "type": "object",
      "id": "GeneratedAssetPackSlice",
      "description": "Download metadata for an asset pack slice."
    },
    "SubscriptionDeferralInfo": {
      "type": "object",
      "properties": {
        "desiredExpiryTimeMillis": {
          "description": "The desired next expiry time to assign to the subscription, in milliseconds since the Epoch. The given time must be later/greater than the current expiry time for the subscription.",
          "type": "string",
          "format": "int64"
        },
        "expectedExpiryTimeMillis": {
          "type": "string",
          "format": "int64",
          "description": "The expected expiry time for the subscription. If the current expiry time for the subscription is not the value specified here, the deferral will not occur."
        }
      },
      "description": "A SubscriptionDeferralInfo contains the data needed to defer a subscription purchase to a future expiry time.",
      "id": "SubscriptionDeferralInfo"
    },
    "Money": {
      "type": "object",
      "description": "Represents an amount of money with its currency type.",
      "properties": {
        "units": {
          "type": "string",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "format": "int64"
        },
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        },
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Money"
    },
    "ConvertRegionPricesRequest": {
      "type": "object",
      "id": "ConvertRegionPricesRequest",
      "description": "Request message for ConvertRegionPrices.",
      "properties": {
        "price": {
          "description": "The intital price to convert other regions from. Tax exclusive.",
          "$ref": "Money"
        }
      }
    },
    "InAppProduct": {
      "properties": {
        "purchaseType": {
          "enum": [
            "purchaseTypeUnspecified",
            "managedUser",
            "subscription"
          ],
          "type": "string",
          "description": "The type of the product, e.g. a recurring subscription.",
          "enumDescriptions": [
            "Unspecified purchase type.",
            "The default product type - one time purchase.",
            "In-app product with a recurring period."
          ]
        },
        "status": {
          "type": "string",
          "description": "The status of the product, e.g. whether it's active.",
          "enum": [
            "statusUnspecified",
            "active",
            "inactive"
          ],
          "enumDescriptions": [
            "Unspecified status.",
            "The product is published and active in the store.",
            "The product is not published and therefore inactive in the store."
          ]
        },
        "managedProductTaxesAndComplianceSettings": {
          "description": "Details about taxes and legal compliance. Only applicable to managed products.",
          "$ref": "ManagedProductTaxAndComplianceSettings"
        },
        "defaultPrice": {
          "description": "Default price. Cannot be zero, as in-app products are never free. Always in the developer's Checkout merchant currency.",
          "$ref": "Price"
        },
        "packageName": {
          "type": "string",
          "description": "Package name of the parent app."
        },
        "gracePeriod": {
          "description": "Grace period of the subscription, specified in ISO 8601 format. Allows developers to give their subscribers a grace period when the payment for the new recurrence period is declined. Acceptable values are P0D (zero days), P3D (three days), P7D (seven days), P14D (14 days), and P30D (30 days).",
          "type": "string"
        },
        "prices": {
          "additionalProperties": {
            "$ref": "Price"
          },
          "type": "object",
          "description": "Prices per buyer region. None of these can be zero, as in-app products are never free. Map key is region code, as defined by ISO 3166-2."
        },
        "subscriptionTaxesAndComplianceSettings": {
          "description": "Details about taxes and legal compliance. Only applicable to subscription products.",
          "$ref": "SubscriptionTaxAndComplianceSettings"
        },
        "trialPeriod": {
          "description": "Trial period, specified in ISO 8601 format. Acceptable values are anything between P7D (seven days) and P999D (999 days).",
          "type": "string"
        },
        "subscriptionPeriod": {
          "description": "Subscription period, specified in ISO 8601 format. Acceptable values are P1W (one week), P1M (one month), P3M (three months), P6M (six months), and P1Y (one year).",
          "type": "string"
        },
        "listings": {
          "description": "List of localized title and description data. Map key is the language of the localized data, as defined by BCP-47, e.g. \"en-US\".",
          "type": "object",
          "additionalProperties": {
            "$ref": "InAppProductListing"
          }
        },
        "sku": {
          "type": "string",
          "description": "Stock-keeping-unit (SKU) of the product, unique within an app."
        },
        "defaultLanguage": {
          "description": "Default language of the localized data, as defined by BCP-47. e.g. \"en-US\".",
          "type": "string"
        }
      },
      "type": "object",
      "description": "An in-app product. The resource for InappproductsService.",
      "id": "InAppProduct"
    },
    "ProductPurchasesAcknowledgeRequest": {
      "description": "Request for the product.purchases.acknowledge API.",
      "properties": {
        "developerPayload": {
          "description": "Payload to attach to the purchase.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ProductPurchasesAcknowledgeRequest"
    },
    "DeviceTierSet": {
      "description": "A set of device tiers. A tier set determines what variation of app content gets served to a specific device, for device-targeted content. You should assign a priority level to each tier, which determines the ordering by which they are evaluated by Play. See the documentation of DeviceTier.level for more details.",
      "id": "DeviceTierSet",
      "type": "object",
      "properties": {
        "deviceTiers": {
          "type": "array",
          "description": "Device tiers belonging to the set.",
          "items": {
            "$ref": "DeviceTier"
          }
        }
      }
    },
    "ReviewsListResponse": {
      "id": "ReviewsListResponse",
      "properties": {
        "pageInfo": {
          "$ref": "PageInfo",
          "description": "Information about the current page."
        },
        "tokenPagination": {
          "description": "Pagination token, to handle a number of products that is over one page.",
          "$ref": "TokenPagination"
        },
        "reviews": {
          "items": {
            "$ref": "Review"
          },
          "type": "array",
          "description": "List of reviews."
        }
      },
      "type": "object",
      "description": "Response listing reviews."
    },
    "DeviceSpec": {
      "properties": {
        "supportedAbis": {
          "description": "Supported ABI architectures in the order of preference. The values should be the string as reported by the platform, e.g. \"armeabi-v7a\", \"x86_64\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "screenDensity": {
          "type": "integer",
          "description": "Screen dpi.",
          "format": "uint32"
        },
        "supportedLocales": {
          "items": {
            "type": "string"
          },
          "description": "All installed locales represented as BCP-47 strings, e.g. \"en-US\".",
          "type": "array"
        }
      },
      "id": "DeviceSpec",
      "description": "The device spec used to generate a system APK.",
      "type": "object"
    },
    "InternalAppSharingArtifact": {
      "description": "An artifact resource which gets created when uploading an APK or Android App Bundle through internal app sharing.",
      "id": "InternalAppSharingArtifact",
      "properties": {
        "sha256": {
          "type": "string",
          "description": "The sha256 hash of the artifact represented as a lowercase hexadecimal number, matching the output of the sha256sum command."
        },
        "certificateFingerprint": {
          "type": "string",
          "description": "The sha256 fingerprint of the certificate used to sign the generated artifact."
        },
        "downloadUrl": {
          "description": "The download URL generated for the uploaded artifact. Users that are authorized to download can follow the link to the Play Store app to install it.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GeneratedStandaloneApk": {
      "id": "GeneratedStandaloneApk",
      "properties": {
        "downloadId": {
          "type": "string",
          "description": "Download ID, which uniquely identifies the APK to download. Should be supplied to `generatedapks.download` method."
        },
        "variantId": {
          "type": "integer",
          "description": "ID of the generated variant.",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "Download metadata for a standalone APK."
    },
    "DeobfuscationFile": {
      "description": "Represents a deobfuscation file.",
      "type": "object",
      "id": "DeobfuscationFile",
      "properties": {
        "symbolType": {
          "enum": [
            "deobfuscationFileTypeUnspecified",
            "proguard",
            "nativeCode"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified deobfuscation file type.",
            "Proguard deobfuscation file type.",
            "Native debugging symbols file type."
          ],
          "description": "The type of the deobfuscation file."
        }
      }
    },
    "ConvertedRegionPrice": {
      "id": "ConvertedRegionPrice",
      "properties": {
        "price": {
          "description": "The converted price tax inclusive.",
          "$ref": "Money"
        },
        "regionCode": {
          "type": "string",
          "description": "The region code of the region."
        },
        "taxAmount": {
          "description": "The tax amount of the converted price.",
          "$ref": "Money"
        }
      },
      "description": "A converted region price.",
      "type": "object"
    },
    "DeviceRam": {
      "properties": {
        "minBytes": {
          "type": "string",
          "format": "int64",
          "description": "Minimum RAM in bytes (bound included)."
        },
        "maxBytes": {
          "format": "int64",
          "description": "Maximum RAM in bytes (bound excluded).",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Conditions about a device's RAM capabilities.",
      "id": "DeviceRam"
    },
    "DeviceSelector": {
      "properties": {
        "forbiddenSystemFeatures": {
          "items": {
            "$ref": "SystemFeature"
          },
          "description": "A device that has any of these system features is excluded by this selector, even if it matches all other conditions.",
          "type": "array"
        },
        "includedDeviceIds": {
          "items": {
            "$ref": "DeviceId"
          },
          "type": "array",
          "description": "Device models included by this selector."
        },
        "deviceRam": {
          "description": "Conditions on the device's RAM.",
          "$ref": "DeviceRam"
        },
        "requiredSystemFeatures": {
          "description": "A device needs to have all these system features to be included by the selector.",
          "items": {
            "$ref": "SystemFeature"
          },
          "type": "array"
        },
        "excludedDeviceIds": {
          "items": {
            "$ref": "DeviceId"
          },
          "description": "Device models excluded by this selector, even if they match all other conditions.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Selector for a device group. A selector consists of a set of conditions on the device that should all match (logical AND) to determine a device group eligibility. For instance, if a selector specifies RAM conditions, device model inclusion and device model exclusion, a device is considered to match if: device matches RAM conditions AND device matches one of the included device models AND device doesn't match excluded device models",
      "id": "DeviceSelector"
    },
    "Track": {
      "type": "object",
      "properties": {
        "track": {
          "type": "string",
          "description": "Identifier of the track."
        },
        "releases": {
          "description": "In a read request, represents all active releases in the track. In an update request, represents desired changes.",
          "items": {
            "$ref": "TrackRelease"
          },
          "type": "array"
        }
      },
      "id": "Track",
      "description": "A track configuration. The resource for TracksService."
    },
    "ProductPurchase": {
      "id": "ProductPurchase",
      "description": "A ProductPurchase resource indicates the status of a user's inapp product purchase.",
      "type": "object",
      "properties": {
        "developerPayload": {
          "description": "A developer-specified string that contains supplemental information about an order.",
          "type": "string"
        },
        "purchaseType": {
          "type": "integer",
          "format": "int32",
          "description": "The type of purchase of the inapp product. This field is only set if this purchase was not made using the standard in-app billing flow. Possible values are: 0. Test (i.e. purchased from a license testing account) 1. Promo (i.e. purchased using a promo code) 2. Rewarded (i.e. from watching a video ad instead of paying)"
        },
        "kind": {
          "type": "string",
          "description": "This kind represents an inappPurchase object in the androidpublisher service."
        },
        "orderId": {
          "type": "string",
          "description": "The order id associated with the purchase of the inapp product."
        },
        "consumptionState": {
          "description": "The consumption state of the inapp product. Possible values are: 0. Yet to be consumed 1. Consumed",
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "description": "The quantity associated with the purchase of the inapp product.",
          "type": "integer",
          "format": "int32"
        },
        "purchaseToken": {
          "type": "string",
          "description": "The purchase token generated to identify this purchase."
        },
        "acknowledgementState": {
          "type": "integer",
          "format": "int32",
          "description": "The acknowledgement state of the inapp product. Possible values are: 0. Yet to be acknowledged 1. Acknowledged"
        },
        "obfuscatedExternalAccountId": {
          "description": "An obfuscated version of the id that is uniquely associated with the user's account in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedaccountid when the purchase was made.",
          "type": "string"
        },
        "obfuscatedExternalProfileId": {
          "description": "An obfuscated version of the id that is uniquely associated with the user's profile in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedprofileid when the purchase was made.",
          "type": "string"
        },
        "purchaseState": {
          "format": "int32",
          "description": "The purchase state of the order. Possible values are: 0. Purchased 1. Canceled 2. Pending",
          "type": "integer"
        },
        "purchaseTimeMillis": {
          "type": "string",
          "format": "int64",
          "description": "The time the product was purchased, in milliseconds since the epoch (Jan 1, 1970)."
        },
        "regionCode": {
          "description": "ISO 3166-1 alpha-2 billing region code of the user at the time the product was granted.",
          "type": "string"
        },
        "productId": {
          "type": "string",
          "description": "The inapp product SKU."
        }
      }
    },
    "Bundle": {
      "properties": {
        "sha256": {
          "description": "A sha256 hash of the upload payload, encoded as a hex string and matching the output of the sha256sum command.",
          "type": "string"
        },
        "sha1": {
          "type": "string",
          "description": "A sha1 hash of the upload payload, encoded as a hex string and matching the output of the sha1sum command."
        },
        "versionCode": {
          "format": "int32",
          "type": "integer",
          "description": "The version code of the Android App Bundle, as specified in the Android App Bundle's base module APK manifest file."
        }
      },
      "description": "Information about an app bundle. The resource for BundlesService.",
      "type": "object",
      "id": "Bundle"
    },
    "GeneratedSplitApk": {
      "properties": {
        "splitId": {
          "description": "Split ID. Empty for the main split of the base module.",
          "type": "string"
        },
        "variantId": {
          "description": "ID of the generated variant.",
          "format": "int32",
          "type": "integer"
        },
        "moduleName": {
          "type": "string",
          "description": "Name of the module that this APK belongs to."
        },
        "downloadId": {
          "description": "Download ID, which uniquely identifies the APK to download. Should be supplied to `generatedapks.download` method.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Download metadata for a split APK.",
      "id": "GeneratedSplitApk"
    },
    "BundlesListResponse": {
      "description": "Response listing all app bundles.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of this response (\"androidpublisher#bundlesListResponse\").",
          "type": "string"
        },
        "bundles": {
          "type": "array",
          "items": {
            "$ref": "Bundle"
          },
          "description": "All app bundles."
        }
      },
      "id": "BundlesListResponse"
    },
    "TrackTargetedCountry": {
      "type": "object",
      "id": "TrackTargetedCountry",
      "description": "Representation of a single country where the contents of a track are available.",
      "properties": {
        "countryCode": {
          "description": "The country to target, as a two-letter CLDR code.",
          "type": "string"
        }
      }
    },
    "CountryTargeting": {
      "id": "CountryTargeting",
      "description": "Country targeting specification.",
      "properties": {
        "includeRestOfWorld": {
          "type": "boolean",
          "description": "Include \"rest of world\" as well as explicitly targeted countries."
        },
        "countries": {
          "items": {
            "type": "string"
          },
          "description": "Countries to target, specified as two letter [CLDR codes](https://unicode.org/cldr/charts/latest/supplemental/territory_containment_un_m_49.html).",
          "type": "array"
        }
      },
      "type": "object"
    },
    "TrackCountryAvailability": {
      "description": "Resource for per-track country availability information.",
      "type": "object",
      "properties": {
        "countries": {
          "items": {
            "$ref": "TrackTargetedCountry"
          },
          "type": "array",
          "description": "A list of one or more countries where artifacts in this track are available. This list includes all countries that are targeted by the track, even if only specific carriers are targeted in that country."
        },
        "restOfWorld": {
          "type": "boolean",
          "description": "Whether artifacts in this track are available to \"rest of the world\" countries."
        },
        "syncWithProduction": {
          "type": "boolean",
          "description": "Whether this track's availability is synced with the default production track. See https://support.google.com/googleplay/android-developer/answer/7550024 for more information on syncing country availability with production. Note that if this is true, the returned \"countries\" and \"rest_of_world\" fields will reflect the values for the default production track."
        }
      },
      "id": "TrackCountryAvailability"
    },
    "ExternallyHostedApk": {
      "id": "ExternallyHostedApk",
      "description": "Defines an APK available for this application that is hosted externally and not uploaded to Google Play. This function is only available to organizations using Managed Play whose application is configured to restrict distribution to the organizations.",
      "type": "object",
      "properties": {
        "externallyHostedUrl": {
          "type": "string",
          "description": "The URL at which the APK is hosted. This must be an https URL."
        },
        "usesPermissions": {
          "type": "array",
          "description": "The permissions requested by this APK.",
          "items": {
            "$ref": "UsesPermission"
          }
        },
        "versionName": {
          "description": "The version name of this APK.",
          "type": "string"
        },
        "fileSize": {
          "description": "The file size in bytes of this APK.",
          "type": "string",
          "format": "int64"
        },
        "maximumSdk": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum SDK supported by this APK (optional)."
        },
        "versionCode": {
          "format": "int32",
          "type": "integer",
          "description": "The version code of this APK."
        },
        "certificateBase64s": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A certificate (or array of certificates if a certificate-chain is used) used to sign this APK, represented as a base64 encoded byte array."
        },
        "packageName": {
          "type": "string",
          "description": "The package name."
        },
        "fileSha256Base64": {
          "description": "The sha256 checksum of this APK, represented as a base64 encoded byte array.",
          "type": "string"
        },
        "usesFeatures": {
          "description": "The features required by this APK (optional).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "iconBase64": {
          "type": "string",
          "description": "The icon image from the APK, as a base64 encoded byte array."
        },
        "applicationLabel": {
          "description": "The application label.",
          "type": "string"
        },
        "minimumSdk": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum SDK targeted by this APK."
        },
        "nativeCodes": {
          "description": "The native code environments supported by this APK (optional).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fileSha1Base64": {
          "description": "The sha1 checksum of this APK, represented as a base64 encoded byte array.",
          "type": "string"
        }
      }
    },
    "ApkBinary": {
      "description": "Represents the binary payload of an APK.",
      "properties": {
        "sha256": {
          "description": "A sha256 hash of the APK payload, encoded as a hex string and matching the output of the sha256sum command.",
          "type": "string"
        },
        "sha1": {
          "description": "A sha1 hash of the APK payload, encoded as a hex string and matching the output of the sha1sum command.",
          "type": "string"
        }
      },
      "id": "ApkBinary",
      "type": "object"
    },
    "SubscriptionPurchase": {
      "type": "object",
      "description": "A SubscriptionPurchase resource indicates the status of a user's subscription purchase.",
      "id": "SubscriptionPurchase",
      "properties": {
        "obfuscatedExternalProfileId": {
          "type": "string",
          "description": "An obfuscated version of the id that is uniquely associated with the user's profile in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedprofileid when the purchase was made."
        },
        "userCancellationTimeMillis": {
          "type": "string",
          "format": "int64",
          "description": "The time at which the subscription was canceled by the user, in milliseconds since the epoch. Only present if cancelReason is 0."
        },
        "cancelReason": {
          "type": "integer",
          "format": "int32",
          "description": "The reason why a subscription was canceled or is not auto-renewing. Possible values are: 0. User canceled the subscription 1. Subscription was canceled by the system, for example because of a billing problem 2. Subscription was replaced with a new subscription 3. Subscription was canceled by the developer"
        },
        "emailAddress": {
          "description": "The email address of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'.",
          "type": "string"
        },
        "obfuscatedExternalAccountId": {
          "description": "An obfuscated version of the id that is uniquely associated with the user's account in your app. Present for the following purchases: * If account linking happened as part of the subscription purchase flow. * It was specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedaccountid when the purchase was made.",
          "type": "string"
        },
        "expiryTimeMillis": {
          "format": "int64",
          "type": "string",
          "description": "Time at which the subscription will expire, in milliseconds since the Epoch."
        },
        "externalAccountId": {
          "type": "string",
          "description": "User account identifier in the third-party service. Only present if account linking happened as part of the subscription purchase flow."
        },
        "startTimeMillis": {
          "format": "int64",
          "description": "Time at which the subscription was granted, in milliseconds since the Epoch.",
          "type": "string"
        },
        "promotionType": {
          "format": "int32",
          "description": "The type of promotion applied on this purchase. This field is only set if a promotion is applied when the subscription was purchased. Possible values are: 0. One time code 1. Vanity code",
          "type": "integer"
        },
        "priceAmountMicros": {
          "format": "int64",
          "type": "string",
          "description": "Price of the subscription, For tax exclusive countries, the price doesn't include tax. For tax inclusive countries, the price includes tax. Price is expressed in micro-units, where 1,000,000 micro-units represents one unit of the currency. For example, if the subscription price is €1.99, price_amount_micros is 1990000."
        },
        "developerPayload": {
          "type": "string",
          "description": "A developer-specified string that contains supplemental information about an order."
        },
        "autoResumeTimeMillis": {
          "description": "Time at which the subscription will be automatically resumed, in milliseconds since the Epoch. Only present if the user has requested to pause the subscription.",
          "format": "int64",
          "type": "string"
        },
        "givenName": {
          "type": "string",
          "description": "The given name of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'."
        },
        "orderId": {
          "description": "The order id of the latest recurring order associated with the purchase of the subscription. If the subscription was canceled because payment was declined, this will be the order id from the payment declined order.",
          "type": "string"
        },
        "kind": {
          "description": "This kind represents a subscriptionPurchase object in the androidpublisher service.",
          "type": "string"
        },
        "countryCode": {
          "description": "ISO 3166-1 alpha-2 billing country/region code of the user at the time the subscription was granted.",
          "type": "string"
        },
        "acknowledgementState": {
          "format": "int32",
          "description": "The acknowledgement state of the subscription product. Possible values are: 0. Yet to be acknowledged 1. Acknowledged",
          "type": "integer"
        },
        "profileName": {
          "description": "The profile name of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'.",
          "type": "string"
        },
        "introductoryPriceInfo": {
          "$ref": "IntroductoryPriceInfo",
          "description": "Introductory price information of the subscription. This is only present when the subscription was purchased with an introductory price. This field does not indicate the subscription is currently in introductory price period."
        },
        "priceCurrencyCode": {
          "description": "ISO 4217 currency code for the subscription price. For example, if the price is specified in British pounds sterling, price_currency_code is \"GBP\".",
          "type": "string"
        },
        "linkedPurchaseToken": {
          "type": "string",
          "description": "The purchase token of the originating purchase if this subscription is one of the following: 0. Re-signup of a canceled but non-lapsed subscription 1. Upgrade/downgrade from a previous subscription For example, suppose a user originally signs up and you receive purchase token X, then the user cancels and goes through the resignup flow (before their subscription lapses) and you receive purchase token Y, and finally the user upgrades their subscription and you receive purchase token Z. If you call this API with purchase token Z, this field will be set to Y. If you call this API with purchase token Y, this field will be set to X. If you call this API with purchase token X, this field will not be set."
        },
        "familyName": {
          "description": "The family name of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'.",
          "type": "string"
        },
        "promotionCode": {
          "description": "The promotion code applied on this purchase. This field is only set if a vanity code promotion is applied when the subscription was purchased.",
          "type": "string"
        },
        "paymentState": {
          "type": "integer",
          "description": "The payment state of the subscription. Possible values are: 0. Payment pending 1. Payment received 2. Free trial 3. Pending deferred upgrade/downgrade Not present for canceled, expired subscriptions.",
          "format": "int32"
        },
        "priceChange": {
          "$ref": "SubscriptionPriceChange",
          "description": "The latest price change information available. This is present only when there is an upcoming price change for the subscription yet to be applied. Once the subscription renews with the new price or the subscription is canceled, no price change information will be returned."
        },
        "cancelSurveyResult": {
          "$ref": "SubscriptionCancelSurveyResult",
          "description": "Information provided by the user when they complete the subscription cancellation flow (cancellation reason survey)."
        },
        "profileId": {
          "type": "string",
          "description": "The Google profile id of the user when the subscription was purchased. Only present for purchases made with 'Subscribe with Google'."
        },
        "autoRenewing": {
          "description": "Whether the subscription will automatically be renewed when it reaches its current expiry time.",
          "type": "boolean"
        },
        "purchaseType": {
          "type": "integer",
          "format": "int32",
          "description": "The type of purchase of the subscription. This field is only set if this purchase was not made using the standard in-app billing flow. Possible values are: 0. Test (i.e. purchased from a license testing account) 1. Promo (i.e. purchased using a promo code)"
        }
      }
    },
    "DeviceGroup": {
      "type": "object",
      "description": "LINT.IfChange A group of devices. A group is defined by a set of device selectors. A device belongs to the group if it matches any selector (logical OR).",
      "id": "DeviceGroup",
      "properties": {
        "deviceSelectors": {
          "type": "array",
          "items": {
            "$ref": "DeviceSelector"
          },
          "description": "Device selectors for this group. A device matching any of the selectors is included in this group."
        },
        "name": {
          "type": "string",
          "description": "The name of the group."
        }
      }
    },
    "Variant": {
      "type": "object",
      "properties": {
        "deviceSpec": {
          "$ref": "DeviceSpec",
          "description": "The device spec used to generate the APK."
        },
        "variantId": {
          "readOnly": true,
          "format": "uint32",
          "type": "integer",
          "description": "Output only. The ID of a previously created system APK variant."
        }
      },
      "id": "Variant",
      "description": "APK that is suitable for inclusion in a system image. The resource of SystemApksService."
    },
    "GeneratedApksPerSigningKey": {
      "description": "Download metadata for split, standalone and universal APKs, as well as asset pack slices, signed with a given key.",
      "type": "object",
      "id": "GeneratedApksPerSigningKey",
      "properties": {
        "generatedAssetPackSlices": {
          "items": {
            "$ref": "GeneratedAssetPackSlice"
          },
          "description": "List of asset pack slices which will be served for this app bundle, signed with a key corresponding to certificate_sha256_hash.",
          "type": "array"
        },
        "generatedStandaloneApks": {
          "description": "List of generated standalone APKs, signed with a key corresponding to certificate_sha256_hash.",
          "type": "array",
          "items": {
            "$ref": "GeneratedStandaloneApk"
          }
        },
        "generatedSplitApks": {
          "description": "List of generated split APKs, signed with a key corresponding to certificate_sha256_hash.",
          "type": "array",
          "items": {
            "$ref": "GeneratedSplitApk"
          }
        },
        "certificateSha256Hash": {
          "type": "string",
          "description": "SHA256 hash of the APK signing public key certificate."
        },
        "generatedUniversalApk": {
          "description": "Generated universal APK, signed with a key corresponding to certificate_sha256_hash. This field is not set if no universal APK was generated for this signing key.",
          "$ref": "GeneratedUniversalApk"
        }
      }
    },
    "Testers": {
      "type": "object",
      "description": "The testers of an app. The resource for TestersService. Note: while it is possible in the Play Console UI to add testers via email lists, email lists are not supported by this resource.",
      "id": "Testers",
      "properties": {
        "googleGroups": {
          "type": "array",
          "description": "All testing Google Groups, as email addresses.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExpansionFile": {
      "description": "An expansion file. The resource for ExpansionFilesService.",
      "type": "object",
      "properties": {
        "referencesVersion": {
          "format": "int32",
          "type": "integer",
          "description": "If set, this APK's expansion file references another APK's expansion file. The file_size field will not be set."
        },
        "fileSize": {
          "format": "int64",
          "description": "If set, this field indicates that this APK has an expansion file uploaded to it: this APK does not reference another APK's expansion file. The field's value is the size of the uploaded expansion file in bytes.",
          "type": "string"
        }
      },
      "id": "ExpansionFile"
    },
    "InAppProductListing": {
      "properties": {
        "title": {
          "description": "Title for the store listing.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Description for the store listing."
        },
        "benefits": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Localized entitlement benefits for a subscription."
        }
      },
      "id": "InAppProductListing",
      "description": "Store listing of a single in-app product.",
      "type": "object"
    },
    "Price": {
      "id": "Price",
      "properties": {
        "currency": {
          "description": "3 letter Currency code, as defined by ISO 4217. See java/com/google/common/money/CurrencyCode.java",
          "type": "string"
        },
        "priceMicros": {
          "description": "Price in 1/million of the currency base unit, represented as a string.",
          "type": "string"
        }
      },
      "description": "Definition of a price, i.e. currency and units.",
      "type": "object"
    },
    "ImagesListResponse": {
      "type": "object",
      "description": "Response listing all images.",
      "properties": {
        "images": {
          "description": "All listed Images.",
          "items": {
            "$ref": "Image"
          },
          "type": "array"
        }
      },
      "id": "ImagesListResponse"
    },
    "ImagesUploadResponse": {
      "description": "Response for uploading an image.",
      "type": "object",
      "id": "ImagesUploadResponse",
      "properties": {
        "image": {
          "description": "The uploaded image.",
          "$ref": "Image"
        }
      }
    },
    "TrackRelease": {
      "type": "object",
      "description": "A release within a track.",
      "properties": {
        "inAppUpdatePriority": {
          "type": "integer",
          "description": "In-app update priority of the release. All newly added APKs in the release will be considered at this priority. Can take values in the range [0, 5], with 5 the highest priority. Defaults to 0. in_app_update_priority can not be updated once the release is rolled out. See https://developer.android.com/guide/playcore/in-app-updates.",
          "format": "int32"
        },
        "versionCodes": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "Version codes of all APKs in the release. Must include version codes to retain from previous releases.",
          "type": "array"
        },
        "releaseNotes": {
          "description": "A description of what is new in this release.",
          "type": "array",
          "items": {
            "$ref": "LocalizedText"
          }
        },
        "countryTargeting": {
          "description": "Restricts a release to a specific set of countries.",
          "$ref": "CountryTargeting"
        },
        "status": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified status.",
            "The release's APKs are not being served to users.",
            "The release's APKs are being served to a fraction of users, determined by 'user_fraction'.",
            "The release's APKs will no longer be served to users. Users who already have these APKs are unaffected.",
            "The release will have no further changes. Its APKs are being served to all users, unless they are eligible to APKs of a more recent release."
          ],
          "enum": [
            "statusUnspecified",
            "draft",
            "inProgress",
            "halted",
            "completed"
          ],
          "description": "The status of the release."
        },
        "name": {
          "description": "The release name. Not required to be unique. If not set, the name is generated from the APK's version_name. If the release contains multiple APKs, the name is generated from the date.",
          "type": "string"
        },
        "userFraction": {
          "format": "double",
          "type": "number",
          "description": "Fraction of users who are eligible for a staged release. 0 \u003c fraction \u003c 1. Can only be set when status is \"inProgress\" or \"halted\"."
        }
      },
      "id": "TrackRelease"
    },
    "GeneratedApksListResponse": {
      "properties": {
        "generatedApks": {
          "items": {
            "$ref": "GeneratedApksPerSigningKey"
          },
          "type": "array",
          "description": "All generated APKs, grouped by the APK signing key."
        }
      },
      "description": "Response to list generated APKs.",
      "id": "GeneratedApksListResponse",
      "type": "object"
    },
    "Timestamp": {
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64",
          "description": "Represents seconds of UTC time since Unix epoch."
        },
        "nanos": {
          "format": "int32",
          "description": "Non-negative fractions of a second at nanosecond resolution. Must be from 0 to 999,999,999 inclusive.",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "A Timestamp represents a point in time independent of any time zone or local calendar, encoded as a count of seconds and fractions of seconds at nanosecond resolution. The count is relative to an epoch at UTC midnight on January 1, 1970.",
      "id": "Timestamp"
    },
    "ApksAddExternallyHostedRequest": {
      "properties": {
        "externallyHostedApk": {
          "description": "The definition of the externally-hosted APK and where it is located.",
          "$ref": "ExternallyHostedApk"
        }
      },
      "type": "object",
      "id": "ApksAddExternallyHostedRequest",
      "description": "Request to create a new externally hosted APK."
    },
    "RegionalTaxRateInfo": {
      "id": "RegionalTaxRateInfo",
      "description": "Specified details about taxation in a given geographical region.",
      "type": "object",
      "properties": {
        "eligibleForStreamingServiceTaxRate": {
          "description": "You must tell us if your app contains streaming products to correctly charge US state and local sales tax. Field only supported in United States.",
          "type": "boolean"
        },
        "taxTier": {
          "enum": [
            "TAX_TIER_UNSPECIFIED",
            "TAX_TIER_BOOKS_1",
            "TAX_TIER_NEWS_1",
            "TAX_TIER_NEWS_2",
            "TAX_TIER_MUSIC_OR_AUDIO_1",
            "TAX_TIER_LIVE_OR_BROADCAST_1"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "Tax tier to specify reduced tax rate. Developers who sell digital news, magazines, newspapers, books, or audiobooks in various regions may be eligible for reduced tax rates. [Learn more](https://support.google.com/googleplay/android-developer/answer/10463498).",
          "type": "string"
        }
      }
    },
    "SubscriptionPurchasesDeferResponse": {
      "description": "Response for the purchases.subscriptions.defer API.",
      "properties": {
        "newExpiryTimeMillis": {
          "description": "The new expiry time for the subscription in milliseconds since the Epoch.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SubscriptionPurchasesDeferResponse"
    },
    "Comment": {
      "id": "Comment",
      "type": "object",
      "properties": {
        "developerComment": {
          "$ref": "DeveloperComment",
          "description": "A comment from a developer."
        },
        "userComment": {
          "$ref": "UserComment",
          "description": "A comment from a user."
        }
      },
      "description": "An entry of conversation between user and developer."
    },
    "TracksListResponse": {
      "description": "Response listing all tracks.",
      "id": "TracksListResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of this response (\"androidpublisher#tracksListResponse\")."
        },
        "tracks": {
          "items": {
            "$ref": "Track"
          },
          "type": "array",
          "description": "All tracks."
        }
      },
      "type": "object"
    },
    "SubscriptionPurchasesAcknowledgeRequest": {
      "type": "object",
      "id": "SubscriptionPurchasesAcknowledgeRequest",
      "description": "Request for the purchases.subscriptions.acknowledge API.",
      "properties": {
        "developerPayload": {
          "description": "Payload to attach to the purchase.",
          "type": "string"
        }
      }
    },
    "AppDetails": {
      "id": "AppDetails",
      "properties": {
        "contactPhone": {
          "description": "The user-visible support telephone number for this app.",
          "type": "string"
        },
        "contactWebsite": {
          "description": "The user-visible website for this app.",
          "type": "string"
        },
        "defaultLanguage": {
          "description": "Default language code, in BCP 47 format (eg \"en-US\").",
          "type": "string"
        },
        "contactEmail": {
          "type": "string",
          "description": "The user-visible support email for this app."
        }
      },
      "type": "object",
      "description": "The app details. The resource for DetailsService."
    },
    "ExpansionFilesUploadResponse": {
      "type": "object",
      "description": "Response for uploading an expansion file.",
      "properties": {
        "expansionFile": {
          "description": "The uploaded expansion file configuration.",
          "$ref": "ExpansionFile"
        }
      },
      "id": "ExpansionFilesUploadResponse"
    },
    "ListUsersResponse": {
      "id": "ListUsersResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token to pass to subsequent calls in order to retrieve subsequent results. This will not be set if there are no more results to return.",
          "type": "string"
        },
        "users": {
          "description": "The resulting users.",
          "items": {
            "$ref": "User"
          },
          "type": "array"
        }
      },
      "description": "A response containing one or more users with access to an account.",
      "type": "object"
    },
    "VoidedPurchase": {
      "properties": {
        "voidedSource": {
          "description": "The initiator of voided purchase, possible values are: 0. User 1. Developer 2. Google",
          "format": "int32",
          "type": "integer"
        },
        "orderId": {
          "type": "string",
          "description": "The order id which uniquely identifies a one-time purchase, subscription purchase, or subscription renewal."
        },
        "purchaseTimeMillis": {
          "format": "int64",
          "description": "The time at which the purchase was made, in milliseconds since the epoch (Jan 1, 1970).",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This kind represents a voided purchase object in the androidpublisher service."
        },
        "voidedTimeMillis": {
          "format": "int64",
          "description": "The time at which the purchase was canceled/refunded/charged-back, in milliseconds since the epoch (Jan 1, 1970).",
          "type": "string"
        },
        "voidedReason": {
          "format": "int32",
          "description": "The reason why the purchase was voided, possible values are: 0. Other 1. Remorse 2. Not_received 3. Defective 4. Accidental_purchase 5. Fraud 6. Friendly_fraud 7. Chargeback",
          "type": "integer"
        },
        "purchaseToken": {
          "description": "The token which uniquely identifies a one-time purchase or subscription. To uniquely identify subscription renewals use order_id (available starting from version 3 of the API).",
          "type": "string"
        }
      },
      "description": "A VoidedPurchase resource indicates a purchase that was either canceled/refunded/charged-back.",
      "id": "VoidedPurchase",
      "type": "object"
    },
    "ReviewsReplyResponse": {
      "type": "object",
      "description": "Response on status of replying to a review.",
      "id": "ReviewsReplyResponse",
      "properties": {
        "result": {
          "description": "The result of replying/updating a reply to review.",
          "$ref": "ReviewReplyResult"
        }
      }
    },
    "ImagesDeleteAllResponse": {
      "id": "ImagesDeleteAllResponse",
      "description": "Response for deleting all images.",
      "type": "object",
      "properties": {
        "deleted": {
          "items": {
            "$ref": "Image"
          },
          "type": "array",
          "description": "The deleted images."
        }
      }
    },
    "SystemFeature": {
      "properties": {
        "name": {
          "description": "The name of the feature.",
          "type": "string"
        }
      },
      "description": "Representation of a system feature.",
      "id": "SystemFeature",
      "type": "object"
    },
    "Grant": {
      "id": "Grant",
      "description": "An access grant resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Resource name for this grant, following the pattern \"developers/{developer}/users/{email}/grants/{package_name}\". If this grant is for a draft app, the app ID will be used in this resource name instead of the package name.",
          "type": "string"
        },
        "appLevelPermissions": {
          "items": {
            "enumDescriptions": [
              "Unknown or unspecified permission.",
              "View app information (read-only).",
              "View financial data.",
              "Admin (all permissions).",
              "Reply to reviews.",
              "Release to production, exclude devices, and use app signing by Google Play.",
              "Release to testing tracks.",
              "Manage testing tracks and edit tester lists.",
              "Manage store presence.",
              "Edit and delete draft apps.",
              "Manage orders and subscriptions."
            ],
            "type": "string",
            "enum": [
              "APP_LEVEL_PERMISSION_UNSPECIFIED",
              "CAN_ACCESS_APP",
              "CAN_VIEW_FINANCIAL_DATA",
              "CAN_MANAGE_PERMISSIONS",
              "CAN_REPLY_TO_REVIEWS",
              "CAN_MANAGE_PUBLIC_APKS",
              "CAN_MANAGE_TRACK_APKS",
              "CAN_MANAGE_TRACK_USERS",
              "CAN_MANAGE_PUBLIC_LISTING",
              "CAN_MANAGE_DRAFT_APPS",
              "CAN_MANAGE_ORDERS"
            ]
          },
          "type": "array",
          "description": "The permissions granted to the user for this app."
        },
        "packageName": {
          "description": "Immutable. The package name of the app. This will be empty for draft apps.",
          "type": "string"
        }
      }
    },
    "UserComment": {
      "id": "UserComment",
      "properties": {
        "reviewerLanguage": {
          "type": "string",
          "description": "Language code for the reviewer. This is taken from the device settings so is not guaranteed to match the language the review is written in. May be absent."
        },
        "androidOsVersion": {
          "format": "int32",
          "type": "integer",
          "description": "Integer Android SDK version of the user's device at the time the review was written, e.g. 23 is Marshmallow. May be absent."
        },
        "device": {
          "type": "string",
          "description": "Codename for the reviewer's device, e.g. klte, flounder. May be absent."
        },
        "deviceMetadata": {
          "description": "Information about the characteristics of the user's device.",
          "$ref": "DeviceMetadata"
        },
        "originalText": {
          "type": "string",
          "description": "Untranslated text of the review, where the review was translated. If the review was not translated this is left blank."
        },
        "appVersionCode": {
          "type": "integer",
          "format": "int32",
          "description": "Integer version code of the app as installed at the time the review was written. May be absent."
        },
        "thumbsDownCount": {
          "description": "Number of users who have given this review a thumbs down.",
          "format": "int32",
          "type": "integer"
        },
        "lastModified": {
          "$ref": "Timestamp",
          "description": "The last time at which this comment was updated."
        },
        "text": {
          "description": "The content of the comment, i.e. review body. In some cases users have been able to write a review with separate title and body; in those cases the title and body are concatenated and separated by a tab character.",
          "type": "string"
        },
        "thumbsUpCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of users who have given this review a thumbs up."
        },
        "starRating": {
          "description": "The star rating associated with the review, from 1 to 5.",
          "type": "integer",
          "format": "int32"
        },
        "appVersionName": {
          "description": "String version name of the app as installed at the time the review was written. May be absent.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "User entry from conversation between user and developer."
    },
    "PageInfo": {
      "properties": {
        "resultPerPage": {
          "format": "int32",
          "type": "integer",
          "description": "Maximum number of results returned in one page. ! The number of results included in the API response."
        },
        "startIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Index of the first result returned in the current page."
        },
        "totalResults": {
          "type": "integer",
          "description": "Total number of results available on the backend ! The total number of results in the result set.",
          "format": "int32"
        }
      },
      "id": "PageInfo",
      "description": "Information about the current page. List operations that supports paging return only one \"page\" of results. This protocol buffer message describes the page that has been returned.",
      "type": "object"
    },
    "TokenPagination": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Tokens to pass to the standard list field 'page_token'. Whenever available, tokens are preferred over manipulating start_index."
        },
        "previousPageToken": {
          "type": "string"
        }
      },
      "description": "Pagination information returned by a List operation when token pagination is enabled. List operations that supports paging return only one \"page\" of results. This protocol buffer message describes the page that has been returned. When using token pagination, clients should use the next/previous token to get another page of the result. The presence or absence of next/previous token indicates whether a next/previous page is available and provides a mean of accessing this page. ListRequest.page_token should be set to either next_page_token or previous_page_token to access another page.",
      "id": "TokenPagination"
    },
    "Review": {
      "id": "Review",
      "properties": {
        "authorName": {
          "type": "string",
          "description": "The name of the user who wrote the review."
        },
        "comments": {
          "description": "A repeated field containing comments for the review.",
          "items": {
            "$ref": "Comment"
          },
          "type": "array"
        },
        "reviewId": {
          "description": "Unique identifier for this review.",
          "type": "string"
        }
      },
      "description": "An Android app review.",
      "type": "object"
    },
    "SubscriptionPriceChange": {
      "type": "object",
      "id": "SubscriptionPriceChange",
      "properties": {
        "state": {
          "format": "int32",
          "type": "integer",
          "description": "The current state of the price change. Possible values are: 0. Outstanding: State for a pending price change waiting for the user to agree. In this state, you can optionally seek confirmation from the user using the In-App API. 1. Accepted: State for an accepted price change that the subscription will renew with unless it's canceled. The price change takes effect on a future date when the subscription renews. Note that the change might not occur when the subscription is renewed next."
        },
        "newPrice": {
          "$ref": "Price",
          "description": "The new price the subscription will renew with if the price change is accepted by the user."
        }
      },
      "description": "Contains the price change information for a subscription that can be used to control the user journey for the price change in the app. This can be in the form of seeking confirmation from the user or tailoring the experience for a successful conversion."
    },
    "Apk": {
      "description": "Information about an APK. The resource for ApksService.",
      "type": "object",
      "properties": {
        "binary": {
          "description": "Information about the binary payload of this APK.",
          "$ref": "ApkBinary"
        },
        "versionCode": {
          "format": "int32",
          "type": "integer",
          "description": "The version code of the APK, as specified in the manifest file."
        }
      },
      "id": "Apk"
    },
    "ListDeviceTierConfigsResponse": {
      "description": "Response listing existing device tier configs.",
      "type": "object",
      "id": "ListDeviceTierConfigsResponse",
      "properties": {
        "deviceTierConfigs": {
          "type": "array",
          "description": "Device tier configs created by the developer.",
          "items": {
            "$ref": "DeviceTierConfig"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "LocalizedText": {
      "id": "LocalizedText",
      "type": "object",
      "description": "Localized text in given language.",
      "properties": {
        "language": {
          "description": "Language localization code (a BCP-47 language tag; for example, \"de-AT\" for Austrian German).",
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "The text in the given language."
        }
      }
    },
    "DeviceTier": {
      "id": "DeviceTier",
      "properties": {
        "level": {
          "format": "int32",
          "description": "The priority level of the tier. Tiers are evaluated in descending order of level: the highest level tier has the highest priority. The highest tier matching a given device is selected for that device. You should use a contiguous range of levels for your tiers in a tier set; tier levels in a tier set must be unique. For instance, if your tier set has 4 tiers (including the global fallback), you should define tiers 1, 2 and 3 in this configuration. Note: tier 0 is implicitly defined as a global fallback and selected for devices that don't match any of the tiers explicitly defined here. You mustn't define level 0 explicitly in this configuration.",
          "type": "integer"
        },
        "deviceGroupNames": {
          "description": "Groups of devices included in this tier. These groups must be defined explicitly under device_groups in this configuration.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "A single device tier. Devices matching any of the device groups in device_group_names are considered to match the tier.",
      "type": "object"
    },
    "ListingsListResponse": {
      "type": "object",
      "properties": {
        "listings": {
          "description": "All localized listings.",
          "type": "array",
          "items": {
            "$ref": "Listing"
          }
        },
        "kind": {
          "description": "The kind of this response (\"androidpublisher#listingsListResponse\").",
          "type": "string"
        }
      },
      "description": "Response listing all localized listings.",
      "id": "ListingsListResponse"
    },
    "SubscriptionPurchasesDeferRequest": {
      "properties": {
        "deferralInfo": {
          "description": "The information about the new desired expiry time for the subscription.",
          "$ref": "SubscriptionDeferralInfo"
        }
      },
      "type": "object",
      "description": "Request for the purchases.subscriptions.defer API.",
      "id": "SubscriptionPurchasesDeferRequest"
    }
  },
  "ownerName": "Google",
  "revision": "20220411",
  "parameters": {
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "type": "string",
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "default": "json"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    }
  },
  "ownerDomain": "google.com",
  "name": "androidpublisher",
  "batchPath": "batch",
  "title": "Google Play Android Developer API",
  "version": "v3",
  "basePath": ""
}

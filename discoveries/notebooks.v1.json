{
  "revision": "20230810",
  "description": "Notebooks API is used to manage notebook resources in Google Cloud.",
  "canonicalName": "AI Platform Notebooks",
  "schemas": {
    "VertexAIParameters": {
      "id": "VertexAIParameters",
      "properties": {
        "network": {
          "description": "The full name of the Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where `{project}` is a project number, as in `12345`, and `{network}` is a network name. Private services access must already be configured for the network. If left unspecified, the job is not peered with any network.",
          "type": "string"
        },
        "env": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Environment variables. At most 100 environment variables can be specified and unique. Example: `GCP_BUCKET=gs://my-bucket/samples/`",
          "type": "object"
        }
      },
      "description": "Parameters used in Vertex AI JobType executions.",
      "type": "object"
    },
    "Instance": {
      "type": "object",
      "description": "The definition of a notebook instance. Next tag: 43",
      "id": "Instance",
      "properties": {
        "shieldedInstanceConfig": {
          "$ref": "ShieldedInstanceConfig",
          "description": "Optional. Shielded VM configuration. [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm)."
        },
        "name": {
          "description": "Output only. The name of this notebook instance. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
          "type": "string",
          "readOnly": true
        },
        "instanceMigrationEligibility": {
          "$ref": "InstanceMigrationEligibility",
          "description": "Output only. Checks how feasible a migration from UmN to WbI is.",
          "readOnly": true
        },
        "creator": {
          "description": "Output only. Email address of entity that sent original CreateInstance request.",
          "type": "string",
          "readOnly": true
        },
        "dataDiskType": {
          "enumDescriptions": [
            "Disk type not set.",
            "Standard persistent disk type.",
            "SSD persistent disk type.",
            "Balanced persistent disk type.",
            "Extreme persistent disk type."
          ],
          "type": "string",
          "enum": [
            "DISK_TYPE_UNSPECIFIED",
            "PD_STANDARD",
            "PD_SSD",
            "PD_BALANCED",
            "PD_EXTREME"
          ],
          "description": "Input only. The type of the data disk attached to this instance, defaults to standard persistent disk (`PD_STANDARD`)."
        },
        "proxyUri": {
          "description": "Output only. The proxy endpoint that is used to access the Jupyter notebook.",
          "readOnly": true,
          "type": "string"
        },
        "postStartupScript": {
          "description": "Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path (`gs://path-to-file/file-name`).",
          "type": "string"
        },
        "network": {
          "description": "The name of the VPC that this instance is in. Format: `projects/{project_id}/global/networks/{network_id}`",
          "type": "string"
        },
        "bootDiskType": {
          "description": "Input only. The type of the boot disk attached to this instance, defaults to standard persistent disk (`PD_STANDARD`).",
          "type": "string",
          "enumDescriptions": [
            "Disk type not set.",
            "Standard persistent disk type.",
            "SSD persistent disk type.",
            "Balanced persistent disk type.",
            "Extreme persistent disk type."
          ],
          "enum": [
            "DISK_TYPE_UNSPECIFIED",
            "PD_STANDARD",
            "PD_SSD",
            "PD_BALANCED",
            "PD_EXTREME"
          ]
        },
        "upgradeHistory": {
          "items": {
            "$ref": "UpgradeHistoryEntry"
          },
          "description": "The upgrade history of this instance.",
          "type": "array"
        },
        "noPublicIp": {
          "description": "If true, no external IP will be assigned to this instance.",
          "type": "boolean"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags))."
        },
        "disks": {
          "items": {
            "$ref": "Disk"
          },
          "readOnly": true,
          "description": "Output only. Attached disks to notebook instance.",
          "type": "array"
        },
        "migrated": {
          "description": "Output only. Bool indicating whether this notebook has been migrated to a Workbench Instance",
          "readOnly": true,
          "type": "boolean"
        },
        "serviceAccountScopes": {
          "description": "Optional. The URIs of service account scopes to be included in Compute Engine instances. If not specified, the following [scopes](https://cloud.google.com/compute/docs/access/service-accounts#accesscopesiam) are defined: - https://www.googleapis.com/auth/cloud-platform - https://www.googleapis.com/auth/userinfo.email If not using default scopes, you need at least: https://www.googleapis.com/auth/compute",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "machineType": {
          "type": "string",
          "description": "Required. The [Compute Engine machine type](https://cloud.google.com/compute/docs/machine-types) of this instance."
        },
        "createTime": {
          "description": "Output only. Instance creation time.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "reservationAffinity": {
          "$ref": "ReservationAffinity",
          "description": "Optional. The optional reservation affinity. Setting this field will apply the specified [Zonal Compute Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) to this notebook instance."
        },
        "canIpForward": {
          "type": "boolean",
          "description": "Optional. Flag to enable ip forwarding or not, default false/off. https://cloud.google.com/vpc/docs/using-routes#canipforward"
        },
        "customGpuDriverPath": {
          "type": "string",
          "description": "Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom metadata to apply to this instance.",
          "type": "object"
        },
        "serviceAccount": {
          "description": "The service account on this instance, giving access to other Google Cloud services. You can use any service account within the same project, but you must have the service account user permission to use the instance. If not specified, the [Compute Engine default service account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.",
          "type": "string"
        },
        "dataDiskSizeGb": {
          "description": "Input only. The size of the data disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). You can choose the size of the data disk based on how big your notebooks and data are. If not specified, this defaults to 100.",
          "format": "int64",
          "type": "string"
        },
        "acceleratorConfig": {
          "description": "The hardware accelerator used on this instance. If you use accelerators, make sure that your configuration has [enough vCPUs and memory to support the `machine_type` you have selected](https://cloud.google.com/compute/docs/gpus/#gpus-list).",
          "$ref": "AcceleratorConfig"
        },
        "vmImage": {
          "description": "Use a Compute Engine VM image to start the notebook instance.",
          "$ref": "VmImage"
        },
        "diskEncryption": {
          "enum": [
            "DISK_ENCRYPTION_UNSPECIFIED",
            "GMEK",
            "CMEK"
          ],
          "type": "string",
          "description": "Input only. Disk encryption method used on the boot and data disks, defaults to GMEK.",
          "enumDescriptions": [
            "Disk encryption is not specified.",
            "Use Google managed encryption keys to encrypt the boot disk.",
            "Use customer managed encryption keys to encrypt the boot disk."
          ]
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels to apply to this instance. These can be later modified by the setLabels method."
        },
        "installGpuDriver": {
          "description": "Whether the end user authorizes Google Cloud to install GPU driver on this instance. If this field is empty or set to false, the GPU driver won't be installed. Only applicable to instances with GPUs.",
          "type": "boolean"
        },
        "subnet": {
          "type": "string",
          "description": "The name of the subnet that this instance is in. Format: `projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}`"
        },
        "nicType": {
          "enum": [
            "UNSPECIFIED_NIC_TYPE",
            "VIRTIO_NET",
            "GVNIC"
          ],
          "type": "string",
          "description": "Optional. The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.",
          "enumDescriptions": [
            "No type specified.",
            "VIRTIO",
            "GVNIC"
          ]
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. Instance update time.",
          "type": "string",
          "readOnly": true
        },
        "instanceOwners": {
          "items": {
            "type": "string"
          },
          "description": "Input only. The owner of this instance after creation. Format: `alias@example.com` Currently supports one owner only. If not specified, all of the service account users of your VM instance's service account can use the instance.",
          "type": "array"
        },
        "kmsKey": {
          "description": "Input only. The KMS key used to encrypt the disks, only applicable if disk_encryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}` Learn more about [using your own encryption keys](/kms/docs/quickstart).",
          "type": "string"
        },
        "bootDiskSizeGb": {
          "type": "string",
          "description": "Input only. The size of the boot disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). The minimum recommended value is 100 GB. If not specified, this defaults to 100.",
          "format": "int64"
        },
        "containerImage": {
          "description": "Use a container image to start the notebook instance.",
          "$ref": "ContainerImage"
        },
        "state": {
          "readOnly": true,
          "description": "Output only. The state of this instance.",
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "The control logic is starting the instance.",
            "The control logic is installing required frameworks and registering the instance with notebook proxy",
            "The instance is running.",
            "The control logic is stopping the instance.",
            "The instance is stopped.",
            "The instance is deleted.",
            "The instance is upgrading.",
            "The instance is being created.",
            "The instance is getting registered.",
            "The instance is suspending.",
            "The instance is suspended."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTING",
            "PROVISIONING",
            "ACTIVE",
            "STOPPING",
            "STOPPED",
            "DELETED",
            "UPGRADING",
            "INITIALIZING",
            "REGISTERING",
            "SUSPENDING",
            "SUSPENDED"
          ]
        },
        "noRemoveDataDisk": {
          "type": "boolean",
          "description": "Input only. If true, the data disk will not be auto deleted when deleting the instance."
        },
        "noProxyAccess": {
          "type": "boolean",
          "description": "If true, the notebook instance will not register with the proxy."
        }
      }
    },
    "BootImage": {
      "properties": {},
      "type": "object",
      "id": "BootImage",
      "description": "Definition of the boot image used by the Runtime. Used to facilitate runtime upgradeability."
    },
    "UpgradeRuntimeRequest": {
      "type": "object",
      "description": "Request for upgrading a Managed Notebook Runtime to the latest version. option (google.api.message_visibility).restriction = \"TRUSTED_TESTER,SPECIAL_TESTER\";",
      "properties": {
        "requestId": {
          "description": "Idempotent request UUID.",
          "type": "string"
        }
      },
      "id": "UpgradeRuntimeRequest"
    },
    "GetInstanceHealthResponse": {
      "id": "GetInstanceHealthResponse",
      "properties": {
        "healthInfo": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Output only. Additional information about instance health. Example: healthInfo\": { \"docker_proxy_agent_status\": \"1\", \"docker_status\": \"1\", \"jupyterlab_api_status\": \"-1\", \"jupyterlab_status\": \"-1\", \"updated\": \"2020-10-18 09:40:03.573409\" }",
          "readOnly": true
        },
        "healthState": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Runtime health_state.",
          "enumDescriptions": [
            "The instance substate is unknown.",
            "The instance is known to be in an healthy state (for example, critical daemons are running) Applies to ACTIVE state.",
            "The instance is known to be in an unhealthy state (for example, critical daemons are not running) Applies to ACTIVE state.",
            "The instance has not installed health monitoring agent. Applies to ACTIVE state.",
            "The instance health monitoring agent is not running. Applies to ACTIVE state."
          ],
          "enum": [
            "HEALTH_STATE_UNSPECIFIED",
            "HEALTHY",
            "UNHEALTHY",
            "AGENT_NOT_INSTALLED",
            "AGENT_NOT_RUNNING"
          ]
        }
      },
      "type": "object",
      "description": "Response for checking if a notebook instance is healthy."
    },
    "InstanceConfig": {
      "type": "object",
      "description": "Notebook instance configurations that can be updated.",
      "id": "InstanceConfig",
      "properties": {
        "notebookUpgradeSchedule": {
          "type": "string",
          "description": "Cron expression in UTC timezone, used to schedule instance auto upgrade. Please follow the [cron format](https://en.wikipedia.org/wiki/Cron)."
        },
        "enableHealthMonitoring": {
          "type": "boolean",
          "description": "Verifies core internal services are running."
        }
      }
    },
    "RuntimeAcceleratorConfig": {
      "properties": {
        "type": {
          "description": "Accelerator model.",
          "type": "string",
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "enumDescriptions": [
            "Accelerator type is not specified.",
            "Accelerator type is Nvidia Tesla K80.",
            "Accelerator type is Nvidia Tesla P100.",
            "Accelerator type is Nvidia Tesla V100.",
            "Accelerator type is Nvidia Tesla P4.",
            "Accelerator type is Nvidia Tesla T4.",
            "Accelerator type is Nvidia Tesla A100 - 40GB.",
            "Accelerator type is Nvidia L4.",
            "(Coming soon) Accelerator type is TPU V2.",
            "(Coming soon) Accelerator type is TPU V3.",
            "Accelerator type is NVIDIA Tesla T4 Virtual Workstations.",
            "Accelerator type is NVIDIA Tesla P100 Virtual Workstations.",
            "Accelerator type is NVIDIA Tesla P4 Virtual Workstations."
          ],
          "enum": [
            "ACCELERATOR_TYPE_UNSPECIFIED",
            "NVIDIA_TESLA_K80",
            "NVIDIA_TESLA_P100",
            "NVIDIA_TESLA_V100",
            "NVIDIA_TESLA_P4",
            "NVIDIA_TESLA_T4",
            "NVIDIA_TESLA_A100",
            "NVIDIA_L4",
            "TPU_V2",
            "TPU_V3",
            "NVIDIA_TESLA_T4_VWS",
            "NVIDIA_TESLA_P100_VWS",
            "NVIDIA_TESLA_P4_VWS"
          ]
        },
        "coreCount": {
          "type": "string",
          "description": "Count of cores of this accelerator.",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "RuntimeAcceleratorConfig",
      "description": "Definition of the types of hardware accelerators that can be used. See [Compute Engine AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes). Examples: * `nvidia-tesla-k80` * `nvidia-tesla-p100` * `nvidia-tesla-v100` * `nvidia-tesla-p4` * `nvidia-tesla-t4` * `nvidia-tesla-a100`"
    },
    "Policy": {
      "type": "object",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32",
          "type": "integer"
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "items": {
            "$ref": "Binding"
          },
          "type": "array"
        },
        "etag": {
          "format": "byte",
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        }
      },
      "id": "Policy"
    },
    "TestIamPermissionsRequest": {
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsRequest",
      "type": "object",
      "description": "Request message for `TestIamPermissions` method."
    },
    "RuntimeShieldedInstanceConfig": {
      "description": "A set of Shielded Instance options. See [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm). Not all combinations are valid.",
      "type": "object",
      "id": "RuntimeShieldedInstanceConfig",
      "properties": {
        "enableVtpm": {
          "type": "boolean",
          "description": "Defines whether the instance has the vTPM enabled. Enabled by default."
        },
        "enableSecureBoot": {
          "type": "boolean",
          "description": "Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default."
        },
        "enableIntegrityMonitoring": {
          "type": "boolean",
          "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created. Enabled by default."
        }
      }
    },
    "ResetRuntimeRequest": {
      "id": "ResetRuntimeRequest",
      "description": "Request for resetting a Managed Notebook Runtime.",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Idempotent request UUID."
        }
      },
      "type": "object"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "id": "Status"
    },
    "SetInstanceAcceleratorRequest": {
      "properties": {
        "coreCount": {
          "type": "string",
          "format": "int64",
          "description": "Required. Count of cores of this accelerator. Note that not all combinations of `type` and `core_count` are valid. See [GPUs on Compute Engine](https://cloud.google.com/compute/docs/gpus/#gpus-list) to find a valid combination. TPUs are not supported."
        },
        "type": {
          "enum": [
            "ACCELERATOR_TYPE_UNSPECIFIED",
            "NVIDIA_TESLA_K80",
            "NVIDIA_TESLA_P100",
            "NVIDIA_TESLA_V100",
            "NVIDIA_TESLA_P4",
            "NVIDIA_TESLA_T4",
            "NVIDIA_TESLA_A100",
            "NVIDIA_L4",
            "NVIDIA_TESLA_T4_VWS",
            "NVIDIA_TESLA_P100_VWS",
            "NVIDIA_TESLA_P4_VWS",
            "TPU_V2",
            "TPU_V3"
          ],
          "description": "Required. Type of this accelerator.",
          "type": "string",
          "enumDescriptions": [
            "Accelerator type is not specified.",
            "Accelerator type is Nvidia Tesla K80.",
            "Accelerator type is Nvidia Tesla P100.",
            "Accelerator type is Nvidia Tesla V100.",
            "Accelerator type is Nvidia Tesla P4.",
            "Accelerator type is Nvidia Tesla T4.",
            "Accelerator type is Nvidia Tesla A100.",
            "Accelerator type is Nvidia Tesla L4.",
            "Accelerator type is NVIDIA Tesla T4 Virtual Workstations.",
            "Accelerator type is NVIDIA Tesla P100 Virtual Workstations.",
            "Accelerator type is NVIDIA Tesla P4 Virtual Workstations.",
            "(Coming soon) Accelerator type is TPU V2.",
            "(Coming soon) Accelerator type is TPU V3."
          ]
        }
      },
      "description": "Request for setting instance accelerator.",
      "type": "object",
      "id": "SetInstanceAcceleratorRequest"
    },
    "Execution": {
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource name of the execute. Format: `projects/{project_id}/locations/{location}/executions/{execution_id}`"
        },
        "executionTemplate": {
          "description": "execute metadata including name, hardware spec, region, labels, etc.",
          "$ref": "ExecutionTemplate"
        },
        "jobUri": {
          "readOnly": true,
          "description": "Output only. The URI of the external job used to execute the notebook.",
          "type": "string"
        },
        "description": {
          "description": "A brief description of this execution.",
          "type": "string"
        },
        "outputNotebookFile": {
          "type": "string",
          "description": "Output notebook file generated by this execution"
        },
        "state": {
          "enumDescriptions": [
            "The job state is unspecified.",
            "The job has been just created and processing has not yet begun.",
            "The service is preparing to execution the job.",
            "The job is in progress.",
            "The job completed successfully.",
            "The job failed. `error_message` should contain the details of the failure.",
            "The job is being cancelled. `error_message` should describe the reason for the cancellation.",
            "The job has been cancelled. `error_message` should describe the reason for the cancellation.",
            "The job has become expired (relevant to Vertex AI jobs) https://cloud.google.com/vertex-ai/docs/reference/rest/v1/JobState",
            "The Execution is being created."
          ],
          "description": "Output only. State of the underlying AI Platform job.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "QUEUED",
            "PREPARING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLING",
            "CANCELLED",
            "EXPIRED",
            "INITIALIZING"
          ],
          "type": "string"
        },
        "displayName": {
          "description": "Output only. Name used for UI purposes. Name can only contain alphanumeric characters and underscores '_'.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Time the Execution was last updated.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Time the Execution was instantiated.",
          "format": "google-datetime"
        }
      },
      "id": "Execution",
      "type": "object",
      "description": "The definition of a single executed notebook."
    },
    "UpdateInstanceMetadataItemsResponse": {
      "type": "object",
      "id": "UpdateInstanceMetadataItemsResponse",
      "description": "Response for adding/changing metadata items for an instance.",
      "properties": {
        "items": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map of items that were added/updated to/in the metadata."
        }
      }
    },
    "RollbackInstanceRequest": {
      "id": "RollbackInstanceRequest",
      "properties": {
        "targetSnapshot": {
          "description": "Required. The snapshot for rollback. Example: `projects/test-project/global/snapshots/krwlzipynril`.",
          "type": "string"
        }
      },
      "description": "Request for rollbacking a notebook instance",
      "type": "object"
    },
    "UpdateInstanceConfigRequest": {
      "properties": {
        "config": {
          "description": "The instance configurations to be updated.",
          "$ref": "InstanceConfig"
        }
      },
      "type": "object",
      "id": "UpdateInstanceConfigRequest",
      "description": "Request for updating instance configurations."
    },
    "Environment": {
      "description": "Definition of a software environment that is used to start a notebook instance.",
      "properties": {
        "containerImage": {
          "description": "Use a container image to start the notebook instance.",
          "$ref": "ContainerImage"
        },
        "vmImage": {
          "description": "Use a Compute Engine VM image to start the notebook instance.",
          "$ref": "VmImage"
        },
        "description": {
          "description": "A brief description of this environment.",
          "type": "string"
        },
        "postStartupScript": {
          "description": "Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path. Example: `\"gs://path-to-file/file-name\"`",
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of this environment. Format: `projects/{project_id}/locations/{location}/environments/{environment_id}`"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time at which this environment was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "displayName": {
          "description": "Display name of this environment for the UI.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Environment"
    },
    "ListExecutionsResponse": {
      "description": "Response for listing scheduled notebook executions",
      "type": "object",
      "properties": {
        "executions": {
          "items": {
            "$ref": "Execution"
          },
          "description": "A list of returned instances.",
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "description": "Executions IDs that could not be reached. For example: ['projects/{project_id}/location/{location}/executions/imagenet_test1', 'projects/{project_id}/location/{location}/executions/classifier_train1']",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "Page token that can be used to continue listing from the last result in the next list call.",
          "type": "string"
        }
      },
      "id": "ListExecutionsResponse"
    },
    "InstanceMigrationEligibility": {
      "properties": {
        "errors": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "enum": [
              "ERROR_UNSPECIFIED",
              "DATAPROC_HUB"
            ],
            "enumDescriptions": [
              "Default type.",
              "The UmN uses Dataproc Hub and cannot be migrated."
            ]
          },
          "description": "Output only. Certain configurations make the UmN ineligible for an automatic migration. A manual migration is required."
        },
        "warnings": {
          "type": "array",
          "description": "Output only. Certain configurations will be defaulted during the migration.",
          "items": {
            "enumDescriptions": [
              "Default type.",
              "The UmN uses an machine type that's unsupported in WbI. It will be migrated with the default machine type n2-standard-4. Users can change the machine type after the migration.",
              "The UmN uses an accelerator type that's unsupported in WbI. It will be migrated without an accelerator. User can attach an accelerator after the migration.",
              "The UmN uses an operating system that's unsupported in WbI (e.g. Debian 10, Ubuntu). It will be replaced with Debian 11 in WbI.",
              "This UmN is configured with no_remove_data_disk, which is no longer available in WbI.",
              "This UmN is configured with the Cloud Storage backup feature, which is no longer available in WbI.",
              "This UmN is configured with a post startup script. Please optionally provide the `post_startup_script_option` for the migration."
            ],
            "enum": [
              "WARNING_UNSPECIFIED",
              "UNSUPPORTED_MACHINE_TYPE",
              "UNSUPPORTED_ACCELERATOR_TYPE",
              "UNSUPPORTED_OS",
              "NO_REMOVE_DATA_DISK",
              "GCS_BACKUP",
              "POST_STARTUP_SCRIPT"
            ],
            "type": "string"
          },
          "readOnly": true
        }
      },
      "description": "InstanceMigrationEligibility represents the feasibility information of a migration from UmN to WbI. Next tag: 3",
      "id": "InstanceMigrationEligibility",
      "type": "object"
    },
    "EncryptionConfig": {
      "type": "object",
      "description": "Represents a custom encryption key configuration that can be applied to a resource. This will encrypt all disks in Virtual Machine.",
      "properties": {
        "kmsKey": {
          "type": "string",
          "description": "The Cloud KMS resource identifier of the customer-managed encryption key used to protect a resource, such as a disks. It has the following format: `projects/{PROJECT_ID}/locations/{REGION}/keyRings/{KEY_RING_NAME}/cryptoKeys/{KEY_NAME}`"
        }
      },
      "id": "EncryptionConfig"
    },
    "RuntimeGuestOsFeature": {
      "properties": {
        "type": {
          "description": "The ID of a supported feature. Read [Enabling guest operating system features](https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features) to see a list of available options. Valid values: * `FEATURE_TYPE_UNSPECIFIED` * `MULTI_IP_SUBNET` * `SECURE_BOOT` * `UEFI_COMPATIBLE` * `VIRTIO_SCSI_MULTIQUEUE` * `WINDOWS`",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Optional. A list of features to enable on the guest operating system. Applicable only for bootable images. Read [Enabling guest operating system features](https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features) to see a list of available options. Guest OS features for boot disk.",
      "id": "RuntimeGuestOsFeature"
    },
    "UpgradeHistoryEntry": {
      "type": "object",
      "id": "UpgradeHistoryEntry",
      "properties": {
        "targetVersion": {
          "type": "string",
          "description": "Target VM Version, like m63."
        },
        "version": {
          "description": "The version of the notebook instance before this upgrade.",
          "type": "string"
        },
        "framework": {
          "description": "The framework of this notebook instance.",
          "type": "string"
        },
        "action": {
          "type": "string",
          "description": "Action. Rolloback or Upgrade.",
          "enum": [
            "ACTION_UNSPECIFIED",
            "UPGRADE",
            "ROLLBACK"
          ],
          "enumDescriptions": [
            "Operation is not specified.",
            "Upgrade.",
            "Rollback."
          ]
        },
        "state": {
          "enumDescriptions": [
            "State is not specified.",
            "The instance upgrade is started.",
            "The instance upgrade is succeeded.",
            "The instance upgrade is failed."
          ],
          "description": "The state of this instance upgrade history entry.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTED",
            "SUCCEEDED",
            "FAILED"
          ]
        },
        "containerImage": {
          "description": "The container image before this instance upgrade.",
          "type": "string"
        },
        "vmImage": {
          "type": "string",
          "description": "The VM image before this instance upgrade."
        },
        "targetImage": {
          "type": "string",
          "deprecated": true,
          "description": "Target VM Image. Format: `ainotebooks-vm/project/image-name/name`."
        },
        "snapshot": {
          "type": "string",
          "description": "The snapshot of the boot disk of this notebook instance before upgrade."
        },
        "createTime": {
          "description": "The time that this instance upgrade history entry is created.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "The entry of VM image upgrade history."
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListLocationsResponse",
      "type": "object"
    },
    "ReportInstanceInfoRequest": {
      "type": "object",
      "description": "Request for notebook instances to report information to Notebooks API.",
      "id": "ReportInstanceInfoRequest",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The metadata reported to Notebooks API. This will be merged to the instance metadata store"
        },
        "vmId": {
          "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
          "type": "string"
        }
      }
    },
    "ContainerImage": {
      "type": "object",
      "id": "ContainerImage",
      "properties": {
        "repository": {
          "description": "Required. The path to the container image repository. For example: `gcr.io/{project_id}/{image_name}`",
          "type": "string"
        },
        "tag": {
          "description": "The tag of the container image. If not specified, this defaults to the latest tag.",
          "type": "string"
        }
      },
      "description": "Definition of a container image for starting a notebook instance with the environment installed in a container."
    },
    "ListSchedulesResponse": {
      "id": "ListSchedulesResponse",
      "properties": {
        "schedules": {
          "type": "array",
          "items": {
            "$ref": "Schedule"
          },
          "description": "A list of returned instances."
        },
        "nextPageToken": {
          "description": "Page token that can be used to continue listing from the last result in the next list call.",
          "type": "string"
        },
        "unreachable": {
          "description": "Schedules that could not be reached. For example: ['projects/{project_id}/location/{location}/schedules/monthly_digest', 'projects/{project_id}/location/{location}/schedules/weekly_sentiment']",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Response for listing scheduled notebook job.",
      "type": "object"
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        }
      }
    },
    "Schedule": {
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLED",
            "PAUSED",
            "DISABLED",
            "UPDATE_FAILED",
            "INITIALIZING",
            "DELETING"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "The job is executing normally.",
            "The job is paused by the user. It will not execute. A user can intentionally pause the job using PauseJobRequest.",
            "The job is disabled by the system due to error. The user cannot directly set a job to be disabled.",
            "The job state resulting from a failed CloudScheduler.UpdateJob operation. To recover a job from this state, retry CloudScheduler.UpdateJob until a successful response is received.",
            "The schedule resource is being created.",
            "The schedule resource is being deleted."
          ],
          "type": "string"
        },
        "recentExecutions": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "Execution"
          },
          "description": "Output only. The most recent execution names triggered from this schedule and their corresponding states."
        },
        "cronSchedule": {
          "type": "string",
          "description": "Cron-tab formatted schedule by which the job will execute. Format: minute, hour, day of month, month, day of week, e.g. `0 0 * * WED` = every Wednesday More examples: https://crontab.guru/examples.html"
        },
        "timeZone": {
          "description": "Timezone on which the cron_schedule. The value of this field must be a time zone name from the tz database. TZ Database: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones Note that some time zones include a provision for daylight savings time. The rules for daylight saving time are determined by the chosen tz. For UTC use the string \"utc\". If a time zone is not specified, the default will be in UTC (also known as GMT).",
          "type": "string"
        },
        "displayName": {
          "description": "Output only. Display name used for UI purposes. Name can only contain alphanumeric characters, hyphens `-`, and underscores `_`.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of this schedule. Format: `projects/{project_id}/locations/{location}/schedules/{schedule_id}`"
        },
        "description": {
          "type": "string",
          "description": "A brief description of this environment."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Time the schedule was created."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. Time the schedule was last updated.",
          "readOnly": true,
          "type": "string"
        },
        "executionTemplate": {
          "$ref": "ExecutionTemplate",
          "description": "Notebook Execution Template corresponding to this schedule."
        }
      },
      "id": "Schedule",
      "description": "The definition of a schedule.",
      "type": "object"
    },
    "SetInstanceLabelsRequest": {
      "type": "object",
      "description": "Request for setting instance labels.",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels to apply to this instance. These can be later modified by the setLabels method"
        }
      },
      "id": "SetInstanceLabelsRequest"
    },
    "ReservationAffinity": {
      "description": "Reservation Affinity for consuming Zonal reservation.",
      "id": "ReservationAffinity",
      "properties": {
        "key": {
          "description": "Optional. Corresponds to the label key of reservation resource.",
          "type": "string"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "description": "Optional. Corresponds to the label values of reservation resource.",
          "type": "array"
        },
        "consumeReservationType": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "NO_RESERVATION",
            "ANY_RESERVATION",
            "SPECIFIC_RESERVATION"
          ],
          "enumDescriptions": [
            "Default type.",
            "Do not consume from any allocated capacity.",
            "Consume any reservation available.",
            "Must consume from a specific reservation. Must specify key value fields for specifying the reservations."
          ],
          "description": "Optional. Type of reservation to consume"
        }
      },
      "type": "object"
    },
    "RegisterInstanceRequest": {
      "properties": {
        "instanceId": {
          "type": "string",
          "description": "Required. User defined unique ID of this instance. The `instance_id` must be 1 to 63 characters long and contain only lowercase letters, numeric characters, and dashes. The first character must be a lowercase letter and the last character cannot be a dash."
        }
      },
      "description": "Request for registering a notebook instance.",
      "type": "object",
      "id": "RegisterInstanceRequest"
    },
    "UpgradeInstanceRequest": {
      "description": "Request for upgrading a notebook instance",
      "id": "UpgradeInstanceRequest",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Upgrade type is not specified.",
            "Upgrade ML framework.",
            "Upgrade Operating System.",
            "Upgrade CUDA.",
            "Upgrade All (OS, Framework and CUDA)."
          ],
          "description": "Optional. The optional UpgradeType. Setting this field will search for additional compute images to upgrade this instance.",
          "enum": [
            "UPGRADE_TYPE_UNSPECIFIED",
            "UPGRADE_FRAMEWORK",
            "UPGRADE_OS",
            "UPGRADE_CUDA",
            "UPGRADE_ALL"
          ]
        }
      }
    },
    "GuestOsFeature": {
      "description": "Guest OS features for boot disk.",
      "properties": {
        "type": {
          "description": "The ID of a supported feature. Read Enabling guest operating system features to see a list of available options. Valid values: * `FEATURE_TYPE_UNSPECIFIED` * `MULTI_IP_SUBNET` * `SECURE_BOOT` * `UEFI_COMPATIBLE` * `VIRTIO_SCSI_MULTIQUEUE` * `WINDOWS`",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GuestOsFeature"
    },
    "Runtime": {
      "description": "The definition of a Runtime for a managed notebook instance.",
      "id": "Runtime",
      "properties": {
        "migrated": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Bool indicating whether this notebook has been migrated to a Workbench Instance"
        },
        "healthState": {
          "type": "string",
          "enum": [
            "HEALTH_STATE_UNSPECIFIED",
            "HEALTHY",
            "UNHEALTHY",
            "AGENT_NOT_INSTALLED",
            "AGENT_NOT_RUNNING"
          ],
          "enumDescriptions": [
            "The runtime substate is unknown.",
            "The runtime is known to be in an healthy state (for example, critical daemons are running) Applies to ACTIVE state.",
            "The runtime is known to be in an unhealthy state (for example, critical daemons are not running) Applies to ACTIVE state.",
            "The runtime has not installed health monitoring agent. Applies to ACTIVE state.",
            "The runtime health monitoring agent is not running. Applies to ACTIVE state."
          ],
          "description": "Output only. Runtime health_state.",
          "readOnly": true
        },
        "metrics": {
          "readOnly": true,
          "$ref": "RuntimeMetrics",
          "description": "Output only. Contains Runtime daemon metrics such as Service status and JupyterLab stats."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. The labels to associate with this Managed Notebook or Runtime. Label **keys** must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster."
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Runtime creation time."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource name of the runtime. Format: `projects/{project}/locations/{location}/runtimes/{runtimeId}`"
        },
        "updateTime": {
          "description": "Output only. Runtime update time.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "virtualMachine": {
          "$ref": "VirtualMachine",
          "description": "Use a Compute Engine VM image to start the managed notebook instance."
        },
        "softwareConfig": {
          "description": "The config settings for software inside the runtime.",
          "$ref": "RuntimeSoftwareConfig"
        },
        "accessConfig": {
          "$ref": "RuntimeAccessConfig",
          "description": "The config settings for accessing runtime."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "The compute layer is starting the runtime. It is not ready for use.",
            "The compute layer is installing required frameworks and registering the runtime with notebook proxy. It cannot be used.",
            "The runtime is currently running. It is ready for use.",
            "The control logic is stopping the runtime. It cannot be used.",
            "The runtime is stopped. It cannot be used.",
            "The runtime is being deleted. It cannot be used.",
            "The runtime is upgrading. It cannot be used.",
            "The runtime is being created and set up. It is not ready for use."
          ],
          "readOnly": true,
          "description": "Output only. Runtime state.",
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTING",
            "PROVISIONING",
            "ACTIVE",
            "STOPPING",
            "STOPPED",
            "DELETING",
            "UPGRADING",
            "INITIALIZING"
          ]
        },
        "runtimeMigrationEligibility": {
          "description": "Output only. Checks how feasible a migration from GmN to WbI is.",
          "readOnly": true,
          "$ref": "RuntimeMigrationEligibility"
        }
      },
      "type": "object"
    },
    "Operation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        }
      },
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "VirtualMachineConfig": {
      "properties": {
        "subnet": {
          "description": "Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network. A full URL or partial URI are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0` * `projects/[project_id]/regions/us-east1/subnetworks/sub0`",
          "type": "string"
        },
        "nicType": {
          "enumDescriptions": [
            "No type specified.",
            "VIRTIO",
            "GVNIC"
          ],
          "description": "Optional. The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.",
          "enum": [
            "UNSPECIFIED_NIC_TYPE",
            "VIRTIO_NET",
            "GVNIC"
          ],
          "type": "string"
        },
        "tags": {
          "description": "Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "internalIpOnly": {
          "description": "Optional. If true, runtime will only have internal IP addresses. By default, runtimes are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each vm. This `internal_ip_only` restriction can only be enabled for subnetwork enabled networks, and all dependencies must be configured to be accessible without external IP addresses.",
          "type": "boolean"
        },
        "dataDisk": {
          "$ref": "LocalDisk",
          "description": "Required. Data disk option configuration settings."
        },
        "shieldedInstanceConfig": {
          "description": "Optional. Shielded VM Instance configuration settings.",
          "$ref": "RuntimeShieldedInstanceConfig"
        },
        "encryptionConfig": {
          "$ref": "EncryptionConfig",
          "description": "Optional. Encryption settings for virtual machine data disk."
        },
        "zone": {
          "description": "Output only. The zone where the virtual machine is located. If using regional request, the notebooks service will pick a location in the corresponding runtime region. On a get request, zone will always be present. Example: * `us-central1-b`",
          "readOnly": true,
          "type": "string"
        },
        "machineType": {
          "type": "string",
          "description": "Required. The Compute Engine machine type used for runtimes. Short name is valid. Examples: * `n1-standard-2` * `e2-standard-8`"
        },
        "containerImages": {
          "type": "array",
          "description": "Optional. Use a list of container images to use as Kernels in the notebook instance.",
          "items": {
            "$ref": "ContainerImage"
          }
        },
        "guestAttributes": {
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          },
          "description": "Output only. The Compute Engine guest attributes. (see [Project and instance guest attributes](https://cloud.google.com/compute/docs/storing-retrieving-metadata#guest_attributes)).",
          "type": "object"
        },
        "bootImage": {
          "$ref": "BootImage",
          "description": "Optional. Boot image metadata used for runtime upgradeability."
        },
        "network": {
          "description": "Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork. If neither `network` nor `subnet` is specified, the \"default\" network of the project is used, if it exists. A full URL or partial URI. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default` * `projects/[project_id]/global/networks/default` Runtimes are managed resources inside Google Infrastructure. Runtimes support the following network configurations: * Google Managed Network (Network & subnet are empty) * Consumer Project VPC (network & subnet are required). Requires configuring Private Service Access. * Shared VPC (network & subnet are required). Requires configuring Private Service Access.",
          "type": "string"
        },
        "reservedIpRange": {
          "type": "string",
          "description": "Optional. Reserved IP Range name is used for VPC Peering. The subnetwork allocation will use the range *name* if it's assigned. Example: managed-notebooks-range-c PEERING_RANGE_NAME_3=managed-notebooks-range-c gcloud compute addresses create $PEERING_RANGE_NAME_3 \\ --global \\ --prefix-length=24 \\ --description=\"Google Cloud Managed Notebooks Range 24 c\" \\ --network=$NETWORK \\ --addresses=192.168.0.0 \\ --purpose=VPC_PEERING Field value will be: `managed-notebooks-range-c`"
        },
        "acceleratorConfig": {
          "description": "Optional. The Compute Engine accelerator configuration for this runtime.",
          "$ref": "RuntimeAcceleratorConfig"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The labels to associate with this runtime. Label **keys** must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.",
          "type": "object"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The Compute Engine metadata entries to add to virtual machine. (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).",
          "type": "object"
        }
      },
      "description": "The config settings for virtual machine.",
      "type": "object",
      "id": "VirtualMachineConfig"
    },
    "ShieldedInstanceConfig": {
      "type": "object",
      "id": "ShieldedInstanceConfig",
      "properties": {
        "enableIntegrityMonitoring": {
          "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created. Enabled by default.",
          "type": "boolean"
        },
        "enableVtpm": {
          "type": "boolean",
          "description": "Defines whether the instance has the vTPM enabled. Enabled by default."
        },
        "enableSecureBoot": {
          "description": "Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default.",
          "type": "boolean"
        }
      },
      "description": "A set of Shielded Instance options. See [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm). Not all combinations are valid."
    },
    "Event": {
      "id": "Event",
      "description": "The definition of an Event for a managed / semi-managed notebook instance.",
      "properties": {
        "reportTime": {
          "description": "Event report time.",
          "type": "string",
          "format": "google-datetime"
        },
        "type": {
          "enumDescriptions": [
            "Event is not specified.",
            "The instance / runtime is idle",
            "The instance / runtime is available. This event indicates that instance / runtime underlying compute is operational.",
            "The instance / runtime health is available. This event indicates that instance / runtime health information.",
            "The instance / runtime is available. This event allows instance / runtime to send Host maintenance information to Control Plane. https://cloud.google.com/compute/docs/gpus/gpu-host-maintenance"
          ],
          "description": "Event type.",
          "type": "string",
          "enum": [
            "EVENT_TYPE_UNSPECIFIED",
            "IDLE",
            "HEARTBEAT",
            "HEALTH",
            "MAINTENANCE"
          ]
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Event details. This field is used to pass event information."
        }
      },
      "type": "object"
    },
    "StartRuntimeRequest": {
      "id": "StartRuntimeRequest",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Idempotent request UUID."
        }
      },
      "description": "Request for starting a Managed Notebook Runtime.",
      "type": "object"
    },
    "LocalDisk": {
      "properties": {
        "initializeParams": {
          "$ref": "LocalDiskInitializeParams",
          "description": "Input only. Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the disk, either `SCRATCH` or `PERSISTENT`. If not specified, the default is `PERSISTENT`. Valid values: * `PERSISTENT` * `SCRATCH`"
        },
        "licenses": {
          "description": "Output only. Any valid publicly visible licenses.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "readOnly": true
        },
        "source": {
          "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource.",
          "type": "string"
        },
        "boot": {
          "readOnly": true,
          "description": "Optional. Output only. Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.",
          "type": "boolean"
        },
        "deviceName": {
          "description": "Optional. Output only. Specifies a unique device name of your choice that is reflected into the `/dev/disk/by-id/google-*` tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.",
          "readOnly": true,
          "type": "string"
        },
        "mode": {
          "description": "The mode in which to attach this disk, either `READ_WRITE` or `READ_ONLY`. If not specified, the default is to attach the disk in `READ_WRITE` mode. Valid values: * `READ_ONLY` * `READ_WRITE`",
          "type": "string"
        },
        "index": {
          "format": "int32",
          "readOnly": true,
          "type": "integer",
          "description": "Output only. A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number."
        },
        "autoDelete": {
          "readOnly": true,
          "type": "boolean",
          "description": "Optional. Output only. Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance)."
        },
        "guestOsFeatures": {
          "description": "Output only. Indicates a list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options.",
          "readOnly": true,
          "items": {
            "$ref": "RuntimeGuestOsFeature"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Output only. Type of the resource. Always compute#attachedDisk for attached disks.",
          "readOnly": true
        },
        "interface": {
          "type": "string",
          "description": "Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance. Valid values: * `NVME` * `SCSI`"
        }
      },
      "type": "object",
      "id": "LocalDisk",
      "description": "A Local attached disk resource."
    },
    "CancelOperationRequest": {
      "properties": {},
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object"
    },
    "SchedulerAcceleratorConfig": {
      "description": "Definition of a hardware accelerator. Note that not all combinations of `type` and `core_count` are valid. See [GPUs on Compute Engine](https://cloud.google.com/compute/docs/gpus) to find a valid combination. TPUs are not supported.",
      "id": "SchedulerAcceleratorConfig",
      "type": "object",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified accelerator type. Default to no GPU.",
            "Nvidia Tesla K80 GPU.",
            "Nvidia Tesla P100 GPU.",
            "Nvidia Tesla V100 GPU.",
            "Nvidia Tesla P4 GPU.",
            "Nvidia Tesla T4 GPU.",
            "Nvidia Tesla A100 GPU.",
            "TPU v2.",
            "TPU v3."
          ],
          "type": "string",
          "description": "Type of this accelerator.",
          "enum": [
            "SCHEDULER_ACCELERATOR_TYPE_UNSPECIFIED",
            "NVIDIA_TESLA_K80",
            "NVIDIA_TESLA_P100",
            "NVIDIA_TESLA_V100",
            "NVIDIA_TESLA_P4",
            "NVIDIA_TESLA_T4",
            "NVIDIA_TESLA_A100",
            "TPU_V2",
            "TPU_V3"
          ]
        },
        "coreCount": {
          "description": "Count of cores of this accelerator.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "DiagnosticConfig": {
      "properties": {
        "copyHomeFilesFlagEnabled": {
          "description": "Optional. Enables flag to copy all `/home/jupyter` folder contents",
          "type": "boolean"
        },
        "gcsBucket": {
          "type": "string",
          "description": "Required. User Cloud Storage bucket location (REQUIRED). Must be formatted with path prefix (`gs://$GCS_BUCKET`). Permissions: User Managed Notebooks: - storage.buckets.writer: Must be given to the project's service account attached to VM. Google Managed Notebooks: - storage.buckets.writer: Must be given to the project's service account or user credentials attached to VM depending on authentication mode. Cloud Storage bucket Log file will be written to `gs://$GCS_BUCKET/$RELATIVE_PATH/$VM_DATE_$TIME.tar.gz`"
        },
        "relativePath": {
          "description": "Optional. Defines the relative storage path in the Cloud Storage bucket where the diagnostic logs will be written: Default path will be the root directory of the Cloud Storage bucket (`gs://$GCS_BUCKET/$DATE_$TIME.tar.gz`) Example of full path where Log file will be written: `gs://$GCS_BUCKET/$RELATIVE_PATH/`",
          "type": "string"
        },
        "packetCaptureFlagEnabled": {
          "type": "boolean",
          "description": "Optional. Enables flag to capture packets from the instance for 30 seconds"
        },
        "repairFlagEnabled": {
          "type": "boolean",
          "description": "Optional. Enables flag to repair service for instance"
        }
      },
      "id": "DiagnosticConfig",
      "description": "Defines flags that are used to run the diagnostic tool",
      "type": "object"
    },
    "ReportInstanceEventRequest": {
      "properties": {
        "vmId": {
          "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
          "type": "string"
        },
        "event": {
          "$ref": "Event",
          "description": "Required. The Event to be reported."
        }
      },
      "description": "Request for reporting a Managed Notebook Event.",
      "id": "ReportInstanceEventRequest",
      "type": "object"
    },
    "RuntimeAccessConfig": {
      "description": "Specifies the login configuration for Runtime",
      "type": "object",
      "id": "RuntimeAccessConfig",
      "properties": {
        "proxyUri": {
          "description": "Output only. The proxy endpoint that is used to access the runtime.",
          "readOnly": true,
          "type": "string"
        },
        "accessType": {
          "description": "The type of access mode this instance.",
          "enumDescriptions": [
            "Unspecified access.",
            "Single user login.",
            "Service Account mode. In Service Account mode, Runtime creator will specify a SA that exists in the consumer project. Using Runtime Service Account field. Users accessing the Runtime need ActAs (Service Account User) permission."
          ],
          "type": "string",
          "enum": [
            "RUNTIME_ACCESS_TYPE_UNSPECIFIED",
            "SINGLE_USER",
            "SERVICE_ACCOUNT"
          ]
        },
        "runtimeOwner": {
          "description": "The owner of this runtime after creation. Format: `alias@example.com` Currently supports one owner only.",
          "type": "string"
        }
      }
    },
    "RefreshRuntimeTokenInternalRequest": {
      "id": "RefreshRuntimeTokenInternalRequest",
      "description": "Request for getting a new access token.",
      "properties": {
        "vmId": {
          "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DataprocParameters": {
      "description": "Parameters used in Dataproc JobType executions.",
      "properties": {
        "cluster": {
          "description": "URI for cluster used to run Dataproc execution. Format: `projects/{PROJECT_ID}/regions/{REGION}/clusters/{CLUSTER_NAME}`",
          "type": "string"
        }
      },
      "type": "object",
      "id": "DataprocParameters"
    },
    "AcceleratorConfig": {
      "type": "object",
      "description": "Definition of a hardware accelerator. Note that not all combinations of `type` and `core_count` are valid. See [GPUs on Compute Engine](https://cloud.google.com/compute/docs/gpus/#gpus-list) to find a valid combination. TPUs are not supported.",
      "id": "AcceleratorConfig",
      "properties": {
        "type": {
          "enum": [
            "ACCELERATOR_TYPE_UNSPECIFIED",
            "NVIDIA_TESLA_K80",
            "NVIDIA_TESLA_P100",
            "NVIDIA_TESLA_V100",
            "NVIDIA_TESLA_P4",
            "NVIDIA_TESLA_T4",
            "NVIDIA_TESLA_A100",
            "NVIDIA_L4",
            "NVIDIA_TESLA_T4_VWS",
            "NVIDIA_TESLA_P100_VWS",
            "NVIDIA_TESLA_P4_VWS",
            "TPU_V2",
            "TPU_V3"
          ],
          "description": "Type of this accelerator.",
          "enumDescriptions": [
            "Accelerator type is not specified.",
            "Accelerator type is Nvidia Tesla K80.",
            "Accelerator type is Nvidia Tesla P100.",
            "Accelerator type is Nvidia Tesla V100.",
            "Accelerator type is Nvidia Tesla P4.",
            "Accelerator type is Nvidia Tesla T4.",
            "Accelerator type is Nvidia Tesla A100.",
            "Accelerator type is Nvidia Tesla L4.",
            "Accelerator type is NVIDIA Tesla T4 Virtual Workstations.",
            "Accelerator type is NVIDIA Tesla P100 Virtual Workstations.",
            "Accelerator type is NVIDIA Tesla P4 Virtual Workstations.",
            "(Coming soon) Accelerator type is TPU V2.",
            "(Coming soon) Accelerator type is TPU V3."
          ],
          "type": "string"
        },
        "coreCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of cores of this accelerator."
        }
      }
    },
    "ReportRuntimeEventRequest": {
      "type": "object",
      "properties": {
        "vmId": {
          "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
          "type": "string"
        },
        "event": {
          "description": "Required. The Event to be reported.",
          "$ref": "Event"
        }
      },
      "description": "Request for reporting a Managed Notebook Event.",
      "id": "ReportRuntimeEventRequest"
    },
    "Disk": {
      "type": "object",
      "description": "An instance-attached disk resource.",
      "id": "Disk",
      "properties": {
        "kind": {
          "description": "Type of the resource. Always compute#attachedDisk for attached disks.",
          "type": "string"
        },
        "diskSizeGb": {
          "format": "int64",
          "type": "string",
          "description": "Indicates the size of the disk in base-2 GB."
        },
        "interface": {
          "description": "Indicates the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance. Valid values: * `NVME` * `SCSI`",
          "type": "string"
        },
        "deviceName": {
          "type": "string",
          "description": "Indicates a unique device name of your choice that is reflected into the `/dev/disk/by-id/google-*` tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine.This field is only applicable for persistent disks."
        },
        "type": {
          "description": "Indicates the type of the disk, either `SCRATCH` or `PERSISTENT`. Valid values: * `PERSISTENT` * `SCRATCH`",
          "type": "string"
        },
        "licenses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of publicly visible licenses. Reserved for Google's use. A License represents billing and aggregate usage data for public and marketplace images."
        },
        "autoDelete": {
          "description": "Indicates whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).",
          "type": "boolean"
        },
        "mode": {
          "description": "The mode in which to attach this disk, either `READ_WRITE` or `READ_ONLY`. If not specified, the default is to attach the disk in `READ_WRITE` mode. Valid values: * `READ_ONLY` * `READ_WRITE`",
          "type": "string"
        },
        "guestOsFeatures": {
          "items": {
            "$ref": "GuestOsFeature"
          },
          "type": "array",
          "description": "Indicates a list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options."
        },
        "boot": {
          "type": "boolean",
          "description": "Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem."
        },
        "source": {
          "description": "Indicates a valid partial or full URL to an existing Persistent Disk resource.",
          "type": "string"
        },
        "index": {
          "description": "A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      },
      "type": "object"
    },
    "LocalDiskInitializeParams": {
      "properties": {
        "diskName": {
          "type": "string",
          "description": "Optional. Specifies the disk name. If not specified, the default is to use the name of the instance. If the disk with the instance name exists already in the given zone/region, a new name will be automatically generated."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Labels to apply to this disk. These can be later modified by the disks.setLabels method. This field is only applicable for persistent disks.",
          "type": "object"
        },
        "diskType": {
          "enum": [
            "DISK_TYPE_UNSPECIFIED",
            "PD_STANDARD",
            "PD_SSD",
            "PD_BALANCED",
            "PD_EXTREME"
          ],
          "description": "Input only. The type of the boot disk attached to this instance, defaults to standard persistent disk (`PD_STANDARD`).",
          "enumDescriptions": [
            "Disk type not set.",
            "Standard persistent disk type.",
            "SSD persistent disk type.",
            "Balanced persistent disk type.",
            "Extreme persistent disk type."
          ],
          "type": "string"
        },
        "diskSizeGb": {
          "format": "int64",
          "description": "Optional. Specifies the size of the disk in base-2 GB. If not specified, the disk will be the same size as the image (usually 10GB). If specified, the size must be equal to or larger than 10GB. Default 100 GB.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Provide this property when creating the disk.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Input only. Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new runtime. This property is mutually exclusive with the source property; you can only define one or the other, but not both.",
      "id": "LocalDiskInitializeParams"
    },
    "StartInstanceRequest": {
      "properties": {},
      "type": "object",
      "description": "Request for starting a notebook instance",
      "id": "StartInstanceRequest"
    },
    "UpgradeInstanceInternalRequest": {
      "description": "Request for upgrading a notebook instance from within the VM",
      "type": "object",
      "properties": {
        "vmId": {
          "description": "Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "Upgrade type is not specified.",
            "Upgrade ML framework.",
            "Upgrade Operating System.",
            "Upgrade CUDA.",
            "Upgrade All (OS, Framework and CUDA)."
          ],
          "description": "Optional. The optional UpgradeType. Setting this field will search for additional compute images to upgrade this instance.",
          "enum": [
            "UPGRADE_TYPE_UNSPECIFIED",
            "UPGRADE_FRAMEWORK",
            "UPGRADE_OS",
            "UPGRADE_CUDA",
            "UPGRADE_ALL"
          ],
          "type": "string"
        }
      },
      "id": "UpgradeInstanceInternalRequest"
    },
    "ListInstancesResponse": {
      "properties": {
        "instances": {
          "description": "A list of returned instances.",
          "items": {
            "$ref": "Instance"
          },
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached. For example, `['us-west1-a', 'us-central1-b']`. A ListInstancesResponse will only contain either instances or unreachables,",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Page token that can be used to continue listing from the last result in the next list call."
        }
      },
      "id": "ListInstancesResponse",
      "description": "Response for listing notebook instances.",
      "type": "object"
    },
    "StopRuntimeRequest": {
      "description": "Request for stopping a Managed Notebook Runtime.",
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Idempotent request UUID."
        }
      },
      "id": "StopRuntimeRequest"
    },
    "UpdateInstanceMetadataItemsRequest": {
      "properties": {
        "items": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata items to add/update for the instance."
        }
      },
      "id": "UpdateInstanceMetadataItemsRequest",
      "type": "object",
      "description": "Request for adding/changing metadata items for an instance."
    },
    "ListEnvironmentsResponse": {
      "description": "Response for listing environments.",
      "id": "ListEnvironmentsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A page token that can be used to continue listing from the last result in the next list call.",
          "type": "string"
        },
        "environments": {
          "items": {
            "$ref": "Environment"
          },
          "type": "array",
          "description": "A list of returned environments."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "SetInstanceMachineTypeRequest": {
      "type": "object",
      "description": "Request for setting instance machine type.",
      "properties": {
        "machineType": {
          "type": "string",
          "description": "Required. The [Compute Engine machine type](https://cloud.google.com/compute/docs/machine-types)."
        }
      },
      "id": "SetInstanceMachineTypeRequest"
    },
    "UpdateShieldedInstanceConfigRequest": {
      "description": "Request for updating the Shielded Instance config for a notebook instance. You can only use this method on a stopped instance",
      "properties": {
        "shieldedInstanceConfig": {
          "description": "ShieldedInstance configuration to be updated.",
          "$ref": "ShieldedInstanceConfig"
        }
      },
      "id": "UpdateShieldedInstanceConfigRequest",
      "type": "object"
    },
    "VmImage": {
      "description": "Definition of a custom Compute Engine virtual machine image for starting a notebook instance with the environment installed directly on the VM.",
      "properties": {
        "project": {
          "description": "Required. The name of the Google Cloud project that this VM image belongs to. Format: `{project_id}`",
          "type": "string"
        },
        "imageFamily": {
          "type": "string",
          "description": "Use this VM image family to find the image; the newest image in this family will be used."
        },
        "imageName": {
          "type": "string",
          "description": "Use VM image name to find the image."
        }
      },
      "id": "VmImage",
      "type": "object"
    },
    "SwitchRuntimeRequest": {
      "id": "SwitchRuntimeRequest",
      "properties": {
        "acceleratorConfig": {
          "$ref": "RuntimeAcceleratorConfig",
          "description": "accelerator config."
        },
        "machineType": {
          "description": "machine type.",
          "type": "string"
        },
        "requestId": {
          "type": "string",
          "description": "Idempotent request UUID."
        }
      },
      "type": "object",
      "description": "Request for switching a Managed Notebook Runtime."
    },
    "ResetInstanceRequest": {
      "type": "object",
      "id": "ResetInstanceRequest",
      "properties": {},
      "description": "Request for resetting a notebook instance"
    },
    "RuntimeSoftwareConfig": {
      "description": "Specifies the selection and configuration of software inside the runtime. The properties to set on runtime. Properties keys are specified in `key:value` format, for example: * `idle_shutdown: true` * `idle_shutdown_timeout: 180` * `enable_health_monitoring: true`",
      "id": "RuntimeSoftwareConfig",
      "type": "object",
      "properties": {
        "customGpuDriverPath": {
          "type": "string",
          "description": "Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers."
        },
        "idleShutdown": {
          "type": "boolean",
          "description": "Runtime will automatically shutdown after idle_shutdown_time. Default: True"
        },
        "idleShutdownTimeout": {
          "description": "Time in minutes to wait before shutting down runtime. Default: 180 minutes",
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "description": "Output only. version of boot image such as M100, from release label of the image.",
          "readOnly": true,
          "type": "string"
        },
        "notebookUpgradeSchedule": {
          "description": "Cron expression in UTC timezone, used to schedule instance auto upgrade. Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).",
          "type": "string"
        },
        "postStartupScriptBehavior": {
          "enum": [
            "POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED",
            "RUN_EVERY_START",
            "DOWNLOAD_AND_RUN_EVERY_START"
          ],
          "enumDescriptions": [
            "Unspecified post startup script behavior. Will run only once at creation.",
            "Runs the post startup script provided during creation at every start.",
            "Downloads and runs the provided post startup script at every start."
          ],
          "description": "Behavior for the post startup script.",
          "type": "string"
        },
        "kernels": {
          "type": "array",
          "items": {
            "$ref": "ContainerImage"
          },
          "description": "Optional. Use a list of container images to use as Kernels in the notebook instance."
        },
        "disableTerminal": {
          "description": "Bool indicating whether JupyterLab terminal will be available or not. Default: False",
          "type": "boolean"
        },
        "installGpuDriver": {
          "description": "Install Nvidia Driver automatically. Default: True",
          "type": "boolean"
        },
        "enableHealthMonitoring": {
          "description": "Verifies core internal services are running. Default: True",
          "type": "boolean"
        },
        "upgradeable": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Bool indicating whether an newer image is available in an image family."
        },
        "mixerDisabled": {
          "type": "boolean",
          "description": "Bool indicating whether mixer client should be disabled. Default: False"
        },
        "postStartupScript": {
          "type": "string",
          "description": "Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path (`gs://path-to-file/file-name`)."
        }
      }
    },
    "Location": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        }
      },
      "type": "object",
      "description": "A resource that represents a Google Cloud location.",
      "id": "Location"
    },
    "VirtualMachine": {
      "properties": {
        "instanceName": {
          "description": "Output only. The user-friendly name of the Managed Compute Engine instance.",
          "readOnly": true,
          "type": "string"
        },
        "virtualMachineConfig": {
          "description": "Virtual Machine configuration settings.",
          "$ref": "VirtualMachineConfig"
        },
        "instanceId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The unique identifier of the Managed Compute Engine instance."
        }
      },
      "id": "VirtualMachine",
      "type": "object",
      "description": "Runtime using Virtual Machine for computing."
    },
    "Empty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "id": "Empty"
    },
    "RuntimeMetrics": {
      "type": "object",
      "properties": {
        "systemMetrics": {
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Output only. The system metrics.",
          "type": "object"
        }
      },
      "description": "Contains runtime daemon metrics, such as OS and kernels and sessions stats.",
      "id": "RuntimeMetrics"
    },
    "IsInstanceUpgradeableResponse": {
      "description": "Response for checking if a notebook instance is upgradeable.",
      "properties": {
        "upgradeInfo": {
          "type": "string",
          "description": "Additional information about upgrade."
        },
        "upgradeable": {
          "type": "boolean",
          "description": "If an instance is upgradeable."
        },
        "upgradeImage": {
          "type": "string",
          "description": "The new image self link this instance will be upgraded to if calling the upgrade endpoint. This field will only be populated if field upgradeable is true."
        },
        "upgradeVersion": {
          "type": "string",
          "description": "The version this instance will be upgraded to if calling the upgrade endpoint. This field will only be populated if field upgradeable is true."
        }
      },
      "id": "IsInstanceUpgradeableResponse",
      "type": "object"
    },
    "RefreshRuntimeTokenInternalResponse": {
      "id": "RefreshRuntimeTokenInternalResponse",
      "description": "Response with a new access token.",
      "properties": {
        "expireTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Token expiration time."
        },
        "accessToken": {
          "type": "string",
          "description": "The OAuth 2.0 access token."
        }
      },
      "type": "object"
    },
    "Expr": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        }
      },
      "type": "object",
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
    },
    "DiagnoseRuntimeRequest": {
      "description": "Request for creating a notebook instance diagnostic file.",
      "type": "object",
      "properties": {
        "timeoutMinutes": {
          "description": "Optional. Maxmium amount of time in minutes before the operation times out.",
          "type": "integer",
          "format": "int32"
        },
        "diagnosticConfig": {
          "description": "Required. Defines flags that are used to run the diagnostic tool",
          "$ref": "DiagnosticConfig"
        }
      },
      "id": "DiagnoseRuntimeRequest"
    },
    "TestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
        }
      }
    },
    "TriggerScheduleRequest": {
      "description": "Request for created scheduled notebooks",
      "id": "TriggerScheduleRequest",
      "properties": {},
      "type": "object"
    },
    "ExecutionTemplate": {
      "properties": {
        "parameters": {
          "description": "Parameters used within the 'input_notebook_file' notebook.",
          "type": "string"
        },
        "containerImageUri": {
          "type": "string",
          "description": "Container Image URI to a DLVM Example: 'gcr.io/deeplearning-platform-release/base-cu100' More examples can be found at: https://cloud.google.com/ai-platform/deep-learning-containers/docs/choosing-container"
        },
        "vertexAiParameters": {
          "$ref": "VertexAIParameters",
          "description": "Parameters used in Vertex AI JobType executions."
        },
        "acceleratorConfig": {
          "$ref": "SchedulerAcceleratorConfig",
          "description": "Configuration (count and accelerator type) for hardware running notebook execution."
        },
        "scaleTier": {
          "enum": [
            "SCALE_TIER_UNSPECIFIED",
            "BASIC",
            "STANDARD_1",
            "PREMIUM_1",
            "BASIC_GPU",
            "BASIC_TPU",
            "CUSTOM"
          ],
          "enumDescriptions": [
            "Unspecified Scale Tier.",
            "A single worker instance. This tier is suitable for learning how to use Cloud ML, and for experimenting with new models using small datasets.",
            "Many workers and a few parameter servers.",
            "A large number of workers with many parameter servers.",
            "A single worker instance with a K80 GPU.",
            "A single worker instance with a Cloud TPU.",
            "The CUSTOM tier is not a set tier, but rather enables you to use your own cluster specification. When you use this tier, set values to configure your processing cluster according to these guidelines: * You _must_ set `ExecutionTemplate.masterType` to specify the type of machine to use for your master node. This is the only required setting."
          ],
          "type": "string",
          "description": "Required. Scale tier of the hardware used for notebook execution. DEPRECATED Will be discontinued. As right now only CUSTOM is supported.",
          "deprecated": true
        },
        "serviceAccount": {
          "type": "string",
          "description": "The email address of a service account to use when running the execution. You must have the `iam.serviceAccounts.actAs` permission for the specified service account."
        },
        "inputNotebookFile": {
          "type": "string",
          "description": "Path to the notebook file to execute. Must be in a Google Cloud Storage bucket. Format: `gs://{bucket_name}/{folder}/{notebook_file_name}` Ex: `gs://notebook_user/scheduled_notebooks/sentiment_notebook.ipynb`"
        },
        "masterType": {
          "type": "string",
          "description": "Specifies the type of virtual machine to use for your training job's master worker. You must specify this field when `scaleTier` is set to `CUSTOM`. You can use certain Compute Engine machine types directly in this field. The following types are supported: - `n1-standard-4` - `n1-standard-8` - `n1-standard-16` - `n1-standard-32` - `n1-standard-64` - `n1-standard-96` - `n1-highmem-2` - `n1-highmem-4` - `n1-highmem-8` - `n1-highmem-16` - `n1-highmem-32` - `n1-highmem-64` - `n1-highmem-96` - `n1-highcpu-16` - `n1-highcpu-32` - `n1-highcpu-64` - `n1-highcpu-96` Alternatively, you can use the following legacy machine types: - `standard` - `large_model` - `complex_model_s` - `complex_model_m` - `complex_model_l` - `standard_gpu` - `complex_model_m_gpu` - `complex_model_l_gpu` - `standard_p100` - `complex_model_m_p100` - `standard_v100` - `large_model_v100` - `complex_model_m_v100` - `complex_model_l_v100` Finally, if you want to use a TPU for training, specify `cloud_tpu` in this field. Learn more about the [special configuration options for training with TPU](https://cloud.google.com/ai-platform/training/docs/using-tpus#configuring_a_custom_tpu_machine)."
        },
        "jobType": {
          "description": "The type of Job to be used on this execution.",
          "enumDescriptions": [
            "No type specified.",
            "Custom Job in `aiplatform.googleapis.com`. Default value for an execution.",
            "Run execution on a cluster with Dataproc as a job. https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs"
          ],
          "type": "string",
          "enum": [
            "JOB_TYPE_UNSPECIFIED",
            "VERTEX_AI",
            "DATAPROC"
          ]
        },
        "paramsYamlFile": {
          "type": "string",
          "description": "Parameters to be overridden in the notebook during execution. Ref https://papermill.readthedocs.io/en/latest/usage-parameterize.html on how to specifying parameters in the input notebook and pass them here in an YAML file. Ex: `gs://notebook_user/scheduled_notebooks/sentiment_notebook_params.yaml`"
        },
        "tensorboard": {
          "type": "string",
          "description": "The name of a Vertex AI [Tensorboard] resource to which this execution will upload Tensorboard logs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`"
        },
        "kernelSpec": {
          "type": "string",
          "description": "Name of the kernel spec to use. This must be specified if the kernel spec name on the execution target does not match the name in the input notebook file."
        },
        "outputNotebookFolder": {
          "type": "string",
          "description": "Path to the notebook folder to write to. Must be in a Google Cloud Storage bucket path. Format: `gs://{bucket_name}/{folder}` Ex: `gs://notebook_user/scheduled_notebooks`"
        },
        "labels": {
          "description": "Labels for execution. If execution is scheduled, a field included will be 'nbs-scheduled'. Otherwise, it is an immediate execution, and an included field will be 'nbs-immediate'. Use fields to efficiently index between various types of executions.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dataprocParameters": {
          "description": "Parameters used in Dataproc JobType executions.",
          "$ref": "DataprocParameters"
        }
      },
      "description": "The description a notebook execution workload.",
      "id": "ExecutionTemplate",
      "type": "object"
    },
    "ListRuntimesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Page token that can be used to continue listing from the last result in the next list call.",
          "type": "string"
        },
        "runtimes": {
          "description": "A list of returned Runtimes.",
          "items": {
            "$ref": "Runtime"
          },
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached. For example, `['us-west1', 'us-central1']`. A ListRuntimesResponse will only contain either runtimes or unreachables,",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ListRuntimesResponse",
      "type": "object",
      "description": "Response for listing Managed Notebook Runtimes."
    },
    "DiagnoseInstanceRequest": {
      "properties": {
        "timeoutMinutes": {
          "description": "Optional. Maxmium amount of time in minutes before the operation times out.",
          "format": "int32",
          "type": "integer"
        },
        "diagnosticConfig": {
          "description": "Required. Defines flags that are used to run the diagnostic tool",
          "$ref": "DiagnosticConfig"
        }
      },
      "description": "Request for creating a notebook instance diagnostic file.",
      "type": "object",
      "id": "DiagnoseInstanceRequest"
    },
    "RuntimeMigrationEligibility": {
      "id": "RuntimeMigrationEligibility",
      "properties": {
        "errors": {
          "items": {
            "enumDescriptions": [
              "Default type.",
              "The GmN is configured with custom container(s) and cannot be migrated."
            ],
            "type": "string",
            "enum": [
              "ERROR_UNSPECIFIED",
              "CUSTOM_CONTAINER"
            ]
          },
          "description": "Output only. Certain configurations make the GmN ineligible for an automatic migration. A manual migration is required.",
          "readOnly": true,
          "type": "array"
        },
        "warnings": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. Certain configurations will be defaulted during the migration.",
          "items": {
            "type": "string",
            "enum": [
              "WARNING_UNSPECIFIED",
              "UNSUPPORTED_ACCELERATOR_TYPE",
              "UNSUPPORTED_OS",
              "RESERVED_IP_RANGE",
              "GOOGLE_MANAGED_NETWORK",
              "POST_STARTUP_SCRIPT",
              "SINGLE_USER"
            ],
            "enumDescriptions": [
              "Default type.",
              "The GmN uses an accelerator type that's unsupported in WbI. It will be migrated without an accelerator. Users can attach an accelerator after the migration.",
              "The GmN uses an operating system that's unsupported in WbI (e.g. Debian 10). It will be replaced with Debian 11 in WbI.",
              "This GmN is configured with reserved IP range, which is no longer applicable in WbI.",
              "This GmN is configured with a Google managed network. Please provide the `network` and `subnet` options for the migration.",
              "This GmN is configured with a post startup script. Please optionally provide the `post_startup_script_option` for the migration.",
              "This GmN is configured with single user mode. Please optionally provide the `service_account` option for the migration."
            ]
          }
        }
      },
      "type": "object",
      "description": "RuntimeMigrationEligibility represents the feasibility information of a migration from GmN to WbI. Next tag: 3"
    },
    "OperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "id": "OperationMetadata",
      "properties": {
        "verb": {
          "description": "Name of the verb executed by the operation.",
          "type": "string"
        },
        "apiVersion": {
          "description": "API version used to start the operation.",
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the operation was created."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time the operation finished running.",
          "type": "string"
        },
        "statusMessage": {
          "description": "Human-readable status of the operation, if any.",
          "type": "string"
        },
        "target": {
          "type": "string",
          "description": "Server-defined resource path for the target of the operation."
        },
        "endpoint": {
          "description": "API endpoint name of this operation.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StopInstanceRequest": {
      "type": "object",
      "id": "StopInstanceRequest",
      "properties": {},
      "description": "Request for stopping a notebook instance"
    },
    "Binding": {
      "description": "Associates `members`, or principals, with a `role`.",
      "id": "Binding",
      "properties": {
        "members": {
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        }
      },
      "type": "object"
    }
  },
  "mtlsRootUrl": "https://notebooks.mtls.googleapis.com/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "parameters": {
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query",
      "default": "true"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ]
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    }
  },
  "basePath": "",
  "version": "v1",
  "version_module": true,
  "name": "notebooks",
  "protocol": "rest",
  "kind": "discovery#restDescription",
  "documentationLink": "https://cloud.google.com/notebooks/docs/",
  "ownerName": "Google",
  "rootUrl": "https://notebooks.googleapis.com/",
  "batchPath": "batch",
  "discoveryVersion": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "ownerDomain": "google.com",
  "servicePath": "",
  "id": "notebooks:v1",
  "baseUrl": "https://notebooks.googleapis.com/",
  "title": "Notebooks API",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "schedules": {
              "methods": {
                "trigger": {
                  "id": "notebooks.projects.locations.schedules.trigger",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "description": "Triggers execution of an existing schedule.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}/schedules/{schedule_id}`",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "TriggerScheduleRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}:trigger",
                  "path": "v1/{+name}:trigger"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/schedules",
                  "response": {
                    "$ref": "ListSchedulesResponse"
                  },
                  "path": "v1/{+parent}/schedules",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists schedules in a given project and location.",
                  "id": "notebooks.projects.locations.schedules.list",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A previous returned page token that can be used to continue listing from the last result.",
                      "type": "string"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Field to order results by.",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Maximum return size of the list call.",
                      "format": "int32",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filter applied to resulting schedules."
                    }
                  }
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "scheduleId": {
                      "description": "Required. User-defined unique ID of this schedule.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/schedules",
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/schedules",
                  "request": {
                    "$ref": "Schedule"
                  },
                  "id": "notebooks.projects.locations.schedules.create",
                  "description": "Creates a new Scheduled Notebook in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of schedule",
                  "id": "notebooks.projects.locations.schedules.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/schedules/{schedule_id}`",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Schedule"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}"
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/schedules/[^/]+$",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/schedules/{schedule_id}`"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "description": "Deletes schedule and all underlying jobs",
                  "id": "notebooks.projects.locations.schedules.delete",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}"
                }
              }
            },
            "runtimes": {
              "methods": {
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "id": "notebooks.projects.locations.runtimes.patch",
                  "description": "Update Notebook Runtime configuration.",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "Required. Specifies the path, relative to `Runtime`, of the field to update. For example, to change the software configuration kernels, the `update_mask` parameter would be specified as `software_config.kernels`, and the `PATCH` request body would specify the new value, as follows: { \"software_config\":{ \"kernels\": [{ 'repository': 'gcr.io/deeplearning-platform-release/pytorch-gpu', 'tag': 'latest' }], } } Currently, only the following fields can be updated: - `software_config.kernels` - `software_config.post_startup_script` - `software_config.custom_gpu_driver_path` - `software_config.idle_shutdown` - `software_config.idle_shutdown_timeout` - `software_config.disable_terminal` - `labels`"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Output only. The resource name of the runtime. Format: `projects/{project}/locations/{location}/runtimes/{runtimeId}`",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Idempotent request UUID.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "request": {
                    "$ref": "Runtime"
                  },
                  "httpMethod": "PATCH",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "id": "notebooks.projects.locations.runtimes.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets details of a single Runtime. The location must be a regional endpoint rather than zonal.",
                  "response": {
                    "$ref": "Runtime"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`",
                      "required": true
                    }
                  }
                },
                "upgrade": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Upgrades a Managed Notebook Runtime to the latest version.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:upgrade",
                  "id": "notebooks.projects.locations.runtimes.upgrade",
                  "path": "v1/{+name}:upgrade",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "UpgradeRuntimeRequest"
                  }
                },
                "reset": {
                  "httpMethod": "POST",
                  "path": "v1/{+name}:reset",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Resets a Managed Notebook Runtime.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "ResetRuntimeRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:reset",
                  "id": "notebooks.projects.locations.runtimes.reset"
                },
                "diagnose": {
                  "path": "v1/{+name}:diagnose",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:diagnose",
                  "description": "Creates a Diagnostic File and runs Diagnostic Tool given a Runtime.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "DiagnoseRuntimeRequest"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtimes_id}`",
                      "type": "string",
                      "required": true
                    }
                  },
                  "id": "notebooks.projects.locations.runtimes.diagnose"
                },
                "setIamPolicy": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "path": "v1/{+resource}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "id": "notebooks.projects.locations.runtimes.setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "id": "notebooks.projects.locations.runtimes.testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  }
                },
                "stop": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "notebooks.projects.locations.runtimes.stop",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:stop",
                  "path": "v1/{+name}:stop",
                  "description": "Stops a Managed Notebook Runtime. Perform \"Stop\" on GPU instances; \"Suspend\" on CPU instances See: https://cloud.google.com/compute/docs/instances/stop-start-instance https://cloud.google.com/compute/docs/instances/suspend-resume-instance",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "type": "string",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "StopRuntimeRequest"
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/runtimes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListRuntimesResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "Maximum return size of the list call.",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "A previous returned page token that can be used to continue listing from the last result.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes",
                  "description": "Lists Runtimes in a given project and location.",
                  "id": "notebooks.projects.locations.runtimes.list",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Runtime.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "notebooks.projects.locations.runtimes.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "requestId": {
                      "description": "Idempotent request UUID.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}"
                },
                "switch": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:switch",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`",
                      "type": "string",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}:switch",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "id": "notebooks.projects.locations.runtimes.switch",
                  "description": "Switch a Managed Notebook Runtime.",
                  "request": {
                    "$ref": "SwitchRuntimeRequest"
                  }
                },
                "reportEvent": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Reports and processes a runtime event.",
                  "id": "notebooks.projects.locations.runtimes.reportEvent",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:reportEvent",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}:reportEvent",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ReportRuntimeEventRequest"
                  }
                },
                "refreshRuntimeTokenInternal": {
                  "response": {
                    "$ref": "RefreshRuntimeTokenInternalResponse"
                  },
                  "path": "v1/{+name}:refreshRuntimeTokenInternal",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:refreshRuntimeTokenInternal",
                  "parameters": {
                    "name": {
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "id": "notebooks.projects.locations.runtimes.refreshRuntimeTokenInternal",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "RefreshRuntimeTokenInternalRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Gets an access token for the consumer service account that the customer attached to the runtime. Only accessible from the tenant instance."
                },
                "getIamPolicy": {
                  "id": "notebooks.projects.locations.runtimes.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "httpMethod": "GET",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "format": "int32"
                    },
                    "resource": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "start": {
                  "description": "Starts a Managed Notebook Runtime. Perform \"Start\" on GPU instances; \"Resume\" on CPU instances See: https://cloud.google.com/compute/docs/instances/stop-start-instance https://cloud.google.com/compute/docs/instances/suspend-resume-instance",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/runtimes/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/runtimes/{runtime_id}`",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:start",
                  "httpMethod": "POST",
                  "id": "notebooks.projects.locations.runtimes.start",
                  "request": {
                    "$ref": "StartRuntimeRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:start",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "create": {
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Idempotent request UUID."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`"
                    },
                    "runtimeId": {
                      "description": "Required. User-defined unique ID of this Runtime.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "request": {
                    "$ref": "Runtime"
                  },
                  "path": "v1/{+parent}/runtimes",
                  "description": "Creates a new Runtime in a given project and location.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimes",
                  "id": "notebooks.projects.locations.runtimes.create",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "httpMethod": "DELETE",
                  "id": "notebooks.projects.locations.operations.delete",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be deleted."
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "get": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "id": "notebooks.projects.locations.operations.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "path": "v1/{+name}/operations",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation's parent resource."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list filter."
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The standard list page size.",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The standard list page token.",
                      "type": "string"
                    }
                  },
                  "id": "notebooks.projects.locations.operations.list",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "cancel": {
                  "id": "notebooks.projects.locations.operations.cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:cancel"
                }
              }
            },
            "environments": {
              "methods": {
                "get": {
                  "parameters": {
                    "name": {
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/environments/{environment_id}`",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/environments/[^/]+$",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "notebooks.projects.locations.environments.get",
                  "path": "v1/{+name}",
                  "description": "Gets details of a single Environment.",
                  "response": {
                    "$ref": "Environment"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}",
                  "httpMethod": "GET"
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/environments/{environment_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/environments/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "description": "Deletes a single Environment.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "notebooks.projects.locations.environments.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "response": {
                    "$ref": "ListEnvironmentsResponse"
                  },
                  "path": "v1/{+parent}/environments",
                  "description": "Lists environments in a project.",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/environments",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "Maximum return size of the list call.",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A previous returned page token that can be used to continue listing from the last result.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. Format: `projects/{project_id}/locations/{location}`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "notebooks.projects.locations.environments.list"
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+parent}/environments",
                  "request": {
                    "$ref": "Environment"
                  },
                  "httpMethod": "POST",
                  "id": "notebooks.projects.locations.environments.create",
                  "description": "Creates a new Environment.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/environments",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "environmentId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. User-defined unique ID of this environment. The `environment_id` must be 1 to 63 characters long and contain only lowercase letters, numeric characters, and dashes. The first character must be a lowercase letter and the last character cannot be a dash."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "instances": {
              "methods": {
                "create": {
                  "path": "v1/{+parent}/instances",
                  "id": "notebooks.projects.locations.instances.create",
                  "request": {
                    "$ref": "Instance"
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "instanceId": {
                      "description": "Required. User-defined unique ID of this instance.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Instance in a given project and location."
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "description": "Deletes a single Instance.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "id": "notebooks.projects.locations.instances.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "diagnose": {
                  "description": "Creates a Diagnostic File and runs Diagnostic Tool given an Instance.",
                  "id": "notebooks.projects.locations.instances.diagnose",
                  "path": "v1/{+name}:diagnose",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`"
                    }
                  },
                  "request": {
                    "$ref": "DiagnoseInstanceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:diagnose"
                },
                "start": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "notebooks.projects.locations.instances.start",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}:start",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "description": "Starts a notebook instance."
                },
                "getInstanceHealth": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Checks whether a notebook instance is healthy.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:getInstanceHealth",
                  "parameters": {
                    "name": {
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}:getInstanceHealth",
                  "id": "notebooks.projects.locations.instances.getInstanceHealth",
                  "response": {
                    "$ref": "GetInstanceHealthResponse"
                  }
                },
                "reset": {
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "id": "notebooks.projects.locations.instances.reset",
                  "httpMethod": "POST",
                  "description": "Resets a notebook instance.",
                  "path": "v1/{+name}:reset",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset"
                },
                "register": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances:register",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "notebooks.projects.locations.instances.register",
                  "request": {
                    "$ref": "RegisterInstanceRequest"
                  },
                  "description": "Registers an existing legacy notebook instance to the Notebooks API server. Legacy instances are instances created with the legacy Compute Engine calls. They are not manageable by the Notebooks API out of the box. This call makes these instances manageable by the Notebooks API.",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/instances:register"
                },
                "getIamPolicy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    },
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    }
                  },
                  "httpMethod": "GET",
                  "id": "notebooks.projects.locations.instances.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "setMachineType": {
                  "path": "v1/{+name}:setMachineType",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:setMachineType",
                  "httpMethod": "PATCH",
                  "description": "Updates the machine type of a single Instance.",
                  "request": {
                    "$ref": "SetInstanceMachineTypeRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "notebooks.projects.locations.instances.setMachineType",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`"
                    }
                  }
                },
                "setAccelerator": {
                  "description": "Updates the guest accelerators of a single Instance.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:setAccelerator",
                  "id": "notebooks.projects.locations.instances.setAccelerator",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}:setAccelerator",
                  "request": {
                    "$ref": "SetInstanceAcceleratorRequest"
                  }
                },
                "reportEvent": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "type": "string"
                    }
                  },
                  "id": "notebooks.projects.locations.instances.reportEvent",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reportEvent",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}:reportEvent",
                  "description": "Reports and processes an instance event.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ReportInstanceEventRequest"
                  }
                },
                "updateShieldedInstanceConfig": {
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "notebooks.projects.locations.instances.updateShieldedInstanceConfig",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "UpdateShieldedInstanceConfigRequest"
                  },
                  "path": "v1/{+name}:updateShieldedInstanceConfig",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the Shielded instance configuration of a single Instance.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:updateShieldedInstanceConfig"
                },
                "rollback": {
                  "description": "Rollbacks a notebook instance to the previous version.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+name}:rollback",
                  "request": {
                    "$ref": "RollbackInstanceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "notebooks.projects.locations.instances.rollback",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rollback"
                },
                "setIamPolicy": {
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "id": "notebooks.projects.locations.instances.setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "get": {
                  "id": "notebooks.projects.locations.instances.get",
                  "description": "Gets details of a single Instance.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Instance"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "httpMethod": "GET",
                  "path": "v1/{+name}"
                },
                "list": {
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "notebooks.projects.locations.instances.list",
                  "description": "Lists instances in a given project and location.",
                  "path": "v1/{+parent}/instances",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "A previous returned page token that can be used to continue listing from the last result.",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum return size of the list call.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances",
                  "httpMethod": "GET"
                },
                "upgrade": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:upgrade",
                  "description": "Upgrades a notebook instance to the latest version.",
                  "id": "notebooks.projects.locations.instances.upgrade",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "UpgradeInstanceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:upgrade",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "updateConfig": {
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:updateConfig",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}:updateConfig",
                  "id": "notebooks.projects.locations.instances.updateConfig",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Update Notebook Instance configurations.",
                  "request": {
                    "$ref": "UpdateInstanceConfigRequest"
                  }
                },
                "testIamPermissions": {
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "id": "notebooks.projects.locations.instances.testIamPermissions"
                },
                "updateMetadataItems": {
                  "id": "notebooks.projects.locations.instances.updateMetadataItems",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`"
                    }
                  },
                  "request": {
                    "$ref": "UpdateInstanceMetadataItemsRequest"
                  },
                  "response": {
                    "$ref": "UpdateInstanceMetadataItemsResponse"
                  },
                  "httpMethod": "PATCH",
                  "path": "v1/{+name}:updateMetadataItems",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Add/update metadata items for an instance.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:updateMetadataItems"
                },
                "stop": {
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "path": "v1/{+name}:stop",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "notebooks.projects.locations.instances.stop",
                  "description": "Stops a notebook instance.",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "upgradeInternal": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:upgradeInternal",
                  "description": "Allows notebook instances to call this endpoint to upgrade themselves. Do not use this method directly.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "UpgradeInstanceInternalRequest"
                  },
                  "path": "v1/{+name}:upgradeInternal",
                  "id": "notebooks.projects.locations.instances.upgradeInternal",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "report": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Allows notebook instances to report their latest instance information to the Notebooks API server. The server will merge the reported information to the instance metadata store. Do not use this method directly.",
                  "id": "notebooks.projects.locations.instances.report",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ReportInstanceInfoRequest"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:report",
                  "path": "v1/{+name}:report"
                },
                "isUpgradeable": {
                  "description": "Checks whether a notebook instance is upgradable.",
                  "parameters": {
                    "type": {
                      "enumDescriptions": [
                        "Upgrade type is not specified.",
                        "Upgrade ML framework.",
                        "Upgrade Operating System.",
                        "Upgrade CUDA.",
                        "Upgrade All (OS, Framework and CUDA)."
                      ],
                      "location": "query",
                      "description": "Optional. The optional UpgradeType. Setting this field will search for additional compute images to upgrade this instance.",
                      "enum": [
                        "UPGRADE_TYPE_UNSPECIFIED",
                        "UPGRADE_FRAMEWORK",
                        "UPGRADE_OS",
                        "UPGRADE_CUDA",
                        "UPGRADE_ALL"
                      ],
                      "type": "string"
                    },
                    "notebookInstance": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:isUpgradeable",
                  "id": "notebooks.projects.locations.instances.isUpgradeable",
                  "response": {
                    "$ref": "IsInstanceUpgradeableResponse"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "notebookInstance"
                  ],
                  "path": "v1/{+notebookInstance}:isUpgradeable"
                },
                "setLabels": {
                  "id": "notebooks.projects.locations.instances.setLabels",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Replaces all the labels of an Instance.",
                  "path": "v1/{+name}:setLabels",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:setLabels",
                  "request": {
                    "$ref": "SetInstanceLabelsRequest"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`"
                    }
                  },
                  "httpMethod": "PATCH"
                }
              }
            },
            "executions": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "id": "notebooks.projects.locations.executions.get",
                  "response": {
                    "$ref": "Execution"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/executions/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/executions/{execution_id}`",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/executions/{executionsId}",
                  "description": "Gets details of executions",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A previous returned page token that can be used to continue listing from the last result."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum return size of the list call.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "location": "path"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Sort by field."
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filter applied to resulting executions. Currently only supports filtering executions by a specified `schedule_id`. Format: `schedule_id=`"
                    }
                  },
                  "path": "v1/{+parent}/executions",
                  "description": "Lists executions in a given project and location",
                  "id": "notebooks.projects.locations.executions.list",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/executions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListExecutionsResponse"
                  }
                },
                "create": {
                  "description": "Creates a new Execution in a given project and location.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "notebooks.projects.locations.executions.create",
                  "path": "v1/{+parent}/executions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/executions",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Format: `parent=projects/{project_id}/locations/{location}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "executionId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. User-defined unique ID of this execution."
                    }
                  },
                  "request": {
                    "$ref": "Execution"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "delete": {
                  "id": "notebooks.projects.locations.executions.delete",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes execution",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/executions/{executionsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/executions/[^/]+$",
                      "type": "string",
                      "description": "Required. Format: `projects/{project_id}/locations/{location}/executions/{execution_id}`",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            }
          },
          "methods": {
            "get": {
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "id": "notebooks.projects.locations.get",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path"
                }
              },
              "path": "v1/{+name}",
              "httpMethod": "GET"
            },
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "path": "v1/{+name}/locations",
              "id": "notebooks.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageToken": {
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/locations"
            }
          }
        }
      }
    }
  }
}

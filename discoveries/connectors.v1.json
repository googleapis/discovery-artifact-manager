{
  "basePath": "",
  "documentationLink": "https://cloud.google.com/apigee/docs/api-platform/connectors/about-connectors",
  "name": "connectors",
  "discoveryVersion": "v1",
  "version_module": true,
  "id": "connectors:v1",
  "canonicalName": "Connectors",
  "version": "v1",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "schemas": {
    "ListOperationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        }
      },
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations."
    },
    "CancelOperationRequest": {
      "properties": {},
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "id": "CancelOperationRequest"
    },
    "Empty": {
      "type": "object",
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {}
    },
    "Operation": {
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "id": "Operation"
    },
    "ConfigVariableTemplate": {
      "description": "ConfigVariableTemplate provides metadata about a `ConfigVariable` that is used in a Connection.",
      "type": "object",
      "id": "ConfigVariableTemplate",
      "properties": {
        "required": {
          "type": "boolean",
          "description": "Flag represents that this `ConfigVariable` must be provided for a connection."
        },
        "valueType": {
          "description": "Type of the parameter: string, int, bool etc. consider custom type for the benefit for the validation.",
          "type": "string",
          "enumDescriptions": [
            "Value type is not specified.",
            "Value type is string.",
            "Value type is integer.",
            "Value type is boolean.",
            "Value type is secret."
          ],
          "enum": [
            "VALUE_TYPE_UNSPECIFIED",
            "STRING",
            "INT",
            "BOOL",
            "SECRET"
          ]
        },
        "validationRegex": {
          "description": "Regular expression in RE2 syntax used for validating the `value` of a `ConfigVariable`.",
          "type": "string"
        },
        "roleGrant": {
          "$ref": "RoleGrant",
          "description": "Role grant configuration for the config variable."
        },
        "key": {
          "description": "Key of the config variable.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the parameter."
        },
        "description": {
          "type": "string",
          "description": "Description."
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        }
      }
    },
    "ListConnectorVersionsResponse": {
      "id": "ListConnectorVersionsResponse",
      "description": "Response message for Connectors.ListConnectorVersions.",
      "properties": {
        "connectorVersions": {
          "type": "array",
          "items": {
            "$ref": "ConnectorVersion"
          },
          "description": "A list of connector versions."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        }
      },
      "type": "object"
    },
    "ConnectorVersion": {
      "description": "ConnectorVersion indicates a specific version of a connector.",
      "properties": {
        "supportedRuntimeFeatures": {
          "$ref": "SupportedRuntimeFeatures",
          "description": "Output only. Information about the runtime features supported by the Connector.",
          "readOnly": true
        },
        "launchStage": {
          "readOnly": true,
          "enumDescriptions": [
            "LAUNCH_STAGE_UNSPECIFIED.",
            "PREVIEW.",
            "GA.",
            "DEPRECATED."
          ],
          "type": "string",
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "PREVIEW",
            "GA",
            "DEPRECATED"
          ],
          "description": "Output only. Flag to mark the version indicating the launch stage."
        },
        "releaseVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. ReleaseVersion of the connector, for example: \"1.0.1-alpha\"."
        },
        "configVariableTemplates": {
          "items": {
            "$ref": "ConfigVariableTemplate"
          },
          "description": "Output only. List of config variables needed to create a connection.",
          "readOnly": true,
          "type": "array"
        },
        "displayName": {
          "description": "Output only. Display name.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Created time.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "labels": {
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          },
          "description": "Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources",
          "type": "object"
        },
        "updateTime": {
          "description": "Output only. Updated time.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name of the Version. Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector}/versions/{version}",
          "readOnly": true
        },
        "roleGrant": {
          "readOnly": true,
          "$ref": "RoleGrant",
          "description": "Output only. Role grant configuration for this config variable. It will be DEPRECATED soon."
        },
        "egressControlConfig": {
          "description": "Output only. Configuration for Egress Control.",
          "readOnly": true,
          "$ref": "EgressControlConfig"
        },
        "authConfigTemplates": {
          "items": {
            "$ref": "AuthConfigTemplate"
          },
          "description": "Output only. List of auth configs supported by the Connector Version.",
          "type": "array",
          "readOnly": true
        },
        "roleGrants": {
          "description": "Output only. Role grant configurations for this connector version.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "RoleGrant"
          }
        }
      },
      "id": "ConnectorVersion",
      "type": "object"
    },
    "ListRuntimeEntitySchemasResponse": {
      "type": "object",
      "id": "ListRuntimeEntitySchemasResponse",
      "properties": {
        "runtimeEntitySchemas": {
          "items": {
            "$ref": "RuntimeEntitySchema"
          },
          "description": "Runtime entity schemas.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Next page token.",
          "type": "string"
        }
      },
      "description": "Response message for ConnectorsService.ListRuntimeEntitySchemas."
    },
    "RuntimeConfig": {
      "type": "object",
      "properties": {
        "runtimeEndpoint": {
          "type": "string",
          "description": "Output only. The endpoint of the connectors runtime ingress.",
          "readOnly": true
        },
        "controlPlaneTopic": {
          "type": "string",
          "description": "Output only. Pub/Sub topic for control plne to send message. communication. E.g. projects/{project-id}/topics/{topic-id}",
          "readOnly": true
        },
        "conndTopic": {
          "type": "string",
          "description": "Output only. Pub/Sub topic for connd to send message. E.g. projects/{project-id}/topics/{topic-id}",
          "readOnly": true
        },
        "serviceDirectory": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the Service Directory service name. Used for Private Harpoon to resolve the ILB address. e.g. \"projects/cloud-connectors-e2e-testing/locations/us-central1/namespaces/istio-system/services/istio-ingressgateway-connectors\""
        },
        "controlPlaneSubscription": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Pub/Sub subscription for control plane to receive message. E.g. projects/{project-id}/subscriptions/{topic-id}"
        },
        "conndSubscription": {
          "readOnly": true,
          "description": "Output only. Pub/Sub subscription for connd to receive message. E.g. projects/{project-id}/subscriptions/{topic-id}",
          "type": "string"
        },
        "schemaGcsBucket": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The Cloud Storage bucket that stores connector's schema reports."
        },
        "locationId": {
          "type": "string",
          "description": "Output only. location_id of the runtime location. E.g. \"us-west1\".",
          "readOnly": true
        },
        "state": {
          "enumDescriptions": [
            "STATE_UNSPECIFIED.",
            "INACTIVE.",
            "ACTIVATING.",
            "ACTIVE.",
            "CREATING.",
            "DELETING.",
            "UPDATING."
          ],
          "description": "Output only. The state of the location.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "INACTIVE",
            "ACTIVATING",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "UPDATING"
          ]
        }
      },
      "description": "RuntimeConfig is the singleton resource of each location. It includes generic resource configs consumed by control plane and runtime plane like: pub/sub topic/subscription resource name, Cloud Storage location storing schema etc.",
      "id": "RuntimeConfig"
    },
    "Binding": {
      "properties": {
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        },
        "members": {
          "type": "array",
          "description": "Specifies the principals requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        }
      },
      "description": "Associates `members`, or principals, with a `role`.",
      "id": "Binding",
      "type": "object"
    },
    "ListRuntimeActionSchemasResponse": {
      "id": "ListRuntimeActionSchemasResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        },
        "runtimeActionSchemas": {
          "type": "array",
          "description": "Runtime action schemas.",
          "items": {
            "$ref": "RuntimeActionSchema"
          }
        }
      },
      "type": "object",
      "description": "Response message for ConnectorsService.ListRuntimeActionSchemas."
    },
    "SupportedRuntimeFeatures": {
      "description": "Supported runtime features of a connector version. This is passed to the management layer to add a new connector version by the connector developer. Details about how this proto is passed to the management layer is covered in this doc - go/runtime-manifest.",
      "type": "object",
      "id": "SupportedRuntimeFeatures",
      "properties": {
        "entityApis": {
          "type": "boolean",
          "description": "Specifies if the connector supports entity apis like 'createEntity'."
        },
        "sqlQuery": {
          "type": "boolean",
          "description": "Specifies if the connector supports 'ExecuteSqlQuery' operation."
        },
        "actionApis": {
          "description": "Specifies if the connector supports action apis like 'executeAction'.",
          "type": "boolean"
        }
      }
    },
    "RuntimeActionSchema": {
      "type": "object",
      "properties": {
        "resultMetadata": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "ResultMetadata"
          },
          "description": "Output only. List of result field metadata."
        },
        "action": {
          "readOnly": true,
          "description": "Output only. Name of the action.",
          "type": "string"
        },
        "inputParameters": {
          "readOnly": true,
          "description": "Output only. List of input parameter metadata for the action.",
          "items": {
            "$ref": "InputParameter"
          },
          "type": "array"
        }
      },
      "id": "RuntimeActionSchema",
      "description": "Schema of a runtime action."
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "id": "Expr",
      "properties": {
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        }
      }
    },
    "Oauth2ClientCredentials": {
      "properties": {
        "clientId": {
          "description": "The client identifier.",
          "type": "string"
        },
        "clientSecret": {
          "$ref": "Secret",
          "description": "Secret version reference containing the client secret."
        }
      },
      "description": "Parameters to support Oauth 2.0 Client Credentials Grant Authentication. See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.",
      "type": "object",
      "id": "Oauth2ClientCredentials"
    },
    "ListConnectionsResponse": {
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "connections": {
          "items": {
            "$ref": "Connection"
          },
          "type": "array",
          "description": "Connections."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        }
      },
      "id": "ListConnectionsResponse",
      "description": "Response message for ConnectorsService.ListConnections",
      "type": "object"
    },
    "AuditLogConfig": {
      "properties": {
        "logType": {
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "description": "The log type that this config enables.",
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
        }
      },
      "type": "object",
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
    },
    "AuthConfigTemplate": {
      "properties": {
        "configVariableTemplates": {
          "items": {
            "$ref": "ConfigVariableTemplate"
          },
          "description": "Config variables to describe an `AuthConfig` for a `Connection`.",
          "type": "array"
        },
        "authType": {
          "type": "string",
          "enum": [
            "AUTH_TYPE_UNSPECIFIED",
            "USER_PASSWORD",
            "OAUTH2_JWT_BEARER",
            "OAUTH2_CLIENT_CREDENTIALS"
          ],
          "enumDescriptions": [
            "Authentication type not specified.",
            "Username and Password Authentication.",
            "JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication",
            "Oauth 2.0 Client Credentials Grant Authentication"
          ],
          "description": "The type of authentication configured."
        }
      },
      "description": "AuthConfigTemplate defines required field over an authentication type.",
      "type": "object",
      "id": "AuthConfigTemplate"
    },
    "ListProvidersResponse": {
      "description": "Response message for Connectors.ListProviders.",
      "id": "ListProvidersResponse",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        },
        "providers": {
          "type": "array",
          "items": {
            "$ref": "Provider"
          },
          "description": "A list of providers."
        }
      },
      "type": "object"
    },
    "Source": {
      "type": "object",
      "description": "Source to extract the backend from.",
      "properties": {
        "fieldId": {
          "type": "string",
          "description": "Field identifier. For example config vaiable name."
        },
        "sourceType": {
          "enum": [
            "SOURCE_TYPE_UNSPECIFIED",
            "CONFIG_VARIABLE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default SOURCE.",
            "Config Variable source type."
          ],
          "description": "Type of the source."
        }
      },
      "id": "Source"
    },
    "AuditConfig": {
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "type": "array",
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      },
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
      "id": "AuditConfig",
      "type": "object"
    },
    "ListConnectorsResponse": {
      "description": "Response message for Connectors.ListConnectors.",
      "id": "ListConnectorsResponse",
      "properties": {
        "connectors": {
          "type": "array",
          "items": {
            "$ref": "Connector"
          },
          "description": "A list of connectors."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "Next page token.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Resource": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "GCP_PROJECT",
            "GCP_RESOURCE",
            "GCP_SECRETMANAGER_SECRET",
            "GCP_SECRETMANAGER_SECRET_VERSION"
          ],
          "description": "Different types of resource supported.",
          "type": "string",
          "enumDescriptions": [
            "Value type is not specified.",
            "GCP Project Resource.",
            "Any GCP Resource which is identified uniquely by IAM.",
            "GCP Secret Resource.",
            "GCP Secret Version Resource."
          ]
        },
        "pathTemplate": {
          "type": "string",
          "description": "Template to uniquely represent a GCP resource in a format IAM expects This is a template that can have references to other values provided in the config variable template."
        }
      },
      "id": "Resource",
      "description": "Resource definition"
    },
    "TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsRequest",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "ResultMetadata": {
      "description": "Metadata of result field.",
      "properties": {
        "field": {
          "type": "string",
          "description": "Name of the result field."
        },
        "dataType": {
          "enumDescriptions": [
            "Data type is not specified.",
            "DEPRECATED! Use DATA_TYPE_INTEGER.",
            "Short integer(int16) data type.",
            "Double data type.",
            "Date data type.",
            "DEPRECATED! Use DATA_TYPE_TIMESTAMP.",
            "Time data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "DEPRECATED! Use DATA_TYPE_BIGINT.",
            "Boolean data type.",
            "Decimal data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "UNSUPPORTED! Binary data type.",
            "Bit data type.",
            "Small integer(int8) data type.",
            "Integer(int32) data type.",
            "Long integer(int64) data type.",
            "Float data type.",
            "Real data type.",
            "Numeric data type.",
            "Char data type.",
            "Varchar data type.",
            "Longvarchar data type.",
            "Timestamp data type.",
            "Nchar data type.",
            "Nvarchar data type.",
            "Longnvarchar data type.",
            "Null data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Row id data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Variable binary data type.",
            "UNSUPPORTED! Long variable binary data type.",
            "UNSUPPORTED! NCLOB data type.",
            "UNSUPPORTED! SQL XML data type is not supported.",
            "UNSUPPORTED! Cursor reference type is not supported.",
            "UNSUPPORTED! Use TIME or TIMESTAMP instead.",
            "UNSUPPORTED! Use TIMESTAMP instead."
          ],
          "type": "string",
          "description": "The data type of the field.",
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "DATA_TYPE_INT",
            "DATA_TYPE_SMALLINT",
            "DATA_TYPE_DOUBLE",
            "DATA_TYPE_DATE",
            "DATA_TYPE_DATETIME",
            "DATA_TYPE_TIME",
            "DATA_TYPE_STRING",
            "DATA_TYPE_LONG",
            "DATA_TYPE_BOOLEAN",
            "DATA_TYPE_DECIMAL",
            "DATA_TYPE_UUID",
            "DATA_TYPE_BLOB",
            "DATA_TYPE_BIT",
            "DATA_TYPE_TINYINT",
            "DATA_TYPE_INTEGER",
            "DATA_TYPE_BIGINT",
            "DATA_TYPE_FLOAT",
            "DATA_TYPE_REAL",
            "DATA_TYPE_NUMERIC",
            "DATA_TYPE_CHAR",
            "DATA_TYPE_VARCHAR",
            "DATA_TYPE_LONGVARCHAR",
            "DATA_TYPE_TIMESTAMP",
            "DATA_TYPE_NCHAR",
            "DATA_TYPE_NVARCHAR",
            "DATA_TYPE_LONGNVARCHAR",
            "DATA_TYPE_NULL",
            "DATA_TYPE_OTHER",
            "DATA_TYPE_JAVA_OBJECT",
            "DATA_TYPE_DISTINCT",
            "DATA_TYPE_STRUCT",
            "DATA_TYPE_ARRAY",
            "DATA_TYPE_CLOB",
            "DATA_TYPE_REF",
            "DATA_TYPE_DATALINK",
            "DATA_TYPE_ROWID",
            "DATA_TYPE_BINARY",
            "DATA_TYPE_VARBINARY",
            "DATA_TYPE_LONGVARBINARY",
            "DATA_TYPE_NCLOB",
            "DATA_TYPE_SQLXML",
            "DATA_TYPE_REF_CURSOR",
            "DATA_TYPE_TIME_WITH_TIMEZONE",
            "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE"
          ]
        },
        "description": {
          "type": "string",
          "description": "A brief description of the field."
        }
      },
      "id": "ResultMetadata",
      "type": "object"
    },
    "Secret": {
      "type": "object",
      "id": "Secret",
      "properties": {
        "secretVersion": {
          "type": "string",
          "description": "The resource name of the secret version in the format, format as: `projects/*/secrets/*/versions/*`."
        }
      },
      "description": "Secret provides a reference to entries in Secret Manager."
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array"
        }
      }
    },
    "RuntimeEntitySchema": {
      "type": "object",
      "properties": {
        "fields": {
          "items": {
            "$ref": "Field"
          },
          "description": "Output only. List of fields in the entity.",
          "readOnly": true,
          "type": "array"
        },
        "entity": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the entity."
        }
      },
      "description": "Schema of a runtime entity.",
      "id": "RuntimeEntitySchema"
    },
    "ConfigVariable": {
      "type": "object",
      "id": "ConfigVariable",
      "description": "ConfigVariable represents a configuration variable present in a Connection. or AuthConfig.",
      "properties": {
        "intValue": {
          "format": "int64",
          "type": "string",
          "description": "Value is an integer"
        },
        "stringValue": {
          "description": "Value is a string.",
          "type": "string"
        },
        "secretValue": {
          "$ref": "Secret",
          "description": "Value is a secret."
        },
        "key": {
          "type": "string",
          "description": "Key of the config variable."
        },
        "boolValue": {
          "description": "Value is a bool.",
          "type": "boolean"
        }
      }
    },
    "ConnectionSchemaMetadata": {
      "description": "Metadata of connection schema.",
      "id": "ConnectionSchemaMetadata",
      "type": "object",
      "properties": {
        "actions": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Output only. List of actions.",
          "type": "array"
        },
        "entities": {
          "description": "Output only. List of entity names.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "readOnly": true
        }
      }
    },
    "Provider": {
      "description": "Provider indicates the owner who provides the connectors.",
      "id": "Provider",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Resource name of the Provider. Format: projects/{project}/locations/{location}/providers/{provider}"
        },
        "displayName": {
          "type": "string",
          "description": "Output only. Display name.",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Created time.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Updated time.",
          "readOnly": true
        },
        "description": {
          "description": "Output only. Description of the resource.",
          "type": "string",
          "readOnly": true
        },
        "webAssetsLocation": {
          "description": "Output only. Cloud storage location of icons etc consumed by UI.",
          "type": "string",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "readOnly": true,
          "description": "Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources"
        },
        "launchStage": {
          "readOnly": true,
          "description": "Output only. Flag to mark the version indicating the launch stage.",
          "type": "string",
          "enumDescriptions": [
            "LAUNCH_STAGE_UNSPECIFIED.",
            "PREVIEW.",
            "GA.",
            "DEPRECATED."
          ],
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "PREVIEW",
            "GA",
            "DEPRECATED"
          ]
        },
        "documentationUri": {
          "description": "Output only. Link to documentation page.",
          "type": "string",
          "readOnly": true
        },
        "externalUri": {
          "readOnly": true,
          "description": "Output only. Link to external page.",
          "type": "string"
        }
      }
    },
    "ListLocationsResponse": {
      "type": "object",
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "description": "The response message for Locations.ListLocations."
    },
    "ExtractionRule": {
      "type": "object",
      "description": "Extraction Rule.",
      "properties": {
        "extractionRegex": {
          "type": "string",
          "description": "Regex used to extract backend details from source. If empty, whole source value will be used."
        },
        "source": {
          "description": "Source on which the rule is applied.",
          "$ref": "Source"
        }
      },
      "id": "ExtractionRule"
    },
    "Oauth2JwtBearer": {
      "id": "Oauth2JwtBearer",
      "type": "object",
      "description": "Parameters to support JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication. See https://tools.ietf.org/html/rfc7523 for more details.",
      "properties": {
        "jwtClaims": {
          "$ref": "JwtClaims",
          "description": "JwtClaims providers fields to generate the token."
        },
        "clientKey": {
          "description": "Secret version reference containing a PKCS#8 PEM-encoded private key associated with the Client Certificate. This private key will be used to sign JWTs used for the jwt-bearer authorization grant. Specified in the form as: `projects/*/secrets/*/versions/*`.",
          "$ref": "Secret"
        }
      }
    },
    "Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "properties": {
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "type": "array",
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        },
        "version": {
          "format": "int32",
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "AuditConfig"
          },
          "type": "array"
        },
        "etag": {
          "format": "byte",
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        }
      },
      "type": "object",
      "id": "Policy"
    },
    "RoleGrant": {
      "type": "object",
      "id": "RoleGrant",
      "description": "This configuration defines all the Cloud IAM roles that needs to be granted to a particular GCP resource for the selected prinicpal like service account. These configurations will let UI display to customers what IAM roles need to be granted by them. Or these configurations can be used by the UI to render a 'grant' button to do the same on behalf of the user.",
      "properties": {
        "helperTextTemplate": {
          "description": "Template that UI can use to provide helper text to customers.",
          "type": "string"
        },
        "principal": {
          "enum": [
            "PRINCIPAL_UNSPECIFIED",
            "CONNECTOR_SA"
          ],
          "type": "string",
          "description": "Prinicipal/Identity for whom the role need to assigned.",
          "enumDescriptions": [
            "Value type is not specified.",
            "Service Account used for Connector workload identity This is either the default service account if unspecified or Service Account provided by Customers through BYOSA."
          ]
        },
        "resource": {
          "description": "Resource on which the roles needs to be granted for the principal.",
          "$ref": "Resource"
        },
        "roles": {
          "items": {
            "type": "string"
          },
          "description": "List of roles that need to be granted.",
          "type": "array"
        }
      }
    },
    "OperationMetadata": {
      "type": "object",
      "properties": {
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "apiVersion": {
          "type": "string",
          "description": "Output only. API version used to start the operation.",
          "readOnly": true
        },
        "requestedCancellation": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        }
      },
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation."
    },
    "Connection": {
      "type": "object",
      "properties": {
        "egressBackends": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. Outbound domains/hosts needs to be allowlisted."
        },
        "authConfig": {
          "$ref": "AuthConfig",
          "description": "Optional. Configuration for establishing the connection's authentication with an external system."
        },
        "serviceDirectory": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the Service Directory service name. Used for Private Harpoon to resolve the ILB address. e.g. \"projects/cloud-connectors-e2e-testing/locations/us-central1/namespaces/istio-system/services/istio-ingressgateway-connectors\""
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the resource."
        },
        "createTime": {
          "description": "Output only. Created time.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "configVariables": {
          "description": "Optional. Configuration for configuring the connection with an external system.",
          "items": {
            "$ref": "ConfigVariable"
          },
          "type": "array"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Updated time.",
          "format": "google-datetime"
        },
        "serviceAccount": {
          "description": "Optional. Service account needed for runtime plane to access GCP resources.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources"
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}",
          "readOnly": true
        },
        "lockConfig": {
          "description": "Optional. Configuration that indicates whether or not the Connection can be edited.",
          "$ref": "LockConfig"
        },
        "envoyImageLocation": {
          "description": "Output only. GCR location where the envoy image is stored. formatted like: gcr.io/{bucketName}/{imageName}",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "readOnly": true,
          "description": "Output only. Current status of the connection.",
          "$ref": "ConnectionStatus"
        },
        "imageLocation": {
          "description": "Output only. GCR location where the runtime image is stored. formatted like: gcr.io/{bucketName}/{imageName}",
          "readOnly": true,
          "type": "string"
        },
        "suspended": {
          "type": "boolean",
          "description": "Optional. Suspended indicates if a user has suspended a connection or not."
        },
        "connectorVersion": {
          "description": "Required. Connector version on which the connection is created. The format is: projects/*/locations/global/providers/*/connectors/*/versions/*",
          "type": "string"
        }
      },
      "id": "Connection",
      "description": "Connection represents an instance of connector."
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "EgressControlConfig": {
      "id": "EgressControlConfig",
      "description": "Egress control config for connector runtime. These configurations define the rules to identify which outbound domains/hosts needs to be whitelisted. It may be a static information for a particular connector version or it is derived from the configurations provided by the customer in Connection resource.",
      "type": "object",
      "properties": {
        "backends": {
          "type": "string",
          "description": "Static Comma separated backends which are common for all Connection resources. Supported formats for each backend are host:port or just host (host can be ip address or domain name)."
        },
        "extractionRules": {
          "description": "Extractions Rules to extract the backends from customer provided configuration.",
          "$ref": "ExtractionRules"
        }
      }
    },
    "AuthConfig": {
      "type": "object",
      "description": "AuthConfig defines details of a authentication type.",
      "properties": {
        "additionalVariables": {
          "items": {
            "$ref": "ConfigVariable"
          },
          "description": "List containing additional auth configs.",
          "type": "array"
        },
        "authType": {
          "description": "The type of authentication configured.",
          "enumDescriptions": [
            "Authentication type not specified.",
            "Username and Password Authentication.",
            "JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication",
            "Oauth 2.0 Client Credentials Grant Authentication"
          ],
          "type": "string",
          "enum": [
            "AUTH_TYPE_UNSPECIFIED",
            "USER_PASSWORD",
            "OAUTH2_JWT_BEARER",
            "OAUTH2_CLIENT_CREDENTIALS"
          ]
        },
        "oauth2ClientCredentials": {
          "description": "Oauth2ClientCredentials.",
          "$ref": "Oauth2ClientCredentials"
        },
        "userPassword": {
          "$ref": "UserPassword",
          "description": "UserPassword."
        },
        "oauth2JwtBearer": {
          "$ref": "Oauth2JwtBearer",
          "description": "Oauth2JwtBearer."
        }
      },
      "id": "AuthConfig"
    },
    "JwtClaims": {
      "id": "JwtClaims",
      "description": "JWT claims used for the jwt-bearer authorization grant.",
      "type": "object",
      "properties": {
        "subject": {
          "description": "Value for the \"sub\" claim.",
          "type": "string"
        },
        "audience": {
          "description": "Value for the \"aud\" claim.",
          "type": "string"
        },
        "issuer": {
          "description": "Value for the \"iss\" claim.",
          "type": "string"
        }
      }
    },
    "ConnectionStatus": {
      "type": "object",
      "description": "ConnectionStatus indicates the state of the connection.",
      "properties": {
        "state": {
          "description": "State.",
          "enumDescriptions": [
            "Connection does not have a state yet.",
            "Connection is being created.",
            "Connection is running and ready for requests.",
            "Connection is stopped.",
            "Connection is being deleted.",
            "Connection is being updated.",
            "Connection is not running due to an error."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "INACTIVE",
            "DELETING",
            "UPDATING",
            "ERROR"
          ]
        },
        "description": {
          "description": "Description.",
          "type": "string"
        },
        "status": {
          "description": "Status provides detailed information for the state.",
          "type": "string"
        }
      },
      "id": "ConnectionStatus"
    },
    "LockConfig": {
      "description": "Determines whether or no a connection is locked. If locked, a reason must be specified.",
      "properties": {
        "reason": {
          "type": "string",
          "description": "Describes why a connection is locked."
        },
        "locked": {
          "description": "Indicates whether or not the connection is locked.",
          "type": "boolean"
        }
      },
      "id": "LockConfig",
      "type": "object"
    },
    "Field": {
      "id": "Field",
      "properties": {
        "description": {
          "type": "string",
          "description": "A brief description of the Field."
        },
        "additionalDetails": {
          "description": "The following map contains fields that are not explicitly mentioned above,this give connectors the flexibility to add new metadata fields.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "field": {
          "type": "string",
          "description": "Name of the Field."
        },
        "key": {
          "description": "The following boolean field specifies if the current Field acts as a primary key or id if the parent is of type entity.",
          "type": "boolean"
        },
        "dataType": {
          "type": "string",
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "DATA_TYPE_INT",
            "DATA_TYPE_SMALLINT",
            "DATA_TYPE_DOUBLE",
            "DATA_TYPE_DATE",
            "DATA_TYPE_DATETIME",
            "DATA_TYPE_TIME",
            "DATA_TYPE_STRING",
            "DATA_TYPE_LONG",
            "DATA_TYPE_BOOLEAN",
            "DATA_TYPE_DECIMAL",
            "DATA_TYPE_UUID",
            "DATA_TYPE_BLOB",
            "DATA_TYPE_BIT",
            "DATA_TYPE_TINYINT",
            "DATA_TYPE_INTEGER",
            "DATA_TYPE_BIGINT",
            "DATA_TYPE_FLOAT",
            "DATA_TYPE_REAL",
            "DATA_TYPE_NUMERIC",
            "DATA_TYPE_CHAR",
            "DATA_TYPE_VARCHAR",
            "DATA_TYPE_LONGVARCHAR",
            "DATA_TYPE_TIMESTAMP",
            "DATA_TYPE_NCHAR",
            "DATA_TYPE_NVARCHAR",
            "DATA_TYPE_LONGNVARCHAR",
            "DATA_TYPE_NULL",
            "DATA_TYPE_OTHER",
            "DATA_TYPE_JAVA_OBJECT",
            "DATA_TYPE_DISTINCT",
            "DATA_TYPE_STRUCT",
            "DATA_TYPE_ARRAY",
            "DATA_TYPE_CLOB",
            "DATA_TYPE_REF",
            "DATA_TYPE_DATALINK",
            "DATA_TYPE_ROWID",
            "DATA_TYPE_BINARY",
            "DATA_TYPE_VARBINARY",
            "DATA_TYPE_LONGVARBINARY",
            "DATA_TYPE_NCLOB",
            "DATA_TYPE_SQLXML",
            "DATA_TYPE_REF_CURSOR",
            "DATA_TYPE_TIME_WITH_TIMEZONE",
            "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE"
          ],
          "enumDescriptions": [
            "Data type is not specified.",
            "DEPRECATED! Use DATA_TYPE_INTEGER.",
            "Short integer(int16) data type.",
            "Double data type.",
            "Date data type.",
            "DEPRECATED! Use DATA_TYPE_TIMESTAMP.",
            "Time data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "DEPRECATED! Use DATA_TYPE_BIGINT.",
            "Boolean data type.",
            "Decimal data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "UNSUPPORTED! Binary data type.",
            "Bit data type.",
            "Small integer(int8) data type.",
            "Integer(int32) data type.",
            "Long integer(int64) data type.",
            "Float data type.",
            "Real data type.",
            "Numeric data type.",
            "Char data type.",
            "Varchar data type.",
            "Longvarchar data type.",
            "Timestamp data type.",
            "Nchar data type.",
            "Nvarchar data type.",
            "Longnvarchar data type.",
            "Null data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Row id data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Variable binary data type.",
            "UNSUPPORTED! Long variable binary data type.",
            "UNSUPPORTED! NCLOB data type.",
            "UNSUPPORTED! SQL XML data type is not supported.",
            "UNSUPPORTED! Cursor reference type is not supported.",
            "UNSUPPORTED! Use TIME or TIMESTAMP instead.",
            "UNSUPPORTED! Use TIMESTAMP instead."
          ],
          "description": "The data type of the Field."
        },
        "readonly": {
          "type": "boolean",
          "description": "Specifies if the Field is readonly."
        },
        "defaultValue": {
          "description": "The following field specifies the default value of the Field provided by the external system if a value is not provided.",
          "type": "any"
        },
        "nullable": {
          "type": "boolean",
          "description": "Specifies whether a null value is allowed."
        }
      },
      "type": "object",
      "description": "Metadata of an entity field."
    },
    "InputParameter": {
      "description": "Metadata of an input parameter.",
      "id": "InputParameter",
      "type": "object",
      "properties": {
        "nullable": {
          "type": "boolean",
          "description": "Specifies whether a null value is allowed."
        },
        "defaultValue": {
          "type": "any",
          "description": "The following field specifies the default value of the Parameter provided by the external system if a value is not provided."
        },
        "parameter": {
          "type": "string",
          "description": "Name of the Parameter."
        },
        "description": {
          "description": "A brief description of the Parameter.",
          "type": "string"
        },
        "dataType": {
          "type": "string",
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "DATA_TYPE_INT",
            "DATA_TYPE_SMALLINT",
            "DATA_TYPE_DOUBLE",
            "DATA_TYPE_DATE",
            "DATA_TYPE_DATETIME",
            "DATA_TYPE_TIME",
            "DATA_TYPE_STRING",
            "DATA_TYPE_LONG",
            "DATA_TYPE_BOOLEAN",
            "DATA_TYPE_DECIMAL",
            "DATA_TYPE_UUID",
            "DATA_TYPE_BLOB",
            "DATA_TYPE_BIT",
            "DATA_TYPE_TINYINT",
            "DATA_TYPE_INTEGER",
            "DATA_TYPE_BIGINT",
            "DATA_TYPE_FLOAT",
            "DATA_TYPE_REAL",
            "DATA_TYPE_NUMERIC",
            "DATA_TYPE_CHAR",
            "DATA_TYPE_VARCHAR",
            "DATA_TYPE_LONGVARCHAR",
            "DATA_TYPE_TIMESTAMP",
            "DATA_TYPE_NCHAR",
            "DATA_TYPE_NVARCHAR",
            "DATA_TYPE_LONGNVARCHAR",
            "DATA_TYPE_NULL",
            "DATA_TYPE_OTHER",
            "DATA_TYPE_JAVA_OBJECT",
            "DATA_TYPE_DISTINCT",
            "DATA_TYPE_STRUCT",
            "DATA_TYPE_ARRAY",
            "DATA_TYPE_CLOB",
            "DATA_TYPE_REF",
            "DATA_TYPE_DATALINK",
            "DATA_TYPE_ROWID",
            "DATA_TYPE_BINARY",
            "DATA_TYPE_VARBINARY",
            "DATA_TYPE_LONGVARBINARY",
            "DATA_TYPE_NCLOB",
            "DATA_TYPE_SQLXML",
            "DATA_TYPE_REF_CURSOR",
            "DATA_TYPE_TIME_WITH_TIMEZONE",
            "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE"
          ],
          "enumDescriptions": [
            "Data type is not specified.",
            "DEPRECATED! Use DATA_TYPE_INTEGER.",
            "Short integer(int16) data type.",
            "Double data type.",
            "Date data type.",
            "DEPRECATED! Use DATA_TYPE_TIMESTAMP.",
            "Time data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "DEPRECATED! Use DATA_TYPE_BIGINT.",
            "Boolean data type.",
            "Decimal data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "UNSUPPORTED! Binary data type.",
            "Bit data type.",
            "Small integer(int8) data type.",
            "Integer(int32) data type.",
            "Long integer(int64) data type.",
            "Float data type.",
            "Real data type.",
            "Numeric data type.",
            "Char data type.",
            "Varchar data type.",
            "Longvarchar data type.",
            "Timestamp data type.",
            "Nchar data type.",
            "Nvarchar data type.",
            "Longnvarchar data type.",
            "Null data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Row id data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Variable binary data type.",
            "UNSUPPORTED! Long variable binary data type.",
            "UNSUPPORTED! NCLOB data type.",
            "UNSUPPORTED! SQL XML data type is not supported.",
            "UNSUPPORTED! Cursor reference type is not supported.",
            "UNSUPPORTED! Use TIME or TIMESTAMP instead.",
            "UNSUPPORTED! Use TIMESTAMP instead."
          ],
          "description": "The data type of the Parameter."
        }
      }
    },
    "UserPassword": {
      "properties": {
        "password": {
          "description": "Secret version reference containing the password.",
          "$ref": "Secret"
        },
        "username": {
          "type": "string",
          "description": "Username."
        }
      },
      "id": "UserPassword",
      "type": "object",
      "description": "Parameters to support Username and Password Authentication."
    },
    "ExtractionRules": {
      "description": "Extraction Rules to identity the backends from customer provided configuration in Connection resource.",
      "properties": {
        "extractionRule": {
          "description": "Collection of Extraction Rule.",
          "items": {
            "$ref": "ExtractionRule"
          },
          "type": "array"
        }
      },
      "id": "ExtractionRules",
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
        }
      },
      "id": "SetIamPolicyRequest"
    },
    "Connector": {
      "properties": {
        "updateTime": {
          "description": "Output only. Updated time.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "launchStage": {
          "type": "string",
          "description": "Output only. Flag to mark the version indicating the launch stage.",
          "enumDescriptions": [
            "LAUNCH_STAGE_UNSPECIFIED.",
            "PREVIEW.",
            "GA.",
            "DEPRECATED."
          ],
          "readOnly": true,
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "PREVIEW",
            "GA",
            "DEPRECATED"
          ]
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. Created time.",
          "format": "google-datetime",
          "type": "string"
        },
        "externalUri": {
          "type": "string",
          "description": "Output only. Link to external page.",
          "readOnly": true
        },
        "description": {
          "description": "Output only. Description of the resource.",
          "readOnly": true,
          "type": "string"
        },
        "labels": {
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          },
          "description": "Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources"
        },
        "webAssetsLocation": {
          "readOnly": true,
          "description": "Output only. Cloud storage location of icons etc consumed by UI.",
          "type": "string"
        },
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Display name."
        },
        "documentationUri": {
          "readOnly": true,
          "description": "Output only. Link to documentation page.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name of the Connector. Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector}",
          "readOnly": true
        }
      },
      "id": "Connector",
      "type": "object",
      "description": "Connectors indicates a specific connector type, e.x. Salesforce, SAP etc."
    }
  },
  "servicePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "rootUrl": "https://connectors.googleapis.com/",
  "baseUrl": "https://connectors.googleapis.com/",
  "ownerDomain": "google.com",
  "revision": "20220120",
  "fullyEncodeReservedExpansion": true,
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "id": "connectors.projects.locations.get",
              "path": "v1/{+name}",
              "description": "Gets information about a location.",
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location.",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}"
            },
            "getRuntimeConfig": {
              "id": "connectors.projects.locations.getRuntimeConfig",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. Resource name of the form: `projects/*/locations/*/runtimeConfig`",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+/runtimeConfig$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "RuntimeConfig"
              },
              "description": "Gets the runtimeConfig of a location. RuntimeConfig is a singleton resource for each location.",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimeConfig"
            },
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32"
                }
              },
              "description": "Lists information about the supported locations for this service.",
              "flatPath": "v1/projects/{projectsId}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "connectors.projects.locations.list",
              "path": "v1/{+name}/locations",
              "httpMethod": "GET"
            }
          },
          "resources": {
            "providers": {
              "methods": {
                "testIamPermissions": {
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "id": "connectors.projects.locations.providers.testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}:testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "httpMethod": "POST"
                },
                "setIamPolicy": {
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$"
                    }
                  },
                  "id": "connectors.projects.locations.providers.setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:setIamPolicy"
                },
                "getIamPolicy": {
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$",
                      "location": "path"
                    },
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    }
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}:getIamPolicy",
                  "id": "connectors.projects.locations.providers.getIamPolicy",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:getIamPolicy"
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "httpMethod": "DELETE",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "connectors.projects.locations.operations.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "get": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "connectors.projects.locations.operations.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "cancel": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled.",
                      "type": "string"
                    }
                  },
                  "id": "connectors.projects.locations.operations.cancel",
                  "path": "v1/{+name}:cancel"
                },
                "list": {
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "connectors.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "The standard list page size."
                    },
                    "name": {
                      "location": "path",
                      "description": "The name of the operation's parent resource.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "httpMethod": "GET"
                }
              }
            },
            "connections": {
              "methods": {
                "list": {
                  "description": "Lists Connections in a given project and location.",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "Page size.",
                      "type": "integer"
                    },
                    "view": {
                      "location": "query",
                      "description": "Specifies which fields of the Connection are returned in the response. Defaults to `BASIC` view.",
                      "enum": [
                        "CONNECTION_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "enumDescriptions": [
                        "CONNECTION_UNSPECIFIED.",
                        "Do not include runtime required configs.",
                        "Include runtime required configs."
                      ],
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Order by parameters.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent resource of the Connection, of the form: `projects/*/locations/*`",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Page token.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "connectors.projects.locations.connections.list",
                  "response": {
                    "$ref": "ListConnectionsResponse"
                  },
                  "path": "v1/{+parent}/connections",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getConnectionSchemaMetadata": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ConnectionSchemaMetadata"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "connectors.projects.locations.connections.getConnectionSchemaMetadata",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/connectionSchemaMetadata",
                  "description": "Gets schema metadata of a connection. SchemaMetadata is a singleton resource for each connection.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Connection name Format: projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$"
                    }
                  },
                  "path": "v1/{+name}"
                },
                "testIamPermissions": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "path": "v1/{+resource}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "connectors.projects.locations.connections.testIamPermissions"
                },
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Field mask is used to specify the fields to be overwritten in the Connection resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Output only. Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "description": "Updates the parameters of a single Connection.",
                  "httpMethod": "PATCH",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}",
                  "id": "connectors.projects.locations.connections.patch",
                  "request": {
                    "$ref": "Connection"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/connections",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections",
                  "id": "connectors.projects.locations.connections.create",
                  "httpMethod": "POST",
                  "description": "Creates a new Connection in a given project and location.",
                  "request": {
                    "$ref": "Connection"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent resource of the Connection, of the form: `projects/*/locations/*`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "connectionId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Identifier to assign to the Connection. Must be unique within scope of the parent resource."
                    }
                  }
                },
                "getIamPolicy": {
                  "path": "v1/{+resource}:getIamPolicy",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "type": "string",
                      "location": "path"
                    },
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "connectors.projects.locations.connections.getIamPolicy",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "description": "Deletes a single Connection.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Resource name of the form: `projects/*/locations/*/connections/*`"
                    }
                  },
                  "id": "connectors.projects.locations.connections.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}"
                },
                "get": {
                  "description": "Gets details of a single Connection.",
                  "parameters": {
                    "view": {
                      "type": "string",
                      "description": "Specifies which fields of the Connection are returned in the response. Defaults to `BASIC` view.",
                      "enumDescriptions": [
                        "CONNECTION_UNSPECIFIED.",
                        "Do not include runtime required configs.",
                        "Include runtime required configs."
                      ],
                      "enum": [
                        "CONNECTION_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "description": "Required. Resource name of the form: `projects/*/locations/*/connections/*`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "required": true
                    }
                  },
                  "id": "connectors.projects.locations.connections.get",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Connection"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}"
                },
                "setIamPolicy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "id": "connectors.projects.locations.connections.setIamPolicy"
                }
              },
              "resources": {
                "runtimeActionSchemas": {
                  "methods": {
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "description": "Page size.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "filter": {
                          "type": "string",
                          "description": "Required. Filter Format: action=\"{actionId}\" Only action field is supported with literal equality operator. Accepted filter example: action=\"CancelOrder\" Wildcards are not supported in the filter currently.",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Page token."
                        },
                        "parent": {
                          "description": "Required. Parent resource of RuntimeActionSchema Format: projects/{project}/locations/{location}/connections/{connection}",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/runtimeActionSchemas",
                      "httpMethod": "GET",
                      "path": "v1/{+parent}/runtimeActionSchemas",
                      "response": {
                        "$ref": "ListRuntimeActionSchemasResponse"
                      },
                      "description": "List schema of a runtime actions filtered by action name.",
                      "id": "connectors.projects.locations.connections.runtimeActionSchemas.list",
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                },
                "runtimeEntitySchemas": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListRuntimeEntitySchemasResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/runtimeEntitySchemas",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/runtimeEntitySchemas",
                      "parameters": {
                        "pageToken": {
                          "description": "Page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Required. Filter Format: entity=\"{entityId}\" Only entity field is supported with literal equality operator. Accepted filter example: entity=\"Order\" Wildcards are not supported in the filter currently.",
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "Page size.",
                          "format": "int32",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                          "description": "Required. Parent resource of RuntimeEntitySchema Format: projects/{project}/locations/{location}/connections/{connection}",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "id": "connectors.projects.locations.connections.runtimeEntitySchemas.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "List schema of a runtime entities filtered by entity name."
                    }
                  }
                }
              }
            },
            "global": {
              "resources": {
                "providers": {
                  "resources": {
                    "connectors": {
                      "resources": {
                        "versions": {
                          "methods": {
                            "get": {
                              "httpMethod": "GET",
                              "parameterOrder": [
                                "name"
                              ],
                              "id": "connectors.projects.locations.global.providers.connectors.versions.get",
                              "parameters": {
                                "view": {
                                  "type": "string",
                                  "enum": [
                                    "CONNECTOR_VERSION_VIEW_UNSPECIFIED",
                                    "CONNECTOR_VERSION_VIEW_BASIC",
                                    "CONNECTOR_VERSION_VIEW_FULL"
                                  ],
                                  "description": "Specifies which fields of the ConnectorVersion are returned in the response. Defaults to `CUSTOMER` view.",
                                  "enumDescriptions": [
                                    "CONNECTOR_VERSION_VIEW_UNSPECIFIED.",
                                    "Do not include role grant configs.",
                                    "Include role grant configs."
                                  ],
                                  "location": "query"
                                },
                                "name": {
                                  "pattern": "^projects/[^/]+/locations/global/providers/[^/]+/connectors/[^/]+/versions/[^/]+$",
                                  "required": true,
                                  "type": "string",
                                  "description": "Required. Resource name of the form: `projects/*/locations/*/providers/*/connectors/*/versions/*`",
                                  "location": "path"
                                }
                              },
                              "response": {
                                "$ref": "ConnectorVersion"
                              },
                              "flatPath": "v1/projects/{projectsId}/locations/global/providers/{providersId}/connectors/{connectorsId}/versions/{versionsId}",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "description": "Gets details of a single connector version.",
                              "path": "v1/{+name}"
                            },
                            "list": {
                              "httpMethod": "GET",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "id": "connectors.projects.locations.global.providers.connectors.versions.list",
                              "parameterOrder": [
                                "parent"
                              ],
                              "flatPath": "v1/projects/{projectsId}/locations/global/providers/{providersId}/connectors/{connectorsId}/versions",
                              "response": {
                                "$ref": "ListConnectorVersionsResponse"
                              },
                              "description": "Lists Connector Versions in a given project and location.",
                              "path": "v1/{+parent}/versions",
                              "parameters": {
                                "pageToken": {
                                  "type": "string",
                                  "description": "Page token.",
                                  "location": "query"
                                },
                                "parent": {
                                  "description": "Required. Parent resource of the connectors, of the form: `projects/*/locations/*/providers/*/connectors/*`",
                                  "pattern": "^projects/[^/]+/locations/global/providers/[^/]+/connectors/[^/]+$",
                                  "required": true,
                                  "type": "string",
                                  "location": "path"
                                },
                                "view": {
                                  "type": "string",
                                  "enum": [
                                    "CONNECTOR_VERSION_VIEW_UNSPECIFIED",
                                    "CONNECTOR_VERSION_VIEW_BASIC",
                                    "CONNECTOR_VERSION_VIEW_FULL"
                                  ],
                                  "enumDescriptions": [
                                    "CONNECTOR_VERSION_VIEW_UNSPECIFIED.",
                                    "Do not include role grant configs.",
                                    "Include role grant configs."
                                  ],
                                  "description": "Specifies which fields of the ConnectorVersion are returned in the response. Defaults to `CUSTOMER` view.",
                                  "location": "query"
                                },
                                "pageSize": {
                                  "location": "query",
                                  "description": "Page size.",
                                  "format": "int32",
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      },
                      "methods": {
                        "get": {
                          "flatPath": "v1/projects/{projectsId}/locations/global/providers/{providersId}/connectors/{connectorsId}",
                          "path": "v1/{+name}",
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "connectors.projects.locations.global.providers.connectors.get",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "description": "Required. Resource name of the form: `projects/*/locations/*/providers/*/connectors/*`",
                              "pattern": "^projects/[^/]+/locations/global/providers/[^/]+/connectors/[^/]+$"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "Connector"
                          },
                          "description": "Gets details of a single Connector.",
                          "httpMethod": "GET"
                        },
                        "list": {
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "connectors.projects.locations.global.providers.connectors.list",
                          "parameters": {
                            "parent": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/global/providers/[^/]+$",
                              "type": "string",
                              "description": "Required. Parent resource of the connectors, of the form: `projects/*/locations/*/providers/*`",
                              "location": "path"
                            },
                            "pageSize": {
                              "location": "query",
                              "type": "integer",
                              "description": "Page size.",
                              "format": "int32"
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "Page token."
                            }
                          },
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "ListConnectorsResponse"
                          },
                          "path": "v1/{+parent}/connectors",
                          "description": "Lists Connectors in a given project and location.",
                          "flatPath": "v1/projects/{projectsId}/locations/global/providers/{providersId}/connectors"
                        }
                      }
                    }
                  },
                  "methods": {
                    "get": {
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/global/providers/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. Resource name of the form: `projects/*/locations/*/providers/*`"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/global/providers/{providersId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "id": "connectors.projects.locations.global.providers.get",
                      "description": "Gets details of a single Provider.",
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "Provider"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "path": "v1/{+parent}/providers",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. Parent resource of the API, of the form: `projects/*/locations/*`",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/global$",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Page size.",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Page token."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/global/providers",
                      "response": {
                        "$ref": "ListProvidersResponse"
                      },
                      "id": "connectors.projects.locations.global.providers.list",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists Providers in a given project and location."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "batchPath": "batch",
  "description": "Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.",
  "kind": "discovery#restDescription",
  "mtlsRootUrl": "https://connectors.mtls.googleapis.com/",
  "protocol": "rest",
  "ownerName": "Google",
  "parameters": {
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "description": "V1 error format."
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    }
  },
  "title": "Connectors API"
}
